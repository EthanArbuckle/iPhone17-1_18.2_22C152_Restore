uint64_t sub_1001D0614()
{
  return sub_1001D0EE4(&OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10525ConsistencyCheckOnCMQueue__lastPingAt);
}

uint64_t sub_1001D0620()
{
  return type metadata accessor for ConsistencyCheckOnCMQueue(0);
}

uint64_t type metadata accessor for ConsistencyCheckOnCMQueue(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038C8D0);
}

void sub_1001D0648()
{
  sub_1001D4E2C(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001D06F4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (void *)((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v12 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v12) {
    goto LABEL_10;
  }
  unint64_t v13 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v14 = DispatchTime.uptimeNanoseconds.getter();
  BOOL v15 = v13 >= v14;
  a2 = v13 - v14;
  if (v15)
  {
    if (a2 >= 0x6052340)
    {
      if (qword_10037DDF8 == -1) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  while (1)
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_7:
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000FD84(v16, (uint64_t)qword_1003A9AC0);
    v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = a2 / 0xF4240;
      a2 = swift_slowAlloc();
      *(_DWORD *)a2 = 134349056;
      v24[1] = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "DeviceOrientationSource: updates on main thread are lagging, delay is %{public}llu ms", (uint8_t *)a2, 0xCu);
      swift_slowDealloc();
    }

LABEL_10:
    uint64_t v20 = *(void *)(v4
                    + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__updatesSinceLastConsistencyCheck);
    BOOL v15 = __CFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (!v15) {
      break;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  *(void *)(v4
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__updatesSinceLastConsistencyCheck) = v21;
  uint64_t v22 = *(void *)(v4
                  + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__skippedUpdatesSinceLastConsistencyCheck);
  BOOL v15 = __CFADD__(v22, a3);
  uint64_t v23 = v22 + a3;
  if (v15) {
    goto LABEL_15;
  }
  *(void *)(v4
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__skippedUpdatesSinceLastConsistencyCheck) = v23;
}

uint64_t sub_1001D09A8(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004010(&qword_100380788);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v33 - v11;
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = type metadata accessor for DispatchTime();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  os_log_type_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v3
      + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__lastConsistencyCheckAt;
  swift_beginAccess();
  sub_100173EF0(v19, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10000950C((uint64_t)v14, &qword_100380788);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v12, a1, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    sub_100174024((uint64_t)v12, (uint64_t)v9);
    swift_beginAccess();
    sub_100156648((uint64_t)v9, v19, &qword_100380788);
    swift_endAccess();
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  unint64_t v20 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v20) {
    goto LABEL_10;
  }
  unint64_t v21 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v22 = DispatchTime.uptimeNanoseconds.getter();
  BOOL v23 = v21 >= v22;
  unint64_t v24 = v21 - v22;
  if (!v23)
  {
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_8;
  }
  if (v24 < 0x12A153440)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return 0;
  }
  if (qword_10037DDF8 != -1) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000FD84(v25, (uint64_t)qword_1003A9AC0);
  swift_retain_n();
  v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  int v36 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v34 = v26;
    v28 = (_DWORD *)swift_slowAlloc();
    uint64_t v35 = a1;
    v29 = v28;
    _DWORD *v28 = 134349824;
    unint64_t v37 = v24 / 0xF4240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v29 + 6) = 2050;
    unint64_t v37 = *(void *)(v3
                    + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__updatesSinceLastConsistencyCheck);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v29 + 11) = 2050;
    v33 = v29 + 6;
    unint64_t v30 = *(void *)(v3
                    + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__skippedUpdatesSinceLastConsistencyCheck);
    swift_release();
    unint64_t v37 = v30;
    v26 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *((_WORD *)v29 + 16) = 2050;
    unint64_t v37 = *(void *)&a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v36, "DeviceOrientationSource: checkConsistency: in last %{public}llu ms received %{public}llu (+ %{public}llu skipped) CoreMotion updates on main queue, last one recorded at %{public}f", (uint8_t *)v29, 0x2Au);
    a1 = v35;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *(void *)(v3
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__updatesSinceLastConsistencyCheck) = 0;
  *(void *)(v3
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__skippedUpdatesSinceLastConsistencyCheck) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v12, a1, v15);
  uint64_t v31 = 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  sub_100174024((uint64_t)v12, (uint64_t)v9);
  swift_beginAccess();
  sub_100156648((uint64_t)v9, v19, &qword_100380788);
  swift_endAccess();
  return v31;
}

uint64_t sub_1001D0ED8()
{
  return sub_1001D0EE4(&OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__lastConsistencyCheckAt);
}

uint64_t sub_1001D0EE4(void *a1)
{
  sub_10000950C(v1 + *a1, &qword_100380788);

  return swift_deallocClassInstance();
}

uint64_t sub_1001D0F4C()
{
  return type metadata accessor for ConsistencyCheckOnMainQueue(0);
}

uint64_t type metadata accessor for ConsistencyCheckOnMainQueue(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038C9B8);
}

void sub_1001D0F74()
{
  sub_1001D4E2C(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001D1030()
{
  return 255;
}

uint64_t sub_1001D1038()
{
  sub_1001D7E10(v0 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error, type metadata accessor for DeviceOrientationError);

  return swift_deallocClassInstance();
}

uint64_t sub_1001D10B0()
{
  return type metadata accessor for CoreMotionErrorBase(0);
}

uint64_t type metadata accessor for CoreMotionErrorBase(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038CAE0);
}

uint64_t sub_1001D10D8()
{
  uint64_t result = type metadata accessor for DeviceOrientationError(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DeviceOrientationError(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D168);
}

uint64_t sub_1001D1190()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t sub_1001D11D4(char a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 136))(a1 & 1);
}

uint64_t sub_1001D121C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t sub_1001D1260@<X0>(uint64_t a1@<X8>)
{
  return sub_1001D7D3C(*v1 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error, a1, type metadata accessor for DeviceOrientationError);
}

uint64_t sub_1001D12A0()
{
  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired);
}

uint64_t sub_1001D12B4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

void sub_1001D12F8(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 & 1) != 0 && (a2)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired) = 1;
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9AC0);
    swift_retain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v20 = v14;
      v19[1] = v13 + 4;
      uint64_t v15 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error;
      uint64_t v16 = type metadata accessor for DeviceOrientationError(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15 + *(int *)(v16 + 24), v6);
      uint64_t v17 = String.init<A>(describing:)();
      v19[2] = sub_1001B3178(v17, v18, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "SatelliteErrorLocationAccessNotAuthorized reported at %{public}s has expired", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1001D1580()
{
  return type metadata accessor for SatelliteErrorLocationAccessNotAuthorized(0);
}

uint64_t type metadata accessor for SatelliteErrorLocationAccessNotAuthorized(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038CBE0);
}

uint64_t sub_1001D15AC(void *a1, uint64_t a2, uint64_t a3, void *a4, const char *a5)
{
  v38 = a5;
  id v39 = a1;
  uint64_t v41 = a2;
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = self;
  id v12 = [v11 mainBundle];
  v44._countAndFlagsBits = 0xD000000000000068;
  v44._object = (void *)0x80000001002D3330;
  v13._countAndFlagsBits = a3;
  v13._object = a4;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v44);

  id v16 = [v11 mainBundle];
  v45._countAndFlagsBits = 0xD000000000000066;
  v45._object = (void *)0x80000001002D33C0;
  v17._object = (void *)0x80000001002D33A0;
  v17._countAndFlagsBits = 0xD000000000000015;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v45);

  uint64_t v20 = v5 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error;
  uint64_t v21 = type metadata accessor for DeviceOrientationError(0);
  unint64_t v22 = (char *)(v20 + *(int *)(v21 + 24));
  uint64_t v40 = v9;
  uint64_t v23 = v9;
  uint64_t v24 = v5;
  int v36 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v36(v22, v41, v8);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired) = 0;
  id v25 = v39;
  *(void *)uint64_t v20 = v39;
  *(Swift::String *)(v20 + 8) = v15;
  *(Swift::String *)(v20 + 24) = v19;
  uint64_t v26 = qword_10037DDF8;
  id v27 = v25;
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9AC0);
  swift_retain();
  v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    id v39 = v27;
    *(_DWORD *)uint64_t v31 = 136446210;
    uint64_t v43 = v32;
    v36(v37, v24+ OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error+ *(int *)(v21 + 24), v8);
    uint64_t v33 = String.init<A>(describing:)();
    uint64_t v42 = sub_1001B3178(v33, v34, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, v38, v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v8);
  return v24;
}

void sub_1001D19A4(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 & 1) == 0 && (a2)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired) = 1;
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9AC0);
    swift_retain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      Swift::String v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)Swift::String v13 = 136446210;
      uint64_t v20 = v14;
      v19[1] = v13 + 4;
      uint64_t v15 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error;
      uint64_t v16 = type metadata accessor for DeviceOrientationError(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15 + *(int *)(v16 + 24), v6);
      uint64_t v17 = String.init<A>(describing:)();
      v19[2] = sub_1001B3178(v17, v18, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "CompassErrorLocationAccessNotAuthorized reported at %{public}s has expired", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1001D1C28()
{
  return 2;
}

uint64_t sub_1001D1C30()
{
  return type metadata accessor for CompassErrorLocationAccessNotAuthorized(0);
}

uint64_t type metadata accessor for CompassErrorLocationAccessNotAuthorized(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038CCE8);
}

uint64_t sub_1001D1C58(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self mainBundle];
  v37._countAndFlagsBits = 0xD00000000000006FLL;
  v37._object = (void *)0x80000001002D34A0;
  v10._object = (void *)0x80000001002D3480;
  v10._countAndFlagsBits = 0xD00000000000001ALL;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v37);

  uint64_t v13 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error;
  uint64_t v14 = type metadata accessor for DeviceOrientationError(0);
  uint64_t v15 = v13 + *(int *)(v14 + 24);
  uint64_t v33 = v7;
  uint64_t v34 = v6;
  uint64_t v16 = a2;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v31(v15, a2, v6);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired) = 0;
  *(void *)uint64_t v13 = a1;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0;
  *(Swift::String *)(v13 + 24) = v12;
  uint64_t v17 = qword_10037DDF8;
  id v18 = a1;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000FD84(v19, (uint64_t)qword_1003A9AC0);
  swift_retain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v30 = v18;
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v16;
    *(_DWORD *)unint64_t v22 = 136446210;
    uint64_t v36 = v23;
    uint64_t v24 = v3
        + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error
        + *(int *)(v14 + 24);
    uint64_t v25 = v34;
    v31((uint64_t)v32, v24, v34);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v35 = sub_1001B3178(v26, v27, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "CoreMotionErrorDeviceNeedsToBeMoved reported at %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v29, v25);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v16, v34);
  }
  return v3;
}

void sub_1001D1FEC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired) & 1) == 0)
  {
    [a1 magneticField];
    BOOL v9 = v21 == -1;
    *(unsigned char *)(v2 + v8) = v21 != -1;
    if (!v9)
    {
      if (qword_10037DDF8 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10000FD84(v10, (uint64_t)qword_1003A9AC0);
      swift_retain_n();
      Swift::String v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136446210;
        v20[0] = v14;
        v19[0] = v13 + 4;
        uint64_t v15 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error;
        uint64_t v16 = type metadata accessor for DeviceOrientationError(0);
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15 + *(int *)(v16 + 24), v4);
        uint64_t v17 = String.init<A>(describing:)();
        v19[1] = sub_1001B3178(v17, v18, v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "CoreMotionErrorDeviceNeedsToBeMoved reported at %{public}s has expired", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
  }
}

uint64_t sub_1001D228C()
{
  return 3;
}

uint64_t sub_1001D2294()
{
  return type metadata accessor for CoreMotionErrorDeviceNeedsToBeMoved(0);
}

uint64_t type metadata accessor for CoreMotionErrorDeviceNeedsToBeMoved(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038CDF0);
}

void sub_1001D22BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v28 - v9;
  uint64_t v11 = OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired;
  char v12 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__isExpired);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)v28 - v9, a1, v4);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return;
  }
  uint64_t v29 = v8;
  uint64_t v14 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10519CoreMotionErrorBase__error;
  uint64_t v15 = v14 + *(int *)(type metadata accessor for DeviceOrientationError(0) + 24);
  unint64_t v16 = DispatchTime.uptimeNanoseconds.getter();
  uint64_t v30 = v15;
  unint64_t v17 = 0;
  if (DispatchTime.uptimeNanoseconds.getter() < v16)
  {
    unint64_t v18 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t v19 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t v17 = v18 - v19;
    if (v18 < v19)
    {
      __break(1u);
LABEL_12:
      swift_once();
      goto LABEL_7;
    }
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (v17 < 0x37E11D600) {
    return;
  }
  *(unsigned char *)(v2 + v11) = 1;
  if (qword_10037DDF8 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000FD84(v20, (uint64_t)qword_1003A9AC0);
  swift_retain_n();
  int v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = v29;
  if (v23)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446210;
    v28[1] = v25 + 4;
    v13(v24, v30, v4);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v31 = sub_1001B3178(v26, v27, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "CoreMotionErrorGeneric reported at %{public}s has expired", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1001D2610()
{
  return type metadata accessor for CoreMotionErrorGeneric(0);
}

uint64_t type metadata accessor for CoreMotionErrorGeneric(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038CEF8);
}

uint64_t sub_1001D2638()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1001D2670@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    swift_bridgeObjectRetain();
    char v7 = 1;
    char v8 = 1;
    do
    {
      sub_1000090FC(v6, (uint64_t)&v18);
      sub_1000090FC((uint64_t)&v18, (uint64_t)v17);
      sub_100004010((uint64_t *)&unk_10038D250);
      type metadata accessor for SatelliteErrorLocationAccessNotAuthorized(0);
      if (swift_dynamicCast())
      {
        swift_release();
        char v8 = 0;
      }
      sub_100009164(&v18, (uint64_t)v17);
      type metadata accessor for CompassErrorLocationAccessNotAuthorized(0);
      if (swift_dynamicCast())
      {
        swift_release();
        char v7 = 0;
      }
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0);
    uint64_t v10 = &a1[*(int *)(v9 + 24)];
    if (*(void *)(*(void *)v3 + 16))
    {
      sub_1000090FC(*(void *)v3 + 32, (uint64_t)&v18);
      uint64_t v11 = v19;
      uint64_t v12 = v20;
      sub_100008F88(&v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
      uint64_t v13 = type metadata accessor for DeviceOrientationError(0);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v18);
    }
    else
    {
      uint64_t v16 = type metadata accessor for DeviceOrientationError(0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
    }
    *a1 = v8 & 1;
    a1[1] = v7 & 1;
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  else
  {
    uint64_t v14 = type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

void sub_1001D2910(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 domain];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      if (qword_10037DDF8 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000FD84(v17, (uint64_t)qword_1003A9AC0);
      id v36 = a1;
      long long v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 136446210;
        id v21 = [v36 domain];
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;

        uint64_t v37 = sub_1001B3178(v22, v24, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        uint64_t v25 = "Error domain %{public}s != CMErrorDomain";
LABEL_19:
        _os_log_impl((void *)&_mh_execute_header, v18, v19, v25, v20, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
      goto LABEL_20;
    }
  }
  unint64_t v26 = (unint64_t)[a1 code];
  if ((v26 & 0x8000000000000000) != 0 || HIDWORD(v26))
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  if (v26 == 101)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    type metadata accessor for CoreMotionErrorDeviceNeedsToBeMoved(0);
    swift_allocObject();
    uint64_t v27 = sub_1001D1C58(a1, (uint64_t)v9);
    sub_1001D6E48(v27, v3, type metadata accessor for CoreMotionErrorDeviceNeedsToBeMoved, (uint64_t (*)(uint64_t))sub_1001D842C);
    swift_release();
    return;
  }
  if (qword_10037DDF8 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9AC0);
  id v36 = a1;
  long long v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446210;
    id v29 = v36;
    id v30 = [v29 description];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    uint64_t v37 = sub_1001B3178(v31, v33, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    uint64_t v25 = "Ignoring error: %{public}s";
    goto LABEL_19;
  }
LABEL_20:

  id v34 = v36;
}

uint64_t sub_1001D2E8C(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1 & 1;
  uint64_t v6 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    static POSIXError.errorDomain.getter();
    uint64_t v9 = (int)POSIXErrorCode.rawValue.getter();
    id v10 = objc_allocWithZone((Class)NSError);
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v10 initWithDomain:v11 code:v9 userInfo:0];

    static DispatchTime.now()();
    if (v5)
    {
      type metadata accessor for SatelliteErrorLocationAccessNotAuthorized(0);
      swift_allocObject();
      uint64_t v13 = sub_1001D15AC(v12, (uint64_t)v8, 0xD000000000000041, (void *)0x80000001002D3430, "SatelliteErrorLocationAccessNotAuthorized reported at %{public}s");
      uint64_t v14 = type metadata accessor for SatelliteErrorLocationAccessNotAuthorized;
      uint64_t v15 = (uint64_t (*)(uint64_t))sub_1001D842C;
    }
    else
    {
      type metadata accessor for CompassErrorLocationAccessNotAuthorized(0);
      swift_allocObject();
      uint64_t v13 = sub_1001D15AC(v12, (uint64_t)v8, 0xD000000000000040, (void *)0x80000001002D32E0, "CompassErrorLocationAccessNotAuthorized reported at %{public}s");
      uint64_t v14 = type metadata accessor for CompassErrorLocationAccessNotAuthorized;
      uint64_t v15 = (uint64_t (*)(uint64_t))sub_1001D7AFC;
    }
    sub_1001D6E48(v13, v3, v14, v15);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v16 = *(void *)(v3 + 16);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = v16 + 32;
    swift_bridgeObjectRetain();
    uint64_t v19 = a2 & 1;
    do
    {
      sub_1000090FC(v18, (uint64_t)v23);
      uint64_t v20 = v24;
      uint64_t v21 = v25;
      sub_100008F88(v23, v24);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(v5, v19, v20, v21);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v23);
      v18 += 40;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  return sub_1001D3564();
}

unint64_t sub_1001D3124(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_100380788);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = (char *)&v27 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10516CoreMotionErrors__lastPeriodicCheckAt;
  swift_beginAccess();
  sub_100173EF0(v17, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10000950C((uint64_t)v12, &qword_100380788);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a1, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    sub_100174024((uint64_t)v10, (uint64_t)v7);
    swift_beginAccess();
    sub_100156648((uint64_t)v7, v17, &qword_100380788);
    return swift_endAccess();
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  unint64_t v19 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() < v19)
  {
    unint64_t v20 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t result = DispatchTime.uptimeNanoseconds.getter();
    if (v20 < result)
    {
      __break(1u);
      return result;
    }
    if (v20 - result >= 0x12A153440)
    {
      id v29 = v10;
      swift_beginAccess();
      uint64_t v21 = *(void *)(v2 + 16);
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        uint64_t v27 = *(void *)(v2 + 16);
        uint64_t v28 = v7;
        unint64_t v23 = (void *)(v21 + 32);
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v25 = v23[3];
          uint64_t v24 = v23[4];
          sub_100008F88(v23, v25);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24))(a1, v25, v24);
          v23 += 5;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        uint64_t v7 = v28;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v26 = (uint64_t)v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v29, a1, v13);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
      sub_100174024(v26, (uint64_t)v7);
      swift_beginAccess();
      sub_100156648((uint64_t)v7, v17, &qword_100380788);
      return swift_endAccess();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

BOOL sub_1001D34F4(void *a1, void *a2)
{
  sub_100008F88(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  sub_100008F88(a2, a2[3]);
  return DynamicType == swift_getDynamicType();
}

uint64_t sub_1001D3564()
{
  uint64_t v1 = (uint64_t *)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    uint64_t v6 = 72;
    while (1)
    {
      sub_1000090FC(v3 + v6 - 40, (uint64_t)&v25);
      uint64_t v7 = v26;
      uint64_t v8 = v27;
      sub_100008F88(&v25, v26);
      char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v25);
      if (v9) {
        break;
      }
      ++v5;
      v6 += 40;
      if (v4 == v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v11 = *(void *)(*v1 + 16);
        goto LABEL_10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_37;
    }
    uint64_t v12 = *v1;
    unint64_t v13 = *(void *)(*v1 + 16);
    if (v11 != v13)
    {
      unint64_t v14 = v5 + 1;
      while (v14 < v13)
      {
        sub_1000090FC(v12 + v6, (uint64_t)&v25);
        uint64_t v15 = v26;
        uint64_t v16 = v27;
        sub_100008F88(&v25, v26);
        char v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
        uint64_t result = _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v25);
        if ((v17 & 1) == 0)
        {
          if (v14 != v5)
          {
            if ((v5 & 0x8000000000000000) != 0) {
              goto LABEL_31;
            }
            uint64_t v18 = (void *)*v1;
            unint64_t v19 = *(void *)(*v1 + 16);
            if (v5 >= v19) {
              goto LABEL_32;
            }
            uint64_t result = sub_1000090FC((uint64_t)&v18[5 * v5 + 4], (uint64_t)&v25);
            if (v14 >= v19) {
              goto LABEL_33;
            }
            sub_1000090FC((uint64_t)&v18[(unint64_t)v6 / 8], (uint64_t)v24);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v1 = (uint64_t)v18;
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1001D5908(v18);
              uint64_t v18 = (void *)result;
              *uint64_t v1 = result;
            }
            if (v5 >= v18[2]) {
              goto LABEL_34;
            }
            uint64_t v20 = (uint64_t)&v18[5 * v5 + 4];
            _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v20);
            uint64_t result = sub_100009164(v24, v20);
            uint64_t v21 = *v1;
            if (v14 >= *(void *)(*v1 + 16)) {
              goto LABEL_35;
            }
            uint64_t v22 = v21 + v6;
            _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v21 + v6);
            uint64_t result = sub_100009164(&v25, v22);
          }
          if (__OFADD__(v5++, 1)) {
            goto LABEL_30;
          }
        }
        int64_t v11 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_29;
        }
        uint64_t v12 = *v1;
        unint64_t v13 = *(void *)(*v1 + 16);
        ++v14;
        v6 += 40;
        if (v11 == v13) {
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_9:
    uint64_t v4 = v5;
LABEL_10:
    if (v11 >= v4) {
      goto LABEL_11;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
    int64_t v11 = 0;
LABEL_11:
    sub_1001D797C(v4, v11);
    swift_endAccess();
    return v2 != *(void *)(*v1 + 16);
  }
  return result;
}

uint64_t sub_1001D3828()
{
  swift_bridgeObjectRelease();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10516CoreMotionErrors__lastPeriodicCheckAt, &qword_100380788);

  return swift_deallocClassInstance();
}

uint64_t sub_1001D389C()
{
  return type metadata accessor for CoreMotionErrors(0);
}

uint64_t type metadata accessor for CoreMotionErrors(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D008);
}

void sub_1001D38C4()
{
  sub_1001D4E2C(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

char *sub_1001D3980(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    char v9 = v5;
    if (v8 == (char *)1)
    {
      long long v10 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 24) = v10;
    }
    else
    {
      *((void *)a1 + 1) = a2[1];
      *((void *)a1 + 2) = v8;
      int64_t v11 = a2[4];
      *((void *)a1 + 3) = a2[3];
      *((void *)a1 + 4) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v12 = *(int *)(a3 + 24);
    unint64_t v13 = &a1[v12];
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1001D3A98(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1001D3B28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v7 = a1 + 1;
  uint64_t v8 = *(void *)(a2 + 16);
  id v9 = v6;
  if (v8 == 1)
  {
    long long v10 = *(_OWORD *)(a2 + 24);
    *uint64_t v7 = *(_OWORD *)(a2 + 8);
    v7[1] = v10;
  }
  else
  {
    a1[1] = *(void *)(a2 + 8);
    a1[2] = v8;
    uint64_t v11 = *(void *)(a2 + 32);
    a1[3] = *(void *)(a2 + 24);
    a1[4] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_1001D3BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  id v9 = (_OWORD *)(a1 + 8);
  long long v10 = (_OWORD *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *(_OWORD *)(a2 + 24);
      *id v9 = *v10;
      *(_OWORD *)(a1 + 24) = v12;
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_10006ADB4(a1 + 8);
    long long v13 = *(_OWORD *)(a2 + 24);
    *id v9 = *v10;
    *(_OWORD *)(a1 + 24) = v13;
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_1001D3D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1001D3DD0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  if (*(void *)(a1 + 16) != 1)
  {
    uint64_t v7 = a2[2];
    if (v7 != 1)
    {
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v7;
      swift_bridgeObjectRelease();
      uint64_t v9 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10006ADB4(a1 + 8);
  }
  long long v8 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = v8;
LABEL_6:
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  long long v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1001D3EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D3EC8);
}

uint64_t sub_1001D3EC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DispatchTime();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001D3F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D3F8C);
}

void *sub_1001D3F8C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DispatchTime();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001D4034()
{
  uint64_t result = type metadata accessor for DispatchTime();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceOrientationErrorOverrideMessage()
{
  return &type metadata for DeviceOrientationErrorOverrideMessage;
}

uint64_t *sub_1001D40E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (void **)((char *)a1 + v5);
    uint64_t v7 = (void **)((char *)a2 + v5);
    uint64_t v8 = type metadata accessor for DeviceOrientationError(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_100004010(&qword_10038D1A8);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      long long v12 = *v7;
      *uint64_t v6 = *v7;
      uint64_t v13 = v7[2];
      id v14 = v12;
      if (v13 == (void *)1)
      {
        long long v15 = *(_OWORD *)(v7 + 3);
        *(_OWORD *)(v6 + 1) = *(_OWORD *)(v7 + 1);
        *(_OWORD *)(v6 + 3) = v15;
      }
      else
      {
        v6[1] = v7[1];
        v6[2] = v13;
        uint64_t v16 = v7[4];
        v6[3] = v7[3];
        v6[4] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v17 = *(int *)(v8 + 24);
      uint64_t v18 = (char *)v6 + v17;
      unint64_t v19 = (char *)v7 + v17;
      uint64_t v20 = type metadata accessor for DispatchTime();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      (*(void (**)(void **, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_1001D42C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for DeviceOrientationError(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  if (!result)
  {

    if (*(void *)(v2 + 16) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v2 + *(int *)(v3 + 24);
    uint64_t v6 = type metadata accessor for DispatchTime();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

_WORD *sub_1001D43A8(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void **)((char *)a1 + v4);
  uint64_t v6 = (void **)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for DeviceOrientationError(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100004010(&qword_10038D1A8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = *v6;
    *uint64_t v5 = *v6;
    uint64_t v11 = v6[2];
    id v12 = v10;
    if (v11 == (void *)1)
    {
      long long v13 = *(_OWORD *)(v6 + 3);
      *(_OWORD *)(v5 + 1) = *(_OWORD *)(v6 + 1);
      *(_OWORD *)(v5 + 3) = v13;
    }
    else
    {
      v5[1] = v6[1];
      v5[2] = v11;
      id v14 = v6[4];
      v5[3] = v6[3];
      v5[4] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = *(int *)(v7 + 24);
    uint64_t v16 = (char *)v5 + v15;
    uint64_t v17 = (char *)v6 + v15;
    uint64_t v18 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    (*(void (**)(void **, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_1001D4538(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (uint64_t)&a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for DeviceOrientationError(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9((uint64_t)v6, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      id v12 = *(void **)v6;
      *(void *)uint64_t v5 = *(void *)v6;
      uint64_t v13 = *((void *)v6 + 2);
      id v14 = v12;
      if (v13 == 1)
      {
        long long v15 = *(_OWORD *)(v6 + 24);
        *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 8);
        *(_OWORD *)(v5 + 24) = v15;
      }
      else
      {
        *(void *)(v5 + 8) = *((void *)v6 + 1);
        *(void *)(v5 + 16) = *((void *)v6 + 2);
        *(void *)(v5 + 24) = *((void *)v6 + 3);
        *(void *)(v5 + 32) = *((void *)v6 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v24 = *(int *)(v7 + 24);
      uint64_t v25 = v5 + v24;
      uint64_t v26 = &v6[v24];
      uint64_t v27 = type metadata accessor for DispatchTime();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
      return a1;
    }
LABEL_7:
    uint64_t v16 = sub_100004010(&qword_10038D1A8);
    memcpy((void *)v5, v6, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  if (v11)
  {
    sub_1001D7E10(v5, type metadata accessor for DeviceOrientationError);
    goto LABEL_7;
  }
  uint64_t v17 = *(void **)v6;
  uint64_t v18 = *(void **)v5;
  *(void *)uint64_t v5 = *(void *)v6;
  id v19 = v17;

  uint64_t v20 = (_OWORD *)(v5 + 8);
  uint64_t v21 = v6 + 8;
  uint64_t v22 = *((void *)v6 + 2);
  if (*(void *)(v5 + 16) == 1)
  {
    if (v22 == 1)
    {
      long long v23 = *(_OWORD *)(v6 + 24);
      *uint64_t v20 = *v21;
      *(_OWORD *)(v5 + 24) = v23;
    }
    else
    {
      *(void *)(v5 + 8) = *((void *)v6 + 1);
      *(void *)(v5 + 16) = *((void *)v6 + 2);
      *(void *)(v5 + 24) = *((void *)v6 + 3);
      *(void *)(v5 + 32) = *((void *)v6 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_10006ADB4(v5 + 8);
    long long v28 = *(_OWORD *)(v6 + 24);
    *uint64_t v20 = *v21;
    *(_OWORD *)(v5 + 24) = v28;
  }
  else
  {
    *(void *)(v5 + 8) = *((void *)v6 + 1);
    *(void *)(v5 + 16) = *((void *)v6 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 24) = *((void *)v6 + 3);
    *(void *)(v5 + 32) = *((void *)v6 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = *(int *)(v7 + 24);
  uint64_t v30 = v5 + v29;
  uint64_t v31 = &v6[v29];
  uint64_t v32 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

_WORD *sub_1001D4830(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for DeviceOrientationError(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100004010(&qword_10038D1A8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    *(_OWORD *)(v5 + 1) = *(_OWORD *)(v6 + 1);
    *(_OWORD *)(v5 + 3) = *(_OWORD *)(v6 + 3);
    uint64_t v10 = *(int *)(v7 + 24);
    int v11 = (char *)v5 + v10;
    id v12 = (char *)v6 + v10;
    uint64_t v13 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_1001D4984(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for DeviceOrientationError(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (v11)
    {
      sub_1001D7E10((uint64_t)v5, type metadata accessor for DeviceOrientationError);
      goto LABEL_6;
    }
    uint64_t v18 = (void *)*v5;
    *uint64_t v5 = *v6;

    if (v5[2] != 1)
    {
      uint64_t v19 = v6[2];
      if (v19 != 1)
      {
        v5[1] = v6[1];
        v5[2] = v19;
        swift_bridgeObjectRelease();
        uint64_t v21 = v6[4];
        v5[3] = v6[3];
        v5[4] = v21;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_10006ADB4((uint64_t)(v5 + 1));
    }
    long long v20 = *(_OWORD *)(v6 + 3);
    *(_OWORD *)(v5 + 1) = *(_OWORD *)(v6 + 1);
    *(_OWORD *)(v5 + 3) = v20;
LABEL_13:
    uint64_t v22 = *(int *)(v7 + 24);
    long long v23 = (char *)v5 + v22;
    uint64_t v24 = (char *)v6 + v22;
    uint64_t v25 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
    return a1;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_100004010(&qword_10038D1A8);
    memcpy(v5, v6, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  *uint64_t v5 = *v6;
  *(_OWORD *)(v5 + 1) = *(_OWORD *)(v6 + 1);
  *(_OWORD *)(v5 + 3) = *(_OWORD *)(v6 + 3);
  uint64_t v12 = *(int *)(v7 + 24);
  uint64_t v13 = (char *)v5 + v12;
  id v14 = (char *)v6 + v12;
  uint64_t v15 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1001D4BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D4BE8);
}

uint64_t sub_1001D4BE8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_100004010(&qword_10038D1A8);
    int v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1001D4C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D4CB0);
}

unsigned char *sub_1001D4CB0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_100004010(&qword_10038D1A8);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_10038D208);
}

void sub_1001D4D78()
{
  sub_1001D4E2C(319, (unint64_t *)&unk_10038D218, (void (*)(uint64_t))type metadata accessor for DeviceOrientationError);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001D4E2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for DeviceOrientation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeviceOrientation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DeviceOrientation()
{
  return &type metadata for DeviceOrientation;
}

uint64_t sub_1001D4EEC(uint64_t (*a1)(unint64_t))
{
  uint64_t v4 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v36 = (uint64_t)&v33 - v9;
  __chkstk_darwin(v8);
  uint64_t v37 = (uint64_t)&v33 - v11;
  uint64_t v38 = v1;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v35 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    id v34 = v7;
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    while (v21 < v19)
    {
      unint64_t v39 = v21;
      uint64_t v22 = v15;
      uint64_t v23 = v20;
      uint64_t v24 = v12 + v20;
      uint64_t v25 = a1;
      uint64_t v26 = v37;
      sub_1001D7D3C(v24, v37, type metadata accessor for MessageSimulationEngineImplementation.MessageProgress);
      uint64_t v27 = v25;
      LOBYTE(v25) = v25(v26);
      uint64_t result = sub_1001D7E10(v26, type metadata accessor for MessageSimulationEngineImplementation.MessageProgress);
      if (v25)
      {
        a1 = v27;
        uint64_t v15 = v22;
        unint64_t v28 = v39;
      }
      else
      {
        unint64_t v28 = v39;
        a1 = v27;
        uint64_t v15 = v22;
        if (v39 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v29 = *v38;
          unint64_t v30 = *(void *)(*v38 + 16);
          if (v16 >= v30) {
            goto LABEL_33;
          }
          uint64_t result = sub_1001D7D3C(v29 + v35 + v16 * v22, v36, type metadata accessor for MessageSimulationEngineImplementation.MessageProgress);
          if (v39 >= v30) {
            goto LABEL_34;
          }
          uint64_t v20 = v23;
          sub_1001D7D3C(v29 + v23, (uint64_t)v34, type metadata accessor for MessageSimulationEngineImplementation.MessageProgress);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v38 = v29;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1001D5828(v29);
            unint64_t v29 = result;
            unint64_t *v38 = result;
          }
          if (v16 >= *(void *)(v29 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1001D826C((uint64_t)v34, v29 + v35 + v16 * v22);
          if (v39 >= *(void *)(*v38 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1001D826C(v36, *v38 + v23);
          unint64_t v28 = v39;
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v32 = v28 + 1;
      if (__OFADD__(v28, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v38;
      unint64_t v19 = *(void *)(*v38 + 16);
      unint64_t v21 = v28 + 1;
      v20 += v15;
      if (v32 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D5274(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v7 = *v2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100048D28(a1, a2, v7);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_54;
    }
    if (*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11 != v26) {
        goto LABEL_6;
      }
    }
    else if (v11 != *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      unint64_t v11 = v8 + 5;
      uint64_t v28 = a2;
      while (1)
      {
        unint64_t v12 = v11 - 4;
        unint64_t v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          uint64_t v14 = *(void *)(v13 + 8 * v11);
          swift_retain();
        }
        uint64_t v29 = v14;
        char v15 = a1(&v29);
        swift_release();
        if ((v15 & 1) == 0) {
          break;
        }
LABEL_32:
        unint64_t v23 = v11 - 3;
        if (__OFADD__(v12, 1)) {
          goto LABEL_46;
        }
        if (*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v24 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v23 == v24) {
          return v8;
        }
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      unint64_t v16 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v16 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v12 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v18 = *(void *)(v16 + 8 * v11);
          swift_retain();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v8 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v17 = *(void *)(v16 + 8 * v8 + 32);
        swift_retain();
        if ((v16 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v16 = *v4;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v16;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v16 & 0x8000000000000000) != 0
        || (v16 & 0x4000000000000000) != 0)
      {
        unint64_t v16 = sub_1001D5850(v16);
        *uint64_t v4 = v16;
      }
      *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v18;
      swift_release();
      specialized Array._endMutation()();
      unint64_t v20 = *v4;
      int v21 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v20;
      if (!v21 || (v20 & 0x8000000000000000) != 0 || (v20 & 0x4000000000000000) != 0)
      {
        unint64_t v20 = sub_1001D5850(v20);
        *uint64_t v4 = v20;
      }
      a2 = v28;
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v12 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v11) = v17;
      swift_release();
      specialized Array._endMutation()();
      goto LABEL_31;
    }
    return v8;
  }
  if (!(*v4 >> 62)) {
    return *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1001D55DC(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  for (uint64_t i = 72; ; i += 40)
  {
    char v8 = a1(v3 + i - 40);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v8) {
      break;
    }
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v6, 1))
  {
    unint64_t v10 = *(void *)(v3 + 16);
    if (v6 + 1 == v10) {
      return v6;
    }
    for (unint64_t j = v6 + 1; j < v10; ++j)
    {
      sub_1000090FC(v3 + i, (uint64_t)v21);
      char v12 = a1((uint64_t)v21);
      uint64_t result = _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v21);
      if ((v12 & 1) == 0)
      {
        if (j != v6)
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          unint64_t v13 = (void *)*v1;
          unint64_t v14 = *(void *)(*v1 + 16);
          if (v6 >= v14) {
            goto LABEL_32;
          }
          uint64_t result = sub_1000090FC((uint64_t)&v13[5 * v6 + 4], (uint64_t)v21);
          if (j >= v14) {
            goto LABEL_33;
          }
          sub_1000090FC((uint64_t)&v13[(unint64_t)i / 8], (uint64_t)v20);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *unint64_t v1 = (uint64_t)v13;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1001D5908(v13);
            unint64_t v13 = (void *)result;
            *unint64_t v1 = result;
          }
          if (v6 >= v13[2]) {
            goto LABEL_34;
          }
          uint64_t v15 = (uint64_t)&v13[5 * v6 + 4];
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v15);
          uint64_t result = sub_100009164(v20, v15);
          uint64_t v16 = *v1;
          if (j >= *(void *)(*v1 + 16)) {
            goto LABEL_35;
          }
          uint64_t v17 = v16 + i;
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v16 + i);
          uint64_t result = sub_100009164(v21, v17);
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v19 = j + 1;
      if (__OFADD__(j, 1)) {
        goto LABEL_29;
      }
      uint64_t v3 = *v1;
      unint64_t v10 = *(void *)(*v1 + 16);
      i += 40;
      if (v19 == v10) {
        return v6;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1001D5810(void *a1)
{
  return sub_1001B1C50(0, a1[2], 0, a1);
}

uint64_t sub_1001D5828(unint64_t a1)
{
  return sub_1001B1FB0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1001D583C(void *a1)
{
  return sub_1001B1FE4(0, a1[2], 0, a1);
}

uint64_t sub_1001D5850(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void *sub_1001D58CC(void *a1)
{
  return sub_1001B2204(0, a1[2], 0, a1);
}

void *sub_1001D58E0(void *a1)
{
  return sub_1001B2AA0(0, a1[2], 0, a1);
}

uint64_t sub_1001D58F4(unint64_t a1)
{
  return sub_1001B2BC8(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1001D5908(void *a1)
{
  return sub_1001B2BFC(0, a1[2], 0, a1);
}

uint64_t sub_1001D591C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  unint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for TryOutTranscriptMessageItem(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *unint64_t v14 = v3;

  return specialized Array._endMutation()();
}

Swift::Int sub_1001D5C08(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  Swift::Int v4 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_134;
    }
    if (v4) {
      return sub_1001D64B4(0, v4, 1, v3);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_142;
  }
  Swift::Int v107 = result;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    v106 = _swiftEmptyArrayStorage;
    if (v4 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11 < 2)
      {
LABEL_111:
        swift_bridgeObjectRelease();
        v106[2] = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_99:
      uint64_t v98 = *v3;
      while (1)
      {
        unint64_t v99 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_129;
        }
        if (!v98) {
          goto LABEL_141;
        }
        uint64_t v100 = *(void *)&v9[16 * v99 + 32];
        uint64_t v101 = *(void *)&v9[16 * v11 + 24];
        sub_1001D6634((char *)(v98 + 40 * v100), (char *)(v98 + 40 * *(void *)&v9[16 * v11 + 16]), v98 + 40 * v101, __dst);
        if (v2) {
          goto LABEL_111;
        }
        if (v101 < v100) {
          goto LABEL_130;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1001D6E20((uint64_t)v9);
        }
        if (v99 >= *((void *)v9 + 2)) {
          goto LABEL_131;
        }
        v102 = &v9[16 * v99 + 32];
        *(void *)v102 = v100;
        *((void *)v102 + 1) = v101;
        unint64_t v103 = *((void *)v9 + 2);
        if (v11 > v103) {
          goto LABEL_132;
        }
        memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v103 - v11));
        *((void *)v9 + 2) = v103 - 1;
        unint64_t v11 = v103 - 1;
        if (v103 <= 2) {
          goto LABEL_111;
        }
      }
    }
    uint64_t v122 = v1;
  }
  else
  {
    uint64_t v122 = v1;
    uint64_t v7 = v6 >> 1;
    sub_100004010((uint64_t *)&unk_10038D250);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    v106 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v12 = v10++;
    Swift::Int v113 = v12;
    if (v10 < v4)
    {
      uint64_t v13 = *v3;
      sub_1000090FC(*v3 + 40 * v10, (uint64_t)&v119);
      sub_1000090FC(v13 + 40 * v12, (uint64_t)v116);
      uint64_t v14 = v120;
      uint64_t v15 = v121;
      sub_100008F88(&v119, v120);
      unsigned __int8 v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
      uint64_t v16 = v117;
      uint64_t v17 = v118;
      sub_100008F88(v116, v117);
      unsigned __int8 v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v116);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v119);
      Swift::Int v10 = v12 + 2;
      uint64_t v108 = v13;
      if (v12 + 2 < v4)
      {
        v104 = v9;
        uint64_t v18 = v13 + 40 * v12 + 40;
        while (1)
        {
          uint64_t v19 = v18 + 40;
          sub_1000090FC(v18 + 40, (uint64_t)&v119);
          sub_1000090FC(v18, (uint64_t)v116);
          uint64_t v20 = v120;
          uint64_t v21 = v121;
          sub_100008F88(&v119, v120);
          LOBYTE(v20) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(v20, v21);
          uint64_t v23 = v117;
          uint64_t v22 = v118;
          sub_100008F88(v116, v117);
          BOOL v24 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v22 + 48))(v23, v22) < v20;
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v116);
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v119);
          if (v109 >= v110 == v24) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v4 == v10)
          {
            Swift::Int v10 = v4;
            break;
          }
        }
        uint64_t v9 = v104;
        Swift::Int v12 = v113;
      }
      if (v109 >= v110)
      {
        if (v10 < v12) {
          goto LABEL_135;
        }
        if (v12 < v10)
        {
          Swift::Int v111 = v4;
          uint64_t v25 = 40 * v10 - 40;
          Swift::Int v26 = v12;
          uint64_t v27 = 40 * v12;
          Swift::Int v28 = v10;
          do
          {
            if (v26 != --v28)
            {
              if (!v108) {
                goto LABEL_140;
              }
              uint64_t v29 = v108 + v27;
              sub_100009164((long long *)(v108 + v27), (uint64_t)&v119);
              uint64_t v30 = *(void *)(v108 + v25 + 32);
              long long v31 = *(_OWORD *)(v108 + v25 + 16);
              *(_OWORD *)uint64_t v29 = *(_OWORD *)(v108 + v25);
              *(_OWORD *)(v29 + 16) = v31;
              *(void *)(v29 + 32) = v30;
              sub_100009164(&v119, v108 + v25);
            }
            ++v26;
            v25 -= 40;
            v27 += 40;
          }
          while (v26 < v28);
          Swift::Int v4 = v111;
          Swift::Int v12 = v113;
        }
      }
    }
    if (v10 >= v4) {
      goto LABEL_49;
    }
    if (__OFSUB__(v10, v12)) {
      goto LABEL_133;
    }
    if (v10 - v12 >= v107) {
      goto LABEL_49;
    }
    if (__OFADD__(v12, v107)) {
      goto LABEL_136;
    }
    Swift::Int v32 = v12 + v107 >= v4 ? v4 : v12 + v107;
    if (v32 < v12) {
      break;
    }
    if (v10 != v32)
    {
      v105 = v9;
      uint64_t v33 = 40 * v10 - 40;
      Swift::Int v112 = v32;
      do
      {
        Swift::Int v34 = v12;
        uint64_t v35 = v33;
        do
        {
          uint64_t v36 = *v3 + v35;
          sub_1000090FC(v36 + 40, (uint64_t)&v119);
          sub_1000090FC(v36, (uint64_t)v116);
          uint64_t v37 = v120;
          uint64_t v38 = v121;
          sub_100008F88(&v119, v120);
          LOBYTE(v37) = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 48))(v37, v38);
          uint64_t v39 = v117;
          uint64_t v40 = v118;
          sub_100008F88(v116, v117);
          LODWORD(v36) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v116);
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v119);
          if (v36 < v37) {
            break;
          }
          uint64_t v41 = *v3;
          if (!*v3) {
            goto LABEL_138;
          }
          uint64_t v42 = v41 + v35;
          sub_100009164((long long *)(v41 + v35 + 40), (uint64_t)&v119);
          long long v43 = *(_OWORD *)(v42 + 16);
          *(_OWORD *)(v42 + 40) = *(_OWORD *)v42;
          *(_OWORD *)(v42 + 56) = v43;
          *(void *)(v42 + 72) = *(void *)(v42 + 32);
          sub_100009164(&v119, v42);
          v35 -= 40;
          ++v34;
        }
        while (v10 != v34);
        ++v10;
        v33 += 40;
        Swift::Int v12 = v113;
      }
      while (v10 != v112);
      Swift::Int v10 = v112;
      uint64_t v9 = v105;
    }
LABEL_49:
    if (v10 < v12) {
      goto LABEL_128;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1001D6A48(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v45 = *((void *)v9 + 2);
    unint64_t v44 = *((void *)v9 + 3);
    unint64_t v11 = v45 + 1;
    if (v45 >= v44 >> 1) {
      uint64_t v9 = sub_1001D6A48((char *)(v44 > 1), v45 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v11;
    v46 = v9 + 32;
    v47 = &v9[16 * v45 + 32];
    *(void *)v47 = v12;
    *((void *)v47 + 1) = v10;
    if (v45)
    {
      Swift::Int v114 = v10;
      while (1)
      {
        unint64_t v48 = v11 - 1;
        if (v11 >= 4)
        {
          v53 = &v46[16 * v11];
          uint64_t v54 = *((void *)v53 - 8);
          uint64_t v55 = *((void *)v53 - 7);
          BOOL v59 = __OFSUB__(v55, v54);
          uint64_t v56 = v55 - v54;
          if (v59) {
            goto LABEL_117;
          }
          uint64_t v58 = *((void *)v53 - 6);
          uint64_t v57 = *((void *)v53 - 5);
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v51 = v57 - v58;
          char v52 = v59;
          if (v59) {
            goto LABEL_118;
          }
          unint64_t v60 = v11 - 2;
          v61 = &v46[16 * v11 - 32];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          BOOL v59 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v59) {
            goto LABEL_120;
          }
          BOOL v59 = __OFADD__(v51, v64);
          uint64_t v65 = v51 + v64;
          if (v59) {
            goto LABEL_123;
          }
          if (v65 >= v56)
          {
            v83 = &v46[16 * v48];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v59 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v59) {
              goto LABEL_127;
            }
            BOOL v76 = v51 < v86;
            goto LABEL_87;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v77 = *((void *)v9 + 4);
            uint64_t v78 = *((void *)v9 + 5);
            BOOL v59 = __OFSUB__(v78, v77);
            uint64_t v70 = v78 - v77;
            char v71 = v59;
            goto LABEL_81;
          }
          uint64_t v50 = *((void *)v9 + 4);
          uint64_t v49 = *((void *)v9 + 5);
          BOOL v59 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          char v52 = v59;
        }
        if (v52) {
          goto LABEL_119;
        }
        unint64_t v60 = v11 - 2;
        v66 = &v46[16 * v11 - 32];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v70 = v67 - v68;
        char v71 = v69;
        if (v69) {
          goto LABEL_122;
        }
        v72 = &v46[16 * v48];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v59 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v59) {
          goto LABEL_125;
        }
        if (__OFADD__(v70, v75)) {
          goto LABEL_126;
        }
        if (v70 + v75 >= v51)
        {
          BOOL v76 = v51 < v75;
LABEL_87:
          if (v76) {
            unint64_t v48 = v60;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v71) {
          goto LABEL_121;
        }
        v79 = &v46[16 * v48];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v59 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v59) {
          goto LABEL_124;
        }
        if (v82 < v70) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v87 = v48 - 1;
        if (v48 - 1 >= v11)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        v88 = v3;
        uint64_t v89 = *v3;
        if (!*v3) {
          goto LABEL_139;
        }
        v90 = v9;
        v91 = &v46[16 * v87];
        uint64_t v92 = *(void *)v91;
        unint64_t v93 = v48;
        v94 = &v46[16 * v48];
        uint64_t v95 = *((void *)v94 + 1);
        uint64_t v96 = v122;
        sub_1001D6634((char *)(v89 + 40 * *(void *)v91), (char *)(v89 + 40 * *(void *)v94), v89 + 40 * v95, __dst);
        uint64_t v122 = v96;
        if (v96) {
          goto LABEL_111;
        }
        if (v95 < v92) {
          goto LABEL_114;
        }
        if (v93 > *((void *)v90 + 2)) {
          goto LABEL_115;
        }
        *(void *)v91 = v92;
        *(void *)&v46[16 * v87 + 8] = v95;
        unint64_t v97 = *((void *)v90 + 2);
        if (v93 >= v97) {
          goto LABEL_116;
        }
        uint64_t v9 = v90;
        unint64_t v11 = v97 - 1;
        memmove(v94, v94 + 16, 16 * (v97 - 1 - v93));
        *((void *)v90 + 2) = v97 - 1;
        uint64_t v3 = v88;
        Swift::Int v10 = v114;
        if (v97 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v4 = v3[1];
    if (v10 >= v4)
    {
      uint64_t v2 = v122;
      if (v11 < 2) {
        goto LABEL_111;
      }
      goto LABEL_99;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D64B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = 40 * a3 - 40;
LABEL_5:
    uint64_t v7 = v24;
    uint64_t v8 = v6;
    while (1)
    {
      uint64_t v9 = *a4 + v8;
      sub_1000090FC(v9 + 40, (uint64_t)&v21);
      sub_1000090FC(v9, (uint64_t)v18);
      uint64_t v10 = v22;
      uint64_t v11 = v23;
      sub_100008F88(&v21, v22);
      LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
      uint64_t v12 = v19;
      uint64_t v13 = v20;
      sub_100008F88(v18, v19);
      LODWORD(v9) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v18);
      Swift::Int result = _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v21);
      if (v9 < v10)
      {
LABEL_4:
        ++v5;
        v6 += 40;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v14 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v15 = v14 + v8;
      sub_100009164((long long *)(v14 + v8 + 40), (uint64_t)&v21);
      long long v16 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)v15;
      *(_OWORD *)(v15 + 56) = v16;
      *(void *)(v15 + 72) = *(void *)(v15 + 32);
      Swift::Int result = sub_100009164(&v21, v15);
      v8 -= 40;
      if (v5 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001D6634(char *__src, char *a2, unint64_t a3, char *__dst)
{
  Swift::Int v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  char v52 = __src;
  uint64_t v51 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39) {
      goto LABEL_43;
    }
    if (__dst != a2 || &a2[40 * v11] <= __dst) {
      memmove(__dst, a2, 40 * v11);
    }
    uint64_t v25 = &v4[40 * v11];
    uint64_t v50 = v25;
    char v52 = v6;
    if (__src >= v6 || v10 < 40) {
      goto LABEL_42;
    }
    unint64_t v26 = a3 - 40;
    long long v43 = __src;
    while (1)
    {
      long long v31 = (char *)(v26 + 40);
      sub_1000090FC((uint64_t)(v25 - 40), (uint64_t)v47);
      uint64_t v29 = v6 - 40;
      sub_1000090FC((uint64_t)(v6 - 40), (uint64_t)v44);
      uint64_t v32 = v48;
      uint64_t v33 = v49;
      sub_100008F88(v47, v48);
      LOBYTE(v32) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 48))(v32, v33);
      uint64_t v34 = v45;
      uint64_t v35 = v46;
      sub_100008F88(v44, v45);
      unsigned int v36 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v35 + 48))(v34, v35);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v44);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v47);
      if (v36 >= v32) {
        break;
      }
      uint64_t v37 = v50;
      uint64_t v25 = v50 - 40;
      v50 -= 40;
      if (v31 < v37 || v26 >= (unint64_t)v37)
      {
        long long v27 = *(_OWORD *)v25;
        long long v28 = *(_OWORD *)(v37 - 24);
        *(void *)(v26 + 32) = *((void *)v37 - 1);
        *(_OWORD *)unint64_t v26 = v27;
        *(_OWORD *)(v26 + 16) = v28;
        uint64_t v29 = v6;
        goto LABEL_29;
      }
      uint64_t v30 = v43;
      if (v31 != v37)
      {
        long long v38 = *(_OWORD *)v25;
        long long v39 = *(_OWORD *)(v37 - 24);
        *(void *)(v26 + 32) = *((void *)v37 - 1);
        *(_OWORD *)unint64_t v26 = v38;
        *(_OWORD *)(v26 + 16) = v39;
      }
      uint64_t v29 = v6;
      if (v25 <= v4) {
        goto LABEL_42;
      }
LABEL_30:
      v26 -= 40;
      uint64_t v6 = v29;
      if (v29 <= v30) {
        goto LABEL_42;
      }
    }
    if (v31 != v6 || v26 >= (unint64_t)v6)
    {
      long long v40 = *(_OWORD *)v29;
      long long v41 = *(_OWORD *)(v6 - 24);
      *(void *)(v26 + 32) = *((void *)v6 - 1);
      *(_OWORD *)unint64_t v26 = v40;
      *(_OWORD *)(v26 + 16) = v41;
    }
    v52 -= 40;
    uint64_t v25 = v50;
LABEL_29:
    uint64_t v30 = v43;
    if (v25 <= v4) {
      goto LABEL_42;
    }
    goto LABEL_30;
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[40 * v9];
    uint64_t v50 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        sub_1000090FC((uint64_t)v6, (uint64_t)v47);
        sub_1000090FC((uint64_t)v4, (uint64_t)v44);
        uint64_t v13 = v48;
        uint64_t v14 = v49;
        sub_100008F88(v47, v48);
        LOBYTE(v13) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
        uint64_t v15 = v45;
        uint64_t v16 = v46;
        sub_100008F88(v44, v45);
        unsigned int v17 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v44);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v47);
        uint64_t v18 = v52;
        if (v17 >= v13)
        {
          unint64_t v22 = (unint64_t)(v6 + 40);
          if (v52 >= v6 && (unint64_t)v52 < v22 && v52 == v6)
          {
            uint64_t v18 = v6;
          }
          else
          {
            long long v23 = *(_OWORD *)v6;
            long long v24 = *((_OWORD *)v6 + 1);
            *((void *)v52 + 4) = *((void *)v6 + 4);
            *uint64_t v18 = v23;
            v18[1] = v24;
          }
        }
        else
        {
          uint64_t v19 = v51 + 40;
          if (v52 != v51 || v52 >= v19)
          {
            long long v20 = *(_OWORD *)v51;
            long long v21 = *((_OWORD *)v51 + 1);
            *((void *)v52 + 4) = *((void *)v51 + 4);
            *uint64_t v18 = v20;
            v18[1] = v21;
          }
          uint64_t v51 = v19;
          unint64_t v22 = (unint64_t)v6;
        }
        char v52 = (char *)v18 + 40;
        Swift::Int v4 = v51;
        if ((unint64_t)v51 >= v12) {
          break;
        }
        uint64_t v6 = (char *)v22;
      }
      while (v22 < a3);
    }
LABEL_42:
    sub_1001D6D54((void **)&v52, (const void **)&v51, &v50);
    return 1;
  }
LABEL_43:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001D6A48(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010((uint64_t *)&unk_10038D260);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1001D6B44(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

uint64_t sub_1001D6C14(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for TargetTracks.TimePoint(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1001D6D54(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_1001D6E20(uint64_t a1)
{
  return sub_1001D6A48(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001D6E34(uint64_t a1)
{
  return sub_1001C05B8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001D6E48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t))
{
  v15[3] = a3(0);
  v15[4] = &off_10035CD20;
  v15[0] = a1;
  uint64_t v7 = (uint64_t (**)(uint64_t))(a2 + 16);
  swift_beginAccess();
  swift_retain();
  uint64_t v8 = sub_1001D55DC(a4);
  int64_t v9 = *(void *)(*(void *)(a2 + 16) + 16);
  if (v9 < v8)
  {
    __break(1u);
  }
  else
  {
    sub_1001D797C(v8, v9);
    sub_1000090FC((uint64_t)v15, (uint64_t)v14);
    a4 = *v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v7 = a4;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  a4 = (uint64_t (*)(uint64_t))sub_1001B2BFC(0, *((void *)a4 + 2) + 1, 1, a4);
  *uint64_t v7 = a4;
LABEL_3:
  unint64_t v12 = *((void *)a4 + 2);
  unint64_t v11 = *((void *)a4 + 3);
  if (v12 >= v11 >> 1)
  {
    a4 = (uint64_t (*)(uint64_t))sub_1001B2BFC((void *)(v11 > 1), v12 + 1, 1, a4);
    *uint64_t v7 = a4;
  }
  *((void *)a4 + 2) = v12 + 1;
  sub_100009164(v14, (uint64_t)a4 + 40 * v12 + 32);
  sub_1001CAB70((void **)v7);
  swift_endAccess();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v15);
}

BOOL sub_1001D6F9C(double *a1, double *a2)
{
  if ((static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0)
  {
    return 0;
  }
  BOOL result = 0;
  if (a1[4] == a2[4] && a1[5] == a2[5] && a1[6] == a2[6] && a1[7] == a2[7]) {
    return a1[8] == a2[8];
  }
  return result;
}

uint64_t sub_1001D705C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1001B1FB0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D7244(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1001B20F4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (void *)&v16[32 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D73B0(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *unint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  type metadata accessor for TryOutTranscriptMessageItem(0);
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        BOOL v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_1001D7690(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1001B2320(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (void *)&v16[40 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1001D7808@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  [a1 heading];
  double v5 = v4 * 0.0174532925;
  if (v4 * 0.0174532925 < 0.0 || v5 >= 6.28318531) {
    double v5 = v5 - floor(v5 / 6.28318531) * 6.28318531;
  }
  id v6 = [a1 attitude];
  [v6 pitch];
  uint64_t v8 = v7;

  id v9 = [a1 attitude];
  [v9 roll];
  uint64_t v11 = v10;

  id v12 = [a1 attitude];
  [v12 yaw];
  uint64_t v14 = v13;

  id v15 = [a1 attitude];
  [v15 quaternion];
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;

  id result = [a1 timestamp];
  *(double *)a2 = v5;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v25;
  return result;
}

uint64_t sub_1001D797C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  double v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    double v4 = sub_1001B2BFC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_100004010((uint64_t *)&unk_10038D250);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (void *)&v16[40 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_1001D7AFC(void *a1)
{
  return sub_1001D34F4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001D7B1C()
{
  uint64_t v1 = type metadata accessor for DispatchTime();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001D7C04()
{
  uint64_t v1 = *(void *)(type metadata accessor for DispatchTime() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);

  return sub_1001CFAE8(v4, v0 + v2, v5, (double *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001D7CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001D7CBC()
{
  return swift_release();
}

uint64_t sub_1001D7CC4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D7CFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001D7D34()
{
}

uint64_t sub_1001D7D3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D7DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D7E10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001D7E74()
{
  uint64_t v1 = (int *)(type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v1[8] + v3;
  uint64_t v6 = type metadata accessor for DeviceOrientationError(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {

    if (*(void *)(v5 + 16) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v5 + *(int *)(v6 + 24);
    uint64_t v8 = type metadata accessor for DispatchTime();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001D7FCC()
{
  return sub_1001CF934();
}

uint64_t sub_1001D8028()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D8060()
{
  return sub_1001CB400(*(void *)(v0 + 16));
}

uint64_t sub_1001D8068()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D8078()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D8088()
{
  return sub_1001CD5EC();
}

unint64_t sub_1001D8090()
{
  unint64_t result = qword_10038D288;
  if (!qword_10038D288)
  {
    sub_10001E6FC(255, &qword_10038D280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D288);
  }
  return result;
}

uint64_t sub_1001D80F8()
{
  return sub_1001CCC64(v0);
}

void sub_1001D8108(char a1)
{
}

void sub_1001D8144()
{
  sub_1001CB300(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001D8150()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001D8160(char a1)
{
}

uint64_t sub_1001D819C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D81DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D81EC()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001D8224()
{
  return sub_1001CC970(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), 1);
}

uint64_t sub_1001D8248()
{
  return sub_1001CC970(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), 0);
}

uint64_t sub_1001D826C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSimulationEngineImplementation.MessageProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for LocationAuthorizationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001D839CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationAuthorizationType()
{
  return &type metadata for LocationAuthorizationType;
}

unint64_t sub_1001D83D8()
{
  unint64_t result = qword_10038D2C0;
  if (!qword_10038D2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D2C0);
  }
  return result;
}

BOOL sub_1001D842C(void *a1)
{
  return sub_1001D7AFC(a1);
}

uint64_t destroy for TryOutInitialConnectionView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TryOutInitialConnectionView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TryOutInitialConnectionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TryOutInitialConnectionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutInitialConnectionView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutInitialConnectionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutInitialConnectionView()
{
  return &type metadata for TryOutInitialConnectionView;
}

uint64_t sub_1001D87F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001D8810@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  v61 = a1;
  uint64_t v47 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v3 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100004010(&qword_10038D2D0);
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100004010(&qword_10038D2D8);
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  int64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_10038D2E0);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin(v10);
  char v52 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004010(&qword_10038D2E8);
  __chkstk_darwin(v57);
  uint64_t v58 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_10038D2F0);
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v56 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v46 - v16;
  uint64_t v17 = *(void **)(v1 + 32);
  if (v17)
  {
    uint64_t v19 = v17[9];
    uint64_t v18 = v17[10];
    sub_100008F88(v17 + 6, v19);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 32))(v74, v19, v18);
    uint64_t v20 = static HorizontalAlignment.center.getter();
    sub_1001D8F84(v2, (uint64_t)v74, (uint64_t)&v69);
    char v68 = 0;
    long long v62 = (unint64_t)v20;
    LOBYTE(v63[0]) = 0;
    *(_OWORD *)((char *)v63 + 8) = v69;
    *(_OWORD *)((char *)&v63[1] + 8) = v70;
    *(_OWORD *)((char *)&v63[2] + 8) = v71;
    *((void *)&v63[3] + 1) = *(void *)&v72[0];
    long long v64 = *(_OWORD *)((char *)v72 + 8);
    long long v65 = *(_OWORD *)((char *)&v72[1] + 8);
    long long v66 = *(_OWORD *)((char *)&v72[2] + 8);
    uint64_t v67 = *((void *)&v72[3] + 1);
    uint64_t v21 = v47;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v47);
    uint64_t v22 = sub_100004010(&qword_10038D2F8);
    uint64_t v23 = sub_100009B18(&qword_10038D300, &qword_10038D2F8);
    View.navigationBarTitleDisplayMode(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
    v72[3] = v65;
    v72[4] = v66;
    uint64_t v73 = v67;
    long long v71 = v63[1];
    v72[0] = v63[2];
    v72[1] = v63[3];
    v72[2] = v64;
    long long v69 = v62;
    long long v70 = v63[0];
    sub_1001D9FF8((uint64_t)&v69);
    *(void *)&long long v62 = v22;
    *((void *)&v62 + 1) = v23;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v25 = v50;
    View.navigationBarBackButtonHidden(_:)();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v25);
    *(void *)&long long v62 = v25;
    *((void *)&v62 + 1) = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v26 = v51;
    long long v27 = v52;
    View.navigationBarHidden(_:)();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v26);
    uint64_t v28 = swift_allocObject();
    long long v29 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v28 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v28 + 64) = v29;
    *(_OWORD *)(v28 + 80) = *(_OWORD *)(v2 + 64);
    *(void *)(v28 + 96) = *(void *)(v2 + 80);
    long long v30 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v28 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v28 + 32) = v30;
    uint64_t v32 = v53;
    uint64_t v31 = v54;
    uint64_t v33 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v58, v27, v54);
    uint64_t v34 = (uint64_t (**)())(v33 + *(int *)(v57 + 36));
    char *v34 = sub_1001DA070;
    v34[1] = (uint64_t (*)())v28;
    v34[2] = 0;
    v34[3] = 0;
    sub_1001DA078(v2);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v31);
    uint64_t v35 = *(void *)(v2 + 16);
    if (v35)
    {
      LOBYTE(v62) = *(unsigned char *)(*(void *)(v35 + 56) + 106) & 1;
      uint64_t v36 = swift_allocObject();
      long long v37 = *(_OWORD *)(v2 + 48);
      *(_OWORD *)(v36 + 48) = *(_OWORD *)(v2 + 32);
      *(_OWORD *)(v36 + 64) = v37;
      *(_OWORD *)(v36 + 80) = *(_OWORD *)(v2 + 64);
      *(void *)(v36 + 96) = *(void *)(v2 + 80);
      long long v38 = *(_OWORD *)(v2 + 16);
      *(_OWORD *)(v36 + 16) = *(_OWORD *)v2;
      *(_OWORD *)(v36 + 32) = v38;
      sub_1001DA078(v2);
      sub_1001DA130();
      long long v39 = v56;
      View.onChange<A>(of:initial:_:)();
      swift_release();
      sub_1001DA27C(v33);
      uint64_t v40 = v60;
      long long v41 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v42 = v55;
      v41(v55, v39, v60);
      v41(v61, v42, v40);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v74);
    }
    type metadata accessor for ConnectionModel(0);
    unint64_t v44 = &qword_10037F100;
    uint64_t v45 = (void (*)(uint64_t))type metadata accessor for ConnectionModel;
  }
  else
  {
    type metadata accessor for UIMetrics();
    unint64_t v44 = (unint64_t *)&qword_10037EFF0;
    uint64_t v45 = (void (*)(uint64_t))type metadata accessor for UIMetrics;
  }
  sub_1001DA45C(v44, v45);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

__n128 sub_1001D8F84@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_1001DA45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v8 = v7;
  type metadata accessor for CGSize(0);
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  State.init(wrappedValue:)();
  long long v9 = (__int128)v19;
  uint64_t v10 = v20;
  sub_1000090FC(a2, (uint64_t)&v19);
  uint64_t v11 = swift_allocObject();
  long long v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v11 + 64) = v12;
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v11 + 96) = *(void *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 32) = v13;
  sub_100009164((long long *)&v19, v11 + 104);
  sub_1001DA078(a1);
  uint64_t v14 = EnvironmentObject.init()();
  uint64_t v16 = v15;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  State.init(wrappedValue:)();
  uint64_t v17 = v20;
  __n128 result = v19;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(_OWORD *)(a3 + 16) = v9;
  *(void *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = v14;
  *(void *)(a3 + 48) = v16;
  *(void *)(a3 + 56) = sub_1001D9124;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = sub_1001DA3D8;
  *(void *)(a3 + 80) = v11;
  *(__n128 *)(a3 + 88) = result;
  *(void *)(a3 + 104) = v17;
  return result;
}

double sub_1001D9124@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.center.getter();
  sub_1001D9210((uint64_t)v10);
  *(_OWORD *)&v11[135] = v10[8];
  *(_OWORD *)&v11[151] = v10[9];
  *(_OWORD *)&v11[167] = v10[10];
  *(_OWORD *)&v11[183] = v10[11];
  *(_OWORD *)&v11[71] = v10[4];
  *(_OWORD *)&v11[87] = v10[5];
  *(_OWORD *)&v11[103] = v10[6];
  *(_OWORD *)&v11[119] = v10[7];
  *(_OWORD *)&v11[7] = v10[0];
  *(_OWORD *)&v11[23] = v10[1];
  *(_OWORD *)&v11[39] = v10[2];
  *(_OWORD *)&v11[55] = v10[3];
  long long v3 = *(_OWORD *)&v11[128];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v11[144];
  long long v4 = *(_OWORD *)&v11[176];
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v11[160];
  *(_OWORD *)(a1 + 193) = v4;
  long long v5 = *(_OWORD *)&v11[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v11[80];
  long long v6 = *(_OWORD *)&v11[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v11[96];
  *(_OWORD *)(a1 + 129) = v6;
  *(_OWORD *)(a1 + 145) = v3;
  long long v7 = *(_OWORD *)v11;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v11[16];
  double result = *(double *)&v11[32];
  long long v9 = *(_OWORD *)&v11[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v11[32];
  *(_OWORD *)(a1 + 65) = v9;
  *(_OWORD *)(a1 + 81) = v5;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 208) = *(void *)&v11[191];
  *(_OWORD *)(a1 + 17) = v7;
  return result;
}

uint64_t sub_1001D9210@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ConnectionClosedModel(0);
  sub_1001DA45C(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  uint64_t v31 = EnvironmentObject.init()();
  uint64_t v32 = v2;
  type metadata accessor for ConnectivityModel();
  sub_1001DA45C(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t v29 = EnvironmentObject.init()();
  uint64_t v30 = v3;
  type metadata accessor for GuidanceModel(0);
  sub_1001DA45C(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  uint64_t v27 = EnvironmentObject.init()();
  uint64_t v28 = v4;
  type metadata accessor for OrientationModel();
  sub_1001DA45C(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  uint64_t v25 = EnvironmentObject.init()();
  uint64_t v26 = v5;
  type metadata accessor for StewieModel();
  sub_1001DA45C(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v24 = v7;
  type metadata accessor for UIMetrics();
  sub_1001DA45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v8 = EnvironmentObject.init()();
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  uint64_t v21 = EnvironmentObject.init()();
  uint64_t v11 = v10;
  uint64_t v12 = EnvironmentObject.init()();
  uint64_t v14 = v13;
  type metadata accessor for GuidanceMessagesModel();
  sub_1001DA45C(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  uint64_t v15 = EnvironmentObject.init()();
  uint64_t v17 = v16;
  uint64_t v18 = EnvironmentObject.init()();
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v32;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v30;
  *(void *)(a1 + 32) = v27;
  *(void *)(a1 + 40) = v28;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v26;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v23;
  *(void *)(a1 + 88) = v22;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v21;
  *(void *)(a1 + 120) = v11;
  *(void *)(a1 + 128) = v12;
  *(void *)(a1 + 136) = v14;
  *(void *)(a1 + 144) = 32;
  *(void *)(a1 + 152) = 0xE100000000000000;
  *(void *)(a1 + 160) = v15;
  *(void *)(a1 + 168) = v17;
  *(void *)(a1 + 176) = v18;
  *(void *)(a1 + 184) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001D9528@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v70[0] = *(_OWORD *)(a1 + 48);
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  if (LOBYTE(v47[0]) != 1)
  {
    sub_10010CC74(v47);
    sub_1001DA3E4((uint64_t)v47, (uint64_t)v70);
    return sub_1001DA3E4((uint64_t)v70, a3);
  }
  long long v41 = a2;
  uint64_t v45 = a3;
  id v6 = [self mainBundle];
  v71._object = (void *)0x80000001002D3610;
  v7._object = (void *)0x80000001002D35E0;
  v7._countAndFlagsBits = 0x1000000000000026;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v71._countAndFlagsBits = 0xD000000000000067;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v71);

  v70[0] = v9;
  sub_100033310();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.title2.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v40 = v18;
  uint64_t v43 = v19;
  swift_release();
  sub_100033364(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a1 + 32);
  if (v20)
  {
    id v21 = *(id *)(v20 + 112);
    char v22 = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v39 = (v22 & 1) == 0;
    uint64_t KeyPath = swift_getKeyPath();
    id v24 = *(id *)(v20 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v64 = v15;
    uint64_t v65 = v17;
    char v66 = v40 & 1;
    uint64_t v67 = v43;
    uint64_t v68 = KeyPath;
    BOOL v69 = v39;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v46, 0.0, 1, 0.0, 1);
    sub_100033364(v15, v17, v40 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    id v25 = *(id *)(v20 + 112);
    char v26 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v26) {
      double v27 = 1.0;
    }
    else {
      double v27 = 0.5;
    }
    uint64_t v28 = swift_getKeyPath();
    char v29 = static Edge.Set.top.getter();
    uint64_t v30 = sub_100008F88(v41, v41[3]);
    long long v44 = *(_OWORD *)(*v30 + 184);
    uint64_t v31 = *(void *)(*v30 + 200);
    uint64_t v32 = *(void *)(*v30 + 208);
    char v33 = static Edge.Set.all.getter();
    uint64_t v34 = sub_100008F88(v41, v41[3]);
    long long v42 = *(_OWORD *)(*v34 + 80);
    uint64_t v35 = *(void *)(*v34 + 96);
    uint64_t v36 = *(void *)(*v34 + 104);
    char v37 = static Edge.Set.all.getter();
    v47[6] = v46[6];
    v47[7] = v46[7];
    v47[8] = v46[8];
    v47[9] = v46[9];
    v47[2] = v46[2];
    void v47[3] = v46[3];
    v47[4] = v46[4];
    v47[5] = v46[5];
    v47[0] = v46[0];
    v47[1] = v46[1];
    uint64_t v48 = v28;
    double v49 = v27;
    char v50 = v29;
    long long v51 = 0u;
    long long v52 = 0u;
    char v53 = 1;
    char v54 = v33;
    long long v55 = v44;
    uint64_t v56 = v31;
    uint64_t v57 = v32;
    char v58 = 0;
    char v59 = v37;
    long long v60 = v42;
    uint64_t v61 = v35;
    uint64_t v62 = v36;
    char v63 = 0;
    ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v47);
    sub_1001DA3E4((uint64_t)v47, (uint64_t)v70);
    a3 = v45;
    return sub_1001DA3E4((uint64_t)v70, a3);
  }
  type metadata accessor for UIMetrics();
  sub_1001DA45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001D99B4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    if (*(unsigned char *)(*(void *)(v1 + 56) + 106)) {
      return sub_1001D9A48();
    }
  }
  else
  {
    type metadata accessor for ConnectionModel(0);
    sub_1001DA45C(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001D9A48()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v23 - v13;
  long long v35 = *(_OWORD *)(v0 + 48);
  long long aBlock = *(_OWORD *)(v0 + 48);
  sub_100004010(&qword_10037ED78);
  uint64_t result = State.wrappedValue.getter();
  if ((v34 & 1) == 0)
  {
    long long aBlock = v35;
    char v34 = 1;
    State.wrappedValue.setter();
    sub_10000FDBC();
    uint64_t v24 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v25 = v8;
    v16(v12, v8);
    uint64_t v17 = (uint64_t (*)(char *, uint64_t))v16;
    uint64_t v18 = swift_allocObject();
    long long v19 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v18 + 48) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v18 + 64) = v19;
    *(_OWORD *)(v18 + 80) = *(_OWORD *)(v1 + 64);
    *(void *)(v18 + 96) = *(void *)(v1 + 80);
    long long v20 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v18 + 32) = v20;
    uint64_t v32 = sub_1001DA348;
    uint64_t v33 = v18;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v30 = sub_100207A1C;
    uint64_t v31 = &unk_10035D378;
    id v21 = _Block_copy(&aBlock);
    sub_1001DA078(v1);
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_1001DA45C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    char v22 = (void *)v24;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
    return v17(v14, v25);
  }
  return result;
}

uint64_t sub_1001D9E70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = v1;
  sub_10004ED30((uint64_t)&v8);
  swift_retain();
  sub_10003E68C((uint64_t)&v9);
  sub_100004010(&qword_100381910);
  Binding.wrappedValue.getter();
  uint64_t v2 = v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001B1A30(0, v7[2] + 1, 1, v7);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001B1A30((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t v5 = &v2[2 * v4];
  v5[4] = 0xD000000000000024;
  v5[5] = 0x80000001002D07F0;
  Binding.wrappedValue.setter();
  sub_10004F584((uint64_t)&v8);
  swift_release();
  return sub_10004F5B0((uint64_t)&v9);
}

uint64_t sub_1001D9FAC@<X0>(char *a1@<X8>)
{
  return sub_1001D8810(a1);
}

uint64_t sub_1001D9FF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001DA070()
{
  return sub_1001D99B4(v0 + 16);
}

uint64_t sub_1001DA078(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001DA100(uint64_t a1, unsigned char *a2)
{
  if (*a2 == 1) {
    return sub_1001D9A48();
  }
  return result;
}

unint64_t sub_1001DA130()
{
  unint64_t result = qword_10038D308;
  if (!qword_10038D308)
  {
    sub_1000094C4(&qword_10038D2E8);
    sub_1000094C4(&qword_10038D2D8);
    sub_1000094C4(&qword_10038D2D0);
    sub_1000094C4(&qword_10038D2F8);
    sub_100009B18(&qword_10038D300, &qword_10038D2F8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D308);
  }
  return result;
}

uint64_t sub_1001DA27C(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038D2E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001DA2E0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1001DA348()
{
  return sub_1001D9E70(v0 + 16);
}

uint64_t sub_1001DA350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001DA360()
{
  return swift_release();
}

uint64_t sub_1001DA368()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 104);

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1001DA3D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001D9528(v1 + 16, (void *)(v1 + 104), a1);
}

uint64_t sub_1001DA3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003879C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DA45C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001DA4A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for QuestionnaireLikeButton()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for QuestionnaireLikeButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for QuestionnaireLikeButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QuestionnaireLikeButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireLikeButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireLikeButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireLikeButton()
{
  return &type metadata for QuestionnaireLikeButton;
}

uint64_t sub_1001DA7A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001DA7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v17 = sub_100004010(&qword_100380E00);
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_10038D310);
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  Swift::String v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v19 = *(void *)(v8 + 16);
  uint64_t v20 = v9;
  sub_100033310();
  swift_bridgeObjectRetain();
  swift_retain();
  Button<>.init<A>(_:action:)();
  uint64_t v10 = *v1;
  if (*v1)
  {
    uint64_t v11 = v1[3];
    uint64_t v12 = v1[4];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v19 = KeyPath;
    LOBYTE(v20) = 0;
    uint64_t v21 = v8;
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    uint64_t v24 = v11;
    uint64_t v25 = v12;
    char v26 = 0;
    uint64_t v27 = v10;
    sub_100009B18(&qword_100380E08, &qword_100380E00);
    sub_1001DE7BC();
    swift_retain();
    swift_retain();
    uint64_t v14 = v17;
    View.buttonStyle<A>(_:)();
    sub_10004C738(KeyPath, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v16);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001DF224((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    swift_retain();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001DAAC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v2 = sub_100004010(&qword_100380E00);
  uint64_t v17 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_10038D310);
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  Swift::String v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = *((_OWORD *)v1 + 1);
  long long v19 = *((_OWORD *)v1 + 1);
  sub_100039BF8((uint64_t)&v27);
  sub_100033310();
  swift_retain();
  Button<>.init<A>(_:action:)();
  type metadata accessor for OptionPresentation();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v27;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  swift_bridgeObjectRetain();
  *(void *)(v8 + 64) = static Color.clear.getter();
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = 0;
  uint64_t v9 = v1[5];
  uint64_t v10 = *v1;
  if (*v1)
  {
    uint64_t v11 = v1[4];
    char v12 = *((unsigned char *)v1 + 48);
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&long long v19 = KeyPath;
    BYTE8(v19) = 0;
    uint64_t v20 = v8;
    uint64_t v21 = v11;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v22 = v9;
    char v25 = v12;
    uint64_t v26 = v10;
    sub_100009B18(&qword_100380E08, &qword_100380E00);
    sub_1001DE7BC();
    swift_bridgeObjectRetain();
    swift_retain();
    View.buttonStyle<A>(_:)();
    sub_10004C738(KeyPath, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v16);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001DF224((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    swift_bridgeObjectRetain();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001DADF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  uint64_t v52 = a1;
  uint64_t v49 = sub_100004010(&qword_100380ED8);
  __chkstk_darwin(v49);
  uint64_t v50 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v45);
  uint64_t v6 = (double *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for OpacityTransition();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v44 = sub_100004010(&qword_10038D320);
  __chkstk_darwin(v44);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004010(&qword_10038D328);
  uint64_t v16 = __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v46 = (uint64_t)&v43 - v18;
  long long v19 = (void *)v2[8];
  uint64_t v20 = v19[9];
  uint64_t v21 = v19[10];
  sub_100008F88(v19 + 6, v20);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 24))(v54, v20, v21);
  uint64_t v43 = static HorizontalAlignment.center.getter();
  sub_1001DB370((uint64_t)v2, v52, &v53);
  uint64_t v22 = v53;
  OpacityTransition.init()();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_1001DF224(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v23 = AnyTransition.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  uint64_t v24 = *v2;
  LOBYTE(v7) = *((unsigned char *)v3 + 8);
  sub_10004C6D4(*v3, v7);
  LOBYTE(v3) = sub_10004EE90(v24, v7);
  sub_10004C738(v24, v7);
  if (v3)
  {
    uint64_t v25 = v55;
    uint64_t v26 = v56;
    sub_100008F88(v54, v55);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 192))(v25, v26);
  }
  else
  {
    id v28 = [self systemGrayColor];
    uint64_t v27 = Color.init(uiColor:)();
  }
  uint64_t v29 = v27;
  char v30 = static Edge.Set.all.getter();
  uint64_t v31 = v55;
  uint64_t v32 = v56;
  sub_100008F88(v54, v55);
  double v33 = (*(double (**)(uint64_t, uint64_t))(v32 + 176))(v31, v32);
  char v34 = (char *)v6 + *(int *)(v45 + 20);
  uint64_t v35 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v36 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
  *uint64_t v6 = v33;
  v6[1] = v33;
  uint64_t v37 = v50;
  sub_100034580((uint64_t)v6, v50);
  *(_WORD *)(v37 + *(int *)(v49 + 36)) = 256;
  sub_10000D2A0(v37, (uint64_t)&v15[*(int *)(v44 + 36)], &qword_100380ED8);
  *(void *)uint64_t v15 = v43;
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  *((void *)v15 + 3) = v22;
  *((void *)v15 + 4) = v23;
  v15[40] = 0;
  *((void *)v15 + 6) = v29;
  v15[56] = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000950C(v37, &qword_100380ED8);
  sub_1000345E4((uint64_t)v6);
  swift_release();
  swift_release();
  swift_release();
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v38 = 0.8;
  }
  else {
    double v38 = 1.0;
  }
  uint64_t v39 = v47;
  sub_10000D2A0((uint64_t)v15, v47, &qword_10038D320);
  *(double *)(v39 + *(int *)(v48 + 36)) = v38;
  sub_10000950C((uint64_t)v15, &qword_10038D320);
  uint64_t v40 = v39;
  uint64_t v41 = v46;
  sub_10000D544(v40, v46, &qword_10038D328);
  sub_10000D544(v41, v51, &qword_10038D328);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v54);
}

uint64_t sub_1001DB370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v5 = sub_100004010(&qword_10038D330);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10038D338);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_10038D340);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004010(&qword_10038D348);
  __chkstk_darwin(v14);
  if (*(unsigned char *)(a1 + 56))
  {
    sub_1001DB644((uint64_t)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_1001DEB8C(&qword_10038D3F0, &qword_10038D348, (void (*)(void))sub_1000E7BB0);
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  if (!*(void *)(v16 + 40) && !*(void *)(v16 + 56))
  {
    uint64_t v18 = *(void *)(a1 + 32);
    if ((v18 & 0x2000000000000000) != 0)
    {
      if ((v18 & 0xF00000000000000) != 0) {
        goto LABEL_9;
      }
    }
    else if ((*(void *)(a1 + 24) & 0xFFFFFFFFFFFFLL) != 0)
    {
LABEL_9:
      sub_1001DC724((uint64_t)v7);
      sub_1001DEB8C(&qword_10038D350, &qword_10038D330, (void (*)(void))sub_1001DEAEC);
      goto LABEL_6;
    }
    sub_1001DC0EC(a2, (uint64_t)v10);
    sub_1001DEB8C(&qword_10038D378, &qword_10038D338, (void (*)(void))sub_1001DEC08);
    goto LABEL_6;
  }
  sub_1001DBD3C(a2, (uint64_t)v13);
  sub_1001DEEC0();
LABEL_6:
  uint64_t result = AnyView.init<A>(_:)();
  *uint64_t v20 = result;
  return result;
}

uint64_t sub_1001DB644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v51 = type metadata accessor for ControlSize();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v48 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v46 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_10037F118);
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004010(&qword_10037F120);
  uint64_t v8 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_10037F128);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004010(&qword_100382080) - 8;
  __chkstk_darwin(v49);
  uint64_t v44 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(v1 + 64);
  uint64_t v18 = v16[9];
  uint64_t v17 = v16[10];
  sub_100008F88(v16 + 6, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 24))(v53, v18, v17);
  ProgressView<>.init<>()();
  CircularProgressViewStyle.init()();
  sub_100009B18(&qword_10037F210, &qword_10037F118);
  sub_1001DF224(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
  uint64_t v19 = v5;
  uint64_t v20 = v45;
  View.progressViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v19);
  uint64_t v21 = v50;
  uint64_t v22 = v48;
  uint64_t v23 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v48, enum case for ControlSize.regular(_:), v51);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t v26 = sub_100004010(&qword_10037F228);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))((char *)v25 + *(int *)(v26 + 28), v22, v23);
  *uint64_t v25 = KeyPath;
  uint64_t v27 = v47;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v47);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  uint64_t v28 = v54;
  uint64_t v29 = v55;
  sub_100008F88(v53, v54);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 216))(v28, v29);
  uint64_t v31 = swift_getKeyPath();
  *(void *)&long long v56 = v30;
  swift_retain();
  uint64_t v32 = AnyShapeStyle.init<A>(_:)();
  uint64_t v33 = v44;
  sub_10000D2A0((uint64_t)v14, v44, &qword_10037F128);
  swift_release();
  char v34 = (uint64_t *)(v33 + *(int *)(v49 + 44));
  uint64_t *v34 = v31;
  v34[1] = v32;
  sub_10000950C((uint64_t)v14, &qword_10037F128);
  uint64_t v35 = v54;
  uint64_t v36 = v55;
  sub_100008F88(v53, v54);
  (*(void (**)(uint64_t, uint64_t))(v36 + 184))(v35, v36);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v37 = v52;
  sub_10000D2A0(v33, v52, &qword_100382080);
  double v38 = (_OWORD *)(v37 + *(int *)(sub_100004010(&qword_10038D348) + 36));
  long long v39 = v61;
  v38[4] = v60;
  v38[5] = v39;
  v38[6] = v62;
  long long v40 = v57;
  _OWORD *v38 = v56;
  v38[1] = v40;
  long long v41 = v59;
  v38[2] = v58;
  v38[3] = v41;
  sub_10000950C(v33, &qword_100382080);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v53);
}

uint64_t sub_1001DBD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_100004010(&qword_10038D3F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038D400);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_10038D3E8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v2 + 64);
  uint64_t v16 = v14[9];
  uint64_t v15 = v14[10];
  sub_100008F88(v14 + 6, v16);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 24))(v40, v16, v15);
  *(void *)uint64_t v13 = static HorizontalAlignment.leading.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v17 = (uint64_t)&v13[*(int *)(sub_100004010(&qword_10038D408) + 44)];
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v18 = sub_100004010(&qword_10038D410);
  sub_1001DDB38(v2, v40, a1, (uint64_t)&v6[*(int *)(v18 + 44)]);
  uint64_t v19 = v41;
  uint64_t v20 = v42;
  sub_100008F88(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v20 + 224))(v19, v20);
  LOBYTE(v19) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_10000D2A0((uint64_t)v6, (uint64_t)v10, &qword_10038D3F8);
  uint64_t v29 = &v10[*(int *)(v8 + 44)];
  char *v29 = v19;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_10000950C((uint64_t)v6, &qword_10038D3F8);
  sub_10000D544((uint64_t)v10, v17, &qword_10038D400);
  uint64_t v30 = v41;
  uint64_t v31 = v42;
  sub_100008F88(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v31 + 184))(v30, v31);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v32 = v39;
  sub_10000D2A0((uint64_t)v13, v39, &qword_10038D3E8);
  uint64_t v33 = (_OWORD *)(v32 + *(int *)(sub_100004010(&qword_10038D340) + 36));
  long long v34 = v48;
  v33[4] = v47;
  v33[5] = v34;
  v33[6] = v49;
  long long v35 = v44;
  _OWORD *v33 = v43;
  v33[1] = v35;
  long long v36 = v46;
  v33[2] = v45;
  v33[3] = v36;
  sub_10000950C((uint64_t)v13, &qword_10038D3E8);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v40);
}

uint64_t sub_1001DC0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v55[1] = a1;
  uint64_t v61 = a2;
  v55[0] = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v55[0] - 8);
  __chkstk_darwin(v55[0]);
  uint64_t v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10038D3C8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_10038D3B8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004010(&qword_10038D3A8) - 8;
  __chkstk_darwin(v57);
  uint64_t v56 = (uint64_t)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100004010(&qword_10038D398) - 8;
  __chkstk_darwin(v59);
  uint64_t v58 = (uint64_t)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004010(&qword_10038D388) - 8;
  __chkstk_darwin(v60);
  uint64_t v17 = (char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)(v2 + 64);
  uint64_t v20 = v18[9];
  uint64_t v19 = v18[10];
  sub_100008F88(v18 + 6, v20);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 24))(v62, v20, v19);
  ButtonStyleConfiguration.label.getter();
  uint64_t v21 = v55[0];
  (*(void (**)(char *, char *, void))(v3 + 16))(v9, v5, v55[0]);
  v9[*(int *)(v7 + 44)] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  uint64_t v22 = v63;
  uint64_t v23 = v64;
  sub_100008F88(v62, v63);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 216))(v22, v23);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000D2A0((uint64_t)v9, (uint64_t)v13, &qword_10038D3C8);
  uint64_t v26 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  uint64_t *v26 = KeyPath;
  v26[1] = v24;
  sub_10000950C((uint64_t)v9, &qword_10038D3C8);
  uint64_t v27 = v63;
  uint64_t v28 = v64;
  sub_100008F88(v62, v63);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 200))(v27, v28);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v56;
  sub_10000D2A0((uint64_t)v13, v56, &qword_10038D3B8);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(v57 + 44));
  *uint64_t v32 = v30;
  v32[1] = v29;
  sub_10000950C((uint64_t)v13, &qword_10038D3B8);
  uint64_t v33 = v63;
  uint64_t v34 = v64;
  sub_100008F88(v62, v63);
  (*(void (**)(uint64_t, uint64_t))(v34 + 224))(v33, v34);
  LOBYTE(v33) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = v58;
  sub_10000D2A0(v31, v58, &qword_10038D3A8);
  uint64_t v44 = v43 + *(int *)(v59 + 44);
  *(unsigned char *)uint64_t v44 = v33;
  *(void *)(v44 + 8) = v36;
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v40;
  *(void *)(v44 + 32) = v42;
  *(unsigned char *)(v44 + 40) = 0;
  sub_10000950C(v31, &qword_10038D3A8);
  uint64_t v45 = swift_getKeyPath();
  sub_10000D2A0(v43, (uint64_t)v17, &qword_10038D398);
  long long v46 = &v17[*(int *)(v60 + 44)];
  *(void *)long long v46 = v45;
  v46[8] = 1;
  sub_10000950C(v43, &qword_10038D398);
  uint64_t v47 = v63;
  uint64_t v48 = v64;
  sub_100008F88(v62, v63);
  (*(void (**)(uint64_t, uint64_t))(v48 + 184))(v47, v48);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v49 = v61;
  sub_10000D2A0((uint64_t)v17, v61, &qword_10038D388);
  uint64_t v50 = (_OWORD *)(v49 + *(int *)(sub_100004010(&qword_10038D338) + 36));
  long long v51 = v70;
  v50[4] = v69;
  v50[5] = v51;
  v50[6] = v71;
  long long v52 = v66;
  *uint64_t v50 = v65;
  v50[1] = v52;
  long long v53 = v68;
  v50[2] = v67;
  v50[3] = v53;
  sub_10000950C((uint64_t)v17, &qword_10038D388);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v62);
}

uint64_t sub_1001DC724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004010(&qword_10038D370);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10038D360);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + 64);
  uint64_t v11 = v10[9];
  uint64_t v12 = v10[10];
  sub_100008F88(v10 + 6, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 24))(v33, v11, v12);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v13 = sub_100004010(&qword_10038D4D0);
  sub_1001DCA4C(v33, v1, (uint64_t)&v5[*(int *)(v13 + 44)]);
  uint64_t v14 = v34;
  uint64_t v15 = v35;
  sub_100008F88(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v15 + 224))(v14, v15);
  char v16 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_10000D2A0((uint64_t)v5, (uint64_t)v9, &qword_10038D370);
  uint64_t v25 = &v9[*(int *)(v7 + 44)];
  *uint64_t v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_10000950C((uint64_t)v5, &qword_10038D370);
  uint64_t v26 = v34;
  uint64_t v27 = v35;
  sub_100008F88(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v27 + 184))(v26, v27);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10000D2A0((uint64_t)v9, a1, &qword_10038D360);
  uint64_t v28 = (_OWORD *)(a1 + *(int *)(sub_100004010(&qword_10038D330) + 36));
  long long v29 = v41;
  v28[4] = v40;
  v28[5] = v29;
  v28[6] = v42;
  long long v30 = v37;
  _OWORD *v28 = v36;
  v28[1] = v30;
  long long v31 = v39;
  void v28[2] = v38;
  v28[3] = v31;
  sub_10000950C((uint64_t)v9, &qword_10038D360);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v33);
}

uint64_t sub_1001DCA4C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v101 = a3;
  uint64_t v88 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v4 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038D418);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIContentSizeCategory v97 = (UIContentSizeCategory)(sub_100004010(&qword_10038D420) - 8);
  __chkstk_darwin(v97);
  uint64_t v86 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004010(&qword_100389C38) - 8;
  __chkstk_darwin(v98);
  uint64_t v87 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_100389C40);
  __chkstk_darwin(v13 - 8);
  uint64_t v89 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100004010(&qword_10038D428) - 8;
  uint64_t v15 = __chkstk_darwin(v92);
  uint64_t v100 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v90 = (uint64_t)&v85 - v18;
  __chkstk_darwin(v17);
  uint64_t v102 = (uint64_t)&v85 - v19;
  ButtonStyleConfiguration.label.getter();
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  uint64_t v96 = v21;
  uint64_t v22 = sub_100008F88(a1, v21);
  uint64_t v95 = v20;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v20 + 216);
  unint64_t v93 = v22;
  v94 = v23;
  uint64_t v24 = ((uint64_t (*)(uint64_t, uint64_t))v23)(v21, v20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v10, v6, v88);
  uint64_t v27 = (uint64_t *)(v10 + *(int *)(v8 + 44));
  *uint64_t v27 = KeyPath;
  v27[1] = v24;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  v91 = a1;
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  sub_100008F88(a1, v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 200))(v28, v29);
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = v86;
  sub_10000D2A0(v10, v86, &qword_10038D418);
  uint64_t v33 = (uint64_t *)(v32 + *((int *)v97 + 11));
  uint64_t *v33 = v31;
  v33[1] = v30;
  sub_10000950C(v10, &qword_10038D418);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = v87;
  sub_10000D2A0(v32, v87, &qword_10038D420);
  uint64_t v36 = v35 + *(int *)(v98 + 44);
  *(void *)uint64_t v36 = v34;
  *(unsigned char *)(v36 + 8) = 1;
  sub_10000950C(v32, &qword_10038D420);
  uint64_t v37 = static Alignment.center.getter();
  uint64_t v38 = v89;
  sub_100167F84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v89, 0.0, 1, 0.0, 1, v37, v39);
  sub_10000950C(v35, &qword_100389C38);
  uint64_t v40 = v99;
  uint64_t v98 = *(void *)(v99 + 64);
  long long v41 = *(void **)(v98 + 112);
  UIContentSizeCategory v97 = UIContentSizeCategoryAccessibilityExtraLarge;
  id v42 = v41;
  LOBYTE(v10) = static UIContentSizeCategory.>= infix(_:_:)();

  double v43 = 0.5;
  if (v10) {
    double v44 = 1.0;
  }
  else {
    double v44 = 0.5;
  }
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v90;
  sub_10000D2A0(v38, v90, &qword_100389C40);
  uint64_t v47 = v46 + *(int *)(v92 + 44);
  *(void *)uint64_t v47 = v45;
  *(double *)(v47 + 8) = v44;
  sub_10000950C(v38, &qword_100389C40);
  sub_10000D544(v46, v102, &qword_10038D428);
  uint64_t v48 = *(void *)(v40 + 32);
  *(void *)&v114[0] = *(void *)(v40 + 24);
  *((void *)&v114[0] + 1) = v48;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v49 = Text.init<A>(_:)();
  uint64_t v51 = v50;
  char v53 = v52 & 1;
  v94(v96, v95);
  uint64_t v54 = Text.foregroundColor(_:)();
  uint64_t v56 = v55;
  char v58 = v57;
  swift_release();
  sub_100033364(v49, v51, v53);
  swift_bridgeObjectRelease();
  uint64_t v59 = v91[3];
  uint64_t v60 = v91[4];
  sub_100008F88(v91, v59);
  (*(void (**)(uint64_t, uint64_t))(v60 + 208))(v59, v60);
  uint64_t v61 = Text.font(_:)();
  uint64_t v63 = v62;
  char v65 = v64;
  uint64_t v67 = v66;
  swift_release();
  v65 &= 1u;
  sub_100033364(v54, v56, v58 & 1);
  swift_bridgeObjectRelease();
  uint64_t v68 = swift_getKeyPath();
  uint64_t v127 = v61;
  uint64_t v128 = v63;
  char v129 = v65;
  uint64_t v130 = v67;
  uint64_t v131 = v68;
  char v132 = 1;
  static Alignment.center.getter();
  sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v117, 0.0, 1, 0.0, 1);
  sub_100033364(v61, v63, v65);
  swift_release();
  swift_bridgeObjectRelease();
  id v69 = *(id *)(v98 + 112);
  LOBYTE(v67) = static UIContentSizeCategory.>= infix(_:_:)();

  if (v67) {
    double v43 = 1.0;
  }
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = v102;
  uint64_t v72 = v100;
  sub_10000D2A0(v102, v100, &qword_10038D428);
  uint64_t v73 = v101;
  sub_10000D2A0(v72, v101, &qword_10038D428);
  uint64_t v74 = (_OWORD *)(v73 + *(int *)(sub_100004010(&qword_10038D4D8) + 48));
  long long v109 = v123;
  long long v110 = v124;
  long long v111 = v125;
  long long v112 = v126;
  long long v107 = v121;
  long long v108 = v122;
  long long v75 = v119;
  long long v105 = v119;
  long long v106 = v120;
  long long v103 = v117;
  long long v104 = v118;
  *(void *)&long long v113 = v70;
  *((double *)&v113 + 1) = v43;
  long long v76 = v124;
  long long v77 = v126;
  long long v78 = v113;
  v74[8] = v125;
  v74[9] = v77;
  long long v79 = v106;
  long long v80 = v107;
  v74[2] = v75;
  v74[3] = v79;
  long long v81 = v108;
  long long v82 = v109;
  v74[4] = v80;
  v74[5] = v81;
  v74[6] = v82;
  void v74[7] = v76;
  long long v83 = v104;
  *uint64_t v74 = v103;
  v74[1] = v83;
  v74[10] = v78;
  sub_1000439C8((uint64_t)&v103);
  sub_10000950C(v71, &qword_10038D428);
  v114[6] = v123;
  v114[7] = v124;
  v114[8] = v125;
  v114[9] = v126;
  v114[2] = v119;
  v114[3] = v120;
  v114[4] = v121;
  v114[5] = v122;
  v114[0] = v117;
  v114[1] = v118;
  uint64_t v115 = v70;
  double v116 = v43;
  sub_100043A24((uint64_t)v114);
  return sub_10000950C(v72, &qword_10038D428);
}

uint64_t sub_1001DD2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v53 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v53);
  uint64_t v59 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_10038D490);
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4);
  uint64_t v55 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100004010(&qword_10038D498);
  uint64_t v6 = __chkstk_darwin(v61);
  uint64_t v54 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v58 = (uint64_t)&v49 - v8;
  uint64_t v64 = sub_100004010(&qword_10038D4A0);
  __chkstk_darwin(v64);
  uint64_t v65 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004010(&qword_10038D4A8);
  __chkstk_darwin(v60);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_10038D4B0);
  __chkstk_darwin(v63);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Image.ResizingMode();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004010(&qword_10038D4B8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void **)(a1 + 64);
  uint64_t v22 = v21[9];
  uint64_t v23 = v21[10];
  sub_100008F88(v21 + 6, v22);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 24))(v69, v22, v23);
  uint64_t v24 = *(void **)(a1 + 16);
  if (v24[5])
  {
    swift_bridgeObjectRetain();
    Image.init(_:bundle:)();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.ResizingMode.stretch(_:), v14);
    uint64_t v25 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(void *)uint64_t v11 = v25;
    *((void *)v11 + 1) = 0;
    *((_WORD *)v11 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_100004010(&qword_100380F10);
    sub_10003F5C0();
    sub_1001DF100();
    _ConditionalContent<>.init(storage:)();
    sub_10000D2A0((uint64_t)v13, v65, &qword_10038D4B0);
    swift_storeEnumTagMultiPayload();
    sub_1001DF084();
    _ConditionalContent<>.init(storage:)();
    sub_10000950C((uint64_t)v13, &qword_10038D4B0);
    swift_release();
LABEL_7:
    sub_10000D544((uint64_t)v20, v62, &qword_10038D4B8);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v69);
  }
  uint64_t v26 = v59;
  uint64_t v51 = v11;
  uint64_t v50 = v13;
  char v52 = v20;
  uint64_t v27 = v65;
  if (!v24[7])
  {
    swift_storeEnumTagMultiPayload();
    sub_1001DF084();
    uint64_t v20 = v52;
    _ConditionalContent<>.init(storage:)();
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = Image.init(systemName:)();
  uint64_t v29 = v70;
  uint64_t v30 = v71;
  sub_100008F88(v69, v70);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 200))(v29, v30);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = v28;
  uint64_t v67 = KeyPath;
  uint64_t v68 = v31;
  uint64_t v33 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v34 = type metadata accessor for DynamicTypeSize();
  uint64_t v35 = (uint64_t)v26;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v26, v33, v34);
  sub_1001DF224(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v37 = v27;
    sub_100004010(&qword_10037F1D8);
    sub_10000C9A4();
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    uint64_t v38 = v55;
    View.dynamicTypeSize<A>(_:)();
    sub_10000950C(v35, &qword_10037F010);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v39 = v24[8];
    uint64_t v40 = swift_getKeyPath();
    uint64_t v42 = v56;
    uint64_t v41 = v57;
    double v43 = v54;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v38, v57);
    double v44 = (uint64_t *)&v43[*(int *)(v61 + 36)];
    *double v44 = v40;
    v44[1] = v39;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    swift_retain();
    v45(v38, v41);
    uint64_t v46 = (uint64_t)v43;
    uint64_t v47 = v58;
    sub_10000D544(v46, v58, &qword_10038D498);
    sub_10000D2A0(v47, (uint64_t)v51, &qword_10038D498);
    swift_storeEnumTagMultiPayload();
    sub_100004010(&qword_100380F10);
    sub_10003F5C0();
    sub_1001DF100();
    uint64_t v48 = (uint64_t)v50;
    _ConditionalContent<>.init(storage:)();
    sub_10000D2A0(v48, v37, &qword_10038D4B0);
    swift_storeEnumTagMultiPayload();
    sub_1001DF084();
    uint64_t v20 = v52;
    _ConditionalContent<>.init(storage:)();
    sub_10000950C(v48, &qword_10038D4B0);
    sub_10000950C(v47, &qword_10038D498);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DDB38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v116 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v114 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  long long v112 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100004010(&qword_10038D418);
  __chkstk_darwin(v111);
  long long v117 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004010(&qword_10038D420);
  __chkstk_darwin(v113);
  uint64_t v119 = (uint64_t)v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100004010(&qword_100389C38);
  __chkstk_darwin(v118);
  uint64_t v120 = (uint64_t)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100389C40);
  __chkstk_darwin(v12 - 8);
  uint64_t v123 = (uint64_t)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100004010(&qword_10038D428);
  uint64_t v14 = __chkstk_darwin(v122);
  uint64_t v16 = (char *)v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v121 = (uint64_t)v99 - v18;
  __chkstk_darwin(v17);
  uint64_t v124 = (uint64_t)v99 - v19;
  uint64_t v20 = sub_100004010(&qword_10038D430);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004010(&qword_100389C48);
  __chkstk_darwin(v102);
  uint64_t v24 = (char *)v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004010(&qword_100389C50);
  __chkstk_darwin(v25 - 8);
  uint64_t v104 = (uint64_t)v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100004010(&qword_10038D438);
  __chkstk_darwin(v106);
  uint64_t v105 = (uint64_t)v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100004010(&qword_10038D440);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  long long v103 = (char *)v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004010(&qword_10038D448);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v115 = (uint64_t)v99 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)v99 - v32;
  uint64_t v34 = a1;
  uint64_t v109 = *(void *)(a1 + 64);
  id v35 = *(id *)(v109 + 112);
  UIContentSizeCategory v110 = UIContentSizeCategoryAccessibilityExtraLarge;
  char v36 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v33, 1, 1, v108);
  }
  else
  {
    double v37 = *(double *)(v34 + 40);
    double v38 = *(double *)(v34 + 48);
    v99[1] = a3;
    uint64_t v40 = a2[3];
    uint64_t v39 = a2[4];
    sub_100008F88(a2, v40);
    uint64_t v101 = a4;
    uint64_t v100 = v16;
    uint64_t v41 = *(double (**)(uint64_t, uint64_t))(v39 + 240);
    double v42 = v41(v40, v39);
    if (v37 <= v42) {
      double v37 = v42;
    }
    v41(v40, v39);
    if (v38 <= v43) {
      double v38 = v43;
    }
    *(void *)uint64_t v22 = static HorizontalAlignment.center.getter();
    *((void *)v22 + 1) = 0;
    v22[16] = 1;
    uint64_t v44 = sub_100004010(&qword_10038D450);
    sub_1001DD2D0(v34, (uint64_t)&v22[*(int *)(v44 + 44)]);
    uint64_t v45 = static Alignment.center.getter();
    uint64_t v47 = v46;
    sub_10000D2A0((uint64_t)v22, (uint64_t)v24, &qword_10038D430);
    uint64_t v48 = (uint64_t *)&v24[*(int *)(v102 + 36)];
    *uint64_t v48 = v45;
    v48[1] = v47;
    a4 = v101;
    sub_10000950C((uint64_t)v22, &qword_10038D430);
    uint64_t v49 = static Alignment.center.getter();
    uint64_t v16 = v100;
    uint64_t v50 = v104;
    sub_100167FE0(v37, 0, 0.0, 1, v37, 0, v38, 0, v104, 0.0, 1, v38, 0, v49, v51);
    sub_10000950C((uint64_t)v24, &qword_100389C48);
    uint64_t v52 = a2[3];
    uint64_t v53 = a2[4];
    sub_100008F88(a2, v52);
    double v54 = (*(double (**)(uint64_t, uint64_t))(v53 + 264))(v52, v53);
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    LOBYTE(v52) = static Edge.Set.all.getter();
    uint64_t v61 = v105;
    sub_10000D2A0(v50, v105, &qword_100389C50);
    uint64_t v62 = v61 + *(int *)(v106 + 36);
    *(unsigned char *)uint64_t v62 = v52;
    *(double *)(v62 + 8) = v54;
    *(void *)(v62 + 16) = v56;
    *(void *)(v62 + 24) = v58;
    *(void *)(v62 + 32) = v60;
    *(unsigned char *)(v62 + 40) = 0;
    sub_10000950C(v50, &qword_100389C50);
    sub_1001DEB8C(&qword_10038D458, &qword_10038D438, (void (*)(void))sub_1001DEF70);
    uint64_t v63 = (uint64_t)v103;
    View.accessibilityHidden(_:)();
    sub_10000950C(v61, &qword_10038D438);
    sub_10000D544(v63, (uint64_t)v33, &qword_10038D440);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v33, 0, 1, v108);
  }
  uint64_t v64 = (uint64_t)v33;
  uint64_t v65 = v112;
  ButtonStyleConfiguration.label.getter();
  uint64_t v66 = a2[3];
  uint64_t v67 = a2[4];
  sub_100008F88(a2, v66);
  uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 216))(v66, v67);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v70 = v114;
  uint64_t v71 = v116;
  uint64_t v72 = (uint64_t)v117;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v117, v65, v116);
  uint64_t v73 = (uint64_t *)(v72 + *(int *)(v111 + 36));
  *uint64_t v73 = KeyPath;
  v73[1] = v68;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v71);
  uint64_t v74 = a2[3];
  uint64_t v75 = a2[4];
  sub_100008F88(a2, v74);
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 200))(v74, v75);
  uint64_t v77 = swift_getKeyPath();
  uint64_t v78 = v119;
  sub_10000D2A0(v72, v119, &qword_10038D418);
  long long v79 = (uint64_t *)(v78 + *(int *)(v113 + 36));
  uint64_t *v79 = v77;
  v79[1] = v76;
  sub_10000950C(v72, &qword_10038D418);
  uint64_t v80 = v109;
  id v81 = *(id *)(v109 + 112);
  LOBYTE(v77) = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v82 = swift_getKeyPath();
  uint64_t v83 = v120;
  sub_10000D2A0(v78, v120, &qword_10038D420);
  uint64_t v84 = v83 + *(int *)(v118 + 36);
  *(void *)uint64_t v84 = v82;
  *(unsigned char *)(v84 + 8) = v77 & 1;
  sub_10000950C(v78, &qword_10038D420);
  id v85 = *(id *)(v80 + 112);
  LOBYTE(v77) = static UIContentSizeCategory.>= infix(_:_:)();

  if (v77) {
    uint64_t v86 = static Alignment.center.getter();
  }
  else {
    uint64_t v86 = static Alignment.leading.getter();
  }
  uint64_t v88 = v123;
  sub_100167F84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v123, 0.0, 1, 0.0, 1, v86, v87);
  sub_10000950C(v83, &qword_100389C38);
  id v89 = *(id *)(v80 + 112);
  char v90 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v90) {
    double v91 = 1.0;
  }
  else {
    double v91 = 0.5;
  }
  uint64_t v92 = swift_getKeyPath();
  uint64_t v93 = v121;
  sub_10000D2A0(v88, v121, &qword_100389C40);
  uint64_t v94 = v93 + *(int *)(v122 + 36);
  *(void *)uint64_t v94 = v92;
  *(double *)(v94 + 8) = v91;
  sub_10000950C(v88, &qword_100389C40);
  uint64_t v95 = v124;
  sub_10000D544(v93, v124, &qword_10038D428);
  uint64_t v96 = v115;
  sub_10000D2A0(v64, v115, &qword_10038D448);
  sub_10000D2A0(v95, (uint64_t)v16, &qword_10038D428);
  sub_10000D2A0(v96, a4, &qword_10038D448);
  uint64_t v97 = sub_100004010(&qword_10038D488);
  sub_10000D2A0((uint64_t)v16, a4 + *(int *)(v97 + 48), &qword_10038D428);
  sub_10000950C(v95, &qword_10038D428);
  sub_10000950C(v64, &qword_10038D448);
  sub_10000950C((uint64_t)v16, &qword_10038D428);
  return sub_10000950C(v96, &qword_10038D448);
}

uint64_t sub_1001DE660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001DADF8(a1, a2);
}

void sub_1001DE6A4()
{
  xmmword_1003A9C40 = 0uLL;
}

double sub_1001DE6B4@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10037DEA8 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_1003A9C40;
  *a1 = xmmword_1003A9C40;
  return result;
}

float64x2_t sub_1001DE710(float64x2_t *a1, void (*a2)(float64x2_t *__return_ptr))
{
  a2(&v4);
  float64x2_t result = (float64x2_t)vbslq_s8((int8x16_t)vcgeq_f64(v4, *a1), (int8x16_t)v4, *(int8x16_t *)a1);
  *a1 = result;
  return result;
}

uint64_t sub_1001DE764@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001DE794()
{
  return EnvironmentValues.isEnabled.setter();
}

unint64_t sub_1001DE7BC()
{
  unint64_t result = qword_10038D318;
  if (!qword_10038D318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D318);
  }
  return result;
}

uint64_t destroy for QuestionnaireButtonStyle(uint64_t a1)
{
  sub_10004C738(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for QuestionnaireButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10004C6D4(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for QuestionnaireButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10004C6D4(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10004C738(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QuestionnaireButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10004C738(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  swift_release();
  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 64) = a2[8];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for QuestionnaireButtonStyle()
{
  return &type metadata for QuestionnaireButtonStyle;
}

uint64_t sub_1001DEA3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001DEAD0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001DEAEC()
{
  unint64_t result = qword_10038D358;
  if (!qword_10038D358)
  {
    sub_1000094C4(&qword_10038D360);
    sub_100009B18(&qword_10038D368, &qword_10038D370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D358);
  }
  return result;
}

uint64_t sub_1001DEB8C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001DEC08()
{
  unint64_t result = qword_10038D380;
  if (!qword_10038D380)
  {
    sub_1000094C4(&qword_10038D388);
    sub_1001DEB8C(&qword_10038D390, &qword_10038D398, (void (*)(void))sub_1001DECD4);
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D380);
  }
  return result;
}

unint64_t sub_1001DECD4()
{
  unint64_t result = qword_10038D3A0;
  if (!qword_10038D3A0)
  {
    sub_1000094C4(&qword_10038D3A8);
    sub_1001DED74();
    sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D3A0);
  }
  return result;
}

unint64_t sub_1001DED74()
{
  unint64_t result = qword_10038D3B0;
  if (!qword_10038D3B0)
  {
    sub_1000094C4(&qword_10038D3B8);
    sub_1001DEE14();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D3B0);
  }
  return result;
}

unint64_t sub_1001DEE14()
{
  unint64_t result = qword_10038D3C0;
  if (!qword_10038D3C0)
  {
    sub_1000094C4(&qword_10038D3C8);
    sub_1001DF224(&qword_10038D3D0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_10005C708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D3C0);
  }
  return result;
}

unint64_t sub_1001DEEC0()
{
  unint64_t result = qword_10038D3D8;
  if (!qword_10038D3D8)
  {
    sub_1000094C4(&qword_10038D340);
    sub_100009B18(&qword_10038D3E0, &qword_10038D3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D3D8);
  }
  return result;
}

uint64_t sub_1001DEF70()
{
  return sub_1001DEB8C(&qword_10038D460, &qword_100389C50, (void (*)(void))sub_1001DEFA0);
}

unint64_t sub_1001DEFA0()
{
  unint64_t result = qword_10038D468;
  if (!qword_10038D468)
  {
    sub_1000094C4(&qword_100389C48);
    sub_100009B18(&qword_10038D470, &qword_10038D430);
    sub_100009B18(&qword_10038D478, &qword_10038D480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D468);
  }
  return result;
}

unint64_t sub_1001DF084()
{
  unint64_t result = qword_10038D4C0;
  if (!qword_10038D4C0)
  {
    sub_1000094C4(&qword_10038D4B0);
    sub_10003F5C0();
    sub_1001DF100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D4C0);
  }
  return result;
}

unint64_t sub_1001DF100()
{
  unint64_t result = qword_10038D4C8;
  if (!qword_10038D4C8)
  {
    sub_1000094C4(&qword_10038D498);
    sub_1000094C4(&qword_10037F1D8);
    sub_1000094C4(&qword_10037F010);
    sub_10000C9A4();
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D4C8);
  }
  return result;
}

uint64_t sub_1001DF224(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireButtonIconSizeKey()
{
  return &type metadata for QuestionnaireButtonIconSizeKey;
}

uint64_t sub_1001DF27C()
{
  return sub_1001DEB8C(&qword_10038D4E0, &qword_10038D328, (void (*)(void))sub_1001DF2C0);
}

unint64_t sub_1001DF2C0()
{
  unint64_t result = qword_10038D4E8;
  if (!qword_10038D4E8)
  {
    sub_1000094C4(&qword_10038D320);
    sub_1001DF360();
    sub_100009B18(&qword_100380F20, &qword_100380ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D4E8);
  }
  return result;
}

unint64_t sub_1001DF360()
{
  unint64_t result = qword_10038D4F0;
  if (!qword_10038D4F0)
  {
    sub_1000094C4(&qword_10038D4F8);
    sub_1001DF400();
    sub_100009B18(&qword_100387AF0, &qword_100387AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D4F0);
  }
  return result;
}

unint64_t sub_1001DF400()
{
  unint64_t result = qword_10038D500;
  if (!qword_10038D500)
  {
    sub_1000094C4(&qword_10038D508);
    sub_1001DF47C();
    sub_10005C708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D500);
  }
  return result;
}

unint64_t sub_1001DF47C()
{
  unint64_t result = qword_10038D510;
  if (!qword_10038D510)
  {
    sub_1000094C4(&qword_10038D518);
    sub_100009B18(&qword_10038D520, &qword_10038D528);
    sub_100009B18(&qword_100380E70, &qword_100380E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D510);
  }
  return result;
}

uint64_t destroy for QuestionnaireButton()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for QuestionnaireButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for QuestionnaireButton(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QuestionnaireButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for QuestionnaireButton()
{
  return &type metadata for QuestionnaireButton;
}

uint64_t sub_1001DF6E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ExplorerSuggestion(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExplorerSuggestion(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExplorerSuggestion(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ExplorerSuggestion()
{
  return &type metadata for ExplorerSuggestion;
}

uint64_t getEnumTagSinglePayload for GuidanceMessagesModel.StatesForStats(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExplorerSuggestion.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DF924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerSuggestion.Action()
{
  return &type metadata for ExplorerSuggestion.Action;
}

unint64_t sub_1001DF960()
{
  unint64_t result = qword_10038D530;
  if (!qword_10038D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D530);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectivityModel.ConnectivityStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExplorerSuggestion.Content(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DFB10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerSuggestion.Content()
{
  return &type metadata for ExplorerSuggestion.Content;
}

unint64_t sub_1001DFB4C()
{
  unint64_t result = qword_10038D538;
  if (!qword_10038D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038D538);
  }
  return result;
}

uint64_t type metadata accessor for HapticFeedbackFactory()
{
  return self;
}

uint64_t sub_1001DFBC8()
{
  uint64_t v1 = v0;
  type metadata accessor for HapticAgent();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1000B5094();
  type metadata accessor for ToneLibraryAgent();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_100193F6C();
  type metadata accessor for TorchAgent();
  swift_allocObject();
  *(void *)(v0 + 32) = sub_10018D68C();
  *(_OWORD *)(v0 + 40) = xmmword_1002BFD10;
  *(void *)(v0 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 72) = 0;
  int v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached);
  *int v2 = 4;
  int v3 = (int *)type metadata accessor for _HapticFeedback.Cached(0);
  unsigned int v4 = &v2[v3[5]];
  uint64_t v5 = type metadata accessor for DispatchTime();
  unsigned int v6 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(&v2[v3[6]], 1, 1, v5);
  v2[v3[7]] = 9;
  *(void *)&v2[v3[8]] = _swiftEmptySetSingleton;
  v2[v3[9]] = 0;
  BOOL v7 = &v2[v3[10]];
  *(void *)BOOL v7 = 0;
  v7[8] = 1;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9A48);
  swift_retain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    type metadata accessor for _HapticFeedback(0);
    swift_retain();
    uint64_t v12 = String.init<A>(describing:)();
    sub_1001B3178(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%{public}s] init", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_1001DFED8()
{
  uint64_t v1 = v0;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9A48);
  swift_retain_n();
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for _HapticFeedback(0);
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  sub_10002D3E4(v1 + 56);
  swift_release();
  sub_1001E11CC(v1 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached);
  return v1;
}

uint64_t sub_1001E00DC()
{
  sub_1001DFED8();

  return swift_deallocClassInstance();
}

uint64_t sub_1001E0130()
{
  return type metadata accessor for _HapticFeedback(0);
}

uint64_t type metadata accessor for _HapticFeedback(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D608);
}

uint64_t sub_1001E0158()
{
  uint64_t result = type metadata accessor for _HapticFeedback.Cached(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for _HapticFeedback.Cached(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D768);
}

void *sub_1001E0240(char *a1, char *a2, int *a3)
{
  os_log_type_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *os_log_type_t v4 = *(void *)a2;
    os_log_type_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for DispatchTime();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100004010(&qword_100380788);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = &a2[v15];
    if (v12(&a2[v15], 1, v10))
    {
      uint64_t v18 = sub_100004010(&qword_100380788);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    uint64_t v19 = a3[8];
    *((unsigned char *)v4 + a3[7]) = a2[a3[7]];
    *(void *)((char *)v4 + v19) = *(void *)&a2[v19];
    uint64_t v20 = a3[10];
    *((unsigned char *)v4 + a3[9]) = a2[a3[9]];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = &a2[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001E0494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }

  return swift_bridgeObjectRelease();
}

unsigned char *sub_1001E05B8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100004010(&qword_100380788);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1001E07BC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100004010(&qword_100380788);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  return a1;
}

unsigned char *sub_1001E0A90(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100004010(&qword_100380788);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  int v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)int v19 = *(void *)v20;
  v19[8] = v20[8];
  return a1;
}

unsigned char *sub_1001E0C90(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100004010(&qword_100380788);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  return a1;
}

uint64_t sub_1001E0F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E0F68);
}

uint64_t sub_1001E0F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004010(&qword_100380788);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1001E1030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1044);
}

uint64_t sub_1001E1044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004010(&qword_100380788);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

void sub_1001E1108()
{
  sub_10002D190();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1001E11CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _HapticFeedback.Cached(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1001E1228()
{
  uint64_t v1 = v0;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10000FDBC();
    swift_retain();
    uint64_t v2 = static OS_dispatch_queue.main.getter();
    sub_100004010(&qword_10038D7B8);
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
      uint64_t v4 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      uint64_t v4 = _swiftEmptySetSingleton;
    }
    *(void *)(v3 + 32) = v4;
    swift_weakAssign();
    swift_release();
    *(void *)(v3 + 24) = v2;
    uint64_t v5 = swift_retain();
    sub_1002A8A94(v5, (uint64_t)sub_1001E1528, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v6 = swift_retain();
    sub_1002A8A94(v6, (uint64_t)sub_1001E1708, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v7 = swift_retain();
    sub_1002A8A94(v7, (uint64_t)sub_1001E188C, 0);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1002A8D88(v8, (uint64_t)sub_1001E19F0, 0);
    swift_retain();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(v1 + 72) = v9;
    swift_release();
  }
  else
  {
    if (qword_10037DDD0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9A48);
    oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Unexpected _deps == nil", v12, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1001E1528()
{
  return sub_1001E154C();
}

uint64_t sub_1001E154C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)result;
    uint64_t v3 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
    swift_beginAccess();
    uint64_t v4 = type metadata accessor for _HapticFeedback.Cached(0);
    unsigned int v5 = *(unsigned __int8 *)(v3 + *(int *)(v4 + 28));
    uint64_t v6 = *(void *)(v2[6] + 96);
    int v7 = *(unsigned __int8 *)(*(void *)(v6 + 48) + 120);
    if (v5 == 9)
    {
      if (((1 << v7) & 0x1DF) == 0)
      {
        if (v7 != 5) {
          return swift_unknownObjectRelease();
        }
LABEL_16:
        if (*(unsigned char *)(v2[4] + 42))
        {
          uint64_t v9 = v2[27];
          uint64_t v10 = v2[28];
          sub_100008F88(v2 + 24, v9);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 104))(v9, v10) & 1) != 0 || sub_1001AD54C()) {
            sub_1001E23D4();
          }
        }
      }
    }
    else
    {
      if (v7 != 9 && v5 == v7) {
        return swift_unknownObjectRelease();
      }
      switch(*(unsigned char *)(*(void *)(v6 + 48) + 120))
      {
        case 1:
          if (v5 <= 1 && *(unsigned char *)(v2[4] + 41) != 6) {
            goto LABEL_16;
          }
          break;
        case 2:
          if (v5 < 2) {
            goto LABEL_16;
          }
          break;
        case 5:
          goto LABEL_16;
        default:
          break;
      }
    }
    swift_retain();
    swift_unknownObjectRelease();
    char v11 = *(unsigned char *)(*(void *)(v6 + 48) + 120);
    uint64_t result = swift_release();
    *(unsigned char *)(v3 + *(int *)(v4 + 28)) = v11;
  }
  return result;
}

uint64_t sub_1001E1708()
{
  return sub_1001E172C();
}

uint64_t sub_1001E172C()
{
  uint64_t v1 = v0;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    if ((sub_1001E2D40((uint64_t)&off_10034BC38, *(void *)(*(void *)(*(void *)(result + 48) + 56)+ OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1) != 0|| (uint64_t v4 = v3[4], *(unsigned char *)(v4 + 41) == 6)|| (*(unsigned char *)(v4 + 42) & 1) == 0)
    {
      BOOL v5 = 1;
    }
    else
    {
      uint64_t v10 = v3[27];
      uint64_t v11 = v3[28];
      sub_100008F88(v3 + 24, v10);
      BOOL v5 = ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 104))(v10, v11) & 1) == 0 && !sub_1001AD54C();
    }
    uint64_t v6 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
    swift_beginAccess();
    uint64_t v7 = type metadata accessor for _HapticFeedback.Cached(0);
    if ((sub_100078E0C(0, *(void *)(v6 + *(int *)(v7 + 32))) & 1) != 0 && !v5) {
      sub_1001E23D4();
    }
    uint64_t v8 = *(void *)(v3[6] + 56);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions);
    swift_bridgeObjectRetain();
    swift_release();
    *(void *)(v6 + *(int *)(v7 + 32)) = v9;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001E188C()
{
  return sub_1001E18B0();
}

uint64_t sub_1001E18B0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = Strong;
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(Strong + 56);
  swift_retain();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v3 + 88);
  swift_retain();
  swift_release();
  if (!v2) {
    goto LABEL_5;
  }
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 224);
  if (v4)
  {
    int v5 = 0;
    uint64_t v6 = *(void *)(v4 + 48);
  }
  else
  {
LABEL_5:
    uint64_t v6 = 0;
    int v5 = 1;
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
  swift_beginAccess();
  uint64_t v8 = type metadata accessor for _HapticFeedback.Cached(0);
  uint64_t v9 = v7 + *(int *)(v8 + 40);
  char v10 = *(unsigned char *)(v9 + 8);
  if (v5)
  {
    if (*(unsigned char *)(v9 + 8)) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  if (v6 != *(void *)v9) {
    char v10 = 1;
  }
  if (v10)
  {
LABEL_12:
    if (v2)
    {
      uint64_t v11 = *(void *)(v2 + 264);
      uint64_t v12 = *(void *)(v11 + 56);
      unint64_t v13 = *(void *)(v11 + 64);
      unint64_t v14 = *(void *)(v11 + 72);
      int v15 = *(unsigned __int8 *)(v11 + 80);
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      unint64_t v14 = 0;
      int v15 = 1;
    }
    sub_1001E27E0(v6, v5, v12, v13, v14, v15);
  }
LABEL_16:
  uint64_t result = swift_release();
  uint64_t v17 = v7 + *(int *)(v8 + 40);
  *(void *)uint64_t v17 = v6;
  *(unsigned char *)(v17 + 8) = v5;
  return result;
}

uint64_t sub_1001E19F0(uint64_t a1, char *a2)
{
  return sub_1001E1A18(*a2);
}

uint64_t sub_1001E1A18(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
  swift_beginAccess();
  *(unsigned char *)(v4 + *(int *)(type metadata accessor for _HapticFeedback.Cached(0) + 36)) = a1;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9A48);
  swift_retain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "onAppActiveChanged, haptic allowed: %{BOOL,public}d", v8, 8u);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  return sub_1001E28D0();
}

void sub_1001E1B9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for _HapticFeedback.Cached(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  *uint64_t v4 = 4;
  char v10 = &v4[v2[5]];
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(&v4[v2[6]], 1, 1, v11);
  v4[v2[7]] = 9;
  *(void *)&v4[v2[8]] = _swiftEmptySetSingleton;
  v4[v2[9]] = 0;
  unint64_t v13 = &v4[v2[10]];
  *(void *)unint64_t v13 = 0;
  v13[8] = 1;
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
  swift_beginAccess();
  sub_1001E2CDC((uint64_t)v4, v14);
  swift_endAccess();
  LOBYTE(v14) = sub_1000B5488();
  char v15 = sub_100195844();
  char v16 = sub_10018F694();
  if (v14 & 1) != 0 && (v15 & 1) != 0 && (v16) {
    return;
  }
  if (qword_10037DDD0 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000FD84(v17, (uint64_t)qword_1003A9A48);
  int v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to start hapticFeedback", v20, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1001E1EC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for _HapticFeedback.Cached(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    sub_10018DD34();
    sub_100194610();
    sub_1000B5AA8();
    *uint64_t v4 = 4;
    uint64_t v11 = &v4[v2[5]];
    uint64_t v12 = type metadata accessor for DispatchTime();
    unint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v11, 1, 1, v12);
    v13(&v4[v2[6]], 1, 1, v12);
    v4[v2[7]] = 9;
    *(void *)&v4[v2[8]] = _swiftEmptySetSingleton;
    v4[v2[9]] = 0;
    uint64_t v14 = &v4[v2[10]];
    *(void *)uint64_t v14 = 0;
    v14[8] = 1;
    uint64_t v15 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
    swift_beginAccess();
    sub_1001E2CDC((uint64_t)v4, v15);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001E2124(int a1)
{
  uint64_t v3 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached);
  swift_beginAccess();
  uint64_t v7 = type metadata accessor for _HapticFeedback.Cached(0);
  if (v6[*(int *)(v7 + 36)])
  {
    if (a1 == 1) {
      sub_1001E23D4();
    }
    else {
      sub_1000B6194(a1);
    }
  }
  else
  {
    uint64_t v8 = v7;
    if (qword_10037DDD0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000FD84(v9, (uint64_t)qword_1003A9A48);
    char v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v16 = v12 + 4;
      LOBYTE(v17) = a1;
      uint64_t v13 = String.init<A>(describing:)();
      uint64_t v17 = sub_1001B3178(v13, v14, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "onHapticRequired - %s not allowed right now, cached till allowed", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *uint64_t v6 = a1;
    static DispatchTime.now()();
    uint64_t v15 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 0, 1, v15);
    swift_beginAccess();
    sub_10002D2A8((uint64_t)v5, (uint64_t)&v6[*(int *)(v8 + 20)]);
    swift_endAccess();
  }
}

void sub_1001E23D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100380788);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v31 - v6;
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v31 - v13;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  v31[1] = sub_10000FD84(v15, (uint64_t)qword_1003A9A48);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "onUserActionRequired", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached;
  swift_beginAccess();
  uint64_t v20 = type metadata accessor for _HapticFeedback.Cached(0);
  sub_100173EF0(v19 + *(int *)(v20 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100156A1C((uint64_t)v7);
LABEL_15:
    static DispatchTime.now()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    swift_beginAccess();
    sub_10002D2A8((uint64_t)v5, v19 + *(int *)(v20 + 24));
    swift_endAccess();
    sub_1000B6194(1);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  static DispatchTime.now()();
  unint64_t v21 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v21)
  {
    uint64_t v25 = v12;
    uint64_t v26 = v5;
    unint64_t v24 = 0;
  }
  else
  {
    unint64_t v22 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t v23 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t v24 = v22 - v23;
    if (v22 < v23)
    {
      __break(1u);
      return;
    }
    uint64_t v25 = v12;
    uint64_t v26 = v5;
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27(v25, v8);
  v27(v14, v8);
  uint64_t v5 = v26;
  if (v24 > 0x2CB4177F) {
    goto LABEL_15;
  }
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "onUserActionRequired - throttled", v30, 2u);
    swift_slowDealloc();
  }
}

void sub_1001E27E0(uint64_t a1, int a2, uint64_t a3, unint64_t a4, unint64_t a5, int a6)
{
  if ((a2 | a6))
  {
    sub_100194C20();
    sub_10018E350();
    return;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    unsigned int v9 = [self shouldPlayAudioDuringCountdown];
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned int v9 = 0;
  }
  int v10 = sub_1001E2E44(a4, a5, a1);
  if (v10)
  {
    if (v10 == 1) {
      char v11 = 1;
    }
    else {
      char v11 = v9 ^ 1;
    }
    sub_1001948DC(v11);
    if (v9) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_1001E2124(2);
    if (v9) {
LABEL_13:
    }
      sub_10018E000(0.5);
  }
}

uint64_t sub_1001E28D0()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  int v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = (unsigned char *)(v2 + OBJC_IVAR____TtC8SOSBuddyP33_D74E797C4F8DB0A82ADB6A7E065FE21D15_HapticFeedback__cached);
  swift_beginAccess();
  uint64_t result = type metadata accessor for _HapticFeedback.Cached(0);
  if (v13[*(int *)(result + 36)] == 1)
  {
    int v15 = *v13;
    if (v15 != 4)
    {
      uint64_t v16 = result;
      sub_100173EF0((uint64_t)&v13[*(int *)(result + 20)], (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
        return sub_100156A1C((uint64_t)v5);
      }
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
      swift_beginAccess();
      *uint64_t v13 = 4;
      uint64_t v17 = (uint64_t)&v13[*(int *)(v16 + 20)];
      sub_100156A1C(v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v17, 1, 1, v6);
      swift_endAccess();
      static DispatchTime.now()();
      unint64_t v18 = DispatchTime.uptimeNanoseconds.getter();
      unint64_t v19 = 0;
      if (DispatchTime.uptimeNanoseconds.getter() < v18
        && (unint64_t v20 = DispatchTime.uptimeNanoseconds.getter(),
            unint64_t v21 = DispatchTime.uptimeNanoseconds.getter(),
            unint64_t v19 = v20 - v21,
            v20 < v21))
      {
        __break(1u);
      }
      else
      {
        uint64_t v1 = *(void (**)(char *, uint64_t))(v7 + 8);
        v1(v10, v6);
        if (v19 < 0x30A32C0)
        {
          sub_1000B6194(v15);
          return ((uint64_t (*)(char *, uint64_t))v1)(v12, v6);
        }
        if (qword_10037DDD0 == -1)
        {
LABEL_9:
          uint64_t v22 = type metadata accessor for Logger();
          sub_10000FD84(v22, (uint64_t)qword_1003A9A48);
          unint64_t v23 = Logger.logObject.getter();
          os_log_type_t v24 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v23, v24))
          {
            uint64_t v25 = (uint8_t *)swift_slowAlloc();
            v30[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v25 = 136446210;
            uint64_t v28 = v25 + 4;
            LOBYTE(v29) = v15;
            uint64_t v26 = String.init<A>(describing:)();
            uint64_t v29 = sub_1001B3178(v26, v27, v30);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v23, v24, "Pending haptic expired - %{public}s", v25, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          return ((uint64_t (*)(char *, uint64_t))v1)(v12, v6);
        }
      }
      swift_once();
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1001E2CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _HapticFeedback.Cached(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E2D40(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v4 = 0;
      uint64_t v5 = a1 + 32;
      uint64_t v6 = a2 + 56;
      do
      {
        if (*(void *)(a2 + 16))
        {
          Swift::UInt v7 = *(unsigned __int8 *)(v5 + v4);
          Hasher.init(_seed:)();
          Hasher._combine(_:)(v7);
          Swift::Int v8 = Hasher._finalize()();
          uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v10 = v8 & ~v9;
          if ((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
          {
            uint64_t v11 = *(void *)(a2 + 48);
            if (*(unsigned __int8 *)(v11 + v10) == v7) {
              return 0;
            }
            uint64_t v12 = ~v9;
            while (1)
            {
              unint64_t v10 = (v10 + 1) & v12;
              if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v11 + v10) == v7) {
                return 0;
              }
            }
          }
        }
        ++v4;
      }
      while (v4 != v2);
    }
  }
  return 1;
}

uint64_t sub_1001E2E44(unint64_t a1, unint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    BOOL v7 = a3 >= 1 && a3 > a1 >> 1;
    return !v7;
  }
  uint64_t result = 2;
  if (a3 >= 1 && a2 < a3)
  {
    BOOL v5 = __CFADD__(a1, a2);
    unint64_t v6 = a1 + a2;
    if (v5)
    {
      __break(1u);
      return result;
    }
    BOOL v7 = a3 > v6 >> 1;
    return !v7;
  }
  return result;
}

uint64_t sub_1001E2E88()
{
  return UUID.uuidString.getter();
}

uint64_t sub_1001E2EB4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001E2F54()
{
  return type metadata accessor for TryOutTranscriptItem(0);
}

uint64_t type metadata accessor for TryOutTranscriptItem(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D7E8);
}

uint64_t sub_1001E2F7C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001E3018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  uint64_t v4 = type metadata accessor for UUID();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

Swift::Int sub_1001E3090()
{
  return Hasher._finalize()();
}

uint64_t sub_1001E3128()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1001E31B0()
{
  return Hasher._finalize()();
}

uint64_t sub_1001E3244()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_1001E3260()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E3274()
{
  return sub_1001E382C();
}

uint64_t sub_1001E3280()
{
  return type metadata accessor for TryOutTranscriptStatusItem(0);
}

uint64_t type metadata accessor for TryOutTranscriptStatusItem(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D8C0);
}

uint64_t sub_1001E32AC(char *a1, unsigned __int8 *a2)
{
  return sub_10028A754(*a1, *a2);
}

Swift::Int sub_1001E32B8()
{
  return Hasher._finalize()();
}

uint64_t sub_1001E334C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001E33CC()
{
  return Hasher._finalize()();
}

unint64_t sub_1001E345C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001E3FEC(*a1);
  *a2 = result;
  return result;
}

void sub_1001E348C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1953391987;
  if (v2 != 1) {
    uint64_t v4 = 1701736302;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x676E69646E6573;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1001E34DC()
{
  uint64_t v10 = UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 95;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = 1953391987;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) != 1) {
    uint64_t v2 = 1701736302;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x676E69646E6573;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status)) {
    uint64_t v4 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v4 = (void *)0xE700000000000000;
  }
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = 95;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage)) {
    uint64_t v7 = 76;
  }
  else {
    uint64_t v7 = 67;
  }
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v7;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001E363C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E3684()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001E3744()
{
  return type metadata accessor for TryOutTranscriptMessageItem(0);
}

uint64_t type metadata accessor for TryOutTranscriptMessageItem(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038D9A8);
}

uint64_t sub_1001E376C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1001E37C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E37D8()
{
  return sub_1001E382C();
}

uint64_t sub_1001E37E4()
{
  return type metadata accessor for TryOutTranscriptHeaderItem(0);
}

uint64_t type metadata accessor for TryOutTranscriptHeaderItem(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038DAE0);
}

uint64_t sub_1001E380C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E3820()
{
  return sub_1001E382C();
}

uint64_t sub_1001E382C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001E38E8()
{
  return type metadata accessor for TryOutTranscriptFooterItem(0);
}

uint64_t type metadata accessor for TryOutTranscriptFooterItem(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038DBC8);
}

uint64_t sub_1001E3910()
{
  return swift_updateClassMetadata2();
}

unsigned char *storeEnumTagSinglePayload for TryOutTranscriptMessageItem.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E3A20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutTranscriptMessageItem.Status()
{
  return &type metadata for TryOutTranscriptMessageItem.Status;
}

unsigned char *storeEnumTagSinglePayload for TryOutTranscriptMessageItem.Sender(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E3B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutTranscriptMessageItem.Sender()
{
  return &type metadata for TryOutTranscriptMessageItem.Sender;
}

uint64_t initializeWithCopy for TryOutTranscriptMessageItem.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TryOutTranscriptMessageItem.Content(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for TryOutTranscriptMessageItem.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutTranscriptMessageItem.Content(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutTranscriptMessageItem.Content(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutTranscriptMessageItem.Content()
{
  return &type metadata for TryOutTranscriptMessageItem.Content;
}

unsigned char *storeEnumTagSinglePayload for TryOutTranscriptItem.ItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E3DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutTranscriptItem.ItemType()
{
  return &type metadata for TryOutTranscriptItem.ItemType;
}

unint64_t sub_1001E3E10()
{
  unint64_t result = qword_10038DC88;
  if (!qword_10038DC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DC88);
  }
  return result;
}

unint64_t sub_1001E3E68()
{
  unint64_t result = qword_10038DC90;
  if (!qword_10038DC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DC90);
  }
  return result;
}

unint64_t sub_1001E3EC0()
{
  unint64_t result = qword_10038DC98;
  if (!qword_10038DC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DC98);
  }
  return result;
}

uint64_t sub_1001E3F14()
{
  return sub_1001E3FA4(&qword_10038DCA0, (void (*)(uint64_t))type metadata accessor for TryOutTranscriptItem);
}

uint64_t sub_1001E3F5C()
{
  return sub_1001E3FA4(&qword_10038DCA8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1001E3FA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001E3FEC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10034BC60, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

ValueMetadata *type metadata accessor for BuiltInSelectRoadsideProviderHeaderView()
{
  return &type metadata for BuiltInSelectRoadsideProviderHeaderView;
}

uint64_t sub_1001E4048()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E4064@<X0>(uint64_t a1@<X2>, Swift::String *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 72);
  unint64_t v3 = *(void **)(a1 + 80);
  uint64_t v5 = self;
  swift_bridgeObjectRetain();
  id v6 = [v5 mainBundle];
  v13._countAndFlagsBits = 0xD00000000000003BLL;
  v13._object = (void *)0x80000001002D3910;
  v7._object = (void *)0x80000001002D38B0;
  v8.value._object = (void *)0x80000001002CD700;
  v7._countAndFlagsBits = 0x1000000000000058;
  v8.value._countAndFlagsBits = 0xD000000000000017;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v13);

  type metadata accessor for UIMetrics();
  sub_100092DDC();
  uint64_t result = EnvironmentObject.init()();
  a2->_countAndFlagsBits = result;
  a2->_object = v12;
  a2[1]._countAndFlagsBits = v4;
  a2[1]._object = v3;
  a2[2] = v10;
  return result;
}

uint64_t sub_1001E4168@<X0>(Swift::String *a1@<X8>)
{
  return sub_1001E4064(*(void *)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for TryOutMessagesView()
{
  return &type metadata for TryOutMessagesView;
}

uint64_t sub_1001E4184()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E41A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v19 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_10038DCB0);
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038DCB8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = static HorizontalAlignment.center.getter();
  sub_1001E45D0((uint64_t)v26);
  *(_OWORD *)((char *)&v28[10] + 7) = v26[10];
  *(_OWORD *)((char *)&v28[11] + 7) = v26[11];
  *(_OWORD *)((char *)&v28[12] + 7) = v27[0];
  v28[13] = *(_OWORD *)((char *)v27 + 9);
  *(_OWORD *)((char *)&v28[6] + 7) = v26[6];
  *(_OWORD *)((char *)&v28[7] + 7) = v26[7];
  *(_OWORD *)((char *)&v28[8] + 7) = v26[8];
  *(_OWORD *)((char *)&v28[9] + 7) = v26[9];
  *(_OWORD *)((char *)&v28[2] + 7) = v26[2];
  *(_OWORD *)((char *)&v28[3] + 7) = v26[3];
  *(_OWORD *)((char *)&v28[4] + 7) = v26[4];
  *(_OWORD *)((char *)&v28[5] + 7) = v26[5];
  *(_OWORD *)((char *)v28 + 7) = v26[0];
  *(_OWORD *)((char *)&v28[1] + 7) = v26[1];
  *(_OWORD *)&v25[161] = v28[10];
  *(_OWORD *)&v25[177] = v28[11];
  *(_OWORD *)&v25[193] = v28[12];
  *(_OWORD *)&v25[209] = *(_OWORD *)((char *)v27 + 9);
  *(_OWORD *)&v25[97] = v28[6];
  *(_OWORD *)&v25[113] = v28[7];
  *(_OWORD *)&v25[129] = v28[8];
  *(_OWORD *)&v25[145] = v28[9];
  *(_OWORD *)&v25[33] = v28[2];
  *(_OWORD *)&v25[49] = v28[3];
  *(_OWORD *)&v25[65] = v28[4];
  *(_OWORD *)&v25[81] = v28[5];
  *(_OWORD *)&v25[1] = v28[0];
  char v29 = 0;
  long long v24 = (unint64_t)v11;
  v25[0] = 0;
  *(_OWORD *)&v25[17] = v28[1];
  uint64_t v12 = v19;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v19);
  uint64_t v13 = sub_100004010(&qword_10038DCC0);
  uint64_t v14 = sub_100009B18(&qword_10038DCC8, &qword_10038DCC0);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v12);
  v30[12] = *(_OWORD *)&v25[176];
  v30[13] = *(_OWORD *)&v25[192];
  v30[14] = *(_OWORD *)&v25[208];
  char v31 = v25[224];
  v30[8] = *(_OWORD *)&v25[112];
  v30[9] = *(_OWORD *)&v25[128];
  v30[10] = *(_OWORD *)&v25[144];
  v30[11] = *(_OWORD *)&v25[160];
  v30[4] = *(_OWORD *)&v25[48];
  v30[5] = *(_OWORD *)&v25[64];
  v30[6] = *(_OWORD *)&v25[80];
  v30[7] = *(_OWORD *)&v25[96];
  v30[0] = v24;
  v30[1] = *(_OWORD *)v25;
  v30[2] = *(_OWORD *)&v25[16];
  uint64_t v30[3] = *(_OWORD *)&v25[32];
  sub_1001E48FC((uint64_t)v30);
  *(void *)&long long v24 = v13;
  *((void *)&v24 + 1) = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.navigationBarBackButtonHidden(_:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  *(void *)&long long v24 = v4;
  *((void *)&v24 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = v21;
  View.navigationBarHidden(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v16);
}

uint64_t sub_1001E45D0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_1001E4C20((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  type metadata accessor for CGSize(0);
  long long v38 = 0uLL;
  State.init(wrappedValue:)();
  uint64_t v5 = v50;
  uint64_t v6 = v51;
  uint64_t v7 = v52;
  uint64_t v8 = static Alignment.center.getter();
  uint64_t v10 = v9;
  sub_1001E47E8((uint64_t)&v27);
  *(void *)&long long v38 = v8;
  *((void *)&v38 + 1) = v10;
  long long v11 = v35;
  long long v12 = v36;
  long long v47 = v35;
  long long v48 = v36;
  long long v13 = v31;
  long long v14 = v32;
  long long v43 = v31;
  long long v44 = v32;
  long long v15 = v34;
  long long v16 = v33;
  long long v45 = v33;
  long long v46 = v34;
  long long v17 = v27;
  long long v18 = v28;
  long long v39 = v27;
  long long v40 = v28;
  long long v19 = v30;
  long long v20 = v29;
  long long v41 = v29;
  long long v42 = v30;
  long long v21 = v35;
  *(_OWORD *)(a1 + 168) = v34;
  *(_OWORD *)(a1 + 184) = v21;
  *(_OWORD *)(a1 + 200) = v48;
  long long v22 = v43;
  *(_OWORD *)(a1 + 104) = v42;
  *(_OWORD *)(a1 + 120) = v22;
  long long v23 = v45;
  *(_OWORD *)(a1 + 136) = v44;
  *(_OWORD *)(a1 + 152) = v23;
  long long v24 = v39;
  *(_OWORD *)(a1 + 40) = v38;
  *(_OWORD *)(a1 + 56) = v24;
  long long v25 = v41;
  *(_OWORD *)(a1 + 72) = v40;
  *(_OWORD *)(a1 + 88) = v25;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v60 = v11;
  long long v61 = v12;
  long long v56 = v13;
  long long v57 = v14;
  long long v59 = v15;
  long long v58 = v16;
  char v49 = v37;
  *(unsigned char *)(a1 + 216) = v37;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 32) = v7;
  uint64_t v50 = v8;
  uint64_t v51 = v10;
  char v62 = v37;
  long long v52 = v17;
  long long v53 = v18;
  long long v55 = v19;
  long long v54 = v20;
  swift_retain();
  swift_retain();
  sub_1001E49A8((uint64_t)&v38);
  sub_1001E4A34((uint64_t)&v50);
  swift_release();
  return swift_release();
}

double sub_1001E47E8@<D0>(uint64_t a1@<X8>)
{
  sub_10024D800((uint64_t)v16);
  uint64_t v2 = static HorizontalAlignment.center.getter();
  type metadata accessor for BannerAppearanceModel();
  sub_1001E4C20(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
  uint64_t v3 = EnvironmentObject.init()();
  double result = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  uint64_t v7 = v20;
  uint64_t v8 = v22;
  uint64_t v9 = v24;
  uint64_t v10 = v26;
  char v11 = v21 & 1;
  char v12 = v23 & 1;
  char v13 = v25 & 1;
  long long v14 = v16[1];
  *(_OWORD *)a1 = v16[0];
  *(_OWORD *)(a1 + 16) = v14;
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v2;
  *(void *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = v3;
  *(void *)(a1 + 144) = v15;
  *(void *)(a1 + 152) = 0;
  *(unsigned char *)(a1 + 160) = 1;
  return result;
}

uint64_t sub_1001E48E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E41A0(a1);
}

uint64_t sub_1001E48FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001E49A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001E4A34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001E4AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Alignment.center.getter();
  if (a1)
  {
    uint64_t v15 = v4;
    uint64_t v16 = v5;
    uint64_t v17 = 0x4038000000000000;
    uint64_t v18 = 9;
    long long v19 = xmmword_1002C0240;
    char v20 = 0;
    uint64_t v21 = 0x4038000000000000;
    uint64_t v22 = 9;
    uint64_t v23 = 0x3FF0000000000000;
    double v6 = *(double *)(a1 + 40);
    static Alignment.center.getter();
    sub_10016803C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v14, 0.0, 1, v6, 0);
    uint64_t result = static Edge.Set.all.getter();
    long long v8 = v14[9];
    *(_OWORD *)(a2 + 128) = v14[8];
    *(_OWORD *)(a2 + 144) = v8;
    long long v9 = v14[11];
    *(_OWORD *)(a2 + 160) = v14[10];
    *(_OWORD *)(a2 + 176) = v9;
    long long v10 = v14[5];
    *(_OWORD *)(a2 + 64) = v14[4];
    *(_OWORD *)(a2 + 80) = v10;
    long long v11 = v14[7];
    *(_OWORD *)(a2 + 96) = v14[6];
    *(_OWORD *)(a2 + 112) = v11;
    long long v12 = v14[1];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v12;
    long long v13 = v14[3];
    *(_OWORD *)(a2 + 32) = v14[2];
    *(_OWORD *)(a2 + 48) = v13;
    *(unsigned char *)(a2 + 192) = result;
    *(_OWORD *)(a2 + 200) = 0u;
    *(_OWORD *)(a2 + 216) = 0u;
    *(unsigned char *)(a2 + 232) = 1;
  }
  else
  {
    type metadata accessor for BannerAppearanceModel();
    sub_1001E4C20(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E4C18@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E4AC0(*v1, a1);
}

uint64_t sub_1001E4C20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutMessagesRegularBannerView()
{
  return &type metadata for TryOutMessagesRegularBannerView;
}

uint64_t sub_1001E4C84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E4D74()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001E4D94()
{
  unint64_t result = qword_10038DCD0;
  if (!qword_10038DCD0)
  {
    sub_1000094C4(&qword_10038DCD8);
    sub_1001E4E10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DCD0);
  }
  return result;
}

unint64_t sub_1001E4E10()
{
  unint64_t result = qword_10038DCE0;
  if (!qword_10038DCE0)
  {
    sub_1000094C4(&qword_10038DCE8);
    sub_100009B18(&qword_10038DCF0, &qword_10038DCF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DCE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BlurBackgroundView()
{
  return &type metadata for BlurBackgroundView;
}

id sub_1001E4EC0(double a1, double a2, uint64_t a3, uint64_t a4)
{
  id v6 = [self effectWithStyle:a4];
  id v7 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v6];
  [v7 setAlpha:a2];
  if (a1 > 0.0)
  {
    id v8 = [v7 layer];
    [v8 setCornerRadius:a1];

    id v9 = [v7 layer];
    [v9 setCornerCurve:kCACornerCurveContinuous];

    id v10 = [v7 layer];
    [v10 setMasksToBounds:1];
  }
  return v7;
}

id sub_1001E4FF0(uint64_t a1)
{
  return sub_1001E4EC0(*(double *)v1, *(double *)(v1 + 16), a1, *(void *)(v1 + 8));
}

uint64_t sub_1001E5004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001E50F8();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001E5068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001E50F8();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1001E50CC()
{
}

unint64_t sub_1001E50F8()
{
  unint64_t result = qword_10038DD00;
  if (!qword_10038DD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DD00);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssitantBannerMode()
{
  return &type metadata for ConnectionAssitantBannerMode;
}

uint64_t *sub_1001E515C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = type metadata accessor for ConnectionClosed(0);
      uint64_t v8 = *(int *)(v7 + 20);
      id v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100004010(&qword_100380418);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_1001E5328(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_1001E5418(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionClosed(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    id v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100004010(&qword_100380418);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1001E55A0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001E5FC0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionClosed(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      id v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100004010(&qword_100380418);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for ConnectionAssitantBannerMode.Mode()
{
  uint64_t result = qword_10038DD78;
  if (!qword_10038DD78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_1001E5798(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionClosed(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    id v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100004010(&qword_100380418);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1001E591C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001E5FC0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionClosed(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      id v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100004010(&qword_100380418);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(void *)&a1[*(int *)(v6 + 24)] = *(void *)&a2[*(int *)(v6 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001E5AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1001E5AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1001E5B18()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001E5B28()
{
  uint64_t result = type metadata accessor for ConnectionClosed(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1001E5BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionClosed(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (unsigned __int8 *)&v28 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v28 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v19 = sub_100004010(&qword_10038DDB0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = &v22[*(int *)(v20 + 56)];
  sub_100143698(a1, (uint64_t)v22);
  sub_100143698(a2, (uint64_t)v23);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100143698((uint64_t)v22, (uint64_t)v16);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10002D1E8((uint64_t)v23, (uint64_t)v6);
        char v25 = sub_1001114F8(v16, v6);
        sub_1001E5FC0((uint64_t)v6, type metadata accessor for ConnectionClosed);
        sub_1001E5FC0((uint64_t)v16, type metadata accessor for ConnectionClosed);
        goto LABEL_8;
      }
      sub_1001E5FC0((uint64_t)v16, type metadata accessor for ConnectionClosed);
      goto LABEL_17;
    case 2u:
      sub_100143698((uint64_t)v22, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_17;
      }
      char v25 = *v13 == *v23;
LABEL_8:
      sub_1001E5FC0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
      return v25 & 1;
    case 3u:
      sub_100143698((uint64_t)v22, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_17;
      }
      char v24 = *v10;
      goto LABEL_11;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_17;
      }
      goto LABEL_15;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_17;
      }
LABEL_15:
      sub_1001E5FC0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
      char v25 = 1;
      break;
    default:
      sub_100143698((uint64_t)v22, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_17:
        sub_1001E5F60((uint64_t)v22);
        char v25 = 0;
      }
      else
      {
        char v24 = *v18;
LABEL_11:
        char v26 = v24 ^ *v23;
        sub_1001E5FC0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
        char v25 = v26 ^ 1;
      }
      break;
  }
  return v25 & 1;
}

uint64_t sub_1001E5F60(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038DDB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E5FC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001E6020@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1001E606C(a2, *a1, (uint64_t)v5);
  return sub_1001E6698((uint64_t)v5, a3);
}

uint64_t sub_1001E606C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  long long v5 = 0uLL;
  if (!*(void *)(*(void *)result + 16))
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0;
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v13 = 0;
    goto LABEL_48;
  }
  uint64_t v7 = result;
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1001BECD0(v8);
  if ((v10 & 1) == 0) {
    goto LABEL_46;
  }
  uint64_t v11 = (unsigned __int8 *)(*(void *)(v4 + 56) + 16 * v9);
  unsigned int v12 = *v11;
  uint64_t v13 = (void *)*((void *)v11 + 1);
  swift_retain();
  uint64_t result = swift_release();
  if (v12 >= 3)
  {
    if (v12 == 3)
    {
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 72);
      uint64_t v16 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_release();
      uint64_t v19 = 0;
      uint64_t v18 = 0;
      uint64_t v21 = 0;
      uint64_t v23 = 0;
      uint64_t v13 = 0;
      long long v5 = xmmword_1002C04B0;
      goto LABEL_48;
    }
LABEL_46:
    uint64_t result = swift_release();
    uint64_t v15 = 0;
    uint64_t v14 = 0;
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v13 = 0;
LABEL_47:
    long long v5 = 0uLL;
    goto LABEL_48;
  }
  switch(*(unsigned char *)(a2 + 32))
  {
    case 1:
      uint64_t v24 = *(void *)(v7 + 8);
      if (!*(void *)(v24 + 16)) {
        goto LABEL_46;
      }
      uint64_t v25 = swift_retain();
      uint64_t v26 = sub_1001BECD0(v25);
      if ((v27 & 1) == 0)
      {
        swift_release();
        goto LABEL_46;
      }
      uint64_t v62 = *(void *)(*(void *)(v24 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v28 = *(void *)(a2 + 144);
      if (v28 >> 62) {
        goto LABEL_52;
      }
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v29) {
        goto LABEL_14;
      }
      goto LABEL_53;
    case 2:
      unint64_t v28 = *(void *)(a2 + 144);
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        if (v40) {
          goto LABEL_30;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        uint64_t v15 = *(void *)(a2 + 16);
        uint64_t v14 = *(void *)(a2 + 24);
        uint64_t v17 = *(void *)(a2 + 72);
        uint64_t v16 = *(void *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100004010(&qword_100380040);
        sub_1001E6700();
        goto LABEL_54;
      }
      uint64_t v40 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v40) {
        goto LABEL_50;
      }
LABEL_30:
      if (v40 >= 1)
      {
        uint64_t v41 = 0;
        uint64_t v42 = *(void *)(v7 + 24);
        unint64_t v43 = v28 & 0xC000000000000001;
        long long v44 = &_swiftEmptyArrayStorage;
        uint64_t v61 = v40;
        unint64_t v64 = v28;
        unint64_t v59 = v28 & 0xC000000000000001;
        while (1)
        {
          if (v43)
          {
            uint64_t v45 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (!*(void *)(v42 + 16)) {
              goto LABEL_32;
            }
          }
          else
          {
            uint64_t v45 = *(void *)(v28 + 8 * v41 + 32);
            swift_retain();
            if (!*(void *)(v42 + 16)) {
              goto LABEL_32;
            }
          }
          uint64_t v46 = sub_1001BECD0(v45);
          if (v47)
          {
            long long v48 = (uint64_t *)(*(void *)(v42 + 56) + 16 * v46);
            uint64_t v49 = *v48;
            uint64_t v50 = (void *)v48[1];
            uint64_t v51 = *(void *)(v45 + 32);
            uint64_t v65 = *(void *)(v51 + 16);
            uint64_t v66 = *(void *)(v51 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v52._countAndFlagsBits = 8250;
            v52._object = (void *)0xE200000000000000;
            String.append(_:)(v52);
            v53._countAndFlagsBits = v49;
            v53._object = v50;
            String.append(_:)(v53);
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long long v44 = sub_1001B1A30(0, v44[2] + 1, 1, v44);
            }
            unint64_t v55 = v44[2];
            unint64_t v54 = v44[3];
            if (v55 >= v54 >> 1) {
              long long v44 = sub_1001B1A30((void *)(v54 > 1), v55 + 1, 1, v44);
            }
            v44[2] = v55 + 1;
            long long v56 = &v44[2 * v55];
            v56[4] = v65;
            v56[5] = v66;
            swift_release();
            uint64_t v40 = v61;
            unint64_t v28 = v64;
            unint64_t v43 = v59;
            goto LABEL_33;
          }
LABEL_32:
          swift_release();
LABEL_33:
          if (v40 == ++v41) {
            goto LABEL_50;
          }
        }
      }
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      if (v29)
      {
LABEL_14:
        if (v29 < 1)
        {
          __break(1u);
          JUMPOUT(0x1001E6688);
        }
        uint64_t v30 = 0;
        unint64_t v31 = v28 & 0xC000000000000001;
        long long v32 = &_swiftEmptyArrayStorage;
        uint64_t v58 = v29;
        unint64_t v60 = v28;
        do
        {
          if (v31)
          {
            uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v33 = *(void *)(v28 + 8 * v30 + 32);
            swift_retain();
          }
          if (sub_100078E10(v33, v62))
          {
            uint64_t v34 = *(void *)(v33 + 32);
            uint64_t v35 = *(void *)(v34 + 16);
            uint64_t v36 = *(void *)(v34 + 24);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long long v32 = sub_1001B1A30(0, v32[2] + 1, 1, v32);
            }
            unint64_t v38 = v32[2];
            unint64_t v37 = v32[3];
            if (v38 >= v37 >> 1) {
              long long v32 = sub_1001B1A30((void *)(v37 > 1), v38 + 1, 1, v32);
            }
            v32[2] = v38 + 1;
            long long v39 = &v32[2 * v38];
            v39[4] = v35;
            v39[5] = v36;
            swift_release();
            uint64_t v29 = v58;
            unint64_t v28 = v60;
          }
          else
          {
            swift_release();
          }
          ++v30;
        }
        while (v29 != v30);
      }
LABEL_53:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 72);
      uint64_t v16 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380040);
      sub_1001E6700();
LABEL_54:
      uint64_t v21 = BidirectionalCollection<>.joined(separator:)();
      unint64_t v63 = v57;
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v19 = 0;
      uint64_t v18 = 0;
      uint64_t v23 = 0;
      uint64_t v13 = 0;
LABEL_55:
      long long v5 = v63;
LABEL_48:
      *(void *)a3 = v15;
      *(void *)(a3 + 8) = v14;
      *(void *)(a3 + 16) = v17;
      *(void *)(a3 + 24) = v16;
      *(void *)(a3 + 32) = v19;
      *(void *)(a3 + 40) = v18;
      *(void *)(a3 + 48) = v21;
      *(_OWORD *)(a3 + 56) = v5;
      *(void *)(a3 + 72) = v23;
      *(void *)(a3 + 80) = v13;
      return result;
    case 3:
      goto LABEL_46;
    default:
      if (v13)
      {
        uint64_t v15 = *(void *)(a2 + 16);
        uint64_t v14 = *(void *)(a2 + 24);
        uint64_t v17 = *(void *)(a2 + 72);
        uint64_t v16 = *(void *)(a2 + 80);
        uint64_t v19 = v13[2];
        uint64_t v18 = v13[3];
        uint64_t v20 = (void *)v13[4];
        uint64_t v21 = v20[2];
        unint64_t v63 = v20[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        uint64_t v22 = v20;
        uint64_t v23 = v20[6];
        uint64_t v13 = (void *)v22[7];
        swift_bridgeObjectRetain();
        uint64_t result = swift_release();
        goto LABEL_55;
      }
      uint64_t v15 = 0;
      uint64_t v14 = 0;
      uint64_t v17 = 0;
      uint64_t v16 = 0;
      uint64_t v19 = 0;
      uint64_t v18 = 0;
      uint64_t v21 = 0;
      uint64_t v23 = 0;
      goto LABEL_47;
  }
}

uint64_t sub_1001E6698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038DDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001E6700()
{
  unint64_t result = qword_100380DB0;
  if (!qword_100380DB0)
  {
    sub_1000094C4(&qword_100380040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100380DB0);
  }
  return result;
}

uint64_t sub_1001E675C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E67A8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001E6830(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  return a1;
}

uint64_t sub_1001E68E0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t sub_1001E6960(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001E69A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExplorerScrollContentWithOffsetView()
{
  return sub_100006BAC();
}

uint64_t sub_1001E6A14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E6A58(uint64_t a1)
{
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v5 = v1[2];
  long long v6 = v1[3];
  long long v7 = *v1;
  v3[3] = v1[1];
  v3[4] = v5;
  long long v8 = v1[4];
  v3[5] = v6;
  v3[6] = v8;
  v3[1] = v4;
  v3[2] = v7;
  sub_1001E7E58((uint64_t)v1);
  sub_1000094C4(&qword_10038DE60);
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  sub_1000094C4(&qword_10038DE68);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_10038DE70);
  type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_100009B18(&qword_10038DE78, &qword_10038DE68);
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_100009B18(&qword_10038DE80, &qword_10038DE70);
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  swift_getWitnessTable();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  uint64_t v23 = OpaqueTypeMetadata2;
  uint64_t v24 = OpaqueTypeConformance2;
  uint64_t v17 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable();
  uint64_t v15 = ScrollViewReader.init(content:)();
  uint64_t v16 = v11;
  uint64_t v12 = type metadata accessor for ScrollViewReader();
  uint64_t v13 = swift_getWitnessTable();
  sub_1000A7320(&v15, v12, v13);
  swift_release();
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  sub_1000A7320(&v15, v12, v13);
  return swift_release();
}

uint64_t sub_1001E6DCC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v70 = a4;
  uint64_t v71 = a2;
  uint64_t v68 = a1;
  uint64_t v69 = a5;
  uint64_t v67 = type metadata accessor for ScrollViewProxy();
  uint64_t v64 = *(void *)(v67 - 8);
  uint64_t v66 = *(void *)(v64 + 64);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v60 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000094C4(&qword_10038DE60);
  uint64_t v50 = a3;
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  sub_1000094C4(&qword_10038DE68);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_10038DE70);
  uint64_t v8 = type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = sub_100009B18(&qword_10038DE78, &qword_10038DE68);
  uint64_t v80 = WitnessTable;
  uint64_t v81 = v10;
  uint64_t v61 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_100009B18(&qword_10038DE80, &qword_10038DE70);
  uint64_t v78 = v11;
  uint64_t v79 = v12;
  uint64_t v53 = v8;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for ScrollView();
  uint64_t v54 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = swift_getWitnessTable();
  *(void *)&long long v77 = v13;
  *((void *)&v77 + 1) = v16;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v51 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v19 = (char *)&v48 - v18;
  *(void *)&long long v77 = v13;
  *((void *)&v77 + 1) = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v77 = OpaqueTypeMetadata2;
  *((void *)&v77 + 1) = OpaqueTypeConformance2;
  uint64_t v49 = OpaqueTypeConformance2;
  unint64_t v57 = &opaque type descriptor for <<opaque return type of View.coordinateSpace(_:)>>;
  uint64_t v55 = swift_getOpaqueTypeMetadata2();
  uint64_t v58 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v23 = type metadata accessor for ModifiedContent();
  uint64_t v59 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  long long v56 = (char *)&v48 - v27;
  static Axis.Set.vertical.getter();
  uint64_t v72 = a3;
  uint64_t v73 = v70;
  unint64_t v28 = v71;
  uint64_t v74 = v71;
  ScrollView.init(_:showsIndicators:content:)();
  View.scrollClipDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v13);
  long long v77 = *(_OWORD *)((char *)v28 + 56);
  uint64_t v29 = v60;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  View.coordinateSpace(_:)();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v29, v63);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v19, OpaqueTypeMetadata2);
  uint64_t v30 = v64;
  unint64_t v31 = v65;
  uint64_t v32 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v65, v68, v67);
  uint64_t v33 = v30;
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v35 = (v66 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v70;
  *(void *)(v36 + 16) = v50;
  *(void *)(v36 + 24) = v37;
  (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v36 + v34, v31, v32);
  unint64_t v38 = (_OWORD *)(v36 + v35);
  long long v39 = v71;
  long long v40 = v71[3];
  v38[2] = v71[2];
  v38[3] = v40;
  v38[4] = v39[4];
  long long v41 = v39[1];
  _OWORD *v38 = *v39;
  v38[1] = v41;
  sub_1001E7E58((uint64_t)v39);
  *(void *)&long long v77 = OpaqueTypeMetadata2;
  *((void *)&v77 + 1) = v49;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v55;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v43);
  uint64_t v75 = v42;
  uint64_t v76 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v56;
  sub_1000A7320(v26, v23, v44);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v59 + 8);
  v46(v26, v23);
  sub_1000A7320(v45, v23, v44);
  return ((uint64_t (*)(char *, uint64_t))v46)(v45, v23);
}

uint64_t sub_1001E7614@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v37 = a4;
  uint64_t v6 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  unint64_t v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000094C4(&qword_10038DE60);
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for VStack();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - v9;
  sub_1000094C4(&qword_10038DE68);
  uint64_t v33 = type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_10038DE70);
  uint64_t v11 = type metadata accessor for ModifiedContent();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = v30;
  uint64_t v38 = a2;
  uint64_t v39 = v30;
  long long v40 = a1;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  long long v45 = *(_OWORD *)((char *)a1 + 56);
  uint64_t v18 = (uint64_t)v31;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v17;
  long long v20 = a1[3];
  *(_OWORD *)(v19 + 64) = a1[2];
  *(_OWORD *)(v19 + 80) = v20;
  *(_OWORD *)(v19 + 96) = a1[4];
  long long v21 = a1[1];
  *(_OWORD *)(v19 + 32) = *a1;
  *(_OWORD *)(v19 + 48) = v21;
  sub_1001E7E58((uint64_t)a1);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v23 = sub_1001E8124();
  sub_100036CF8(v18, (uint64_t)sub_1001E80F8, v19, v8, (uint64_t)&type metadata for ExplorerScrollContentFrame, WitnessTable, v23, (uint64_t)v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v18, v36);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
  uint64_t v24 = sub_100009B18(&qword_10038DE78, &qword_10038DE68);
  uint64_t v43 = WitnessTable;
  uint64_t v44 = v24;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = sub_100009B18(&qword_10038DE80, &qword_10038DE70);
  uint64_t v41 = v25;
  uint64_t v42 = v26;
  uint64_t v27 = swift_getWitnessTable();
  sub_1000A7320(v14, v11, v27);
  unint64_t v28 = *(void (**)(char *, uint64_t))(v32 + 8);
  v28(v14, v11);
  sub_1000A7320(v16, v11, v27);
  return ((uint64_t (*)(char *, uint64_t))v28)(v16, v11);
}

uint64_t sub_1001E7AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v21[1] = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - v11;
  uint64_t v13 = static Color.clear.getter();
  double v14 = *(double *)(a1 + 16);
  uint64_t v15 = static Alignment.center.getter();
  sub_1001681E4(0.0, 1, 0.0, 1, INFINITY, 0, v14, 0, (uint64_t)v32, 0.0, 1, v14, 0, v15, v16, v13, 0, 1);
  swift_release();
  uint64_t v17 = *(void (**)(uint64_t))(a1 + 40);
  uint64_t v18 = Namespace.wrappedValue.getter();
  v17(v18);
  sub_1000A7320(v10, a2, a3);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, a2);
  long long v27 = v32[4];
  long long v28 = v32[5];
  long long v29 = v32[6];
  long long v30 = v32[7];
  long long v23 = v32[0];
  long long v24 = v32[1];
  long long v25 = v32[2];
  long long v26 = v32[3];
  v31[0] = &v23;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, a2);
  v31[1] = v10;
  sub_10004ED30((uint64_t)v32);
  v22[0] = sub_100004010(&qword_10038DE60);
  v22[1] = a2;
  long long v21[2] = sub_1001E8178();
  v21[3] = a3;
  sub_1000A754C((uint64_t)v31, 2uLL, (uint64_t)v22);
  v19(v12, a2);
  sub_10004F584((uint64_t)v32);
  v19(v10, a2);
  v33[4] = v27;
  v33[5] = v28;
  v33[6] = v29;
  v33[7] = v30;
  v33[0] = v23;
  v33[1] = v24;
  v33[2] = v25;
  void v33[3] = v26;
  return sub_10004F584((uint64_t)v33);
}

uint64_t sub_1001E7D20()
{
  return swift_release();
}

uint64_t sub_1001E7D90()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t sub_1001E7E04(uint64_t a1)
{
  return sub_1001E6A58(a1);
}

uint64_t sub_1001E7E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E6DCC(a1, (_OWORD *)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1001E7E58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001E7EB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E7614(*(_OWORD **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1001E7EBC()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 80;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001E7F7C()
{
  type metadata accessor for ScrollViewProxy();

  return sub_1001E7D20();
}

uint64_t sub_1001E8024()
{
  return sub_1001E7D90();
}

unint64_t sub_1001E8044()
{
  unint64_t result = qword_10038DE88;
  if (!qword_10038DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DE88);
  }
  return result;
}

uint64_t sub_1001E8098@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E7AB0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1001E80A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1001E80F8(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = *(uint64_t (**)(double))(v4 + 56);
  CGFloat MinY = CGRectGetMinY(*(CGRect *)&a1);
  return v5(MinY);
}

unint64_t sub_1001E8124()
{
  unint64_t result = qword_10038DE90;
  if (!qword_10038DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DE90);
  }
  return result;
}

unint64_t sub_1001E8178()
{
  unint64_t result = qword_10038DE98;
  if (!qword_10038DE98)
  {
    sub_1000094C4(&qword_10038DE60);
    sub_100009B18(&qword_10038DEA0, &qword_10038DEA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DE98);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerScrollContentFrame()
{
  return &type metadata for ExplorerScrollContentFrame;
}

uint64_t sub_1001E8228()
{
  return swift_getWitnessTable();
}

double sub_1001E84D0()
{
  double result = 0.0;
  xmmword_10038DDC0 = 0u;
  unk_10038DDD0 = 0u;
  return result;
}

double sub_1001E84E4@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10037DEB0 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_10038DDC0;
  long long v3 = unk_10038DDD0;
  *a1 = xmmword_10038DDC0;
  a1[1] = v3;
  return result;
}

BOOL sub_1001E8544(CGFloat *a1, void (*a2)(CGRect *__return_ptr))
{
  a2(&v8);
  CGFloat x = v8.origin.x;
  CGFloat y = v8.origin.y;
  CGFloat width = v8.size.width;
  CGFloat height = v8.size.height;
  v9.origin.CGFloat x = 0.0;
  v9.origin.CGFloat y = 0.0;
  v9.size.CGFloat width = 0.0;
  v9.size.CGFloat height = 0.0;
  BOOL result = CGRectEqualToRect(v8, v9);
  if (!result)
  {
    *a1 = x;
    a1[1] = y;
    a1[2] = width;
    a1[3] = height;
  }
  return result;
}

double ConnectionAssistantSatellite.init(radius:angle:pointHeight:color:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>)
{
  sub_1001E8F1C(a1, (uint64_t)v12, a3, a4, a5);

  long long v7 = v12[7];
  *(_OWORD *)(a2 + 96) = v12[6];
  *(_OWORD *)(a2 + 112) = v7;
  *(_OWORD *)(a2 + 128) = v12[8];
  *(_WORD *)(a2 + 144) = v13;
  long long v8 = v12[3];
  *(_OWORD *)(a2 + 32) = v12[2];
  *(_OWORD *)(a2 + 48) = v8;
  long long v9 = v12[5];
  *(_OWORD *)(a2 + 64) = v12[4];
  *(_OWORD *)(a2 + 80) = v9;
  double result = *(double *)v12;
  long long v11 = v12[1];
  *(_OWORD *)a2 = v12[0];
  *(_OWORD *)(a2 + 16) = v11;
  return result;
}

void ConnectionAssistantSatellite.cone(camera:earth:)(float32x4_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001E9004((uint64_t)(v3 + 12), (uint64_t)v44);
  sub_1001E9004((uint64_t)v44, (uint64_t)&v45);
  char v7 = v54;
  if (v54)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    char v12 = 0;
    long long v13 = 0uLL;
    long long v14 = 0uLL;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
  }
  else
  {
    uint64_t v8 = v45;
    double v17 = v46;
    double v18 = v47;
    uint64_t v9 = v48;
    uint64_t v10 = v49;
    uint64_t v11 = v50;
    long long v42 = v52;
    long long v43 = v51;
    char v19 = v53;
    float32x4_t v41 = a1[5];
    __float2 v20 = __sincosf_stret(v3[1] * -0.5);
    float32x4_t v21 = vmulq_n_f32(v41, v20.__sinval);
    float32x4_t v22 = v21;
    v22.i32[3] = LODWORD(v20.__cosval);
    float32x4_t v23 = a1[7];
    float32x4_t v24 = vmulq_f32(v22, (float32x4_t)xmmword_1002B72B0);
    int32x4_t v25 = (int32x4_t)vnegq_f32(v24);
    int8x16_t v26 = (int8x16_t)vtrn2q_s32((int32x4_t)v24, vtrn1q_s32((int32x4_t)v24, v25));
    float32x4_t v27 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v24, (int8x16_t)v25, 8uLL), *(float32x2_t *)v23.f32, 1), (float32x4_t)vextq_s8(v26, v26, 8uLL), v23.f32[0]);
    float32x4_t v28 = (float32x4_t)vrev64q_s32((int32x4_t)v24);
    v28.i32[0] = v25.i32[1];
    v28.i32[3] = v25.i32[2];
    float32x4_t v29 = vmlaq_laneq_f32(v27, v28, v23, 2);
    int32x4_t v30 = (int32x4_t)vnegq_f32(v29);
    int8x16_t v31 = (int8x16_t)vtrn2q_s32((int32x4_t)v29, vtrn1q_s32((int32x4_t)v29, v30));
    float32x4_t v32 = (float32x4_t)vrev64q_s32((int32x4_t)v29);
    v32.i32[0] = v30.i32[1];
    v32.i32[3] = v30.i32[2];
    float32x4_t v33 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v29, v22, 3), v32, v21, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 8uLL), *(float32x2_t *)v21.f32, 1), (float32x4_t)vextq_s8(v31, v31, 8uLL), v21.f32[0]));
    float v39 = *v3;
    float32x2_t v40 = *(float32x2_t *)v33.f32;
    v41.i32[0] = vmuls_lane_f32(*v3, v33, 2);
    double v34 = ConnectionAssistantEarth.direction(for:)(v17, v18);
    float v36 = *(float *)(a2 + 68);
    float v37 = v36 * (float)(0.0 - v35);
    float32x2_t v38 = vmul_n_f32(v40, v39);
    *(float32x2_t *)&long long v14 = vsub_f32(vmul_n_f32(vsub_f32(0, *(float32x2_t *)&v34), v36), v38);
    *(float32x2_t *)&long long v13 = v38;
    *((void *)&v13 + 1) = v41.u32[0];
    *((float *)&v14 + 2) = v37 - v41.f32[0];
    long long v16 = v42;
    long long v15 = v43;
    HIDWORD(v14) = 0;
    char v12 = v19 & 1;
  }
  *(_OWORD *)a3 = v13;
  *(_OWORD *)(a3 + 16) = v14;
  *(void *)(a3 + 32) = v8;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = v9;
  *(void *)(a3 + 56) = v10;
  *(void *)(a3 + 64) = v11;
  *(void *)(a3 + 72) = 0;
  *(_OWORD *)(a3 + 80) = v15;
  *(_OWORD *)(a3 + 96) = v16;
  *(unsigned char *)(a3 + 112) = v12;
  *(unsigned char *)(a3 + 113) = v7;
}

float32x2_t ConnectionAssistantSatellite.center(camera:earthCenter:)(float32x4_t *a1, float32x2_t a2)
{
  float32x4_t v19 = a1[5];
  __float2 v4 = __sincosf_stret(v2[1] * -0.5);
  float32x4_t v5 = vmulq_n_f32(v19, v4.__sinval);
  float32x4_t v6 = v5;
  v6.i32[3] = LODWORD(v4.__cosval);
  float32x4_t v7 = a1[7];
  float32x4_t v8 = vmulq_f32(v6, (float32x4_t)xmmword_1002B72B0);
  int32x4_t v9 = (int32x4_t)vnegq_f32(v8);
  int8x16_t v10 = (int8x16_t)vtrn2q_s32((int32x4_t)v8, vtrn1q_s32((int32x4_t)v8, v9));
  float32x4_t v11 = vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)v9, 8uLL), *(float32x2_t *)v7.f32, 1);
  float32x4_t v12 = (float32x4_t)vrev64q_s32((int32x4_t)v8);
  v12.i32[0] = v9.i32[1];
  v12.i32[3] = v9.i32[2];
  float32x4_t v13 = vmlaq_laneq_f32(vmlaq_n_f32(v11, (float32x4_t)vextq_s8(v10, v10, 8uLL), v7.f32[0]), v12, v7, 2);
  int32x4_t v14 = (int32x4_t)vnegq_f32(v13);
  int8x16_t v15 = (int8x16_t)vtrn2q_s32((int32x4_t)v13, vtrn1q_s32((int32x4_t)v13, v14));
  float32x4_t v16 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v13, (int8x16_t)v14, 8uLL), *(float32x2_t *)v5.f32, 1), (float32x4_t)vextq_s8(v15, v15, 8uLL), v5.f32[0]);
  float32x4_t v17 = (float32x4_t)vrev64q_s32((int32x4_t)v13);
  v17.i32[0] = v14.i32[1];
  v17.i32[3] = v14.i32[2];
  return vadd_f32(a2, vmul_n_f32((float32x2_t)*(_OWORD *)&vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v13, v6, 3), v17, v5, 2), v16), *v2));
}

double ConnectionAssistantSatellite.model(projectedCenter:textureSize:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  float v7 = *(float *)(v4 + 8);
  uint64_t v8 = *(void *)a3;
  uint64_t v9 = *(void *)(a3 + 8);
  float v10 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(*(void *)a3, v9, *(double *)(a3 + 16));
  __sincosf_stret(*(float *)(v4 + 4) * 0.5);
  simd_float4x4.init(_:)();
  if (v8) {
    BOOL v15 = v9 == 0;
  }
  else {
    BOOL v15 = 1;
  }
  float v16 = 1.0;
  float v17 = 1.0;
  if (!v15)
  {
    float v18 = (float)v8 / (float)v9;
    float v16 = fminf(v18, 1.0);
    float v17 = fmaxf(v18, 1.0);
  }
  *(float *)&unsigned int v19 = 1.0 / v17;
  LODWORD(v20) = 0;
  *((float *)&v20 + 1) = 1.0 / (float)(1.0 / v16);
  float32x4_t v21 = vmulq_n_f32((float32x4_t)v19, *(float *)&a4);
  float32x4_t v22 = vaddq_f32(vmlaq_f32((float32x4_t)v19, (float32x4_t)0, (float32x4_t)v20), (float32x4_t)0);
  *(float *)&unsigned int v23 = *(float *)&v19 * 0.0;
  float32x4_t v24 = vaddq_f32(vaddq_f32((float32x4_t)v20, (float32x4_t)COERCE_UNSIGNED_INT(*(float *)&v19 * 0.0)), (float32x4_t)0);
  float32x4_t v25 = vaddq_f32(vmlaq_f32((float32x4_t)v23, (float32x4_t)0, (float32x4_t)v20), (float32x4_t)xmmword_1002B9C00);
  float32x4_t v26 = vaddq_f32(vaddq_f32(vmlaq_lane_f32(v21, (float32x4_t)v20, *(float32x2_t *)&a4, 1), (float32x4_t)0), (float32x4_t)xmmword_1002B72C0);
  *(void *)&double result = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v11.f32[0]), v24, *(float32x2_t *)v11.f32, 1), v25, v11, 2), v26, v11, 3), (float)((float)((float)(v7 / (float)((float)a2 / (float)a1)) * 3.0) * 0.5) * v10), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v12.f32[0]), v24, *(float32x2_t *)v12.f32, 1), v25, v12,
                                 2),
                               v26,
                               v12,
                               3)),
                           (float32x4_t)0,
                           vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v13.f32[0]), v24, *(float32x2_t *)v13.f32, 1), v25, v13, 2), v26, v13, 3)), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v14.f32[0]), v24, *(float32x2_t *)v14.f32, 1), v25, v14, 2), v26, v14, 3)).u64[0];
  return result;
}

uint64_t sub_1001E8AC4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  char v12 = *(unsigned char *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  char v14 = *(unsigned char *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_1001E8C88((uint64_t)v11, (uint64_t)v13) & 1;
}

double ConnectionAssistantSatellite.direction(camera:)(float32x4_t *a1)
{
  float32x4_t v18 = a1[5];
  __float2 v3 = __sincosf_stret(*(float *)(v1 + 4) * -0.5);
  float32x4_t v4 = vmulq_n_f32(v18, v3.__sinval);
  float32x4_t v5 = v4;
  v5.i32[3] = LODWORD(v3.__cosval);
  float32x4_t v6 = a1[7];
  float32x4_t v7 = vmulq_f32(v5, (float32x4_t)xmmword_1002B72B0);
  int32x4_t v8 = (int32x4_t)vnegq_f32(v7);
  int8x16_t v9 = (int8x16_t)vtrn2q_s32((int32x4_t)v7, vtrn1q_s32((int32x4_t)v7, v8));
  float32x4_t v10 = vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v7, (int8x16_t)v8, 8uLL), *(float32x2_t *)v6.f32, 1);
  float32x4_t v11 = (float32x4_t)vrev64q_s32((int32x4_t)v7);
  v11.i32[0] = v8.i32[1];
  v11.i32[3] = v8.i32[2];
  float32x4_t v12 = vmlaq_laneq_f32(vmlaq_n_f32(v10, (float32x4_t)vextq_s8(v9, v9, 8uLL), v6.f32[0]), v11, v6, 2);
  int32x4_t v13 = (int32x4_t)vnegq_f32(v12);
  int8x16_t v14 = (int8x16_t)vtrn2q_s32((int32x4_t)v12, vtrn1q_s32((int32x4_t)v12, v13));
  float32x4_t v15 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v12, (int8x16_t)v13, 8uLL), *(float32x2_t *)v4.f32, 1), (float32x4_t)vextq_s8(v14, v14, 8uLL), v4.f32[0]);
  float32x4_t v16 = (float32x4_t)vrev64q_s32((int32x4_t)v12);
  v16.i32[0] = v13.i32[1];
  v16.i32[3] = v13.i32[2];
  *(void *)&double result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v12, v5, 3), v16, v4, 2), v15).u64[0];
  return result;
}

uint64_t sub_1001E8BF4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 112);
  _OWORD v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v2;
  v11[8] = *(_OWORD *)(a1 + 128);
  __int16 v12 = *(_WORD *)(a1 + 144);
  long long v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  _OWORD v13[6] = *(_OWORD *)(a2 + 96);
  v13[7] = v6;
  v13[8] = *(_OWORD *)(a2 + 128);
  __int16 v14 = *(_WORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  return _s8SOSBuddy28ConnectionAssistantSatelliteV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t sub_1001E8C88(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  uint64_t v2 = 0;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 32);
  while (1)
  {
    long long v10 = v3;
    float v7 = *(float *)((unint64_t)&v10 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    long long v11 = v4;
    float v8 = *(float *)((unint64_t)&v11 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    BOOL v5 = v7 == v8;
    if (v2 == 3) {
      break;
    }
    while (1)
    {
      ++v2;
      if (v5) {
        break;
      }
      BOOL v5 = 0;
      uint64_t v6 = 0;
      if (v2 == 3) {
        return v6;
      }
    }
  }
  if (v7 != v8 || *(float *)(a1 + 48) != *(float *)(a2 + 48)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 96))
  {
    if ((*(unsigned char *)(a2 + 96) & 1) == 0) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(a2 + 96) & 1) != 0 {
         || !_s8SOSBuddy23ConnectionAssistantConeV5PulseV23__derived_struct_equalsySbAE_AEtFZ_0(*(float *)(a1 + 64), *(__n128 *)(a1 + 80), COERCE_FLOAT(*(void *)(a2 + 64)), *(__n128 *)(a2 + 80)))
  }
  {
    return 0;
  }
  return 1;
}

uint64_t _s8SOSBuddy28ConnectionAssistantSatelliteV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8))
  {
    return 0;
  }
  uint64_t v2 = 0;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 16);
  while (1)
  {
    long long v25 = v3;
    float v7 = *(float *)((unint64_t)&v25 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    long long v26 = v4;
    float v8 = *(float *)((unint64_t)&v26 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    BOOL v5 = v7 == v8;
    if (v2 == 3) {
      break;
    }
    while (1)
    {
      ++v2;
      if (v5) {
        break;
      }
      BOOL v5 = 0;
      uint64_t v6 = 0;
      if (v2 == 3) {
        return v6;
      }
    }
  }
  if (v7 != v8 || *(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 145))
  {
    if ((*(unsigned char *)(a2 + 145) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 145)) {
      return 0;
    }
    long long v9 = *(_OWORD *)(a1 + 56);
    long long v10 = *(_OWORD *)(a1 + 112);
    long long v11 = *(_OWORD *)(a1 + 128);
    char v12 = *(unsigned char *)(a1 + 144);
    uint64_t v13 = *(void *)(a2 + 48);
    long long v14 = *(_OWORD *)(a2 + 56);
    uint64_t v15 = *(void *)(a2 + 80);
    uint64_t v16 = *(void *)(a2 + 88);
    uint64_t v17 = *(void *)(a2 + 96);
    long long v18 = *(_OWORD *)(a2 + 112);
    long long v19 = *(_OWORD *)(a2 + 128);
    char v20 = *(unsigned char *)(a2 + 144);
    uint64_t v22 = *(void *)(a1 + 88);
    uint64_t v21 = *(void *)(a1 + 96);
    uint64_t v23 = *(void *)(a1 + 80);
    int v27 = *(void *)(a1 + 48);
    long long v28 = v9;
    uint64_t v29 = v23;
    uint64_t v30 = v22;
    int v31 = v21;
    long long v32 = v10;
    long long v33 = v11;
    char v34 = v12 & 1;
    int v35 = v13;
    long long v36 = v14;
    uint64_t v37 = v15;
    uint64_t v38 = v16;
    int v39 = v17;
    long long v40 = v18;
    long long v41 = v19;
    char v42 = v20 & 1;
    if ((sub_1001E8C88((uint64_t)&v27, (uint64_t)&v35) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

id sub_1001E8F1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>)
{
  float64_t v14 = 0.0;
  float64_t v15 = 0.0;
  float64_t v12 = 0.0;
  float64_t v13 = 0.0;
  id result = [a1 getRed:&v15 green:&v14 blue:&v13 alpha:&v12];
  v10.f64[0] = v15;
  v11.f64[0] = v13;
  v10.f64[1] = v14;
  v11.f64[1] = v12;
  *(float *)a2 = a3;
  *(float *)(a2 + 4) = a4;
  *(float *)(a2 + 8) = a5;
  *(float32x4_t *)(a2 + 16) = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v10), v11);
  *(_DWORD *)(a2 + 32) = 1065353216;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_WORD *)(a2 + 144) = 256;
  return result;
}

uint64_t sub_1001E9004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038DEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 initializeWithCopy for ConnectionAssistantSatellite(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantSatellite(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 146)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantSatellite(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 146) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantSatellite()
{
  return &type metadata for ConnectionAssistantSatellite;
}

__n128 initializeWithCopy for ConnectionAssistantSatellite.Cone(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantSatellite.Cone(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantSatellite.Cone(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 97) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantSatellite.Cone()
{
  return &type metadata for ConnectionAssistantSatellite.Cone;
}

id sub_1001E91C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, double a4@<D1>, double a5@<D2>)
{
  float64_t v14 = 0.0;
  float64_t v15 = 0.0;
  float64_t v12 = 0.0;
  float64_t v13 = 0.0;
  id result = [a1 getRed:&v15 green:&v14 blue:&v13 alpha:&v12];
  v10.f64[0] = v15;
  v11.f64[0] = v13;
  v10.f64[1] = v14;
  v11.f64[1] = v12;
  *(float *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(float32x4_t *)(a2 + 32) = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v10), v11);
  *(_DWORD *)(a2 + 48) = 1065353216;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(unsigned char *)(a2 + 96) = 1;
  return result;
}

ValueMetadata *type metadata accessor for TryOutIntroView()
{
  return &type metadata for TryOutIntroView;
}

uint64_t sub_1001E92B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E92D4@<X0>(unsigned char *a1@<X8>)
{
  sub_1001CAA44();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001E9324()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1001E9370(uint64_t a1, uint64_t a2)
{
  sub_100004010(&qword_1003878B8);
  State.projectedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for UIMetrics();
  sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  EnvironmentObject.init()();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100004010(&qword_10038DEC0);
  sub_1001E9990();
  sub_1001E99E4();
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  swift_release();
  sub_10004C738(KeyPath, 0);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E9514@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 == 0xD000000000000024 && v4 == 0x80000001002C8FB0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_100004010(&qword_1003878B8);
    State.projectedValue.getter();
    swift_getKeyPath();
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.init()();
  }
  else
  {
    if (v3 != 0xD000000000000024 || v4 != 0x80000001002CD210)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0)
      {
        long long v6 = 0uLL;
        char v10 = -1;
        long long v7 = 0uLL;
        long long v8 = 0uLL;
        long long v9 = 0uLL;
        goto LABEL_6;
      }
    }
    type metadata accessor for AppEvents();
    sub_10004F378((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    EnvironmentObject.init()();
    type metadata accessor for UIMetrics();
    sub_10004F378((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.init()();
    swift_getKeyPath();
    State.init(wrappedValue:)();
  }
  sub_1001E9AD4();
  sub_1001E9B28();
  uint64_t result = _ConditionalContent<>.init(storage:)();
  long long v6 = v11;
  long long v7 = v12;
  long long v8 = v13;
  long long v9 = v14;
  char v10 = v15;
LABEL_6:
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 48) = v9;
  *(unsigned char *)(a2 + 64) = v10;
  return result;
}

uint64_t sub_1001E97DC()
{
  return NavigationStack.init<>(path:root:)();
}

uint64_t sub_1001E9988()
{
  return sub_1001E9370(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1001E9990()
{
  unint64_t result = qword_10038DEC8;
  if (!qword_10038DEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DEC8);
  }
  return result;
}

unint64_t sub_1001E99E4()
{
  unint64_t result = qword_10038DED0;
  if (!qword_10038DED0)
  {
    sub_1000094C4(&qword_10038DEC0);
    sub_1001E9A58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DED0);
  }
  return result;
}

unint64_t sub_1001E9A58()
{
  unint64_t result = qword_10038DED8;
  if (!qword_10038DED8)
  {
    sub_1000094C4(&qword_10038DEE0);
    sub_1001E9AD4();
    sub_1001E9B28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DED8);
  }
  return result;
}

unint64_t sub_1001E9AD4()
{
  unint64_t result = qword_10038DEE8;
  if (!qword_10038DEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DEE8);
  }
  return result;
}

unint64_t sub_1001E9B28()
{
  unint64_t result = qword_10038DEF0;
  if (!qword_10038DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DEF0);
  }
  return result;
}

uint64_t sub_1001E9B7C@<X0>(unsigned char *a1@<X8>)
{
  sub_1001CAA44();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001E9BCC()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1001E9C18()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E9C58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E9514(a1, a2);
}

uint64_t sub_1001E9C60()
{
  return sub_100009B18(&qword_10038DEF8, &qword_10038DF00);
}

uint64_t *sub_1001E9C9C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_100004010(&qword_1003819B0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v6 = *(int *)(sub_100004010(&qword_1003819B8) + 32);
      long long v7 = (char *)a1 + v6;
      long long v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1001E9DD8(uint64_t a1)
{
  sub_100004010(&qword_1003819B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v4 = a1 + *(int *)(sub_100004010(&qword_1003819B8) + 32);
    uint64_t v5 = type metadata accessor for PresentationMode();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_1001E9E90(void *a1, void *a2)
{
  sub_100004010(&qword_1003819B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v5 = *(int *)(sub_100004010(&qword_1003819B8) + 32);
    uint64_t v6 = (char *)a1 + v5;
    long long v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1001E9F74(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10000950C((uint64_t)a1, &qword_1003819B0);
    sub_100004010(&qword_1003819B0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v5 = *(int *)(sub_100004010(&qword_1003819B8) + 32);
      uint64_t v6 = (char *)a1 + v5;
      long long v7 = (char *)a2 + v5;
      uint64_t v8 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1001EA070(void *a1, void *a2)
{
  uint64_t v4 = sub_100004010(&qword_1003819B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(sub_100004010(&qword_1003819B8) + 32);
    long long v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1001EA154(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10000950C((uint64_t)a1, &qword_1003819B0);
    uint64_t v4 = sub_100004010(&qword_1003819B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = *(int *)(sub_100004010(&qword_1003819B8) + 32);
      long long v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001EA250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EA264);
}

uint64_t sub_1001EA264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038DF08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001EA2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EA2E8);
}

uint64_t sub_1001EA2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038DF08);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TryOutBackButtonView()
{
  uint64_t result = qword_10038DF68;
  if (!qword_10038DF68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001EA3A8()
{
  sub_1001EA434();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001EA434()
{
  if (!qword_10038DF78)
  {
    sub_1000094C4(&qword_1003819B8);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10038DF78);
    }
  }
}

uint64_t sub_1001EA490()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001EA4AC()
{
  uint64_t v0 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100004010(&qword_1003819B8);
  __chkstk_darwin(v1);
  char v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F094((uint64_t)v3);
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_10000950C((uint64_t)v3, &qword_1003819B8);
}

uint64_t sub_1001EA5B4()
{
  return swift_release();
}

uint64_t sub_1001EA68C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1 - 8);
  sub_1001EA7F0(v1, (uint64_t)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_1001EA974((uint64_t)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4);
  sub_100004010(&qword_10038DFA8);
  uint64_t v6 = sub_1000094C4(&qword_10038DFB0);
  unint64_t v7 = sub_1001EAA38();
  v9[0] = v6;
  v9[1] = v7;
  swift_getOpaqueTypeConformance2();
  return Button.init(action:label:)();
}

uint64_t sub_1001EA7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TryOutBackButtonView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001EA854()
{
  uint64_t v1 = *(void *)(type metadata accessor for TryOutBackButtonView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  sub_100004010(&qword_1003819B0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v6 = v0 + v3 + *(int *)(sub_100004010(&qword_1003819B8) + 32);
    uint64_t v7 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001EA974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TryOutBackButtonView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001EA9D8()
{
  type metadata accessor for TryOutBackButtonView();

  return sub_1001EA4AC();
}

unint64_t sub_1001EAA38()
{
  unint64_t result = qword_10038DFB8;
  if (!qword_10038DFB8)
  {
    sub_1000094C4(&qword_10038DFB0);
    sub_10003F5C0();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DFB8);
  }
  return result;
}

uint64_t sub_1001EAAE0()
{
  return sub_100009B18(&qword_10038DFC0, &qword_10038DFC8);
}

ValueMetadata *type metadata accessor for InitialConnectionView()
{
  return &type metadata for InitialConnectionView;
}

uint64_t sub_1001EAB2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001EAB48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v4 = sub_100004010(&qword_10038DFD0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v1 + 32);
  if (v8)
  {
    uint64_t v9 = v8[9];
    uint64_t v10 = v8[10];
    sub_100008F88(v8 + 6, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 32))(v34, v9, v10);
    sub_1000090FC((uint64_t)v34, (uint64_t)&v23);
    long long v11 = (_OWORD *)swift_allocObject();
    long long v12 = *(_OWORD *)(v1 + 16);
    v11[1] = *(_OWORD *)v1;
    v11[2] = v12;
    long long v13 = *(_OWORD *)(v1 + 48);
    v11[3] = *(_OWORD *)(v1 + 32);
    v11[4] = v13;
    sub_100009164(&v23, (uint64_t)(v11 + 5));
    sub_1000BCC88(v1);
    type metadata accessor for UIMetrics();
    sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v14 = EnvironmentObject.init()();
    uint64_t v16 = v15;
    type metadata accessor for CGSize(0);
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    State.init(wrappedValue:)();
    *(void *)&long long v23 = v14;
    *((void *)&v23 + 1) = v16;
    float32x4_t v24 = sub_1001EAEA0;
    uint64_t v25 = 0;
    long long v26 = sub_1001EB700;
    int v27 = v11;
    long long v28 = v32;
    uint64_t v29 = v33;
    sub_100004010(&qword_10038DFD8);
    sub_100009B18(&qword_10038DFE0, &qword_10038DFD8);
    View.navigationBarBackButtonHidden(_:)();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v17 = (uint64_t (*)())swift_allocObject();
    long long v18 = v2[1];
    *((_OWORD *)v17 + 1) = *v2;
    *((_OWORD *)v17 + 2) = v18;
    long long v19 = v2[3];
    *((_OWORD *)v17 + 3) = v2[2];
    *((_OWORD *)v17 + 4) = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v7, v4);
    char v20 = (uint64_t (**)())(a1 + *(int *)(sub_100004010(&qword_10038DFE8) + 36));
    *char v20 = sub_1001EB75C;
    v20[1] = v17;
    long long v20[2] = 0;
    uint64_t v20[3] = 0;
    sub_1000BCC88((uint64_t)v2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v34);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

double sub_1001EAEA0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.center.getter();
  sub_1001EAF8C((uint64_t)v10);
  *(_OWORD *)&v11[135] = v10[8];
  *(_OWORD *)&v11[151] = v10[9];
  *(_OWORD *)&v11[167] = v10[10];
  *(_OWORD *)&v11[183] = v10[11];
  *(_OWORD *)&v11[71] = v10[4];
  *(_OWORD *)&v11[87] = v10[5];
  *(_OWORD *)&v11[103] = v10[6];
  *(_OWORD *)&v11[119] = v10[7];
  *(_OWORD *)&v11[7] = v10[0];
  *(_OWORD *)&v11[23] = v10[1];
  *(_OWORD *)&v11[39] = v10[2];
  *(_OWORD *)&v11[55] = v10[3];
  long long v3 = *(_OWORD *)&v11[128];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v11[144];
  long long v4 = *(_OWORD *)&v11[176];
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v11[160];
  *(_OWORD *)(a1 + 193) = v4;
  long long v5 = *(_OWORD *)&v11[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v11[80];
  long long v6 = *(_OWORD *)&v11[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v11[96];
  *(_OWORD *)(a1 + 129) = v6;
  *(_OWORD *)(a1 + 145) = v3;
  long long v7 = *(_OWORD *)v11;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v11[16];
  double result = *(double *)&v11[32];
  long long v9 = *(_OWORD *)&v11[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v11[32];
  *(_OWORD *)(a1 + 65) = v9;
  *(_OWORD *)(a1 + 81) = v5;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 208) = *(void *)&v11[191];
  *(_OWORD *)(a1 + 17) = v7;
  return result;
}

uint64_t sub_1001EAF8C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ConnectionClosedModel(0);
  sub_1001EDA7C(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  uint64_t v31 = EnvironmentObject.init()();
  uint64_t v32 = v2;
  type metadata accessor for ConnectivityModel();
  sub_1001EDA7C(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t v29 = EnvironmentObject.init()();
  uint64_t v30 = v3;
  type metadata accessor for GuidanceModel(0);
  sub_1001EDA7C(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  uint64_t v27 = EnvironmentObject.init()();
  uint64_t v28 = v4;
  type metadata accessor for OrientationModel();
  sub_1001EDA7C(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  uint64_t v25 = EnvironmentObject.init()();
  uint64_t v26 = v5;
  type metadata accessor for StewieModel();
  sub_1001EDA7C(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v24 = v7;
  type metadata accessor for UIMetrics();
  sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v8 = EnvironmentObject.init()();
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  uint64_t v21 = EnvironmentObject.init()();
  uint64_t v11 = v10;
  uint64_t v12 = EnvironmentObject.init()();
  uint64_t v14 = v13;
  type metadata accessor for GuidanceMessagesModel();
  sub_1001EDA7C(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  uint64_t v15 = EnvironmentObject.init()();
  uint64_t v17 = v16;
  uint64_t v18 = EnvironmentObject.init()();
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v32;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v30;
  *(void *)(a1 + 32) = v27;
  *(void *)(a1 + 40) = v28;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v26;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v23;
  *(void *)(a1 + 88) = v22;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v21;
  *(void *)(a1 + 120) = v11;
  *(void *)(a1 + 128) = v12;
  *(void *)(a1 + 136) = v14;
  *(void *)(a1 + 144) = 32;
  *(void *)(a1 + 152) = 0xE100000000000000;
  *(void *)(a1 + 160) = v15;
  *(void *)(a1 + 168) = v17;
  *(void *)(a1 + 176) = v18;
  *(void *)(a1 + 184) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001EB2A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = static HorizontalAlignment.center.getter();
  if (*(void *)(a1 + 48))
  {
    uint64_t v7 = v6;
    swift_retain();
    uint64_t v8 = sub_1000C9680();
    uint64_t v10 = v9;
    char v12 = v11;
    swift_release();
    uint64_t v27 = v7;
    if (v10)
    {
      if (v12)
      {
        type metadata accessor for AppEvents();
        sub_1001EDA7C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
        uint64_t v20 = EnvironmentObject.init()();
        uint64_t v25 = v21;
        uint64_t v26 = v20;
        type metadata accessor for UIMetrics();
        sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
        uint64_t v13 = EnvironmentObject.init()();
        uint64_t v14 = v22;
        uint64_t v23 = sub_100008F88(a2, a2[3]);
        uint64_t v16 = *(void *)(*v23 + 80);
        uint64_t v17 = *(void *)(*v23 + 88);
        uint64_t v18 = *(void *)(*v23 + 96);
        uint64_t v19 = *(void *)(*v23 + 104);
        uint64_t v15 = static Edge.Set.all.getter();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v8 = 0;
        uint64_t v10 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
      }
    }
    else
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v8 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v10 = 1;
    }
    uint64_t result = static Edge.Set.top.getter();
    *(void *)a3 = v27;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = v26;
    *(void *)(a3 + 32) = v25;
    *(void *)(a3 + 40) = v13;
    *(void *)(a3 + 48) = v14;
    *(void *)(a3 + 56) = v8;
    *(void *)(a3 + 64) = v10;
    *(void *)(a3 + 72) = v15;
    *(void *)(a3 + 80) = v16;
    *(void *)(a3 + 88) = v17;
    *(void *)(a3 + 96) = v18;
    *(void *)(a3 + 104) = v19;
    *(unsigned char *)(a3 + 112) = 0;
    *(unsigned char *)(a3 + 120) = result;
    *(_OWORD *)(a3 + 128) = 0u;
    *(_OWORD *)(a3 + 144) = 0u;
    *(unsigned char *)(a3 + 160) = 1;
  }
  else
  {
    type metadata accessor for QuestionnaireState();
    sub_1001EDA7C(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EB508(void *a1)
{
  uint64_t v2 = a1[2];
  if (!v2)
  {
    type metadata accessor for ConnectionModel(0);
    uint64_t v6 = &qword_10037F100;
    uint64_t v7 = (uint64_t (*)())type metadata accessor for ConnectionModel;
    goto LABEL_11;
  }
  if ((*(unsigned char *)(*(void *)(v2 + 56) + 106) & 1) == 0)
  {
    if (a1[6])
    {
      swift_retain();
      sub_1000C9680();
      uint64_t v4 = v3;
      swift_release();
      if (v4) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_6;
    }
    type metadata accessor for QuestionnaireState();
    uint64_t v6 = &qword_10037F008;
    uint64_t v7 = type metadata accessor for QuestionnaireState;
LABEL_11:
    uint64_t v8 = v7;
    goto LABEL_12;
  }
LABEL_6:
  if (*a1)
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  type metadata accessor for AppEvents();
  uint64_t v6 = (unint64_t *)&qword_10037F000;
  uint64_t v8 = type metadata accessor for AppEvents;
LABEL_12:
  sub_1001EDA7C(v6, (void (*)(uint64_t))v8);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001EB66C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001EAB48(a1);
}

uint64_t sub_1001EB6A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 80);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1001EB700@<X0>(uint64_t a1@<X8>)
{
  return sub_1001EB2A4(v1 + 16, (void *)(v1 + 80), a1);
}

uint64_t sub_1001EB70C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001EB75C()
{
  return sub_1001EB508((void *)(v0 + 16));
}

uint64_t destroy for OpeningMessagesButtonView()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OpeningMessagesButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OpeningMessagesButtonView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OpeningMessagesButtonView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for OpeningMessagesButtonView()
{
  return &type metadata for OpeningMessagesButtonView;
}

unint64_t sub_1001EB90C()
{
  unint64_t result = qword_10038DFF0;
  if (!qword_10038DFF0)
  {
    sub_1000094C4(&qword_10038DFE8);
    sub_1000094C4(&qword_10038DFD8);
    sub_100009B18(&qword_10038DFE0, &qword_10038DFD8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038DFF0);
  }
  return result;
}

uint64_t sub_1001EB9E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001EBA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v74 = type metadata accessor for KeyboardShortcut();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ButtonBorderShape();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v69 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for BorderedButtonStyle();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100004010(&qword_10038DFF8);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_10038E000);
  uint64_t v8 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004010(&qword_10038E008);
  __chkstk_darwin(v62);
  char v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004010(&qword_10038E010);
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v65 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004010(&qword_10038E018);
  __chkstk_darwin(v64);
  uint64_t v66 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004010(&qword_10038E020);
  __chkstk_darwin(v76);
  uint64_t v77 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_10038E028);
  __chkstk_darwin(v16 - 8);
  uint64_t v75 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)*((void *)v1 + 2);
  if (v18)
  {
    uint64_t v20 = v18[9];
    uint64_t v19 = v18[10];
    sub_100008F88(v18 + 6, v20);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 32))(v79, v20, v19);
    long long v21 = *v1;
    long long v88 = v1[2];
    long long v89 = v21;
    uint64_t v22 = (_OWORD *)swift_allocObject();
    long long v23 = v1[1];
    v22[1] = *v1;
    void v22[2] = v23;
    v22[3] = v1[2];
    sub_10004ED30((uint64_t)&v89);
    swift_retain();
    sub_100039BF8((uint64_t)&v88);
    sub_1001EC680();
    Button.init(action:label:)();
    BorderedButtonStyle.init()();
    sub_100009B18(&qword_10038E038, &qword_10038DFF8);
    sub_1001EDA7C((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    uint64_t v24 = v59;
    uint64_t v25 = v61;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v5, v25);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v24);
    uint64_t v26 = v69;
    static ButtonBorderShape.capsule.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v28 = (uint64_t *)&v12[*(int *)(v62 + 36)];
    uint64_t v29 = sub_100004010(&qword_100381038);
    uint64_t v30 = v70;
    uint64_t v31 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v28 + *(int *)(v29 + 28), v26, v71);
    uint64_t *v28 = KeyPath;
    uint64_t v32 = v63;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v63);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v31);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v32);
    uint64_t v33 = v72;
    static KeyboardShortcut.defaultAction.getter();
    sub_1001ED75C();
    char v34 = v65;
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v74);
    sub_10000950C((uint64_t)v12, &qword_10038E008);
    uint64_t v35 = static Color.green.getter();
    uint64_t v36 = swift_getKeyPath();
    *(void *)&long long v81 = v35;
    swift_retain();
    uint64_t v37 = AnyShapeStyle.init<A>(_:)();
    uint64_t v38 = v67;
    uint64_t v39 = (uint64_t)v66;
    uint64_t v40 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v34, v68);
    swift_release();
    long long v41 = (uint64_t *)(v39 + *(int *)(v64 + 36));
    *long long v41 = v36;
    v41[1] = v37;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v40);
    double v42 = *(double *)(*sub_100008F88(v79, v80) + 216);
    double v43 = *(double *)(*sub_100008F88(v79, v80) + 216);
    static Alignment.center.getter();
    if (v42 > v43)
    {
      static os_log_type_t.fault.getter();
      uint64_t v44 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v45 = v77;
    sub_10000D2A0(v39, v77, &qword_10038E018);
    double v46 = (_OWORD *)(v45 + *(int *)(v76 + 36));
    long long v47 = v86;
    v46[4] = v85;
    v46[5] = v47;
    v46[6] = v87;
    long long v48 = v82;
    _OWORD *v46 = v81;
    v46[1] = v48;
    long long v49 = v84;
    v46[2] = v83;
    v46[3] = v49;
    sub_10000950C(v39, &qword_10038E018);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v50 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v52 = v51;
    char v54 = v53 & 1;
    sub_1001ED8AC();
    uint64_t v55 = (uint64_t)v75;
    View.accessibility(label:)();
    sub_100033364(v50, v52, v54);
    swift_bridgeObjectRelease();
    sub_10000950C(v45, &qword_10038E020);
    sub_10000D544(v55, v78, &qword_10038E028);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v79);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EC4C4(uint64_t a1)
{
  if (*(void *)a1)
  {
    long long v2 = *(_OWORD *)(a1 + 32);
    swift_retain();
    sub_100039BF8((uint64_t)&v2);
    PassthroughSubject.send(_:)();
    swift_release();
    return sub_100039F34((uint64_t)&v2);
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_1001EDA7C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EC584@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001EC5F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001EBA04(a1);
}

uint64_t sub_1001EC630()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001EC678()
{
  return sub_1001EC4C4(v0 + 16);
}

unint64_t sub_1001EC680()
{
  unint64_t result = qword_10038E030;
  if (!qword_10038E030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E030);
  }
  return result;
}

uint64_t sub_1001EC6D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_100388DA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100388DA8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100388DB0);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v13 = a1[9];
    uint64_t v14 = a1[10];
    sub_100008F88(a1 + 6, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 32))(v21, v13, v14);
    *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    uint64_t v15 = sub_100004010(&qword_100388DB8);
    sub_1001EC9B0((uint64_t)a1, &v6[*(int *)(v15 + 44)]);
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v6, (uint64_t)v9, &qword_100388DA0);
    uint64_t v16 = &v9[*(int *)(v7 + 36)];
    long long v17 = v27;
    *((_OWORD *)v16 + 4) = v26;
    *((_OWORD *)v16 + 5) = v17;
    *((_OWORD *)v16 + 6) = v28;
    long long v18 = v23;
    *(_OWORD *)uint64_t v16 = v22;
    *((_OWORD *)v16 + 1) = v18;
    long long v19 = v25;
    *((_OWORD *)v16 + 2) = v24;
    *((_OWORD *)v16 + 3) = v19;
    sub_10000950C((uint64_t)v6, &qword_100388DA0);
    sub_10014B4B0();
    View.accessibility(hidden:)();
    sub_10000950C((uint64_t)v9, &qword_100388DA8);
    sub_10000D544((uint64_t)v12, a2, &qword_100388DB0);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v21);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EC9B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  UIContentSizeCategory v110 = a2;
  uint64_t v99 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v99);
  uint64_t v116 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100004010(&qword_100388DD0);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v100 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004010(&qword_100388DD8);
  __chkstk_darwin(v98);
  uint64_t v104 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100004010(&qword_100388DE0);
  __chkstk_darwin(v101);
  uint64_t v107 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100004010(&qword_100388DE8);
  uint64_t v7 = __chkstk_darwin(v106);
  uint64_t v109 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v105 = (uint64_t)&v93 - v10;
  __chkstk_darwin(v9);
  uint64_t v108 = (uint64_t)&v93 - v11;
  uint64_t v12 = type metadata accessor for Font.Leading();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004010(&qword_1003828F8);
  __chkstk_darwin(v94);
  uint64_t v16 = (uint64_t *)((char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for Image.Scale();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_1003828E8);
  __chkstk_darwin(v21);
  long long v23 = (uint64_t *)((char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = sub_100004010(&qword_1003828D0);
  __chkstk_darwin(v96);
  long long v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004010(&qword_100388DF0);
  uint64_t v111 = *(void *)(v26 - 8);
  uint64_t v112 = v26;
  __chkstk_darwin(v26);
  uint64_t v95 = (uint64_t)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004010(&qword_100388DF8);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v97 = (uint64_t)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v118 = (uint64_t)&v93 - v31;
  if (!a1) {
    goto LABEL_11;
  }
  uint64_t v117 = a1;
  id v32 = *(id *)(a1 + 112);
  UIContentSizeCategory v115 = UIContentSizeCategoryAccessibilityExtraLarge;
  char v33 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v33)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v118, 1, 1, v112);
    uint64_t v34 = enum case for Font.Leading.tight(_:);
    uint64_t v36 = v113;
    uint64_t v35 = v114;
  }
  else
  {
    uint64_t v37 = Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Image.Scale.medium(_:), v17);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))((char *)v16 + *(int *)(v94 + 28), v20, v17);
    *uint64_t v16 = KeyPath;
    sub_10000D2A0((uint64_t)v16, (uint64_t)v23 + *(int *)(v21 + 36), &qword_1003828F8);
    *long long v23 = v37;
    swift_retain();
    sub_10000950C((uint64_t)v16, &qword_1003828F8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    swift_release();
    static Font.title3.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v34 = enum case for Font.Leading.tight(_:);
    uint64_t v36 = v113;
    uint64_t v35 = v114;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v14, enum case for Font.Leading.tight(_:), v114);
    uint64_t v39 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
    uint64_t v40 = swift_getKeyPath();
    sub_10000D2A0((uint64_t)v23, (uint64_t)v25, &qword_1003828E8);
    long long v41 = (uint64_t *)&v25[*(int *)(v96 + 36)];
    *long long v41 = v40;
    v41[1] = v39;
    sub_10000950C((uint64_t)v23, &qword_1003828E8);
    uint64_t v42 = static Color.green.getter();
    uint64_t v43 = v95;
    sub_10000D2A0((uint64_t)v25, v95, &qword_1003828D0);
    uint64_t v44 = v112;
    *(void *)(v43 + *(int *)(v112 + 36)) = v42;
    sub_10000950C((uint64_t)v25, &qword_1003828D0);
    uint64_t v45 = v118;
    sub_10000D544(v43, v118, &qword_100388DF0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v45, 0, 1, v44);
  }
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v46 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v48 = v47;
  char v50 = v49 & 1;
  static Font.title3.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v14, v34, v35);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
  uint64_t v51 = Text.font(_:)();
  uint64_t v53 = v52;
  char v55 = v54;
  swift_release();
  char v56 = v55 & 1;
  sub_100033364(v46, v48, v50);
  swift_bridgeObjectRelease();
  static Color.green.getter();
  uint64_t v57 = Text.foregroundColor(_:)();
  uint64_t v59 = v58;
  char v61 = v60;
  uint64_t v63 = v62;
  swift_release();
  sub_100033364(v51, v53, v56);
  swift_bridgeObjectRelease();
  uint64_t v64 = v117;
  id v65 = *(id *)(v117 + 112);
  char v66 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v67 = swift_getKeyPath();
  *(void *)&long long v119 = v57;
  *((void *)&v119 + 1) = v59;
  LOBYTE(v120) = v61 & 1;
  *((void *)&v120 + 1) = v63;
  *(void *)&long long v121 = v67;
  *((void *)&v121 + 1) = (v66 & 1) == 0;
  char v122 = v66 & 1;
  uint64_t v68 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v69 = type metadata accessor for DynamicTypeSize();
  uint64_t v70 = (uint64_t)v116;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 104))(v116, v68, v69);
  sub_1001EDA7C(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
LABEL_11:
    type metadata accessor for UIMetrics();
    sub_1001EDA7C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  sub_100004010(&qword_1003887A0);
  sub_10013A764();
  sub_100009B18(&qword_10037F030, &qword_10037F010);
  uint64_t v71 = v100;
  View.dynamicTypeSize<A>(_:)();
  sub_10000950C(v70, &qword_10037F010);
  sub_100033364(v119, *((uint64_t *)&v119 + 1), v120);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = v102;
  uint64_t v74 = (uint64_t)v104;
  uint64_t v75 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v104, v71, v103);
  uint64_t v76 = v74 + *(int *)(v98 + 36);
  *(void *)uint64_t v76 = v72;
  *(unsigned char *)(v76 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v75);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v77 = v107;
  sub_10000D2A0(v74, v107, &qword_100388DD8);
  uint64_t v78 = (_OWORD *)(v77 + *(int *)(v101 + 36));
  long long v79 = v120;
  *uint64_t v78 = v119;
  v78[1] = v79;
  v78[2] = v121;
  sub_10000950C(v74, &qword_100388DD8);
  id v80 = *(id *)(v64 + 112);
  LOBYTE(v74) = static UIContentSizeCategory.>= infix(_:_:)();

  if (v74) {
    double v81 = 1.0;
  }
  else {
    double v81 = 0.5;
  }
  uint64_t v82 = swift_getKeyPath();
  uint64_t v83 = v105;
  sub_10000D2A0(v77, v105, &qword_100388DE0);
  uint64_t v84 = v83 + *(int *)(v106 + 36);
  *(void *)uint64_t v84 = v82;
  *(double *)(v84 + 8) = v81;
  sub_10000950C(v77, &qword_100388DE0);
  uint64_t v85 = v108;
  sub_10000D544(v83, v108, &qword_100388DE8);
  uint64_t v86 = v118;
  uint64_t v87 = v97;
  sub_10000D2A0(v118, v97, &qword_100388DF8);
  uint64_t v88 = v109;
  sub_10000D2A0(v85, v109, &qword_100388DE8);
  long long v89 = v110;
  *UIContentSizeCategory v110 = 0;
  *((unsigned char *)v89 + 8) = 1;
  char v90 = (int *)sub_100004010(&qword_100388E00);
  sub_10000D2A0(v87, (uint64_t)v89 + v90[12], &qword_100388DF8);
  sub_10000D2A0(v88, (uint64_t)v89 + v90[16], &qword_100388DE8);
  double v91 = (char *)v89 + v90[20];
  *(void *)double v91 = 0;
  v91[8] = 1;
  sub_10000950C(v85, &qword_100388DE8);
  sub_10000950C(v86, &qword_100388DF8);
  sub_10000950C(v88, &qword_100388DE8);
  return sub_10000950C(v87, &qword_100388DF8);
}

uint64_t sub_1001ED74C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001EC6D4(*v1, a1);
}

unint64_t sub_1001ED75C()
{
  unint64_t result = qword_10038E040;
  if (!qword_10038E040)
  {
    sub_1000094C4(&qword_10038E008);
    sub_1000094C4(&qword_10038DFF8);
    type metadata accessor for BorderedButtonStyle();
    sub_100009B18(&qword_10038E038, &qword_10038DFF8);
    sub_1001EDA7C((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E040);
  }
  return result;
}

unint64_t sub_1001ED8AC()
{
  unint64_t result = qword_10038E048;
  if (!qword_10038E048)
  {
    sub_1000094C4(&qword_10038E020);
    sub_1001ED928();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E048);
  }
  return result;
}

unint64_t sub_1001ED928()
{
  unint64_t result = qword_10038E050;
  if (!qword_10038E050)
  {
    sub_1000094C4(&qword_10038E018);
    sub_1000094C4(&qword_10038E008);
    sub_1001ED75C();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E050);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpeningMessagesButtonLabelView()
{
  return &type metadata for OpeningMessagesButtonLabelView;
}

uint64_t sub_1001EDA0C()
{
  return sub_1001EDB10(&qword_10038E058, &qword_10038E028, (void (*)(void))sub_1001ED8AC);
}

uint64_t sub_1001EDA48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001EDA7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EDAD4()
{
  return sub_1001EDB10(&qword_100388E08, &qword_100388DB0, (void (*)(void))sub_10014B4B0);
}

uint64_t sub_1001EDB10(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    sub_1001EDA7C(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EDBC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
  *(unsigned char *)(v2 + 73) = sub_100078E0C(0, *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1;
  uint64_t result = sub_100078E0C(4, *(void *)(a1 + v7));
  *(unsigned char *)(v2 + 74) = result & 1;
  if (result)
  {
    if (!*(void *)(v2 + 24))
    {
      static DispatchTime.now()();
      char v9 = *(unsigned char *)(v2 + 73);
      sub_1001EEC00(v2 + 32, (uint64_t)v12);
      _s8SOSBuddy4DataCMa_0();
      swift_allocObject();
      *(void *)(v2 + 24) = sub_1001EE160(v6, v9, (uint64_t)v12, 0, 0, 1);
      return swift_release();
    }
  }
  else
  {
    if (*(unsigned char *)(v2 + 72) == 1
      && (int v10 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow), v10 != 2))
    {
      uint64_t v11 = v10 & 1;
    }
    else
    {
      uint64_t v11 = 0;
    }
    return sub_1001EDFAC(v11);
  }
  return result;
}

uint64_t sub_1001EDD24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)(a1 + 48);
  if (!v7)
  {
    if (*(unsigned char *)(v2 + 74))
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(v2 + 24)) {
        return result;
      }
      uint64_t v13 = 0;
      char v14 = 0;
      int v15 = 1;
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  double v9 = *(double *)(v7 + 56);
  char v10 = *(unsigned char *)(v7 + 64);
  if (sub_100078E0C(2, v8))
  {
    swift_bridgeObjectRetain_n();
    int v11 = 1;
  }
  else
  {
    int v11 = *(unsigned char *)(v2 + 74) & 1;
    swift_bridgeObjectRetain();
    if (!v8)
    {
      char v14 = 0;
      goto LABEL_16;
    }
    swift_bridgeObjectRetain();
  }
  char v14 = sub_100078E0C(5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    double v16 = round(v9);
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          if (v11)
          {
            int v15 = 0;
            uint64_t v13 = (uint64_t)v16;
            goto LABEL_18;
          }
LABEL_23:
          if (v8)
          {
            char v20 = sub_100078E0C(4, v8);
            swift_bridgeObjectRelease();
LABEL_26:
            return sub_1001EDFAC(v20 & 1);
          }
LABEL_25:
          char v20 = 0;
          goto LABEL_26;
        }
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_16:
  if (!v11) {
    goto LABEL_23;
  }
  uint64_t v13 = 0;
  int v15 = 1;
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v2 + 24);
  if (!v17)
  {
LABEL_29:
    static DispatchTime.now()();
    char v21 = *(unsigned char *)(v2 + 73);
    sub_1001EEC00(v2 + 32, (uint64_t)v22);
    _s8SOSBuddy4DataCMa_0();
    swift_allocObject();
    *(void *)(v2 + 24) = sub_1001EE160(v6, v21, (uint64_t)v22, v14 & 1, v13, v15);
    return swift_release();
  }
  if ((v14 & 1) != 0
    && (*(unsigned char *)(v17
                 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_skimmerDetectedDuringObstruction) & 1) == 0)
  {
    *(unsigned char *)(v17 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_skimmerDetectedDuringObstruction) = 1;
    uint64_t v18 = *(void *)(v2 + 24);
    if (v18)
    {
      uint64_t v19 = v18 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_firstBetterTargetInSeconds;
      *(void *)uint64_t v19 = v13;
      *(unsigned char *)(v19 + 8) = v15;
      return result;
    }
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_1001EDFAC(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    return result;
  }
  if ((*(unsigned char *)(v1 + 72) & 1) == 0)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endIsOriented) = *(unsigned char *)(v1 + 73);
    uint64_t v2 = *(void *)(v1 + 24);
    if (!v2)
    {
LABEL_12:
      __break(1u);
      return result;
    }
  }
  uint64_t v3 = *(void *)(v1 + 64);
  char v4 = *(unsigned char *)(v1 + 72);
  uint64_t v5 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endTarget;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v4;
  uint64_t v7 = *(void *)(v1 + 24);
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endInOutage) = result & 1;
  if (!*(void *)(v1 + 24))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  swift_retain();
  unint64_t v8 = sub_1001EE510();
  swift_release();
  sub_1001B6D38(2, v8);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = 0;

  return swift_release();
}

uint64_t sub_1001EE0A8()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnalyticsObstruction()
{
  return self;
}

uint64_t sub_1001EE10C(uint64_t a1)
{
  return sub_1001EEC00(a1, *v1 + 32);
}

uint64_t sub_1001EE118(uint64_t a1)
{
  return sub_1001EDBC0(a1);
}

uint64_t sub_1001EE13C(uint64_t a1)
{
  return sub_1001EDD24(a1);
}

uint64_t sub_1001EE160(char *a1, char a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v7 = v6;
  LODWORD(v35) = a6;
  uint64_t v34 = a5;
  LODWORD(v33) = a4;
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v32 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v16 = (char *)v31 - v15;
  uint64_t v17 = v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_firstBetterTargetInSeconds;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endIsOriented) = 2;
  uint64_t v18 = v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endTarget;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(void *)(v18 + 32) = 0;
  *(unsigned char *)(v18 + 40) = 1;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endInOutage) = 2;
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  v19(v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_startTimestamp, a1, v11);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_startIsOriented) = a2;
  sub_1001EEC00(a3, v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_startTarget);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_skimmerDetectedDuringObstruction) = (_BYTE)v33;
  uint64_t v20 = v7 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_firstBetterTargetInSeconds;
  *(void *)uint64_t v20 = v34;
  *(unsigned char *)(v20 + 8) = v35 & 1;
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10000FD84(v21, (uint64_t)qword_1003A9940);
  v19((uint64_t)v16, a1, v11);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v35 = a1;
    long long v25 = (uint8_t *)v24;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v37 = v34;
    char v33 = v25;
    *(_DWORD *)long long v25 = 136315138;
    v31[1] = v25 + 4;
    v19((uint64_t)v32, v16, v11);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v36 = sub_1001B3178(v26, v27, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28(v16, v11);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "SatelliteObstruction: started tracking at %s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v28(v35, v11);
  }
  else
  {

    uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29(v16, v11);
    v29(a1, v11);
  }
  return v7;
}

unint64_t sub_1001EE510()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_1003826A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3F10;
  *(void *)(inited + 32) = 0x6E6F697461727564;
  *(void *)(inited + 40) = 0xE800000000000000;
  static DispatchTime.now()();
  unint64_t v7 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() < v7)
  {
    unint64_t v8 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t result = DispatchTime.uptimeNanoseconds.getter();
    if (v8 < result)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(NSNumber *)(inited + 48) = UInt64._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 1701869940;
  *(void *)(inited + 64) = 0xE400000000000000;
  sub_100078C6C();
  *(void *)(inited + 72) = NSString.init(stringLiteral:)();
  strcpy((char *)(inited + 80), "prev_isOrient");
  *(_WORD *)(inited + 94) = -4864;
  *(NSNumber *)(inited + 96) = Bool._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0xD000000000000010;
  *(void *)(inited + 112) = 0x80000001002D3B70;
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  unint64_t v10 = sub_100283ACC(inited);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_startTarget + 40) & 1) == 0)
  {
    double v11 = *(double *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_startTarget + 16);
    Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v29 = v10;
    sub_1002699E8((uint64_t)isa, 0x7461735F76657270, 0xEA00000000004449, isUniquelyReferenced_nonNull_native);
    unint64_t v14 = v29;
    unint64_t result = swift_bridgeObjectRelease();
    double v15 = round(v11 * 57.2957795);
    if ((~*(void *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          Class v16 = Int64._bridgeToObjectiveC()().super.super.isa;
          char v17 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v29 = v14;
          sub_1002699E8((uint64_t)v16, 0x656C655F76657270, 0xEE006E6F69746176, v17);
          unint64_t v10 = v29;
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_8:
  uint64_t v18 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endTarget;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endTarget + 40)) {
    goto LABEL_14;
  }
  Class v19 = Int64._bridgeToObjectiveC()().super.super.isa;
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v29 = v10;
  sub_1002699E8((uint64_t)v19, 0x7461735F74736F70, 0xEA00000000004449, v20);
  unint64_t v10 = v29;
  unint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned char *)(v18 + 40)) {
    goto LABEL_14;
  }
  double v21 = round(*(double *)(v18 + 16) * 57.2957795);
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0) {
    goto LABEL_23;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    return result;
  }
  Class v22 = Int64._bridgeToObjectiveC()().super.super.isa;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v29 = v10;
  sub_1002699E8((uint64_t)v22, 0x656C655F74736F70, 0xEE006E6F69746176, v23);
  unint64_t v10 = v29;
  swift_bridgeObjectRelease();
LABEL_14:
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_endIsOriented) != 2)
  {
    Class v24 = Bool._bridgeToObjectiveC()().super.super.isa;
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v29 = v10;
    sub_1002699E8((uint64_t)v24, 0x4F73695F74736F70, 0xED0000746E656972, v25);
    unint64_t v10 = v29;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_firstBetterTargetInSeconds + 8) & 1) == 0)
  {
    Class v26 = Int64._bridgeToObjectiveC()().super.super.isa;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v29 = v10;
    sub_1002699E8((uint64_t)v26, 0xD000000000000019, 0x80000001002D3B90, v27);
    unint64_t v10 = v29;
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1001EEA50()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_39CE8DA68D44C068915A9101E6ACAAB94Data_startTimestamp;
  uint64_t v2 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001EEAF0()
{
  return _s8SOSBuddy4DataCMa_0();
}

uint64_t _s8SOSBuddy4DataCMa_0()
{
  uint64_t result = qword_10038E270;
  if (!qword_10038E270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001EEB44()
{
  uint64_t result = type metadata accessor for DispatchTime();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001EEC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100382698);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BuiltInQuestionHeaderView()
{
  return &type metadata for BuiltInQuestionHeaderView;
}

uint64_t sub_1001EEC78()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1001EEC94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(*(unsigned char *)(a1 + 64))
  {
    case 1:
    case 2:
    case 3:
      sub_1001EF38C();
      sub_10015B9F8();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_10038E3C8);
      sub_100004010(&qword_10038E3E0);
      sub_1001EF2C8();
      sub_1001EF3E0();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_5;
    case 4:
      type metadata accessor for RoadsideAssistanceModel();
      sub_1001EF4C4(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      swift_retain();
      EnvironmentObject.init()();
      sub_1001EF41C();
      sub_1001EF470();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_100004010(&qword_10038E3C8);
      sub_100004010(&qword_10038E3E0);
      sub_1001EF2C8();
      sub_1001EF3E0();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_8;
    case 5:
    case 6:
      type metadata accessor for RoadsideAssistanceModel();
      sub_1001EF4C4(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      EnvironmentObject.init()();
      type metadata accessor for UIMetrics();
      sub_1001EF4C4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      EnvironmentObject.init()();
      sub_1001EF41C();
      sub_1001EF470();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_7;
    case 7:
LABEL_5:
      sub_100004010(&qword_10038E3B0);
      sub_1001EF304(&qword_10038E3B8, &qword_10038E3B0, (void (*)(void))sub_1001EF2C8, (void (*)(void))sub_1001EF3E0);
      _ConditionalContent<>.init(storage:)();
      goto LABEL_9;
    default:
      type metadata accessor for UIMetrics();
      sub_1001EF4C4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      EnvironmentObject.init()();
      State.init(wrappedValue:)();
      sub_1001EF38C();
      sub_10015B9F8();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
LABEL_7:
      sub_100004010(&qword_10038E3C8);
      sub_100004010(&qword_10038E3E0);
      sub_1001EF2C8();
      sub_1001EF3E0();
      _ConditionalContent<>.init(storage:)();
LABEL_8:
      sub_100004010(&qword_10038E3B0);
      sub_1001EF304(&qword_10038E3B8, &qword_10038E3B0, (void (*)(void))sub_1001EF2C8, (void (*)(void))sub_1001EF3E0);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
LABEL_9:
      double result = *(double *)&v4;
      *(_OWORD *)a2 = v4;
      *(_OWORD *)(a2 + 16) = v5;
      *(_WORD *)(a2 + 32) = v6;
      *(unsigned char *)(a2 + 34) = v7;
      return result;
  }
}

double sub_1001EF2C0@<D0>(uint64_t a1@<X8>)
{
  return sub_1001EEC94(*v1, a1);
}

uint64_t sub_1001EF2C8()
{
  return sub_1001EF304(&qword_10038E3C0, &qword_10038E3C8, (void (*)(void))sub_1001EF38C, (void (*)(void))sub_10015B9F8);
}

uint64_t sub_1001EF304(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001EF38C()
{
  unint64_t result = qword_10038E3D0;
  if (!qword_10038E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E3D0);
  }
  return result;
}

uint64_t sub_1001EF3E0()
{
  return sub_1001EF304(&qword_10038E3D8, &qword_10038E3E0, (void (*)(void))sub_1001EF41C, (void (*)(void))sub_1001EF470);
}

unint64_t sub_1001EF41C()
{
  unint64_t result = qword_10038E3E8;
  if (!qword_10038E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E3E8);
  }
  return result;
}

unint64_t sub_1001EF470()
{
  unint64_t result = qword_10038E3F0;
  if (!qword_10038E3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E3F0);
  }
  return result;
}

uint64_t sub_1001EF4C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001EF51C()
{
  unint64_t result = qword_10038E3F8;
  if (!qword_10038E3F8)
  {
    sub_1000094C4(&qword_10038E400);
    sub_1001EF304(&qword_10038E3B8, &qword_10038E3B0, (void (*)(void))sub_1001EF2C8, (void (*)(void))sub_1001EF3E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E3F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssitantSessionBannerView()
{
  return &type metadata for ConnectionAssitantSessionBannerView;
}

uint64_t sub_1001EF5E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001EF5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = type metadata accessor for ConnectionAssitantSessionBannerContentView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004010(&qword_10037F0C8);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038E408);
  uint64_t v28 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (sub_100078E0C(2, *(void *)(a1 + 200)))
    {
      uint64_t v18 = a1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
      swift_beginAccess();
      sub_10000D2A0(v18, (uint64_t)v10, &qword_10037F0C8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_10000950C((uint64_t)v10, &qword_10037F0C8);
        uint64_t v19 = 1;
      }
      else
      {
        sub_1001EFB5C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
        sub_1001F204C((uint64_t)v14, (uint64_t)v7 + *(int *)(v4 + 28), (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
        type metadata accessor for AppEvents();
        sub_1001EFB14((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
        *char v7 = EnvironmentObject.init()();
        v7[1] = v23;
        type metadata accessor for BannerAppearanceModel();
        sub_1001EFB14(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
        v7[2] = EnvironmentObject.init()();
        v7[3] = v24;
        type metadata accessor for UIMetrics();
        sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
        v7[4] = EnvironmentObject.init()();
        v7[5] = v25;
        sub_1001F934C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
        sub_1001EFB5C((uint64_t)v7, (uint64_t)v17, type metadata accessor for ConnectionAssitantSessionBannerContentView);
        uint64_t v19 = 0;
      }
      uint64_t v26 = v29;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v17, v19, 1, v4);
      sub_10000D544((uint64_t)v17, v26, &qword_10038E408);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v15);
    }
    else
    {
      uint64_t v20 = v29;
      double v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
      return v21(v20, 1, 1, v15);
    }
  }
  else
  {
    type metadata accessor for BannerAppearanceModel();
    sub_1001EFB14(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EFAEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001EF5FC(*v1, v1[1], a1);
}

uint64_t type metadata accessor for ConnectionAssitantSessionBannerContentView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038E468);
}

uint64_t sub_1001EFB14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EFB5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1001EFBC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    a1[5] = a2[5];
    uint64_t v11 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v9 = *v10;
      uint64_t v12 = type metadata accessor for ConnectionClosed(0);
      uint64_t v13 = *(int *)(v12 + 20);
      unint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = type metadata accessor for Date();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_100004010(&qword_100380418);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return v5;
}

uint64_t sub_1001EFDE8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v6 = v4 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1001EFF0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v8;
    uint64_t v11 = type metadata accessor for ConnectionClosed(0);
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = &v9[v12];
    unint64_t v14 = &v8[v12];
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100004010(&qword_100380418);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(void *)&v9[*(int *)(v11 + 24)] = *(void *)&v8[*(int *)(v11 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

void *sub_1001F00DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1001F934C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *sub_1001F0308(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v7;
    uint64_t v9 = type metadata accessor for ConnectionClosed(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = &v6[v10];
    uint64_t v12 = &v7[v10];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100004010(&qword_100380418);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(void *)&v6[*(int *)(v9 + 24)] = *(void *)&v7[*(int *)(v9 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_1001F04B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_release();
  a1[5] = a2[5];
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1001F934C((uint64_t)a1 + v8, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v11 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v9 = *v10;
      uint64_t v12 = type metadata accessor for ConnectionClosed(0);
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = type metadata accessor for Date();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_100004010(&qword_100380418);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001F06B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F06C8);
}

uint64_t sub_1001F06C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1001F0784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F0798);
}

void *sub_1001F0798(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001F0840()
{
  uint64_t result = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001F08DC()
{
  return sub_1001FB904(&qword_10038E4A8, &qword_10038E4B0, (void (*)(void))sub_1001F0918);
}

unint64_t sub_1001F0918()
{
  unint64_t result = qword_10038E4B8;
  if (!qword_10038E4B8)
  {
    sub_1000094C4(&qword_10038E408);
    sub_1001EFB14(&qword_10038E4C0, (void (*)(uint64_t))type metadata accessor for ConnectionAssitantSessionBannerContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E4B8);
  }
  return result;
}

uint64_t sub_1001F09BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F09D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v2 = sub_100004010(&qword_10038E4C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038E4D0);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(v1 + 32);
  if (v9)
  {
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    sub_100008F88(v9 + 6, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v17, v10, v11);
    uint64_t v12 = static Axis.Set.vertical.getter();
    __chkstk_darwin(v12);
    *(&v14 - 2) = v1;
    *(&v14 - 1) = (uint64_t)v17;
    sub_100004010(&qword_10038E4D8);
    sub_1001F1F88();
    ScrollView.init(_:showsIndicators:content:)();
    sub_100009B18(&qword_10038E4F8, &qword_10038E4C8);
    View.scrollDisabled(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v16, v8, v15);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v17);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F0CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ConnectionAssitantSessionBannerContentView(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_100004010(&qword_10038E4F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.center.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v12 = sub_100004010(&qword_10038E500);
  sub_1001F0E90(a1, a2, (uint64_t)&v11[*(int *)(v12 + 44)]);
  sub_1001F204C(a1, (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ConnectionAssitantSessionBannerContentView);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1001EFB5C((uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for ConnectionAssitantSessionBannerContentView);
  uint64_t v15 = static Alignment.center.getter();
  uint64_t v17 = v16;
  sub_10000D2A0((uint64_t)v11, a3, &qword_10038E4F0);
  uint64_t v18 = (void *)(a3 + *(int *)(sub_100004010(&qword_10038E4D8) + 36));
  *uint64_t v18 = 0;
  v18[1] = 0;
  v18[2] = sub_1001F2238;
  uint64_t v18[3] = v14;
  v18[4] = v15;
  v18[5] = v17;
  return sub_10000950C((uint64_t)v11, &qword_10038E4F0);
}

uint64_t sub_1001F0E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v70 = a3;
  uint64_t v71 = sub_100004010(&qword_10038E508);
  __chkstk_darwin(v71);
  uint64_t v68 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = (int *)type metadata accessor for CASessionBannerPossibleButtonView(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v62 - v9;
  uint64_t v11 = sub_100004010(&qword_10038E510);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v69 = sub_100004010(&qword_10038E518);
  __chkstk_darwin(v69);
  uint64_t v18 = (CGFloat *)((char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v19);
  double v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v22 = *(double **)(a1 + 16);
  if (v22)
  {
    CGFloat v24 = v22[20];
    CGFloat v23 = v22[21];
    CGFloat v26 = v22[22];
    CGFloat v25 = v22[23];
    uint64_t v27 = a1 + *(int *)(type metadata accessor for ConnectionAssitantSessionBannerContentView(0) + 28);
    swift_storeEnumTagMultiPayload();
    char v28 = sub_1001E5BCC(v27, (uint64_t)v21);
    sub_1001F934C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    if (v28)
    {
      type metadata accessor for ConnectivityModel();
      sub_1001EFB14(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
      uint64_t v29 = EnvironmentObject.init()();
      uint64_t v67 = v30;
      uint64_t v68 = v29;
      type metadata accessor for GeoLocationModel();
      sub_1001EFB14(&qword_100385440, (void (*)(uint64_t))type metadata accessor for GeoLocationModel);
      uint64_t v31 = EnvironmentObject.init()();
      uint64_t v65 = v32;
      uint64_t v66 = v31;
      type metadata accessor for GuidanceMessagesModel();
      sub_1001EFB14(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
      uint64_t v33 = EnvironmentObject.init()();
      uint64_t v63 = v34;
      uint64_t v64 = v33;
      type metadata accessor for GuidanceModel(0);
      sub_1001EFB14(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
      uint64_t v35 = EnvironmentObject.init()();
      uint64_t v62 = v36;
      type metadata accessor for PartnerModel();
      sub_1001EFB14(&qword_100380DA8, (void (*)(uint64_t))type metadata accessor for PartnerModel);
      uint64_t v37 = EnvironmentObject.init()();
      uint64_t v39 = v38;
      type metadata accessor for StewieModel();
      sub_1001EFB14(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
      uint64_t v40 = EnvironmentObject.init()();
      uint64_t v42 = v41;
      type metadata accessor for TimeZoneModel();
      sub_1001EFB14(&qword_100385448, (void (*)(uint64_t))type metadata accessor for TimeZoneModel);
      uint64_t v43 = EnvironmentObject.init()();
      uint64_t v45 = v44;
      type metadata accessor for TryOutModel();
      sub_1001EFB14(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
      uint64_t v46 = EnvironmentObject.init()();
      uint64_t v47 = v67;
      *(void *)uint64_t v18 = v68;
      *((void *)v18 + 1) = v47;
      uint64_t v48 = v65;
      *((void *)v18 + 2) = v66;
      *((void *)v18 + 3) = v48;
      uint64_t v49 = v63;
      *((void *)v18 + 4) = v64;
      *((void *)v18 + 5) = v49;
      uint64_t v50 = v62;
      *((void *)v18 + 6) = v35;
      *((void *)v18 + 7) = v50;
      *((void *)v18 + 8) = v37;
      *((void *)v18 + 9) = v39;
      *((void *)v18 + 10) = v40;
      *((void *)v18 + 11) = v42;
      *((void *)v18 + 12) = v43;
      *((void *)v18 + 13) = v45;
      *((void *)v18 + 14) = v46;
      *((void *)v18 + 15) = v51;
      v18[16] = v24;
      v18[17] = v23;
      v18[18] = v26;
      v18[19] = v25;
      swift_storeEnumTagMultiPayload();
      sub_1001889A0();
      sub_100009B18(&qword_10038E530, &qword_10038E508);
      return _ConditionalContent<>.init(storage:)();
    }
    else
    {
      *(void *)uint64_t v16 = static VerticalAlignment.top.getter();
      *((void *)v16 + 1) = 0;
      v16[16] = 0;
      uint64_t v53 = sub_100004010(&qword_10038E520);
      sub_1001F16BC(a1, (uint64_t)&v16[*(int *)(v53 + 44)], v24, v23, v26, v25);
      sub_1001F204C(v27, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
      char v54 = (uint64_t *)&v10[v5[5]];
      type metadata accessor for AppEvents();
      sub_1001EFB14((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      *char v54 = EnvironmentObject.init()();
      v54[1] = v55;
      char v56 = (uint64_t *)&v10[v5[6]];
      type metadata accessor for StewieModel();
      sub_1001EFB14(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
      *char v56 = EnvironmentObject.init()();
      v56[1] = v57;
      uint64_t v58 = (uint64_t *)&v10[v5[7]];
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *uint64_t v58 = EnvironmentObject.init()();
      v58[1] = v59;
      sub_10000D2A0((uint64_t)v16, (uint64_t)v14, &qword_10038E510);
      sub_1001F204C((uint64_t)v10, (uint64_t)v8, type metadata accessor for CASessionBannerPossibleButtonView);
      uint64_t v60 = v68;
      sub_10000D2A0((uint64_t)v14, v68, &qword_10038E510);
      uint64_t v61 = sub_100004010(&qword_10038E528);
      sub_1001F204C((uint64_t)v8, v60 + *(int *)(v61 + 48), type metadata accessor for CASessionBannerPossibleButtonView);
      sub_1001F934C((uint64_t)v8, type metadata accessor for CASessionBannerPossibleButtonView);
      sub_10000950C((uint64_t)v14, &qword_10038E510);
      sub_10000D2A0(v60, (uint64_t)v18, &qword_10038E508);
      swift_storeEnumTagMultiPayload();
      sub_1001889A0();
      sub_100009B18(&qword_10038E530, &qword_10038E508);
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v60, &qword_10038E508);
      sub_1001F934C((uint64_t)v10, type metadata accessor for CASessionBannerPossibleButtonView);
      return sub_10000950C((uint64_t)v16, &qword_10038E510);
    }
  }
  else
  {
    type metadata accessor for BannerAppearanceModel();
    sub_1001EFB14(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F16BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v70 = a2;
  uint64_t v68 = type metadata accessor for CASessionBannerStaticContentTrailingView(0) - 8;
  uint64_t v11 = __chkstk_darwin(v68);
  uint64_t v69 = (uint64_t)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v67 = (uint64_t *)((char *)v63 - v13);
  uint64_t v14 = type metadata accessor for CASessionBannerVariableContentView(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_10038E538);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_100389C08);
  __chkstk_darwin(v21 - 8);
  CGFloat v23 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004010(&qword_100389C10);
  __chkstk_darwin(v24 - 8);
  uint64_t v64 = (uint64_t)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004010(&qword_10038E540);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v65 = (uint64_t)v63 - v31;
  uint64_t v32 = type metadata accessor for CASessionBannerStaticContentLeadingView(0);
  uint64_t v33 = v32 - 8;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v66 = (uint64_t)v63 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t *)((char *)v63 - v36);
  uint64_t v38 = a1 + *(int *)(type metadata accessor for ConnectionAssitantSessionBannerContentView(0) + 28);
  uint64_t v39 = (uint64_t)v37 + *(int *)(v33 + 28);
  v63[0] = v38;
  sub_1001F204C(v38, v39, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  v63[2] = type metadata accessor for UIMetrics();
  v63[1] = sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  *uint64_t v37 = EnvironmentObject.init()();
  v37[1] = v40;
  *(void *)CGFloat v23 = static VerticalAlignment.top.getter();
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  uint64_t v41 = (uint64_t)&v23[*(int *)(sub_100004010(&qword_10038E548) + 44)];
  sub_1001F204C(v38, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  LOBYTE(v38) = static Edge.Set.top.getter();
  v71.origin.CGFloat x = a3;
  v71.origin.CGFloat y = a4;
  v71.size.CGFloat width = a5;
  v71.size.CGFloat height = a6;
  CGRectGetHeight(v71);
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_1001F204C((uint64_t)v16, (uint64_t)v20, type metadata accessor for CASessionBannerVariableContentView);
  uint64_t v50 = &v20[*(int *)(v18 + 44)];
  *uint64_t v50 = v38;
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_1001F934C((uint64_t)v16, type metadata accessor for CASessionBannerVariableContentView);
  sub_10000D544((uint64_t)v20, v41, &qword_10038E538);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v52 = v64;
  sub_1001683B0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v64, 0.0, 1, INFINITY, 0, v51, v53);
  sub_10000950C((uint64_t)v23, &qword_100389C08);
  LOBYTE(v23) = static Edge.Set.all.getter();
  sub_10000D2A0(v52, (uint64_t)v30, &qword_100389C10);
  char v54 = &v30[*(int *)(v27 + 44)];
  *char v54 = (char)v23;
  *((void *)v54 + 1) = 0;
  *((void *)v54 + 2) = 0;
  *(_OWORD *)(v54 + 24) = xmmword_1002C0B60;
  v54[40] = 0;
  sub_10000950C(v52, &qword_100389C10);
  uint64_t v55 = v65;
  sub_10000D544((uint64_t)v30, v65, &qword_10038E540);
  char v56 = v67;
  sub_1001F204C(v63[0], (uint64_t)v67 + *(int *)(v68 + 28), (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  *char v56 = EnvironmentObject.init()();
  v56[1] = v57;
  uint64_t v58 = v66;
  sub_1001F204C((uint64_t)v37, v66, type metadata accessor for CASessionBannerStaticContentLeadingView);
  sub_10000D2A0(v55, (uint64_t)v30, &qword_10038E540);
  uint64_t v59 = v69;
  sub_1001F204C((uint64_t)v56, v69, type metadata accessor for CASessionBannerStaticContentTrailingView);
  uint64_t v60 = v70;
  sub_1001F204C(v58, v70, type metadata accessor for CASessionBannerStaticContentLeadingView);
  uint64_t v61 = sub_100004010(&qword_10038E550);
  sub_10000D2A0((uint64_t)v30, v60 + *(int *)(v61 + 48), &qword_10038E540);
  sub_1001F204C(v59, v60 + *(int *)(v61 + 64), type metadata accessor for CASessionBannerStaticContentTrailingView);
  sub_1001F934C((uint64_t)v56, type metadata accessor for CASessionBannerStaticContentTrailingView);
  sub_10000950C(v55, &qword_10038E540);
  sub_1001F934C((uint64_t)v37, type metadata accessor for CASessionBannerStaticContentLeadingView);
  sub_1001F934C(v59, type metadata accessor for CASessionBannerStaticContentTrailingView);
  sub_10000950C((uint64_t)v30, &qword_10038E540);
  return sub_1001F934C(v58, type metadata accessor for CASessionBannerStaticContentLeadingView);
}

uint64_t sub_1001F1D00(void *a1, double a2, double a3)
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  double v6 = ceil(a3);
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v17 = *(void *)&a2;
    double v18 = a3;
    type metadata accessor for CGSize(0);
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v17 = sub_1001B3178(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    uint64_t v17 = *(void *)&a2;
    double v18 = v6;
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v17 = sub_1001B3178(v13, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Banner content changed, size: %{public}s, reporting rounded: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (*a1)
  {
    uint64_t v17 = *(void *)&a2;
    double v18 = v6;
    swift_retain();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_1001EFB14((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F1F80@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F0CA8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1001F1F88()
{
  unint64_t result = qword_10038E4E0;
  if (!qword_10038E4E0)
  {
    sub_1000094C4(&qword_10038E4D8);
    sub_100009B18(&qword_10038E4E8, &qword_10038E4F0);
    sub_100009B18(&qword_10038A3B0, &qword_10038A3B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E4E0);
  }
  return result;
}

uint64_t sub_1001F204C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001F20B4()
{
  uint64_t v1 = (int *)(type metadata accessor for ConnectionAssitantSessionBannerContentView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[9];
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001F2238(double a1, double a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ConnectionAssitantSessionBannerContentView(0) - 8);
  uint64_t v6 = (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_1001F1D00(v6, a1, a2);
}

uint64_t sub_1001F22B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v96 = a1;
  uint64_t v2 = sub_100004010(&qword_100389C28);
  __chkstk_darwin(v2 - 8);
  uint64_t v84 = (uint64_t *)((char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_100004010(&qword_100389C30);
  __chkstk_darwin(v4 - 8);
  uint64_t v85 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100004010(&qword_10038E898);
  uint64_t v6 = __chkstk_darwin(v90);
  uint64_t v83 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v86 = (uint64_t)&v79 - v8;
  uint64_t v93 = sub_100004010(&qword_10038E8A0);
  __chkstk_darwin(v93);
  uint64_t v92 = (_OWORD *)((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = sub_100004010(&qword_10038E8A8);
  __chkstk_darwin(v88);
  uint64_t v89 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100004010(&qword_10038E8B0);
  __chkstk_darwin(v95);
  double v91 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100389C18);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_100389C20);
  __chkstk_darwin(v15 - 8);
  uint64_t v81 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004010(&qword_10038E8B8);
  uint64_t v17 = __chkstk_darwin(v87);
  uint64_t v80 = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v82 = (uint64_t)&v79 - v19;
  uint64_t v20 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004010(&qword_10038E8C0);
  __chkstk_darwin(v23 - 8);
  uint64_t v94 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (void *)*v1;
  if (!*v1)
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x1001F2FB4);
  }
  uint64_t v27 = v25[9];
  uint64_t v26 = v25[10];
  sub_100008F88(v25 + 6, v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 16))(v119, v27, v26);
  uint64_t v28 = type metadata accessor for CASessionBannerStaticContentLeadingView(0);
  sub_1001F204C((uint64_t)v1 + *(int *)(v28 + 20), (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001F934C((uint64_t)v22, type metadata accessor for ConnectionClosed);
      goto LABEL_5;
    case 2u:
    case 4u:
LABEL_5:
      type metadata accessor for ConnectionClosedModel(0);
      sub_1001EFB14(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
      uint64_t v39 = EnvironmentObject.init()();
      double v91 = v40;
      type metadata accessor for ConnectivityModel();
      sub_1001EFB14(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
      uint64_t v41 = EnvironmentObject.init()();
      uint64_t v89 = v42;
      type metadata accessor for GuidanceModel(0);
      sub_1001EFB14(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
      uint64_t v43 = EnvironmentObject.init()();
      uint64_t v88 = v44;
      type metadata accessor for OrientationModel();
      sub_1001EFB14(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
      uint64_t v45 = EnvironmentObject.init()();
      uint64_t v47 = v46;
      type metadata accessor for StewieModel();
      sub_1001EFB14(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
      uint64_t v48 = EnvironmentObject.init()();
      uint64_t v50 = v49;
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v51 = EnvironmentObject.init()();
      uint64_t v53 = v52;
      char v54 = static Edge.Set.all.getter();
      char v97 = 0;
      uint64_t v90 = v39;
      v110[0] = v39;
      v110[1] = v91;
      v110[2] = v41;
      v110[3] = v89;
      v110[4] = v43;
      v110[5] = v88;
      v110[6] = v45;
      v110[7] = v47;
      v110[8] = v48;
      v110[9] = v50;
      v110[10] = v51;
      v110[11] = v53;
      char v111 = 2;
      *(_DWORD *)&v112[3] = *(_DWORD *)&v99[3];
      *(_DWORD *)uint64_t v112 = *(_DWORD *)v99;
      uint64_t v113 = 0;
      char v114 = v54;
      *(_DWORD *)&v115[3] = *(_DWORD *)&v98[3];
      *(_DWORD *)UIContentSizeCategory v115 = *(_DWORD *)v98;
      long long v116 = xmmword_1002C0B70;
      long long v117 = xmmword_1002C0B80;
      char v118 = 0;
      sub_10018A8CC((uint64_t)v110);
      sub_10000D544((uint64_t)v110, (uint64_t)v100, &qword_10038A6D0);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100004010(&qword_10038A6D8);
      sub_10018A524();
      _ConditionalContent<>.init(storage:)();
      long long v55 = v108;
      char v56 = v92;
      v92[6] = v107;
      v56[7] = v55;
      v56[8] = v109[0];
      *(_OWORD *)((char *)v56 + 138) = *(_OWORD *)((char *)v109 + 10);
      long long v57 = v104;
      v56[2] = v103;
      v56[3] = v57;
      long long v58 = v106;
      v56[4] = v105;
      v56[5] = v58;
      long long v59 = v102;
      *char v56 = v101;
      v56[1] = v59;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A6E8);
      sub_1001FB37C();
      sub_10018A814();
      uint64_t v60 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_9;
    case 3u:
      uint64_t v66 = static HorizontalAlignment.leading.getter();
      uint64_t v67 = (uint64_t)v84;
      *uint64_t v84 = v66;
      *(void *)(v67 + 8) = 0;
      *(unsigned char *)(v67 + 16) = 0;
      uint64_t v68 = v67 + *(int *)(sub_100004010(&qword_10038A738) + 44);
      uint64_t v69 = v25[9];
      uint64_t v70 = v25[10];
      sub_100008F88(v25 + 6, v69);
      (*(void (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
      uint64_t v71 = static Font.largeTitle.getter();
      sub_1000814FC(v71, v68);
      swift_release();
      uint64_t v72 = static Alignment.center.getter();
      uint64_t v73 = v85;
      sub_100168468(56.0, 0, 0.0, 1, 56.0, 0, 56.0, 0, v85, 0.0, 1, 56.0, 0, v72, v74);
      sub_10000950C(v67, &qword_100389C28);
      char v75 = static Edge.Set.all.getter();
      uint64_t v76 = v83;
      sub_10000D2A0(v73, v83, &qword_100389C30);
      uint64_t v77 = v76 + *(int *)(v90 + 36);
      *(unsigned char *)uint64_t v77 = v75;
      *(_OWORD *)(v77 + 8) = xmmword_1002C0B70;
      *(_OWORD *)(v77 + 24) = xmmword_1002C0B80;
      *(unsigned char *)(v77 + 40) = 0;
      sub_10000950C(v73, &qword_100389C30);
      uint64_t v36 = &qword_10038E898;
      uint64_t v37 = v86;
      sub_10000D544(v76, v86, &qword_10038E898);
      sub_10000D2A0(v37, v89, &qword_10038E898);
      swift_storeEnumTagMultiPayload();
      sub_1001FB3B8();
      sub_1001FB4D4();
      uint64_t v38 = (uint64_t)v91;
      goto LABEL_8;
    case 5u:
      sub_10018A518((uint64_t)v110);
      sub_10000D544((uint64_t)v110, (uint64_t)v100, &qword_10038A6D0);
      sub_100004010(&qword_10038A6D8);
      sub_10018A524();
      _ConditionalContent<>.init(storage:)();
      long long v61 = v108;
      uint64_t v62 = v92;
      v92[6] = v107;
      v62[7] = v61;
      v62[8] = v109[0];
      *(_OWORD *)((char *)v62 + 138) = *(_OWORD *)((char *)v109 + 10);
      long long v63 = v104;
      v62[2] = v103;
      void v62[3] = v63;
      long long v64 = v106;
      v62[4] = v105;
      v62[5] = v64;
      long long v65 = v102;
      *uint64_t v62 = v101;
      v62[1] = v65;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A6E8);
      sub_1001FB37C();
      sub_10018A814();
      uint64_t v60 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      goto LABEL_9;
    default:
      *(void *)unint64_t v14 = static HorizontalAlignment.leading.getter();
      *((void *)v14 + 1) = 0;
      v14[16] = 0;
      uint64_t v29 = sub_100004010(&qword_10038A740);
      sub_1001F2FCC((uint64_t)&v14[*(int *)(v29 + 44)]);
      uint64_t v30 = static Alignment.center.getter();
      uint64_t v31 = v81;
      sub_10016840C(56.0, 0, 0.0, 1, 56.0, 0, 56.0, 0, v81, 0.0, 1, 56.0, 0, v30, v32);
      sub_10000950C((uint64_t)v14, &qword_100389C18);
      char v33 = static Edge.Set.all.getter();
      uint64_t v34 = v80;
      sub_10000D2A0(v31, v80, &qword_100389C20);
      uint64_t v35 = v34 + *(int *)(v87 + 36);
      *(unsigned char *)uint64_t v35 = v33;
      *(_OWORD *)(v35 + 8) = xmmword_1002C0B70;
      *(_OWORD *)(v35 + 24) = xmmword_1002C0B80;
      *(unsigned char *)(v35 + 40) = 0;
      sub_10000950C(v31, &qword_100389C20);
      uint64_t v36 = &qword_10038E8B8;
      uint64_t v37 = v82;
      sub_10000D544(v34, v82, &qword_10038E8B8);
      sub_10000D2A0(v37, v89, &qword_10038E8B8);
      swift_storeEnumTagMultiPayload();
      sub_1001FB3B8();
      sub_1001FB4D4();
      uint64_t v38 = (uint64_t)v91;
LABEL_8:
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0(v38, (uint64_t)v92, &qword_10038E8B0);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A6E8);
      sub_1001FB37C();
      sub_10018A814();
      uint64_t v60 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v38, &qword_10038E8B0);
      sub_10000950C(v37, v36);
LABEL_9:
      sub_10000D544(v60, v96, &qword_10038E8C0);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v119);
  }
}

uint64_t sub_1001F2FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v1 = type metadata accessor for Image.Scale();
  uint64_t v49 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  __chkstk_darwin(v1);
  uint64_t v48 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SymbolVariants();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004010(&qword_1003831D0);
  uint64_t v45 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100004010(&qword_100386E98);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100386EA0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004010(&qword_10038A748);
  __chkstk_darwin(v42);
  unint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038A750);
  __chkstk_darwin(v15 - 8);
  uint64_t v47 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = Image.init(_internalSystemName:)();
  uint64_t v18 = static Font.largeTitle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v17;
  unint64_t v53 = KeyPath;
  uint64_t v54 = v18;
  static SymbolVariants.circle.getter();
  uint64_t v20 = sub_100004010(&qword_10037F1D8);
  unint64_t v21 = sub_10000C9A4();
  View.symbolVariant(_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  swift_release();
  swift_release();
  swift_release();
  static SymbolVariants.fill.getter();
  uint64_t v52 = v20;
  unint64_t v53 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v40;
  uint64_t v24 = v43;
  View.symbolVariant(_:)();
  v22(v6, v3);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v24);
  uint64_t v25 = static Color.white.getter();
  uint64_t v26 = static Color.red.getter();
  uint64_t v27 = v44;
  uint64_t v28 = (uint64_t)v41;
  uint64_t v29 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v23, v46);
  uint64_t v30 = (uint64_t *)(v28 + *(int *)(v11 + 44));
  *uint64_t v30 = v25;
  v30[1] = v26;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v29);
  uint64_t v32 = v48;
  uint64_t v31 = v49;
  uint64_t v33 = v50;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for Image.Scale.large(_:), v50);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (uint64_t *)&v14[*(int *)(v42 + 36)];
  uint64_t v36 = sub_100004010(&qword_1003828F8);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v35 + *(int *)(v36 + 28), v32, v33);
  *uint64_t v35 = v34;
  sub_10000D2A0(v28, (uint64_t)v14, &qword_100386EA0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  sub_10000950C(v28, &qword_100386EA0);
  sub_10018A904();
  uint64_t v37 = (uint64_t)v47;
  View.accessibility(hidden:)();
  sub_10000950C((uint64_t)v14, &qword_10038A748);
  return sub_10000D544(v37, v51, &qword_10038A750);
}

uint64_t sub_1001F3588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = type metadata accessor for CASessionBannerConnectionClosedView(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for ConnectionClosed(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004010(&qword_10038E808);
  __chkstk_darwin(v55);
  long long v58 = (_OWORD *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = sub_100004010(&qword_10038E810);
  __chkstk_darwin(v52);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_10038E818);
  __chkstk_darwin(v12);
  unint64_t v14 = (uint64_t *)((char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = sub_100004010(&qword_10038E820);
  __chkstk_darwin(v53);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100004010(&qword_10038E828);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v18);
  uint64_t v20 = (unsigned __int8 *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_10038E830);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v59 = (uint64_t)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  long long v57 = (char *)&v51 - v24;
  sub_1001F204C(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001EFB5C((uint64_t)v20, (uint64_t)v8, type metadata accessor for ConnectionClosed);
      sub_1001F204C((uint64_t)v8, (uint64_t)v5 + *(int *)(v3 + 20), type metadata accessor for ConnectionClosed);
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *uint64_t v5 = EnvironmentObject.init()();
      v5[1] = v27;
      sub_1001F204C((uint64_t)v5, (uint64_t)v14, type metadata accessor for CASessionBannerConnectionClosedView);
      swift_storeEnumTagMultiPayload();
      sub_1001FB140();
      sub_1001EFB14(&qword_10038E860, (void (*)(uint64_t))type metadata accessor for CASessionBannerConnectionClosedView);
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)v16, (uint64_t)v11, &qword_10038E820);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E870);
      sub_1001FB094();
      sub_1001FB194();
      uint64_t v28 = (uint64_t)v54;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)v16, &qword_10038E820);
      sub_10000D2A0(v28, (uint64_t)v58, &qword_10038E828);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E840);
      sub_1001FB1D0(&qword_10038E848, &qword_10038E828, (void (*)(void))sub_1001FB094, (void (*)(void))sub_1001FB194);
      sub_1001FB300();
      uint64_t v29 = (uint64_t)v57;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v28, &qword_10038E828);
      sub_1001F934C((uint64_t)v5, type metadata accessor for CASessionBannerConnectionClosedView);
      sub_1001F934C((uint64_t)v8, type metadata accessor for ConnectionClosed);
      goto LABEL_11;
    case 2u:
      unsigned __int8 v30 = *v20;
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *(void *)&long long v61 = EnvironmentObject.init()();
      *((void *)&v61 + 1) = v31;
      LOWORD(v62) = v30;
      goto LABEL_6;
    case 3u:
      unsigned __int8 v32 = *v20;
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *(void *)&long long v61 = EnvironmentObject.init()();
      *((void *)&v61 + 1) = v33;
      LOBYTE(v62) = v32;
      BYTE1(v62) = 1;
LABEL_6:
      sub_1001FB258();
      sub_1001FB2AC();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      char v34 = v65;
      char v35 = BYTE1(v65);
      *(_OWORD *)uint64_t v11 = v64;
      v11[16] = v34;
      v11[17] = v35;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E870);
      sub_1001FB094();
      sub_1001FB194();
      uint64_t v26 = (uint64_t)v54;
      _ConditionalContent<>.init(storage:)();
      goto LABEL_7;
    case 4u:
      type metadata accessor for ConnectivityModel();
      sub_1001EFB14(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
      uint64_t v36 = EnvironmentObject.init()();
      uint64_t v38 = v37;
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v39 = EnvironmentObject.init()();
      *(void *)&long long v61 = v36;
      *((void *)&v61 + 1) = v38;
      *(void *)&long long v62 = v39;
      *((void *)&v62 + 1) = v40;
      char v63 = 0;
      sub_1001FB040();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      char v41 = v66;
      long long v42 = v65;
      uint64_t v43 = v58;
      *long long v58 = v64;
      v43[1] = v42;
      *((unsigned char *)v43 + 32) = v41;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E840);
      sub_1001FB1D0(&qword_10038E848, &qword_10038E828, (void (*)(void))sub_1001FB094, (void (*)(void))sub_1001FB194);
      sub_1001FB300();
      uint64_t v29 = (uint64_t)v57;
      _ConditionalContent<>.init(storage:)();
      swift_release();
      goto LABEL_9;
    case 5u:
      long long v61 = 0u;
      long long v62 = 0u;
      char v63 = 1;
      sub_1001FB040();
      _ConditionalContent<>.init(storage:)();
      char v44 = v66;
      long long v45 = v65;
      uint64_t v46 = v58;
      *long long v58 = v64;
      v46[1] = v45;
      *((unsigned char *)v46 + 32) = v44;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E840);
      sub_1001FB1D0(&qword_10038E848, &qword_10038E828, (void (*)(void))sub_1001FB094, (void (*)(void))sub_1001FB194);
      sub_1001FB300();
      uint64_t v29 = (uint64_t)v57;
      _ConditionalContent<>.init(storage:)();
      goto LABEL_11;
    default:
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *unint64_t v14 = EnvironmentObject.init()();
      v14[1] = v25;
      swift_storeEnumTagMultiPayload();
      sub_1001FB140();
      sub_1001EFB14(&qword_10038E860, (void (*)(uint64_t))type metadata accessor for CASessionBannerConnectionClosedView);
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)v16, (uint64_t)v11, &qword_10038E820);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E870);
      sub_1001FB094();
      sub_1001FB194();
      uint64_t v26 = (uint64_t)v54;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)v16, &qword_10038E820);
LABEL_7:
      sub_10000D2A0(v26, (uint64_t)v58, &qword_10038E828);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038E840);
      sub_1001FB1D0(&qword_10038E848, &qword_10038E828, (void (*)(void))sub_1001FB094, (void (*)(void))sub_1001FB194);
      sub_1001FB300();
      uint64_t v29 = (uint64_t)v57;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v26, &qword_10038E828);
LABEL_9:
      swift_release();
LABEL_11:
      uint64_t v47 = v59;
      sub_10000D2A0(v29, v59, &qword_10038E830);
      uint64_t v48 = v60;
      sub_10000D2A0(v47, v60, &qword_10038E830);
      uint64_t v49 = v48 + *(int *)(sub_100004010(&qword_10038E890) + 48);
      *(void *)uint64_t v49 = 0;
      *(unsigned char *)(v49 + 8) = 0;
      sub_10000950C(v29, &qword_10038E830);
      return sub_10000950C(v47, &qword_10038E830);
  }
}

uint64_t sub_1001F4194@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100004010(&qword_10038E800);
  return sub_1001F3588(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1001F41DC@<X0>(void *a1@<X8>)
{
  uint64_t v98 = a1;
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = v1;
  uint64_t v6 = *(void **)v1;
  if (!*(void *)v1) {
    goto LABEL_6;
  }
  uint64_t v7 = v6[9];
  uint64_t v8 = v6[10];
  sub_100008F88(v6 + 6, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v162, v7, v8);
  id v9 = [self mainBundle];
  v179._countAndFlagsBits = 0xD00000000000003DLL;
  v179._object = (void *)0x80000001002CEAB0;
  v10._object = (void *)0x80000001002CEA90;
  v10._countAndFlagsBits = 0xD000000000000010;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v179);

  v127[0] = v12;
  unint64_t v87 = sub_100033310();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v18 = *(void (**)(void))(v3 + 104);
  unsigned int v85 = enum case for Font.Leading.tight(_:);
  uint64_t v86 = v3 + 104;
  uint64_t v84 = (void (*)(char *, void, uint64_t))v18;
  v18(v5);
  Font.leading(_:)();
  swift_release();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v88 = v5;
  uint64_t v89 = v3 + 8;
  uint64_t v90 = v2;
  uint64_t v83 = v19;
  v19(v5, v2);
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_100033364(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v25 = v99;
  uint64_t v26 = *(void **)v99;
  if (!*(void *)v99) {
    goto LABEL_6;
  }
  char v27 = v24 & 1;
  uint64_t v28 = v26[9];
  uint64_t v29 = v26[10];
  sub_100008F88(v26 + 6, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 80))(v28, v29);
  uint64_t v101 = Text.foregroundColor(_:)();
  uint64_t v102 = v30;
  uint64_t v97 = v31;
  char v33 = v32;
  sub_100033364(v20, v22, v27);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v96 = swift_getKeyPath();
  uint64_t v95 = swift_getKeyPath();
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v91 = v162[5];
  uint64_t v92 = v164;
  uint64_t v93 = v167;
  uint64_t v94 = v166;
  unsigned __int8 v161 = v33 & 1;
  unsigned __int8 v159 = 0;
  unsigned __int8 v156 = v163;
  unsigned __int8 v154 = v165;
  char v34 = *(void **)v25;
  if (!*(void *)v25) {
    goto LABEL_6;
  }
  uint64_t v35 = v34[9];
  uint64_t v36 = v34[10];
  sub_100008F88(v34 + 6, v35);
  uint64_t v37 = type metadata accessor for CASessionBannerConnectionClosedView(0);
  *(void *)&v127[0] = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 120))(&v25[*(int *)(v37 + 20)], v35, v36);
  *((void *)&v127[0] + 1) = v38;
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  static Font.body.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  char v44 = v88;
  uint64_t v45 = v90;
  v84(v88, v85, v90);
  Font.leading(_:)();
  swift_release();
  v83(v44, v45);
  uint64_t v46 = Text.font(_:)();
  uint64_t v48 = v47;
  char v50 = v49;
  swift_release();
  uint64_t v51 = v99;
  sub_100033364(v39, v41, v43);
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void **)v51;
  if (*(void *)v51)
  {
    char v53 = v50 & 1;
    uint64_t v54 = v52[9];
    uint64_t v55 = v52[10];
    sub_100008F88(v52 + 6, v54);
    (*(void (**)(uint64_t, uint64_t))(v55 + 64))(v54, v55);
    uint64_t v56 = Text.foregroundColor(_:)();
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    char v62 = v61 & 1;
    sub_100033364(v46, v48, v53);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v63 = swift_getKeyPath();
    uint64_t v64 = swift_getKeyPath();
    uint64_t v65 = swift_getKeyPath();
    uint64_t v168 = v56;
    uint64_t v169 = v58;
    char v170 = v62;
    uint64_t v171 = v60;
    uint64_t v172 = v63;
    uint64_t v173 = 3;
    char v174 = 0;
    uint64_t v175 = v64;
    char v176 = 0;
    uint64_t v177 = v65;
    uint64_t v178 = 0x3FE0000000000000;
    static Alignment.leading.getter();
    sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v151, 0.0, 1, 0.0, 1);
    sub_100033364(v56, v58, v62);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v113 = v151[10];
    long long v114 = v151[11];
    uint64_t v115 = v152;
    long long v109 = v151[6];
    long long v110 = v151[7];
    long long v111 = v151[8];
    long long v112 = v151[9];
    long long v105 = v151[2];
    long long v106 = v151[3];
    long long v107 = v151[4];
    long long v108 = v151[5];
    long long v103 = v151[0];
    long long v104 = v151[1];
    type metadata accessor for ConnectionModel(0);
    sub_1001EFB14(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
    uint64_t v99 = (char *)EnvironmentObject.init()();
    uint64_t v90 = v66;
    type metadata accessor for ConnectivityModel();
    sub_1001EFB14(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
    uint64_t v89 = EnvironmentObject.init()();
    unint64_t v87 = v67;
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v68 = EnvironmentObject.init()();
    uint64_t v82 = v69;
    uint64_t v83 = (void (*)(char *, uint64_t))v68;
    LODWORD(v88) = v161;
    LODWORD(v84) = v159;
    unsigned int v85 = v156;
    LODWORD(v86) = v154;
    uint64_t v71 = v96;
    uint64_t v70 = v97;
    *(void *)&long long v116 = v101;
    *((void *)&v116 + 1) = v97;
    LOBYTE(v117) = v161;
    *(_DWORD *)((char *)&v117 + 1) = *(_DWORD *)v160;
    DWORD1(v117) = *(_DWORD *)&v160[3];
    *((void *)&v117 + 1) = v102;
    *(void *)&long long v118 = KeyPath;
    *((void *)&v118 + 1) = 2;
    LOBYTE(v119) = v159;
    DWORD1(v119) = *(_DWORD *)&v158[3];
    *(_DWORD *)((char *)&v119 + 1) = *(_DWORD *)v158;
    *((void *)&v119 + 1) = v96;
    LOBYTE(v120) = 0;
    DWORD1(v120) = *(_DWORD *)&v157[3];
    *(_DWORD *)((char *)&v120 + 1) = *(_DWORD *)v157;
    uint64_t v73 = v94;
    uint64_t v72 = v95;
    *((void *)&v120 + 1) = v95;
    *(void *)&long long v121 = 0x3FE0000000000000;
    uint64_t v75 = v91;
    uint64_t v74 = v92;
    *((void *)&v121 + 1) = v91;
    LOBYTE(v122) = v156;
    *(_DWORD *)((char *)&v122 + 1) = *(_DWORD *)v155;
    DWORD1(v122) = *(_DWORD *)&v155[3];
    *((void *)&v122 + 1) = v92;
    LOBYTE(v123) = v154;
    *(_DWORD *)((char *)&v123 + 1) = *(_DWORD *)v153;
    DWORD1(v123) = *(_DWORD *)&v153[3];
    *((void *)&v123 + 1) = v94;
    v125[10] = v113;
    v125[11] = v114;
    v125[6] = v109;
    v125[7] = v110;
    v125[8] = v111;
    v125[9] = v112;
    v125[2] = v105;
    v125[3] = v106;
    v125[4] = v107;
    v125[5] = v108;
    v125[0] = v103;
    v125[1] = v104;
    v127[6] = v122;
    v127[7] = v123;
    v127[2] = v118;
    v127[3] = v119;
    v127[4] = v120;
    v127[5] = v121;
    v127[0] = v116;
    v127[1] = v117;
    *(_OWORD *)((char *)&v127[18] + 8) = v113;
    *(_OWORD *)((char *)&v127[19] + 8) = v114;
    *(_OWORD *)((char *)&v127[16] + 8) = v111;
    *(_OWORD *)((char *)&v127[17] + 8) = v112;
    *(_OWORD *)((char *)&v127[13] + 8) = v108;
    *(_OWORD *)((char *)&v127[14] + 8) = v109;
    *(_OWORD *)((char *)&v127[15] + 8) = v110;
    *(_OWORD *)((char *)&v127[9] + 8) = v104;
    *(_OWORD *)((char *)&v127[10] + 8) = v105;
    *(_OWORD *)((char *)&v127[11] + 8) = v106;
    *(_OWORD *)((char *)&v127[12] + 8) = v107;
    uint64_t v76 = v93;
    uint64_t v124 = v93;
    uint64_t v126 = v115;
    *(void *)&v127[8] = v93;
    *((void *)&v127[20] + 1) = v115;
    *(_OWORD *)((char *)&v127[8] + 8) = v103;
    uint64_t v77 = v98;
    memcpy(v98, v127, 0x150uLL);
    uint64_t v78 = v90;
    v77[42] = v99;
    v77[43] = v78;
    unint64_t v79 = v87;
    v77[44] = v89;
    v77[45] = v79;
    uint64_t v80 = v82;
    v77[46] = v83;
    v77[47] = v80;
    sub_100169EB4((uint64_t)&v116);
    sub_100169EB4((uint64_t)v125);
    v128[10] = v113;
    v128[11] = v114;
    uint64_t v129 = v115;
    v128[6] = v109;
    v128[7] = v110;
    v128[8] = v111;
    v128[9] = v112;
    v128[2] = v105;
    v128[3] = v106;
    v128[4] = v107;
    v128[5] = v108;
    v128[0] = v103;
    v128[1] = v104;
    sub_10018BF94((uint64_t)v128);
    v130[0] = v101;
    v130[1] = v70;
    char v131 = (char)v88;
    *(_DWORD *)char v132 = *(_DWORD *)v160;
    *(_DWORD *)&v132[3] = *(_DWORD *)&v160[3];
    uint64_t v133 = v102;
    uint64_t v134 = KeyPath;
    uint64_t v135 = 2;
    char v136 = (char)v84;
    *(_DWORD *)v137 = *(_DWORD *)v158;
    *(_DWORD *)&v137[3] = *(_DWORD *)&v158[3];
    uint64_t v138 = v71;
    char v139 = 0;
    *(_DWORD *)&v140[3] = *(_DWORD *)&v157[3];
    *(_DWORD *)v140 = *(_DWORD *)v157;
    uint64_t v141 = v72;
    uint64_t v142 = 0x3FE0000000000000;
    uint64_t v143 = v75;
    char v144 = v85;
    *(_DWORD *)&v145[3] = *(_DWORD *)&v155[3];
    *(_DWORD *)v145 = *(_DWORD *)v155;
    uint64_t v146 = v74;
    char v147 = v86;
    *(_DWORD *)v148 = *(_DWORD *)v153;
    *(_DWORD *)&v148[3] = *(_DWORD *)&v153[3];
    uint64_t v149 = v73;
    uint64_t v150 = v76;
    sub_10018BF94((uint64_t)v130);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v162);
  }
  else
  {
LABEL_6:
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F4CD8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, void *a3@<X8>)
{
  unsigned int v84 = a2;
  uint64_t v92 = a3;
  uint64_t v95 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v6 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = (void *)(a1 + 48);
    uint64_t v93 = a1;
    uint64_t v94 = (void *)(a1 + 48);
    uint64_t v8 = a1;
    uint64_t v9 = *(void *)(a1 + 72);
    uint64_t v10 = *(void *)(v8 + 80);
    sub_100008F88(v7, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v155, v9, v10);
    id v11 = [self mainBundle];
    v172._countAndFlagsBits = 0xD00000000000003DLL;
    v172._object = (void *)0x80000001002CEAB0;
    v12._object = (void *)0x80000001002CEA90;
    v12._countAndFlagsBits = 0xD000000000000010;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v172);

    v131[0] = v14;
    unint64_t v82 = sub_100033310();
    uint64_t v15 = Text.init<A>(_:)();
    uint64_t v17 = v16;
    LOBYTE(v9) = v18 & 1;
    static Font.footnote.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    unsigned int v79 = enum case for Font.Leading.tight(_:);
    uint64_t v19 = *(void (**)(void))(v4 + 104);
    uint64_t v80 = v4 + 104;
    uint64_t v81 = (void (*)(void, void, uint64_t))v19;
    uint64_t v20 = v95;
    v19(v6);
    Font.leading(_:)();
    swift_release();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v77[1] = v4 + 8;
    uint64_t v78 = v21;
    v21((uint64_t)v6, v20);
    uint64_t v22 = Text.font(_:)();
    uint64_t v24 = v23;
    char v26 = v25;
    v77[0] = v6;
    swift_release();
    sub_100033364(v15, v17, v9);
    swift_bridgeObjectRelease();
    uint64_t v28 = v93;
    char v27 = v94;
    uint64_t v29 = *(void *)(v93 + 72);
    uint64_t v30 = *(void *)(v93 + 80);
    sub_100008F88(v94, v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 80))(v29, v30);
    uint64_t v31 = Text.foregroundColor(_:)();
    uint64_t v88 = v32;
    uint64_t v89 = v31;
    LOBYTE(v20) = v33;
    uint64_t v90 = v34;
    sub_100033364(v22, v24, v26 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v87 = swift_getKeyPath();
    uint64_t v86 = swift_getKeyPath();
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v96 = v155[5];
    uint64_t v97 = v157;
    uint64_t v83 = v159;
    uint64_t v91 = v160;
    unsigned __int8 v119 = v20 & 1;
    unsigned __int8 v117 = 0;
    unsigned __int8 v114 = v156;
    unsigned __int8 v112 = v158;
    uint64_t v35 = *(void *)(v28 + 72);
    uint64_t v36 = *(void *)(v28 + 80);
    sub_100008F88(v27, v35);
    *(void *)&v131[0] = (*(uint64_t (**)(void, uint64_t, uint64_t))(v36 + 136))(v84, v35, v36);
    *((void *)&v131[0] + 1) = v37;
    uint64_t v38 = Text.init<A>(_:)();
    uint64_t v40 = v39;
    LOBYTE(v20) = v41 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v42 = v77[0];
    uint64_t v43 = v95;
    v81(v77[0], v79, v95);
    Font.leading(_:)();
    swift_release();
    v78(v42, v43);
    uint64_t v44 = Text.font(_:)();
    uint64_t v46 = v45;
    LOBYTE(v43) = v47;
    swift_release();
    LOBYTE(v36) = v43 & 1;
    sub_100033364(v38, v40, v20);
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void *)(v93 + 72);
    uint64_t v49 = *(void *)(v93 + 80);
    sub_100008F88(v94, v48);
    (*(void (**)(uint64_t, uint64_t))(v49 + 64))(v48, v49);
    uint64_t v50 = Text.foregroundColor(_:)();
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    LOBYTE(v42) = v55 & 1;
    sub_100033364(v44, v46, v36);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = swift_getKeyPath();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v161 = v50;
    uint64_t v162 = v52;
    char v163 = v42;
    uint64_t v164 = v54;
    uint64_t v165 = v56;
    uint64_t v166 = 3;
    char v167 = 0;
    uint64_t v168 = v57;
    char v169 = 0;
    uint64_t v170 = v58;
    uint64_t v171 = 0x3FE0000000000000;
    static Alignment.leading.getter();
    sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v131, 0.0, 1, 0.0, 1);
    sub_100033364(v50, v52, v42);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v108 = v131[10];
    long long v109 = v131[11];
    long long v104 = v131[6];
    long long v105 = v131[7];
    long long v106 = v131[8];
    long long v107 = v131[9];
    long long v100 = v131[2];
    long long v101 = v131[3];
    long long v102 = v131[4];
    long long v103 = v131[5];
    long long v98 = v131[0];
    long long v99 = v131[1];
    LODWORD(v95) = v119;
    unsigned int v84 = v117;
    LODWORD(v93) = v114;
    LODWORD(v94) = v112;
    uint64_t v59 = v88;
    uint64_t v60 = v89;
    *(void *)&long long v120 = v89;
    *((void *)&v120 + 1) = v88;
    LOBYTE(v121) = v119;
    *(_DWORD *)((char *)&v121 + 1) = *(_DWORD *)v118;
    DWORD1(v121) = *(_DWORD *)&v118[3];
    uint64_t v61 = v90;
    uint64_t v63 = KeyPath;
    uint64_t v62 = v86;
    *((void *)&v121 + 1) = v90;
    *(void *)&long long v122 = KeyPath;
    *((void *)&v122 + 1) = 2;
    LOBYTE(v123) = v117;
    DWORD1(v123) = *(_DWORD *)&v116[3];
    *(_DWORD *)((char *)&v123 + 1) = *(_DWORD *)v116;
    uint64_t v64 = v87;
    *((void *)&v123 + 1) = v87;
    LOBYTE(v124) = 0;
    DWORD1(v124) = *(_DWORD *)&v115[3];
    *(_DWORD *)((char *)&v124 + 1) = *(_DWORD *)v115;
    *((void *)&v124 + 1) = v86;
    *(void *)&long long v125 = 0x3FE0000000000000;
    *((void *)&v125 + 1) = v96;
    LOBYTE(v126) = v114;
    *(_DWORD *)((char *)&v126 + 1) = *(_DWORD *)v113;
    DWORD1(v126) = *(_DWORD *)&v113[3];
    *((void *)&v126 + 1) = v97;
    LOBYTE(v127) = v112;
    *(_DWORD *)((char *)&v127 + 1) = *(_DWORD *)v111;
    DWORD1(v127) = *(_DWORD *)&v111[3];
    uint64_t v65 = v83;
    *((void *)&v127 + 1) = v83;
    v129[10] = v131[10];
    v129[11] = v131[11];
    long long v66 = v131[6];
    long long v67 = v131[7];
    v129[6] = v131[6];
    v129[7] = v131[7];
    v129[8] = v131[8];
    v129[9] = v131[9];
    long long v68 = v131[2];
    long long v69 = v131[3];
    v129[2] = v131[2];
    v129[3] = v131[3];
    long long v71 = v131[4];
    long long v70 = v131[5];
    v129[4] = v131[4];
    v129[5] = v131[5];
    long long v73 = v131[0];
    long long v72 = v131[1];
    v129[0] = v131[0];
    v129[1] = v131[1];
    v131[6] = v126;
    v131[7] = v127;
    v131[2] = v122;
    v131[3] = v123;
    v131[4] = v124;
    v131[5] = v125;
    v131[0] = v120;
    v131[1] = v121;
    *(_OWORD *)((char *)&v131[18] + 8) = v131[10];
    *(_OWORD *)((char *)&v131[19] + 8) = v131[11];
    *(_OWORD *)((char *)&v131[16] + 8) = v131[8];
    *(_OWORD *)((char *)&v131[17] + 8) = v131[9];
    *(_OWORD *)((char *)&v131[13] + 8) = v70;
    *(_OWORD *)((char *)&v131[14] + 8) = v66;
    *(_OWORD *)((char *)&v131[15] + 8) = v67;
    uint64_t v74 = *(void *)&v131[12];
    *(_OWORD *)((char *)&v131[9] + 8) = v72;
    *(_OWORD *)((char *)&v131[10] + 8) = v68;
    *(_OWORD *)((char *)&v131[11] + 8) = v69;
    *(_OWORD *)((char *)&v131[12] + 8) = v71;
    uint64_t v110 = v74;
    uint64_t v75 = v91;
    uint64_t v128 = v91;
    uint64_t v130 = v74;
    *(void *)&v131[8] = v91;
    *((void *)&v131[20] + 1) = v74;
    *(_OWORD *)((char *)&v131[8] + 8) = v73;
    memcpy(v92, v131, 0x150uLL);
    v132[10] = v108;
    v132[11] = v109;
    uint64_t v133 = v110;
    v132[6] = v104;
    unsigned char v132[7] = v105;
    v132[9] = v107;
    v132[8] = v106;
    v132[2] = v100;
    v132[3] = v101;
    v132[5] = v103;
    v132[4] = v102;
    v132[1] = v99;
    v132[0] = v98;
    sub_100169EB4((uint64_t)&v120);
    sub_100169EB4((uint64_t)v129);
    sub_10018BF94((uint64_t)v132);
    v134[0] = v60;
    v134[1] = v59;
    char v135 = v95;
    *(_DWORD *)char v136 = *(_DWORD *)v118;
    *(_DWORD *)&v136[3] = *(_DWORD *)&v118[3];
    uint64_t v137 = v61;
    uint64_t v138 = v63;
    uint64_t v139 = 2;
    char v140 = v84;
    *(_DWORD *)uint64_t v141 = *(_DWORD *)v116;
    *(_DWORD *)&v141[3] = *(_DWORD *)&v116[3];
    uint64_t v142 = v64;
    char v143 = 0;
    *(_DWORD *)&v144[3] = *(_DWORD *)&v115[3];
    *(_DWORD *)char v144 = *(_DWORD *)v115;
    uint64_t v145 = v62;
    uint64_t v146 = 0x3FE0000000000000;
    uint64_t v147 = v96;
    char v148 = v93;
    *(_DWORD *)&v149[3] = *(_DWORD *)&v113[3];
    *(_DWORD *)uint64_t v149 = *(_DWORD *)v113;
    uint64_t v150 = v97;
    char v151 = (char)v94;
    *(_DWORD *)uint64_t v152 = *(_DWORD *)v111;
    *(_DWORD *)&v152[3] = *(_DWORD *)&v111[3];
    uint64_t v153 = v65;
    uint64_t v154 = v75;
    sub_10018BF94((uint64_t)v134);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v155);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F5670@<X0>(void *a1@<X8>)
{
  return sub_1001F4CD8(*(void *)v1, *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_1001F567C@<X0>(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v48 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v8 = a1[9];
    uint64_t v9 = a1[10];
    char v47 = a1 + 6;
    sub_100008F88(a1 + 6, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 16))(v66, v8, v9);
    uint64_t v10 = a1[9];
    uint64_t v11 = a1[10];
    sub_100008F88(a1 + 6, v10);
    *(void *)&long long v53 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v11 + 168))(a2 & 1, v10, v11);
    *((void *)&v53 + 1) = v12;
    sub_100033310();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v15 = v14;
    v45[1] = v16;
    char v18 = v17 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v19 = v48;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v48);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
    uint64_t v20 = Text.font(_:)();
    uint64_t v22 = v21;
    char v24 = v23;
    uint64_t v48 = v25;
    swift_release();
    sub_100033364(v13, v15, v18);
    swift_bridgeObjectRelease();
    uint64_t v27 = a1[9];
    uint64_t v26 = a1[10];
    sub_100008F88(v47, v27);
    (*(void (**)(uint64_t, uint64_t))(v26 + 64))(v27, v26);
    uint64_t v28 = Text.foregroundColor(_:)();
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    LOBYTE(v15) = v33 & 1;
    sub_100033364(v20, v22, v24 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v35 = swift_getKeyPath();
    uint64_t v36 = swift_getKeyPath();
    v66[5] = v28;
    v66[6] = v30;
    char v67 = v15;
    uint64_t v68 = v32;
    uint64_t v69 = KeyPath;
    uint64_t v70 = 3;
    char v71 = 0;
    uint64_t v72 = v35;
    char v73 = 0;
    uint64_t v74 = v36;
    uint64_t v75 = 0x3FE0000000000000;
    static Alignment.leading.getter();
    sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v49, 0.0, 1, 0.0, 1);
    sub_100033364(v28, v30, v15);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v63 = v50;
    long long v64 = v51;
    uint64_t v65 = v52;
    long long v59 = v49[6];
    long long v60 = v49[7];
    long long v61 = v49[8];
    long long v62 = v49[9];
    long long v55 = v49[2];
    long long v56 = v49[3];
    long long v57 = v49[4];
    long long v58 = v49[5];
    long long v53 = v49[0];
    long long v54 = v49[1];
    long long v37 = v51;
    uint64_t v38 = v46;
    *(_OWORD *)(v46 + 160) = v50;
    *(_OWORD *)(v38 + 176) = v37;
    *(void *)(v38 + 192) = v65;
    long long v39 = v60;
    *(_OWORD *)(v38 + 96) = v59;
    *(_OWORD *)(v38 + 112) = v39;
    long long v40 = v62;
    *(_OWORD *)(v38 + 128) = v61;
    *(_OWORD *)(v38 + 144) = v40;
    long long v41 = v56;
    *(_OWORD *)(v38 + 32) = v55;
    *(_OWORD *)(v38 + 48) = v41;
    long long v42 = v58;
    *(_OWORD *)(v38 + 64) = v57;
    *(_OWORD *)(v38 + 80) = v42;
    long long v43 = v54;
    *(_OWORD *)uint64_t v38 = v53;
    *(_OWORD *)(v38 + 16) = v43;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v66);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F5AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F567C(*(void **)v1, *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1001F5B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v6 = (void *)(a1 + 48);
    uint64_t v47 = a1;
    uint64_t v48 = (void *)(a1 + 48);
    uint64_t v7 = a1;
    uint64_t v8 = *(void *)(a1 + 72);
    uint64_t v9 = *(void *)(v7 + 80);
    sub_100008F88(v6, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 16))(v66, v8, v9);
    v10.super.Class isa = (Class)[self mainBundle];
    v76._countAndFlagsBits = 0xD000000000000067;
    v76._object = (void *)0x80000001002C7AB0;
    v11._object = (void *)0x80000001002C7A80;
    v11._countAndFlagsBits = 0xD00000000000002FLL;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, v10, v12, v76);

    Swift::String v53 = v13;
    sub_100033310();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v19 = v46;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v46, enum case for Font.Leading.tight(_:), v3);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v3);
    uint64_t v20 = Text.font(_:)();
    uint64_t v22 = v21;
    LOBYTE(v10.super.isa) = v23;
    swift_release();
    sub_100033364(v14, v16, v18);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(v47 + 72);
    uint64_t v25 = *(void *)(v47 + 80);
    sub_100008F88(v48, v24);
    (*(void (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
    uint64_t v26 = Text.foregroundColor(_:)();
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    char v32 = v31 & 1;
    sub_100033364(v20, v22, (uint64_t)v10.super.isa & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v34 = swift_getKeyPath();
    uint64_t v35 = swift_getKeyPath();
    v66[5] = v26;
    v66[6] = v28;
    char v67 = v32;
    uint64_t v68 = v30;
    uint64_t v69 = KeyPath;
    uint64_t v70 = 3;
    char v71 = 0;
    uint64_t v72 = v34;
    char v73 = 0;
    uint64_t v74 = v35;
    uint64_t v75 = 0x3FE0000000000000;
    static Alignment.leading.getter();
    sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v49, 0.0, 1, 0.0, 1);
    sub_100033364(v26, v28, v32);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v63 = v50;
    long long v64 = v51;
    uint64_t v65 = v52;
    long long v59 = v49[6];
    long long v60 = v49[7];
    long long v61 = v49[8];
    long long v62 = v49[9];
    long long v55 = v49[2];
    long long v56 = v49[3];
    long long v57 = v49[4];
    long long v58 = v49[5];
    Swift::String v53 = (Swift::String)v49[0];
    long long v54 = v49[1];
    long long v36 = v51;
    uint64_t v37 = v45;
    *(_OWORD *)(v45 + 160) = v50;
    *(_OWORD *)(v37 + 176) = v36;
    *(void *)(v37 + 192) = v65;
    long long v38 = v60;
    *(_OWORD *)(v37 + 96) = v59;
    *(_OWORD *)(v37 + 112) = v38;
    long long v39 = v62;
    *(_OWORD *)(v37 + 128) = v61;
    *(_OWORD *)(v37 + 144) = v39;
    long long v40 = v56;
    *(_OWORD *)(v37 + 32) = v55;
    *(_OWORD *)(v37 + 48) = v40;
    long long v41 = v58;
    *(_OWORD *)(v37 + 64) = v57;
    *(_OWORD *)(v37 + 80) = v41;
    long long v42 = v54;
    *(Swift::String *)uint64_t v37 = v53;
    *(_OWORD *)(v37 + 16) = v42;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v66);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F5FDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F5B08(*v1, a1);
}

uint64_t sub_1001F5FE4@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Font.Leading();
  uint64_t v7 = __chkstk_darwin(v6);
  NSBundle v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v74 = v8;
    uint64_t v75 = v7;
    uint64_t v11 = a2[9];
    uint64_t v12 = a2[10];
    char v73 = a2;
    Swift::String v76 = a2 + 6;
    sub_100008F88(a2 + 6, v11);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 16))(v96, v11, v12);
    if (a1)
    {
      swift_retain();
      uint64_t v13 = sub_10020D834();
      uint64_t v15 = v14;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&v94[0] = v13;
      *((void *)&v94[0] + 1) = v15;
      sub_100033310();
      uint64_t v71 = Text.init<A>(_:)();
      uint64_t v72 = v16;
      uint64_t v18 = v17;
      char v20 = v19 & 1;
      static Font.footnote.getter();
      static Font.Weight.medium.getter();
      Font.weight(_:)();
      swift_release();
      uint64_t v22 = v74;
      uint64_t v21 = v75;
      (*(void (**)(char *, void, uint64_t))(v74 + 104))(v10, enum case for Font.Leading.tight(_:), v75);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
      uint64_t v23 = v71;
      uint64_t v74 = Text.font(_:)();
      uint64_t v75 = v24;
      uint64_t v70 = v25;
      LOBYTE(v22) = v26;
      swift_release();
      LOBYTE(v21) = v22 & 1;
      sub_100033364(v23, v18, v20);
      swift_bridgeObjectRelease();
      uint64_t v27 = v73[9];
      uint64_t v28 = v73[10];
      sub_100008F88(v76, v27);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 96);
      uint64_t v30 = swift_retain();
      v29(v30, v27, v28);
      swift_release();
      uint64_t v31 = v74;
      uint64_t v32 = v70;
      Swift::String v76 = (void *)Text.foregroundColor(_:)();
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      LOBYTE(v27) = v37 & 1;
      sub_100033364(v31, v32, v21);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v39 = swift_getKeyPath();
      uint64_t v40 = swift_getKeyPath();
      long long v41 = v76;
      v96[5] = v76;
      v96[6] = v34;
      char v97 = v27;
      uint64_t v98 = v36;
      uint64_t v99 = KeyPath;
      uint64_t v100 = 2;
      char v101 = 0;
      uint64_t v102 = v39;
      char v103 = 0;
      uint64_t v104 = v40;
      uint64_t v105 = 0x3FE0000000000000;
      static Alignment.leading.getter();
      sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v94, 0.0, 1, 0.0, 1);
      sub_100033364((uint64_t)v41, v34, v27);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      long long v87 = v94[10];
      long long v88 = v94[11];
      uint64_t v89 = v95;
      long long v83 = v94[6];
      long long v84 = v94[7];
      long long v85 = v94[8];
      long long v86 = v94[9];
      long long v79 = v94[2];
      long long v80 = v94[3];
      long long v81 = v94[4];
      long long v82 = v94[5];
      long long v77 = v94[0];
      long long v78 = v94[1];
      type metadata accessor for GuidanceMessagesModel();
      sub_1001EFB14(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
      long long v42 = (void *)EnvironmentObject.init()();
      uint64_t v75 = v43;
      Swift::String v76 = v42;
      type metadata accessor for UIMetrics();
      sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v44 = EnvironmentObject.init()();
      uint64_t v46 = v45;
      type metadata accessor for ConnectionModel(0);
      sub_1001EFB14(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
      uint64_t v47 = EnvironmentObject.init()();
      uint64_t v49 = v48;
      type metadata accessor for ConnectivityModel();
      sub_1001EFB14(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
      uint64_t v50 = EnvironmentObject.init()();
      uint64_t v52 = v51;
      uint64_t v53 = EnvironmentObject.init()();
      long long v54 = v88;
      v90[10] = v87;
      v90[11] = v88;
      long long v55 = v83;
      long long v56 = v84;
      v90[6] = v83;
      v90[7] = v84;
      long long v58 = v85;
      long long v57 = v86;
      v90[8] = v85;
      v90[9] = v86;
      long long v59 = v79;
      long long v60 = v80;
      v90[2] = v79;
      v90[3] = v80;
      long long v62 = v81;
      long long v61 = v82;
      v90[4] = v81;
      v90[5] = v82;
      long long v64 = v77;
      long long v63 = v78;
      v90[0] = v77;
      v90[1] = v78;
      *(_OWORD *)(a3 + 160) = v87;
      *(_OWORD *)(a3 + 176) = v54;
      *(_OWORD *)(a3 + 96) = v55;
      *(_OWORD *)(a3 + 112) = v56;
      *(_OWORD *)(a3 + 128) = v58;
      *(_OWORD *)(a3 + 144) = v57;
      *(_OWORD *)(a3 + 32) = v59;
      *(_OWORD *)(a3 + 48) = v60;
      *(_OWORD *)(a3 + 64) = v62;
      *(_OWORD *)(a3 + 80) = v61;
      uint64_t v65 = v89;
      uint64_t v91 = v89;
      *(_OWORD *)a3 = v64;
      *(_OWORD *)(a3 + 16) = v63;
      long long v66 = v76;
      *(void *)(a3 + 192) = v65;
      *(void *)(a3 + 200) = v66;
      *(void *)(a3 + 208) = v75;
      *(void *)(a3 + 216) = v44;
      *(void *)(a3 + 224) = v46;
      *(void *)(a3 + 232) = v47;
      *(void *)(a3 + 240) = v49;
      *(void *)(a3 + 248) = v50;
      *(void *)(a3 + 256) = v52;
      *(void *)(a3 + 264) = v53;
      *(void *)(a3 + 272) = v67;
      sub_100169EB4((uint64_t)v90);
      v92[10] = v87;
      v92[11] = v88;
      uint64_t v93 = v89;
      v92[6] = v83;
      v92[7] = v84;
      v92[8] = v85;
      v92[9] = v86;
      v92[2] = v79;
      v92[3] = v80;
      v92[4] = v81;
      v92[5] = v82;
      v92[0] = v77;
      v92[1] = v78;
      sub_10018BF94((uint64_t)v92);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v96);
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for ConnectivityModel();
  sub_1001EFB14(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001F6688@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F5FE4(*(void *)v1, *(void **)(v1 + 16), a1);
}

uint64_t sub_1001F6694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v62 = a1;
  uint64_t v3 = sub_100004010(&qword_10038A8C8);
  __chkstk_darwin(v3 - 8);
  long long v56 = (uint64_t *)((char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_100004010(&qword_10038A8D0);
  __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10038A8D8);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  uint64_t v53 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10038A8E0);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v57 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TransmissionProgress(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_10038A8E8);
  __chkstk_darwin(v17 - 8);
  char v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = (void *)v1[4];
  if (v20)
  {
    uint64_t v21 = (uint64_t)(v20 + 6);
    uint64_t v22 = v20[9];
    uint64_t v23 = v20[10];
    sub_100008F88(v20 + 6, v22);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 16))(v66, v22, v23);
    if (*v1)
    {
      swift_retain();
      sub_10020CBFC((uint64_t)v12);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_10000950C((uint64_t)v12, &qword_10037F158);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v19, 1, 1, v61);
LABEL_12:
        sub_10000D544((uint64_t)v19, v62, &qword_10038A8E8);
        return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v66);
      }
      sub_1001EFB5C((uint64_t)v12, (uint64_t)v16, type metadata accessor for TransmissionProgress);
      sub_1000090FC(v21, (uint64_t)v63);
      uint64_t v24 = v64;
      uint64_t v25 = v65;
      sub_100008F88(v63, v64);
      uint64_t v26 = v1[2];
      if (v26)
      {
        uint64_t v27 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v25 + 112))(v16, *(unsigned __int8 *)(*(void *)(v26 + 48) + 120), v24, v25);
        unint64_t v29 = v28;
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v63);
        uint64_t v30 = HIBYTE(v29) & 0xF;
        if ((v29 & 0x2000000000000000) == 0) {
          uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
        }
        if (v30)
        {
          uint64_t v31 = static HorizontalAlignment.leading.getter();
          uint64_t v32 = (uint64_t)v56;
          *long long v56 = v31;
          *(void *)(v32 + 8) = 0;
          *(unsigned char *)(v32 + 16) = 0;
          uint64_t v33 = sub_100004010(&qword_10038A8F0);
          sub_1001F6D48(v2, (uint64_t)v16, v66, v27, v29, v32 + *(int *)(v33 + 44));
          swift_bridgeObjectRelease();
          char v34 = static Edge.Set.top.getter();
          EdgeInsets.init(_all:)();
          uint64_t v36 = v35;
          uint64_t v38 = v37;
          uint64_t v40 = v39;
          uint64_t v42 = v41;
          uint64_t v43 = v55;
          sub_10000D2A0(v32, v55, &qword_10038A8C8);
          uint64_t v44 = v43 + *(int *)(v54 + 36);
          *(unsigned char *)uint64_t v44 = v34;
          *(void *)(v44 + 8) = v36;
          *(void *)(v44 + 16) = v38;
          *(void *)(v44 + 24) = v40;
          *(void *)(v44 + 32) = v42;
          *(unsigned char *)(v44 + 40) = 0;
          sub_10000950C(v32, &qword_10038A8C8);
          uint64_t v45 = v53;
          sub_10000D2A0(v43, v53, &qword_10038A8D0);
          uint64_t v46 = v59;
          *(_WORD *)(v45 + *(int *)(v59 + 36)) = 256;
          sub_10000950C(v43, &qword_10038A8D0);
          uint64_t v47 = v57;
          sub_10000D544(v45, v57, &qword_10038A8D8);
          uint64_t v48 = 0;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = 1;
          uint64_t v46 = v59;
          uint64_t v47 = v57;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v47, v48, 1, v46);
        sub_10000D544(v47, (uint64_t)v19, &qword_10038A8E0);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v19, 0, 1, v61);
        sub_1001F934C((uint64_t)v16, type metadata accessor for TransmissionProgress);
        goto LABEL_12;
      }
      type metadata accessor for ConnectivityModel();
      uint64_t v50 = &qword_10037F0F0;
      uint64_t v51 = (void (*)(uint64_t))type metadata accessor for ConnectivityModel;
    }
    else
    {
      type metadata accessor for ConnectionModel(0);
      uint64_t v50 = &qword_10037F100;
      uint64_t v51 = (void (*)(uint64_t))type metadata accessor for ConnectionModel;
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    uint64_t v50 = (unint64_t *)&qword_10037EFF0;
    uint64_t v51 = (void (*)(uint64_t))type metadata accessor for UIMetrics;
  }
  sub_1001EFB14(v50, v51);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001F6D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double v196 = *(double *)&a4;
  uint64_t v197 = a5;
  uint64_t v186 = a2;
  uint64_t v193 = sub_100004010(&qword_10038A8F8);
  __chkstk_darwin(v193);
  v190 = &v176[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100004010(&qword_10037F118);
  uint64_t v187 = *(void *)(v10 - 8);
  uint64_t v188 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = &v176[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_100004010(&qword_100388718);
  uint64_t v189 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v176[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100004010(&qword_100388720);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v194 = &v176[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v195 = &v176[-v19];
  uint64_t v198 = sub_100004010(&qword_10038A900);
  __chkstk_darwin(v198);
  uint64_t v21 = (uint64_t *)&v176[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v191 = sub_100004010(&qword_10038A908);
  __chkstk_darwin(v191);
  uint64_t v23 = &v176[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v199 = sub_100004010(&qword_10038A910);
  __chkstk_darwin(v199);
  v192 = &v176[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = type metadata accessor for Font.Leading();
  uint64_t v26 = __chkstk_darwin(v25);
  unint64_t v29 = &v176[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
    type metadata accessor for ConnectivityModel();
    char v174 = &qword_10037F0F0;
    uint64_t v175 = type metadata accessor for ConnectivityModel;
    goto LABEL_9;
  }
  int v32 = 1 << *(unsigned char *)(*(void *)(v31 + 48) + 120);
  v200 = v21;
  uint64_t v201 = a6;
  if ((v32 & 0x1D8) != 0)
  {
    double v225 = v196;
    uint64_t v226 = v197;
    uint64_t v33 = v26;
    uint64_t v34 = v27;
    uint64_t v35 = v29;
    sub_100033310();
    swift_bridgeObjectRetain();
    double v196 = COERCE_DOUBLE(Text.init<A>(_:)());
    uint64_t v197 = v36;
    uint64_t v38 = v37;
    char v40 = v39 & 1;
    static Font.subheadline.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    (*(void (**)(unsigned char *, void, uint64_t))(v34 + 104))(v35, enum case for Font.Leading.tight(_:), v33);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v35, v33);
    uint64_t v41 = *(void *)&v196;
    LOBYTE(v33) = v40;
    uint64_t v42 = Text.font(_:)();
    uint64_t v44 = v43;
    char v46 = v45;
    v194 = v47;
    swift_release();
    char v48 = v46 & 1;
    sub_100033364(v41, v38, v33);
    swift_bridgeObjectRelease();
    id v49 = [self secondaryLabelColor];
    Color.init(_:)();
    uint64_t v50 = Text.foregroundColor(_:)();
    uint64_t v52 = v51;
    LOBYTE(v41) = v53;
    uint64_t v197 = v54;
    swift_release();
    LOBYTE(v34) = v41 & 1;
    sub_100033364(v42, v44, v48);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = swift_getKeyPath();
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    double v58 = v225;
    char v59 = v226;
    uint64_t v60 = v227;
    char v61 = v228;
    LOBYTE(v207[0]) = v34;
    LOBYTE(v205[0]) = 0;
    LOBYTE(v204[0]) = v226;
    LOBYTE(v203[0]) = v228;
    v195 = v52;
    double v196 = *(double *)&v50;
    *(void *)uint64_t v23 = v50;
    *((void *)v23 + 1) = v52;
    v23[16] = v34;
    *(_DWORD *)(v23 + 17) = v214;
    *((_DWORD *)v23 + 5) = *(_DWORD *)((char *)&v214 + 3);
    *((void *)v23 + 3) = v197;
    *((void *)v23 + 4) = KeyPath;
    *((void *)v23 + 5) = 1;
    v23[48] = 0;
    int v62 = v254;
    *((_DWORD *)v23 + 13) = *(_DWORD *)((char *)&v254 + 3);
    *(_DWORD *)(v23 + 49) = v62;
    *((void *)v23 + 7) = v56;
    v23[64] = 0;
    int v63 = *(_DWORD *)v213;
    *((_DWORD *)v23 + 17) = *(_DWORD *)&v213[3];
    *(_DWORD *)(v23 + 65) = v63;
    *((void *)v23 + 9) = v57;
    *((void *)v23 + 10) = 0x3FE0000000000000;
    *((double *)v23 + 11) = v58;
    v23[96] = v59;
    LODWORD(v58) = *(_DWORD *)v211;
    *((_DWORD *)v23 + 25) = *(_DWORD *)&v211[3];
    *(_DWORD *)(v23 + 97) = LODWORD(v58);
    *((void *)v23 + 13) = v60;
    v23[112] = v61;
    LODWORD(v58) = *(_DWORD *)v209;
    *((_DWORD *)v23 + 29) = *(_DWORD *)&v209[3];
    *(_DWORD *)(v23 + 113) = LODWORD(v58);
    *(_OWORD *)(v23 + 120) = v229;
    *((_WORD *)v23 + 68) = 256;
    swift_storeEnumTagMultiPayload();
    sub_100033724(v50, (uint64_t)v52, v34);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100004010(&qword_10038A920);
    sub_100009B18(&qword_10038A928, &qword_10038A8F8);
    sub_10018C004();
    uint64_t v64 = (uint64_t)v192;
    _ConditionalContent<>.init(storage:)();
    sub_10000D2A0(v64, (uint64_t)v200, &qword_10038A910);
    swift_storeEnumTagMultiPayload();
    sub_10018C0FC();
    _ConditionalContent<>.init(storage:)();
    sub_10000950C(v64, &qword_10038A910);
    sub_100033364(*(uint64_t *)&v196, (uint64_t)v195, v34);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else if ((v32 & 0x203) != 0)
  {
    v184 = v29;
    uint64_t v185 = v26;
    uint64_t v183 = v27;
    double v225 = (double)*(uint64_t *)(v186 + *(int *)(type metadata accessor for TransmissionProgress(0) + 28));
    LOBYTE(v226) = 0;
    *(void *)&long long v214 = 0x4059000000000000;
    sub_10013A2C8();
    ProgressView.init<A>(value:total:)();
    uint64_t v66 = a3[3];
    uint64_t v67 = a3[4];
    uint64_t v68 = sub_100008F88(a3, v66);
    uint64_t v228 = v66;
    *(void *)&long long v229 = *(void *)(v67 + 8);
    uint64_t v69 = sub_10013A31C((uint64_t *)&v225);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v69, v68, v66);
    sub_100009B18(&qword_10037F210, &qword_10037F118);
    sub_10013A380();
    uint64_t v70 = v188;
    View.progressViewStyle<A>(_:)();
    sub_10013A3D4((uint64_t)&v225);
    (*(void (**)(unsigned char *, uint64_t))(v187 + 8))(v12, v70);
    uint64_t v72 = a3[3];
    uint64_t v71 = a3[4];
    sub_100008F88(a3, v72);
    double v73 = (*(double (**)(uint64_t))(*(void *)(v71 + 8) + 8))(v72);
    static Alignment.center.getter();
    uint64_t v74 = v194;
    __n128 v75 = sub_1001672FC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v194, 0.0, 1, v73, 0);
    (*(void (**)(unsigned char *, uint64_t, __n128))(v189 + 8))(v15, v13, v75);
    sub_10000D544((uint64_t)v74, (uint64_t)v195, &qword_100388720);
    double v225 = v196;
    uint64_t v226 = v197;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v76 = Text.init<A>(_:)();
    uint64_t v78 = v77;
    uint64_t v197 = v79;
    LOBYTE(v67) = v80 & 1;
    static Font.subheadline.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v81 = v183;
    long long v82 = v184;
    uint64_t v83 = v185;
    (*(void (**)(unsigned char *, void, uint64_t))(v183 + 104))(v184, enum case for Font.Leading.tight(_:), v185);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v82, v83);
    uint64_t v84 = v78;
    uint64_t v85 = Text.font(_:)();
    uint64_t v87 = v86;
    LOBYTE(v83) = v88;
    uint64_t v187 = v89;
    swift_release();
    sub_100033364(v76, v84, v67);
    swift_bridgeObjectRelease();
    id v90 = [self secondaryLabelColor];
    Color.init(_:)();
    uint64_t v91 = Text.foregroundColor(_:)();
    double v196 = *(double *)&v92;
    uint64_t v197 = v91;
    LOBYTE(v67) = v93;
    uint64_t v188 = v94;
    swift_release();
    LODWORD(v189) = v67 & 1;
    sub_100033364(v85, v87, v83 & 1);
    swift_bridgeObjectRelease();
    uint64_t v187 = swift_getKeyPath();
    uint64_t v186 = swift_getKeyPath();
    uint64_t v185 = swift_getKeyPath();
    LODWORD(v184) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    uint64_t v100 = v99;
    uint64_t v102 = v101;
    char v208 = v67 & 1;
    unsigned __int8 v206 = 0;
    unsigned __int8 v202 = 0;
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    LOBYTE(v85) = v255;
    uint64_t v182 = v256;
    uint64_t v183 = v254;
    uint64_t v180 = v259;
    uint64_t v181 = v258;
    LOBYTE(v87) = v208;
    int v177 = v257;
    int v178 = v206;
    int v179 = v202;
    char v212 = v255;
    unsigned __int8 v210 = v257;
    char v103 = v194;
    sub_10000D2A0((uint64_t)v195, (uint64_t)v194, &qword_100388720);
    uint64_t v104 = (uint64_t)v103;
    uint64_t v105 = v190;
    sub_10000D2A0(v104, (uint64_t)v190, &qword_100388720);
    uint64_t v106 = *(int *)(sub_100004010(&qword_10038A918) + 48);
    *(_DWORD *)((char *)&v215 + 1) = v207[0];
    DWORD1(v215) = *(_DWORD *)((char *)v207 + 3);
    *(_DWORD *)((char *)&v217 + 1) = v205[0];
    DWORD1(v217) = *(_DWORD *)((char *)v205 + 3);
    DWORD1(v218) = *(_DWORD *)((char *)v204 + 3);
    int v107 = v204[0];
    *(_DWORD *)((char *)&v218 + 1) = v204[0];
    HIDWORD(v219) = *(_DWORD *)((char *)v203 + 3);
    LODWORD(v67) = v203[0];
    *(_DWORD *)((char *)&v219 + 9) = v203[0];
    DWORD1(v222) = *(_DWORD *)&v213[3];
    LODWORD(v76) = *(_DWORD *)v213;
    *(_DWORD *)((char *)&v222 + 1) = *(_DWORD *)v213;
    int v108 = *(_DWORD *)v211;
    *(_DWORD *)((char *)&v223 + 1) = *(_DWORD *)v211;
    DWORD1(v223) = *(_DWORD *)&v211[3];
    int v109 = *(_DWORD *)v209;
    *(_DWORD *)((char *)v224 + 1) = *(_DWORD *)v209;
    DWORD1(v224[0]) = *(_DWORD *)&v209[3];
    uint64_t v110 = &v105[v106];
    uint64_t v112 = *(void *)&v196;
    uint64_t v111 = v197;
    *(void *)&long long v214 = v197;
    *((double *)&v214 + 1) = v196;
    char v113 = v87;
    LOBYTE(v215) = v87;
    uint64_t v114 = v187;
    uint64_t v115 = v188;
    *((void *)&v215 + 1) = v188;
    *(void *)&long long v216 = v187;
    *((void *)&v216 + 1) = 1;
    char v116 = v178;
    LOBYTE(v217) = v178;
    uint64_t v118 = v185;
    uint64_t v117 = v186;
    *((void *)&v217 + 1) = v186;
    LOBYTE(v218) = 0;
    *(_DWORD *)((char *)&v227 + 1) = v207[0];
    *((void *)&v218 + 1) = v185;
    *(void *)&long long v219 = 0x3FE0000000000000;
    char v119 = (char)v184;
    BYTE8(v219) = (_BYTE)v184;
    *(void *)&long long v220 = v96;
    *((void *)&v220 + 1) = v98;
    *(void *)&long long v221 = v100;
    *((void *)&v221 + 1) = v102;
    char v120 = v179;
    LOBYTE(v222) = v179;
    uint64_t v121 = v182;
    uint64_t v122 = v183;
    *((void *)&v222 + 1) = v183;
    LOBYTE(v223) = v85;
    *((void *)&v223 + 1) = v182;
    char v123 = v177;
    LOBYTE(v224[0]) = v177;
    uint64_t v125 = v180;
    uint64_t v124 = v181;
    *((void *)&v224[0] + 1) = v181;
    *(void *)&v224[1] = v180;
    *(_DWORD *)v231 = v205[0];
    WORD4(v224[1]) = 256;
    long long v126 = v214;
    long long v127 = v215;
    long long v128 = v217;
    long long v129 = v218;
    v110[2] = v216;
    v110[3] = v128;
    *uint64_t v110 = v126;
    v110[1] = v127;
    long long v130 = v219;
    long long v131 = v221;
    long long v132 = v222;
    v110[6] = v220;
    v110[7] = v131;
    v110[4] = v129;
    v110[5] = v130;
    long long v133 = v223;
    long long v134 = v224[0];
    *(_OWORD *)((char *)v110 + 170) = *(_OWORD *)((char *)v224 + 10);
    v110[9] = v133;
    v110[10] = v134;
    v110[8] = v132;
    LOBYTE(v227) = v113;
    HIDWORD(v227) = *(_DWORD *)((char *)v207 + 3);
    *((void *)&v229 + 1) = 1;
    double v225 = *(double *)&v111;
    uint64_t v226 = v112;
    uint64_t v228 = v115;
    *(void *)&long long v229 = v114;
    char v230 = v116;
    *(_DWORD *)&v231[3] = *(_DWORD *)((char *)v205 + 3);
    uint64_t v232 = v117;
    char v233 = 0;
    *(_DWORD *)&v234[3] = *(_DWORD *)((char *)v204 + 3);
    *(_DWORD *)v234 = v107;
    uint64_t v235 = v118;
    uint64_t v236 = 0x3FE0000000000000;
    char v237 = v119;
    *(_DWORD *)&v238[3] = *(_DWORD *)((char *)v203 + 3);
    *(_DWORD *)v238 = v67;
    uint64_t v239 = v96;
    uint64_t v240 = v98;
    uint64_t v241 = v100;
    uint64_t v242 = v102;
    char v243 = v120;
    *(_DWORD *)v244 = v76;
    *(_DWORD *)&v244[3] = *(_DWORD *)&v213[3];
    uint64_t v245 = v122;
    char v246 = v85;
    *(_DWORD *)v247 = v108;
    *(_DWORD *)&v247[3] = *(_DWORD *)&v211[3];
    uint64_t v248 = v121;
    char v249 = v123;
    *(_DWORD *)v250 = v109;
    *(_DWORD *)&v250[3] = *(_DWORD *)&v209[3];
    uint64_t v251 = v124;
    uint64_t v252 = v125;
    __int16 v253 = 256;
    sub_100033724(v111, v112, v189);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100169EB4((uint64_t)&v214);
    sub_10018BF94((uint64_t)&v225);
    sub_10000950C((uint64_t)v194, &qword_100388720);
    char v135 = v190;
    sub_10000D2A0((uint64_t)v190, (uint64_t)v23, &qword_10038A8F8);
    swift_storeEnumTagMultiPayload();
    sub_100004010(&qword_10038A920);
    sub_100009B18(&qword_10038A928, &qword_10038A8F8);
    sub_10018C004();
    uint64_t v136 = (uint64_t)v192;
    _ConditionalContent<>.init(storage:)();
    sub_10000950C((uint64_t)v135, &qword_10038A8F8);
    sub_10000D2A0(v136, (uint64_t)v200, &qword_10038A910);
    swift_storeEnumTagMultiPayload();
    sub_10018C0FC();
    _ConditionalContent<>.init(storage:)();
    sub_10000950C(v136, &qword_10038A910);
    sub_100033364(v197, *(uint64_t *)&v196, v189);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_10000950C((uint64_t)v195, &qword_100388720);
  }
  else
  {
    double v225 = v196;
    uint64_t v226 = v197;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v137 = Text.init<A>(_:)();
    uint64_t v139 = v138;
    char v141 = v140 & 1;
    uint64_t v143 = a3[3];
    uint64_t v142 = a3[4];
    sub_100008F88(a3, v143);
    (*(void (**)(uint64_t))(*(void *)(v142 + 8) + 32))(v143);
    uint64_t v144 = Text.font(_:)();
    double v196 = *(double *)&v145;
    uint64_t v197 = v146;
    char v148 = v147;
    swift_release();
    sub_100033364(v137, v139, v141);
    swift_bridgeObjectRelease();
    uint64_t v149 = *(void **)(v30 + 32);
    if (!v149)
    {
      while (1)
      {
        type metadata accessor for UIMetrics();
        char v174 = (unint64_t *)&qword_10037EFF0;
        uint64_t v175 = type metadata accessor for UIMetrics;
LABEL_9:
        sub_1001EFB14(v174, (void (*)(uint64_t))v175);
        EnvironmentObject.error()();
        __break(1u);
      }
    }
    char v150 = v148 & 1;
    uint64_t v151 = v149[9];
    uint64_t v152 = v149[10];
    sub_100008F88(v149 + 6, v151);
    uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 96);
    uint64_t v154 = swift_retain();
    v153(v154, v151, v152);
    swift_release();
    uint64_t v155 = *(void *)&v196;
    uint64_t v156 = Text.foregroundColor(_:)();
    uint64_t v158 = v157;
    char v160 = v159;
    uint64_t v162 = v161;
    sub_100033364(v144, v155, v150);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v163 = swift_getKeyPath();
    uint64_t v164 = swift_getKeyPath();
    uint64_t v165 = swift_getKeyPath();
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    double v166 = v225;
    char v167 = v226;
    uint64_t v168 = v227;
    char v169 = v228;
    char v170 = v160 & 1;
    LOBYTE(v207[0]) = v160 & 1;
    LOBYTE(v205[0]) = 0;
    LOBYTE(v204[0]) = v226;
    LOBYTE(v203[0]) = v228;
    uint64_t v171 = v200;
    uint64_t *v200 = v156;
    v171[1] = v158;
    *((unsigned char *)v171 + 16) = v170;
    *(_DWORD *)((char *)v171 + 17) = v214;
    *((_DWORD *)v171 + 5) = *(_DWORD *)((char *)&v214 + 3);
    v171[3] = v162;
    v171[4] = v163;
    v171[5] = 1;
    *((unsigned char *)v171 + 48) = 0;
    int v172 = v254;
    *((_DWORD *)v171 + 13) = *(_DWORD *)((char *)&v254 + 3);
    *(_DWORD *)((char *)v171 + 49) = v172;
    v171[7] = v164;
    *((unsigned char *)v171 + 64) = 0;
    int v173 = *(_DWORD *)v213;
    *((_DWORD *)v171 + 17) = *(_DWORD *)&v213[3];
    *(_DWORD *)((char *)v171 + 65) = v173;
    v171[9] = v165;
    v171[10] = 0x3FE0000000000000;
    *((double *)v171 + 11) = v166;
    *((unsigned char *)v171 + 96) = v167;
    LODWORD(v166) = *(_DWORD *)v211;
    *((_DWORD *)v171 + 25) = *(_DWORD *)&v211[3];
    *(_DWORD *)((char *)v171 + 97) = LODWORD(v166);
    v171[13] = v168;
    *((unsigned char *)v171 + 112) = v169;
    LODWORD(v166) = *(_DWORD *)v209;
    *((_DWORD *)v171 + 29) = *(_DWORD *)&v209[3];
    *(_DWORD *)((char *)v171 + 113) = LODWORD(v166);
    *(_OWORD *)(v171 + 15) = v229;
    *((_WORD *)v171 + 68) = 256;
    swift_storeEnumTagMultiPayload();
    sub_100004010(&qword_10038A920);
    sub_10018C0FC();
    sub_10018C004();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1001F8068@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F6694(a1);
}

uint64_t sub_1001F80A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)*v1;
  if (*v1)
  {
    uint64_t v4 = v3[9];
    uint64_t v5 = v3[10];
    sub_100008F88(v3 + 6, v4);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 16))(v9, v4, v5);
    uint64_t v6 = static HorizontalAlignment.center.getter();
    char v7 = static Edge.Set.all.getter();
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
    *(unsigned char *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = xmmword_1002C0B80;
    *(_OWORD *)(a1 + 48) = xmmword_1002C0B70;
    *(unsigned char *)(a1 + 64) = 0;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v9);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001EFB14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F81A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v2 = type metadata accessor for KeyboardShortcut();
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  __chkstk_darwin(v2);
  long long v82 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for ButtonBorderShape();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v76 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for BorderedButtonStyle();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v67 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CASessionBannerPossibleButtonView(0);
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v62 + 64);
  __chkstk_darwin(v6);
  uint64_t v64 = sub_100004010(&qword_10038E7A0);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004010(&qword_10038E7A8);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v65 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004010(&qword_10038E7B0);
  __chkstk_darwin(v66);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_10038E7B8);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004010(&qword_10038E7C0);
  __chkstk_darwin(v77);
  uint64_t v78 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038E7C8);
  __chkstk_darwin(v15 - 8);
  char v80 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_10038E7D0);
  uint64_t v85 = *(void *)(v17 - 8);
  uint64_t v86 = v17;
  __chkstk_darwin(v17);
  uint64_t v75 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004010(&qword_10038E7D8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void **)(v1 + *(int *)(v6 + 28));
  if (!v22)
  {
    type metadata accessor for UIMetrics();
    uint64_t v60 = (unint64_t *)&qword_10037EFF0;
    char v61 = type metadata accessor for UIMetrics;
LABEL_12:
    sub_1001EFB14(v60, (void (*)(uint64_t))v61);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v23 = v22[9];
  uint64_t v24 = v22[10];
  sub_100008F88(v22 + 6, v23);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 16))(v89, v23, v24);
  uint64_t v25 = *(void **)(v1 + *(int *)(v6 + 24));
  if (!v25)
  {
    type metadata accessor for StewieModel();
    uint64_t v60 = &qword_100380DA0;
    char v61 = type metadata accessor for StewieModel;
    goto LABEL_12;
  }
  if (v25[8]
    && (uint64_t v26 = v25[15], (sub_100078E0C(0, v25[11]) & 1) != 0)
    && (v26 & 0xFF00) != 0x200
    && (v26 & 0x100) != 0)
  {
    sub_1001F204C(v1, (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CASessionBannerPossibleButtonView);
    unint64_t v27 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = sub_1001EFB5C((uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for CASessionBannerPossibleButtonView);
    __chkstk_darwin(v29);
    sub_1001FADA0();
    Button.init(action:label:)();
    uint64_t v30 = v67;
    BorderedButtonStyle.init()();
    sub_100009B18(&qword_10038E7E8, &qword_10038E7A0);
    sub_1001EFB14((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    uint64_t v31 = v65;
    uint64_t v32 = v64;
    uint64_t v33 = v71;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v33);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v32);
    uint64_t v34 = v76;
    static ButtonBorderShape.capsule.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v36 = (uint64_t *)&v12[*(int *)(v66 + 36)];
    uint64_t v37 = sub_100004010(&qword_100381038);
    uint64_t v38 = v79;
    uint64_t v39 = v81;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)v36 + *(int *)(v37 + 28), v34, v81);
    *uint64_t v36 = KeyPath;
    uint64_t v40 = v68;
    uint64_t v41 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v12, v31, v69);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v39);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
    uint64_t v42 = v82;
    static KeyboardShortcut.defaultAction.getter();
    sub_1001FADFC();
    uint64_t v43 = v72;
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v42, v84);
    sub_10000950C((uint64_t)v12, &qword_10038E7B0);
    uint64_t v44 = static Color.green.getter();
    uint64_t v45 = swift_getKeyPath();
    uint64_t v88 = v44;
    swift_retain();
    uint64_t v46 = AnyShapeStyle.init<A>(_:)();
    uint64_t v47 = v73;
    uint64_t v48 = (uint64_t)v78;
    uint64_t v49 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v78, v43, v74);
    swift_release();
    uint64_t v50 = (uint64_t *)(v48 + *(int *)(v77 + 36));
    *uint64_t v50 = v45;
    v50[1] = v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v49);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v51 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v53 = v52;
    LOBYTE(v47) = v54 & 1;
    sub_1001FAF4C();
    uint64_t v55 = (uint64_t)v80;
    View.accessibility(label:)();
    sub_100033364(v51, v53, v47);
    swift_bridgeObjectRelease();
    sub_10000950C(v48, &qword_10038E7C0);
    LOBYTE(v51) = static Edge.Set.all.getter();
    uint64_t v56 = v75;
    sub_10000D2A0(v55, v75, &qword_10038E7C8);
    uint64_t v57 = v86;
    uint64_t v58 = v56 + *(int *)(v86 + 36);
    *(unsigned char *)uint64_t v58 = v51;
    *(_OWORD *)(v58 + 8) = xmmword_1002C0B90;
    *(_OWORD *)(v58 + 24) = xmmword_1002C0BA0;
    *(unsigned char *)(v58 + 40) = 0;
    sub_10000950C(v55, &qword_10038E7C8);
    sub_10000D544(v56, (uint64_t)v21, &qword_10038E7D0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v21, 0, 1, v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v21, 1, 1, v86);
  }
  sub_10000D544((uint64_t)v21, v87, &qword_10038E7D8);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v89);
}

uint64_t sub_1001F8D4C(uint64_t a1)
{
  if (*(void *)(a1 + *(int *)(type metadata accessor for CASessionBannerPossibleButtonView(0) + 20)))
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_1001EFB14((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F8E6C()
{
  static VerticalAlignment.center.getter();
  sub_1001F9050((uint64_t)&v3);
  long long v0 = v3;
  char v1 = v4;
  static Alignment.center.getter();
  sub_1001684C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v3, 0.0, 1, 0.0, 1);
  sub_100033364(v0, *((uint64_t *)&v0 + 1), v1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100004010(&qword_10038E9B0);
  sub_1001FBBDC();
  View.accessibility(hidden:)();
  return sub_1001FBC7C((uint64_t)&v3);
}

uint64_t sub_1001F9050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self mainBundle];
  v32._countAndFlagsBits = 0xD00000000000002CLL;
  v32._object = (void *)0x80000001002D3BC0;
  v7._object = (void *)0x80000001002D1190;
  v7._countAndFlagsBits = 0xD000000000000017;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v32);

  Swift::String v31 = v9;
  sub_100033310();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.title3.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  LOBYTE(v2) = v19 & 1;
  sub_100033364(v10, v12, v14);
  swift_bridgeObjectRelease();
  static Color.green.getter();
  uint64_t v20 = Text.foregroundColor(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  sub_100033364(v15, v17, v2);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = v22;
  *(unsigned char *)(a1 + 16) = v24 & 1;
  *(void *)(a1 + 24) = v26;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 1;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v28;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = 0x3FE0000000000000;
  return result;
}

uint64_t type metadata accessor for CASessionBannerPossibleButtonView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038E5B0);
}

uint64_t sub_1001F934C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CASessionBannerStaticContentTrailingView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038E648);
}

uint64_t type metadata accessor for CASessionBannerVariableContentView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038E6D8);
}

uint64_t type metadata accessor for CASessionBannerStaticContentLeadingView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038E768);
}

uint64_t *sub_1001F940C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)uint64_t v4 = *(unsigned char *)a2;
      uint64_t v8 = type metadata accessor for ConnectionClosed(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)v4 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_100004010(&qword_100380418);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(uint64_t *)((char *)v4 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v4, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v16 = a3[5];
    uint64_t v17 = a3[6];
    char v18 = (uint64_t *)((char *)v4 + v16);
    char v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    *char v18 = v20;
    v18[1] = v21;
    uint64_t v22 = (uint64_t *)((char *)v4 + v17);
    char v23 = (uint64_t *)((char *)a2 + v17);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    *uint64_t v22 = v25;
    v22[1] = v24;
    uint64_t v26 = a3[7];
    unint64_t v27 = (uint64_t *)((char *)v4 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    *unint64_t v27 = v30;
    v27[1] = v29;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001F9640(uint64_t a1)
{
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = a1 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v3 = type metadata accessor for Date();
    uint64_t v4 = *(void *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return swift_release();
}

unsigned char *sub_1001F9754(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = type metadata accessor for ConnectionClosed(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100004010(&qword_100380418);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  *uint64_t v16 = v18;
  v16[1] = v19;
  uint64_t v20 = &a1[v15];
  uint64_t v21 = (uint64_t *)&a2[v15];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unsigned char *sub_1001F993C(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001F934C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v6 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for ConnectionClosed(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100004010(&qword_100380418);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_retain();
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_retain();
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  swift_retain();
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  return a1;
}

unsigned char *sub_1001F9B80(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = type metadata accessor for ConnectionClosed(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100004010(&qword_100380418);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v14 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

unsigned char *sub_1001F9D38(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001F934C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v6 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for ConnectionClosed(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100004010(&qword_100380418);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *v22;
  swift_release();
  *((void *)v21 + 1) = v22[1];
  return a1;
}

uint64_t sub_1001F9F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F9F74);
}

uint64_t sub_1001F9F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001FA040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA054);
}

uint64_t sub_1001FA054(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_1001FA110()
{
  uint64_t result = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001FA1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA1D4);
}

uint64_t sub_1001FA1D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FB66C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_1001FA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA200);
}

void *sub_1001FA200(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FB758(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_1001FA218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FB81C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

unsigned char *sub_1001FA230(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_1001F934C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for ConnectionClosed(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100004010(&qword_100380418);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(void *)&a1[*(int *)(v5 + 24)] = *(void *)&a2[*(int *)(v5 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

unsigned char *sub_1001FA3E4(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_1001F934C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for ConnectionClosed(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100004010(&qword_100380418);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(void *)&a1[*(int *)(v5 + 24)] = *(void *)&a2[*(int *)(v5 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001FA594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA5A8);
}

uint64_t sub_1001FA5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001FA614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA628);
}

uint64_t sub_1001FA628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void *sub_1001FA698(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1001F934C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

void *sub_1001FA884(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1001F934C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001FAA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FAA78);
}

uint64_t sub_1001FAA78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FB66C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_1001FAA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FAAA4);
}

void *sub_1001FAAA4(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FB758(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_1001FAABC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FAB3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FAB58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FAB74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FAB90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FABAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CASessionBannerPossibleButtonView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v0 + v3 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v6 = type metadata accessor for Date();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001FAD40()
{
  uint64_t v1 = *(void *)(type metadata accessor for CASessionBannerPossibleButtonView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1001F8D4C(v2);
}

unint64_t sub_1001FADA0()
{
  unint64_t result = qword_10038E7E0;
  if (!qword_10038E7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E7E0);
  }
  return result;
}

unint64_t sub_1001FADFC()
{
  unint64_t result = qword_10038E7F0;
  if (!qword_10038E7F0)
  {
    sub_1000094C4(&qword_10038E7B0);
    sub_1000094C4(&qword_10038E7A0);
    type metadata accessor for BorderedButtonStyle();
    sub_100009B18(&qword_10038E7E8, &qword_10038E7A0);
    sub_1001EFB14((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E7F0);
  }
  return result;
}

unint64_t sub_1001FAF4C()
{
  unint64_t result = qword_10038E7F8;
  if (!qword_10038E7F8)
  {
    sub_1000094C4(&qword_10038E7C0);
    sub_1000094C4(&qword_10038E7B0);
    sub_1001FADFC();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E7F8);
  }
  return result;
}

uint64_t type metadata accessor for CASessionBannerConnectionClosedView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038E948);
}

unint64_t sub_1001FB040()
{
  unint64_t result = qword_10038E838;
  if (!qword_10038E838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E838);
  }
  return result;
}

unint64_t sub_1001FB094()
{
  unint64_t result = qword_10038E850;
  if (!qword_10038E850)
  {
    sub_1000094C4(&qword_10038E820);
    sub_1001FB140();
    sub_1001EFB14(&qword_10038E860, (void (*)(uint64_t))type metadata accessor for CASessionBannerConnectionClosedView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E850);
  }
  return result;
}

unint64_t sub_1001FB140()
{
  unint64_t result = qword_10038E858;
  if (!qword_10038E858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E858);
  }
  return result;
}

uint64_t sub_1001FB194()
{
  return sub_1001FB1D0(&qword_10038E868, &qword_10038E870, (void (*)(void))sub_1001FB258, (void (*)(void))sub_1001FB2AC);
}

uint64_t sub_1001FB1D0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001FB258()
{
  unint64_t result = qword_10038E878;
  if (!qword_10038E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E878);
  }
  return result;
}

unint64_t sub_1001FB2AC()
{
  unint64_t result = qword_10038E880;
  if (!qword_10038E880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E880);
  }
  return result;
}

unint64_t sub_1001FB300()
{
  unint64_t result = qword_10038E888;
  if (!qword_10038E888)
  {
    sub_1000094C4(&qword_10038E840);
    sub_1001FB040();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E888);
  }
  return result;
}

uint64_t sub_1001FB37C()
{
  return sub_1001FB1D0(&qword_10038E8C8, &qword_10038E8B0, (void (*)(void))sub_1001FB3B8, (void (*)(void))sub_1001FB4D4);
}

unint64_t sub_1001FB3B8()
{
  unint64_t result = qword_10038E8D0;
  if (!qword_10038E8D0)
  {
    sub_1000094C4(&qword_10038E8B8);
    sub_1001FB434();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E8D0);
  }
  return result;
}

unint64_t sub_1001FB434()
{
  unint64_t result = qword_10038E8D8;
  if (!qword_10038E8D8)
  {
    sub_1000094C4(&qword_100389C20);
    sub_100009B18(&qword_10038A708, &qword_100389C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E8D8);
  }
  return result;
}

unint64_t sub_1001FB4D4()
{
  unint64_t result = qword_10038E8E0;
  if (!qword_10038E8E0)
  {
    sub_1000094C4(&qword_10038E898);
    sub_1001FB550();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E8E0);
  }
  return result;
}

unint64_t sub_1001FB550()
{
  unint64_t result = qword_10038E8E8;
  if (!qword_10038E8E8)
  {
    sub_1000094C4(&qword_100389C30);
    sub_100009B18(&qword_10038A720, &qword_100389C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E8E8);
  }
  return result;
}

ValueMetadata *_s8SOSBuddy36CallEmergencyServicesButtonLabelViewVMa_0()
{
  return &_s8SOSBuddy36CallEmergencyServicesButtonLabelViewVN_0;
}

ValueMetadata *type metadata accessor for CASessionBannerConnectionActiveView()
{
  return &type metadata for CASessionBannerConnectionActiveView;
}

ValueMetadata *type metadata accessor for CASessionBannerOverInternetView()
{
  return &type metadata for CASessionBannerOverInternetView;
}

ValueMetadata *type metadata accessor for CASessionBannerStewieUnavailableView()
{
  return &type metadata for CASessionBannerStewieUnavailableView;
}

uint64_t sub_1001FB640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FB654);
}

uint64_t sub_1001FB654(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FB66C(a1, a2, a3, type metadata accessor for ConnectionClosed);
}

uint64_t sub_1001FB66C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 2147483646)
  {
    uint64_t v5 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    int v6 = v5 - 1;
    if (v6 < 0) {
      int v6 = -1;
    }
    return (v6 + 1);
  }
  else
  {
    uint64_t v10 = a4(0);
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = (char *)a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1001FB72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FB740);
}

void *sub_1001FB740(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FB758(a1, a2, a3, a4, type metadata accessor for ConnectionClosed);
}

void *sub_1001FB758(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  int v6 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v6 + *(int *)(a4 + 20);
    return (void *)v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1001FB804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FB81C(a1, a2, a3, type metadata accessor for ConnectionClosed);
}

uint64_t sub_1001FB81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CASessionBannerQuestionnaireView()
{
  return &type metadata for CASessionBannerQuestionnaireView;
}

uint64_t sub_1001FB8C8()
{
  return sub_1001FB904(&qword_10038E980, &qword_10038E7D8, (void (*)(void))sub_1001FB97C);
}

uint64_t sub_1001FB904(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001FB97C()
{
  unint64_t result = qword_10038E988;
  if (!qword_10038E988)
  {
    sub_1000094C4(&qword_10038E7D0);
    sub_1001FB9F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E988);
  }
  return result;
}

unint64_t sub_1001FB9F8()
{
  unint64_t result = qword_10038E990;
  if (!qword_10038E990)
  {
    sub_1000094C4(&qword_10038E7C8);
    sub_1001FAF4C();
    sub_1001EFB14(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E990);
  }
  return result;
}

uint64_t sub_1001FBAA8()
{
  return sub_100009B18(&qword_10038E998, &qword_10038E9A0);
}

uint64_t sub_1001FBAE4()
{
  return sub_1001FB1D0(&qword_10038E9A8, &qword_10038E8C0, (void (*)(void))sub_1001FB37C, (void (*)(void))sub_10018A814);
}

uint64_t sub_1001FBB34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FBB50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FBB6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FBB88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FBBA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FBBC0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001FBBDC()
{
  unint64_t result = qword_10038E9B8;
  if (!qword_10038E9B8)
  {
    sub_1000094C4(&qword_10038E9B0);
    sub_100009B18(&qword_10038E9C0, &qword_10038E9C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E9B8);
  }
  return result;
}

uint64_t sub_1001FBC7C(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for CASessionBannerTransmissionProgressView()
{
  return &type metadata for CASessionBannerTransmissionProgressView;
}

unint64_t sub_1001FBD18()
{
  unint64_t result = qword_10038E9D0;
  if (!qword_10038E9D0)
  {
    sub_1000094C4(&qword_10038E9D8);
    sub_1001FBBDC();
    sub_1001EFB14(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E9D0);
  }
  return result;
}

uint64_t sub_1001FBDC4()
{
  return sub_100009B18(&qword_10038E9E0, &qword_10038E9E8);
}

unint64_t sub_1001FBE04()
{
  unint64_t result = qword_10038E9F0;
  if (!qword_10038E9F0)
  {
    sub_1000094C4(&qword_10038E9F8);
    sub_10018BE28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038E9F0);
  }
  return result;
}

uint64_t sub_1001FBE80()
{
  return sub_100009B18(&qword_10038EA00, &qword_10038EA08);
}

uint64_t sub_1001FBEBC()
{
  return sub_100009B18(&qword_10038EA10, &qword_10038EA18);
}

uint64_t sub_1001FBEF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FBF14()
{
  return sub_1001FB904(&qword_10038A960, &qword_10038A8E8, (void (*)(void))sub_10018C28C);
}

uint64_t ConnectionAssistantConeRenderer.init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1001FC634(a1, a2, a3);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t ConnectionAssistantConeRenderer.compute(dt:cone:computeCommandEncoder:)(float32x4_t *a1, void *a2, double a3)
{
  float32x4_t v6 = a1[1];
  float32x4_t v7 = vmulq_f32(v6, v6);
  uint64_t v9 = a1->i64[0];
  uint64_t v8 = a1->i64[1];
  LODWORD(v10) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).u32[0];
  float32x2_t v11 = vrsqrte_f32((float32x2_t)LODWORD(v10));
  float32x2_t v12 = vmul_f32(v11, vrsqrts_f32((float32x2_t)LODWORD(v10), vmul_f32(v11, v11)));
  float32x4_t v22 = vmulq_n_f32(v6, vmul_f32(v12, vrsqrts_f32((float32x2_t)LODWORD(v10), vmul_f32(v12, v12))).f32[0]);
  uint64_t v13 = COERCE_UNSIGNED_INT(atan2f(a1[2].f32[0], sqrtf(v10))) | 0x3B03126F00000000;
  float32x4_t v14 = a1[3];
  __asm { FMOV            V1.4S, #1.0 }
  v20.i64[0] = 0x3F0000003F000000;
  v20.i64[1] = 0x3F0000003F000000;
  char v32 = 0;
  char v31 = 0;
  v23[0] = 100;
  v23[2] = v9;
  void v23[3] = v8;
  float32x4_t v24 = v22;
  uint64_t v25 = v13;
  long long v26 = xmmword_1002BA060;
  char v27 = 0;
  float32x4_t v28 = vmlaq_f32(v14, v20, vsubq_f32(_Q1, v14));
  char v29 = 0;
  long long v30 = xmmword_1002BA070;
  return ConnectionAssistantStarsRenderer.compute(dt:stars:computeCommandEncoder:)((uint64_t)v23, a2, a3);
}

uint64_t ConnectionAssistantConeRenderer.render(cone:parameters:camera:destination:renderCommandEncoder:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, __n128 a8, float32x4_t a9)
{
  ConnectionAssistantCone.project(from:camera:)((int32x4_t *)a2, (uint64_t)v91, a8);
  uint64_t result = sub_10000D544((uint64_t)v91, (uint64_t)v92, &qword_10038EA20);
  if ((v94 & 1) == 0)
  {
    uint64_t v76 = a3;
    long long v99 = v92[4];
    v100[0] = *(_OWORD *)v93;
    *(_OWORD *)((char *)v100 + 13) = *(_OWORD *)&v93[13];
    long long v95 = v92[0];
    long long v96 = v92[1];
    long long v97 = v92[2];
    long long v98 = v92[3];
    float32x4_t v17 = *(float32x4_t *)(a1 + 16);
    float32x4_t v18 = vmulq_f32(v17, v17);
    v18.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v18, 2), vadd_f32(*(float32x2_t *)v18.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v18.f32, 1))).u32[0];
    float32x2_t v19 = vrsqrte_f32((float32x2_t)v18.u32[0]);
    float32x2_t v20 = vmul_f32(v19, vrsqrts_f32((float32x2_t)v18.u32[0], vmul_f32(v19, v19)));
    float32x4_t v21 = vmulq_n_f32(v17, vmul_f32(v20, vrsqrts_f32((float32x2_t)v18.u32[0], vmul_f32(v20, v20))).f32[0]);
    *(float32x2_t *)v18.f32 = vsub_f32(0, *(float32x2_t *)(a2 + 80));
    int v22 = 0;
    v18.f32[2] = 0.0 - *(float *)(a2 + 88);
    float32x4_t v23 = vmulq_f32(v21, v18);
    v23.f32[0] = fminf(fmaxf((float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v23, 2), vaddq_f32(v23, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v23.f32, 1))).f32[0]+ 0.1)/ 0.2, 0.0), 1.0);
    float v24 = (float)(v23.f32[0] * v23.f32[0]) * (float)((float)(v23.f32[0] * -2.0) + 3.0);
    float32x4_t v25 = *(float32x4_t *)(a2 + 128);
    float32x4_t v26 = *(float32x4_t *)(a2 + 144);
    float32x4_t v27 = *(float32x4_t *)(a2 + 160);
    float32x4_t v28 = *(float32x4_t *)(a2 + 176);
    float32x4_t v85 = vaddq_f32(v28, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v21.f32[0]), v26, *(float32x2_t *)v21.f32, 1), v27, v21, 2));
    float32x4_t v88 = vaddq_f32(v28, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, a9.f32[0]), v26, *(float32x2_t *)a9.f32, 1), v27, a9, 2));
    uint64_t v74 = *(void *)(a2 + 8);
    uint64_t v75 = *(void *)a2;
    float v83 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(*(void *)a2, v74, *(double *)(a2 + 16));
    char v29 = v99;
    if ((_BYTE)v99) {
      unsigned int v30 = -1;
    }
    else {
      unsigned int v30 = 0;
    }
    int8x8_t v31 = (int8x8_t)vdup_n_s32(v30);
    uint64_t v71 = *((void *)&v98 + 1);
    uint64_t v72 = v98;
    uint64_t v73 = *((void *)&v97 + 1);
    int8x8_t v81 = vbic_s8(*(int8x8_t *)((char *)&v97 + 8), v31);
    int8x8_t v82 = vbic_s8(*(int8x8_t *)((char *)&v98 + 8), v31);
    int8x8_t v80 = vbic_s8(*(int8x8_t *)&v98, v31);
    long long v101 = v95;
    long long v102 = v96;
    int v103 = v97;
    sub_10000D544(a1 + 80, (uint64_t)v105, &qword_10038EA28);
    sub_10000D544((uint64_t)v105, (uint64_t)v112, &qword_10038EA28);
    float v32 = v112[0];
    if (v113) {
      float v32 = 0.0;
    }
    float v79 = v32;
    sub_10000D544((uint64_t)&v99 + 8, (uint64_t)v104, &qword_100387318);
    sub_10000D544((uint64_t)v104, (uint64_t)v117, &qword_100387318);
    if (v119)
    {
      unsigned int v33 = -1;
    }
    else
    {
      int v22 = v118;
      unsigned int v33 = 0;
    }
    int8x8_t v34 = (int8x8_t)vdup_n_s32(v33);
    int8x8_t v35 = vbic_s8(v117[3], v34);
    int8x8_t v36 = vbic_s8(v117[0], v34);
    sub_10000D544((uint64_t)v105, (uint64_t)v109, &qword_10038EA28);
    if (v111) {
      unsigned int v37 = -1;
    }
    else {
      unsigned int v37 = 0;
    }
    float32x4_t v38 = v88;
    v38.i32[3] = 0;
    float32x4_t v89 = v38;
    float32x4_t v39 = v85;
    v39.i32[3] = 0;
    float32x4_t v86 = v39;
    int v40 = *(_DWORD *)(a2 + 32);
    long long v77 = *(_OWORD *)(a1 + 48);
    int8x16_t v78 = vbicq_s8(v110, (int8x16_t)vdupq_n_s32(v37));
    float v41 = v24 * *(float *)(a1 + 64);
    uint64_t v42 = v101;
    uint64_t v43 = *((void *)&v102 + 1);
    int v44 = v103;
    uint64_t v45 = (float *)[(id)swift_unknownObjectRetain() contents];
    id v46 = a7;
    *(float32x4_t *)uint64_t v45 = v89;
    *((float32x4_t *)v45 + 1) = v86;
    v45[8] = v83;
    *((_DWORD *)v45 + 9) = v40;
    *((_OWORD *)v45 + 3) = v77;
    v45[16] = v41;
    *((int8x8_t *)v45 + 9) = v81;
    *((int8x8_t *)v45 + 10) = v80;
    *((int8x8_t *)v45 + 11) = v82;
    *((void *)v45 + 12) = v42;
    *((void *)v45 + 13) = v43;
    *((_DWORD *)v45 + 28) = v44;
    v45[30] = v79;
    *((int8x8_t *)v45 + 16) = v36;
    *((int8x8_t *)v45 + 17) = v35;
    *((_DWORD *)v45 + 36) = v22;
    *((int8x16_t *)v45 + 10) = v78;
    uint64_t v47 = sub_100285024(5);
    if (v47)
    {
      uint64_t v48 = v47;
      NSString v49 = String._bridgeToObjectiveC()();
      [a4 setLabel:v49];

      [a4 setRenderPipelineState:v48];
      float32x2_t v53 = ConnectionAssistantRendererProjection.Ellipse.boundingBox.getter();
      float32x2_t v54 = *(float32x2_t *)v51.i8;
      if ((v29 & 1) == 0)
      {
        v51.i64[0] = v72;
        v50.i64[0] = v73;
        v52.i64[0] = v71;
        float32x2_t v53 = vminnm_f32(v53, COERCE_FLOAT32X2_T(ConnectionAssistantRendererProjection.Triangle.boundingBox.getter(v50, v51, v52)));
        float32x2_t v54 = vmaxnm_f32(v54, v55);
      }
      sub_10000D544((uint64_t)v104, (uint64_t)v114, &qword_100387318);
      if ((v116 & 1) == 0)
      {
        long long v106 = v114[0];
        long long v107 = v114[1];
        int v108 = v115;
        float32x2_t v53 = vminnm_f32(v53, ConnectionAssistantRendererProjection.Ellipse.boundingBox.getter());
        float32x2_t v54 = vmaxnm_f32(v54, v56);
      }
      swift_beginAccess();
      *(float *)v57.i32 = (float)(v83 * *(float *)(a6 + 188)) * 2.8;
      float32x2_t v58 = (float32x2_t)vdup_lane_s32(v57, 0);
      float32x2_t v59 = vsub_f32(v53, v58);
      float32x2_t v60 = vadd_f32(v54, v58);
      id v61 = [v76 width];
      id v62 = [v76 height];
      float v63 = 1.0;
      v64.i32[0] = 1.0;
      if (v75)
      {
        float v65 = (float)v75 / (float)v74;
        float v66 = fminf(v65, 1.0);
        float v67 = fmaxf(v65, 1.0);
        if (v74) {
          float v63 = v66;
        }
        else {
          float v63 = 1.0;
        }
        if (v74) {
          v64.f32[0] = v67;
        }
        else {
          v64.f32[0] = 1.0;
        }
      }
      v64.f32[1] = 1.0 / v63;
      v90[0] = sub_1001329FC((uint64_t)v61, (uint64_t)v62, v59, v60, v64);
      v90[1] = v68;
      v90[2] = v69;
      v90[3] = v70;
      [a4 setScissorRect:v90];
      [a4 setVertexBuffer:*(void *)(a5 + 24) offset:0 atIndex:0];
      [a4 setVertexBuffer:*(void *)(a5 + 32) offset:0 atIndex:1];
      [a4 setFragmentBuffer:v46 offset:0 atIndex:0];
      [a4 drawPrimitives:4 vertexStart:0 vertexCount:4];
      swift_unknownObjectRelease();
    }
    return sub_1000243EC(a2, a4, a8, v41);
  }
  return result;
}

uint64_t sub_1001FC634(void *a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  if ([a1 newBufferWithLength:176 options:1])
  {
    swift_unknownObjectRelease();
    type metadata accessor for ConnectionAssistantStarsRenderer();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    ConnectionAssistantStarsRenderer.init(device:buffers:renderPipelines:)(a1, a2, a3);
    swift_unknownObjectRelease();
    if (v3)
    {
      swift_unknownObjectRelease();
      swift_release_n();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release_n();
    swift_release_n();
    swift_unknownObjectRelease_n();
  }
  return a2;
}

uint64_t destroy for ConnectionAssistantConeRenderer()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_release();
}

void *initializeWithCopy for ConnectionAssistantConeRenderer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ConnectionAssistantConeRenderer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ConnectionAssistantConeRenderer(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionAssistantConeRenderer()
{
  return &type metadata for ConnectionAssistantConeRenderer;
}

ValueMetadata *type metadata accessor for ConnectionAssistantConeRenderer.Parameters()
{
  return &type metadata for ConnectionAssistantConeRenderer.Parameters;
}

id sub_1001FC950(uint64_t a1)
{
  id v3 = [v1 fontDescriptor];
  sub_100004010(&qword_10038EA30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  *(void *)(inited + 64) = sub_100004010(&qword_10038EA38);
  *(void *)(inited + 40) = a1;
  uint64_t v5 = UIFontDescriptorTraitsAttribute;
  swift_bridgeObjectRetain();
  sub_100283868(inited);
  type metadata accessor for AttributeName(0);
  sub_1001FCA90();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 fontDescriptorByAddingAttributes:isa];

  id v8 = [self fontWithDescriptor:v7 size:0.0];
  return v8;
}

unint64_t sub_1001FCA90()
{
  unint64_t result = qword_10037EC88;
  if (!qword_10037EC88)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10037EC88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecordedForkAnswer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001FCBB4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordedForkAnswer()
{
  return &type metadata for RecordedForkAnswer;
}

id sub_1001FCBEC(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = (objc_class *)type metadata accessor for ShadowView();
  v15.receiver = v3;
  v15.super_class = v8;
  [super actionForLayer:a1 forKey:v7];

  if (v9)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      if (a2 == 0x6150776F64616873 && a3 == 0xEA00000000006874
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || a2 == 0x6F43776F64616873 && a3 == 0xEB00000000726F6CLL
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || a2 == 0x664F776F64616873 && a3 == 0xEC00000074657366
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || a2 == 0x704F776F64616873 && a3 == 0xED00007974696361
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || a2 == 0x6152776F64616873 && a3 == 0xEC00000073756964
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        NSString v10 = String._bridgeToObjectiveC()();
        v14.receiver = v3;
        v14.super_class = v8;
        id v11 = [super actionForLayer:a1 forKey:v10];

        id v12 = sub_10027E120(a2, a3, a1, (uint64_t)v11);
        swift_unknownObjectRelease();
        if (v12)
        {
          swift_unknownObjectRelease();
          return v12;
        }
      }
    }
  }
  return v9;
}

id sub_1001FD024()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShadowView();
  return [super dealloc];
}

uint64_t type metadata accessor for ShadowView()
{
  return self;
}

ValueMetadata *type metadata accessor for BannerActionTextView()
{
  return &type metadata for BannerActionTextView;
}

uint64_t sub_1001FD08C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FD0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v91 = (char *)a2;
  uint64_t v101 = a4;
  uint64_t v6 = sub_100004010(&qword_10038EA68);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v85 - v10;
  uint64_t v98 = type metadata accessor for OpacityTransition();
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  char v93 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100004010(&qword_100381CB0);
  uint64_t v97 = *(void *)(v99 - 8);
  uint64_t v13 = __chkstk_darwin(v99);
  char v94 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v95 = (char *)&v85 - v15;
  uint64_t v16 = type metadata accessor for Font.Leading();
  uint64_t v92 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  float32x4_t v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004010(&qword_10038EA70);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v100 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  float32x4_t v23 = (char *)&v85 - v22;
  if (a3)
  {
    float v24 = a3 + 6;
    uint64_t v25 = a3[9];
    uint64_t v26 = a3[10];
    sub_100008F88(v24, v25);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 8))(v144, v25, v26);
    if (a1)
    {
      uint64_t v27 = *(void *)(a1 + 48);
      if (v27)
      {
        unint64_t v28 = *(void *)(v27 + 24);
        if ((v28 & 0x2000000000000000) == 0)
        {
          uint64_t v29 = *(void *)(v27 + 16);
          if ((v29 & 0xFFFFFFFFFFFFLL) == 0) {
            goto LABEL_17;
          }
LABEL_9:
          v86._countAndFlagsBits = v29;
          float32x4_t v89 = v23;
          unsigned int v30 = (void *)v28;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v87 = a1;
          sub_10020D580();
          uint64_t v32 = v31;
          int8x8_t v34 = v33;
          swift_release();
          if (v34) {
            uint64_t v35 = v32;
          }
          else {
            uint64_t v35 = 0;
          }
          uint64_t v85 = v35;
          int8x8_t v36 = (void *)0xE000000000000000;
          if (v34) {
            int8x8_t v36 = v34;
          }
          float32x4_t v88 = v36;
          *(void *)&long long v103 = v29;
          *((void *)&v103 + 1) = v30;
          v86._object = v30;
          sub_100033310();
          swift_bridgeObjectRetain();
          uint64_t v37 = Text.init<A>(_:)();
          uint64_t v39 = v38;
          id v90 = (uint64_t *)v11;
          char v41 = v40 & 1;
          static Font.body.getter();
          static Font.Weight.medium.getter();
          Font.weight(_:)();
          uint64_t v91 = v9;
          swift_release();
          uint64_t v42 = v92;
          (*(void (**)(char *, void, uint64_t))(v92 + 104))(v18, enum case for Font.Leading.tight(_:), v16);
          Font.leading(_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v16);
          uint64_t v43 = Text.font(_:)();
          uint64_t v45 = v44;
          char v47 = v46;
          swift_release();
          sub_100033364(v37, v39, v41);
          swift_bridgeObjectRelease();
          static Color.white.getter();
          uint64_t v48 = Text.foregroundColor(_:)();
          uint64_t v50 = v49;
          LOBYTE(v37) = v51;
          uint64_t v92 = v52;
          swift_release();
          char v53 = v37 & 1;
          sub_100033364(v43, v45, v47 & 1);
          swift_bridgeObjectRelease();
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v55 = swift_getKeyPath();
          uint64_t v56 = swift_getKeyPath();
          char v57 = static Edge.Set.top.getter();
          EdgeInsets.init(_all:)();
          char v127 = v53;
          char v125 = 0;
          char v121 = 0;
          v144[5] = v48;
          v144[6] = v50;
          char v145 = v53;
          *(_DWORD *)uint64_t v146 = *(_DWORD *)v126;
          *(_DWORD *)&v146[3] = *(_DWORD *)&v126[3];
          uint64_t v147 = v92;
          uint64_t v148 = KeyPath;
          uint64_t v149 = 3;
          char v150 = 0;
          *(_DWORD *)&v151[3] = *(_DWORD *)&v124[3];
          *(_DWORD *)uint64_t v151 = *(_DWORD *)v124;
          uint64_t v152 = v55;
          char v153 = 0;
          *(_DWORD *)&v154[3] = *(_DWORD *)&v123[3];
          *(_DWORD *)uint64_t v154 = *(_DWORD *)v123;
          uint64_t v155 = v56;
          uint64_t v156 = 0x3FE0000000000000;
          char v157 = v57;
          *(_DWORD *)&v158[3] = *(_DWORD *)&v122[3];
          *(_DWORD *)uint64_t v158 = *(_DWORD *)v122;
          uint64_t v159 = v58;
          uint64_t v160 = v59;
          uint64_t v161 = v60;
          uint64_t v162 = v61;
          char v163 = 0;
          static Alignment.leading.getter();
          sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v103, 0.0, 1, 0.0, 1);
          uint64_t v62 = v48;
          float v63 = v90;
          sub_100033364(v62, v50, v53);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          long long v140 = v115;
          long long v141 = v116;
          long long v142 = v117;
          uint64_t v143 = v118;
          long long v136 = v111;
          long long v137 = v112;
          long long v138 = v113;
          long long v139 = v114;
          long long v132 = v107;
          long long v133 = v108;
          long long v134 = v109;
          long long v135 = v110;
          long long v128 = v103;
          long long v129 = v104;
          long long v130 = v105;
          long long v131 = v106;
          float32x2_t v64 = v93;
          OpacityTransition.init()();
          static Animation.easeInOut.getter();
          uint64_t v65 = sub_1001FECE8(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
          float v66 = v95;
          uint64_t v67 = v98;
          Transition.animation(_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v67);
          uint64_t v68 = v97;
          uint64_t v69 = v99;
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v66, v99);
          *(void *)&v102[0] = v67;
          *((void *)&v102[0] + 1) = v65;
          swift_getOpaqueTypeConformance2();
          uint64_t v70 = AnyTransition.init<A>(_:)();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v69);
          strcpy((char *)&v103, "GuidanceText-");
          HIWORD(v103) = -4864;
          String.append(_:)(v86);
          swift_bridgeObjectRelease();
          long long v71 = v103;
          uint64_t v72 = *(void *)(v87 + 48);
          if (v72)
          {
            if (*(void *)(v72 + 72))
            {
              uint64_t v73 = *(void *)(v72 + 72);
LABEL_19:
              swift_bridgeObjectRetain();
              *float v63 = static Alignment.top.getter();
              v63[1] = v76;
              uint64_t v77 = sub_100004010(&qword_10038EA90);
              sub_1001FDBFC(v73, (uint64_t)v144, v85, v88, (uint64_t)v63 + *(int *)(v77 + 44));
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v78 = sub_100004010(&qword_10038EA78);
              (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v63, 0, 1, v78);
LABEL_21:
              int8x8_t v80 = v100;
              uint64_t v75 = v101;
              float32x4_t v23 = v89;
              uint64_t v81 = (uint64_t)v91;
              sub_10000D2A0((uint64_t)v63, (uint64_t)v91, &qword_10038EA68);
              v102[12] = v140;
              v102[13] = v141;
              v102[14] = v142;
              v102[8] = v136;
              v102[9] = v137;
              v102[10] = v138;
              v102[11] = v139;
              v102[4] = v132;
              v102[5] = v133;
              v102[6] = v134;
              v102[7] = v135;
              v102[0] = v128;
              v102[1] = v129;
              v102[2] = v130;
              v102[3] = v131;
              *(void *)&v102[15] = v143;
              *((void *)&v102[15] + 1) = v70;
              v102[16] = v71;
              memcpy(v80, v102, 0x110uLL);
              uint64_t v82 = sub_100004010(&qword_10038EA80);
              sub_10000D2A0(v81, (uint64_t)v80 + *(int *)(v82 + 48), &qword_10038EA68);
              sub_1001FE950((uint64_t)v102);
              sub_10000950C((uint64_t)v63, &qword_10038EA68);
              sub_10000950C(v81, &qword_10038EA68);
              long long v115 = v140;
              long long v116 = v141;
              long long v117 = v142;
              long long v111 = v136;
              long long v112 = v137;
              long long v113 = v138;
              long long v114 = v139;
              long long v107 = v132;
              long long v108 = v133;
              long long v109 = v134;
              long long v110 = v135;
              long long v103 = v128;
              long long v104 = v129;
              long long v105 = v130;
              long long v106 = v131;
              uint64_t v118 = v143;
              uint64_t v119 = v70;
              long long v120 = v71;
              sub_1001FE9E0((uint64_t)&v103);
              uint64_t v83 = sub_100004010(&qword_10038EA88);
              (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v80, 0, 1, v83);
              sub_1001FEA70((uint64_t)v80, (uint64_t)v23);
              goto LABEL_22;
            }
            swift_retain();
            uint64_t v73 = sub_100232DD0();
            swift_bridgeObjectRetain();
            swift_release();
            if (v73) {
              goto LABEL_19;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v79 = sub_100004010(&qword_10038EA78);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v63, 1, 1, v79);
          goto LABEL_21;
        }
        if ((v28 & 0xF00000000000000) != 0)
        {
          uint64_t v29 = *(void *)(v27 + 16);
          goto LABEL_9;
        }
      }
LABEL_17:
      uint64_t v74 = sub_100004010(&qword_10038EA88);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v23, 1, 1, v74);
      uint64_t v75 = v101;
LABEL_22:
      sub_1001FEA70((uint64_t)v23, v75);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v144);
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001FECE8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for GuidanceMessagesModel();
  sub_1001FECE8(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001FDBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v77 = a5;
  uint64_t v75 = type metadata accessor for OpacityTransition();
  uint64_t v72 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v69 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100381CB0);
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v70 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v71 = (char *)&v65 - v12;
  uint64_t v67 = type metadata accessor for Font.Leading();
  uint64_t v13 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_10038EA98);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v76 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v78 = (uint64_t)&v65 - v19;
  if (*(void *)(a1 + 16) < 2uLL)
  {
    uint64_t v23 = sub_100004010(&qword_10038EAA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v78, 1, 1, v23);
  }
  else
  {
    *(void *)&v103[0] = a1;
    uint64_t KeyPath = (void *)swift_getKeyPath();
    sub_1000090FC(a2, (uint64_t)&v104);
    uint64_t v20 = swift_allocObject();
    sub_100009164(&v104, v20 + 16);
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380040);
    sub_100004010(&qword_10038EAB0);
    sub_100009B18(&qword_100381CF8, &qword_100380040);
    sub_1001FEB18();
    uint64_t v21 = v78;
    ForEach<>.init(_:id:content:)();
    uint64_t v22 = sub_100004010(&qword_10038EAA0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
  }
  *(void *)&long long v104 = v79;
  *((void *)&v104 + 1) = a4;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v66 = Text.init<A>(_:)();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  uint64_t KeyPath = a4;
  swift_release();
  uint64_t v28 = v67;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Font.Leading.tight(_:), v67);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  uint64_t v29 = v66;
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v65 = v35;
  swift_release();
  sub_100033364(v29, v25, v27);
  swift_bridgeObjectRelease();
  id v36 = [self secondaryLabelColor];
  Color.init(_:)();
  uint64_t v37 = Text.foregroundColor(_:)();
  uint64_t v67 = v38;
  char v40 = v39;
  uint64_t v42 = v41;
  swift_release();
  v40 &= 1u;
  sub_100033364(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = swift_getKeyPath();
  LOBYTE(v32) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v86 = v40;
  char v84 = 0;
  char v80 = 0;
  uint64_t v46 = v67;
  uint64_t v122 = v37;
  uint64_t v123 = v67;
  char v124 = v40;
  *(_DWORD *)char v125 = *(_DWORD *)v85;
  *(_DWORD *)&v125[3] = *(_DWORD *)&v85[3];
  uint64_t v126 = v42;
  uint64_t v127 = v43;
  uint64_t v128 = 3;
  char v129 = 0;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v83[3];
  *(_DWORD *)long long v130 = *(_DWORD *)v83;
  uint64_t v131 = v44;
  char v132 = 0;
  *(_DWORD *)&v133[3] = *(_DWORD *)&v82[3];
  *(_DWORD *)long long v133 = *(_DWORD *)v82;
  uint64_t v134 = v45;
  uint64_t v135 = 0x3FE0000000000000;
  char v136 = v32;
  *(_DWORD *)&v137[3] = *(_DWORD *)&v81[3];
  *(_DWORD *)long long v137 = *(_DWORD *)v81;
  uint64_t v138 = v47;
  uint64_t v139 = v48;
  uint64_t v140 = v49;
  uint64_t v141 = v50;
  char v142 = 0;
  static Alignment.leading.getter();
  sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v104, 0.0, 1, 0.0, 1);
  sub_100033364(v37, v46, v40);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v100 = v117;
  long long v101 = v118;
  long long v96 = v113;
  long long v97 = v114;
  long long v98 = v115;
  long long v99 = v116;
  long long v92 = v109;
  long long v93 = v110;
  uint64_t v102 = v119;
  long long v94 = v111;
  long long v95 = v112;
  long long v87 = v104;
  long long v88 = v105;
  long long v89 = v106;
  long long v90 = v107;
  long long v91 = v108;
  char v51 = v69;
  OpacityTransition.init()();
  static Animation.easeInOut.getter();
  uint64_t v52 = sub_1001FECE8(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  char v53 = v71;
  uint64_t v54 = v75;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v54);
  uint64_t v56 = v73;
  uint64_t v55 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v53, v74);
  *(void *)&v103[0] = v54;
  *((void *)&v103[0] + 1) = v52;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = AnyTransition.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
  *(void *)&long long v104 = 0xD000000000000010;
  *((void *)&v104 + 1) = 0x80000001002C9980;
  v58._countAndFlagsBits = v79;
  v58._object = KeyPath;
  String.append(_:)(v58);
  long long v59 = v104;
  uint64_t v60 = v78;
  uint64_t v61 = v76;
  sub_10000D2A0(v78, v76, &qword_10038EA98);
  uint64_t v62 = v77;
  sub_10000D2A0(v61, v77, &qword_10038EA98);
  uint64_t v63 = *(int *)(sub_100004010(&qword_10038EAA8) + 48);
  v103[12] = v99;
  v103[13] = v100;
  v103[14] = v101;
  v103[8] = v95;
  v103[9] = v96;
  v103[10] = v97;
  v103[11] = v98;
  v103[4] = v91;
  v103[5] = v92;
  v103[6] = v93;
  v103[7] = v94;
  v103[0] = v87;
  v103[1] = v88;
  v103[2] = v89;
  v103[3] = v90;
  *(void *)&v103[15] = v102;
  *((void *)&v103[15] + 1) = v57;
  v103[16] = v59;
  memcpy((void *)(v62 + v63), v103, 0x110uLL);
  sub_1001FE950((uint64_t)v103);
  sub_10000950C(v60, &qword_10038EA98);
  long long v116 = v99;
  long long v117 = v100;
  long long v118 = v101;
  long long v112 = v95;
  long long v113 = v96;
  long long v114 = v97;
  long long v115 = v98;
  long long v108 = v91;
  long long v109 = v92;
  long long v110 = v93;
  long long v111 = v94;
  long long v104 = v87;
  long long v105 = v88;
  long long v106 = v89;
  long long v107 = v90;
  uint64_t v119 = v102;
  uint64_t v120 = v57;
  long long v121 = v59;
  sub_1001FE9E0((uint64_t)&v104);
  return sub_10000950C(v61, &qword_10038EA98);
}

uint64_t sub_1001FE54C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v29[1] = a2;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  *(void *)&v30[0] = v7;
  *((void *)&v30[0] + 1) = v8;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  v29[0] = v12;
  LOBYTE(v8) = v13 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  LOBYTE(v3) = v17;
  uint64_t v19 = v18;
  swift_release();
  char v20 = v3 & 1;
  sub_100033364(v9, v11, v8);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  LOBYTE(v3) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v61 = v20;
  char v59 = 0;
  char v55 = 0;
  uint64_t v34 = v14;
  uint64_t v35 = v16;
  char v36 = v20;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v60;
  *(_DWORD *)&v37[3] = *(_DWORD *)&v60[3];
  uint64_t v38 = v19;
  uint64_t v39 = KeyPath;
  uint64_t v40 = 3;
  char v41 = 0;
  *(_DWORD *)&v42[3] = *(_DWORD *)&v58[3];
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v58;
  uint64_t v43 = v22;
  char v44 = 0;
  *(_DWORD *)&v45[3] = *(_DWORD *)&v57[3];
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v57;
  uint64_t v46 = v23;
  uint64_t v47 = 0x3FE0000000000000;
  char v48 = v3;
  *(_DWORD *)&v49[3] = *(_DWORD *)&v56[3];
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v56;
  uint64_t v50 = v24;
  uint64_t v51 = v25;
  uint64_t v52 = v26;
  uint64_t v53 = v27;
  char v54 = 0;
  static Alignment.leading.getter();
  sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1);
  sub_100033364(v14, v16, v20);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v62[12] = v30[12];
  v62[13] = v30[13];
  v62[14] = v30[14];
  uint64_t v63 = v31;
  v62[8] = v30[8];
  v62[9] = v30[9];
  v62[10] = v30[10];
  v62[11] = v30[11];
  v62[4] = v30[4];
  v62[5] = v30[5];
  v62[6] = v30[6];
  v62[7] = v30[7];
  v62[0] = v30[0];
  v62[1] = v30[1];
  v62[2] = v30[2];
  void v62[3] = v30[3];
  uint64_t v32 = 0;
  char v33 = 0;
  sub_100004010(&qword_10038EAC8);
  sub_1001FEBC4();
  View.accessibilityHidden(_:)();
  return sub_10018BF94((uint64_t)v62);
}

uint64_t sub_1001FE92C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001FD0A8(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), a1);
}

uint64_t sub_1001FE950(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FE9E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FEA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038EA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FEAD8()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001FEB10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001FE54C(a1, a2);
}

unint64_t sub_1001FEB18()
{
  unint64_t result = qword_10038EAB8;
  if (!qword_10038EAB8)
  {
    sub_1000094C4(&qword_10038EAB0);
    sub_1001FEBC4();
    sub_1001FECE8(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038EAB8);
  }
  return result;
}

unint64_t sub_1001FEBC4()
{
  unint64_t result = qword_10038EAC0;
  if (!qword_10038EAC0)
  {
    sub_1000094C4(&qword_10038EAC8);
    sub_1001FEC6C(&qword_10038EAD0, &qword_10038EAD8, (void (*)(void))sub_10018BD30);
    sub_10005C708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038EAC0);
  }
  return result;
}

uint64_t sub_1001FEC6C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001FECE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001FED34()
{
  unint64_t result = qword_10038EAE0;
  if (!qword_10038EAE0)
  {
    sub_1000094C4(&qword_10038EA70);
    sub_100009B18(&qword_10038EAE8, &qword_10038EA88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038EAE0);
  }
  return result;
}

unint64_t sub_1001FEDCC(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x697261657070612ELL;
      break;
    case 2:
      unint64_t result = 0x657261657070612ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 5:
      unint64_t result = 0x657070617369642ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001FEEB0()
{
  return sub_1001FEDCC(*v0);
}

uint64_t sub_1001FEEB8(void *a1)
{
  _StringGuts.grow(_:)(55);
  v2._countAndFlagsBits = 0x746E657365727028;
  v2._object = (void *)0xEE00203A656C6261;
  String.append(_:)(v2);
  id v3 = a1;
  id v4 = [v3 description];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x3A6567617473202CLL;
  v9._object = (void *)0xE900000000000020;
  String.append(_:)(v9);
  _print_unlocked<A, B>(_:_:)();
  v10._object = (void *)0x80000001002D3CF0;
  v10._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v10);
  sub_100004010((uint64_t *)&unk_10038EBC0);
  v11._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0;
}

uint64_t sub_1001FF034()
{
  return sub_1001FEEB8(*v0);
}

void sub_1001FF040(void *a1, __int16 a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable;
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable);
  *(void *)uint64_t v4 = a1;
  *(_WORD *)(v4 + 8) = a2;
  id v6 = a1;
  if (v5)
  {
    id v7 = v6;
    if (!a1)
    {
      PassthroughSubject.send(_:)();

      return;
    }

    id v6 = v7;
  }
  else if (a1)
  {
    id v8 = v6;
    PassthroughSubject.send(_:)();

    return;
  }
}

void (*sub_1001FF114(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable);
  __int16 v3 = *(_WORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable + 8);
  *(void *)a1 = v2;
  *(_WORD *)(a1 + 8) = v3;
  id v4 = v2;
  return sub_1001FF178;
}

void sub_1001FF178(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  __int16 v3 = *(_WORD *)(a1 + 8);
  if (a2)
  {
    id v4 = v2;
    sub_1001FF040(v2, v3);
  }
  else
  {
    sub_1001FF040(*(void **)a1, v3);
  }
}

char *sub_1001FF1FC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent_bannerTapped;
  sub_100004010(&qword_100387698);
  swift_allocObject();
  id v6 = v2;
  *(void *)&v2[v5] = PassthroughSubject.init()();
  uint64_t v7 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent_bannerDismissedByUser;
  swift_allocObject();
  *(void *)&v6[v7] = PassthroughSubject.init()();
  uint64_t v8 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent_anyBannerPresentedChanged;
  sub_100004010(&qword_100385860);
  swift_allocObject();
  *(void *)&v6[v8] = PassthroughSubject.init()();
  uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent_preferredBannerSizeWillChange;
  sub_100004010(&qword_1003876A0);
  swift_allocObject();
  *(void *)&v6[v9] = PassthroughSubject.init()();
  uint64_t v10 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent_preferredBannerSizeDidChange;
  swift_allocObject();
  *(void *)&v6[v10] = PassthroughSubject.init()();
  Swift::String v11 = &unk_10038E000;
  uint64_t v12 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent__bannerSource;
  *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__bannerSource] = 0;
  *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__contentProducer + 8] = 0;
  swift_unknownObjectWeakInit();
  char v13 = &v6[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
  *(void *)char v13 = 0;
  *((_WORD *)v13 + 4) = 0;
  uint64_t v14 = (uint64_t *)&v6[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId];
  *uint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self bannerSourceForDestination:0 forRequesterIdentifier:v15];

  char v17 = *(void **)&v6[v12];
  *(void *)&v6[v12] = v16;

  v36.receiver = v6;
  v36.super_class = (Class)type metadata accessor for BannerAgent();
  id v18 = [super init];
  uint64_t v19 = qword_10037DD80;
  id v20 = v18;
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10000FD84(v21, (uint64_t)qword_1003A9958);
  id v22 = v20;
  swift_bridgeObjectRetain();
  uint64_t v23 = (char *)v22;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v27 = v23;
    id v28 = [v27 description];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    sub_1001B3178(v29, v31, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1001B3178(a1, a2, &v35);
    Swift::String v11 = (void *)&unk_10038E000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%{public}s] init for '%s'", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = *(void **)&v23[v11[356]];
  if (v32)
  {
    id v33 = v32;
    [v33 setDelegate:v23];
  }
  return v23;
}

id sub_1001FF614()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  __int16 v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    id v6 = (char *)v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId];
    unint64_t v12 = *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId + 8];
    swift_bridgeObjectRetain();
    sub_1001B3178(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit for '%s'", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  char v13 = (objc_class *)type metadata accessor for BannerAgent();
  v16.receiver = v2;
  v16.super_class = v13;
  return [super dealloc];
}

void sub_1001FF954()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v7 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable);
    if (v7)
    {
      if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable + 8) >= 3u)
      {
        id v8 = v7;
        unint64_t v10 = sub_1001FF114((uint64_t)v13);
        if (*(void *)v9) {
          *(unsigned char *)(v9 + 9) = 1;
        }
        v10((uint64_t)v13, 0);
      }
    }
    else
    {
      id v11 = sub_1001FFAF0();
      sub_1001FF040(v11, v12);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1001FFAF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DD98 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    id v53 = (id)swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 136446210;
    uint64_t v52 = sub_1001B3178(0xD00000000000001ALL, 0x80000001002D3D10, (uint64_t *)&v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "_presentBanner for '%{public}s'", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v11 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__bannerSource];
  if (!v11)
  {
    id v33 = v1;
    uint64_t v34 = Logger.logObject.getter();
    uint64_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, (os_log_type_t)v35))
    {
      objc_super v36 = (uint8_t *)swift_slowAlloc();
      id v53 = (id)swift_slowAlloc();
      *(_DWORD *)objc_super v36 = 136446210;
      uint64_t v37 = *(void *)&v33[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId];
      unint64_t v38 = *(void *)&v33[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId + 8];
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1001B3178(v37, v38, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v35, "_presentBanner: _bannerSource for '%{public}s' has expired", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  __int16 v12 = &v1[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__contentProducer];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v39 = v11;
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      id v53 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446210;
      uint64_t v52 = sub_1001B3178(0xD00000000000001ALL, 0x80000001002D3D10, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "contentProducer for '%{public}s' has expired", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v14 = Strong;
  uint64_t v15 = *((void *)v12 + 1);
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId];
  unint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId + 8];
  id v18 = (char *)objc_allocWithZone((Class)type metadata accessor for BannerViewController());
  id v19 = v11;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v20 = sub_100203390(v16, v17, 0xD00000000000001ALL, 0x80000001002D3D10, v14, v15, v1, v18);
  sub_100004010((uint64_t *)&unk_10038EC40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v22;
  sub_10001E6FC(0, (unint64_t *)&qword_100393B80);
  *(NSNumber *)(inited + 48) = NSNumber.init(integerLiteral:)(1);
  sub_100283048(inited);
  id v23 = v20;
  sub_100004010((uint64_t *)&unk_10038EC50);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v53 = 0;
  LODWORD(v18) = [v19 postPresentable:v23 options:1 userInfo:isa error:&v53];

  id v25 = v53;
  if (!v18)
  {
    id v43 = v53;
    uint64_t v44 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      id v53 = (id)swift_slowAlloc();
      id v51 = v19;
      *(_DWORD *)uint64_t v47 = 136446210;
      uint64_t v52 = v44;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v48 = String.init<A>(describing:)();
      uint64_t v52 = sub_1001B3178(v48, v49, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "_presentBanner failed: %{public}s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  id v26 = v23;
  id v27 = v25;
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    id v51 = v19;
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    unint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v30 = 138543362;
    id v53 = v26;
    id v32 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v31 = v20;

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "_presentBanner: presenting '%{public}@'", v30, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return v20;
}

void sub_10020044C(void *a1, int a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (void *)((char *)v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *id v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_58:
    swift_once();
LABEL_14:
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000FD84(v33, (uint64_t)qword_1003A99A0);
    uint64_t v34 = v4;
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      v94[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446210;
      uint64_t v38 = *(void *)&v34[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId];
      unint64_t v39 = *(void *)&v34[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__requesterId + 8];
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1001B3178(v38, v39, (uint64_t *)v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "_revokeBanner: _bannerSource for '%{public}s' has expired", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  char v13 = *(void **)&v4[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__bannerSource];
  if (!v13)
  {
    if (qword_10037DD98 == -1) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }
  uint64_t v14 = &v4[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
  uint64_t v15 = *(void **)&v4[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
  if (v15)
  {
    LODWORD(v90) = a2;
    id v91 = a3;
    __int16 v16 = *((_WORD *)v14 + 4);
    id v17 = v13;
    id v92 = v15;
    id v18 = [v92 requestIdentifier];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    id v22 = [a1 requestIdentifier];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    if (v19 == v23 && v21 == v25)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        if (qword_10037DD98 != -1) {
          swift_once();
        }
        uint64_t v28 = type metadata accessor for Logger();
        sub_10000FD84(v28, (uint64_t)qword_1003A99A0);
        os_log_type_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v29, v30))
        {
          unint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v31 = 0;
          id v32 = "_revokeBanner for non-active presentable, ignoring";
LABEL_34:
          _os_log_impl((void *)&_mh_execute_header, v29, v30, v32, v31, 2u);
          swift_slowDealloc();

LABEL_56:
          return;
        }
        goto LABEL_35;
      }
    }
    uint64_t v47 = sub_1001FF114((uint64_t)v94);
    if (*(void *)v46) {
      *(unsigned char *)(v46 + 9) = 2;
    }
    v47((uint64_t)v94, 0);
    if (v16 < 3u)
    {
      if (qword_10037DD98 != -1) {
        swift_once();
      }
      uint64_t v48 = type metadata accessor for Logger();
      sub_10000FD84(v48, (uint64_t)qword_1003A99A0);
      id v49 = a1;
      uint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      int v52 = v51;
      if (os_log_type_enabled(v50, v51))
      {
        int v88 = v52;
        id v53 = (uint8_t *)swift_slowAlloc();
        long long v87 = (void *)swift_slowAlloc();
        v94[0] = v87;
        *(_DWORD *)id v53 = 136446210;
        v85[1] = v53 + 4;
        char v86 = v53;
        id v54 = v49;
        id v55 = v49;
        id v56 = [v54 description];
        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v89 = v17;
        unint64_t v59 = v58;

        id v49 = v55;
        uint64_t v93 = sub_1001B3178(v57, v59, (uint64_t *)v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v17 = v89;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v88, "_revokeBanner: revoking %{public}s", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v61 = v91;
      char v62 = (char)v90;
      id v63 = [v49 requestIdentifier];
      v94[0] = 0;
      id v64 = [v17 revokePresentableWithRequestIdentifier:v63 reason:v61 animated:v62 & 1 userInfo:0 error:v94];

      if (v64)
      {
        id v65 = v94[0];

        if (*(void *)v14 && !v14[8])
        {
          if (qword_10037DD08 != -1) {
            swift_once();
          }
          sub_100200F9C(v49, (void *)qword_1003A9918);
        }
        else
        {
          uint64_t v67 = sub_1001FF114((uint64_t)v94);
          if (*(void *)v66) {
            *(unsigned char *)(v66 + 8) = 3;
          }
          v67((uint64_t)v94, 0);
        }

        goto LABEL_56;
      }
      id v89 = v17;
      id v68 = v94[0];
      uint64_t v69 = _convertNSErrorToError(_:)();

      swift_willThrow();
      id v70 = v49;
      swift_errorRetain();
      id v71 = v70;
      swift_errorRetain();
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v73 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = swift_slowAlloc();
        long long v90 = (void *)swift_slowAlloc();
        v94[0] = v90;
        *(_DWORD *)uint64_t v74 = 136446466;
        id v75 = v71;
        id v76 = [v75 description];
        uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v91 = v71;
        uint64_t v78 = v77;
        unint64_t v80 = v79;

        uint64_t v93 = sub_1001B3178(v78, v80, (uint64_t *)v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2082;
        uint64_t v93 = v69;
        swift_errorRetain();
        sub_100004010(&qword_10037FFB0);
        uint64_t v81 = String.init<A>(describing:)();
        uint64_t v93 = sub_1001B3178(v81, v82, (uint64_t *)v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v71 = v91;
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "_revokeBanner(%{public}s) failed: %{public}s", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }

      uint64_t v83 = (void *)_convertErrorToNSError(_:)();
      id v84 = [v83 code];

      if (v84 == (id)3)
      {
        if (qword_10037DD00 != -1) {
          swift_once();
        }
        sub_100200F9C(v71, (void *)qword_1003A9910);
      }

      swift_errorRelease();
LABEL_51:

      return;
    }
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    sub_10000FD84(v60, (uint64_t)qword_1003A99A0);
    os_log_type_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v31 = 0;
      id v32 = "_revokeBanner for presentable for which revoke is already in progress, ignoring";
      goto LABEL_34;
    }
LABEL_35:

    goto LABEL_51;
  }
  uint64_t v40 = qword_10037DD98;
  id v41 = v13;
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  sub_10000FD84(v42, (uint64_t)qword_1003A99A0);
  id v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "_revokeBanner when no presentable is active, ignoring", v45, 2u);
    swift_slowDealloc();
  }
}

void sub_100200F9C(void *a1, void *a2)
{
  uint64_t v69 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  id v68 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v67 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v11 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_10000FD84(v12, (uint64_t)qword_1003A99A0);
  id v14 = a1;
  id v15 = a2;
  id v16 = v2;
  id v17 = v14;
  id v18 = v15;
  uint64_t v19 = (char *)v16;
  uint64_t v71 = v13;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  int v70 = v21;
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = &selRef_initWithExplanation_target_attributes_;
  uint64_t v64 = v7;
  uint64_t v65 = v5;
  id v72 = v17;
  if (v22)
  {
    uint64_t v24 = v17;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    uint64_t v74 = v62;
    *(_DWORD *)uint64_t v25 = 136446722;
    id v63 = v19;
    id v26 = [v24 requestIdentifier:v62];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    long long aBlock = (void *)sub_1001B3178(v27, v29, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    long long aBlock = (void *)sub_1001B3178(v30, v31, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v19 = v63;
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2082;
    uint64_t v23 = &selRef_initWithExplanation_target_attributes_;
    __int16 v32 = *(_WORD *)&v19[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable + 8];
    long long aBlock = *(void **)&v19[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
    LOWORD(v76) = v32;
    uint64_t v33 = aBlock;
    sub_100004010((uint64_t *)&unk_10038EBD0);
    uint64_t v34 = String.init<A>(describing:)();
    long long aBlock = (void *)sub_1001B3178(v34, v35, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v70, "didDisappear: for %{public}s, for reason '%{public}s', active presentable == %{public}s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *id v11 = static OS_dispatch_queue.main.getter();
  uint64_t v36 = v73;
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v73);
  char v37 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v36);
  if ((v37 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v38 = (id *)&v19[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
  if (*v38)
  {
    id v39 = *v38;
    id v40 = [v39 v23[131]];

    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v43 = 0;
  }
  id v44 = [v72 v23[131]];
  uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v46;

  if (v43)
  {
    if (v41 == v45 && v43 == v47)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      if (*v38 && *((unsigned __int8 *)v38 + 9) << 8 != 512)
      {
        id v53 = sub_1001FF114((uint64_t)&aBlock);
        if (*(void *)v52) {
          *(unsigned char *)(v52 + 8) = 5;
        }
        v53((uint64_t)&aBlock, 0);
        uint64_t v55 = v64;
        uint64_t v54 = v65;
        id v56 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v57 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v79 = sub_100203370;
        uint64_t v80 = v57;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v76 = 1107296256;
        uint64_t v77 = sub_100207A1C;
        uint64_t v78 = &unk_10035E878;
        unint64_t v58 = _Block_copy(&aBlock);
        swift_release();
        unint64_t v59 = v66;
        static DispatchQoS.unspecified.getter();
        long long aBlock = _swiftEmptyArrayStorage;
        sub_10007C914();
        sub_100004010((uint64_t *)&unk_10037FF80);
        sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
        uint64_t v60 = v68;
        uint64_t v61 = v69;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v58);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v60, v61);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v55);
      }
      else
      {
        sub_1001FF040(0, 0);
      }
      return;
    }
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v49, v50))
  {
    os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Received didDisappear for non-active presentable", v51, 2u);
    swift_slowDealloc();
  }
}

uint64_t type metadata accessor for BannerAgent()
{
  return self;
}

void sub_1002017FC(void *a1)
{
  sub_10020182C(a1, "willAppear: for %{public}s, active presentable == %{public}s", 1, "Received willAppear for non-active presentable");
}

void sub_100201814(void *a1)
{
  sub_10020182C(a1, "didAppear: for %{public}s, active presentable == %{public}s", 2, "Received didAppear for non-active presentable");
}

void sub_10020182C(void *a1, const char *a2, int a3, const char *a4)
{
  uint64_t v55 = a4;
  int v56 = a3;
  uint64_t v57 = a2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = sub_10000FD84(v10, (uint64_t)qword_1003A99A0);
  id v12 = a1;
  id v13 = v4;
  id v14 = v12;
  id v15 = (char *)v13;
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v54 = v11;
    uint64_t v20 = v19;
    uint64_t v51 = swift_slowAlloc();
    uint64_t v58 = v51;
    *(_DWORD *)uint64_t v20 = 136446466;
    int v50 = v18;
    id v21 = [v14 requestIdentifier];
    uint64_t v53 = v6;
    id v22 = v21;
    uint64_t v23 = v14;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v7;
    uint64_t v25 = v15;
    unint64_t v27 = v26;

    id v59 = (id)sub_1001B3178(v24, v27, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    __int16 v28 = *(_WORD *)&v25[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable + 8];
    id v59 = *(id *)&v25[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
    __int16 v60 = v28;
    id v29 = v59;
    sub_100004010((uint64_t *)&unk_10038EBD0);
    uint64_t v30 = String.init<A>(describing:)();
    id v59 = (id)sub_1001B3178(v30, v31, &v58);
    id v14 = v23;
    id v15 = v25;
    uint64_t v7 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v6 = v53;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v50, v57, (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v32 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v32 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v33 = *(void **)&v15[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
  if (v33)
  {
    id v34 = v33;
    id v35 = [v34 requestIdentifier];

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = 0;
  }
  id v39 = [v14 requestIdentifier];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  if (v38)
  {
    if (v36 == v40 && v38 == v42)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t v45 = sub_1001FF114((uint64_t)&v59);
      if (*(void *)v44) {
        *(unsigned char *)(v44 + 8) = v56;
      }
      v45((uint64_t)&v59, 0);
      return;
    }
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    char v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, v55, v48, 2u);
    swift_slowDealloc();
  }
}

void sub_100201D48(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (SEL *)((char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000FD84(v9, (uint64_t)qword_1003A99A0);
  id v11 = a1;
  id v12 = a2;
  id v13 = v2;
  id v14 = v11;
  id v15 = v12;
  id v16 = (char *)v13;
  os_log_type_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v68 = v18;
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = &selRef_initWithExplanation_target_attributes_;
  uint64_t v69 = v10;
  id v70 = v14;
  if (v19)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    uint64_t v71 = v66;
    *(_DWORD *)uint64_t v21 = 136446722;
    uint64_t v67 = v16;
    id v22 = [v14 requestIdentifier];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_t v65 = v17;
    uint64_t v24 = v23;
    uint64_t v25 = v6;
    uint64_t v26 = v5;
    id v27 = v15;
    unint64_t v29 = v28;

    id v72 = (id)sub_1001B3178(v24, v29, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v30 = v27;
    uint64_t v5 = v26;
    uint64_t v6 = v25;
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v72 = (id)sub_1001B3178(v31, v32, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    id v16 = v67;
    __int16 v33 = *(_WORD *)&v67[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable + 8];
    id v72 = *(id *)&v67[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
    LOWORD(v73) = v33;
    id v34 = v72;
    sub_100004010((uint64_t *)&unk_10038EBD0);
    uint64_t v35 = String.init<A>(describing:)();
    id v14 = (id)v36;
    id v72 = (id)sub_1001B3178(v35, v36, &v71);
    uint64_t v20 = &selRef_initWithExplanation_target_attributes_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v37 = v65;
    _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v68, "willDisappear: for %{public}s, for reason '%{public}s', active presentable == %{public}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v8 = (SEL)static OS_dispatch_queue.main.getter();
  (*(void (**)(SEL *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v38 = _dispatchPreconditionTest(_:)();
  (*(void (**)(SEL *, uint64_t))(v6 + 8))(v8, v5);
  if (v38)
  {
    id v39 = *(void **)&v16[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
    if (v39)
    {
      id v40 = v39;
      id v41 = [v40 v20[131]];

      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v44 = 0;
    }
    id v14 = v70;
    id v45 = [v70 v20[131]];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v47;

    if (v44)
    {
      if (v42 == v46 && v44 == v48)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v49)
      {
LABEL_16:
        uint64_t v51 = sub_1001FF114((uint64_t)&v72);
        if (*(void *)v50) {
          *(unsigned char *)(v50 + 8) = 4;
        }
        v51((uint64_t)&v72, 0);
        uint64_t v8 = (SEL *)v20;
        if (qword_10037DD18 == -1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    int v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Received willDisappear for non-active presentable", v58, 2u);
      swift_slowDealloc();
    }

    return;
  }
  __break(1u);
LABEL_29:
  swift_once();
LABEL_19:
  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v53;
  if (v52 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v54 == v55)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0) {
      return;
    }
  }
  id v60 = [v14 v8[131]];
  uint64_t v61 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v62;

  id v72 = v61;
  uint64_t v73 = v63;
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
}

void sub_1002023B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10020240C();
  }
}

void sub_10020240C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "executePendingStateUpdate", v9, 2u);
    swift_slowDealloc();
  }

  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v10)
  {
    id v11 = &v1[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
    if (*(void *)&v1[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable]
      && *((_WORD *)v11 + 4) == 5)
    {
      if ((*((_WORD *)v11 + 4) & 0xFF00) == 0x200)
      {
        id v12 = v1;
        id v13 = Logger.logObject.getter();
        os_log_type_t v14 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v13, v14))
        {
          id v15 = (uint8_t *)swift_slowAlloc();
          uint64_t v16 = swift_slowAlloc();
          *(_DWORD *)id v15 = 136446210;
          uint64_t v35 = v16;
          __int16 v17 = *((_WORD *)v11 + 4);
          id v33 = *(id *)v11;
          __int16 v34 = v17;
          id v18 = v33;
          sub_100004010((uint64_t *)&unk_10038EBD0);
          uint64_t v19 = String.init<A>(describing:)();
          id v33 = (id)sub_1001B3178(v19, v20, &v35);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "executePendingStateUpdate request expired, current presentable == %{public}s", v15, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v30 = 0;
        __int16 v31 = 0;
      }
      else
      {
        id v30 = sub_1001FFAF0();
      }
      sub_1001FF040(v30, v31);
    }
    else
    {
      uint64_t v21 = v1;
      id v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136446210;
        uint64_t v35 = v25;
        __int16 v26 = *((_WORD *)v11 + 4);
        id v33 = *(id *)v11;
        __int16 v34 = v26;
        id v27 = v33;
        sub_100004010((uint64_t *)&unk_10038EBD0);
        uint64_t v28 = String.init<A>(describing:)();
        id v33 = (id)sub_1001B3178(v28, v29, &v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "executePendingStateUpdate request overridden, current presentable == %{public}s", v24, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1002028CC(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000FD84(v9, (uint64_t)qword_1003A99A0);
  id v11 = a1;
  id v12 = a2;
  id v13 = v2;
  id v14 = v11;
  id v15 = v12;
  uint64_t v16 = (char *)v13;
  __int16 v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v54 = v18;
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v20 = &selRef_initWithExplanation_target_attributes_;
  uint64_t v55 = v10;
  if (v19)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v58 = v51;
    *(_DWORD *)uint64_t v21 = 136446722;
    id v22 = [v14 requestIdentifier:v51];
    uint64_t v53 = v16;
    os_log_type_t v23 = v14;
    id v24 = v22;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v5;
    uint64_t v26 = v25;
    unint64_t v28 = v27;

    id v56 = (id)sub_1001B3178(v26, v28, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v56 = (id)sub_1001B3178(v29, v30, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    id v14 = v23;
    uint64_t v16 = v53;
    __int16 v31 = *(_WORD *)&v53[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable + 8];
    id v56 = *(id *)&v53[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
    __int16 v57 = v31;
    id v32 = v56;
    sub_100004010((uint64_t *)&unk_10038EBD0);
    uint64_t v33 = String.init<A>(describing:)();
    id v56 = (id)sub_1001B3178(v33, v34, &v58);
    uint64_t v5 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v54, "willNotAppear: for %{public}s, for reason '%{public}s', active presentable == %{public}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v20 = &selRef_initWithExplanation_target_attributes_;
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *os_log_type_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v35 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v35 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v36 = *(void **)&v16[OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable];
  if (v36)
  {
    id v37 = v36;
    id v38 = [v37 v20[131]];

    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  id v42 = [v14 v20[131]];
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v44;

  if (v41)
  {
    if (v39 == v43 && v41 == v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v46)
    {
LABEL_16:
      if (qword_10037DD18 == -1)
      {
LABEL_17:
        uint64_t v47 = (void *)qword_1003A9928;
        sub_100201D48(v14, (void *)qword_1003A9928);
        sub_100200F9C(v14, v47);
        return;
      }
LABEL_22:
      swift_once();
      goto LABEL_17;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Received willNotAppear for non-active presentable", v50, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100202E58(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
  id v7 = a1;
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    unint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = v3;
    *(_DWORD *)uint64_t v10 = 138543362;
    uint64_t v23 = (uint64_t)v7;
    id v11 = v7;
    uint64_t v22 = v2;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v20 = v7;

    uint64_t v2 = v22;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "handleTap: %{public}@", v10, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    uint64_t v3 = v21;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v13)
  {
    id v15 = [v7 requestIdentifier];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    uint64_t v23 = v16;
    uint64_t v24 = v18;
    PassthroughSubject.send(_:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BannerAgent.ActivePresentable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

void destroy for BannerAgent.ActivePresentable(id *a1)
{
}

uint64_t assignWithCopy for BannerAgent.ActivePresentable(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for BannerAgent.ActivePresentable(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for BannerAgent.ActivePresentable(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAgent.ActivePresentable(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAgent.ActivePresentable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAgent.ActivePresentable()
{
  return &type metadata for BannerAgent.ActivePresentable;
}

uint64_t sub_100203338()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100203370()
{
}

uint64_t sub_100203378(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100203388()
{
  return swift_release();
}

id sub_100203390(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8)
{
  uint64_t v57 = a5;
  uint64_t v58 = a1;
  uint64_t v59 = a3;
  uint64_t v13 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v13 - 8);
  uint64_t v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v56 = v15;
  __chkstk_darwin(v15);
  int v54 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &a8[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_contentProducer];
  *(void *)&a8[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_contentProducer + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v18 = &a8[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_delegate];
  *(void *)&a8[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v19 = OBJC_IVAR____TtC8SOSBuddy20BannerViewController_tapGesture;
  id v20 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v21 = a8;
  *(void *)&a8[v19] = [v20 init];
  swift_unknownObjectWeakInit();
  *(void *)&v21[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v22 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v22 = _swiftEmptySetSingleton;
  }
  uint64_t v24 = v57;
  uint64_t v23 = v58;
  *(void *)&v21[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_subscriptions] = v22;
  uint64_t v25 = (uint64_t *)&v21[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_requesterId];
  *uint64_t v25 = v23;
  v25[1] = a2;
  uint64_t v26 = &v21[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_requestId];
  *(void *)uint64_t v26 = v59;
  *((void *)v26 + 1) = a4;
  *((void *)v17 + 1) = a6;
  swift_unknownObjectWeakAssign();
  *((void *)v18 + 1) = &off_10035E7F8;
  swift_unknownObjectWeakAssign();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  unint64_t v27 = (objc_class *)type metadata accessor for BannerViewController();
  v62.receiver = v21;
  v62.super_class = v27;
  id v28 = [super initWithNibName:0 bundle:0];
  uint64_t v29 = qword_10037DD98;
  id v30 = v28;
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000FD84(v31, (uint64_t)qword_1003A99A0);
  id v32 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = v32;
  unint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v60[0] = v51;
    *(_DWORD *)uint64_t v36 = 136446722;
    uint64_t v50 = v36 + 4;
    id v37 = v33;
    uint64_t v52 = a7;
    id v38 = v37;
    id v39 = [v37 description];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v42 = v41;

    id v61 = (id)sub_1001B3178(v40, v42, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a7 = v52;
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    swift_bridgeObjectRetain();
    id v61 = (id)sub_1001B3178(v58, a2, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 22) = 2080;
    uint64_t v24 = v57;
    swift_bridgeObjectRetain();
    id v61 = (id)sub_1001B3178(v59, a4, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%{public}s] init for '%s' and %s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  [v33 setPreferredContentSize:*(double *)(*(void *)(v24 + 40) + 32), *(double *)(*(void *)(v24 + 40) + 40)];
  v60[0] = *(void *)(v24 + 328);
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  swift_retain();
  id v61 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v43 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v44 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v53, 1, 1, v43);
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  sub_100028428();
  uint64_t v45 = v54;
  Publisher.receive<A>(on:options:)();
  sub_100028480(v44);

  swift_release();
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_100203B9C;
  *(void *)(v47 + 24) = v46;
  sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  uint64_t v48 = v56;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v45, v48);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  swift_unknownObjectRelease();
  return v33;
}

void sub_100203AA0()
{
  uint64_t v1 = v0;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A99A0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "bannerSourceDidInvalidate", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__bannerSource);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__bannerSource) = 0;
}

void sub_100203B9C()
{
}

uint64_t sub_100203BA4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for BannerAgent.Stage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100203CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAgent.Stage()
{
  return &type metadata for BannerAgent.Stage;
}

unint64_t sub_100203CE4()
{
  unint64_t result = qword_10038EC90;
  if (!qword_10038EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038EC90);
  }
  return result;
}

id sub_100203D40()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy27AccessibilitySettingsSource_contentSizeCategoryDidChange;
  sub_100004010(&qword_1003831B8);
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy27AccessibilitySettingsSource_observers] = _swiftEmptyArrayStorage;

  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for AccessibilitySettingsSource();
  [super init];
  uint64_t v4 = qword_10037DD80;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  id v7 = v5;
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    id v11 = v7;
    id v12 = [v11 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1001B3178(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "init: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v7;
}

id sub_100203FB8()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = (objc_class *)type metadata accessor for AccessibilitySettingsSource();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for AccessibilitySettingsSource()
{
  return self;
}

uint64_t sub_100204244()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DE38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B80);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "AccessibilitySettingsSource::start", v10, 2u);
    swift_slowDealloc();
  }

  id v11 = [self defaultCenter];
  id v12 = [self mainQueue];
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100204C08;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10025639C;
  aBlock[3] = &unk_10035E9A8;
  objc_super v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = [v11 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:v12 usingBlock:v14];
  _Block_release(v14);

  uint64_t v16 = (void *)(v1 + OBJC_IVAR____TtC8SOSBuddy27AccessibilitySettingsSource_observers);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return 1;
}

uint64_t sub_10020459C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 16;
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9B80);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v21[0] = v8;
    id v12 = (uint8_t *)swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)id v12 = 136446210;
    sub_100204C28();
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    long long v21[2] = sub_1001B3178(v13, v14, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "AccessibilitySettingsSource::UIContentSizeCategory changed to %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (void *)result;
    swift_retain();

    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      objc_super v18 = (void *)Strong;
      id v19 = [self currentTraitCollection];
      id v20 = (NSString *)[v19 preferredContentSizeCategory];
    }
    else
    {
      id v20 = UIContentSizeCategoryUnspecified;
    }
    v21[1] = v20;
    PassthroughSubject.send(_:)();

    return swift_release();
  }
  return result;
}

uint64_t sub_1002048E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DE38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B80);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "AccessibilitySettingsSource::stop", v10, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8SOSBuddy27AccessibilitySettingsSource_observers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_7;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    *os_log_type_t v11 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_16;
  }
LABEL_7:
  uint64_t result = self;
  if (v13 >= 1)
  {
    id v15 = (void *)result;
    uint64_t v16 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v17 = *(void *)(v12 + 8 * v16 + 32);
        swift_unknownObjectRetain();
      }
      ++v16;
      id v18 = [v15 defaultCenter];
      [v18 removeObserver:v17];
      swift_unknownObjectRelease();
    }
    while (v13 != v16);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100204BD0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100204C08(uint64_t a1)
{
  return sub_10020459C(a1, v1);
}

uint64_t sub_100204C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100204C20()
{
  return swift_release();
}

unint64_t sub_100204C28()
{
  unint64_t result = qword_10038ECD8;
  if (!qword_10038ECD8)
  {
    type metadata accessor for Notification();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038ECD8);
  }
  return result;
}

float static ConnectionAssistantCone.coneRadius(angle:height:)(float a1, float a2)
{
  return tanf(a1 * 0.5) * a2;
}

double ConnectionAssistantCone.init(baseOffset:height:tilt:towards:radius:color:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>, float32x4_t a3@<Q0>, float a4@<S1>, int32x4_t a5@<Q2>, float a6@<S3>, float a7@<S4>)
{
  sub_100205694(a1, (uint64_t)v13, a3, a4, a5, a6, a7);

  long long v9 = v17;
  *(_OWORD *)(a2 + 64) = v16;
  *(_OWORD *)(a2 + 80) = v9;
  *(_OWORD *)(a2 + 96) = v18;
  *(unsigned char *)(a2 + 112) = v19;
  long long v10 = v13[1];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + 16) = v10;
  double result = *(double *)&v14;
  long long v12 = v15;
  *(_OWORD *)(a2 + 32) = v14;
  *(_OWORD *)(a2 + 48) = v12;
  return result;
}

float ConnectionAssistantCone.Pulse.init(progress:color:)(void *a1, float a2)
{
  float v3 = sub_100205864(a1, a2);

  return v3;
}

double ConnectionAssistantCone.init(baseOffset:topOffset:radius:color:)@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>, float a4@<S2>, __n128 a5@<Q3>)
{
  *(__n128 *)a1 = a2;
  *(__n128 *)(a1 + 16) = a3;
  *(float *)(a1 + 32) = a4;
  *(__n128 *)(a1 + 48) = a5;
  *(_DWORD *)(a1 + 64) = 1065353216;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(unsigned char *)(a1 + 112) = 1;
  return result;
}

void ConnectionAssistantCone.project(from:camera:)(int32x4_t *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  float32x2_t v6 = vadd_f32((float32x2_t)a3.n128_u64[0], *(float32x2_t *)v3);
  float v7 = a3.n128_f32[2] + *(float *)(v3 + 8);
  float32x4_t v8 = *(float32x4_t *)(v3 + 16);
  __n128 v9 = (__n128)vmulq_f32(v8, v8);
  v9.n128_u32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v9, 2), vadd_f32((float32x2_t)v9.n128_u64[0], (float32x2_t)vdup_lane_s32((int32x2_t)v9.n128_u64[0], 1))).u32[0];
  float32x2_t v10 = vrsqrte_f32((float32x2_t)v9.n128_u32[0]);
  float32x2_t v11 = vmul_f32(v10, vrsqrts_f32((float32x2_t)v9.n128_u32[0], vmul_f32(v10, v10)));
  __n128 v31 = (__n128)vmulq_n_f32(v8, vmul_f32(v11, vrsqrts_f32((float32x2_t)v9.n128_u32[0], vmul_f32(v11, v11))).f32[0]);
  float32x2_t v32 = v6;
  v9.n128_u64[0] = (unint64_t)vadd_f32(v6, *(float32x2_t *)v8.f32);
  float v29 = v7;
  v9.n128_f32[2] = v7 + v8.f32[2];
  v9.n128_u32[3] = 0;
  sub_10028A288(a1, v34, v9, v31, *(float *)(v3 + 32));
  sub_10000D544((uint64_t)v34, (uint64_t)&v38, &qword_100387318);
  char v12 = v41;
  if (v41)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    unint64_t v18 = 0;
    long long v19 = 0uLL;
    long long v20 = 0uLL;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
  }
  else
  {
    *(float32x2_t *)v23.f32 = v32;
    v23.i64[1] = LODWORD(v29);
    __n128 v33 = (__n128)v23;
    long long v28 = v39;
    long long v30 = v38;
    long long v42 = v38;
    long long v43 = v39;
    uint64_t v13 = v40;
    unsigned int v44 = v40;
    uint64_t v14 = sub_1002050D0(a1->i64, v23);
    uint64_t v15 = v24;
    uint64_t v16 = v25;
    uint64_t v17 = v26 & 1;
    sub_100205190((float32x2_t *)v3, v3, a1, (uint64_t)v35, v33, v31);
    long long v20 = v28;
    long long v19 = v30;
    long long v21 = v35[0];
    long long v22 = v35[1];
    unint64_t v27 = &_mh_execute_header;
    if (!v37) {
      unint64_t v27 = 0;
    }
    unint64_t v18 = (unint64_t)v27 | v36;
  }
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v20;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = v17;
  *(_OWORD *)(a2 + 72) = v21;
  *(_OWORD *)(a2 + 88) = v22;
  *(unsigned char *)(a2 + 108) = BYTE4(v18);
  *(_DWORD *)(a2 + 104) = v18;
  *(unsigned char *)(a2 + 109) = v12;
}

double ConnectionAssistantCone.Projection.boundingBox.getter()
{
  long long v1 = v0[1];
  long long v9 = *v0;
  long long v10 = v1;
  int v11 = *((_DWORD *)v0 + 8);
  float32x2_t v2 = ConnectionAssistantRendererProjection.Ellipse.boundingBox.getter();
  sub_10000D544((uint64_t)v0 + 40, (uint64_t)v8, &qword_10038ECE0);
  sub_10000D544((uint64_t)v8, (uint64_t)v15, &qword_10038ECE0);
  if ((v16 & 1) == 0)
  {
    v3.i64[0] = v15[0];
    v4.i64[0] = v15[1];
    v5.i64[0] = v15[2];
    float32x2_t v2 = vminnm_f32(v2, COERCE_FLOAT32X2_T(ConnectionAssistantRendererProjection.Triangle.boundingBox.getter(v3, v4, v5)));
  }
  sub_10000D544((uint64_t)v0 + 72, (uint64_t)v7, &qword_100387318);
  sub_10000D544((uint64_t)v7, (uint64_t)v17, &qword_100387318);
  if ((v19 & 1) == 0)
  {
    long long v12 = v17[0];
    long long v13 = v17[1];
    int v14 = v18;
    float32x2_t v2 = vminnm_f32(v2, ConnectionAssistantRendererProjection.Ellipse.boundingBox.getter());
  }
  return *(double *)&v2;
}

BOOL sub_100205038(__n128 *a1, __n128 *a2)
{
  return _s8SOSBuddy23ConnectionAssistantConeV5PulseV23__derived_struct_equalsySbAE_AEtFZ_0(a1->n128_f32[0], a1[1], a2->n128_f32[0], a2[1]);
}

__n128 ConnectionAssistantCone.pulse.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 112);
  __n128 result = *(__n128 *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 96);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t ConnectionAssistantCone.pulse.setter(uint64_t a1)
{
  return sub_10000D544(a1, v1 + 80, &qword_10038EA28);
}

__n128 ConnectionAssistantCone.Projection.ellipse.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  unint64_t v3 = v1[1].n128_u64[0];
  unint64_t v4 = v1[1].n128_u64[1];
  unsigned __int32 v5 = v1[2].n128_u32[0];
  *a1 = *v1;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = v4;
  a1[2].n128_u32[0] = v5;
  return result;
}

uint64_t ConnectionAssistantCone.Projection.triangle.getter()
{
  return *(void *)(v0 + 40);
}

__n128 ConnectionAssistantCone.Projection.pulse.getter@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 104);
  char v3 = *(unsigned char *)(v1 + 108);
  __n128 result = *(__n128 *)(v1 + 72);
  long long v5 = *(_OWORD *)(v1 + 88);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 36) = v3;
  return result;
}

uint64_t sub_1002050D0(uint64_t *a1, float32x4_t a2)
{
  unint64_t v3 = ConnectionAssistantCamera.projectNormalized(point:)(a2);
  if (v4) {
    return 0;
  }
  v5.i32[0] = v3;
  uint64_t v6 = a1[1];
  if (!*a1 || v6 == 0)
  {
    float v9 = 1.0;
  }
  else
  {
    float v8 = (float)*a1 / (float)v6;
    v5.f32[0] = fmaxf(v8, 1.0) * *(float *)&v3;
    float v9 = fminf(v8, 1.0);
  }
  v5.f32[1] = *((float *)&v3 + 1) / v9;
  float32x2_t v12 = v5;
  ConnectionAssistantRendererProjection.Ellipse.tangents(from:)(v5);
  if (v10) {
    return 0;
  }
  else {
    return (uint64_t)v12;
  }
}

void sub_100205190(float32x2_t *a1@<X0>, uint64_t a2@<X1>, int32x4_t *a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>)
{
  sub_10000D544((uint64_t)&a1[10], (uint64_t)v20, &qword_10038EA28);
  sub_10000D544((uint64_t)v20, (uint64_t)v21, &qword_10038EA28);
  if (v22)
  {
    int v10 = 0;
    long long v11 = 0uLL;
    char v12 = 1;
    long long v13 = 0uLL;
  }
  else
  {
    v14.n128_u64[0] = (unint64_t)vadd_f32((float32x2_t)a5.n128_u64[0], vmul_n_f32(a1[2], v21[0]));
    v14.n128_f32[2] = a5.n128_f32[2] + (float)(v21[0] * a1[3].f32[0]);
    v14.n128_u32[3] = 0;
    sub_10028A288(a3, (float32x2_t *)v17, v14, a6, v21[0] * *(float *)(a2 + 32));
    long long v11 = v17[0];
    long long v13 = v17[1];
    int v10 = v18;
    char v12 = v19;
  }
  *(_OWORD *)a4 = v11;
  *(_OWORD *)(a4 + 16) = v13;
  *(_DWORD *)(a4 + 32) = v10;
  *(unsigned char *)(a4 + 36) = v12;
}

BOOL sub_10020527C(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  char v13 = *(unsigned char *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  long long v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  char v15 = *((unsigned char *)a2 + 112);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s8SOSBuddy23ConnectionAssistantConeV23__derived_struct_equalsySbAC_ACtFZ_0((float *)v12, (float *)v14);
}

BOOL _s8SOSBuddy23ConnectionAssistantConeV5PulseV23__derived_struct_equalsySbAE_AEtFZ_0(float a1, __n128 a2, float a3, __n128 a4)
{
  if (a1 != a3) {
    return 0;
  }
  uint64_t v4 = 0;
  while (1)
  {
    __n128 v9 = a2;
    float v6 = *(float *)((unint64_t)&v9 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
    __n128 v10 = a4;
    float v7 = *(float *)((unint64_t)&v10 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
    BOOL v5 = v6 == v7;
    if (v4 == 3) {
      break;
    }
    while (1)
    {
      ++v4;
      if (v5) {
        break;
      }
      if (v4 == 3) {
        return 0;
      }
      BOOL v5 = 0;
    }
  }
  return v6 == v7;
}

BOOL _s8SOSBuddy23ConnectionAssistantConeV23__derived_struct_equalsySbAC_ACtFZ_0(float *a1, float *a2)
{
  uint64_t v2 = 0;
  long long v3 = *(_OWORD *)a1;
  long long v4 = *(_OWORD *)a2;
  while (1)
  {
    long long v34 = v3;
    float v7 = *(float *)((unint64_t)&v34 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    long long v35 = v4;
    float v8 = *(float *)((unint64_t)&v35 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    BOOL v5 = v7 == v8;
    if (v2 == 2) {
      break;
    }
    while (1)
    {
      ++v2;
      if (v5) {
        break;
      }
      BOOL v5 = 0;
      uint64_t v6 = 0;
      if (v2 == 2) {
        return v6;
      }
    }
  }
  if (v7 != v8) {
    return 0;
  }
  uint64_t v9 = 0;
  long long v10 = *((_OWORD *)a1 + 1);
  long long v11 = *((_OWORD *)a2 + 1);
  while (1)
  {
    long long v32 = v10;
    float v13 = *(float *)((unint64_t)&v32 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    long long v33 = v11;
    float v14 = *(float *)((unint64_t)&v33 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    BOOL v12 = v13 == v14;
    if (v9 == 2) {
      break;
    }
    while (1)
    {
      ++v9;
      if (v12) {
        break;
      }
      BOOL v12 = 0;
      uint64_t v6 = 0;
      if (v9 == 2) {
        return v6;
      }
    }
  }
  if (v13 != v14 || a1[8] != a2[8]) {
    return 0;
  }
  uint64_t v15 = 0;
  long long v16 = *((_OWORD *)a1 + 3);
  long long v17 = *((_OWORD *)a2 + 3);
  while (1)
  {
    long long v30 = v16;
    float v19 = *(float *)((unint64_t)&v30 & 0xFFFFFFFFFFFFFFF3 | (4 * (v15 & 3)));
    long long v31 = v17;
    float v20 = *(float *)((unint64_t)&v31 & 0xFFFFFFFFFFFFFFF3 | (4 * (v15 & 3)));
    BOOL v18 = v19 == v20;
    if (v15 == 3) {
      break;
    }
    while (1)
    {
      ++v15;
      if (v18) {
        break;
      }
      BOOL v18 = 0;
      uint64_t v6 = 0;
      if (v15 == 3) {
        return v6;
      }
    }
  }
  if (v19 != v20 || a1[16] != a2[16]) {
    return 0;
  }
  if (((_BYTE)a1[28] & 1) == 0)
  {
    if (((_BYTE)a2[28] & 1) == 0 && a1[20] == COERCE_FLOAT(*((void *)a2 + 10)))
    {
      uint64_t v21 = 0;
      long long v22 = *((_OWORD *)a1 + 6);
      long long v23 = *((_OWORD *)a2 + 6);
      while (1)
      {
        long long v28 = v22;
        float v26 = *(float *)((unint64_t)&v28 & 0xFFFFFFFFFFFFFFF3 | (4 * (v21 & 3)));
        long long v29 = v23;
        float v27 = *(float *)((unint64_t)&v29 & 0xFFFFFFFFFFFFFFF3 | (4 * (v21 & 3)));
        BOOL v24 = v26 == v27;
        if (v21 == 3) {
          break;
        }
        while (1)
        {
          ++v21;
          if (v24) {
            break;
          }
          if (v21 == 3) {
            return 0;
          }
          BOOL v24 = 0;
        }
      }
      if (v26 == v27) {
        return 1;
      }
    }
    return 0;
  }
  return ((_BYTE)a2[28] & 1) != 0;
}

double sub_1002055BC(int32x4_t a1, float a2, int32x4_t a3)
{
  *(float *)a3.i32 = -*(float *)&a1.i32[2];
  *(uint64_t *)((char *)a3.i64 + 4) = a1.i64[0];
  float32x4_t v3 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a1, a1), (int8x16_t)a1, 0xCuLL);
  float32x4_t v4 = vnegq_f32((float32x4_t)a1);
  int32x4_t v15 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a3, a3), (int8x16_t)a3, 0xCuLL), v4), (float32x4_t)a3, v3);
  float32x4_t v5 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v15, v15), (int8x16_t)v15, 0xCuLL);
  int8x16_t v14 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v5, (int32x4_t)v5), (int8x16_t)v5, 0xCuLL), v4), v5, v3);
  __float2 v6 = __sincosf_stret(a2);
  v7.i32[0] = vextq_s8((int8x16_t)v15, (int8x16_t)v15, 8uLL).u32[0];
  v7.i32[1] = v15.i32[0];
  v8.i32[0] = vextq_s8(v14, v14, 8uLL).u32[0];
  v8.i32[1] = v14.i32[0];
  *(float32x2_t *)v9.f32 = vadd_f32(vmul_n_f32(v7, v6.__sinval), vmul_n_f32(v8, v6.__cosval));
  v9.f32[2] = vmuls_lane_f32(v6.__sinval, *(float32x2_t *)v15.i8, 1)
            + vmuls_lane_f32(v6.__cosval, *(float32x2_t *)v14.i8, 1);
  int32x4_t v10 = (int32x4_t)vmulq_f32(v9, v9);
  v10.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v10, 2), vadd_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v10.i8, 1))).u32[0];
  float32x2_t v11 = vrsqrte_f32((float32x2_t)v10.u32[0]);
  float32x2_t v12 = vmul_f32(v11, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(v11, v11)));
  *(void *)&double result = vmulq_n_f32(v9, vmul_f32(v12, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(v12, v12))).f32[0]).u64[0];
  return result;
}

id sub_100205694@<X0>(void *a1@<X0>, uint64_t a2@<X8>, float32x4_t a3@<Q0>, float a4@<S1>, int32x4_t a5@<Q2>, float a6@<S3>, float a7@<S4>)
{
  float v9 = *(float *)a5.i32;
  int32x4_t v11 = (int32x4_t)vmulq_f32(a3, a3);
  unsigned __int32 v13 = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), vadd_f32(*(float32x2_t *)v11.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1))).u32[0];
  float32x2_t v14 = vrsqrte_f32((float32x2_t)v13);
  float32x2_t v15 = vmul_f32(v14, vrsqrts_f32((float32x2_t)v13, vmul_f32(v14, v14)));
  *(float32x2_t *)a5.i8 = vmul_f32(v15, v15);
  float32x4_t v34 = vmulq_n_f32(a3, vmul_f32(v15, vrsqrts_f32((float32x2_t)v13, *(float32x2_t *)a5.i8)).f32[0]);
  *(double *)v16.i64 = sub_1002055BC((int32x4_t)v34, a6, a5);
  *(double *)v17.i64 = sub_100205A68(v34, v16);
  sub_100205DA4(v17, v9);
  float32x4_t v19 = vmulq_f32(v18, (float32x4_t)xmmword_1002B72B0);
  int32x4_t v20 = (int32x4_t)vnegq_f32(v19);
  int8x16_t v21 = (int8x16_t)vtrn2q_s32((int32x4_t)v19, vtrn1q_s32((int32x4_t)v19, v20));
  float32x4_t v22 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v19, (int8x16_t)v20, 8uLL), *(float32x2_t *)v34.f32, 1), (float32x4_t)vextq_s8(v21, v21, 8uLL), v34.f32[0]);
  float32x4_t v23 = (float32x4_t)vrev64q_s32((int32x4_t)v19);
  v23.i32[0] = v20.i32[1];
  v23.i32[3] = v20.i32[2];
  float32x4_t v24 = vmlaq_laneq_f32(v22, v23, v34, 2);
  int32x4_t v25 = (int32x4_t)vnegq_f32(v24);
  int8x16_t v26 = (int8x16_t)vtrn2q_s32((int32x4_t)v24, vtrn1q_s32((int32x4_t)v24, v25));
  float32x4_t v27 = (float32x4_t)vrev64q_s32((int32x4_t)v24);
  v27.i32[0] = v25.i32[1];
  v27.i32[3] = v25.i32[2];
  float32x4_t v35 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v24, v18, 3), v27, v18, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v24, (int8x16_t)v25, 8uLL), *(float32x2_t *)v18.f32, 1), (float32x4_t)vextq_s8(v26, v26, 8uLL), v18.f32[0]));
  float64_t v39 = 0.0;
  float64_t v37 = 0.0;
  float64_t v38 = 0.0;
  float64_t v36 = 0.0;
  id result = [a1 getRed:&v39 green:&v38 blue:&v37 alpha:&v36];
  v29.f64[0] = v39;
  v30.f64[0] = v37;
  v29.f64[1] = v38;
  v30.f64[1] = v36;
  float32x4_t v31 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v29), v30);
  *(float32x2_t *)&v30.f64[0] = vmul_n_f32(*(float32x2_t *)v35.f32, a4);
  *(void *)&v30.f64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(a4, v35, 2));
  *(float32x4_t *)a2 = a3;
  *(float64x2_t *)(a2 + 16) = v30;
  *(float *)(a2 + 32) = a7;
  *(float32x4_t *)(a2 + 48) = v31;
  *(_DWORD *)(a2 + 64) = 1065353216;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(unsigned char *)(a2 + 112) = 1;
  return result;
}

float sub_100205864(void *a1, float a2)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  [a1 getRed:&v7 green:&v6 blue:&v5 alpha:&v4];
  return a2;
}

__n128 initializeWithCopy for ConnectionAssistantCone(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantCone(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantCone(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 113) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantCone()
{
  return &type metadata for ConnectionAssistantCone;
}

ValueMetadata *type metadata accessor for ConnectionAssistantCone.Pulse()
{
  return &type metadata for ConnectionAssistantCone.Pulse;
}

__n128 initializeWithCopy for ConnectionAssistantCone.Projection(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 93) = *(long long *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantCone.Projection(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 109)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantCone.Projection(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 108) = 0;
    *(_DWORD *)(result + 104) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 109) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantCone.Projection()
{
  return &type metadata for ConnectionAssistantCone.Projection;
}

double sub_100205A68(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v2 = vmulq_f32(a1, a2);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).f32[0] >= 0.0)
  {
    float32x4_t v33 = vaddq_f32(a1, a2);
    int32x4_t v34 = (int32x4_t)vmulq_f32(v33, v33);
    v34.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v34, 2), vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v34.i8, 1))).u32[0];
    float32x2_t v35 = vrsqrte_f32((float32x2_t)v34.u32[0]);
    float32x2_t v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v35, v35)));
    float32x4_t v37 = vmulq_n_f32(v33, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v36, v36))).f32[0]);
    int32x4_t v38 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), (int8x16_t)v37, 0xCuLL), vnegq_f32(a1)), v37, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL));
    unint64_t v32 = vextq_s8((int8x16_t)vuzp1q_s32(v38, v38), (int8x16_t)v38, 0xCuLL).u64[0];
  }
  else
  {
    int32x4_t v3 = (int32x4_t)vmulq_f32(a1, a1);
    v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
    float32x2_t v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
    float32x2_t v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
    v3.i32[0] = vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).u32[0];
    int32x4_t v6 = (int32x4_t)vmulq_f32(a2, a2);
    v6.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1))).u32[0];
    float32x2_t v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
    float32x2_t v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
    float32x4_t v9 = vaddq_f32(vmulq_n_f32(a1, *(float *)v3.i32), vmulq_n_f32(a2, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]));
    float32x4_t v10 = vmulq_f32(v9, v9);
    float v11 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v10, 2), vaddq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v10.f32, 1))).f32[0];
    if (v11 <= 1.4211e-14)
    {
      float32x4_t v39 = vabsq_f32(a1);
      float v40 = v39.f32[1];
      float v41 = v39.f32[2];
      if (v39.f32[0] > v39.f32[1] || v39.f32[0] > v39.f32[2])
      {
        float32x4_t v42 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL);
        if (v40 <= v41)
        {
          float32x4_t v43 = vmulq_f32(a1, (float32x4_t)xmmword_1002B7290);
          float32x4_t v44 = (float32x4_t)xmmword_1002B72A0;
        }
        else
        {
          float32x4_t v43 = vmulq_f32(a1, (float32x4_t)xmmword_1002C1660);
          float32x4_t v44 = (float32x4_t)xmmword_1002B9C00;
        }
      }
      else
      {
        float32x4_t v42 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL);
        float32x4_t v43 = vmulq_f32(a1, (float32x4_t)xmmword_1002C1650);
        float32x4_t v44 = (float32x4_t)xmmword_1002B9C10;
      }
      float32x4_t v45 = vmlaq_f32(v43, v44, v42);
      float32x4_t v46 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), (int8x16_t)v45, 0xCuLL);
      int32x4_t v47 = (int32x4_t)vmulq_f32(v45, v45);
      v47.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v47.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v47, 2), *(float32x2_t *)v47.i8)).u32[0];
      float32x2_t v48 = vrsqrte_f32((float32x2_t)v47.u32[0]);
      float32x2_t v49 = vmul_f32(v48, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v48, v48)));
      unint64_t v32 = vmulq_n_f32(v46, vmul_f32(v49, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v49, v49))).f32[0]).u64[0];
    }
    else
    {
      float v12 = v11;
      float32x2_t v13 = vrsqrte_f32((float32x2_t)LODWORD(v11));
      float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)LODWORD(v12), vmul_f32(v13, v13)));
      float32x4_t v15 = vmulq_n_f32(v9, vmul_f32(v14, vrsqrts_f32((float32x2_t)LODWORD(v12), vmul_f32(v14, v14))).f32[0]);
      float32x4_t v16 = vaddq_f32(a1, v15);
      int32x4_t v17 = (int32x4_t)vmulq_f32(v16, v16);
      v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v17, 2), vadd_f32(*(float32x2_t *)v17.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v17.i8, 1))).u32[0];
      float32x2_t v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
      float32x2_t v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
      float32x4_t v20 = vmulq_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
      float32x4_t v21 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v20, (int32x4_t)v20), (int8x16_t)v20, 0xCuLL), vnegq_f32(a1)), v20, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL));
      float32x4_t v22 = vmulq_f32(v20, a1);
      float32x4_t v23 = vaddq_f32(a2, v15);
      int32x4_t v24 = (int32x4_t)vmulq_f32(v23, v23);
      v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v24, 2), vadd_f32(*(float32x2_t *)v24.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.i8, 1))).u32[0];
      *(float32x2_t *)v20.f32 = vrsqrte_f32((float32x2_t)v24.u32[0]);
      *(float32x2_t *)v20.f32 = vmul_f32(*(float32x2_t *)v20.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v20.f32, *(float32x2_t *)v20.f32)));
      float32x4_t v25 = vmulq_n_f32(v23, vmul_f32(*(float32x2_t *)v20.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v20.f32, *(float32x2_t *)v20.f32))).f32[0]);
      int32x4_t v26 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), (int8x16_t)v25, 0xCuLL), vnegq_f32(v15)), v25, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v15, (int32x4_t)v15), (int8x16_t)v15, 0xCuLL));
      float32x4_t v27 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v26, v26), (int8x16_t)v26, 0xCuLL);
      float32x4_t v28 = vmulq_f32(v15, v25);
      v27.i32[3] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v28, 2), vaddq_f32(v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v28.f32, 1))).u32[0];
      int32x4_t v29 = (int32x4_t)vnegq_f32(v27);
      int8x16_t v30 = (int8x16_t)vtrn2q_s32((int32x4_t)v27, vtrn1q_s32((int32x4_t)v27, v29));
      float32x4_t v31 = (float32x4_t)vrev64q_s32((int32x4_t)v27);
      v31.i32[0] = v29.i32[1];
      v31.i32[3] = v29.i32[2];
      unint64_t v32 = vaddq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).f32[0]), v31, *(float32x2_t *)v21.f32, 1), vmlaq_laneq_f32(vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v29, 8uLL), v21.f32[0]), (float32x4_t)vextq_s8(v30, v30, 8uLL), v21, 2)).u64[0];
    }
  }
  return *(double *)&v32;
}

void sub_100205DA4(float32x4_t a1, float a2)
{
  float32x4_t v2 = vmulq_f32(a1, (float32x4_t)xmmword_1002B72C0);
  float32x4_t v3 = (float32x4_t)vextq_s8((int8x16_t)v2, (int8x16_t)v2, 8uLL);
  *(float32x2_t *)v2.f32 = vadd_f32(*(float32x2_t *)v2.f32, *(float32x2_t *)v3.f32);
  v2.f32[0] = vaddv_f32(*(float32x2_t *)v2.f32);
  v3.i64[0] = 0;
  sub_100205DD8((float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32(v2, v3)), 0), (int8x16_t)vnegq_f32(a1), (int8x16_t)a1), a2);
}

void sub_100205DD8(float32x4_t a1, float a2)
{
  float v4 = 1.0 - a2;
  float32x4_t v5 = vsubq_f32((float32x4_t)xmmword_1002B72C0, a1);
  int8x16_t v6 = (int8x16_t)vmulq_f32(v5, v5);
  float32x4_t v7 = vaddq_f32(a1, (float32x4_t)xmmword_1002B72C0);
  int8x16_t v8 = (int8x16_t)vmulq_f32(v7, v7);
  float v9 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)))));
  float v10 = v9 + v9;
  if ((float)(v9 + v9) != 0.0) {
    sinf(v10);
  }
  if ((float)(v4 * v10) != 0.0) {
    sinf(v4 * v10);
  }
  float v11 = v10 * a2;
  if (v11 != 0.0) {
    sinf(v11);
  }
}

uint64_t sub_100205F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_100004010(&qword_1003838E8);
  __chkstk_darwin(v10 - 8);
  float v12 = (char *)&v23[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppEvents();
  sub_1002061F4((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  *(void *)a5 = EnvironmentObject.init()();
  *(void *)(a5 + 8) = v13;
  type metadata accessor for UIMetrics();
  sub_1002061F4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  *(void *)(a5 + 16) = EnvironmentObject.init()();
  *(void *)(a5 + 24) = v14;
  *(void *)(a5 + 32) = a1;
  *(void *)(a5 + 40) = a2;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  LOBYTE(v23[0]) = 0;
  State.init(wrappedValue:)();
  uint64_t v15 = *((void *)&v24[0] + 1);
  *(unsigned char *)(a5 + 64) = v24[0];
  *(void *)(a5 + 72) = v15;
  LOBYTE(v23[0]) = 0;
  State.init(wrappedValue:)();
  uint64_t v16 = *((void *)&v24[0] + 1);
  *(unsigned char *)(a5 + 80) = v24[0];
  *(void *)(a5 + 88) = v16;
  sub_1000FF3E8();
  id v17 = [self mainRunLoop];
  uint64_t v18 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  uint64_t v19 = static NSTimer.publish(every:tolerance:on:in:options:)();

  sub_10000950C((uint64_t)v12, &qword_1003838E8);
  v23[0] = v19;
  type metadata accessor for NSTimer.TimerPublisher();
  State.init(wrappedValue:)();
  uint64_t v20 = *((void *)&v24[0] + 1);
  *(void *)(a5 + 96) = *(void *)&v24[0];
  *(void *)(a5 + 104) = v20;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_1000FF428((uint64_t)v24, (uint64_t)v23);
  sub_100004010(&qword_1003874C0);
  State.init(wrappedValue:)();
  return sub_10000950C((uint64_t)v24, &qword_1003874C0);
}

uint64_t sub_1002061F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for BuiltInRoadsideForkFailedContentView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 136)) {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(a1 + 112);
  }

  return swift_release();
}

uint64_t initializeWithCopy for BuiltInRoadsideForkFailedContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v12 = a2 + 112;
  uint64_t v13 = a1 + 112;
  uint64_t v8 = *(void *)(a2 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v8;
    *(void *)(a1 + 144) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(v13, v12, v8);
  }
  else
  {
    long long v10 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v12;
    *(_OWORD *)(v13 + 16) = v10;
    *(void *)(v13 + 32) = *(void *)(v12 + 32);
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BuiltInRoadsideForkFailedContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 136);
  if (!*(void *)(a1 + 136))
  {
    if (v5)
    {
      *(void *)(a1 + 136) = v5;
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 112, a2 + 112);
      goto LABEL_8;
    }
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 112);
    long long v7 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v6;
    *(_OWORD *)(a1 + 128) = v7;
    goto LABEL_8;
  }
  if (!v5)
  {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(a1 + 112);
    goto LABEL_7;
  }
  sub_1000D4DB8((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
LABEL_8:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for BuiltInRoadsideForkFailedContentView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for BuiltInRoadsideForkFailedContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  if (*(void *)(a1 + 136)) {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(a1 + 112);
  }
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  uint64_t v7 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltInRoadsideForkFailedContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInRoadsideForkFailedContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInRoadsideForkFailedContentView()
{
  return &type metadata for BuiltInRoadsideForkFailedContentView;
}

uint64_t sub_1002067D4()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_1002067F0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = static HorizontalAlignment.center.getter();
  sub_1002069BC(v1, (uint64_t)&v28);
  long long v26 = v29;
  long long v27 = v28;
  long long v5 = v30;
  char v6 = v31[0];
  uint64_t v7 = *(void *)&v31[40];
  __n128 v24 = *(__n128 *)&v31[24];
  long long v25 = *(_OWORD *)&v31[8];
  uint64_t v8 = *(void *)(v1 + 104);
  *(void *)&long long v28 = *(void *)(v1 + 96);
  *((void *)&v28 + 1) = v8;
  sub_100004010(&qword_1003874C8);
  State.wrappedValue.getter();
  uint64_t v9 = v36;
  sub_100039DE8(v1, (uint64_t)&v28);
  long long v10 = (_OWORD *)swift_allocObject();
  long long v11 = v33;
  v10[7] = v32;
  v10[8] = v11;
  long long v12 = v35;
  v10[9] = v34;
  v10[10] = v12;
  long long v13 = *(_OWORD *)v31;
  v10[3] = v30;
  v10[4] = v13;
  long long v14 = *(_OWORD *)&v31[32];
  v10[5] = *(_OWORD *)&v31[16];
  v10[6] = v14;
  long long v15 = v29;
  v10[1] = v28;
  v10[2] = v15;
  LOBYTE(v36) = 1;
  sub_100039DE8(v2, (uint64_t)&v28);
  uint64_t v16 = (_OWORD *)swift_allocObject();
  long long v17 = v33;
  v16[7] = v32;
  v16[8] = v17;
  long long v18 = v35;
  v16[9] = v34;
  v16[10] = v18;
  long long v19 = *(_OWORD *)v31;
  v16[3] = v30;
  v16[4] = v19;
  long long v20 = *(_OWORD *)&v31[32];
  v16[5] = *(_OWORD *)&v31[16];
  v16[6] = v20;
  long long v21 = v29;
  v16[1] = v28;
  _OWORD v16[2] = v21;
  char v22 = v36;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = v22;
  *(_OWORD *)(a1 + 24) = v27;
  *(_OWORD *)(a1 + 40) = v26;
  *(_OWORD *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 72) = v6;
  __n128 result = v24;
  *(_OWORD *)(a1 + 80) = v25;
  *(__n128 *)(a1 + 96) = v24;
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = sub_100207760;
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = sub_10020776C;
  *(void *)(a1 + 168) = v16;
  return result;
}

uint64_t sub_1002069BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self mainBundle];
  v32._countAndFlagsBits = 0xD00000000000005CLL;
  v32._object = (void *)0x80000001002D3DE0;
  v5.value._object = (void *)0x80000001002C7760;
  v6._countAndFlagsBits = 0x6961674120797254;
  v6._object = (void *)0xE90000000000006ELL;
  v5.value._countAndFlagsBits = 0xD000000000000012;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v5, (NSBundle)v4, v7, v32);

  uint64_t v9 = *(void *)(a1 + 72);
  LOBYTE(v26[0]) = *(unsigned char *)(a1 + 64);
  *((void *)&v26[0] + 1) = v9;
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  sub_100039DE8(a1, (uint64_t)v26);
  if (v24 == 1)
  {
    sub_100039E44((uint64_t)v26);
    char v10 = 1;
  }
  else
  {
    char v24 = v27;
    State.wrappedValue.getter();
    sub_100039E44((uint64_t)v26);
    char v10 = v25;
  }
  sub_100039DE8(a1, (uint64_t)v26);
  long long v11 = (_OWORD *)swift_allocObject();
  long long v12 = v29;
  long long v13 = v30;
  v11[7] = v28;
  v11[8] = v12;
  long long v14 = v31;
  _OWORD v11[9] = v13;
  v11[10] = v14;
  long long v15 = v26[3];
  v11[3] = v26[2];
  v11[4] = v15;
  long long v16 = v27;
  v11[5] = v26[4];
  _OWORD v11[6] = v16;
  long long v17 = v26[1];
  v11[1] = v26[0];
  v11[2] = v17;
  type metadata accessor for UIMetrics();
  sub_1002061F4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v18 = EnvironmentObject.init()();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(a1 + 72);
  LOBYTE(v26[0]) = *(unsigned char *)(a1 + 64);
  *((void *)&v26[0] + 1) = v21;
  State.wrappedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v24;
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v20;
  *(Swift::String *)(a2 + 16) = v8;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0xE000000000000000;
  *(unsigned char *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = sub_100207794;
  *(void *)(a2 + 64) = v11;
  *(void *)(a2 + 72) = KeyPath;
  *(void *)(a2 + 80) = sub_100080D84;
  *(void *)(a2 + 88) = result;
  return result;
}

uint64_t sub_100206C58()
{
  if (!*(void *)v0) {
    goto LABEL_8;
  }
  v13[0] = *(void *)(v0 + 32);
  swift_retain();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  LOBYTE(v13[0]) = *(unsigned char *)(v0 + 64);
  v13[1] = v1;
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  sub_100039DE8(v0, (uint64_t)v13);
  if (v10[0]) {
    return sub_100039E44((uint64_t)v13);
  }
  LOBYTE(v10[0]) = v14;
  *((void *)&v10[0] + 1) = v15;
  State.wrappedValue.getter();
  uint64_t result = sub_100039E44((uint64_t)v13);
  if ((v11 & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    LOBYTE(v10[0]) = *(unsigned char *)(v0 + 64);
    *((void *)&v10[0] + 1) = v3;
    LOBYTE(v11) = 1;
    State.wrappedValue.setter();
    if (*(void *)v0)
    {
      sub_100039DE8(v0, (uint64_t)v10);
      id v4 = (_OWORD *)swift_allocObject();
      long long v5 = v10[7];
      v4[7] = v10[6];
      v4[8] = v5;
      long long v6 = v10[9];
      v4[9] = v10[8];
      v4[10] = v6;
      long long v7 = v10[3];
      v4[3] = v10[2];
      v4[4] = v7;
      long long v8 = v10[5];
      v4[5] = v10[4];
      v4[6] = v8;
      long long v9 = v10[1];
      v4[1] = v10[0];
      v4[2] = v9;
      long long v11 = sub_100207864;
      long long v12 = v4;
      swift_retain();
      PassthroughSubject.send(_:)();
      swift_release();
      swift_release();
      return sub_100207318();
    }
LABEL_8:
    type metadata accessor for AppEvents();
    sub_1002061F4((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100206E58(uint64_t a1, uint64_t a2)
{
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9B08);
  sub_100039DE8(a2, (uint64_t)v15);
  sub_100039DE8(a2, (uint64_t)v13);
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446467;
    uint64_t v7 = sub_1000C8E54();
    sub_1001B3178(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100039E44((uint64_t)v15);
    *(_WORD *)(v6 + 12) = 2081;
    uint64_t v9 = *(void *)(v14 + 16);
    unint64_t v10 = *(void *)(v14 + 24);
    swift_bridgeObjectRetain();
    sub_1001B3178(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100039E44((uint64_t)v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%{public}s] Throttle timer fired for %{private}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100039E44((uint64_t)v15);
    sub_100039E44((uint64_t)v13);
  }

  return sub_100207068();
}

uint64_t sub_100207068()
{
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9B08);
  sub_100039DE8(v0, (uint64_t)v14);
  sub_100039DE8(v0, (uint64_t)v12);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446467;
    uint64_t v5 = sub_1000C8E54();
    sub_1001B3178(v5, v6, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100039E44((uint64_t)v14);
    *(_WORD *)(v4 + 12) = 2081;
    uint64_t v7 = *(void *)(v13 + 16);
    unint64_t v8 = *(void *)(v13 + 24);
    swift_bridgeObjectRetain();
    sub_1001B3178(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100039E44((uint64_t)v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%{public}s] _cancelThrottleTimer for %{private}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100039E44((uint64_t)v14);
    sub_100039E44((uint64_t)v12);
  }

  sub_100004010(&qword_1003874D0);
  State.wrappedValue.getter();
  if (v16)
  {
    sub_1000090FC((uint64_t)v14, (uint64_t)v12);
    sub_10000950C((uint64_t)v14, &qword_1003874C0);
    sub_100008F88(v12, v12[3]);
    dispatch thunk of Cancellable.cancel()();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_10000950C((uint64_t)v14, &qword_1003874C0);
  }
  uint64_t v9 = *(void *)(v0 + 88);
  v14[0] = *(unsigned char *)(v0 + 80);
  uint64_t v15 = v9;
  LOBYTE(v12[0]) = 0;
  sub_100004010(&qword_10037ED78);
  return State.wrappedValue.setter();
}

uint64_t sub_100207318()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003838E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B08);
  sub_100039DE8(v0, (uint64_t)&v26);
  sub_100039DE8(v0, (uint64_t)v24);
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446467;
    uint64_t v21 = v4;
    uint64_t v9 = sub_1000C8E54();
    uint64_t v22 = sub_1001B3178(v9, v10, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100039E44((uint64_t)&v26);
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v12 = *(void *)(v25 + 16);
    unint64_t v11 = *(void *)(v25 + 24);
    swift_bridgeObjectRetain();
    uint64_t v13 = v12;
    uint64_t v4 = v21;
    uint64_t v22 = sub_1001B3178(v13, v11, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100039E44((uint64_t)v24);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] _resetThrottleTimer for %{private}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100039E44((uint64_t)&v26);
    sub_100039E44((uint64_t)v24);
  }

  sub_100004010(&qword_1003874D0);
  State.wrappedValue.getter();
  if (v28)
  {
    sub_1000090FC((uint64_t)&v26, (uint64_t)v24);
    sub_10000950C((uint64_t)&v26, &qword_1003874C0);
    sub_100008F88(v24, v24[3]);
    dispatch thunk of Cancellable.cancel()();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v24);
  }
  else
  {
    sub_10000950C((uint64_t)&v26, &qword_1003874C0);
  }
  sub_1000FF3E8();
  id v14 = [self mainRunLoop];
  uint64_t v15 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  uint64_t v16 = static NSTimer.publish(every:tolerance:on:in:options:)();

  sub_10000950C((uint64_t)v4, &qword_1003838E8);
  uint64_t v18 = *(void *)(v1 + 104);
  uint64_t v26 = *(void *)(v1 + 96);
  uint64_t v17 = v26;
  uint64_t v27 = v18;
  v24[0] = v16;
  sub_100004010(&qword_1003874C8);
  State.wrappedValue.setter();
  uint64_t v26 = v17;
  uint64_t v27 = v18;
  State.wrappedValue.getter();
  NSTimer.TimerPublisher.connect()();
  swift_release();
  sub_1000FF428((uint64_t)&v26, (uint64_t)v24);
  State.wrappedValue.setter();
  sub_10000950C((uint64_t)&v26, &qword_1003874C0);
  uint64_t v19 = *(void *)(v1 + 88);
  LOBYTE(v26) = *(unsigned char *)(v1 + 80);
  uint64_t v27 = v19;
  LOBYTE(v24[0]) = 1;
  sub_100004010(&qword_10037ED78);
  return State.wrappedValue.setter();
}

uint64_t sub_100207760(uint64_t a1)
{
  return sub_100206E58(a1, v1 + 16);
}

uint64_t sub_10020776C()
{
  return sub_100207068();
}

uint64_t sub_100207794()
{
  return sub_100206C58();
}

uint64_t sub_1002077C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002077D4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 152)) {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 128);
  }
  swift_release();

  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_100207864()
{
  return State.wrappedValue.setter();
}

unint64_t sub_1002078BC()
{
  unint64_t result = qword_10038ECE8;
  if (!qword_10038ECE8)
  {
    sub_1000094C4(&qword_10038ECF0);
    sub_100207938();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038ECE8);
  }
  return result;
}

unint64_t sub_100207938()
{
  unint64_t result = qword_10038ECF8;
  if (!qword_10038ECF8)
  {
    sub_1000094C4((uint64_t *)&unk_10038ED00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038ECF8);
  }
  return result;
}

uint64_t sub_100207994()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100207A1C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100207A60(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a2 + 56);
  int v5 = *(unsigned __int8 *)(a2 + 48);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  if (!CGRectEqualToRect(*(CGRect *)(a1 + 16), *(CGRect *)(a2 + 16)) || ((v5 ^ v6) & 1) != 0) {
    return 0;
  }

  return sub_10020D19C(v3, v4);
}

uint64_t sub_100207AF4(uint64_t a1)
{
  *(void *)(v1 + qword_10038EDB0) = a1;
  return _objc_release_x1();
}

uint64_t sub_100207B08()
{
  return swift_unknownObjectWeakLoadStrong();
}

unint64_t sub_100207B18(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x697261657070612ELL;
      break;
    case 2:
      unint64_t result = 0x657261657070612ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 5:
      unint64_t result = 0x657070617369642ELL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100207BFC(char *a1, char *a2)
{
  return static ConnectionAssistantRendererEarthOutline.Error.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100207C10()
{
  return ConnectionAssistantRendererEarthOutline.Error.hashValue.getter(*v0);
}

void sub_100207C1C(uint64_t a1)
{
  ConnectionAssistantRendererEarthOutline.Error.hash(into:)(a1, *v1);
}

Swift::Int sub_100207C28()
{
  Hasher.init(_seed:)();
  ConnectionAssistantRendererEarthOutline.Error.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

unint64_t sub_100207C70()
{
  return sub_100207B18(*v0);
}

uint64_t sub_100207C7C()
{
  _StringGuts.grow(_:)(52);
  v0._countAndFlagsBits = 0x746E657365727028;
  v0._object = (void *)0xEE00203A656C6261;
  String.append(_:)(v0);
  swift_unknownObjectRetain();
  sub_100004010(qword_10038EFE8);
  v1._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0x3A6567617473202CLL;
  v2._object = (void *)0xE900000000000020;
  String.append(_:)(v2);
  type metadata accessor for SessionBannerAgent.Stage();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v3._object = (void *)0x80000001002D3F80;
  v3._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v3);
  type metadata accessor for SessionBannerAgent.State();
  type metadata accessor for Optional();
  v4._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 0;
}

uint64_t sub_100207E04()
{
  return sub_100207C7C();
}

uint64_t sub_100207E18()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  id v2 = v0;
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_beginAccess();
    type metadata accessor for SessionBannerAgent.Stage();
    type metadata accessor for Optional();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    type metadata accessor for SessionBannerAgent.State();
    type metadata accessor for Optional();
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "_activePresentable changed: stage = %{public}s: pendingStateUpdate = %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return sub_10020855C();
}

uint64_t (*sub_1002080F0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100208150;
}

uint64_t sub_100208150(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_100207E18();
  }
  return result;
}

uint64_t sub_100208184()
{
  return *(unsigned __int8 *)(v0 + qword_10038EDC8);
}

uint64_t sub_100208194()
{
  return *(unsigned __int8 *)(v0 + qword_10038EDD0);
}

uint64_t sub_1002081A4(uint64_t result)
{
  *(unsigned char *)(v1 + qword_10038EDD0) = result;
  return result;
}

id sub_1002081B4()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    uint64_t v6 = (objc_class *)type metadata accessor for SessionBannerAgent();
    swift_getWitnessTable();
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_1001B3178(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v9 = *(void *)&v2[qword_10038EDA8];
    unint64_t v10 = *(void *)&v2[qword_10038EDA8 + 8];
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1001B3178(v9, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit for '%s'", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v6 = (objc_class *)type metadata accessor for SessionBannerAgent();
  }
  v14.receiver = v2;
  v14.super_class = v6;
  return [super dealloc:v12, v13];
}

id sub_100208454(void *a1)
{
  id v1 = a1;
  return sub_1002081B4();
}

uint64_t sub_10020847C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  sub_10002D3E4(a1 + qword_10038EDB8);

  return swift_unknownObjectRelease();
}

uint64_t sub_10020855C()
{
  int v1 = *(unsigned __int8 *)(v0 + qword_10038EDD0);
  uint64_t result = sub_1002086FC();
  if (v1 == 2 || (result & 1) != (v1 & 1))
  {
    *(unsigned char *)(v0 + qword_10038EDD0) = sub_1002086FC() & 1;
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A99A0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67240192;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "isAnyBannerPresented changed to %{BOOL,public}d", v7, 8u);
      swift_slowDealloc();
    }

    return PassthroughSubject.send(_:)();
  }
  return result;
}

BOOL sub_1002086C0(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

uint64_t sub_1002086D0()
{
  return *(unsigned __int8 *)(v0 + qword_10038EDD8);
}

uint64_t sub_1002086E0(uint64_t result)
{
  *(unsigned char *)(v1 + qword_10038EDD8) = result;
  return result;
}

BOOL sub_1002086F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002086C0(*a1, *a2);
}

uint64_t sub_1002086FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (*(unsigned char *)(v1 + qword_10038EDC8)) {
      return 0;
    }
    uint64_t v8 = v1 + qword_10038EDC0;
    swift_beginAccess();
    if (!*(void *)v8) {
      return 0;
    }
    if (*(void *)(*(void *)v8 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode) == 4) {
      return 1;
    }
    unsigned int v9 = *(unsigned __int16 *)(v8 + 16);
    if ((v9 & 0xFF00) == 0x200) {
      return 0;
    }
    else {
      return (v9 >> 8) & 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100208894(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_10020B674();
  swift_unknownObjectRelease();
}

uint64_t sub_1002088F4(int a1)
{
  id v2 = v1;
  uint64_t v4 = swift_isaMask & *(void *)v1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    LODWORD(v71) = a1;
    if (qword_10037DD98 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = sub_10000FD84(v5, (uint64_t)qword_1003A99A0);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v69 = v8;
  uint64_t v70 = v6;
  if (v17)
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    id v73 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446210;
    uint64_t v72 = sub_1001B3178(0xD00000000000001ALL, 0x80000001002D3D10, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "presentBanner for '%{public}s'", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v19 = *(void **)&v2[qword_10038EDB0];
  if (!v19)
  {
    int32x4_t v47 = v2;
    float32x2_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      id v73 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136446210;
      uint64_t v51 = *(void *)&v47[qword_10038EDA8];
      unint64_t v52 = *(void *)&v47[qword_10038EDA8 + 8];
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1001B3178(v51, v52, (uint64_t *)&v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "_bannerSource for '%{public}s' has expired", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v53 = v19;
    int v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      id v73 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136446210;
      uint64_t v72 = sub_1001B3178(0xD00000000000001ALL, 0x80000001002D3D10, (uint64_t *)&v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "contentProducer for '%{public}s' has expired", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v68 = v5;
  uint64_t v22 = *(void *)&v2[qword_10038EDA8];
  uint64_t v21 = *(void *)&v2[qword_10038EDA8 + 8];
  uint64_t v23 = *(void *)(v4 + 80);
  uint64_t v24 = *(void *)(v4 + 88);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, char *, _UNKNOWN **, uint64_t, uint64_t))(v24 + 16);
  uint64_t v26 = Strong;
  id v27 = v19;
  uint64_t v28 = v71 & 1;
  uint64_t v71 = v26;
  long long v29 = (void *)v25(v22, v21, 0xD00000000000001ALL, 0x80000001002D3D10, v26, v28, v2, &off_10035EF18, v23, v24);
  sub_100004010((uint64_t *)&unk_10038EC40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B31C0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v31;
  sub_10001E6FC(0, (unint64_t *)&qword_100393B80);
  *(NSNumber *)(inited + 48) = NSNumber.init(integerLiteral:)(1);
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v32;
  *(NSNumber *)(inited + 72) = NSNumber.init(integerLiteral:)(1);
  sub_100283048(inited);
  sub_100004010((uint64_t *)&unk_10038EC50);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v73 = 0;
  LODWORD(v24) = [v27 postPresentable:v29 options:1 userInfo:isa error:&v73];

  id v34 = v73;
  if (!v24)
  {
    id v57 = v73;
    uint64_t v58 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      id v61 = (uint8_t *)swift_slowAlloc();
      id v73 = (id)swift_slowAlloc();
      id v67 = v27;
      *(_DWORD *)id v61 = 136446210;
      uint64_t v72 = v58;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v62 = String.init<A>(describing:)();
      uint64_t v72 = sub_1001B3178(v62, v63, (uint64_t *)&v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "presentBanner failed: %{public}s", v61, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      swift_errorRelease();
    }
    else
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  id v67 = v27;
  uint64_t v36 = v69;
  uint64_t v35 = v70;
  uint64_t v37 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v14, v68);
  swift_unknownObjectRetain_n();
  id v38 = v34;
  float32x4_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v39, v40))
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    return (uint64_t)v29;
  }
  float v41 = (uint8_t *)swift_slowAlloc();
  uint64_t v66 = (void *)swift_slowAlloc();
  id v73 = v66;
  *(_DWORD *)float v41 = 136446210;
  id v42 = [v29 requestIdentifier];
  if (v42)
  {
    float32x4_t v43 = v42;
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v46 = v45;

    uint64_t v72 = sub_1001B3178(v44, v46, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "presentBanner: presenting '%{public}s'", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v37);
    return (uint64_t)v29;
  }
  uint64_t result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

void sub_1002093D0()
{
}

uint64_t type metadata accessor for SessionBannerAgent()
{
  return sub_100006BAC();
}

unsigned char *sub_10020942C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002094F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for SessionBannerAgent.State()
{
  return sub_100006BAC();
}

uint64_t sub_10020953C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100209544(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_100209580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 sub_1002095DC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t sub_1002095F0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t sub_100209630(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100209678(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SessionBannerAgent.ActivePresentable()
{
  return sub_100006BAC();
}

uint64_t initializeWithCopy for PreferredBannerLayout(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreferredBannerLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PreferredBannerLayout(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreferredBannerLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreferredBannerLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferredBannerLayout()
{
  return &type metadata for PreferredBannerLayout;
}

uint64_t sub_100209884(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1002098BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_100209914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutTranscriptWarningView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutTranscriptWarningView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SessionBannerAgent.BannerTransitionEvent()
{
  return sub_100006BAC();
}

void sub_1002099F4(void *a1, uint64_t a2, const char *a3, int a4, const char *a5)
{
  os_log_type_t v60 = a3;
  uint64_t v59 = swift_isaMask & *v5;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10000FD84(v12, (uint64_t)qword_1003A99A0);
  BOOL v17 = *(void (**)(char *))(v13 + 16);
  uint64_t v61 = v16;
  v17(v15);
  swift_unknownObjectRetain_n();
  uint64_t v18 = v5;
  uint64_t v19 = Logger.logObject.getter();
  int v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, (os_log_type_t)v57))
  {
    os_log_type_t v55 = a5;
    uint64_t v56 = v18;
    int v54 = a4;
    uint64_t v20 = a1;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    v66[0] = v53;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v58 = v20;
    id v22 = [v20 requestIdentifier];
    if (!v22)
    {
LABEL_31:

      swift_unknownObjectRelease();
      __break(1u);
      return;
    }
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    *(void *)&long long v64 = sub_1001B3178(v24, v26, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v52 = v21 + 14;
    id v27 = v56;
    uint64_t v28 = &v56[qword_10038EDC0];
    swift_beginAccess();
    __int16 v29 = *((_WORD *)v28 + 8);
    long long v64 = *(_OWORD *)v28;
    __int16 v65 = v29;
    type metadata accessor for SessionBannerAgent.ActivePresentable();
    type metadata accessor for Optional();
    swift_unknownObjectRetain();
    uint64_t v30 = String.init<A>(describing:)();
    *(void *)&long long v64 = sub_1001B3178(v30, v31, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v18 = v27;
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v57, v60, (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a5 = v55;
    LOBYTE(a4) = v54;
    a1 = v58;
  }
  else
  {
    swift_unknownObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  uint64_t v33 = v62;
  uint64_t v32 = v63;
  (*(void (**)(uint64_t *, void, uint64_t))(v62 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v63);
  char v34 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v11, v32);
  if ((v34 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v35 = (uint64_t *)&v18[qword_10038EDC0];
  swift_beginAccess();
  uint64_t v36 = *v35;
  if (v36)
  {
    uint64_t v37 = &selRef_initWithExplanation_target_attributes_;
    id v38 = [(id)swift_unknownObjectRetain() requestIdentifier];
    swift_unknownObjectRelease();
    if (v38)
    {
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v40;
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v36 = 0;
    }
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v37 = &selRef_initWithExplanation_target_attributes_;
  }
  id v41 = [a1 v37[131]];
  if (!v41)
  {
    if (!v36) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  id v42 = v41;
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v44;

  if (!v36)
  {
    if (!v45) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  if (!v45)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v39 == v43 && v36 == v45)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v51 = sub_1002080F0((uint64_t)&v64);
    if (*(void *)v50) {
      *(unsigned char *)(v50 + 16) = a4;
    }
    v51((uint64_t)&v64, 0);
    return;
  }
  char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v49) {
    goto LABEL_27;
  }
LABEL_23:
  unint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    float32x2_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float32x2_t v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, a5, v48, 2u);
    swift_slowDealloc();
  }
}

void sub_10020A098()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10020A0EC();
  }
}

void sub_10020A0EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "executePendingStateUpdate", v9, 2u);
    swift_slowDealloc();
  }

  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v10)
  {
    uint64_t v11 = &v1[qword_10038EDC0];
    swift_beginAccess();
    if (*(void *)v11 && v11[16] == 5)
    {
      uint64_t v12 = &v1[qword_10038EDC0];
      swift_beginAccess();
      if (!*(void *)v12 || (unsigned int v13 = *((unsigned __int16 *)v12 + 8), (v13 & 0xFF00) == 0x200))
      {
        unint64_t v25 = v1;
        unint64_t v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v35 = swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 136446210;
          __int16 v29 = &v25[qword_10038EDC0];
          swift_beginAccess();
          __int16 v30 = *((_WORD *)v29 + 8);
          long long v33 = *(_OWORD *)v29;
          __int16 v34 = v30;
          type metadata accessor for SessionBannerAgent.ActivePresentable();
          type metadata accessor for Optional();
          swift_unknownObjectRetain();
          uint64_t v31 = String.init<A>(describing:)();
          *(void *)&long long v33 = sub_1001B3178(v31, v32, &v35);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "executePendingStateUpdate request expired, current presentable == %{public}s", v28, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_10020B5DC(0, 0, 0);
      }
      else
      {
        uint64_t v14 = sub_1002088F4((v13 >> 8) & 1);
        sub_10020B5DC(v14, v15, v16);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      BOOL v17 = v1;
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 136446210;
        uint64_t v21 = &v17[qword_10038EDC0];
        swift_beginAccess();
        __int16 v22 = *((_WORD *)v21 + 8);
        long long v36 = *(_OWORD *)v21;
        __int16 v37 = v22;
        type metadata accessor for SessionBannerAgent.ActivePresentable();
        type metadata accessor for Optional();
        swift_unknownObjectRetain();
        uint64_t v23 = String.init<A>(describing:)();
        *(void *)&long long v36 = sub_1001B3178(v23, v24, (uint64_t *)&v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "executePendingStateUpdate request overridden, current presentable == %{public}s", v20, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10020A6A4(char a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67240448;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 8) = 1026;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "didChangeLayout: present - %{BOOL,public}d, expanded - %{BOOL,public}d", (uint8_t *)v9, 0xEu);
    swift_slowDealloc();
  }

  if ((a1 & 1) != 0 && *(unsigned char *)(v3 + qword_10038EDD8) != 2) {
    *(unsigned char *)(v3 + qword_10038EDD8) = a2 & 1;
  }
  return sub_10020855C();
}

uint64_t sub_10020A810(void *a1, uint64_t a2, int a3, const char *a4, uint64_t a5)
{
  uint64_t v44 = a4;
  uint64_t v7 = v5;
  int v46 = a3;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v45 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10000FD84(v12, (uint64_t)qword_1003A99A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  swift_unknownObjectRetain_n();
  BOOL v17 = Logger.logObject.getter();
  int v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, (os_log_type_t)v43))
  {
    uint64_t v39 = v9;
    uint64_t v40 = v7;
    uint64_t v41 = a5;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v48[0] = v38;
    *(_DWORD *)uint64_t v18 = 136446466;
    id v19 = [a1 requestIdentifier];
    id v42 = a1;
    if (!v19) {
      goto LABEL_12;
    }
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    uint64_t v47 = sub_1001B3178(v21, v23, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v24 = v42;
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    LOBYTE(v47) = v46;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v25 = String.init<A>(describing:)();
    uint64_t v47 = sub_1001B3178(v25, v26, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v43, v44, (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a1 = v24;
    uint64_t v9 = v39;
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  uint64_t v27 = v45;
  (*(void (**)(uint64_t *, void, uint64_t))(v45 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v9);
  char v28 = _dispatchPreconditionTest(_:)();
  uint64_t v29 = v9;
  char v30 = v28;
  (*(void (**)(uint64_t *, uint64_t))(v27 + 8))(v11, v29);
  if (v30)
  {
    id v31 = [a1 requestIdentifier];
    if (v31)
    {
      unint64_t v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v34;

      v48[0] = v33;
      v48[1] = v35;
      char v49 = v46;
      PassthroughSubject.send(_:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  uint64_t result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10020AC88(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v36 = (void *)((char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  swift_unknownObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v33 = v5;
    uint64_t v34 = v4;
    uint64_t v35 = v2;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v38[0] = v32;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v15 = [a1 requestIdentifier];
    uint64_t v16 = a1;
    if (!v15) {
      goto LABEL_12;
    }
    BOOL v17 = v15;
    v31[1] = v14 + 4;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    uint64_t v37 = sub_1001B3178(v18, v20, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "wasRemoved: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v4 = v34;
    uint64_t v2 = v35;
    uint64_t v5 = v33;
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = a1;
  }
  uint64_t v21 = v36;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v21 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v4);
  char v22 = _dispatchPreconditionTest(_:)();
  uint64_t v23 = v5;
  char v24 = v22;
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v21, v4);
  if (v24)
  {
    *(unsigned char *)(v2 + qword_10038EDD8) = 2;
    sub_10020B5DC(0, 0, 0);
    id v25 = [v16 requestIdentifier];
    if (v25)
    {
      unint64_t v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      v38[0] = v27;
      v38[1] = v29;
      PassthroughSubject.send(_:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  uint64_t result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10020B0C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v36 = (void *)((char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  swift_unknownObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v33 = v5;
    uint64_t v34 = v4;
    uint64_t v35 = v2;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v38[0] = v32;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v15 = [a1 requestIdentifier];
    uint64_t v16 = a1;
    if (!v15) {
      goto LABEL_12;
    }
    BOOL v17 = v15;
    v31[1] = v14 + 4;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    uint64_t v37 = sub_1001B3178(v18, v20, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "handleTap: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    a1 = v16;
    uint64_t v4 = v34;
    uint64_t v5 = v33;
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v21 = v36;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v21 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v4);
  char v22 = _dispatchPreconditionTest(_:)();
  uint64_t v23 = v5;
  char v24 = v22;
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v21, v4);
  if (v24)
  {
    id v25 = [a1 requestIdentifier];
    if (v25)
    {
      unint64_t v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      v38[0] = v27;
      v38[1] = v29;
      PassthroughSubject.send(_:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  uint64_t result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10020B4D4()
{
  return PassthroughSubject.send(_:)();
}

void sub_10020B51C(void *a1, uint64_t a2)
{
  sub_1002099F4(a1, a2, "willAppear: for %{public}s, active presentable == %{public}s", 1, "Received willAppear for non-active presentable");
}

void sub_10020B548(void *a1, uint64_t a2)
{
  sub_1002099F4(a1, a2, "didAppear: for %{public}s, active presentable == %{public}s", 2, "Received didAppear for non-active presentable");
}

uint64_t sub_10020B580(void *a1, uint64_t a2, int a3)
{
  return sub_10020A810(a1, a2, a3, "wasCollapsed: %{public}s, user initiated: %{public}s", (uint64_t)&qword_10038ED78);
}

uint64_t sub_10020B5A8(void *a1, uint64_t a2, int a3)
{
  return sub_10020A810(a1, a2, a3, "wasExpanded: %{public}s, user initiated: %{public}s", (uint64_t)&qword_10038ED80);
}

uint64_t sub_10020B5DC(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v7 = v3 + qword_10038EDC0;
  swift_beginAccess();
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a2;
  *(_WORD *)(v7 + 16) = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return sub_100207E18();
}

uint64_t type metadata accessor for SessionBannerAgent.Stage()
{
  return sub_100006BAC();
}

void sub_10020B674()
{
  uint64_t v1 = v0;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A99A0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "bannerSourceDidInvalidate", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + qword_10038EDB0);
  *(void *)(v1 + qword_10038EDB0) = 0;
}

void sub_10020B770(void *a1)
{
  uint64_t v83 = swift_isaMask & *v1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v79 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v77 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v76 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v75 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for DispatchTime();
  uint64_t v74 = *(void *)(v80 - 8);
  uint64_t v7 = __chkstk_darwin(v80);
  uint64_t v72 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v73 = (char *)&v67 - v9;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v85 = *(void *)(v10 - 8);
  uint64_t v86 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10000FD84(v13, (uint64_t)qword_1003A99A0);
  uint64_t v18 = *(void (**)(char *))(v14 + 16);
  uint64_t v82 = v17;
  v18(v16);
  swift_unknownObjectRetain_n();
  unint64_t v19 = v1;
  unint64_t v20 = Logger.logObject.getter();
  int v81 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v20, (os_log_type_t)v81);
  uint64_t v78 = v5;
  id v84 = a1;
  if (v21)
  {
    os_log_t v69 = v20;
    uint64_t v71 = v19;
    uint64_t v70 = v3;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v92 = v68;
    *(_DWORD *)uint64_t v22 = 136446466;
    id v23 = [a1 requestIdentifier];
    if (!v23)
    {
LABEL_34:

      swift_unknownObjectRelease();
      __break(1u);
      return;
    }
    char v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    *(void *)&long long aBlock = sub_1001B3178(v25, v27, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v28 = v71;
    uint64_t v29 = &v71[qword_10038EDC0];
    swift_beginAccess();
    __int16 v30 = *((_WORD *)v29 + 8);
    long long aBlock = *(_OWORD *)v29;
    LOWORD(v88) = v30;
    type metadata accessor for SessionBannerAgent.ActivePresentable();
    type metadata accessor for Optional();
    swift_unknownObjectRetain();
    unint64_t v19 = v28;
    uint64_t v31 = String.init<A>(describing:)();
    *(void *)&long long aBlock = sub_1001B3178(v31, v32, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    os_log_t v33 = v69;
    _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v81, "didDisappear: for %{public}s, active presentable == %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v3 = v70;
  }
  else
  {
    swift_unknownObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  uint64_t v35 = v85;
  uint64_t v34 = v86;
  (*(void (**)(uint64_t *, void, uint64_t))(v85 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v86);
  char v36 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v35 + 8))(v12, v34);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v37 = (uint64_t *)&v19[qword_10038EDC0];
  swift_beginAccess();
  uint64_t v38 = *v37;
  if (v38)
  {
    uint64_t v39 = &selRef_initWithExplanation_target_attributes_;
    id v40 = [(id)swift_unknownObjectRetain() requestIdentifier];
    swift_unknownObjectRelease();
    uint64_t v41 = v19;
    if (v40)
    {
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v43;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v38 = 0;
    }
  }
  else
  {
    uint64_t v41 = v19;
    uint64_t v42 = 0;
    uint64_t v39 = &selRef_initWithExplanation_target_attributes_;
  }
  id v44 = [v84 v39[131]];
  if (!v44)
  {
    char v49 = v41;
    if (!v38) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  uint64_t v45 = v44;
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;

  if (!v38)
  {
    char v49 = v41;
    if (!v48) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  if (!v48)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v49 = v41;
  if (v42 == v46 && v38 == v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    int v54 = &v49[qword_10038EDC0];
    swift_beginAccess();
    if (*(void *)v54 && v54[17] << 8 != 512)
    {
      uint64_t v56 = sub_1002080F0((uint64_t)&aBlock);
      if (*(void *)v55) {
        *(unsigned char *)(v55 + 16) = 5;
      }
      v56((uint64_t)&aBlock, 0);
      int v57 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v58 = v72;
      static DispatchTime.now()();
      uint64_t v59 = v73;
      + infix(_:_:)();
      os_log_type_t v60 = *(void (**)(char *, uint64_t))(v74 + 8);
      v60(v58, v80);
      uint64_t v61 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v62 = (void *)swift_allocObject();
      uint64_t v63 = v83;
      v62[2] = *(void *)(v83 + 80);
      void v62[3] = *(void *)(v63 + 88);
      v62[4] = v61;
      long long v90 = sub_10020C2AC;
      id v91 = v62;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      int v88 = sub_100207A1C;
      id v89 = &unk_10035EFE0;
      long long v64 = _Block_copy(&aBlock);
      swift_release();
      __int16 v65 = v75;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10007C914();
      sub_100004010((uint64_t *)&unk_10037FF80);
      sub_10004A6CC();
      uint64_t v66 = v77;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v64);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v66, v3);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v65, v78);
      v60(v59, v80);
    }
    else
    {
      sub_10020B5DC(0, 0, 0);
    }
    return;
  }
  char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_27;
  }
LABEL_23:
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Received didDisappear for non-active presentable", v52, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10020C23C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020C274()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10020C2AC()
{
}

uint64_t sub_10020C2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10020C2C8()
{
  return swift_release();
}

void sub_10020C2D0()
{
}

void sub_10020C300(void *a1)
{
  uint64_t v50 = swift_isaMask & *v1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v51 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (void *)((char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_unknownObjectRetain_n();
  uint64_t v11 = v1;
  uint64_t v12 = Logger.logObject.getter();
  int v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v48))
  {
    uint64_t v45 = v3;
    uint64_t v46 = v10;
    uint64_t v47 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    v54[0] = v44;
    *(_DWORD *)uint64_t v13 = 136446466;
    id v14 = [a1 requestIdentifier];
    char v49 = a1;
    if (!v14)
    {
LABEL_31:

      swift_unknownObjectRelease();
      __break(1u);
      return;
    }
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    *(void *)&long long v52 = sub_1001B3178(v16, v18, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    v43[1] = v13 + 14;
    id v19 = v47;
    unint64_t v20 = &v47[qword_10038EDC0];
    swift_beginAccess();
    __int16 v21 = *((_WORD *)v20 + 8);
    long long v52 = *(_OWORD *)v20;
    __int16 v53 = v21;
    type metadata accessor for SessionBannerAgent.ActivePresentable();
    type metadata accessor for Optional();
    swift_unknownObjectRetain();
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)&long long v52 = sub_1001B3178(v22, v23, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v48, "willDisappear: for %{public}s, active presentable == %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = (char *)v19;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a1 = v49;
    uint64_t v3 = v45;
  }
  else
  {
    swift_unknownObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  uint64_t v24 = v51;
  (*(void (**)(uint64_t *, void, uint64_t))(v51 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v3);
  char v25 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v5, v3);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v26 = &v11[qword_10038EDC0];
  swift_beginAccess();
  uint64_t v27 = *(void *)v26;
  if (v27)
  {
    uint64_t v28 = &selRef_initWithExplanation_target_attributes_;
    id v29 = [(id)swift_unknownObjectRetain() requestIdentifier];
    swift_unknownObjectRelease();
    if (v29)
    {
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v31;
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v27 = 0;
    }
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v28 = &selRef_initWithExplanation_target_attributes_;
  }
  id v32 = [a1 v28[131]];
  if (!v32)
  {
    if (!v27) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  os_log_t v33 = v32;
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  if (!v27)
  {
    if (!v36) {
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  if (!v36)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v30 == v34 && v27 == v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v42 = sub_1002080F0((uint64_t)&v52);
    if (*(void *)v41) {
      *(unsigned char *)(v41 + 16) = 4;
    }
    v42((uint64_t)&v52, 0);
    return;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_27;
  }
LABEL_23:
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Received willDisappear for non-active presentable", v39, 2u);
    swift_slowDealloc();
  }
}

unsigned char *sub_10020C990(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10020CA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreferredBannerLayout.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10020CB50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferredBannerLayout.Mode()
{
  return &type metadata for PreferredBannerLayout.Mode;
}

uint64_t sub_10020CB88()
{
  return swift_getWitnessTable();
}

unint64_t sub_10020CBA8()
{
  unint64_t result = qword_10038F070;
  if (!qword_10038F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038F070);
  }
  return result;
}

uint64_t sub_10020CBFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  swift_beginAccess();
  uint64_t v11 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
    swift_beginAccess();
    uint64_t v13 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress;
      swift_beginAccess();
      return sub_10000D2A0(v14, a1, &qword_10037F158);
    }
    sub_100232D08(v12 + *(int *)(v13 + 20), (uint64_t)v7, type metadata accessor for TransmissionProgress);
    uint64_t v16 = (uint64_t)v7;
  }
  else
  {
    sub_100232D08(v10 + *(int *)(v11 + 20), (uint64_t)v9, type metadata accessor for TransmissionProgress);
    uint64_t v16 = (uint64_t)v9;
  }
  sub_100233C38(v16, a1, type metadata accessor for TransmissionProgress);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

uint64_t sub_10020CE78(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  __int16 v21 = _swiftEmptyArrayStorage;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_22:
    uint64_t v13 = 8 * v9;
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + v13);
    if (*(void *)(v14 + 16))
    {
      id v15 = *(id *)(*(void *)(a1 + 48) + v13);
      swift_bridgeObjectRetain();
      unsigned __int8 v16 = [v15 integerValue];
      uint64_t v24 = _swiftEmptySetSingleton;
      if (v16) {
        sub_10012EDB4(&v23, 0);
      }
      if ((v16 & 8) != 0) {
        sub_10012EDB4(&v23, 1);
      }
      if ((v16 & 4) != 0) {
        sub_10012EDB4(&v23, 2);
      }
      if ((v16 & 0x30) != 0) {
        sub_10012EDB4(&v23, 3);
      }
      if ((v16 & 0x20) != 0) {
        sub_10012EDB4(&v23, 4);
      }
      uint64_t v17 = v24;
      if (v24[2])
      {

        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1001B2D20(0, v21[2] + 1, 1, v21);
          __int16 v21 = (void *)result;
        }
        unint64_t v19 = v21[2];
        unint64_t v18 = v21[3];
        if (v19 >= v18 >> 1)
        {
          uint64_t result = (uint64_t)sub_1001B2D20((void *)(v18 > 1), v19 + 1, 1, v21);
          __int16 v21 = (void *)result;
        }
        long long v21[2] = v19 + 1;
        unint64_t v20 = &v21[2 * v19];
        v20[4] = v14;
        v20[5] = v17;
      }
      else
      {
        swift_bridgeObjectRelease();

        uint64_t result = swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v10 >= v22) {
    goto LABEL_40;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v22) {
    goto LABEL_40;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v22) {
    goto LABEL_40;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v22) {
    goto LABEL_40;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v7);
  if (v11)
  {
LABEL_21:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v22)
  {
LABEL_40:
    swift_release();
    return (uint64_t)v21;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v22) {
      goto LABEL_40;
    }
    unint64_t v11 = *(void *)(v2 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

Swift::Int sub_10020D1A0(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    Swift::UInt v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v16);
    uint64_t result = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

Swift::Int sub_10020D388(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_35;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    Swift::UInt v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v16);
    uint64_t result = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

void sub_10020D580()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 48);
  if (v2)
  {
    if (*(void *)(v2 + 72))
    {
      uint64_t v3 = *(void *)(v2 + 72);
    }
    else
    {
      swift_retain();
      uint64_t v3 = sub_100232DD0();
      swift_bridgeObjectRetain();
      swift_release();
      if (!v3) {
        return;
      }
    }
    uint64_t v4 = *(void *)(v3 + 16);
    if ((*(unsigned char *)(v1 + 64) & 1) != 0 || (uint64_t v5 = *(void *)(v1 + 56), v5 >= v4))
    {
      if (v4)
      {
LABEL_10:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v5 & 0x8000000000000000) == 0) {
        goto LABEL_10;
      }
      __break(1u);
    }
  }
}

void sub_10020D650()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(v1 + 104);
  if (v7)
  {
    *(void *)(v1 + 104) = v7 - 1;
    sub_100223B1C();
    return;
  }
  if (qword_10037DD90 != -1) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9988);
  int64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "onConnectionGuidanceDisappear called when _connectionGuidancePresent == 0", v11, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10020D834()
{
  uint64_t countAndFlagsBits = 0;
  switch(*(unsigned char *)(*(void *)(v0 + 48) + 120))
  {
    case 1:
      unint64_t v14 = self;
      id v15 = [v14 mainBundle];
      unint64_t v16 = 0xD000000000000079;
      v46._object = (void *)0x80000001002D5470;
      v17._uint64_t countAndFlagsBits = 0x4E4F4320524F4F50;
      v17._object = (void *)0xEF4E4F495443454ELL;
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      v46._uint64_t countAndFlagsBits = 0xD000000000000079;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v15, v18, v46)._countAndFlagsBits;

      uint64_t v7 = (objc_class *)[v14 mainBundle];
      unint64_t v43 = 0x80000001002D5470;
      uint64_t v9 = 0x6E6F4320726F6F50;
      unint64_t v8 = 0xEF6E6F697463656ELL;
      goto LABEL_13;
    case 2:
      uint64_t v19 = self;
      id v20 = [v19 mainBundle];
      unint64_t v16 = 0xD000000000000039;
      unint64_t v21 = 0x80000001002D5430;
      v47._object = (void *)0x80000001002D5430;
      v22._uint64_t countAndFlagsBits = 0x4E4E4F4320544F4ELL;
      v22._object = (void *)0xED00004445544345;
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v47._uint64_t countAndFlagsBits = 0xD000000000000039;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v20, v23, v47)._countAndFlagsBits;

      id v24 = [v19 mainBundle];
      goto LABEL_12;
    case 3:
    case 7:
      return sub_100022494();
    case 4:
      int v25 = *(unsigned __int8 *)(v0 + 57);
      unint64_t v26 = self;
      id v27 = [v26 mainBundle];
      if (v25 == 1)
      {
        unint64_t v28 = 0xD00000000000004DLL;
        v48._object = (void *)0x80000001002D53E0;
        v29._uint64_t countAndFlagsBits = 0x495443454E4E4F43;
        v29._object = (void *)0xAD0000A680E2474ELL;
        v30._uint64_t countAndFlagsBits = 0;
        v30._object = (void *)0xE000000000000000;
        v48._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
        uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v27, v30, v48)._countAndFlagsBits;

        id v31 = [v26 mainBundle];
        unint64_t v44 = 0x80000001002D53E0;
        uint64_t v32 = 0x697463656E6E6F43;
        unint64_t v33 = 0xAD0000A680E2676ELL;
      }
      else
      {
        unint64_t v28 = 0xD000000000000064;
        v50._object = (void *)0x80000001002D5370;
        v39._uint64_t countAndFlagsBits = 0x43454E4E4F434552;
        v39._object = (void *)0xAFA680E2474E4954;
        v40._uint64_t countAndFlagsBits = 0;
        v40._object = (void *)0xE000000000000000;
        v50._uint64_t countAndFlagsBits = 0xD000000000000064;
        uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v27, v40, v50)._countAndFlagsBits;

        id v31 = [v26 mainBundle];
        unint64_t v44 = 0x80000001002D5370;
        uint64_t v32 = 0x63656E6E6F636552;
        unint64_t v33 = 0xAFA680E2676E6974;
      }
      v41._uint64_t countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      unint64_t v42 = v28;
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v32, (Swift::String_optional)0, (NSBundle)v31, v41, *(Swift::String *)(&v44 - 1));

      return countAndFlagsBits;
    case 5:
      return sub_1000225B8();
    case 6:
      uint64_t v34 = self;
      id v35 = [v34 mainBundle];
      unint64_t v16 = 0xD000000000000051;
      unint64_t v21 = 0x80000001002D5310;
      v49._object = (void *)0x80000001002D5310;
      v36._uint64_t countAndFlagsBits = 0x4E4E4F4320544F4ELL;
      v36._object = (void *)0xED00004445544345;
      v37._uint64_t countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      v49._uint64_t countAndFlagsBits = 0xD000000000000051;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v49)._countAndFlagsBits;

      id v24 = [v34 mainBundle];
LABEL_12:
      uint64_t v7 = (objc_class *)v24;
      unint64_t v43 = v21;
      uint64_t v9 = 0x6E6E6F4320746F4ELL;
      unint64_t v8 = 0xED00006465746365;
LABEL_13:
      v10.super.Class isa = v7;
      uint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      unint64_t v13 = v16;
      goto LABEL_14;
    case 8:
      return sub_1000226E8();
    case 9:
      return countAndFlagsBits;
    default:
      uint64_t v3 = self;
      id v4 = [v3 mainBundle];
      v45._object = (void *)0x80000001002D54F0;
      v5._uint64_t countAndFlagsBits = 0x455443454E4E4F43;
      v5._object = (void *)0xE900000000000044;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      v45._uint64_t countAndFlagsBits = 0xD000000000000035;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v45)._countAndFlagsBits;

      uint64_t v7 = (objc_class *)[v3 mainBundle];
      unint64_t v8 = 0xE900000000000064;
      unint64_t v43 = 0x80000001002D54F0;
      uint64_t v9 = 0x657463656E6E6F43;
      v10.super.Class isa = v7;
      uint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      unint64_t v13 = 0xD000000000000035;
LABEL_14:
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, (Swift::String_optional)0, v10, *(Swift::String *)&v11, *(Swift::String *)&v13);

      return countAndFlagsBits;
  }
}

uint64_t sub_10020DDEC(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038B448);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v21[-v6];
  uint64_t v8 = sub_100004010(&qword_100380788);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v13 = &v21[-v12];
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    static DispatchTime.now()();
    uint64_t v16 = type metadata accessor for DispatchTime();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
    sub_10000D544((uint64_t)v13, (uint64_t)v11, &qword_100380788);
    uint64_t v17 = v15 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_responseReceivedAt;
    swift_beginAccess();
    sub_100156648((uint64_t)v11, v17, &qword_100380788);
    swift_endAccess();
    swift_release();
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = *(void *)(result + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_model);
    swift_retain();
    swift_release();
    sub_10000D2A0(a1, (uint64_t)v7, &qword_10038B448);
    uint64_t v20 = v19 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
    swift_beginAccess();
    sub_10000D2A0(v20, (uint64_t)v5, &qword_10038B448);
    sub_10022AEE8((uint64_t)v7);
    swift_beginAccess();
    sub_1001B6344((uint64_t)v7, v20, &qword_10038B448);
    swift_endAccess();
    sub_10022B274((uint64_t)v5);
    sub_10000950C((uint64_t)v7, &qword_10038B448);
    sub_10000950C((uint64_t)v5, &qword_10038B448);
    return swift_release();
  }
  return result;
}

uint64_t sub_10020E084()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100390ED8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v126 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v121 = *(void *)(v5 - 8);
  uint64_t v122 = v5;
  __chkstk_darwin(v5);
  uint64_t v120 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100390EE0);
  uint64_t v124 = *(void *)(v7 - 8);
  uint64_t v125 = v7;
  __chkstk_darwin(v7);
  uint64_t v123 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100004010(&qword_100390EE8);
  uint64_t v118 = *(void *)(v119 - 8);
  uint64_t v9 = __chkstk_darwin(v119);
  long long v108 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  long long v109 = (char *)&v95 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v110 = (char *)&v95 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  long long v111 = (char *)&v95 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  long long v112 = (char *)&v95 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  long long v113 = (char *)&v95 - v20;
  __chkstk_darwin(v19);
  long long v117 = (char *)&v95 - v21;
  uint64_t v116 = sub_100004010(&qword_100390EF0);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  long long v114 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100004010(&qword_100390EF8);
  uint64_t v107 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  long long v106 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100004010(&qword_100390F00);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  long long v103 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100004010(&qword_100390F08);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  long long v99 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v26 - 8);
  char v136 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004010(&qword_100390F10);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  long long v96 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SystemSettingsModel();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 32) = 0;
  *(_DWORD *)(v29 + 40) = 33685504;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v29 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v29 + 24) = PassthroughSubject.init()();
  *(void *)(v0 + 16) = v29;
  type metadata accessor for OrientationModel();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)(v30 + 48) = 0u;
  *(_OWORD *)(v30 + 64) = 0u;
  *(_OWORD *)(v30 + 80) = 0u;
  *(void *)(v30 + 96) = 0;
  *(unsigned char *)(v30 + 104) = 1;
  swift_allocObject();
  *(void *)(v30 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v30 + 24) = PassthroughSubject.init()();
  *(void *)(v0 + 24) = v30;
  type metadata accessor for StewieModel();
  uint64_t v31 = swift_allocObject();
  sub_100229004();
  *(void *)(v1 + 32) = v31;
  type metadata accessor for TargetModel(0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 48) = 0u;
  *(_OWORD *)(v32 + 64) = 0u;
  *(void *)(v32 + 80) = 0;
  *(unsigned char *)(v32 + 88) = 1;
  uint64_t v33 = v32 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link;
  uint64_t v34 = type metadata accessor for LinkState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *(void *)(v32 + 32) = 0;
  *(_WORD *)(v32 + 40) = 0;
  swift_allocObject();
  *(void *)(v32 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v32 + 24) = PassthroughSubject.init()();
  *(void *)(v1 + 40) = v32;
  type metadata accessor for LocationModel();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 32) = 0;
  *(_DWORD *)(v35 + 40) = 0x1000000;
  swift_allocObject();
  *(void *)(v35 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v35 + 24) = PassthroughSubject.init()();
  *(void *)(v1 + 48) = v35;
  type metadata accessor for GuidanceModel(0);
  swift_allocObject();
  *(void *)(v1 + 56) = sub_100222944();
  type metadata accessor for GuidanceMessagesModel();
  uint64_t v36 = swift_allocObject();
  sub_100225C54();
  *(void *)(v1 + 64) = v36;
  type metadata accessor for ConnectionModel(0);
  swift_allocObject();
  *(void *)(v1 + 72) = sub_10021B7C4();
  type metadata accessor for ConversationModel();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 48) = 0;
  *(void *)(v37 + 56) = 0;
  *(_OWORD *)(v37 + 64) = xmmword_1002C1B70;
  *(unsigned char *)(v37 + 80) = 0;
  *(void *)(v37 + 32) = 0;
  *(_WORD *)(v37 + 40) = 0;
  swift_allocObject();
  *(void *)(v37 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v37 + 24) = PassthroughSubject.init()();
  *(void *)(v1 + 80) = v37;
  type metadata accessor for RoadsideAssistanceConversationModel();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 48) = xmmword_1002B5350;
  *(void *)(v38 + 32) = 0;
  *(_WORD *)(v38 + 40) = 0;
  *(void *)(v38 + 72) = 0;
  *(void *)(v38 + 80) = 0;
  *(void *)(v38 + 64) = 0;
  *(unsigned char *)(v38 + 88) = 0;
  swift_allocObject();
  *(void *)(v38 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v38 + 24) = PassthroughSubject.init()();
  *(void *)(v1 + 88) = v38;
  type metadata accessor for ConnectivityModel();
  swift_allocObject();
  *(void *)(v1 + 96) = sub_100226188();
  type metadata accessor for CountryModel();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 32) = 0;
  *(_WORD *)(v39 + 40) = 0;
  *(void *)(v39 + 48) = 0;
  *(void *)(v39 + 56) = 0;
  *(unsigned char *)(v39 + 64) = 0;
  swift_allocObject();
  *(void *)(v39 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v39 + 24) = PassthroughSubject.init()();
  *(void *)(v1 + 104) = v39;
  type metadata accessor for ConnectionClosedModel(0);
  uint64_t v40 = swift_allocObject();
  sub_100228608();
  *(void *)(v1 + 112) = v40;
  type metadata accessor for PartnerModel();
  uint64_t v41 = swift_allocObject();
  sub_1002274BC();
  *(void *)(v1 + 120) = v41;
  type metadata accessor for ServiceOutageModel(0);
  uint64_t v42 = swift_allocObject();
  sub_10021B40C();
  *(void *)(v1 + 128) = v42;
  type metadata accessor for ServicePredictionsModel(0);
  uint64_t v43 = swift_allocObject();
  sub_10022CC7C();
  *(void *)(v1 + 136) = v43;
  type metadata accessor for DeviceOrientationSource(0);
  swift_allocObject();
  *(void *)(v1 + 144) = sub_1001CBAA0();
  *(void *)(v1 + 152) = [objc_allocWithZone((Class)type metadata accessor for TargetConnectionSource(0)) init];
  uint64_t v127 = v3;
  uint64_t v128 = v2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    unint64_t v44 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    unint64_t v44 = _swiftEmptySetSingleton;
  }
  *(void *)(v1 + 160) = v44;
  swift_allocObject();
  *(void *)(v1 + 168) = PassthroughSubject.init()();
  *(unsigned char *)(v1 + 176) = 0;
  uint64_t v45 = sub_100004010(&qword_100387698);
  swift_allocObject();
  *(void *)(v1 + 184) = PassthroughSubject.init()();
  uint64_t v102 = v45;
  swift_allocObject();
  uint64_t v46 = PassthroughSubject.init()();
  uint64_t v137 = v1 + 160;
  *(void *)(v1 + 192) = v46;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v47 = type metadata accessor for Logger();
  sub_10000FD84(v47, (uint64_t)qword_1003A9958);
  swift_retain_n();
  Swift::String v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    Swift::String v50 = (uint8_t *)swift_slowAlloc();
    id v138 = (id)swift_slowAlloc();
    *(_DWORD *)Swift::String v50 = 136446210;
    id v139 = (id)v1;
    type metadata accessor for ConnectionAssistantModels();
    swift_retain();
    uint64_t v51 = String.init<A>(describing:)();
    id v139 = (id)sub_1001B3178(v51, v52, (uint64_t *)&v138);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "[%{public}s] init", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v138 = *(id *)(*(void *)(v1 + 144) + 16);
  unint64_t v53 = sub_10000FDBC();
  swift_retain();
  id v139 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v134 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v54 = *(void *)(v134 - 8);
  long long v133 = *(void (**)(void))(v54 + 56);
  uint64_t v55 = v54 + 56;
  uint64_t v56 = (uint64_t)v136;
  v133();
  uint64_t v132 = v55;
  sub_100004010(&qword_10038D298);
  uint64_t v135 = &protocol conformance descriptor for PassthroughSubject<A, B>;
  sub_100009B18(&qword_100390F18, &qword_10038D298);
  uint64_t v130 = sub_1002340A0((unint64_t *)&qword_100393AC0, (void (*)(uint64_t))sub_10000FDBC);
  int v57 = v96;
  Publisher.receive<A>(on:options:)();
  sub_10000950C(v56, &qword_1003924A0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100009B18(&qword_100390F20, &qword_100390F10);
  uint64_t v58 = v98;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v57, v58);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v138 = *(id *)(*(void *)(v1 + 144) + 24);
  swift_retain();
  unint64_t v131 = v53;
  id v139 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v59 = v134;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v133)(v56, 1, 1, v134);
  sub_100004010((uint64_t *)&unk_10038D2A0);
  sub_100009B18(&qword_100390F28, (uint64_t *)&unk_10038D2A0);
  os_log_type_t v60 = v99;
  Publisher.receive<A>(on:options:)();
  sub_10000950C(v56, &qword_1003924A0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  char v129 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100009B18(&qword_100390F30, &qword_100390F08);
  uint64_t v61 = v101;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v60, v61);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v138 = *(id *)(*(void *)(v1 + 152) + OBJC_IVAR____TtC8SOSBuddy22TargetConnectionSource_connectionDidChange);
  swift_retain();
  id v139 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v62 = (uint64_t)v136;
  uint64_t v63 = v59;
  long long v64 = v133;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v136, 1, 1, v63);
  sub_100004010(&qword_1003881C0);
  sub_100009B18(&qword_100390F38, &qword_1003881C0);
  __int16 v65 = v103;
  Publisher.receive<A>(on:options:)();
  sub_10000950C(v62, &qword_1003924A0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100009B18(&qword_100390F40, &qword_100390F00);
  uint64_t v66 = v105;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v65, v66);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v138 = *(id *)(*(void *)(v1 + 152) + OBJC_IVAR____TtC8SOSBuddy22TargetConnectionSource_carrierNameDidChange);
  swift_retain();
  id v139 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v67 = (uint64_t)v136;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v64)(v136, 1, 1, v134);
  sub_100004010(&qword_1003881C8);
  sub_100009B18(&qword_100390F48, &qword_1003881C8);
  uint64_t v68 = v106;
  Publisher.receive<A>(on:options:)();
  sub_10000950C(v67, &qword_1003924A0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100009B18(&qword_100390F50, &qword_100390EF8);
  uint64_t v69 = v95;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v69);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v70 = *(void *)(v1 + 32);
  id v138 = *(id *)(*(void *)(v1 + 24) + 24);
  id v139 = *(id *)(v70 + 24);
  uint64_t v107 = sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  uint64_t v71 = v108;
  Publisher.merge(with:)();
  id v138 = *(id *)(*(void *)(v1 + 40) + 24);
  uint64_t v72 = v109;
  uint64_t v73 = v119;
  Publishers.MergeMany.merge(with:)();
  uint64_t v74 = *(void (**)(char *, uint64_t))(v118 + 8);
  v74(v71, v73);
  id v138 = *(id *)(*(void *)(v1 + 72) + 24);
  id v75 = v110;
  Publishers.MergeMany.merge(with:)();
  v74(v72, v73);
  id v138 = *(id *)(*(void *)(v1 + 48) + 24);
  uint64_t v76 = v111;
  Publishers.MergeMany.merge(with:)();
  v74(v75, v73);
  id v138 = *(id *)(*(void *)(v1 + 128) + 24);
  uint64_t v77 = v112;
  Publishers.MergeMany.merge(with:)();
  v74(v76, v73);
  id v138 = *(id *)(*(void *)(v1 + 136) + 24);
  uint64_t v78 = v113;
  Publishers.MergeMany.merge(with:)();
  v74(v77, v73);
  id v138 = *(id *)(v1 + 168);
  uint64_t v79 = v117;
  Publishers.MergeMany.merge(with:)();
  v74(v78, v73);
  id v138 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v80 = (uint64_t)v136;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v133)(v136, 1, 1, v134);
  uint64_t v134 = sub_100009B18(&qword_100390F58, &qword_100390EE8);
  int v81 = v114;
  Publisher.receive<A>(on:options:)();
  sub_10000950C(v80, &qword_1003924A0);

  v74(v79, v73);
  uint64_t v82 = swift_allocObject();
  swift_weakInit();
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_100233EDC;
  *(void *)(v83 + 24) = v82;
  sub_100009B18(&qword_100390F60, &qword_100390EF0);
  uint64_t v84 = v116;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v81, v84);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v138 = *(id *)(*(void *)(v1 + 24) + 24);
  id v139 = *(id *)(*(void *)(v1 + 56) + 24);
  Publisher.merge(with:)();
  uint64_t v85 = v120;
  OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)();
  uint64_t v86 = (void *)static OS_dispatch_queue.main.getter();
  id v138 = v86;
  long long v87 = v123;
  Publisher.throttle<A>(for:scheduler:latest:)();

  (*(void (**)(char *, uint64_t))(v121 + 8))(v85, v122);
  v74(v79, v73);
  uint64_t v88 = swift_allocObject();
  swift_weakInit();
  uint64_t v89 = swift_allocObject();
  *(void *)(v89 + 16) = sub_100233EE4;
  *(void *)(v89 + 24) = v88;
  sub_100009B18(&qword_100390F68, &qword_100390EE0);
  uint64_t v90 = v125;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v87, v90);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v138 = *(id *)(v1 + 184);
  sub_100009B18(&qword_100393B60, &qword_100387698);
  id v91 = v126;
  Publisher<>.removeDuplicates()();
  sub_100009B18(&qword_100390F70, &qword_100390ED8);
  uint64_t v92 = v128;
  Publisher<>.sink(receiveValue:)();
  uint64_t v93 = *(void (**)(char *, uint64_t))(v127 + 8);
  v93(v91, v92);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v138 = *(id *)(v1 + 192);
  Publisher<>.removeDuplicates()();
  Publisher<>.sink(receiveValue:)();
  v93(v91, v92);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return v1;
}

uint64_t sub_10020FAE0(uint64_t *a1)
{
  long long v1 = *((_OWORD *)a1 + 1);
  long long v2 = *((_OWORD *)a1 + 3);
  _OWORD v24[2] = *((_OWORD *)a1 + 2);
  v24[3] = v2;
  uint64_t v4 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v25 = v3;
  v24[0] = *(_OWORD *)a1;
  v24[1] = v1;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v23 = a1[6];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(result + 24);
    swift_retain();
    swift_release();
    double v13 = *(double *)(v12 + 32);
    double v21 = *(double *)(v12 + 48);
    double v22 = *(double *)(v12 + 40);
    double v19 = *(double *)(v12 + 64);
    double v20 = *(double *)(v12 + 56);
    double v17 = *(double *)(v12 + 80);
    double v18 = *(double *)(v12 + 72);
    double v15 = *(double *)(v12 + 96);
    double v16 = *(double *)(v12 + 88);
    char v14 = *(unsigned char *)(v12 + 104);
    if (v14) {
      goto LABEL_4;
    }
    v27[0] = *(double *)(v12 + 32);
    v27[1] = v22;
    _OWORD v27[2] = v21;
    v27[3] = v20;
    v27[4] = v19;
    v27[5] = v18;
    v27[6] = v17;
    v27[7] = v16;
    v27[8] = v15;
    if (!sub_1001D6F9C(v27, (double *)v24))
    {
LABEL_4:
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(void *)(v12 + 32) = v5;
    *(void *)(v12 + 40) = v6;
    *(void *)(v12 + 48) = v8;
    *(void *)(v12 + 56) = v7;
    *(void *)(v12 + 64) = v9;
    *(void *)(v12 + 72) = v10;
    *(void *)(v12 + 80) = v23;
    *(void *)(v12 + 88) = v4;
    *(void *)(v12 + 96) = v3;
    *(unsigned char *)(v12 + 104) = 0;
    if (v14) {
      goto LABEL_7;
    }
    v26[0] = v13;
    v26[1] = v22;
    v26[2] = v21;
    v26[3] = v20;
    v26[4] = v19;
    _OWORD v26[5] = v18;
    v26[6] = v17;
    v26[7] = v16;
    v26[8] = v15;
    if (!sub_1001D6F9C((double *)v24, v26))
    {
LABEL_7:
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    return swift_release();
  }
  return result;
}

void *sub_10020FD38(char *a1)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v3 = result;
  uint64_t v4 = result[2];
  uint64_t v5 = *(void *)(v4 + 32);
  BOOL v6 = __CFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v4 + 32) = v7;
  char v8 = *a1;
  swift_retain();
  sub_1002165F4(v8);
  sub_100216970(a1[1]);
  sub_10024572C(v4);
  swift_release();
  if (*((unsigned char *)v3 + 176) != 1) {
    return (void *)swift_release();
  }
  sub_100004010(&qword_100390F78);
  uint64_t result = (void *)swift_initStackObject();
  *((_OWORD *)result + 1) = xmmword_1002B31C0;
  uint64_t v9 = v3[7];
  result[4] = v9;
  result[5] = &off_100360370;
  uint64_t v10 = v3[8];
  result[6] = v10;
  result[7] = &off_100360370;
  uint64_t v11 = *(void *)(v9 + 32);
  BOOL v6 = __CFADD__(v11, 1);
  uint64_t v12 = v11 + 1;
  if (v6) {
    goto LABEL_12;
  }
  *(void *)(v9 + 32) = v12;
  uint64_t v13 = *(void *)(v10 + 32);
  BOOL v6 = __CFADD__(v13, 1);
  uint64_t v14 = v13 + 1;
  if (v6)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  double v15 = result;
  *(void *)(v10 + 32) = v14;
  uint64_t v16 = (uint64_t)&a1[*(int *)(type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0) + 24)];
  swift_retain_n();
  swift_retain();
  sub_10020FFA8(v16);
  swift_release();
  uint64_t v17 = v3[8];
  swift_retain();
  *(void *)(v17 + 80) = sub_1002331B8(v16);
  swift_release();
  uint64_t v18 = *(void *)(v17 + 80);
  if (!v18)
  {
    uint64_t v18 = *(void *)(v17 + 88);
    swift_retain();
  }
  swift_retain();
  sub_1002234F0(v18);
  swift_release();
  uint64_t v19 = v15[7];
  swift_bridgeObjectRetain();
  uint64_t ObjectType = swift_getObjectType();
  double v21 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
  swift_unknownObjectRetain();
  v21(ObjectType, v19);
  swift_unknownObjectRelease();
  uint64_t v22 = v15[5];
  uint64_t v23 = swift_getObjectType();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 16);
  swift_unknownObjectRetain();
  v24(v23, v22);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_setDeallocating();
  sub_100004010(&qword_100390F88);
  return (void *)swift_arrayDestroy();
}

uint64_t sub_10020FFA8(uint64_t a1)
{
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  uint64_t v3 = type metadata accessor for DeviceOrientationError(0);
  char v4 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3) != 1;
  sub_10022285C(v4);
  uint64_t result = sub_100221154();
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_1002100E4(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100387FA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v114 - v6;
  uint64_t v8 = sub_100004010((uint64_t *)&unk_100383910);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v114 - v12;
  uint64_t v137 = type metadata accessor for ConnectionAssistantState(0);
  __chkstk_darwin(v137);
  double v15 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v17 = (void *)result;
  uint64_t v123 = v13;
  uint64_t v124 = v11;
  uint64_t v125 = v7;
  uint64_t v126 = v5;
  sub_100004010(&qword_100390F78);
  uint64_t v18 = swift_allocObject();
  uint64_t v136 = a1;
  uint64_t v140 = (uint64_t *)v15;
  uint64_t v19 = v18;
  *(_OWORD *)(v18 + 16) = xmmword_1002C1B80;
  uint64_t v20 = v17[4];
  *(void *)(v18 + 32) = v20;
  *(void *)(v18 + 40) = &off_100360370;
  uint64_t v21 = v17[5];
  *(void *)(v18 + 48) = v21;
  *(void *)(v18 + 56) = &off_100360370;
  uint64_t v22 = v17[6];
  *(void *)(v18 + 64) = v22;
  *(void *)(v18 + 72) = &off_100360370;
  uint64_t v23 = v17[9];
  *(void *)(v18 + 80) = v23;
  *(void *)(v18 + 88) = &off_100360370;
  uint64_t v129 = v17[10];
  *(void *)(v18 + 96) = v129;
  *(void *)(v18 + 104) = &off_100360370;
  uint64_t v130 = v17[11];
  *(void *)(v18 + 112) = v130;
  *(void *)(v18 + 120) = &off_100360370;
  uint64_t v131 = v17[7];
  *(void *)(v18 + 128) = v131;
  *(void *)(v18 + 136) = &off_100360370;
  uint64_t v132 = v17[8];
  *(void *)(v18 + 144) = v132;
  *(void *)(v18 + 152) = &off_100360370;
  long long v133 = (uint64_t *)v17[13];
  *(void *)(v18 + 160) = v133;
  *(void *)(v18 + 168) = &off_100360370;
  uint64_t v134 = v17[14];
  *(void *)(v18 + 176) = v134;
  *(void *)(v18 + 184) = &off_100360370;
  uint64_t v135 = v17[12];
  *(void *)(v18 + 192) = v135;
  *(void *)(v18 + 200) = &off_100360370;
  uint64_t v138 = v17[15];
  *(void *)(v18 + 208) = v138;
  *(void *)(v18 + 216) = &off_100360370;
  id v139 = (int *)v17[16];
  *(void *)(v18 + 224) = v139;
  *(void *)(v18 + 232) = &off_100360370;
  uint64_t v128 = v17;
  uint64_t v119 = v17[17];
  *(void *)(v18 + 240) = v119;
  *(void *)(v18 + 248) = &off_100360370;
  swift_getObjectType();
  uint64_t v120 = v20;
  sub_100245834();
  swift_getObjectType();
  uint64_t v121 = v21;
  sub_100245834();
  swift_getObjectType();
  uint64_t v122 = v22;
  sub_100245834();
  swift_getObjectType();
  uint64_t v127 = v23;
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  swift_getObjectType();
  sub_100245834();
  uint64_t v24 = v119;
  swift_getObjectType();
  sub_100245834();
  uint64_t v25 = v140;
  sub_100232D08(v136, (uint64_t)v140, type metadata accessor for ConnectionAssistantState);
  sub_10000D544((uint64_t)v25, (uint64_t)v169, &qword_100382698);
  uint64_t v26 = *v25;
  uint64_t v27 = *(void *)(v24 + 56);
  char v28 = *(unsigned char *)(v24 + 96);
  sub_10000D544((uint64_t)v169, v24 + 56, &qword_100382698);
  sub_10000D544((uint64_t)v169, (uint64_t)v184, &qword_100382698);
  if (v184[40])
  {
    swift_retain();
    uint64_t v29 = v128;
    if (v28)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_15;
    }
  }
  else
  {
    if ((v28 & 1) == 0)
    {
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v29 = v128;
      if (v26 == v27
        && (static Angle.== infix(_:_:)() & 1) != 0
        && (static Angle.== infix(_:_:)() & 1) != 0
        && (static Angle.== infix(_:_:)() & 1) != 0
        && (static Angle.== infix(_:_:)() & 1) != 0)
      {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    swift_retain();
    uint64_t v29 = v128;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
LABEL_13:
  sub_10022AA30();
  sub_1002292C8();
LABEL_14:
  swift_release();
LABEL_15:
  uint64_t v30 = v29[4];
  uint64_t v31 = (uint64_t *)((char *)v140 + *(int *)(v137 + 60));
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  uint64_t v129 = v31[2];
  uint64_t v127 = v31[3];
  uint64_t v34 = (int *)v31[4];
  uint64_t v138 = v31[5];
  id v139 = v34;
  uint64_t v130 = v31[6];
  uint64_t v131 = v32;
  uint64_t v121 = v31[7];
  uint64_t v132 = v31[8];
  long long v133 = v31;
  uint64_t v35 = v31[9];
  uint64_t v134 = v31[10];
  uint64_t v135 = v35;
  sub_10000D544(v30 + 56, (uint64_t)v170, &qword_1003826B8);
  uint64_t v37 = *(void *)(v30 + 56);
  uint64_t v36 = *(void *)(v30 + 64);
  uint64_t v38 = *(void *)(v30 + 72);
  uint64_t v39 = *(int **)(v30 + 88);
  uint64_t v114 = *(void *)(v30 + 80);
  uint64_t v115 = v39;
  uint64_t v40 = *(void *)(v30 + 104);
  uint64_t v116 = *(void *)(v30 + 96);
  uint64_t v117 = v40;
  unint64_t v41 = *(void *)(v30 + 120);
  uint64_t v42 = *(void *)(v30 + 128);
  uint64_t v118 = *(void *)(v30 + 112);
  uint64_t v119 = v42;
  uint64_t v120 = *(void *)(v30 + 136);
  sub_10000D544((uint64_t)v170, (uint64_t)v183, &qword_1003826B8);
  uint64_t v122 = v33;
  uint64_t v43 = v33;
  if (!v183[1])
  {
    if (!v33)
    {
      swift_retain();
      uint64_t v46 = v130;
      uint64_t v47 = v131;
      uint64_t v51 = v129;
      uint64_t v52 = v127;
      uint64_t v44 = v121;
      sub_100094728(v131, 0);
      goto LABEL_25;
    }
LABEL_23:
    uint64_t v141 = v37;
    uint64_t v142 = v36;
    uint64_t v143 = v38;
    uint64_t v144 = v114;
    char v145 = v115;
    uint64_t v146 = v116;
    uint64_t v147 = v117;
    uint64_t v148 = v118;
    unint64_t v149 = v41;
    uint64_t v150 = v119;
    uint64_t v44 = v121;
    uint64_t v151 = v120;
    uint64_t v152 = v131;
    uint64_t v53 = v129;
    uint64_t v153 = v43;
    uint64_t v154 = v129;
    uint64_t v52 = v127;
    uint64_t v155 = v127;
    uint64_t v156 = v139;
    uint64_t v157 = v138;
    uint64_t v158 = v130;
    uint64_t v159 = v121;
    uint64_t v160 = v132;
    uint64_t v161 = v135;
    uint64_t v162 = v134;
    sub_100094728(v131, v43);
    sub_100233E60(v170, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    swift_retain();
    uint64_t v47 = v131;
    uint64_t v51 = v53;
    uint64_t v29 = v128;
    uint64_t v46 = v130;
    sub_100094728(v131, v43);
    sub_100094668(&v141);
    if (*(void *)(v30 + 32)) {
      goto LABEL_19;
    }
    goto LABEL_24;
  }
  if (!v33)
  {
    sub_100233E60(v170, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    goto LABEL_23;
  }
  LOBYTE(v141) = v131;
  uint64_t v142 = v33;
  LOWORD(v143) = v129 & 0xFF01;
  uint64_t v144 = v127;
  char v145 = v139;
  uint64_t v146 = v138;
  uint64_t v147 = v130;
  uint64_t v44 = v121;
  uint64_t v148 = v121;
  LOWORD(v149) = v132;
  uint64_t v150 = v135;
  uint64_t v151 = v134;
  unint64_t v45 = v41 >> 8;
  v171[0] = v37;
  uint64_t v172 = v36;
  uint64_t v46 = v130;
  __int16 v173 = v38 & 0xFF01;
  uint64_t v174 = v114;
  uint64_t v175 = v115;
  uint64_t v176 = v116;
  uint64_t v177 = v117;
  uint64_t v178 = v118;
  char v179 = v41;
  uint64_t v47 = v131;
  char v180 = v45;
  uint64_t v181 = v119;
  uint64_t v182 = v120;
  uint64_t v48 = v43;
  BOOL v49 = sub_1000205F0((uint64_t)v171, (uint64_t)&v141);
  sub_100233E60(v170, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
  swift_retain();
  uint64_t v50 = v48;
  uint64_t v51 = v129;
  uint64_t v52 = v127;
  sub_100094728(v47, v50);
  if (!v49)
  {
    if (*(void *)(v30 + 32))
    {
LABEL_19:
      *(unsigned char *)(v30 + 40) = 1;
      goto LABEL_25;
    }
LABEL_24:
    uint64_t v127 = *(void *)(v30 + 16);
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
LABEL_25:
  uint64_t v54 = *(void *)(v30 + 56);
  uint64_t v55 = *(void *)(v30 + 64);
  uint64_t v56 = v122;
  *(void *)(v30 + 56) = v47;
  *(void *)(v30 + 64) = v56;
  *(void *)(v30 + 72) = v51;
  *(void *)(v30 + 80) = v52;
  uint64_t v57 = v138;
  *(void *)(v30 + 88) = v139;
  *(void *)(v30 + 96) = v57;
  *(void *)(v30 + 104) = v46;
  *(void *)(v30 + 112) = v44;
  uint64_t v58 = v135;
  *(void *)(v30 + 120) = v132;
  *(void *)(v30 + 128) = v58;
  *(void *)(v30 + 136) = v134;
  sub_100093F40(v54, v55);
  sub_100228A6C(v170);
  id v139 = (int *)sub_100093F40;
  sub_100233E60(v170, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
  swift_release();
  uint64_t v59 = v29[5];
  sub_10000D544(v59 + 48, (uint64_t)v168, &qword_100382698);
  swift_retain();
  sub_100216AA0((uint64_t)v169);
  sub_10000D544((uint64_t)v169, v59 + 48, &qword_100382698);
  sub_100216C00((uint64_t)v168);
  swift_release();
  uint64_t v60 = v29[5];
  uint64_t v61 = (int *)v137;
  uint64_t v62 = v140;
  uint64_t v138 = (uint64_t)v140 + *(int *)(v137 + 36);
  uint64_t v63 = (uint64_t)v123;
  sub_10000D2A0(v138, (uint64_t)v123, (uint64_t *)&unk_100383910);
  uint64_t v64 = v60 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link;
  swift_beginAccess();
  uint64_t v65 = (uint64_t)v124;
  sub_10000D2A0(v64, (uint64_t)v124, (uint64_t *)&unk_100383910);
  sub_100216FDC(v63);
  swift_beginAccess();
  sub_1001B6344(v63, v64, (uint64_t *)&unk_100383910);
  swift_endAccess();
  sub_100217304(v65);
  sub_10000950C(v63, (uint64_t *)&unk_100383910);
  sub_10000950C(v65, (uint64_t *)&unk_100383910);
  sub_10000D544((uint64_t)v133, (uint64_t)v167, &qword_1003826B8);
  swift_retain();
  sub_100233E60(v167, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
  sub_100211360(v138, (uint64_t)v167);
  sub_100233E60(v167, (void (*)(void, void, void, void, void, void, void, void, void, void, void))v139);
  swift_release();
  uint64_t v66 = v29[10];
  sub_10000D544((uint64_t)v62 + v61[10], (uint64_t)v166, &qword_10038B210);
  sub_10000D544(v66 + 48, (uint64_t)v165, &qword_10038B210);
  swift_retain();
  sub_1002275F0((uint64_t)v166);
  sub_10000D544((uint64_t)v166, v66 + 48, &qword_10038B210);
  sub_100227758((uint64_t)v165);
  swift_release();
  uint64_t v67 = v29[11];
  sub_10000D544((uint64_t)v62 + v61[11], (uint64_t)v164, &qword_100382458);
  sub_10000D544(v67 + 48, (uint64_t)v163, &qword_100382458);
  swift_retain();
  sub_100227AD4((uint64_t)v164);
  sub_10000D544((uint64_t)v164, v67 + 48, &qword_100382458);
  sub_100227C60((uint64_t)v163);
  swift_release();
  LOBYTE(v63) = *((unsigned char *)v62 + 41);
  swift_retain();
  sub_100211824(v63);
  swift_release();
  LOWORD(v63) = *((unsigned __int8 *)v62 + 42);
  LOWORD(v65) = *((unsigned __int8 *)v62 + 43);
  swift_retain();
  sub_10021191C(v63 | ((_WORD)v65 << 8));
  swift_release();
  uint64_t v68 = v29[13];
  uint64_t v69 = (uint64_t *)((char *)v62 + v61[12]);
  uint64_t v70 = *v69;
  uint64_t v71 = v69[1];
  uint64_t v72 = *(void *)(v68 + 48);
  uint64_t v73 = *(void *)(v68 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100228050(v70, v71);
  *(void *)(v68 + 48) = v70;
  *(void *)(v68 + 56) = v71;
  swift_bridgeObjectRelease();
  sub_100228110(v72, v73);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v74 = (uint64_t)v62 + v61[14];
  id v139 = (int *)type metadata accessor for TargetConnection(0);
  LODWORD(v72) = *(unsigned __int8 *)(v136 + v139[6]);
  swift_retain();
  sub_100211A04(v74, v72);
  swift_release();
  uint64_t v75 = (uint64_t)v62 + v61[7];
  uint64_t v76 = (uint64_t)v62 + v61[8];
  swift_retain();
  sub_1002123A4(v75, v76);
  swift_release();
  uint64_t v77 = (unint64_t *)((char *)v62 + v61[13]);
  unint64_t v78 = *v77;
  uint64_t v79 = v77[1];
  swift_retain();
  sub_10012862C(v78);
  sub_100212790(v78, v79);
  sub_100128674(v78);
  swift_release();
  uint64_t v80 = v29[7];
  uint64_t v81 = *(unsigned __int8 *)(v80 + 65);
  *(unsigned char *)(v80 + 65) = *(unsigned char *)(*(void *)(v29[9] + 56) + 120);
  swift_retain();
  sub_100221400(v81);
  swift_release();
  uint64_t v82 = v29[6];
  uint64_t v83 = v29[7];
  BOOL v84 = (*(unsigned char *)(v82 + 43) & 1) == 0 && (*(unsigned char *)(v82 + 42) & 1) == 0;
  uint64_t v85 = *(unsigned __int8 *)(v83 + 66);
  *(unsigned char *)(v83 + 66) = v84;
  swift_retain();
  sub_1002216DC(v85);
  swift_release();
  uint64_t v86 = v29[7];
  uint64_t v87 = v29[16] + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  uint64_t v88 = (uint64_t)v125;
  sub_10000D2A0(v87, (uint64_t)v125, &qword_100387FA0);
  uint64_t v89 = v86 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages;
  swift_beginAccess();
  uint64_t v90 = (uint64_t)v126;
  sub_10000D2A0(v89, (uint64_t)v126, &qword_100387FA0);
  swift_beginAccess();
  sub_1001B6344(v88, v89, &qword_100387FA0);
  swift_endAccess();
  sub_1002219B4(v90);
  sub_10000950C(v88, &qword_100387FA0);
  sub_10000950C(v90, &qword_100387FA0);
  uint64_t v91 = v29[7];
  LOBYTE(v89) = *(unsigned char *)(v91 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow);
  *(unsigned char *)(v91 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow) = *(void *)(v29[16] + 56) != 0;
  swift_retain();
  sub_100221FF4(v89);
  swift_release();
  uint64_t v92 = v29[7];
  uint64_t v93 = *(unsigned __int8 *)(v92 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow);
  *(unsigned char *)(v92 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) = *(void *)(v29[16] + 72) != 0;
  swift_retain();
  sub_1002222D0(v93);
  swift_release();
  uint64_t v94 = v29[9];
  uint64_t v95 = v29[6];
  uint64_t v96 = v29[7];
  uint64_t v97 = v29[4];
  long long v99 = (void *)v29[16];
  uint64_t v98 = v29[17];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1002128E0(v94, v95, v96, v97, v99, v98);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v100 = v29[9];
  uint64_t v101 = v29[6];
  uint64_t v102 = v29[7];
  uint64_t v103 = v29[4];
  uint64_t v104 = v29[16];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100212A24(v100, v101, v102, v103, v104);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v133[1])
  {
    char v106 = *(unsigned char *)v133 == 5 && (unint64_t)*((unsigned __int8 *)v133 + 17) << 8 == 256;
    sub_100215AA8(v106);
  }
  unint64_t v107 = *(void *)(v19 + 16);
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != -224; i -= 16)
  {
    if (v107 < 0xE)
    {
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v109 = *(void *)(v19 + i + 248);
    uint64_t ObjectType = swift_getObjectType();
    long long v111 = *(void (**)(uint64_t, uint64_t))(v109 + 16);
    swift_unknownObjectRetain();
    v111(ObjectType, v109);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease_n();
  long long v112 = *(void (**)(uint64_t))(v136 + v139[7]);
  if (v112)
  {
    uint64_t v113 = swift_retain();
    v112(v113);
    sub_10005BEA0((uint64_t)v112);
    swift_release();
    return sub_100232D70((uint64_t)v140, type metadata accessor for ConnectionAssistantState);
  }
LABEL_43:
  sub_100232D70((uint64_t)v140, type metadata accessor for ConnectionAssistantState);
  return swift_release();
}

uint64_t sub_100211360(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  uint64_t v5 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010((uint64_t *)&unk_100383910);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v38 = (uint64_t)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (unsigned __int8 *)v32 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v41 = sub_10000FDBC();
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  unsigned int v17 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v40 = *(void (**)(uint64_t *, void, uint64_t))(v14 + 104);
  v40(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  char v18 = _dispatchPreconditionTest(_:)();
  uint64_t v39 = *(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8);
  uint64_t result = v39(v16, v13);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unsigned int v37 = v17;
  uint64_t v35 = v7;
  sub_10000D2A0(a1, (uint64_t)v12, (uint64_t *)&unk_100383910);
  uint64_t v20 = type metadata accessor for LinkState(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v33 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v21 + 48);
  v32[1] = v21 + 48;
  int v22 = v33(v12, 1, v20);
  uint64_t v34 = a1;
  if (v22 == 1)
  {
    swift_retain();
    sub_10000950C((uint64_t)v12, (uint64_t *)&unk_100383910);
    unsigned __int8 v23 = 2;
  }
  else
  {
    unsigned __int8 v23 = *v12;
    swift_retain();
    sub_100232D70((uint64_t)v12, type metadata accessor for LinkState);
  }
  sub_1000260A0(v23);
  swift_release();
  uint64_t v36 = v3;
  uint64_t v24 = *(void *)(v3 + 56);
  sub_10000D544(v42, (uint64_t)v43, &qword_1003826B8);
  uint64_t v25 = v44;
  if (v44) {
    int v26 = v45 & 1;
  }
  else {
    int v26 = 2;
  }
  swift_retain();
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  v40(v16, v37, v13);
  char v27 = _dispatchPreconditionTest(_:)();
  uint64_t result = v39(v16, v13);
  if ((v27 & 1) == 0) {
    goto LABEL_20;
  }
  int v28 = *(unsigned __int8 *)(v24 + 105);
  if (v25)
  {
    if (v28 == 2 || (((v26 == 0) ^ v28) & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v28 != 2)
  {
LABEL_14:
    *(unsigned char *)(v24 + 105) = v26;
    sub_100231BAC((void (*)(uint64_t, void, uint64_t, uint64_t))sub_10023442C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100234428, (uint64_t (*)(uint64_t *))sub_100230170);
    sub_100027588();
  }
  swift_release();
  uint64_t v29 = v38;
  sub_10000D2A0(v34, v38, (uint64_t *)&unk_100383910);
  if (v33((unsigned __int8 *)v29, 1, v20) == 1)
  {
    sub_10000950C(v29, (uint64_t *)&unk_100383910);
    uint64_t v30 = type metadata accessor for TransmissionProgress(0);
    uint64_t v31 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v35, 1, 1, v30);
  }
  else
  {
    uint64_t v31 = (uint64_t)v35;
    sub_10000D2A0(v29 + *(int *)(v20 + 32), (uint64_t)v35, &qword_10037F158);
    sub_100232D70(v29, type metadata accessor for LinkState);
  }
  sub_10021BEDC(v31);
  return sub_10000950C(v31, &qword_10037F158);
}

uint64_t sub_100211824(unsigned __int8 a1)
{
  uint64_t v3 = *(unsigned __int8 *)(v1 + 64);
  if (v3 == 4)
  {
    if (a1 == 4) {
      goto LABEL_11;
    }
    goto LABEL_5;
  }
  if (a1 == 4) {
    goto LABEL_5;
  }
  if (v3 == 3)
  {
    if (a1 == 3) {
      goto LABEL_11;
    }
    goto LABEL_5;
  }
  if (a1 == 3 || v3 != a1)
  {
LABEL_5:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
LABEL_11:
  *(unsigned char *)(v1 + 64) = a1;

  return sub_100220E94(v3);
}

void sub_10021191C(__int16 a1)
{
  __int16 v3 = *(unsigned __int8 *)(v1 + 42);
  __int16 v4 = *(unsigned __int8 *)(v1 + 43);
  if (v4)
  {
    if ((a1 & 0x100) != 0) {
      goto LABEL_12;
    }
  }
  else if ((a1 & 0x100) == 0)
  {
    if (v3)
    {
      if (a1) {
        goto LABEL_12;
      }
    }
    else if ((a1 & 1) == 0)
    {
      goto LABEL_12;
    }
  }
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
LABEL_12:
  *(unsigned char *)(v1 + 42) = a1;
  *(unsigned char *)(v1 + 43) = HIBYTE(a1) & 1;

  sub_100217A38(v3 | (v4 << 8));
}

uint64_t sub_100211A04(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v71 = a2;
  uint64_t v5 = type metadata accessor for ConnectionClosed(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v74 = (uint64_t)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (unsigned __int8 *)v62 - v9;
  uint64_t v66 = sub_100004010(&qword_100380780);
  uint64_t v11 = __chkstk_darwin(v66);
  uint64_t v73 = (uint64_t)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v72 = (char *)v62 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v68 = (uint64_t)v62 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v70 = (uint64_t)v62 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v67 = (uint64_t)v62 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v65 = (uint64_t)v62 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v75 = (uint64_t)v62 - v24;
  __chkstk_darwin(v23);
  int v26 = (unsigned __int8 *)v62 - v25;
  uint64_t v27 = sub_100004010(&qword_100388170);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v3 + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
  swift_beginAccess();
  uint64_t v32 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_10000D2A0(v31, (uint64_t)v30, &qword_100380780);
  uint64_t v76 = a1;
  uint64_t v33 = v5;
  sub_10000D2A0(a1, v32, &qword_100380780);
  uint64_t v35 = v6 + 48;
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v34((uint64_t)v30, 1, v5) == 1)
  {
    if (v34(v32, 1, v5) == 1) {
      return sub_10000950C((uint64_t)v30, &qword_100380780);
    }
    goto LABEL_6;
  }
  sub_10000D2A0((uint64_t)v30, (uint64_t)v26, &qword_100380780);
  if (v34(v32, 1, v5) == 1)
  {
    sub_100232D70((uint64_t)v26, type metadata accessor for ConnectionClosed);
LABEL_6:
    sub_10000950C((uint64_t)v30, &qword_100388170);
    goto LABEL_7;
  }
  sub_100233C38(v32, (uint64_t)v10, type metadata accessor for ConnectionClosed);
  char v37 = sub_100127630(v26, v10);
  sub_100232D70((uint64_t)v10, type metadata accessor for ConnectionClosed);
  uint64_t v33 = v5;
  sub_100232D70((uint64_t)v26, type metadata accessor for ConnectionClosed);
  uint64_t result = sub_10000950C((uint64_t)v30, &qword_100380780);
  if (v37) {
    return result;
  }
LABEL_7:
  if (*(void *)(v3 + 32))
  {
    *(unsigned char *)(v3 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  uint64_t v39 = v75;
  uint64_t v38 = v76;
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
  uint64_t v40 = type metadata accessor for Logger();
  sub_10000FD84(v40, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v38, v39, &qword_100380780);
  swift_retain_n();
  unint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.default.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v64 = v3;
  if (v43)
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    uint64_t v63 = v33;
    v62[0] = v45;
    v78[0] = v45;
    *(_DWORD *)uint64_t v44 = 136446466;
    uint64_t v46 = v65;
    sub_10000D2A0(v31, v65, &qword_100380780);
    uint64_t v47 = String.init<A>(describing:)();
    uint64_t v77 = sub_1001B3178(v47, v48, v78);
    v62[1] = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    uint64_t v49 = v75;
    sub_10000D2A0(v75, v46, &qword_100380780);
    uint64_t v50 = String.init<A>(describing:)();
    uint64_t v77 = sub_1001B3178(v50, v51, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v49, &qword_100380780);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "connectionClosed changed from: %{public}s to: %{public}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    uint64_t v33 = v63;
    swift_slowDealloc();
    uint64_t v38 = v76;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10000950C(v39, &qword_100380780);
  }

  uint64_t v52 = (uint64_t)v72;
  uint64_t v53 = v70;
  if (v71)
  {
    sub_10000D2A0(v38, v70, &qword_100380780);
    sub_10000950C(v53, &qword_100380780);
    sub_10000D2A0(v38, v52, &qword_100380780);
    BOOL v54 = 0;
    BOOL v55 = 0;
  }
  else
  {
    uint64_t v56 = v67;
    sub_10000D2A0(v31, v67, &qword_100380780);
    uint64_t v57 = v69;
    int v58 = v69(v56, 1, v33);
    sub_10000950C(v56, &qword_100380780);
    sub_10000D2A0(v38, v53, &qword_100380780);
    BOOL v54 = v58 == 1 && v57(v53, 1, v33) != 1;
    sub_10000950C(v53, &qword_100380780);
    uint64_t v59 = v68;
    sub_10000D2A0(v31, v68, &qword_100380780);
    int v60 = v57(v59, 1, v33);
    sub_10000950C(v59, &qword_100380780);
    sub_10000D2A0(v38, v52, &qword_100380780);
    BOOL v55 = v60 != 1 && v57(v52, 1, v33) == 1;
  }
  sub_10000950C(v52, &qword_100380780);
  swift_beginAccess();
  sub_1001B6344(v38, v31, &qword_100380780);
  swift_endAccess();
  if (*(void *)(v64 + 32))
  {
    *(unsigned char *)(v64 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    uint64_t v38 = v76;
    Subject<>.send()();
  }
  uint64_t v61 = v73;
  sub_10000D2A0(v38, v73, &qword_100380780);
  if (v69(v61, 1, v33) == 1)
  {
    uint64_t result = sub_10000950C(v61, &qword_100380780);
    if (!v55) {
      return result;
    }
LABEL_34:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  sub_100233C38(v61, v74, type metadata accessor for ConnectionClosed);
  if (v54) {
    PassthroughSubject.send(_:)();
  }
  uint64_t result = sub_100232D70(v74, type metadata accessor for ConnectionClosed);
  if (v55) {
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_1002123A4(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v42 - 8);
  uint64_t v5 = __chkstk_darwin(v42);
  BOOL v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v41 = (char *)&v40 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = sub_100004010(&qword_100387FA8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_100004010(&qword_100387FA0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v40 - v21;
  sub_10000D2A0(a1, (uint64_t)&v40 - v21, &qword_100387FA0);
  uint64_t v23 = v2 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  sub_10000D2A0(v23, (uint64_t)v20, &qword_100387FA0);
  sub_1002189CC((uint64_t)v22);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v22, v23, &qword_100387FA0);
  swift_endAccess();
  sub_100218D58((uint64_t)v20);
  sub_10000950C((uint64_t)v22, &qword_100387FA0);
  sub_10000950C((uint64_t)v20, &qword_100387FA0);
  sub_10000D2A0(v44, (uint64_t)v16, &qword_100387FA8);
  uint64_t v24 = v2 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod;
  swift_beginAccess();
  sub_10000D2A0(v24, (uint64_t)v14, &qword_100387FA8);
  sub_100219778((uint64_t)v16);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v16, v24, &qword_100387FA8);
  swift_endAccess();
  sub_100219AF0((uint64_t)v14);
  sub_10000950C((uint64_t)v16, &qword_100387FA8);
  uint64_t result = sub_10000950C((uint64_t)v14, &qword_100387FA8);
  uint64_t v26 = *(void *)(v2 + 32);
  BOOL v27 = __CFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 32) = v28;
    Date.init()();
    uint64_t v29 = (uint64_t)sub_100217E3C((uint64_t)v10);
    uint64_t v31 = v30;
    uint64_t v32 = (uint64_t)v41;
    uint64_t v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v41, v10, v42);
    if (!v31)
    {
      uint64_t v29 = sub_10021A0F0(v32);
      uint64_t v31 = v34;
    }
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v35(v32, v33);
    v35((uint64_t)v10, v33);
    sub_100217D14(v29, v31);
    uint64_t v36 = (uint64_t)v43;
    Date.init()();
    char v37 = sub_100217E3C(v36);
    uint64_t v39 = v38;
    v35(v36, v33);
    sub_100218268((uint64_t)v37, v39);
    return sub_10024572C(v2);
  }
  return result;
}

unint64_t sub_100212790(unint64_t result, uint64_t a2)
{
  unint64_t v4 = result;
  if (result >= 2)
  {
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_10020CE78(v6);
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 64))
    {
      if (!v5) {
        goto LABEL_9;
      }
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)swift_bridgeObjectRetain();
      char v8 = sub_1002324E4(v7, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
    else if (v5)
    {
      goto LABEL_9;
    }
    Swift::Int v9 = *(void *)(v2 + 72);
    goto LABEL_14;
  }
  if (!*(void *)(v2 + 64)) {
    goto LABEL_10;
  }
  uint64_t v5 = 0;
LABEL_9:
  uint64_t result = sub_100226D10(v5);
LABEL_10:
  Swift::Int v9 = *(void *)(v2 + 72);
  if (v4 == 1)
  {
    if (!v9) {
      return result;
    }
    a2 = 0;
    goto LABEL_21;
  }
LABEL_14:
  uint64_t result = swift_bridgeObjectRetain();
  if (v9)
  {
    if (a2)
    {
      char v10 = sub_10020D388(v9, a2);
      uint64_t result = swift_bridgeObjectRelease();
      if (v10) {
        return result;
      }
    }
  }
  else
  {
    if (!a2) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
LABEL_21:

  return sub_100226E18(a2);
}

uint64_t sub_1002128E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) & 1) != 0
    || (*(unsigned char *)(a3 + 66) & 1) != 0)
  {
    char v13 = 0;
  }
  else
  {
    char v13 = *(unsigned char *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24) ^ 1;
  }
  int v14 = v13 & 1;
  int v15 = *(unsigned __int8 *)(v6 + 112);
  *(unsigned char *)(v6 + 112) = v14;
  if (v15 == 2 || ((v15 & 1) == 0) == v14) {
    sub_100223B1C();
  }
  *(void *)(v6 + 88) = sub_100224194(a1, a2, a3, a4, a5, a6);
  swift_release();
  uint64_t v16 = *(void *)(v6 + 80);
  if (!v16)
  {
    uint64_t v16 = *(void *)(v6 + 88);
    swift_retain();
  }
  swift_retain();

  return sub_1002234F0(v16);
}

uint64_t sub_100212A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v11 = sub_100078E0C(4, *(void *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1;
  int v12 = *(unsigned __int8 *)(v5 + 56);
  if (v11 != v12)
  {
    if (*(void *)(v5 + 32))
    {
      *(unsigned char *)(v5 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(unsigned char *)(v5 + 56) = v11;
  sub_100225EEC(v12);
  unsigned __int8 v13 = sub_10023370C(a1, a2, a3, a4, a5, *(unsigned char *)(v5 + 57));
  swift_retain();
  sub_100026344(v13);

  return swift_release();
}

uint64_t sub_100212B50(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    uint64_t v6 = &type metadata for UIFeatureFlags;
    unint64_t v7 = sub_1001B6408();
    v5[0] = 2;
    char v4 = isFeatureEnabled(_:)();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v5);
    if (v4)
    {
      swift_bridgeObjectRetain();
      sub_100226BE8(v1, v2);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100212C10()
{
  uint64_t v0 = sub_100004010(&qword_100387FA0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v88 - v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v7 = (void *)result;
    if (*(unsigned char *)(result + 176) != 1) {
      return swift_release();
    }
    sub_100004010(&qword_100390F78);
    uint64_t result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_1002B4DF0;
    uint64_t v8 = v7[7];
    *(void *)(result + 32) = v8;
    uint64_t v9 = result + 32;
    *(void *)(result + 40) = &off_100360370;
    uint64_t v10 = v7[8];
    *(void *)(result + 48) = v10;
    *(void *)(result + 56) = &off_100360370;
    uint64_t v11 = v7[12];
    *(void *)(result + 64) = v11;
    *(void *)(result + 72) = &off_100360370;
    uint64_t v12 = *(void *)(v8 + 32);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v8 + 32) = v14;
      uint64_t v15 = *(void *)(v10 + 32);
      BOOL v13 = __CFADD__(v15, 1);
      uint64_t v16 = v15 + 1;
      if (!v13)
      {
        *(void *)(v10 + 32) = v16;
        uint64_t v17 = *(void *)(v11 + 32);
        BOOL v13 = __CFADD__(v17, 1);
        uint64_t v18 = v17 + 1;
        if (!v13)
        {
          uint64_t v19 = (void *)result;
          *(void *)(v11 + 32) = v18;
          uint64_t v20 = *(unsigned __int8 *)(v8 + 65);
          *(unsigned char *)(v8 + 65) = *(unsigned char *)(*(void *)(v7[9] + 56) + 120);
          swift_retain_n();
          swift_retain();
          swift_retain();
          sub_100221400(v20);
          swift_release();
          uint64_t v21 = v7[6];
          uint64_t v22 = v7[7];
          BOOL v23 = (*(unsigned char *)(v21 + 43) & 1) == 0 && (*(unsigned char *)(v21 + 42) & 1) == 0;
          uint64_t v24 = *(unsigned __int8 *)(v22 + 66);
          *(unsigned char *)(v22 + 66) = v23;
          swift_retain();
          sub_1002216DC(v24);
          swift_release();
          uint64_t v25 = v7[7];
          uint64_t v26 = v7[16] + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
          swift_beginAccess();
          sub_10000D2A0(v26, (uint64_t)v5, &qword_100387FA0);
          uint64_t v27 = v25 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages;
          swift_beginAccess();
          sub_10000D2A0(v27, (uint64_t)v3, &qword_100387FA0);
          swift_beginAccess();
          sub_1001B6344((uint64_t)v5, v27, &qword_100387FA0);
          swift_endAccess();
          sub_1002219B4((uint64_t)v3);
          sub_10000950C((uint64_t)v5, &qword_100387FA0);
          sub_10000950C((uint64_t)v3, &qword_100387FA0);
          uint64_t v28 = v7[7];
          char v29 = *(unsigned char *)(v28 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow);
          *(unsigned char *)(v28 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow) = *(void *)(v7[16] + 56) != 0;
          swift_retain();
          sub_100221FF4(v29);
          swift_release();
          uint64_t v30 = v7[7];
          uint64_t v31 = *(unsigned __int8 *)(v30 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow);
          *(unsigned char *)(v30 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) = *(void *)(v7[16] + 72) != 0;
          swift_retain();
          sub_1002222D0(v31);
          swift_release();
          uint64_t v32 = v7[3];
          char v33 = *(unsigned char *)(v32 + 104);
          uint64_t v90 = v9;
          if (v33) {
            goto LABEL_22;
          }
          uint64_t v34 = *(void *)(v32 + 40);
          sub_100004010(&qword_100390F80);
          float64x2_t v35 = *(float64x2_t *)(v32 + 80);
          float64x2_t v88 = *(float64x2_t *)(v32 + 64);
          float64x2_t v89 = v35;
          uint64_t inited = swift_initStackObject();
          float32x4_t v37 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v88), v89);
          *(_OWORD *)(inited + 16) = xmmword_1002B3F10;
          *(float32x4_t *)(inited + 32) = v37;
          sub_100233838(inited);
          float64x2_t v89 = v38;
          swift_setDeallocating();
          uint64_t v39 = v7[5];
          if (*(unsigned char *)(v39 + 88))
          {
            uint64_t v40 = 0;
            uint64_t v41 = 0;
          }
          else
          {
            uint64_t v40 = *(void *)(v39 + 56);
            uint64_t v41 = *(void *)(v39 + 64);
          }
          float64x2_t v42 = v89;
          *(void *)&v89.f64[0] = sub_100215D48(v34, 0, *(uint64_t *)&v89.f64[0], *(uint64_t *)&v89.f64[1], 0, v40, v41, *(unsigned char *)(v39 + 88));
          if ((v45 & 1) != 0
            || ((v46 = v43, v47 = v44, uint64_t v48 = v7[5], (*(unsigned char *)(v48 + 88) & 1) == 0)
              ? (uint64_t v49 = *(void *)(v48 + 72), v50 = *(void *)(v48 + 80))
              : (uint64_t v49 = 0, v50 = 0),
                uint64_t v51 = sub_100215D48(v34, 0, *(uint64_t *)&v42.f64[0], *(uint64_t *)&v42.f64[1], 0, v49, v50, *(unsigned char *)(v48 + 88)), (v54 & 1) != 0))
          {
LABEL_22:
            memset(v91, 0, sizeof(v91));
            char v92 = 1;
            swift_retain();
            sub_1002133E8((uint64_t)v91, 2u, 0, 0, 0, 1, 0, 0, 0, 1);
          }
          else
          {
            uint64_t v55 = v52;
            uint64_t v56 = v53;
            uint64_t v57 = v7[5];
            char v58 = *(unsigned char *)(v57 + 88);
            *(void *)&v88.f64[0] = v51;
            if (v58)
            {
              uint64_t v59 = 0;
              float64x2_t v60 = 0uLL;
              float64x2_t v61 = 0uLL;
            }
            else
            {
              uint64_t v59 = *(void *)(v57 + 48);
              float64x2_t v83 = (float64x2_t)vdupq_n_s64(0x404CA5DC1A63C1F8uLL);
              float64x2_t v84 = (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL);
              float64x2_t v60 = vmulq_f64(vrndaq_f64(vmulq_f64(*(float64x2_t *)(v57 + 56), v83)), v84);
              float64x2_t v61 = vmulq_f64(vrndaq_f64(vmulq_f64(*(float64x2_t *)(v57 + 72), v83)), v84);
            }
            *(void *)uint64_t v91 = v59;
            *(float64x2_t *)&v91[8] = v60;
            *(float64x2_t *)&v91[24] = v61;
            char v92 = v58;
            uint64_t v85 = v57 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link;
            swift_beginAccess();
            uint64_t v86 = type metadata accessor for LinkState(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 48))(v85, 1, v86))
            {
              unsigned __int8 v87 = 2;
            }
            else
            {
              unsigned __int8 v87 = *(unsigned char *)(v85 + 1);
            }
            swift_retain();
            sub_1002133E8((uint64_t)v91, v87, *(uint64_t *)&v89.f64[0], v46, v47, 0, *(uint64_t *)&v88.f64[0], v55, v56, 0);
          }
          swift_release();
          uint64_t v62 = v7[9];
          uint64_t v64 = v7[6];
          uint64_t v63 = v7[7];
          uint64_t v65 = v7[4];
          uint64_t v67 = (void *)v7[16];
          uint64_t v66 = v7[17];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1002128E0(v62, v64, v63, v65, v67, v66);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v68 = v7[9];
          uint64_t v69 = v7[6];
          uint64_t v70 = v7[7];
          uint64_t v71 = v7[4];
          uint64_t v72 = v7[16];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_100212A24(v68, v69, v70, v71, v72);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          unint64_t v73 = v19[2];
          uint64_t result = swift_bridgeObjectRetain();
          if (v73 >= 3)
          {
            uint64_t v74 = v19[9];
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v74 + 16);
            swift_unknownObjectRetain();
            v76(ObjectType, v74);
            swift_unknownObjectRelease();
            uint64_t v77 = v19[7];
            uint64_t v78 = swift_getObjectType();
            uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v77 + 16);
            swift_unknownObjectRetain();
            v79(v78, v77);
            swift_unknownObjectRelease();
            uint64_t v80 = v19[5];
            uint64_t v81 = swift_getObjectType();
            uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v80 + 16);
            swift_unknownObjectRetain();
            v82(v81, v80);
            swift_release();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_setDeallocating();
            sub_100004010(&qword_100390F88);
            return swift_arrayDestroy();
          }
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_1002133E8(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v11 = v10;
  char v17 = a10;
  uint64_t v18 = a9;
  int v31 = a2;
  sub_10000D544(a1, (uint64_t)&v32, &qword_100382698);
  uint64_t v19 = (uint64_t *)(v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__target);
  uint64_t v28 = a1;
  if (*(unsigned char *)(v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__target + 40))
  {
    uint64_t result = sub_10000D544(a1, (uint64_t)v33, &qword_100382698);
    if ((v34 & 1) == 0) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v22 = a1;
    uint64_t v23 = *v19;
    uint64_t v24 = v32;
    sub_10000D544(v22, (uint64_t)v33, &qword_100382698);
    if (v34) {
      goto LABEL_29;
    }
    if (v23 != v24) {
      goto LABEL_29;
    }
    if ((static Angle.== infix(_:_:)() & 1) == 0) {
      goto LABEL_29;
    }
    if ((static Angle.== infix(_:_:)() & 1) == 0) {
      goto LABEL_29;
    }
    if ((static Angle.== infix(_:_:)() & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t result = static Angle.== infix(_:_:)();
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
  }
  int v21 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__targetLinkSynced);
  if (v21 == 2)
  {
    if (v31 != 2) {
      goto LABEL_29;
    }
  }
  else
  {
    BOOL v25 = (v21 & 1) == 0;
    if (v31 == 2 || ((v31 ^ v25) & 1) == 0) {
      goto LABEL_29;
    }
  }
  if (*(unsigned char *)(v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__actualTargetRelativeBearing + 24))
  {
    if ((a6 & 1) == 0) {
      goto LABEL_29;
    }
  }
  else
  {
    if (a6) {
      goto LABEL_29;
    }
    if ((static Angle.== infix(_:_:)() & 1) == 0) {
      goto LABEL_29;
    }
    if ((static Angle.== infix(_:_:)() & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t result = static Angle.== infix(_:_:)();
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
  }
  if (*(unsigned char *)(v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24))
  {
    if (a10) {
      return result;
    }
  }
  else if (a10 & 1) == 0 && (static Angle.== infix(_:_:)() & 1) != 0 && (static Angle.== infix(_:_:)())
  {
    uint64_t result = static Angle.== infix(_:_:)();
    if (result) {
      return result;
    }
  }
LABEL_29:
  if (*(void *)(v11 + 32))
  {
    *(unsigned char *)(v11 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    char v17 = a10;
    uint64_t v18 = a9;
    Subject<>.send()();
  }
  sub_10000D544(v28, (uint64_t)v19, &qword_100382698);
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__targetLinkSynced) = v31;
  uint64_t v26 = v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__actualTargetRelativeBearing;
  *(void *)uint64_t v26 = a3;
  *(void *)(v26 + 8) = a4;
  *(void *)(v26 + 16) = a5;
  *(unsigned char *)(v26 + 24) = a6 & 1;
  uint64_t v27 = v11 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing;
  *(void *)uint64_t v27 = a7;
  *(void *)(v27 + 8) = a8;
  *(void *)(v27 + 16) = v18;
  *(unsigned char *)(v27 + 24) = v17 & 1;
  uint64_t result = sub_100221154();
  if (*(void *)(v11 + 32))
  {
    *(unsigned char *)(v11 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_10021377C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result + 176) == 1)
    {
      uint64_t v1 = *(void *)(result + 56);
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow)) {
        goto LABEL_8;
      }
      if (*(unsigned char *)(v1 + 66)) {
        goto LABEL_8;
      }
      uint64_t v2 = (double *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing);
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24)) {
        goto LABEL_8;
      }
      uint64_t v3 = *(void *)(result + 24);
      if (*(unsigned char *)(v3 + 104)) {
        goto LABEL_8;
      }
      uint64_t v4 = v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__target;
      if (*(unsigned char *)(v4 + 40)) {
        goto LABEL_8;
      }
      double v5 = round(*(double *)(v3 + 32) * 57.2957795);
      if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
      {
        if (v5 > -9.22337204e18)
        {
          if (v5 < 9.22337204e18)
          {
            double v6 = round(*(double *)(v3 + 40) * 57.2957795);
            if ((~*(void *)&v6 & 0x7FF0000000000000) != 0)
            {
              if (v6 > -9.22337204e18)
              {
                if (v6 < 9.22337204e18)
                {
                  double v7 = round(*(double *)(v3 + 48) * 57.2957795);
                  if ((~*(void *)&v7 & 0x7FF0000000000000) != 0)
                  {
                    if (v7 > -9.22337204e18)
                    {
                      if (v7 < 9.22337204e18)
                      {
                        double v8 = round(*(double *)(v3 + 56) * 57.2957795);
                        if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
                        {
                          if (v8 > -9.22337204e18)
                          {
                            if (v8 < 9.22337204e18)
                            {
                              double v9 = round(*(double *)(v4 + 24) * 57.2957795);
                              if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
                              {
                                if (v9 > -9.22337204e18)
                                {
                                  if (v9 < 9.22337204e18)
                                  {
                                    double v10 = round(*(double *)(v4 + 32) * 57.2957795);
                                    if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
                                    {
                                      if (v10 > -9.22337204e18)
                                      {
                                        if (v10 < 9.22337204e18)
                                        {
                                          double v11 = round(*v2 * 57.2957795);
                                          if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
                                          {
                                            if (v11 > -9.22337204e18)
                                            {
                                              if (v11 < 9.22337204e18)
                                              {
                                                double v12 = round(v2[1] * 57.2957795);
                                                if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
                                                {
                                                  if (v12 > -9.22337204e18)
                                                  {
                                                    if (v12 < 9.22337204e18)
                                                    {
                                                      uint64_t v13 = (uint64_t)v5;
                                                      uint64_t v14 = (uint64_t)v6;
                                                      uint64_t v15 = (uint64_t)v7;
                                                      uint64_t v16 = (uint64_t)v8;
                                                      uint64_t v17 = (uint64_t)v9;
                                                      uint64_t v18 = (uint64_t)v10;
                                                      uint64_t v19 = (uint64_t)v11;
                                                      uint64_t v20 = (uint64_t)v12;
                                                      sub_100004010(&qword_100380030);
                                                      uint64_t v21 = swift_allocObject();
                                                      *(_OWORD *)(v21 + 16) = xmmword_1002B2880;
                                                      *(void *)(v21 + 56) = &type metadata for Int;
                                                      *(void *)(v21 + 64) = &protocol witness table for Int;
                                                      *(void *)(v21 + 32) = v13;
                                                      *(void *)(v21 + 96) = &type metadata for Int;
                                                      *(void *)(v21 + 104) = &protocol witness table for Int;
                                                      *(void *)(v21 + 72) = v14;
                                                      *(void *)(v21 + 136) = &type metadata for Int;
                                                      *(void *)(v21 + 144) = &protocol witness table for Int;
                                                      *(void *)(v21 + 112) = v15;
                                                      *(void *)(v21 + 176) = &type metadata for Int;
                                                      *(void *)(v21 + 184) = &protocol witness table for Int;
                                                      *(void *)(v21 + 152) = v16;
                                                      *(void *)(v21 + 216) = &type metadata for Int;
                                                      *(void *)(v21 + 224) = &protocol witness table for Int;
                                                      *(void *)(v21 + 192) = v17;
                                                      *(void *)(v21 + 256) = &type metadata for Int;
                                                      *(void *)(v21 + 264) = &protocol witness table for Int;
                                                      *(void *)(v21 + 232) = v18;
                                                      *(void *)(v21 + 296) = &type metadata for Int;
                                                      *(void *)(v21 + 304) = &protocol witness table for Int;
                                                      *(void *)(v21 + 272) = v19;
                                                      *(void *)(v21 + 336) = &type metadata for Int;
                                                      *(void *)(v21 + 344) = &protocol witness table for Int;
                                                      *(void *)(v21 + 312) = v20;
LABEL_8:
                                                      String.init(format:_:)();
                                                      PassthroughSubject.send(_:)();
                                                      swift_release();
                                                      return swift_bridgeObjectRelease();
                                                    }
                                                    goto LABEL_59;
                                                  }
LABEL_58:
                                                  __break(1u);
LABEL_59:
                                                  __break(1u);
                                                  return result;
                                                }
LABEL_57:
                                                __break(1u);
                                                goto LABEL_58;
                                              }
LABEL_56:
                                              __break(1u);
                                              goto LABEL_57;
                                            }
LABEL_55:
                                            __break(1u);
                                            goto LABEL_56;
                                          }
LABEL_54:
                                          __break(1u);
                                          goto LABEL_55;
                                        }
LABEL_53:
                                        __break(1u);
                                        goto LABEL_54;
                                      }
LABEL_52:
                                      __break(1u);
                                      goto LABEL_53;
                                    }
LABEL_51:
                                    __break(1u);
                                    goto LABEL_52;
                                  }
LABEL_50:
                                  __break(1u);
                                  goto LABEL_51;
                                }
LABEL_49:
                                __break(1u);
                                goto LABEL_50;
                              }
LABEL_48:
                              __break(1u);
                              goto LABEL_49;
                            }
LABEL_47:
                            __break(1u);
                            goto LABEL_48;
                          }
LABEL_46:
                          __break(1u);
                          goto LABEL_47;
                        }
LABEL_45:
                        __break(1u);
                        goto LABEL_46;
                      }
LABEL_44:
                      __break(1u);
                      goto LABEL_45;
                    }
LABEL_43:
                    __break(1u);
                    goto LABEL_44;
                  }
LABEL_42:
                  __break(1u);
                  goto LABEL_43;
                }
LABEL_41:
                __break(1u);
                goto LABEL_42;
              }
LABEL_40:
              __break(1u);
              goto LABEL_41;
            }
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_38;
    }
    return swift_release();
  }
  return result;
}

void sub_100213BB0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9988);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    double v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)double v6 = 136446210;
    swift_bridgeObjectRetain();
    sub_1001B3178(v2, v1, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100213D54()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136446210;
    type metadata accessor for ConnectionAssistantModels();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100213FCC()
{
  sub_100213D54();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConnectionAssistantModels()
{
  return self;
}

void sub_100214024()
{
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9988);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    type metadata accessor for ConnectionAssistantModels();
    swift_retain();
    uint64_t v4 = String.init<A>(describing:)();
    sub_1001B3178(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "start: %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100112A20();
  sub_1001CC2B4();
}

void sub_1002141F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100380780);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9988);
  swift_retain_n();
  double v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    double v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    float64x2_t v42 = v4;
    v43[0] = v13;
    uint64_t v41 = v5;
    *(_DWORD *)double v12 = 136446210;
    uint64_t v40 = (uint64_t)(v12 + 4);
    v51[0] = v1;
    type metadata accessor for ConnectionAssistantModels();
    swift_retain();
    uint64_t v14 = String.init<A>(describing:)();
    v51[0] = sub_1001B3178(v14, v15, v43);
    uint64_t v5 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "stop: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v42;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_10000FDBC();
  *double v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v16)
  {
    if (v1[176])
    {
      sub_100214928();
      int v17 = v1[176];
      v1[176] = 0;
      if (v17 == 1)
      {
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
      }
    }
    sub_1001CD17C();
    uint64_t v18 = *((void *)v1 + 3);
    uint64_t v19 = (_OWORD *)(v18 + 32);
    if (*(unsigned char *)(v18 + 104))
    {
      *(void *)(v18 + 96) = 0;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *uint64_t v19 = 0u;
      *(_OWORD *)(v18 + 48) = 0u;
      *(unsigned char *)(v18 + 104) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
      *(void *)(v18 + 96) = 0;
      *(_OWORD *)(v18 + 64) = 0u;
      *(_OWORD *)(v18 + 80) = 0u;
      *uint64_t v19 = 0u;
      *(_OWORD *)(v18 + 48) = 0u;
      *(unsigned char *)(v18 + 104) = 1;
      sub_100004010(&qword_100393AA0);
      Subject<>.send()();
    }
    sub_1001146DC();
    uint64_t v20 = *((void *)v1 + 13);
    *(unsigned char *)(v20 + 64) = 0;
    uint64_t v21 = *(void *)(v20 + 48);
    uint64_t v22 = *(void *)(v20 + 56);
    if (*(void *)(v20 + 32))
    {
      *(unsigned char *)(v20 + 40) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(void *)(v20 + 48) = 0;
    *(void *)(v20 + 56) = 0;
    swift_bridgeObjectRelease();
    sub_100228110(v21, v22);
    swift_bridgeObjectRelease();
    uint64_t v23 = *((void *)v1 + 14);
    uint64_t v24 = type metadata accessor for ConnectionClosed(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 1, 1, v24);
    uint64_t v25 = v23 + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
    swift_beginAccess();
    sub_100156648((uint64_t)v4, v25, &qword_100380780);
    swift_endAccess();
    sub_100226BE8(0, 0);
    sub_100226D10(0);
    float64x2_t v42 = v1;
    uint64_t v26 = *((void *)v1 + 4);
    sub_10000D544(v26 + 56, (uint64_t)v50, &qword_1003826B8);
    uint64_t v27 = *(void *)(v26 + 56);
    uint64_t v28 = *(void *)(v26 + 64);
    uint64_t v29 = *(void *)(v26 + 80);
    uint64_t v40 = *(void *)(v26 + 72);
    uint64_t v41 = v27;
    uint64_t v31 = *(void *)(v26 + 88);
    uint64_t v30 = *(void *)(v26 + 96);
    uint64_t v33 = *(void *)(v26 + 104);
    uint64_t v32 = *(void *)(v26 + 112);
    uint64_t v34 = *(void *)(v26 + 120);
    uint64_t v35 = *(void *)(v26 + 136);
    uint64_t v38 = *(void *)(v26 + 128);
    uint64_t v39 = v34;
    sub_10000D544((uint64_t)v50, (uint64_t)v51, &qword_1003826B8);
    if (v51[1])
    {
      v43[0] = v41;
      v43[1] = v28;
      void v43[2] = v40;
      v43[3] = v29;
      v43[4] = v31;
      v43[5] = v30;
      v43[6] = v33;
      v43[7] = v32;
      char v43[8] = v39;
      v43[9] = v38;
      v43[10] = v35;
      long long v44 = 0u;
      long long v45 = 0u;
      long long v46 = 0u;
      long long v47 = 0u;
      long long v48 = 0u;
      uint64_t v49 = 0;
      sub_100233E60(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100094668(v43);
      if (*(void *)(v26 + 32))
      {
        *(unsigned char *)(v26 + 40) = 1;
      }
      else
      {
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
      }
    }
    uint64_t v36 = *(void *)(v26 + 56);
    uint64_t v37 = *(void *)(v26 + 64);
    *(_OWORD *)(v26 + 56) = 0u;
    *(_OWORD *)(v26 + 72) = 0u;
    *(_OWORD *)(v26 + 88) = 0u;
    *(_OWORD *)(v26 + 104) = 0u;
    *(_OWORD *)(v26 + 120) = 0u;
    *(void *)(v26 + 136) = 0;
    sub_100093F40(v36, v37);
    sub_100228A6C(v50);
    sub_100233E60(v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
    sub_1002165F4(2);
    sub_100216970(2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100214928()
{
  uint64_t v1 = v0;
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9988);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "stop_connection_assistance", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1[5];
  sub_10000D544(v6 + 48, (uint64_t)v15, &qword_100382698);
  sub_10000D544((uint64_t)v15, (uint64_t)v16, &qword_100382698);
  if ((v16[40] & 1) == 0)
  {
    if (*(void *)(v6 + 32))
    {
      *(unsigned char *)(v6 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(void *)(v6 + 80) = 0;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(unsigned char *)(v6 + 88) = 1;
  sub_100216C00((uint64_t)v15);
  uint64_t v7 = v1[6];
  __int16 v8 = *(unsigned __int8 *)(v7 + 42);
  __int16 v9 = *(unsigned __int8 *)(v7 + 43);
  if ((v9 & 1) == 0)
  {
    if (*(void *)(v7 + 32))
    {
      *(unsigned char *)(v7 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(_WORD *)(v7 + 42) = 256;
  sub_100217A38(v8 | (v9 << 8));
  sub_100214CF0();
  sub_100214FA0();
  sub_100215034();
  uint64_t v10 = v1[10];
  sub_10000D544(v10 + 48, (uint64_t)v14, &qword_10038B210);
  sub_10000D544((uint64_t)v14, (uint64_t)v17, &qword_10038B210);
  if (v17[16] != 2)
  {
    if (*(void *)(v10 + 32))
    {
      *(unsigned char *)(v10 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 56) = 0;
  *(_OWORD *)(v10 + 64) = xmmword_1002C1B70;
  *(unsigned char *)(v10 + 80) = 0;
  sub_100227758((uint64_t)v14);
  uint64_t v11 = v1[11];
  sub_10000D544(v11 + 48, (uint64_t)v13, &qword_100382458);
  sub_10000D544((uint64_t)v13, (uint64_t)v18, &qword_100382458);
  if (v18[8] != 2)
  {
    if (*(void *)(v11 + 32))
    {
      *(unsigned char *)(v11 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(_OWORD *)(v11 + 48) = xmmword_1002B5350;
  *(void *)(v11 + 72) = 0;
  *(void *)(v11 + 80) = 0;
  *(void *)(v11 + 64) = 0;
  *(unsigned char *)(v11 + 88) = 0;
  sub_100227C60((uint64_t)v13);
  sub_100215420();
  sub_1002154F4();
  return sub_1002157D0();
}

uint64_t sub_100214CF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100387FA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v19[-v6];
  uint64_t v8 = v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__target;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(void *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 40) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__targetLinkSynced) = 2;
  uint64_t v9 = v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__actualTargetRelativeBearing;
  *(void *)(v9 + 8) = 0;
  *(void *)(v9 + 16) = 0;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 24) = 1;
  uint64_t v10 = v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 24) = 1;
  uint64_t v11 = *(unsigned __int8 *)(v0 + 64);
  if (v11 != 4)
  {
    if (*(void *)(v0 + 32))
    {
      *(unsigned char *)(v0 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(unsigned char *)(v0 + 64) = 4;
  sub_100220E94(v11);
  uint64_t v12 = *(unsigned __int8 *)(v0 + 65);
  *(unsigned char *)(v0 + 65) = 2;
  sub_100221400(v12);
  uint64_t v13 = *(unsigned __int8 *)(v0 + 66);
  *(unsigned char *)(v0 + 66) = 2;
  sub_1002216DC(v13);
  uint64_t v14 = type metadata accessor for ServiceOutages(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  uint64_t v15 = v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages;
  swift_beginAccess();
  sub_10000D2A0(v15, (uint64_t)v5, &qword_100387FA0);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v7, v15, &qword_100387FA0);
  swift_endAccess();
  sub_1002219B4((uint64_t)v5);
  sub_10000950C((uint64_t)v7, &qword_100387FA0);
  sub_10000950C((uint64_t)v5, &qword_100387FA0);
  char v16 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow) = 2;
  sub_100221FF4(v16);
  uint64_t v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) = 2;
  sub_1002222D0(v17);
  sub_10022285C(2);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions) = _swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100214FA0()
{
  sub_10022316C(0, 1);
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    [v1 invalidate];
    uint64_t v2 = *(void **)(v0 + 72);
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(void *)(v0 + 72) = 0;

  *(void *)(v0 + 80) = 0;
  swift_release();
  *(void *)(v0 + 88) = 0;
  swift_release();
  uint64_t result = sub_1002234F0(0);
  int v4 = *(unsigned __int8 *)(v0 + 112);
  *(unsigned char *)(v0 + 112) = 2;
  if (v4 != 2)
  {
    return sub_100223B1C();
  }
  return result;
}

uint64_t sub_100215034()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_10037F158);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v26[-v6];
  uint64_t v8 = sub_100004010(&qword_100390E80);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v26[-v12];
  uint64_t v14 = *(void *)(v0 + 56);
  swift_retain();
  sub_100231BAC((void (*)(uint64_t, void, uint64_t, uint64_t))sub_10023442C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100234428, (uint64_t (*)(uint64_t *))sub_100230170);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 88);
  *(_OWORD *)(v14 + 80) = xmmword_1002B3310;
  *(void *)(v14 + 96) = 0;
  *(unsigned char *)(v14 + 104) = 0;
  sub_100027F90(v15, v16);
  *(unsigned char *)(v14 + 105) = 2;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 106);
  if (v17 != 2)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v14 + 106) = 2;
  sub_100230508(v17);
  sub_100231600(2u);
  swift_release();
  uint64_t v18 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
  uint64_t v19 = v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v19, (uint64_t)v11, &qword_100390E80);
  sub_10021E324((uint64_t)v13);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v13, v19, &qword_100390E80);
  swift_endAccess();
  sub_10021E6AC((uint64_t)v11);
  sub_10000950C((uint64_t)v13, &qword_100390E80);
  sub_10000950C((uint64_t)v11, &qword_100390E80);
  uint64_t v20 = OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__userVisibleProgressTimer;
  uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__userVisibleProgressTimer);
  if (v21)
  {
    [v21 invalidate];
    uint64_t v22 = *(void **)(v1 + v20);
  }
  else
  {
    uint64_t v22 = 0;
  }
  *(void *)(v1 + v20) = 0;

  uint64_t v23 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
  uint64_t v24 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v24, (uint64_t)v5, &qword_10037F158);
  sub_10021F890((uint64_t)v7);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v7, v24, &qword_10037F158);
  swift_endAccess();
  sub_10021FBB8((uint64_t)v5);
  sub_10000950C((uint64_t)v7, &qword_10037F158);
  return sub_10000950C((uint64_t)v5, &qword_10037F158);
}

uint64_t sub_100215420()
{
  *(unsigned char *)(v0 + 57) = 1;
  int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 == 1)
  {
    if (*(void *)(v0 + 32))
    {
      *(unsigned char *)(v0 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
  *(unsigned char *)(v0 + 56) = 0;
  sub_100225EEC(v1);
  swift_retain();
  sub_10022FF30();

  return swift_release();
}

void sub_1002154F4()
{
  uint64_t v1 = sub_100004010(&qword_100387FA8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_100004010(&qword_100387FA0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = type metadata accessor for ServiceOutages(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  sub_10000D2A0(v14, (uint64_t)v10, &qword_100387FA0);
  sub_1002189CC((uint64_t)v12);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v12, v14, &qword_100387FA0);
  swift_endAccess();
  sub_100218D58((uint64_t)v10);
  sub_10000950C((uint64_t)v12, &qword_100387FA0);
  sub_10000950C((uint64_t)v10, &qword_100387FA0);
  uint64_t v15 = type metadata accessor for SilencePeriod(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod;
  swift_beginAccess();
  sub_10000D2A0(v16, (uint64_t)v4, &qword_100387FA8);
  sub_100219778((uint64_t)v6);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v6, v16, &qword_100387FA8);
  swift_endAccess();
  sub_100219AF0((uint64_t)v4);
  sub_10000950C((uint64_t)v6, &qword_100387FA8);
  sub_10000950C((uint64_t)v4, &qword_100387FA8);
  sub_100217D14(0, 0);
  sub_100218268(0, 0);
  uint64_t v17 = *(void **)(v0 + 80);
  if (v17)
  {
    [v17 invalidate];
    uint64_t v18 = *(void **)(v0 + 80);
  }
  else
  {
    uint64_t v18 = 0;
  }
  *(void *)(v0 + 80) = 0;
}

uint64_t sub_1002157D0()
{
  uint64_t v1 = sub_100004010(&qword_100390E78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_100004010(&qword_10038B448);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - v11;
  char v13 = *(unsigned char *)(v0 + 96);
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  if ((v13 & 1) == 0)
  {
    sub_10022AA30();
    sub_1002292C8();
  }
  *(void *)(v0 + 104) = 0;
  swift_release();
  uint64_t v14 = type metadata accessor for TargetTracks(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
  swift_beginAccess();
  sub_10000D2A0(v15, (uint64_t)v10, &qword_10038B448);
  sub_10022AEE8((uint64_t)v12);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v12, v15, &qword_10038B448);
  swift_endAccess();
  sub_10022B274((uint64_t)v10);
  sub_10000950C((uint64_t)v12, &qword_10038B448);
  sub_10000950C((uint64_t)v10, &qword_10038B448);
  uint64_t v16 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  uint64_t v17 = v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction;
  swift_beginAccess();
  sub_10000D2A0(v17, (uint64_t)v4, &qword_100390E78);
  sub_10022C28C((uint64_t)v6);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v6, v17, &qword_100390E78);
  swift_endAccess();
  sub_10022C648((uint64_t)v4);
  sub_10000950C((uint64_t)v6, &qword_100390E78);
  return sub_10000950C((uint64_t)v4, &qword_100390E78);
}

void sub_100215AA8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
LABEL_7:
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9988);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "start_connection_assistance", v13, 2u);
      swift_slowDealloc();
    }

    sub_1001CC9E4();
    return;
  }
  int v9 = *(unsigned __int8 *)(v2 + 176);
  if (v9 == (a1 & 1)) {
    return;
  }
  if (a1)
  {
    *(unsigned char *)(v2 + 176) = 1;
    if ((v9 & 1) == 0)
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    if (qword_10037DD90 == -1) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
  sub_100214928();
  int v14 = *(unsigned __int8 *)(v2 + 176);
  *(unsigned char *)(v2 + 176) = 0;
  if (v14 == 1)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

uint64_t sub_100215D48(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a2) {
    goto LABEL_11;
  }
  char v12 = a5 & 1;
  int v13 = a8 & 1;
  if (a8) {
    a6 = 0;
  }
  uint64_t v15 = sub_100233918(a3, a4, a5 & 1, a6, a8 & 1);
  if ((v16 & 1) != 0
    || ((v17 = *(double *)&v15, v13) ? (uint64_t v18 = 0) : (uint64_t v18 = a7),
        sub_100215E90(a1, 0, a3, a4, v12, v18, v13),
        (v19 & 1) != 0))
  {
LABEL_11:
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    Angle.animatableData.getter();
    Angle.animatableData.getter();
    Angle.animatableData.setter();
    *(double *)&uint64_t result = round(v17 * 57.2957795) * 0.0174532925;
  }
  return result;
}

uint64_t sub_100215E90(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  if (a2) {
    return 0;
  }
  double v39 = *(double *)&a1;
  if (a5 & 1) != 0 || (a7) {
    return 0;
  }
  double v37 = 1.57079633;
  Angle.animatableData.getter();
  Angle.animatableData.setter();
  if (*(double *)&a1 > 1.57079633 || v37 > *(double *)&a1)
  {
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000FD84(v11, (uint64_t)qword_1003A9AC0);
    char v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      int v14 = (uint8_t *)swift_slowAlloc();
      double v37 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)int v14 = 136446210;
      swift_beginAccess();
      uint64_t v15 = String.init<A>(describing:)();
      sub_1001B3178(v15, v16, (uint64_t *)&v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unexpected device pitch value %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  v17.i64[0] = a3;
  v17.i64[1] = a4;
  float32x4_t v36 = v17;
  if (*(double *)&a6 < 0.0 || *(double *)&a6 > 1.57079633)
  {
    double v37 = 0.0;
    unint64_t v38 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v18._object = (void *)0x80000001002D4C30;
    v18._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    String.append(_:)(v18);
    _print_unlocked<A, B>(_:_:)();
    *(double *)&uint64_t v19 = COERCE_DOUBLE(String.init(format:_:)());
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    double v37 = *(double *)&v19;
    unint64_t v38 = v21;
    PassthroughSubject.send(_:)();
    swift_bridgeObjectRelease();
  }
  sub_1002338A8((uint64_t)&off_10034BEB0);
  float32x4_t v22 = vmulq_f32(v36, (float32x4_t)xmmword_1002B72B0);
  int32x4_t v23 = (int32x4_t)vnegq_f32(v22);
  int8x16_t v24 = (int8x16_t)vtrn2q_s32((int32x4_t)v22, vtrn1q_s32((int32x4_t)v22, v23));
  float32x4_t v26 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v22, (int8x16_t)v23, 8uLL), *(float32x2_t *)v25.f32, 1), (float32x4_t)vextq_s8(v24, v24, 8uLL), v25.f32[0]);
  float32x4_t v27 = (float32x4_t)vrev64q_s32((int32x4_t)v22);
  v27.i32[0] = v23.i32[1];
  v27.i32[3] = v23.i32[2];
  float32x4_t v28 = vmlaq_laneq_f32(v26, v27, v25, 2);
  int32x4_t v29 = (int32x4_t)vnegq_f32(v28);
  int8x16_t v30 = (int8x16_t)vtrn2q_s32((int32x4_t)v28, vtrn1q_s32((int32x4_t)v28, v29));
  float32x4_t v31 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 8uLL), *(float32x2_t *)v36.f32, 1), (float32x4_t)vextq_s8(v30, v30, 8uLL), v36.f32[0]);
  float32x4_t v32 = (float32x4_t)vrev64q_s32((int32x4_t)v28);
  v32.i32[0] = v29.i32[1];
  v32.i32[3] = v29.i32[2];
  if (COERCE_FLOAT(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v28, v36, 3), v32, v36, 2), v31).i32[2]) < 0.0)
  {
    swift_beginAccess();
    double v37 = 3.14159265;
    Angle.animatableData.getter();
    Angle.animatableData.getter();
    Angle.animatableData.setter();
    double v39 = v37;
  }
  double v37 = 1.57079633;
  Angle.animatableData.getter();
  Angle.animatableData.getter();
  Angle.animatableData.setter();
  double v33 = v37;
  swift_beginAccess();
  Angle.animatableData.getter();
  Angle.animatableData.getter();
  Angle.animatableData.setter();
  if (v33 < 0.0 || v33 >= 6.28318531) {
    double v33 = v33 - floor(v33 / 6.28318531) * 6.28318531;
  }
  if (v33 > 3.14159265)
  {
    Angle.animatableData.getter();
    Angle.animatableData.getter();
    Angle.animatableData.setter();
  }
  return *(void *)&v33;
}

void sub_100216350(char a1)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 42);
  if (v3 == 2)
  {
    if (a1 == 2) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_100004010((uint64_t *)&unk_10038EBC0);
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "locationServicesForSatelliteAuthorized changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_10:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0) {
    goto LABEL_6;
  }
}

void sub_1002165F4(char a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 42);
  if (v3 == 2)
  {
    if (a1 == 2) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0)
  {
LABEL_6:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
LABEL_9:
  *(unsigned char *)(v1 + 42) = a1;

  sub_100216350(v3);
}

void sub_1002166CC(char a1)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 43);
  if (v3 == 2)
  {
    if (a1 == 2) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_100004010((uint64_t *)&unk_10038EBC0);
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "locationServicesForCompassAuthorized changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_10:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0) {
    goto LABEL_6;
  }
}

void sub_100216970(char a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 43);
  if (v3 == 2)
  {
    if (a1 == 2) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0)
  {
LABEL_6:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
LABEL_9:
  *(unsigned char *)(v1 + 43) = a1;

  sub_1002166CC(v3);
}

uint64_t sub_100216A48()
{
  return sub_100227FE0();
}

uint64_t type metadata accessor for SystemSettingsModel()
{
  return self;
}

uint64_t sub_100216A74()
{
  return sub_100227FE0();
}

uint64_t type metadata accessor for OrientationModel()
{
  return self;
}

uint64_t sub_100216AA0(uint64_t a1)
{
  sub_10000D544(a1, (uint64_t)&v6, &qword_100382698);
  if (*(unsigned char *)(v1 + 88))
  {
    uint64_t result = sub_10000D544(a1, (uint64_t)v7, &qword_100382698);
    if (v8) {
      return result;
    }
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = v6;
  uint64_t result = sub_10000D544(a1, (uint64_t)v7, &qword_100382698);
  if ((v8 & 1) != 0
    || v4 != v5
    || (uint64_t result = static Angle.== infix(_:_:)(), (result & 1) == 0)
    || (uint64_t result = static Angle.== infix(_:_:)(), (result & 1) == 0)
    || (uint64_t result = static Angle.== infix(_:_:)(), (result & 1) == 0)
    || (uint64_t result = static Angle.== infix(_:_:)(), (result & 1) == 0))
  {
LABEL_10:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      return Subject<>.send()();
    }
  }
  return result;
}

void sub_100216C00(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000D544(a1, (uint64_t)&v17, &qword_100382698);
  if (*(unsigned char *)(v1 + 88))
  {
    sub_10000D544(a1, (uint64_t)v21, &qword_100382698);
    if (v22) {
      return;
    }
LABEL_10:
    if (*(unsigned char *)(v2 + 88))
    {
      sub_10000D544(a1, (uint64_t)v19, &qword_100382698);
      if (v20) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(v2 + 48);
      sub_10000D544(a1, (uint64_t)v19, &qword_100382698);
      uint64_t v7 = v19[0];
      if (v20) {
        uint64_t v7 = 0;
      }
      if ((v20 & 1) == 0 && v6 == v7) {
        goto LABEL_21;
      }
    }
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000FD84(v8, (uint64_t)qword_1003A9988);
    swift_retain_n();
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v9, v10))
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_22;
      }
      goto LABEL_24;
    }
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    sub_10000D544(a1, (uint64_t)v18, &qword_100382698);
    sub_100004010(&qword_100390EC8);
    uint64_t v12 = String.init<A>(describing:)();
    sub_1001B3178(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v14 = String.init<A>(describing:)();
    sub_1001B3178(v14, v15, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Primary target id changed from: %{public}s to: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_21:
    if (*(void *)(v2 + 32))
    {
LABEL_22:
      *(unsigned char *)(v2 + 41) = 1;
      return;
    }
LABEL_24:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = v17;
  sub_10000D544(a1, (uint64_t)v21, &qword_100382698);
  if ((v22 & 1) != 0
    || v4 != v5
    || (static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0)
  {
    goto LABEL_10;
  }
}

uint64_t sub_100216FDC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LinkState(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (unsigned __int8 *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (unsigned __int8 *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100388178);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, (uint64_t *)&unk_100383910);
  sub_10000D2A0(a1, v15, (uint64_t *)&unk_100383910);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, (uint64_t *)&unk_100383910);
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_100383910);
    if (v16(v15, 1, v3) != 1)
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for LinkState);
      BOOL v18 = sub_100125E60(v9, v6);
      sub_100232D70((uint64_t)v6, type metadata accessor for LinkState);
      sub_100232D70((uint64_t)v9, type metadata accessor for LinkState);
      uint64_t result = sub_10000950C((uint64_t)v13, (uint64_t *)&unk_100383910);
      if (v18) {
        return result;
      }
      goto LABEL_8;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for LinkState);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, &qword_100388178);
LABEL_8:
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

void sub_100217304(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LinkState(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (unsigned __int8 *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004010((uint64_t *)&unk_100383910);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  float32x4_t v36 = (char *)&v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (unsigned __int8 *)&v33 - v11;
  uint64_t v13 = sub_100004010(&qword_100388178);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link;
  uint64_t v18 = a1;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_10000D2A0(v17, (uint64_t)v16, (uint64_t *)&unk_100383910);
  sub_10000D2A0(a1, v19, (uint64_t *)&unk_100383910);
  char v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v16, 1, v3) == 1)
  {
    if (v20(v19, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, (uint64_t *)&unk_100383910);
      return;
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, (uint64_t *)&unk_100383910);
    if (v20(v19, 1, v3) != 1)
    {
      sub_100233C38(v19, (uint64_t)v6, type metadata accessor for LinkState);
      BOOL v32 = sub_100125E60(v12, v6);
      sub_100232D70((uint64_t)v6, type metadata accessor for LinkState);
      sub_100232D70((uint64_t)v12, type metadata accessor for LinkState);
      sub_10000950C((uint64_t)v16, (uint64_t *)&unk_100383910);
      uint64_t v21 = (uint64_t)v36;
      if (v32) {
        return;
      }
      goto LABEL_7;
    }
    sub_100232D70((uint64_t)v12, type metadata accessor for LinkState);
  }
  sub_10000950C((uint64_t)v16, &qword_100388178);
  uint64_t v21 = (uint64_t)v36;
LABEL_7:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v18, v21, (uint64_t *)&unk_100383910);
  uint64_t v23 = v37;
  swift_retain_n();
  int8x16_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    float32x4_t v36 = (char *)swift_slowAlloc();
    double v39 = v36;
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v27 = v34;
    sub_10000D2A0(v21, v34, (uint64_t *)&unk_100383910);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v28, v29, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v23 = v37;
    swift_bridgeObjectRelease();
    sub_10000950C(v21, (uint64_t *)&unk_100383910);
    *(_WORD *)(v26 + 12) = 2082;
    sub_10000D2A0(v17, v27, (uint64_t *)&unk_100383910);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v30, v31, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Link state changed from: %{public}s to: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v23 + 32))
    {
LABEL_11:
      *(unsigned char *)(v23 + 41) = 1;
      return;
    }
  }
  else
  {
    sub_10000950C(v21, (uint64_t *)&unk_100383910);

    swift_release_n();
    if (*(void *)(v23 + 32)) {
      goto LABEL_11;
    }
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
}

uint64_t sub_1002178B0()
{
  return sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link, (uint64_t *)&unk_100383910);
}

uint64_t sub_1002178DC()
{
  swift_release();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link, (uint64_t *)&unk_100383910);

  return swift_deallocClassInstance();
}

uint64_t sub_100217958()
{
  return type metadata accessor for TargetModel(0);
}

uint64_t type metadata accessor for TargetModel(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038F548);
}

void sub_100217980()
{
  sub_10021B770(319, &qword_1003880C8, (void (*)(uint64_t))type metadata accessor for LinkState);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100217A38(__int16 a1)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(v1 + 43))
  {
    if ((a1 & 0x100) != 0) {
      return;
    }
LABEL_5:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000FD84(v3, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446466;
      sub_100004010(&qword_100390EC0);
      uint64_t v7 = String.init<A>(describing:)();
      sub_1001B3178(v7, v8, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Location state changed from: %{public}s to: %{public}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_9:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_9;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if ((a1 & 0x100) != 0) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(v1 + 42))
  {
    if (a1) {
      return;
    }
    goto LABEL_5;
  }
  if (a1) {
    goto LABEL_5;
  }
}

uint64_t type metadata accessor for LocationModel()
{
  return self;
}

uint64_t sub_100217D14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = *(void *)(v2 + 56);
  if (v6)
  {
    if (a2)
    {
      BOOL v7 = v5 == a1 && v6 == a2;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_12;
      }
    }
  }
  else if (!a2)
  {
    goto LABEL_14;
  }
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 40) = 1;
LABEL_12:
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
LABEL_14:
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  swift_bridgeObjectRelease();
  sub_100218390(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t *sub_100217E3C(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v6 = sub_100004010(&qword_100387FA8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v9 = type metadata accessor for SilencePeriod(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v25 - v14 + 16;
  uint64_t v16 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod;
  swift_beginAccess();
  sub_10000D2A0(v16, (uint64_t)v8, &qword_100387FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000950C((uint64_t)v8, &qword_100387FA8);
    return 0;
  }
  sub_100233C38((uint64_t)v8, (uint64_t)v15, type metadata accessor for SilencePeriod);
  sub_1002340A0((unint64_t *)&qword_100388198, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v17 = v24;
  char v18 = dispatch thunk of static Comparable.< infix(_:_:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
  sub_100232D08((uint64_t)v15, (uint64_t)v13, type metadata accessor for SilencePeriod);
  if (v18)
  {
    sub_100232D70((uint64_t)v13, type metadata accessor for SilencePeriod);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_6:
    sub_100232D70((uint64_t)v15, type metadata accessor for SilencePeriod);
    return 0;
  }
  char v19 = dispatch thunk of static Comparable.< infix(_:_:)();
  sub_100232D70((uint64_t)v13, type metadata accessor for SilencePeriod);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v19) {
    goto LABEL_6;
  }
  Date.timeIntervalSince(_:)();
  double v23 = v22;
  if (qword_10037DEB8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10002280C(v25);
  char v20 = sub_1002334E0(&v25[0]._countAndFlagsBits, v23);
  sub_100233D20((uint64_t)v25);
  swift_release();
  sub_100232D70((uint64_t)v15, type metadata accessor for SilencePeriod);
  return v20;
}

uint64_t sub_100218268(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(v2 + 72);
  if (v6)
  {
    if (a2)
    {
      BOOL v7 = v5 == a1 && v6 == a2;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_12;
      }
    }
  }
  else if (!a2)
  {
    goto LABEL_14;
  }
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 40) = 1;
LABEL_12:
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
LABEL_14:
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  swift_bridgeObjectRelease();
  sub_100218670(v5, v6);

  return swift_bridgeObjectRelease();
}

void sub_100218390(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 56);
  if (!v5)
  {
    if (!a2) {
      return;
    }
LABEL_10:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A9988);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446466;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100390EA0);
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v13 = String.init<A>(describing:)();
      sub_1001B3178(v13, v14, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "_cachedDescription changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v3 + 32))
      {
LABEL_14:
        *(unsigned char *)(v3 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (*(void *)(v3 + 32)) {
        goto LABEL_14;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (!a2) {
    goto LABEL_10;
  }
  BOOL v6 = *(void *)(v2 + 48) == a1 && v5 == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_10;
  }
}

void sub_100218670(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 72);
  if (!v5)
  {
    if (!a2) {
      return;
    }
LABEL_10:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A9988);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446466;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100390EA0);
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v13 = String.init<A>(describing:)();
      sub_1001B3178(v13, v14, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "_cachedSilenceDescription changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v3 + 32))
      {
LABEL_14:
        *(unsigned char *)(v3 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (*(void *)(v3 + 32)) {
        goto LABEL_14;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (!a2) {
    goto LABEL_10;
  }
  BOOL v6 = *(void *)(v2 + 64) == a1 && v5 == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_10;
  }
}

uint64_t sub_100218950()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 34;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 34;
}

uint64_t sub_1002189C0(uint64_t a1)
{
  return sub_10022415C(a1, &qword_10038F140);
}

uint64_t sub_1002189CC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ServiceOutages(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100387FA0);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100388188);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100387FA0);
  sub_10000D2A0(a1, v15, &qword_100387FA0);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, &qword_100387FA0);
    }
    char v18 = &qword_100388188;
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_100387FA0);
    if (v16(v15, 1, v3) == 1)
    {
      char v18 = &qword_100388188;
    }
    else
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for ServiceOutages);
      if (static Date.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v19 = sub_100231FBC(*(void *)&v9[*(int *)(v3 + 24)], *(void *)&v6[*(int *)(v3 + 24)]);
        sub_100232D70((uint64_t)v6, type metadata accessor for ServiceOutages);
        sub_100232D70((uint64_t)v9, type metadata accessor for ServiceOutages);
        uint64_t result = sub_10000950C((uint64_t)v13, &qword_100387FA0);
        if (v19) {
          return result;
        }
        if (*(void *)(v1 + 32)) {
          goto LABEL_15;
        }
LABEL_11:
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        return Subject<>.send()();
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for ServiceOutages);
      char v18 = &qword_100387FA0;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for ServiceOutages);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, v18);
  if (!*(void *)(v1 + 32)) {
    goto LABEL_11;
  }
LABEL_15:
  *(unsigned char *)(v1 + 40) = 1;
  return result;
}

void sub_100218D58(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ServiceOutages(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004010(&qword_100387FA0);
  uint64_t v7 = __chkstk_darwin(v38);
  uint64_t v36 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = sub_100004010(&qword_100388188);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  uint64_t v37 = v17;
  uint64_t v19 = v17;
  uint64_t v20 = a1;
  sub_10000D2A0(v19, (uint64_t)v16, &qword_100387FA0);
  sub_10000D2A0(a1, v18, &qword_100387FA0);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v16, 1, v3) == 1)
  {
    if (v21(v18, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, &qword_100387FA0);
      return;
    }
    double v22 = &qword_100388188;
    uint64_t v24 = v39;
    uint64_t v23 = (uint64_t)v40;
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, &qword_100387FA0);
    if (v21(v18, 1, v3) == 1)
    {
      double v22 = &qword_100388188;
      uint64_t v23 = (uint64_t)v40;
    }
    else
    {
      sub_100233C38(v18, (uint64_t)v6, type metadata accessor for ServiceOutages);
      char v25 = static Date.== infix(_:_:)();
      uint64_t v23 = (uint64_t)v40;
      if (v25 & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v26 = sub_100231FBC(*(void *)&v12[*(int *)(v3 + 24)], *(void *)&v6[*(int *)(v3 + 24)]);
        sub_100232D70((uint64_t)v6, type metadata accessor for ServiceOutages);
        sub_100232D70((uint64_t)v12, type metadata accessor for ServiceOutages);
        sub_10000950C((uint64_t)v16, &qword_100387FA0);
        uint64_t v24 = v39;
        if (v26) {
          return;
        }
        goto LABEL_14;
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for ServiceOutages);
      double v22 = &qword_100387FA0;
    }
    uint64_t v24 = v39;
    sub_100232D70((uint64_t)v12, type metadata accessor for ServiceOutages);
  }
  sub_10000950C((uint64_t)v16, v22);
LABEL_14:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000FD84(v27, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v20, v23, &qword_100387FA0);
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = (char *)swift_slowAlloc();
    float64x2_t v42 = v40;
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v31 = v36;
    sub_10000D2A0(v23, v36, &qword_100387FA0);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v32, v33, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v23, &qword_100387FA0);
    *(_WORD *)(v30 + 12) = 2082;
    sub_10000D2A0(v37, v31, &qword_100387FA0);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v34, v35, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Outages changed from: %{public}s to: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000950C(v23, &qword_100387FA0);

    swift_release_n();
  }
  sub_10021936C();
  if (*(void *)(v24 + 32))
  {
    *(unsigned char *)(v24 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

void sub_10021936C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100387FA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100387FA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v13 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  sub_10000D2A0(v13, (uint64_t)v7, &qword_100387FA0);
  uint64_t v14 = type metadata accessor for ServiceOutages(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  int v16 = v15(v7, 1, v14);
  sub_10000950C((uint64_t)v7, &qword_100387FA0);
  if (v16 != 1
    && (v15((char *)v13, 1, v14) || *(void *)(*(void *)(v13 + *(int *)(v14 + 24)) + 16))
    || (uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod,
        swift_beginAccess(),
        sub_10000D2A0(v17, (uint64_t)v4, &qword_100387FA8),
        uint64_t v18 = type metadata accessor for SilencePeriod(0),
        LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v4, 1, v18),
        sub_10000950C((uint64_t)v4, &qword_100387FA8),
        v17 != 1))
  {
    if (*(void *)(v1 + 80)) {
      return;
    }
    uint64_t v21 = self;
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_100233D00;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008A9B0;
    aBlock[3] = &unk_10035F568;
    uint64_t v23 = _Block_copy(aBlock);
    swift_release();
    id v24 = [v21 scheduledTimerWithTimeInterval:1 repeats:v23 block:1.0];
    _Block_release(v23);
    uint64_t v20 = *(void **)(v1 + 80);
    *(void *)(v1 + 80) = v24;
  }
  else
  {
    uint64_t v19 = *(void **)(v1 + 80);
    if (v19)
    {
      [v19 invalidate];
      uint64_t v20 = *(void **)(v1 + 80);
    }
    else
    {
      uint64_t v20 = 0;
    }
    *(void *)(v1 + 80) = 0;
  }
}

uint64_t sub_100219778(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SilencePeriod(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100387FA8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100388180);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100387FA8);
  sub_10000D2A0(a1, v15, &qword_100387FA8);
  int v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, &qword_100387FA8);
    }
    uint64_t v18 = &qword_100388180;
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_100387FA8);
    if (v16(v15, 1, v3) == 1)
    {
      uint64_t v18 = &qword_100388180;
    }
    else
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for SilencePeriod);
      if (static Date.== infix(_:_:)())
      {
        char v19 = static Date.== infix(_:_:)();
        sub_100232D70((uint64_t)v6, type metadata accessor for SilencePeriod);
        sub_100232D70((uint64_t)v9, type metadata accessor for SilencePeriod);
        uint64_t result = sub_10000950C((uint64_t)v13, &qword_100387FA8);
        if (v19) {
          return result;
        }
        if (!*(void *)(v1 + 32)) {
          goto LABEL_14;
        }
LABEL_10:
        *(unsigned char *)(v1 + 40) = 1;
        return result;
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for SilencePeriod);
      uint64_t v18 = &qword_100387FA8;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for SilencePeriod);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, v18);
  if (*(void *)(v1 + 32)) {
    goto LABEL_10;
  }
LABEL_14:
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

void sub_100219AF0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SilencePeriod(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004010(&qword_100387FA8);
  uint64_t v7 = __chkstk_darwin(v38);
  uint64_t v36 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = sub_100004010(&qword_100388180);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  int v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  uint64_t v37 = v17;
  uint64_t v19 = v17;
  uint64_t v20 = a1;
  sub_10000D2A0(v19, (uint64_t)v16, &qword_100387FA8);
  sub_10000D2A0(a1, v18, &qword_100387FA8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v16, 1, v3) == 1)
  {
    if (v21(v18, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, &qword_100387FA8);
      return;
    }
    uint64_t v22 = &qword_100388180;
    uint64_t v24 = v39;
    uint64_t v23 = (uint64_t)v40;
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, &qword_100387FA8);
    if (v21(v18, 1, v3) == 1)
    {
      uint64_t v22 = &qword_100388180;
      uint64_t v23 = (uint64_t)v40;
    }
    else
    {
      sub_100233C38(v18, (uint64_t)v6, type metadata accessor for SilencePeriod);
      char v25 = static Date.== infix(_:_:)();
      uint64_t v23 = (uint64_t)v40;
      if (v25)
      {
        char v26 = static Date.== infix(_:_:)();
        sub_100232D70((uint64_t)v6, type metadata accessor for SilencePeriod);
        sub_100232D70((uint64_t)v12, type metadata accessor for SilencePeriod);
        sub_10000950C((uint64_t)v16, &qword_100387FA8);
        uint64_t v24 = v39;
        if (v26) {
          return;
        }
        goto LABEL_13;
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for SilencePeriod);
      uint64_t v22 = &qword_100387FA8;
    }
    uint64_t v24 = v39;
    sub_100232D70((uint64_t)v12, type metadata accessor for SilencePeriod);
  }
  sub_10000950C((uint64_t)v16, v22);
LABEL_13:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000FD84(v27, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v20, v23, &qword_100387FA8);
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = (char *)swift_slowAlloc();
    float64x2_t v42 = v40;
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v31 = v36;
    sub_10000D2A0(v23, v36, &qword_100387FA8);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v32, v33, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v23, &qword_100387FA8);
    *(_WORD *)(v30 + 12) = 2082;
    sub_10000D2A0(v37, v31, &qword_100387FA8);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v34, v35, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Silence period changed from: %{public}s to: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000950C(v23, &qword_100387FA8);

    swift_release_n();
  }
  sub_10021936C();
  if (*(void *)(v24 + 32))
  {
    *(unsigned char *)(v24 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

uint64_t sub_10021A0F0(uint64_t a1)
{
  uint64_t v73 = a1;
  uint64_t v2 = sub_100004010(&qword_100380418);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v70 = (uint64_t)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v71 = (uint64_t)v56 - v5;
  uint64_t v69 = type metadata accessor for ServiceOutages.Outage(0);
  uint64_t v58 = *(void *)(v69 - 8);
  uint64_t v6 = __chkstk_darwin(v69);
  uint64_t v74 = (uint64_t)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v59 = (char *)v56 - v8;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v64 = *(void (***)(char *, uint64_t, uint64_t))(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v68 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v56 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v67 = (char *)v56 - v18;
  uint64_t v19 = sub_100004010(&qword_100387FA0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ServiceOutages(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  char v26 = (char *)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v56 - v27;
  uint64_t v29 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  sub_10000D2A0(v29, (uint64_t)v21, &qword_100387FA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_10000950C((uint64_t)v21, &qword_100387FA0);
    return 0;
  }
  uint64_t v62 = v17;
  uint64_t v63 = v1;
  uint64_t v72 = v14;
  sub_100233C38((uint64_t)v21, (uint64_t)v28, type metadata accessor for ServiceOutages);
  uint64_t v30 = sub_1002340A0((unint64_t *)&qword_100388198, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v31 = v73;
  char v32 = dispatch thunk of static Comparable.< infix(_:_:)();
  unint64_t v33 = v64;
  uint64_t v34 = v67;
  float64x2_t v60 = v64[2];
  float64x2_t v61 = v64 + 2;
  v60(v67, v31, v9);
  sub_100232D08((uint64_t)v28, (uint64_t)v26, type metadata accessor for ServiceOutages);
  if (v32)
  {
    sub_100232D70((uint64_t)v26, type metadata accessor for ServiceOutages);
    ((void (*)(char *, uint64_t))v33[1])(v34, v9);
LABEL_18:
    sub_100232D70((uint64_t)v28, type metadata accessor for ServiceOutages);
    return 0;
  }
  char v35 = dispatch thunk of static Comparable.< infix(_:_:)();
  sub_100232D70((uint64_t)v26, type metadata accessor for ServiceOutages);
  uint64_t v36 = (void (*)(char *, uint64_t))v33[1];
  v36(v67, v9);
  if (v35) {
    goto LABEL_18;
  }
  uint64_t v67 = (char *)v36;
  uint64_t v37 = *(void *)&v28[*(int *)(v22 + 24)];
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38) {
    goto LABEL_18;
  }
  uint64_t v66 = v30;
  uint64_t v57 = v28;
  uint64_t v39 = v37 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
  uint64_t v64 = v33 + 4;
  uint64_t v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 6);
  uint64_t v58 = *(void *)(v58 + 72);
  v56[1] = v37;
  swift_bridgeObjectRetain();
  uint64_t v40 = (uint64_t)v59;
  while (1)
  {
    sub_100232D08(v39, v40, type metadata accessor for ServiceOutages.Outage);
    uint64_t v41 = v71;
    sub_10000D2A0(v40, v71, &qword_100380418);
    float64x2_t v42 = *v65;
    if ((*v65)(v41, 1, v9) == 1)
    {
      uint64_t v43 = v62;
      static Date.distantPast.getter();
      sub_10000950C(v41, &qword_100380418);
    }
    else
    {
      uint64_t v43 = v62;
      (*v64)(v62, v41, v9);
    }
    char v44 = dispatch thunk of static Comparable.< infix(_:_:)();
    long long v45 = v43;
    long long v46 = (void (*)(char *, uint64_t))v67;
    ((void (*)(char *, uint64_t))v67)(v45, v9);
    v60(v72, v31, v9);
    uint64_t v47 = v74;
    sub_100232D08(v40, v74, type metadata accessor for ServiceOutages.Outage);
    if ((v44 & 1) == 0) {
      break;
    }
    uint64_t v48 = v70;
    sub_10000D2A0(v47 + *(int *)(v69 + 20), v70, &qword_100380418);
    if (v42(v48, 1, v9) == 1)
    {
      uint64_t v49 = v68;
      static Date.distantFuture.getter();
      sub_10000950C(v48, &qword_100380418);
    }
    else
    {
      uint64_t v49 = v68;
      (*v64)(v68, v48, v9);
    }
    uint64_t v50 = v72;
    char v51 = dispatch thunk of static Comparable.< infix(_:_:)();
    uint64_t v52 = v49;
    uint64_t v53 = (void (*)(char *, uint64_t))v67;
    ((void (*)(char *, uint64_t))v67)(v52, v9);
    sub_100232D70(v74, type metadata accessor for ServiceOutages.Outage);
    v53(v50, v9);
    if ((v51 & 1) == 0) {
      goto LABEL_22;
    }
    sub_100232D70(v40, type metadata accessor for ServiceOutages.Outage);
    v39 += v58;
    --v38;
    uint64_t v31 = v73;
    if (!v38)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = v57;
      goto LABEL_18;
    }
  }
  sub_100232D70(v47, type metadata accessor for ServiceOutages.Outage);
  v46(v72, v9);
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_10021A948(v40, v73);
  sub_100232D70(v40, type metadata accessor for ServiceOutages.Outage);
  sub_100232D70((uint64_t)v57, type metadata accessor for ServiceOutages);
  return v54;
}

uint64_t sub_10021A948(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v3 = sub_100004010(&qword_100387FA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v66 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ServiceOutages.Outage(0);
  __chkstk_darwin(v73);
  uint64_t v75 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100380418);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v71 = (uint64_t)&v60 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v69 = (uint64_t)&v60 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v63 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v64 = (char *)&v60 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v70 = (char *)&v60 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v60 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v60 - v29;
  sub_10000D2A0(a1, (uint64_t)v14, &qword_100380418);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  uint64_t v74 = v16 + 48;
  uint64_t v76 = v31;
  unsigned int v32 = v31((uint64_t)v14, 1, v15);
  uint64_t v68 = v25;
  uint64_t v33 = a1;
  if (v32 == 1)
  {
    static Date.distantPast.getter();
    sub_10000950C((uint64_t)v14, &qword_100380418);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v30, v14, v15);
  }
  sub_1002340A0((unint64_t *)&qword_100388198, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v34 = v77;
  char v35 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v16 + 8);
  v36(v30, v15);
  uint64_t v72 = v16;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v62(v28, v34, v15);
  uint64_t v37 = v33;
  uint64_t v38 = v33;
  uint64_t v39 = v75;
  sub_100232D08(v38, v75, type metadata accessor for ServiceOutages.Outage);
  if (v35)
  {
    float64x2_t v61 = v36;
    uint64_t v40 = v69;
    sub_10000D2A0(v39 + *(int *)(v73 + 20), v69, &qword_100380418);
    if (v76(v40, 1, v15) == 1)
    {
      uint64_t v41 = v68;
      static Date.distantFuture.getter();
      sub_10000950C(v40, &qword_100380418);
    }
    else
    {
      uint64_t v41 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v68, v40, v15);
    }
    char v43 = dispatch thunk of static Comparable.< infix(_:_:)();
    float64x2_t v42 = v61;
    v61(v41, v15);
    sub_100232D70(v39, type metadata accessor for ServiceOutages.Outage);
    v42(v28, v15);
    if (v43) {
      return 0;
    }
  }
  else
  {
    sub_100232D70(v39, type metadata accessor for ServiceOutages.Outage);
    v36(v28, v15);
    float64x2_t v42 = v36;
  }
  uint64_t v44 = v71;
  sub_10000D2A0(v37, v71, &qword_100380418);
  if (v76(v44, 1, v15) == 1)
  {
    long long v45 = v70;
    static Date.distantPast.getter();
    sub_10000950C(v44, &qword_100380418);
  }
  else
  {
    long long v45 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v70, v44, v15);
  }
  char v46 = static Date.< infix(_:_:)();
  v42(v45, v15);
  if ((v46 & 1) == 0) {
    return 0;
  }
  uint64_t v47 = v67;
  sub_10000D2A0(v37 + *(int *)(v73 + 20), v67, &qword_100380418);
  if (v76(v47, 1, v15) != 1)
  {
    uint64_t v57 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v64, v47, v15);
    Date.timeIntervalSince(_:)();
    double v59 = v58;
    if (qword_10037DEB8 != -1) {
      swift_once();
    }
    swift_retain();
    sub_10002280C(v78);
    uint64_t v56 = sub_1002334E0(&v78[0]._countAndFlagsBits, v59);
    sub_100233D20((uint64_t)v78);
    swift_release();
    v42(v57, v15);
    return (uint64_t)v56;
  }
  sub_10000950C(v47, &qword_100380418);
  uint64_t v48 = v65 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess();
  uint64_t v49 = v66;
  sub_10000D2A0(v48, v66, &qword_100387FA0);
  uint64_t v50 = type metadata accessor for ServiceOutages(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v49, 1, v50);
  if (result != 1)
  {
    uint64_t v52 = v49 + *(int *)(v50 + 20);
    uint64_t v53 = v63;
    v62(v63, v52, v15);
    sub_100232D70(v49, type metadata accessor for ServiceOutages);
    Date.timeIntervalSince(_:)();
    double v55 = v54;
    v42(v53, v15);
    if (qword_10037DEB8 != -1) {
      swift_once();
    }
    swift_retain();
    sub_10002280C(v78);
    uint64_t v56 = sub_1002334E0(&v78[0]._countAndFlagsBits, v55);
    sub_100233D20((uint64_t)v78);
    swift_release();
    return (uint64_t)v56;
  }
  __break(1u);
  return result;
}

uint64_t sub_10021B204()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v23 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - v8;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = *(void *)(result + 32);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      *(void *)(result + 32) = v14;
      Date.init()();
      uint64_t v15 = (uint64_t)sub_100217E3C((uint64_t)v9);
      uint64_t v17 = v16;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v7, v9, v0);
      if (!v17)
      {
        uint64_t v15 = sub_10021A0F0((uint64_t)v7);
        uint64_t v17 = v18;
      }
      uint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
      v19(v7, v0);
      v19(v9, v0);
      sub_100217D14(v15, v17);
      Date.init()();
      uint64_t v20 = sub_100217E3C((uint64_t)v4);
      uint64_t v22 = v21;
      v19(v4, v0);
      sub_100218268((uint64_t)v20, v22);
      sub_10024572C(v11);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10021B40C()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 80) = 0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  uint64_t v3 = type metadata accessor for ServiceOutages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod;
  uint64_t v5 = type metadata accessor for SilencePeriod(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  return v1;
}

uint64_t sub_10021B528()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages, &qword_100387FA0);
  return sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod, &qword_100387FA8);
}

uint64_t sub_10021B584()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages, &qword_100387FA0);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__silencePeriod, &qword_100387FA8);

  return swift_deallocClassInstance();
}

uint64_t sub_10021B630()
{
  return type metadata accessor for ServiceOutageModel(0);
}

uint64_t type metadata accessor for ServiceOutageModel(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038F800);
}

void sub_10021B658()
{
  sub_10021B770(319, &qword_1003880B8, (void (*)(uint64_t))type metadata accessor for ServiceOutages);
  if (v0 <= 0x3F)
  {
    sub_10021B770(319, &qword_1003880C0, (void (*)(uint64_t))type metadata accessor for SilencePeriod);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10021B770(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10021B7C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v27 = v6;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v9 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v9 = _swiftEmptySetSingleton;
  }
  *(void *)(v0 + 48) = v9;
  uint64_t v26 = v0 + 48;
  type metadata accessor for TimerBasedHysteresisScheduler();
  uint64_t v10 = swift_allocObject();
  sub_100004010(&qword_100390FA8);
  uint64_t v11 = swift_allocObject();
  *(void *)(v1 + 56) = sub_100232A54(v10, 0xD000000000000010, 0x80000001002D52D0, (uint64_t)sub_10021BEA0, 0, v11, 2);
  uint64_t v12 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  uint64_t v13 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__userVisibleProgressTimer) = 0;
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  uint64_t v15 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress;
  uint64_t v17 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  swift_release();
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  uint64_t v28 = *(void *)(*(void *)(v1 + 56) + 16);
  sub_10000FDBC();
  swift_retain();
  swift_retain();
  id v29 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v25 = v19 + 56;
  v24(v4, 1, 1, v18);
  void v23[3] = sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  v23[2] = sub_1002340A0((unint64_t *)&qword_100393AC0, (void (*)(uint64_t))sub_10000FDBC);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v4, &qword_1003924A0);

  swift_release();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_100234248;
  *(void *)(v20 + 24) = v1;
  v23[1] = sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v27 = *(void *)(v27 + 8);
  ((void (*)(char *, uint64_t))v27)(v8, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v28 = *(void *)(*(void *)(v1 + 56) + 24);
  swift_retain();
  id v29 = (id)static OS_dispatch_queue.main.getter();
  v24(v4, 1, 1, v18);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v4, &qword_1003924A0);

  swift_release();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10023426C;
  *(void *)(v21 + 24) = v1;
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v27)(v8, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10021BE20(uint64_t result)
{
  if (*(void *)(result + 32))
  {
    *(unsigned char *)(result + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_10021BEA0(unsigned char *a1, unsigned char *a2)
{
  if ((*a2 == 2) | *a2 & 1 | (*a1 == 2 || (*a1 & 1) == 0)) {
    return 0;
  }
  else {
    return 0x4024000000000000;
  }
}

uint64_t sub_10021BEDC(uint64_t a1)
{
  double v59 = (char *)a1;
  uint64_t v1 = sub_100004010(&qword_100390E80);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v58 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v51 - v5;
  __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t)&v51 - v7;
  uint64_t v8 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v56 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TransmissionProgress(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v55 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v51 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v51 - v24;
  sub_10000D2A0((uint64_t)v59, (uint64_t)v13, &qword_10037F158);
  uint64_t v26 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10000950C((uint64_t)v13, &qword_10037F158);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, 1, 1, v8);
    uint64_t v27 = v60 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
    swift_beginAccess();
    uint64_t v28 = v58;
    sub_10000D2A0(v27, v58, &qword_100390E80);
    sub_10021E324((uint64_t)v6);
    swift_beginAccess();
    sub_1001B6344((uint64_t)v6, v27, &qword_100390E80);
    swift_endAccess();
    sub_10021E6AC(v28);
    sub_10000950C((uint64_t)v6, &qword_100390E80);
    return sub_10000950C(v28, &qword_100390E80);
  }
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  double v59 = v6;
  sub_100233C38((uint64_t)v13, (uint64_t)v25, type metadata accessor for TransmissionProgress);
  uint64_t v30 = (uint64_t)v25;
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000FD84(v31, (uint64_t)qword_1003A9988);
  sub_100232D08((uint64_t)v25, (uint64_t)v23, type metadata accessor for TransmissionProgress);
  unsigned int v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  uint64_t v34 = v26;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v52 = v25;
    char v35 = (uint8_t *)swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)char v35 = 136446210;
    sub_100232D08((uint64_t)v23, (uint64_t)v20, type metadata accessor for TransmissionProgress);
    uint64_t v36 = String.init<A>(describing:)();
    uint64_t v61 = sub_1001B3178(v36, v37, v62);
    uint64_t v30 = (uint64_t)v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100232D70((uint64_t)v23, type metadata accessor for TransmissionProgress);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Transmission progress received: %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100232D70((uint64_t)v23, type metadata accessor for TransmissionProgress);
  }

  uint64_t v38 = (uint64_t)v59;
  uint64_t v39 = v54;
  uint64_t v40 = v60 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  swift_beginAccess();
  uint64_t v41 = v57;
  sub_10000D2A0(v40, v57, &qword_100390E80);
  uint64_t v42 = v53;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v53) != 1)
  {
    uint64_t v44 = v56;
    sub_100233C38(v41, v56, type metadata accessor for ConnectionModel.UserTransmissionProgress);
    uint64_t v45 = *(int *)(v34 + 28);
    uint64_t v46 = *(void *)(v44 + v45);
    if (*(void *)(v30 + v45) >= v46)
    {
      uint64_t v47 = v55;
      sub_100232D08(v30, v55, type metadata accessor for TransmissionProgress);
      if (v46 > 99)
      {
        sub_100232D70(v47, type metadata accessor for TransmissionProgress);
      }
      else
      {
        uint64_t v48 = *(void *)(v47 + *(int *)(v34 + 28));
        sub_100232D70(v47, type metadata accessor for TransmissionProgress);
        if (v48 >= 100)
        {
          sub_10021C9C4(v30);
          sub_100232D08(v30, v38, type metadata accessor for TransmissionProgress);
          sub_100232D08(v30, v38 + *(int *)(v42 + 20), type metadata accessor for TransmissionProgress);
          *(void *)(v38 + *(int *)(v42 + 24)) = *(void *)(v44 + *(int *)(v42 + 24));
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v42);
          uint64_t v49 = v58;
          sub_10000D2A0(v40, v58, &qword_100390E80);
          uint64_t v50 = v38;
LABEL_18:
          sub_10021E324(v50);
          swift_beginAccess();
          sub_1001B6344(v38, v40, &qword_100390E80);
          swift_endAccess();
          sub_10021E6AC(v49);
          sub_10000950C(v38, &qword_100390E80);
          sub_10000950C(v49, &qword_100390E80);
          sub_100232D70(v44, type metadata accessor for ConnectionModel.UserTransmissionProgress);
          return sub_100232D70(v30, type metadata accessor for TransmissionProgress);
        }
      }
      sub_100232D08(v30, v38, type metadata accessor for TransmissionProgress);
      sub_100232D08(v44 + *(int *)(v42 + 20), v38 + *(int *)(v42 + 20), type metadata accessor for TransmissionProgress);
      *(void *)(v38 + *(int *)(v42 + 24)) = *(void *)(v44 + *(int *)(v42 + 24));
    }
    else
    {
      sub_10021C7C8(v30, v38);
    }
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v42);
    uint64_t v49 = v58;
    sub_10000D2A0(v40, v58, &qword_100390E80);
    uint64_t v50 = v38;
    goto LABEL_18;
  }
  sub_10000950C(v41, &qword_100390E80);
  sub_10021C7C8(v30, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v42);
  uint64_t v43 = v58;
  sub_10000D2A0(v40, v58, &qword_100390E80);
  sub_10021E324(v38);
  swift_beginAccess();
  sub_1001B6344(v38, v40, &qword_100390E80);
  swift_endAccess();
  sub_10021E6AC(v43);
  sub_10000950C(v38, &qword_100390E80);
  sub_10000950C(v43, &qword_100390E80);
  return sub_100232D70(v30, type metadata accessor for TransmissionProgress);
}

uint64_t sub_10021C7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TransmissionProgress(0);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  double v6 = (double)*(uint64_t *)v5;
  if (*(unsigned char *)(v5 + 8)) {
    double v6 = 0.0;
  }
  double v7 = round((double)*(uint64_t *)(a1 + *(int *)(v4 + 28)) / 100.0 * v6);
  if (v7 < 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = v7;
  }
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v8 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 < 1.84467441e19)
  {
    if (qword_10037DD90 == -1) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  swift_once();
LABEL_10:
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9988);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134349056;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting new transmission progress with %{public}llu seconds in", v12, 0xCu);
    swift_slowDealloc();
  }

  sub_100232D08(a1, a2, type metadata accessor for TransmissionProgress);
  uint64_t v13 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  uint64_t result = sub_100232D08(a1, a2 + *(int *)(v13 + 20), type metadata accessor for TransmissionProgress);
  *(void *)(a2 + *(int *)(v13 + 24)) = (unint64_t)v8;
  return result;
}

uint64_t sub_10021C9C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = sub_100004010(&qword_100390E88);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v40 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v7 = (char *)&v37 - v6;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v37 - v13;
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9988);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Scheduling 100%% transmission usability timer", v18, 2u);
    swift_slowDealloc();
  }

  UUID.init()();
  if (*(unsigned char *)(v41 + *(int *)(type metadata accessor for TransmissionProgress(0) + 32)) == 3) {
    double v19 = 4.0;
  }
  else {
    double v19 = 2.0;
  }
  uint64_t v20 = self;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  unint64_t v37 = v14;
  uint64_t v39 = v2;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v22(v12, v14, v8);
  uint64_t v23 = v9;
  unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v21;
  uint64_t v26 = *(void (**)(unint64_t, char *, uint64_t))(v23 + 32);
  uint64_t v27 = v12;
  uint64_t v28 = v8;
  uint64_t v38 = v8;
  v26(v25 + v24, v27, v8);
  aBlock[4] = sub_100234088;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008A9B0;
  aBlock[3] = &unk_10035F770;
  id v29 = _Block_copy(aBlock);
  swift_release();
  id v30 = [v20 scheduledTimerWithTimeInterval:0 repeats:v29 block:v19];
  _Block_release(v29);
  uint64_t v31 = v37;
  v22(v7, v37, v28);
  uint64_t v32 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  sub_100232D08(v41, (uint64_t)&v7[*(int *)(v32 + 20)], type metadata accessor for TransmissionProgress);
  *(void *)&v7[*(int *)(v32 + 24)] = v30;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v7, 0, 1, v32);
  uint64_t v33 = v39 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  swift_beginAccess();
  uint64_t v34 = v40;
  sub_10000D2A0(v33, v40, &qword_100390E88);
  id v35 = v30;
  sub_10021EFBC((uint64_t)v7);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v7, v33, &qword_100390E88);
  swift_endAccess();
  sub_10021F2E4(v34);
  sub_10000950C((uint64_t)v7, &qword_100390E88);
  sub_10000950C(v34, &qword_100390E88);

  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v31, v38);
}

uint64_t sub_10021CE8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v75 = a1;
  uint64_t v3 = sub_100004010(&qword_100390E88);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v63 - v7;
  uint64_t v65 = type metadata accessor for TransmissionProgress(0);
  uint64_t v9 = __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v63 = (uint64_t)&v63 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v63 - v13;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v67 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_10037F498);
  __chkstk_darwin(v74);
  double v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_10037F4A0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v73 = (uint64_t)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v63 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v63 - v26;
  uint64_t v28 = v2;
  uint64_t v29 = v2 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  swift_beginAccess();
  uint64_t v30 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  uint64_t v68 = *(void *)(v30 - 8);
  uint64_t v69 = v30;
  int v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 48))(v29, 1);
  uint64_t v71 = v6;
  uint64_t v72 = v28;
  uint64_t v70 = v8;
  uint64_t v66 = v14;
  uint64_t v76 = v29;
  if (v31)
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v32(v27, 1, 1, v15);
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v33(v27, v29, v15);
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v32(v27, 0, 1, v15);
  }
  uint64_t v34 = v74;
  v33(v25, v75, v15);
  v32(v25, 0, 1, v15);
  uint64_t v35 = (uint64_t)&v19[*(int *)(v34 + 48)];
  sub_10000D2A0((uint64_t)v27, (uint64_t)v19, &qword_10037F4A0);
  sub_10000D2A0((uint64_t)v25, v35, &qword_10037F4A0);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v36((uint64_t)v19, 1, v15) == 1)
  {
    sub_10000950C((uint64_t)v25, &qword_10037F4A0);
    sub_10000950C((uint64_t)v27, &qword_10037F4A0);
    int v37 = v36(v35, 1, v15);
    uint64_t v38 = v76;
    if (v37 == 1)
    {
      sub_10000950C((uint64_t)v19, &qword_10037F4A0);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v39 = v73;
    sub_10000D2A0((uint64_t)v19, v73, &qword_10037F4A0);
    int v40 = v36(v35, 1, v15);
    uint64_t v41 = v76;
    if (v40 != 1)
    {
      uint64_t v44 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v67, v35, v15);
      sub_1002340A0(&qword_10037F4B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v45 = v39;
      uint64_t v46 = v16;
      char v47 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v48(v44, v15);
      sub_10000950C((uint64_t)v25, &qword_10037F4A0);
      sub_10000950C((uint64_t)v27, &qword_10037F4A0);
      uint64_t v38 = v41;
      v48((char *)v45, v15);
      uint64_t result = sub_10000950C((uint64_t)v19, &qword_10037F4A0);
      if ((v47 & 1) == 0) {
        return result;
      }
LABEL_11:
      uint64_t v50 = v72 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
      swift_beginAccess();
      uint64_t v51 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v50, 1, v51))
      {
        uint64_t v52 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v70, 1, 1, v69);
        uint64_t v53 = (uint64_t)v71;
        sub_10000D2A0(v38, (uint64_t)v71, &qword_100390E88);
        sub_10021EFBC(v52);
        swift_beginAccess();
        sub_1001B6344(v52, v38, &qword_100390E88);
        swift_endAccess();
        sub_10021F2E4(v53);
        sub_10000950C(v52, &qword_100390E88);
        uint64_t v43 = v53;
        uint64_t v42 = &qword_100390E88;
        return sub_10000950C(v43, v42);
      }
      uint64_t v54 = v50;
      uint64_t v55 = v63;
      sub_100232D08(v54, v63, type metadata accessor for TransmissionProgress);
      uint64_t v56 = v66;
      sub_100233C38(v55, (uint64_t)v66, type metadata accessor for TransmissionProgress);
      uint64_t v57 = v65;
      uint64_t v58 = *(void *)((char *)v56 + *(int *)(v65 + 28));
      uint64_t v59 = v64;
      sub_100232D08((uint64_t)v56, v64, type metadata accessor for TransmissionProgress);
      if (v58 < 1)
      {
        sub_100232D70(v59, type metadata accessor for TransmissionProgress);
      }
      else
      {
        uint64_t v60 = *(void *)(v59 + *(int *)(v57 + 28));
        sub_100232D70(v59, type metadata accessor for TransmissionProgress);
        if (v60 < 100)
        {
          sub_10021D700(v56);
          return sub_100232D70((uint64_t)v56, type metadata accessor for TransmissionProgress);
        }
      }
      uint64_t v61 = (uint64_t)v70;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v70, 1, 1, v69);
      uint64_t v62 = (uint64_t)v71;
      sub_10000D2A0(v38, (uint64_t)v71, &qword_100390E88);
      sub_10021EFBC(v61);
      swift_beginAccess();
      sub_1001B6344(v61, v38, &qword_100390E88);
      swift_endAccess();
      sub_10021F2E4(v62);
      sub_10000950C(v61, &qword_100390E88);
      sub_10000950C(v62, &qword_100390E88);
      return sub_100232D70((uint64_t)v56, type metadata accessor for TransmissionProgress);
    }
    sub_10000950C((uint64_t)v25, &qword_10037F4A0);
    sub_10000950C((uint64_t)v27, &qword_10037F4A0);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v39, v15);
  }
  uint64_t v42 = &qword_10037F498;
  uint64_t v43 = (uint64_t)v19;
  return sub_10000950C(v43, v42);
}

uint64_t sub_10021D700(void *a1)
{
  uint64_t v2 = sub_100004010(&qword_100390E88);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v41 - v5;
  uint64_t v48 = type metadata accessor for UUID();
  uint64_t v46 = *(void *)(v48 - 8);
  uint64_t v6 = __chkstk_darwin(v48);
  uint64_t v44 = v7;
  uint64_t v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = (int *)type metadata accessor for TransmissionProgress(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9988);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Scheduling 0%% transmission usability timer", v16, 2u);
    swift_slowDealloc();
  }

  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  sub_10000D2A0((uint64_t)a1 + v10[5], (uint64_t)v12 + v10[5], &qword_100380418);
  uint64_t v19 = v10[6];
  uint64_t v20 = *(void *)((char *)a1 + v19);
  char v21 = *((unsigned char *)a1 + v10[8]);
  char v22 = *((unsigned char *)a1 + v19 + 8);
  *uint64_t v12 = v18;
  v12[1] = v17;
  uint64_t v23 = (char *)v12 + v19;
  *(void *)uint64_t v23 = v20;
  v23[8] = v22;
  *(void *)((char *)v12 + v10[7]) = 0;
  *((unsigned char *)v12 + v10[8]) = v21;
  swift_bridgeObjectRetain();
  UUID.init()();
  id v42 = self;
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  uint64_t v25 = v45;
  uint64_t v26 = v46;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v28 = v48;
  v27(v45, v9, v48);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v24;
  unint64_t v31 = v30 + v29;
  uint64_t v32 = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v31, v25, v28);
  aBlock[4] = sub_1002341B8;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008A9B0;
  aBlock[3] = &unk_10035F7C0;
  uint64_t v33 = _Block_copy(aBlock);
  swift_release();
  id v34 = [v42 scheduledTimerWithTimeInterval:0 repeats:v33 block:1.0];
  _Block_release(v33);
  uint64_t v35 = (uint64_t)v43;
  v27(v43, v9, v32);
  uint64_t v36 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  sub_100232D08((uint64_t)v12, v35 + *(int *)(v36 + 20), type metadata accessor for TransmissionProgress);
  *(void *)(v35 + *(int *)(v36 + 24)) = v34;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  uint64_t v37 = v49 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  swift_beginAccess();
  uint64_t v38 = v47;
  sub_10000D2A0(v37, v47, &qword_100390E88);
  id v39 = v34;
  sub_10021EFBC(v35);
  swift_beginAccess();
  sub_1001B6344(v35, v37, &qword_100390E88);
  swift_endAccess();
  sub_10021F2E4(v38);
  sub_10000950C(v35, &qword_100390E88);
  sub_10000950C(v38, &qword_100390E88);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v48);
  return sub_100232D70((uint64_t)v12, type metadata accessor for TransmissionProgress);
}

uint64_t sub_10021DC6C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a4(a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_10021DCE0(uint64_t a1)
{
  uint64_t v46 = a1;
  uint64_t v2 = sub_100004010(&qword_100390E88);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v41 = (char *)&v37 - v5;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004010(&qword_10037F498);
  __chkstk_darwin(v45);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_10037F4A0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v44 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v37 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v43 = v1;
  uint64_t v19 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  swift_beginAccess();
  uint64_t v20 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  uint64_t v38 = *(void *)(v20 - 8);
  uint64_t v39 = v20;
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 48))(v19, 1);
  uint64_t v40 = v19;
  if (v21)
  {
    char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v22(v18, 1, 1, v6);
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v23(v18, v19, v6);
    char v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v22(v18, 0, 1, v6);
  }
  uint64_t v24 = v7;
  v23(v16, v46, v6);
  v22(v16, 0, 1, v6);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v45 + 48)];
  sub_10000D2A0((uint64_t)v18, (uint64_t)v10, &qword_10037F4A0);
  sub_10000D2A0((uint64_t)v16, v25, &qword_10037F4A0);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v26((uint64_t)v10, 1, v6) == 1)
  {
    sub_10000950C((uint64_t)v16, &qword_10037F4A0);
    sub_10000950C((uint64_t)v18, &qword_10037F4A0);
    if (v26(v25, 1, v6) == 1)
    {
      sub_10000950C((uint64_t)v10, &qword_10037F4A0);
LABEL_11:
      uint64_t v34 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v41, 1, 1, v39);
      uint64_t v35 = v40;
      uint64_t v36 = v42;
      sub_10000D2A0(v40, v42, &qword_100390E88);
      sub_10021EFBC(v34);
      swift_beginAccess();
      sub_1001B6344(v34, v35, &qword_100390E88);
      swift_endAccess();
      sub_10021F2E4(v36);
      sub_10000950C(v34, &qword_100390E88);
      uint64_t v29 = v36;
      uint64_t v28 = &qword_100390E88;
      return sub_10000950C(v29, v28);
    }
  }
  else
  {
    uint64_t v27 = v44;
    sub_10000D2A0((uint64_t)v10, v44, &qword_10037F4A0);
    if (v26(v25, 1, v6) != 1)
    {
      uint64_t v30 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v37, v25, v6);
      sub_1002340A0(&qword_10037F4B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      v32(v30, v6);
      sub_10000950C((uint64_t)v16, &qword_10037F4A0);
      sub_10000950C((uint64_t)v18, &qword_10037F4A0);
      v32((char *)v27, v6);
      uint64_t result = sub_10000950C((uint64_t)v10, &qword_10037F4A0);
      if ((v31 & 1) == 0) {
        return result;
      }
      goto LABEL_11;
    }
    sub_10000950C((uint64_t)v16, &qword_10037F4A0);
    sub_10000950C((uint64_t)v18, &qword_10037F4A0);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v27, v6);
  }
  uint64_t v28 = &qword_10037F498;
  uint64_t v29 = (uint64_t)v10;
  return sub_10000950C(v29, v28);
}

BOOL sub_10021E2BC(void *a1, void *a2, uint64_t a3)
{
  return (sub_100127A64(a1, a2) & 1) != 0
      && (sub_100127A64((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)a2 + *(int *)(a3 + 20))) & 1) != 0
      && *(void *)((char *)a1 + *(int *)(a3 + 24)) == *(void *)((char *)a2 + *(int *)(a3 + 24));
}

uint64_t sub_10021E324(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100004010(&qword_100390E80);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100004010(&qword_100390EA8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100390E80);
  sub_10000D2A0(a1, v15, &qword_100390E80);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, &qword_100390E80);
    }
    uint64_t v18 = &qword_100390EA8;
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_100390E80);
    if (v16(v15, 1, v3) == 1)
    {
      uint64_t v18 = &qword_100390EA8;
    }
    else
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for ConnectionModel.UserTransmissionProgress);
      if ((sub_100127A64(v9, v6) & 1) != 0
        && (sub_100127A64((void *)((char *)v9 + *(int *)(v3 + 20)), (void *)((char *)v6 + *(int *)(v3 + 20))) & 1) != 0)
      {
        uint64_t v19 = *(int *)(v3 + 24);
        uint64_t v20 = *(void *)((char *)v9 + v19);
        uint64_t v21 = *(void *)((char *)v6 + v19);
        sub_100232D70((uint64_t)v6, type metadata accessor for ConnectionModel.UserTransmissionProgress);
        sub_100232D70((uint64_t)v9, type metadata accessor for ConnectionModel.UserTransmissionProgress);
        uint64_t result = sub_10000950C((uint64_t)v13, &qword_100390E80);
        if (v20 == v21) {
          return result;
        }
        if (*(void *)(v1 + 32)) {
          goto LABEL_15;
        }
LABEL_11:
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        return Subject<>.send()();
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for ConnectionModel.UserTransmissionProgress);
      uint64_t v18 = &qword_100390E80;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for ConnectionModel.UserTransmissionProgress);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, v18);
  if (!*(void *)(v1 + 32)) {
    goto LABEL_11;
  }
LABEL_15:
  *(unsigned char *)(v1 + 40) = 1;
  return result;
}

void sub_10021E6AC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = sub_100004010(&qword_100390E80);
  uint64_t v7 = __chkstk_darwin(v40);
  uint64_t v38 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v42 = (char *)&v38 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v38 - v11);
  uint64_t v13 = sub_100004010(&qword_100390EA8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  uint64_t v39 = v17;
  uint64_t v19 = v17;
  uint64_t v20 = a1;
  sub_10000D2A0(v19, (uint64_t)v16, &qword_100390E80);
  sub_10000D2A0(a1, v18, &qword_100390E80);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v16, 1, v3) == 1)
  {
    if (v21(v18, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, &qword_100390E80);
      return;
    }
    uint64_t v22 = &qword_100390EA8;
    uint64_t v24 = v41;
    uint64_t v23 = (uint64_t)v42;
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, &qword_100390E80);
    if (v21(v18, 1, v3) == 1)
    {
      uint64_t v22 = &qword_100390EA8;
      uint64_t v23 = (uint64_t)v42;
    }
    else
    {
      sub_100233C38(v18, (uint64_t)v6, type metadata accessor for ConnectionModel.UserTransmissionProgress);
      char v25 = sub_100127A64(v12, v6);
      uint64_t v23 = (uint64_t)v42;
      if ((v25 & 1) != 0
        && (sub_100127A64((void *)((char *)v12 + *(int *)(v3 + 20)), (void *)((char *)v6 + *(int *)(v3 + 20))) & 1) != 0)
      {
        uint64_t v26 = *(int *)(v3 + 24);
        uint64_t v27 = *(void *)((char *)v12 + v26);
        uint64_t v28 = *(void *)((char *)v6 + v26);
        sub_100232D70((uint64_t)v6, type metadata accessor for ConnectionModel.UserTransmissionProgress);
        sub_100232D70((uint64_t)v12, type metadata accessor for ConnectionModel.UserTransmissionProgress);
        sub_10000950C((uint64_t)v16, &qword_100390E80);
        uint64_t v24 = v41;
        if (v27 == v28) {
          return;
        }
        goto LABEL_14;
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for ConnectionModel.UserTransmissionProgress);
      uint64_t v22 = &qword_100390E80;
    }
    uint64_t v24 = v41;
    sub_100232D70((uint64_t)v12, type metadata accessor for ConnectionModel.UserTransmissionProgress);
  }
  sub_10000950C((uint64_t)v16, v22);
LABEL_14:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000FD84(v29, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v20, v23, &qword_100390E80);
  swift_retain_n();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v42 = (char *)swift_slowAlloc();
    uint64_t v44 = v42;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v33 = v38;
    sub_10000D2A0(v23, v38, &qword_100390E80);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v43 = sub_1001B3178(v34, v35, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v23, &qword_100390E80);
    *(_WORD *)(v32 + 12) = 2082;
    sub_10000D2A0(v39, v33, &qword_100390E80);
    uint64_t v36 = String.init<A>(describing:)();
    uint64_t v43 = sub_1001B3178(v36, v37, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Transmission progress changed from: %{public}s to: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000950C(v23, &qword_100390E80);

    swift_release_n();
  }
  sub_10021ECBC();
  if (*(void *)(v24 + 32))
  {
    *(unsigned char *)(v24 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

void sub_10021ECBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100390E80);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v10, (uint64_t)v4, &qword_100390E80);
  uint64_t v11 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  LODWORD(v10) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11);
  sub_10000950C((uint64_t)v4, &qword_100390E80);
  uint64_t v12 = OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__userVisibleProgressTimer;
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__userVisibleProgressTimer);
  if (v10 == 1)
  {
    if (v13)
    {
      [v13 invalidate];
      uint64_t v14 = *(void **)(v1 + v12);
    }
    else
    {
      uint64_t v14 = 0;
    }
    *(void *)(v1 + v12) = 0;
  }
  else
  {
    if (v13) {
      return;
    }
    uint64_t v15 = self;
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_100233D8C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008A9B0;
    aBlock[3] = &unk_10035F5B8;
    uint64_t v17 = _Block_copy(aBlock);
    swift_release();
    id v18 = [v15 scheduledTimerWithTimeInterval:1 repeats:v17 block:1.0];
    _Block_release(v17);
    uint64_t v14 = *(void **)(v1 + v12);
    *(void *)(v1 + v12) = v18;
  }
}

uint64_t sub_10021EFBC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100390E88);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100390F98);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100390E88);
  sub_10000D2A0(a1, v15, &qword_100390E88);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, &qword_100390E88);
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_100390E88);
    if (v16(v15, 1, v3) != 1)
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
      char v18 = static UUID.== infix(_:_:)();
      sub_100232D70((uint64_t)v6, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
      sub_100232D70((uint64_t)v9, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
      uint64_t result = sub_10000950C((uint64_t)v13, &qword_100390E88);
      if (v18) {
        return result;
      }
      goto LABEL_8;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, &qword_100390F98);
LABEL_8:
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

void sub_10021F2E4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionModel.OverrideTransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004010(&qword_100390E88);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = sub_100004010(&qword_100390F98);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress;
  uint64_t v18 = a1;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_10000D2A0(v17, (uint64_t)v16, &qword_100390E88);
  sub_10000D2A0(a1, v19, &qword_100390E88);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v16, 1, v3) == 1)
  {
    if (v20(v19, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, &qword_100390E88);
      return;
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, &qword_100390E88);
    if (v20(v19, 1, v3) != 1)
    {
      sub_100233C38(v19, (uint64_t)v6, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
      char v32 = static UUID.== infix(_:_:)();
      sub_100232D70((uint64_t)v6, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
      sub_100232D70((uint64_t)v12, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
      sub_10000950C((uint64_t)v16, &qword_100390E88);
      uint64_t v21 = (uint64_t)v36;
      if (v32) {
        return;
      }
      goto LABEL_7;
    }
    sub_100232D70((uint64_t)v12, type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
  }
  sub_10000950C((uint64_t)v16, &qword_100390F98);
  uint64_t v21 = (uint64_t)v36;
LABEL_7:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v18, v21, &qword_100390E88);
  uint64_t v23 = v37;
  swift_retain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v36 = (char *)swift_slowAlloc();
    uint64_t v39 = v36;
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v27 = v34;
    sub_10000D2A0(v21, v34, &qword_100390E88);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v28, v29, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v23 = v37;
    swift_bridgeObjectRelease();
    sub_10000950C(v21, &qword_100390E88);
    *(_WORD *)(v26 + 12) = 2082;
    sub_10000D2A0(v17, v27, &qword_100390E88);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v30, v31, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Override transmission progress changed from: %{public}s to: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v23 + 32))
    {
LABEL_11:
      *(unsigned char *)(v23 + 41) = 1;
      return;
    }
  }
  else
  {
    sub_10000950C(v21, &qword_100390E88);

    swift_release_n();
    if (*(void *)(v23 + 32)) {
      goto LABEL_11;
    }
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
}

uint64_t sub_10021F890(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100004010(&qword_100388168);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_10037F158);
  sub_10000D2A0(a1, v15, &qword_10037F158);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, &qword_10037F158);
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_10037F158);
    if (v16(v15, 1, v3) != 1)
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for TransmissionProgress);
      char v18 = sub_100127A64(v9, v6);
      sub_100232D70((uint64_t)v6, type metadata accessor for TransmissionProgress);
      sub_100232D70((uint64_t)v9, type metadata accessor for TransmissionProgress);
      uint64_t result = sub_10000950C((uint64_t)v13, &qword_10037F158);
      if (v18) {
        return result;
      }
      goto LABEL_8;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for TransmissionProgress);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, &qword_100388168);
LABEL_8:
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

void sub_10021FBB8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TransmissionProgress(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_100004010(&qword_10037F158);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v33 - v11);
  uint64_t v13 = sub_100004010(&qword_100388168);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress;
  uint64_t v18 = a1;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_10000D2A0(v17, (uint64_t)v16, &qword_10037F158);
  sub_10000D2A0(a1, v19, &qword_10037F158);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v16, 1, v3) == 1)
  {
    if (v20(v19, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, &qword_10037F158);
      return;
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, &qword_10037F158);
    if (v20(v19, 1, v3) != 1)
    {
      sub_100233C38(v19, (uint64_t)v6, type metadata accessor for TransmissionProgress);
      char v32 = sub_100127A64(v12, v6);
      sub_100232D70((uint64_t)v6, type metadata accessor for TransmissionProgress);
      sub_100232D70((uint64_t)v12, type metadata accessor for TransmissionProgress);
      sub_10000950C((uint64_t)v16, &qword_10037F158);
      uint64_t v21 = (uint64_t)v36;
      if (v32) {
        return;
      }
      goto LABEL_7;
    }
    sub_100232D70((uint64_t)v12, type metadata accessor for TransmissionProgress);
  }
  sub_10000950C((uint64_t)v16, &qword_100388168);
  uint64_t v21 = (uint64_t)v36;
LABEL_7:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000FD84(v22, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v18, v21, &qword_10037F158);
  uint64_t v23 = v37;
  swift_retain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v36 = (char *)swift_slowAlloc();
    uint64_t v39 = v36;
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v27 = v34;
    sub_10000D2A0(v21, v34, &qword_10037F158);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v28, v29, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v23 = v37;
    swift_bridgeObjectRelease();
    sub_10000950C(v21, &qword_10037F158);
    *(_WORD *)(v26 + 12) = 2082;
    sub_10000D2A0(v17, v27, &qword_10037F158);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v38 = sub_1001B3178(v30, v31, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Simulated transmission progress changed from: %{public}s to: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v23 + 32))
    {
LABEL_11:
      *(unsigned char *)(v23 + 41) = 1;
      return;
    }
  }
  else
  {
    sub_10000950C(v21, &qword_10037F158);

    swift_release_n();
    if (*(void *)(v23 + 32)) {
      goto LABEL_11;
    }
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
}

uint64_t sub_100220164()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002201C0(1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002201C0(uint64_t a1)
{
  uint64_t v4 = (int *)type metadata accessor for TransmissionProgress(0);
  __chkstk_darwin(v4);
  uint64_t v69 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100390E80);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v68 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v65 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v65 - v12;
  uint64_t v14 = type metadata accessor for ConnectionModel.UserTransmissionProgress(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = v1;
  uint64_t v18 = v1 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v18, (uint64_t)v13, &qword_100390E80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_10000950C((uint64_t)v13, &qword_100390E80);
  }
  sub_100233C38((uint64_t)v13, (uint64_t)v17, type metadata accessor for ConnectionModel.UserTransmissionProgress);
  uint64_t v20 = (char *)v17 + v4[6];
  if ((v20[8] & 1) == 0)
  {
    uint64_t v21 = *(void *)v20;
    if (*(uint64_t *)v20 >= 1
      && *(uint64_t *)((char *)v17 + *(int *)(v14 + 20) + v4[7]) <= 99
      && (*(unsigned char *)(*(void *)(v70 + 56) + 120) & 1) != 0)
    {
      uint64_t v22 = *(void *)((char *)v17 + *(int *)(v14 + 24));
      BOOL v23 = __CFADD__(v22, a1);
      unint64_t v24 = v22 + a1;
      if (v23)
      {
        __break(1u);
        goto LABEL_47;
      }
      double v25 = (double)v24;
      double v26 = (double)v21;
      double v2 = (double)v24 / (double)v21;
      unint64_t v67 = v24;
      if (v2 <= 0.5)
      {
        if (qword_10037DD90 != -1) {
          goto LABEL_50;
        }
        goto LABEL_18;
      }
      if (v2 <= 1.0)
      {
        double v39 = (v25 - v26 * 0.5) * 0.3 / (v26 * 0.5);
        if (qword_10037DD90 != -1)
        {
          uint64_t v66 = *(void *)&v39;
          swift_once();
          double v39 = *(double *)&v66;
        }
        double v2 = v39 + 0.5;
        uint64_t v40 = type metadata accessor for Logger();
        sub_10000FD84(v40, (uint64_t)qword_1003A9988);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v33, v34)) {
          goto LABEL_37;
        }
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = v33;
        uint64_t v37 = v41;
        *(_WORD *)uint64_t v41 = 0;
        uint64_t v38 = "Slowing the progress down a bit";
        goto LABEL_36;
      }
      double v27 = v25 - v26;
      if (v27 <= 30.0)
      {
        double v42 = v27 * 0.00333333333;
        double v43 = 0.8;
        if (qword_10037DD90 != -1)
        {
          uint64_t v66 = 0x3FE999999999999ALL;
          swift_once();
          double v43 = *(double *)&v66;
        }
        double v2 = v42 + v43;
        uint64_t v44 = type metadata accessor for Logger();
        sub_10000FD84(v44, (uint64_t)qword_1003A9988);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v33, v34)) {
          goto LABEL_37;
        }
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = v33;
        uint64_t v37 = v45;
        *(_WORD *)uint64_t v45 = 0;
        uint64_t v38 = "Less than 30 seconds over the estimation";
        goto LABEL_36;
      }
      if (v27 <= 60.0)
      {
        double v46 = (v27 + -30.0) * 0.00166666667;
        double v47 = 0.9;
        if (qword_10037DD90 != -1)
        {
          uint64_t v66 = 0x3FECCCCCCCCCCCCDLL;
          swift_once();
          double v47 = *(double *)&v66;
        }
        double v2 = v46 + v47;
        uint64_t v48 = type metadata accessor for Logger();
        sub_10000FD84(v48, (uint64_t)qword_1003A9988);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v33, v34)) {
          goto LABEL_37;
        }
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = v33;
        uint64_t v37 = v49;
        *(_WORD *)uint64_t v49 = 0;
        uint64_t v38 = "Less than 60 seconds over the estimation";
        goto LABEL_36;
      }
      if (v27 <= 105.0)
      {
        double v50 = (v27 + -60.0) * 0.000666666667;
        double v51 = 0.95;
        if (qword_10037DD90 != -1)
        {
          uint64_t v66 = 0x3FEE666666666666;
          swift_once();
          double v51 = *(double *)&v66;
        }
        double v2 = v50 + v51;
        uint64_t v52 = type metadata accessor for Logger();
        sub_10000FD84(v52, (uint64_t)qword_1003A9988);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v33, v34)) {
          goto LABEL_37;
        }
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = v33;
        uint64_t v37 = v53;
        *(_WORD *)uint64_t v53 = 0;
        uint64_t v38 = "Less than 105 seconds over the estimation";
        goto LABEL_36;
      }
      if (qword_10037DD90 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000FD84(v28, (uint64_t)qword_1003A9988);
      unint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = (uint64_t)v29;
        *(_WORD *)unint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Cap the progress at 98 percent", v31, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
      double v55 = 98.0;
      while (1)
      {
        double v56 = round(v55);
        if ((~*(void *)&v56 & 0x7FF0000000000000) == 0) {
          break;
        }
        if (v56 <= -9.22337204e18) {
          goto LABEL_48;
        }
        if (v56 < 9.22337204e18)
        {
          uint64_t v66 = (uint64_t)v56;
          uint64_t v57 = *v17;
          uint64_t v58 = v17[1];
          uint64_t v59 = v69;
          sub_10000D2A0((uint64_t)v17 + v4[5], (uint64_t)&v69[v4[5]], &qword_100380418);
          uint64_t v60 = *(void *)v20;
          char v61 = v20[8];
          char v62 = *((unsigned char *)v17 + v4[8]);
          *uint64_t v59 = v57;
          v59[1] = v58;
          uint64_t v63 = (char *)v59 + v4[6];
          *(void *)uint64_t v63 = v60;
          v63[8] = v61;
          *(void *)((char *)v59 + v4[7]) = v66;
          *((unsigned char *)v59 + v4[8]) = v62;
          sub_100232D08((uint64_t)v17, (uint64_t)v11, type metadata accessor for TransmissionProgress);
          sub_100232D08((uint64_t)v59, (uint64_t)&v11[*(int *)(v14 + 20)], type metadata accessor for TransmissionProgress);
          *(void *)&v11[*(int *)(v14 + 24)] = v67;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
          uint64_t v64 = v68;
          sub_10000D2A0(v18, v68, &qword_100390E80);
          swift_bridgeObjectRetain();
          sub_10021E324((uint64_t)v11);
          swift_beginAccess();
          sub_1001B6344((uint64_t)v11, v18, &qword_100390E80);
          swift_endAccess();
          sub_10021E6AC(v64);
          sub_10000950C((uint64_t)v11, &qword_100390E80);
          sub_10000950C(v64, &qword_100390E80);
          sub_100232D70((uint64_t)v59, type metadata accessor for TransmissionProgress);
          return sub_100232D70((uint64_t)v17, type metadata accessor for ConnectionModel.UserTransmissionProgress);
        }
LABEL_49:
        __break(1u);
LABEL_50:
        swift_once();
LABEL_18:
        uint64_t v32 = type metadata accessor for Logger();
        sub_10000FD84(v32, (uint64_t)qword_1003A9988);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v36 = v33;
          uint64_t v37 = v35;
          *(_WORD *)uint64_t v35 = 0;
          uint64_t v38 = "Keeping up with actual progress";
LABEL_36:
          uint64_t v54 = v36;
          _os_log_impl((void *)&_mh_execute_header, v36, v34, v38, v37, 2u);
          swift_slowDealloc();
          uint64_t v33 = v54;
        }
LABEL_37:

        double v55 = v2 * 100.0;
        if (v2 >= 0.98) {
          double v55 = 98.0;
        }
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
  }
  return sub_100232D70((uint64_t)v17, type metadata accessor for ConnectionModel.UserTransmissionProgress);
}

uint64_t sub_100220B14()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress, &qword_100390E80);

  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress, &qword_100390E88);
  return sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress, &qword_10037F158);
}

uint64_t sub_100220B90()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__transmissionProgress, &qword_100390E80);

  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__overrideTransmissionProgress, &qword_100390E88);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress, &qword_10037F158);
  return v0;
}

uint64_t sub_100220C20()
{
  return sub_100222FEC((void (*)(void))sub_100220B90);
}

uint64_t sub_100220C38()
{
  return type metadata accessor for ConnectionModel(0);
}

uint64_t type metadata accessor for ConnectionModel(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_10038F998);
}

void sub_100220C60()
{
  sub_10021B770(319, &qword_10038F9A8, (void (*)(uint64_t))type metadata accessor for ConnectionModel.UserTransmissionProgress);
  if (v0 <= 0x3F)
  {
    sub_10021B770(319, (unint64_t *)&unk_10038F9B0, (void (*)(uint64_t))type metadata accessor for ConnectionModel.OverrideTransmissionProgress);
    if (v1 <= 0x3F)
    {
      sub_10021B770(319, (unint64_t *)&qword_100387F60, (void (*)(uint64_t))type metadata accessor for TransmissionProgress);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for ConnectionModel.UserTransmissionProgress(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100390E20);
}

uint64_t type metadata accessor for ConnectionModel.OverrideTransmissionProgress(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100390D88);
}

uint64_t sub_100220E1C()
{
  if ((static Angle.== infix(_:_:)() & 1) == 0 || (static Angle.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static Angle.== infix(_:_:)();
}

uint64_t sub_100220E94(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 64);
  if (v3 == 4)
  {
    if (result == 4) {
      return result;
    }
  }
  else if (result != 4)
  {
    if (v3 == 3)
    {
      if (result == 3) {
        return result;
      }
    }
    else if (result != 3 && v3 == result)
    {
      return result;
    }
  }
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_100004010(&qword_100390EB8);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Target visibility changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = sub_100221154();
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

BOOL sub_100221154()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100222AB8();
  uint64_t v3 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
  char v4 = sub_10020D1A0((Swift::Int)v2, *(void *)(v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions));
  if ((v4 & 1) == 0)
  {
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A9988);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t type = v7;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      sub_100233E0C();
      swift_bridgeObjectRetain();
      uint64_t v9 = Set.description.getter();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_1001B3178(v9, v11, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v12 = Set.description.getter();
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      sub_1001B3178(v12, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "Suggested actions changed from: %{public}s to: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    *(void *)(v1 + v3) = v2;
  }
  swift_bridgeObjectRelease();
  return (v4 & 1) == 0;
}

uint64_t sub_100221400(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 65);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v3))
  {
    return result;
  }
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "__cachedConnectedWithHysteresisApplied changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = sub_100221154();
  if (result)
  {
    if (*(void *)(v2 + 32))
    {
      *(unsigned char *)(v2 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      uint64_t result = Subject<>.send()();
      if (!*(void *)(v2 + 32))
      {
        sub_100004010(&qword_100393AA0);
        return Subject<>.send()();
      }
    }
    *(unsigned char *)(v2 + 41) = 1;
  }
  return result;
}

uint64_t sub_1002216DC(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 66);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v3))
  {
    return result;
  }
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "__cachedLocationAcquisitionInProgress changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = sub_100221154();
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    uint64_t result = Subject<>.send()();
    if (!*(void *)(v2 + 32))
    {
      sub_100004010(&qword_100393AA0);
      return Subject<>.send()();
    }
  }
  *(unsigned char *)(v2 + 41) = 1;
  return result;
}

void sub_1002219B4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ServiceOutages(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  os_log_type_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004010(&qword_100387FA0);
  uint64_t v7 = __chkstk_darwin(v38);
  uint64_t v36 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = sub_100004010(&qword_100388188);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v16[*(int *)(v14 + 56)];
  uint64_t v37 = v17;
  uint64_t v19 = v17;
  uint64_t v20 = a1;
  sub_10000D2A0(v19, (uint64_t)v16, &qword_100387FA0);
  sub_10000D2A0(a1, v18, &qword_100387FA0);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v16, 1, v3) == 1)
  {
    if (v21(v18, 1, v3) == 1)
    {
      sub_10000950C((uint64_t)v16, &qword_100387FA0);
      return;
    }
    uint64_t v22 = &qword_100388188;
    uint64_t v24 = v39;
    uint64_t v23 = (uint64_t)v40;
  }
  else
  {
    sub_10000D2A0((uint64_t)v16, (uint64_t)v12, &qword_100387FA0);
    if (v21(v18, 1, v3) == 1)
    {
      uint64_t v22 = &qword_100388188;
      uint64_t v23 = (uint64_t)v40;
    }
    else
    {
      sub_100233C38(v18, (uint64_t)v6, type metadata accessor for ServiceOutages);
      char v25 = static Date.== infix(_:_:)();
      uint64_t v23 = (uint64_t)v40;
      if (v25 & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v26 = sub_100231FBC(*(void *)&v12[*(int *)(v3 + 24)], *(void *)&v6[*(int *)(v3 + 24)]);
        sub_100232D70((uint64_t)v6, type metadata accessor for ServiceOutages);
        sub_100232D70((uint64_t)v12, type metadata accessor for ServiceOutages);
        sub_10000950C((uint64_t)v16, &qword_100387FA0);
        uint64_t v24 = v39;
        if (v26) {
          return;
        }
        goto LABEL_14;
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for ServiceOutages);
      uint64_t v22 = &qword_100387FA0;
    }
    uint64_t v24 = v39;
    sub_100232D70((uint64_t)v12, type metadata accessor for ServiceOutages);
  }
  sub_10000950C((uint64_t)v16, v22);
LABEL_14:
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000FD84(v27, (uint64_t)qword_1003A9988);
  sub_10000D2A0(v20, v23, &qword_100387FA0);
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = (char *)swift_slowAlloc();
    double v42 = v40;
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v31 = v36;
    sub_10000D2A0(v23, v36, &qword_100387FA0);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v32, v33, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v23, &qword_100387FA0);
    *(_WORD *)(v30 + 12) = 2082;
    sub_10000D2A0(v37, v31, &qword_100387FA0);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v34, v35, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "__cachedServiceOutages changed from: %{public}s to: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v24 + 32))
    {
LABEL_18:
      *(unsigned char *)(v24 + 40) = 1;
LABEL_21:
      *(unsigned char *)(v24 + 41) = 1;
      return;
    }
  }
  else
  {
    sub_10000950C(v23, &qword_100387FA0);

    swift_release_n();
    if (*(void *)(v24 + 32)) {
      goto LABEL_18;
    }
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
  if (*(void *)(v24 + 32)) {
    goto LABEL_21;
  }
  sub_100004010(&qword_100393AA0);
  Subject<>.send()();
}

void sub_100221FF4(char a1)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow);
  if (v3 == 2)
  {
    if (a1 == 2) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_100004010((uint64_t *)&unk_10038EBC0);
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "__cachedInServiceOutageNow changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_10:
        *(unsigned char *)(v2 + 40) = 1;
LABEL_13:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    if (!*(void *)(v2 + 32))
    {
      sub_100004010(&qword_100393AA0);
      Subject<>.send()();
      return;
    }
    goto LABEL_13;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0) {
    goto LABEL_6;
  }
}

uint64_t sub_1002222D0(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v3))
  {
    return result;
  }
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "__cachedInSilencePeriodNow changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = sub_100221154();
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    uint64_t result = Subject<>.send()();
    if (!*(void *)(v2 + 32))
    {
      sub_100004010(&qword_100393AA0);
      return Subject<>.send()();
    }
  }
  *(unsigned char *)(v2 + 41) = 1;
  return result;
}

void sub_1002225B0(char a1)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__coreMotionErrorPresent);
  if (v3 == 2)
  {
    if (a1 == 2) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_100004010((uint64_t *)&unk_10038EBC0);
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Cached _coreMotionErrorPresent changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_10:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0) {
    goto LABEL_6;
  }
}

void sub_10022285C(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__coreMotionErrorPresent;
  int v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__coreMotionErrorPresent);
  if (v4 == 2)
  {
    if (a1 == 2) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v4) & 1) == 0)
  {
LABEL_6:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
LABEL_9:
  *(unsigned char *)(v1 + v3) = a1;

  sub_1002225B0(v4);
}

uint64_t sub_100222944()
{
  uint64_t v1 = v0;
  *(_OWORD *)(v0 + 48) = xmmword_1002C1B90;
  *(_WORD *)(v0 + 64) = 516;
  *(unsigned char *)(v0 + 66) = 2;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages;
  uint64_t v3 = type metadata accessor for ServiceOutages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInServiceOutageNow) = 2;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) = 2;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__coreMotionErrorPresent) = 2;
  uint64_t v4 = v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__target;
  *(_OWORD *)uint64_t v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__targetLinkSynced) = 2;
  uint64_t v5 = v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__actualTargetRelativeBearing;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 24) = 1;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing;
  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  *(void *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 24) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions) = _swiftEmptySetSingleton;
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  return v1;
}

void *sub_100222AB8()
{
  uint64_t v14 = _swiftEmptySetSingleton;
  if ((v0[66] & 1) != 0 && v0[64] - 2 >= 3) {
    sub_10012EBF0(&v9, 4);
  }
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow;
  unsigned __int8 v2 = v0[OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow];
  if ((v2 & 1) == 0 && (v0[66] & 1) == 0)
  {
    if ((v0[65] & 1) == 0 && v0[64] - 2 >= 3)
    {
      sub_10012EBF0(&v10, 4);
      unsigned __int8 v2 = v0[v1];
    }
    if ((v2 & 1) == 0 && (v0[66] & 1) == 0)
    {
      uint64_t v3 = (double *)&v0[OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing];
      if ((v0[OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24] & 1) == 0)
      {
        if (*v3 < 0.0) {
          double v4 = -*v3;
        }
        else {
          double v4 = *v3;
        }
        if (v4 <= 0.785398163)
        {
          uint64_t v6 = &v13;
          Swift::Int v7 = 0;
          goto LABEL_22;
        }
        if (*v3 <= 0.0) {
          Swift::Int v5 = 1;
        }
        else {
          Swift::Int v5 = 2;
        }
        sub_10012EBF0(&v12, v5);
        if (v4 > 2.75762022)
        {
          uint64_t v6 = &v11;
          Swift::Int v7 = 3;
LABEL_22:
          sub_10012EBF0(v6, v7);
        }
      }
    }
  }
  return v14;
}

uint64_t sub_100222BF4()
{
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages, &qword_100387FA0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100222C3C()
{
  swift_release();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages, &qword_100387FA0);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100222CC8()
{
  return type metadata accessor for GuidanceModel(0);
}

uint64_t type metadata accessor for GuidanceModel(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038FB70);
}

void sub_100222CF0()
{
  sub_10021B770(319, &qword_1003880B8, (void (*)(uint64_t))type metadata accessor for ServiceOutages);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100222DEC(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  double v4 = *(double *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (sub_10020D1A0(*(void *)a1, *(void *)a2))
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else
    {
      if (v2 == v4) {
        char v7 = v5;
      }
      else {
        char v7 = 1;
      }
      if ((v7 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100222E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  *(void *)(v9 + 112) = 0;
  uint64_t v17 = v9 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
  uint64_t v18 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  sub_100004010((uint64_t *)&unk_1003839F0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1002B3350;
  *(void *)(v19 + 32) = a5;
  *(void *)(v19 + 40) = a6;
  *(void *)(v9 + 72) = v19;
  *(_OWORD *)(v9 + 80) = 0u;
  *(_OWORD *)(v9 + 96) = 0u;
  *(void *)(v9 + 48) = a7;
  *(void *)(v9 + 56) = a8;
  *(unsigned char *)(v9 + 64) = a9 & 1;
  return v9;
}

uint64_t sub_100222F60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10005BEA0(*(void *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000950C(v0 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt, &qword_100380788);
  return v0;
}

uint64_t sub_100222FD4()
{
  return sub_100222FEC((void (*)(void))sub_100222F60);
}

uint64_t sub_100222FEC(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_100223048(uint64_t *a1, uint64_t *a2)
{
  return sub_100232B30(*a1, *a2);
}

void sub_100223054(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 48);
  if (!v3)
  {
    if (!a1) {
      return;
    }
    goto LABEL_12;
  }
  if (!a1) {
    goto LABEL_18;
  }
  if (sub_100232B30(v3, a1)) {
    return;
  }
  uint64_t v3 = *(void *)(v2 + 48);
  if (v3)
  {
LABEL_18:
    if (*(void *)(v3 + 72))
    {
      uint64_t v4 = *(void *)(v3 + 72);
    }
    else
    {
      swift_retain();
      uint64_t v4 = sub_100232DD0();
      swift_bridgeObjectRetain();
      swift_release();
      if (!v4) {
        goto LABEL_12;
      }
    }
    unint64_t v5 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v5 > 1)
    {
      char v6 = 0;
      goto LABEL_13;
    }
  }
LABEL_12:
  char v6 = 1;
LABEL_13:
  sub_10022316C(0, v6);
  sub_10022324C();
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

void sub_10022316C(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(v2 + 56);
  char v6 = *(unsigned char *)(v2 + 64);
  if (v6)
  {
    if (a2) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  if ((a2 & 1) != 0 || v5 != a1)
  {
LABEL_6:
    if (*(void *)(v2 + 32))
    {
      *(unsigned char *)(v2 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
  }
LABEL_9:
  *(void *)(v2 + 56) = a1;
  *(unsigned char *)(v2 + 64) = a2 & 1;

  sub_1002235FC(v5, v6);
}

void sub_10022324C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    return;
  }
  char v7 = *(void **)(v1 + 48);
  if (!v7) {
    goto LABEL_10;
  }
  uint64_t v8 = v7[9];
  if (v8 && *(void *)(v8 + 16) > 1uLL) {
    goto LABEL_7;
  }
  uint64_t v9 = v7[10];
  uint64_t v10 = v7[11];
  if (!v9)
  {
    sub_10001EA7C(0);
    sub_10005BEA0(0);
LABEL_10:
    uint64_t v17 = *(void **)(v1 + 72);
    if (v17)
    {
      [v17 invalidate];
      uint64_t v16 = *(void **)(v1 + 72);
    }
    else
    {
      uint64_t v16 = 0;
    }
    *(void *)(v1 + 72) = 0;
    goto LABEL_14;
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v10;
  sub_10001EA7C(v9);
  sub_10005BEA0((uint64_t)sub_100233DDC);
LABEL_7:
  if (*(void *)(v1 + 72)) {
    return;
  }
  char v12 = self;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100233D9C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008A9B0;
  aBlock[3] = &unk_10035F630;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = [v12 scheduledTimerWithTimeInterval:1 repeats:v14 block:5.0];
  _Block_release(v14);
  uint64_t v16 = *(void **)(v1 + 72);
  *(void *)(v1 + 72) = v15;
LABEL_14:
}

uint64_t sub_1002234F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 48);
  if (v4)
  {
    if (!a1)
    {
      swift_retain();
      if (*(void *)(v1 + 32)) {
        goto LABEL_5;
      }
LABEL_9:
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
      goto LABEL_10;
    }
    char v5 = sub_100232B30(*(void *)(v1 + 48), a1);
    swift_retain();
    if (v5) {
      goto LABEL_10;
    }
LABEL_4:
    if (*(void *)(v2 + 32))
    {
LABEL_5:
      *(unsigned char *)(v2 + 40) = 1;
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (a1) {
    goto LABEL_4;
  }
LABEL_10:
  *(void *)(v2 + 48) = a1;
  swift_retain();
  swift_release();
  sub_100223054(v4);
  swift_release();

  return swift_release();
}

void sub_1002235FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(v2 + 64))
  {
    if (a2) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9988);
    swift_retain_n();
    char v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      sub_100004010(&qword_100380FA0);
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Extra detail index changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v3 + 32))
      {
LABEL_10:
        *(unsigned char *)(v3 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v3 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if ((a2 & 1) != 0 || *(void *)(v2 + 56) != a1) {
    goto LABEL_6;
  }
}

void sub_1002238A4(unsigned __int8 a1)
{
  if (*(unsigned __int8 *)(v1 + 96) != a1)
  {
    uint64_t v2 = v1;
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000FD84(v3, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446466;
      uint64_t v7 = String.init<A>(describing:)();
      sub_1001B3178(v7, v8, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2082;
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "_howToConnectGuidance changed from: %{public}s to: %{public}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_6:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_6;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

uint64_t sub_100223B1C()
{
  uint64_t v1 = v0;
  uint64_t v25 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  char v17 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    if ((*(unsigned char *)(v1 + 112) & 1) != 0 && *(void *)(v1 + 104) && !*(unsigned char *)(v1 + 96))
    {
      if (*(void *)(v1 + 32))
      {
        *(unsigned char *)(v1 + 40) = 1;
      }
      else
      {
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
      }
      uint64_t v19 = v25;
      *(unsigned char *)(v1 + 96) = 1;
      sub_1002238A4(0);
      uint64_t v25 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v26 = *(void *)(v26 + 8);
      uint64_t v20 = v10;
      uint64_t v21 = v27;
      ((void (*)(char *, uint64_t))v26)(v20, v27);
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      aBlock[4] = sub_100233D94;
      aBlock[5] = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100207A1C;
      aBlock[3] = &unk_10035F608;
      uint64_t v23 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1002340A0((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004010((uint64_t *)&unk_10037FF80);
      sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v24 = (void *)v25;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v19);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
      return ((uint64_t (*)(char *, uint64_t))v26)(v12, v21);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100224040()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v1 = *(unsigned __int8 *)(result + 96);
    uint64_t result = swift_release();
    if (v1 == 1)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        uint64_t v2 = result;
        int v3 = *(unsigned __int8 *)(result + 96);
        if (v3 != 2)
        {
          if (*(void *)(result + 32))
          {
            *(unsigned char *)(result + 40) = 1;
          }
          else
          {
            sub_100004010(&qword_100393AA0);
            sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
            Subject<>.send()();
          }
        }
        *(unsigned char *)(v2 + 96) = 2;
        sub_1002238A4(v3);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_100224150(uint64_t a1)
{
  return sub_10022415C(a1, &qword_10038F148);
}

uint64_t sub_10022415C(uint64_t a1, uint64_t *a2)
{
  type metadata accessor for ApproximateTimeIntervalFormatter();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a2 = result;
  return result;
}

uint64_t sub_100224194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v168 = a6;
  uint64_t v170 = a4;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v165 = *(void *)(v10 - 8);
  uint64_t v166 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  uint64_t v169 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v169 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v167 = (uint64_t)&v162 - v17;
  uint64_t v18 = sub_100004010(&qword_100390E78);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v162 - v23;
  __chkstk_darwin(v22);
  if ((*(unsigned char *)(a2 + 43) & 1) == 0 && *(unsigned char *)(a2 + 42) != 1)
  {
    uint64_t v37 = self;
    id v38 = [v37 mainBundle];
    v39._uint64_t countAndFlagsBits = 0xD000000000000022;
    v171._uint64_t countAndFlagsBits = 0xD000000000000053;
    v171._object = (void *)0x80000001002D5200;
    v39._object = (void *)0x80000001002D4F50;
    v40._uint64_t countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v171);

    swift_bridgeObjectRetain();
    id v42 = [v37 mainBundle];
    v172._uint64_t countAndFlagsBits = 0xD000000000000064;
    v172._object = (void *)0x80000001002D5260;
    v43._object = (void *)0x80000001002D4FE0;
    v43._uint64_t countAndFlagsBits = 0xD000000000000032;
    v44._uint64_t countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v172);

    Swift::Int v46 = sub_100265564((uint64_t)&off_10034BE58);
    type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
    swift_allocObject();
    return sub_100222E58(v41._countAndFlagsBits, (uint64_t)v41._object, v41._countAndFlagsBits, (uint64_t)v41._object, v45._countAndFlagsBits, (uint64_t)v45._object, v46, 0, 1);
  }
  uint64_t v26 = a5[9];
  if (v26)
  {
    uint64_t v27 = a5[8];
    Swift::Int v28 = sub_100265564((uint64_t)&off_10034BD18);
    type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 112) = 0;
    uint64_t v30 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
    uint64_t v31 = type metadata accessor for DispatchTime();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
    *(void *)(v29 + 16) = v27;
    *(void *)(v29 + 24) = v26;
    *(void *)(v29 + 32) = v27;
    *(void *)(v29 + 40) = v26;
    *(_OWORD *)(v29 + 72) = 0u;
    *(_OWORD *)(v29 + 88) = 0u;
    *(void *)(v29 + 104) = 0;
    *(void *)(v29 + 48) = v28;
    *(void *)(v29 + 56) = 0;
    *(unsigned char *)(v29 + 64) = 1;
LABEL_10:
    swift_bridgeObjectRetain_n();
    return v29;
  }
  if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) & 1) != 0
    || (*(unsigned char *)(a3 + 66) & 1) != 0
    || (*(unsigned char *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24) & 1) != 0)
  {
    uint64_t v32 = a5[7];
    if (!v32)
    {
      id v48 = [self mainBundle];
      v49._uint64_t countAndFlagsBits = 0xD000000000000018;
      v173._uint64_t countAndFlagsBits = 0xD000000000000089;
      v173._object = (void *)0x80000001002D4D50;
      v49._object = (void *)0x80000001002D4D30;
      v50._uint64_t countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      Swift::String v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v173);

      type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 112) = 0;
      uint64_t v52 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
      uint64_t v53 = type metadata accessor for DispatchTime();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
      *(Swift::String *)(v29 + 16) = v51;
      *(Swift::String *)(v29 + 32) = v51;
      *(_OWORD *)(v29 + 72) = 0u;
      *(_OWORD *)(v29 + 88) = 0u;
      *(void *)(v29 + 104) = 0;
      *(void *)(v29 + 48) = _swiftEmptySetSingleton;
      *(void *)(v29 + 56) = 0;
      *(unsigned char *)(v29 + 64) = 1;
      swift_bridgeObjectRetain();
      return v29;
    }
    uint64_t v33 = a5[6];
    Swift::Int v34 = sub_100265564((uint64_t)&off_10034BE30);
    type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 112) = 0;
    uint64_t v35 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
    uint64_t v36 = type metadata accessor for DispatchTime();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
    *(void *)(v29 + 16) = v33;
    *(void *)(v29 + 24) = v32;
    *(void *)(v29 + 32) = v33;
    *(void *)(v29 + 40) = v32;
    *(_OWORD *)(v29 + 72) = 0u;
    *(_OWORD *)(v29 + 88) = 0u;
    *(void *)(v29 + 104) = 0;
    *(void *)(v29 + 48) = v34;
    *(void *)(v29 + 56) = 0;
    *(unsigned char *)(v29 + 64) = 1;
    goto LABEL_10;
  }
  uint64_t v163 = (uint64_t)&v162 - v25;
  uint64_t v55 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
  char v56 = sub_1001E2D40((uint64_t)&off_10034BD40, *(void *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions));
  char v57 = *(unsigned char *)(*(void *)(a1 + 56) + 120);
  if (v56)
  {
    if ((v57 & 1) == 0)
    {
      if (sub_100078E0C(4, *(void *)(a3 + v55)))
      {
        uint64_t v58 = v168 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction;
        swift_beginAccess();
        uint64_t v59 = v58;
        uint64_t v60 = v163;
        sub_10000D2A0(v59, v163, &qword_100390E78);
        sub_10000D2A0(v60, (uint64_t)v24, &qword_100390E78);
        char v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48);
        if (v61(v24, 1, v13) == 1)
        {
          sub_10000950C((uint64_t)v24, &qword_100390E78);
LABEL_20:
          char v62 = self;
          id v63 = [v62 mainBundle];
          v64._uint64_t countAndFlagsBits = 0xD000000000000022;
          v174._uint64_t countAndFlagsBits = 0xD000000000000053;
          v174._object = (void *)0x80000001002D4F80;
          v64._object = (void *)0x80000001002D4F50;
          v65._uint64_t countAndFlagsBits = 0;
          v65._object = (void *)0xE000000000000000;
          Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v174);

          swift_bridgeObjectRetain();
          id v67 = [v62 mainBundle];
          v175._uint64_t countAndFlagsBits = 0xD000000000000064;
          v175._object = (void *)0x80000001002D5020;
          v68._object = (void *)0x80000001002D4FE0;
          v68._uint64_t countAndFlagsBits = 0xD000000000000032;
          v69._uint64_t countAndFlagsBits = 0;
          v69._object = (void *)0xE000000000000000;
          Swift::String v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, (Swift::String_optional)0, (NSBundle)v67, v69, v175);

          Swift::Int v71 = sub_100265564((uint64_t)&off_10034BD68);
          type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
          swift_allocObject();
          uint64_t v29 = sub_100222E58(v66._countAndFlagsBits, (uint64_t)v66._object, v66._countAndFlagsBits, (uint64_t)v66._object, v70._countAndFlagsBits, (uint64_t)v70._object, v71, 0, 1);
          sub_10000950C(v163, &qword_100390E78);
          return v29;
        }
        long long v111 = &v24[*(int *)(v13 + 24)];
        if (v111[24] == 1)
        {
          sub_100232D70((uint64_t)v24, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
        }
        else
        {
          uint64_t v126 = *(void *)v111;
          uint64_t v127 = *(void *)&v24[*(int *)(v13 + 20)];
          sub_100232D70((uint64_t)v24, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
          if (v126 == v127) {
            goto LABEL_20;
          }
        }
        sub_10000D2A0(v163, (uint64_t)v21, &qword_100390E78);
        if (v61(v21, 1, v13) == 1)
        {
          sub_10000950C((uint64_t)v21, &qword_100390E78);
        }
        else
        {
          uint64_t v130 = v167;
          sub_100233C38((uint64_t)v21, v167, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
          uint64_t v131 = v130 + *(int *)(v13 + 24);
          if ((*(unsigned char *)(v131 + 24) & 1) == 0 && *(void *)v131 != *(void *)(v130 + *(int *)(v13 + 20)))
          {
            sub_100232D08(v130, (uint64_t)v16, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
            unint64_t v149 = (*(unsigned __int8 *)(v169 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80);
            uint64_t v150 = swift_allocObject();
            sub_100233C38((uint64_t)v16, v150 + v149, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
            *(void *)(v150 + ((v14 + v149 + 7) & 0xFFFFFFFFFFFFFFF8)) = v164;
            Swift::Int v151 = sub_100265564((uint64_t)&off_10034BD90);
            static Date.now.getter();
            Date.timeIntervalSince(_:)();
            uint64_t v153 = v152;
            (*(void (**)(char *, uint64_t))(v165 + 8))(v12, v166);
            id v154 = [self mainBundle];
            v155._uint64_t countAndFlagsBits = 0xD000000000000026;
            v183._uint64_t countAndFlagsBits = 0xD0000000000000E6;
            v183._object = (void *)0x80000001002D50C0;
            v155._object = (void *)0x80000001002D5090;
            v156._uint64_t countAndFlagsBits = 0;
            v156._object = (void *)0xE000000000000000;
            Swift::String v157 = NSLocalizedString(_:tableName:bundle:value:comment:)(v155, (Swift::String_optional)0, (NSBundle)v154, v156, v183);

            swift_bridgeObjectRetain();
            sub_100232D70(v130, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
            sub_10000950C(v163, &qword_100390E78);
            uint64_t v158 = swift_allocObject();
            *(void *)(v158 + 16) = sub_100233FD0;
            *(void *)(v158 + 24) = v150;
            type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
            uint64_t v29 = swift_allocObject();
            *(void *)(v29 + 112) = 0;
            uint64_t v159 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
            uint64_t v160 = type metadata accessor for DispatchTime();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v159, 1, 1, v160);
            *(Swift::String *)(v29 + 16) = v157;
            *(Swift::String *)(v29 + 32) = v157;
            *(void *)(v29 + 72) = 0;
            *(void *)(v29 + 80) = sub_10023405C;
            *(void *)(v29 + 88) = v158;
            *(void *)(v29 + 96) = 0xD000000000000017;
            *(void *)(v29 + 104) = 0x80000001002D51E0;
            *(void *)(v29 + 48) = v151;
            *(void *)(v29 + 56) = v153;
            *(unsigned char *)(v29 + 64) = 0;
            return v29;
          }
          sub_100232D70(v130, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
        }
        uint64_t v132 = self;
        id v133 = [v132 mainBundle];
        v134._uint64_t countAndFlagsBits = 0xD000000000000026;
        v180._uint64_t countAndFlagsBits = 0xD0000000000000E6;
        v180._object = (void *)0x80000001002D50C0;
        v134._object = (void *)0x80000001002D5090;
        v135._uint64_t countAndFlagsBits = 0;
        v135._object = (void *)0xE000000000000000;
        Swift::String v136 = NSLocalizedString(_:tableName:bundle:value:comment:)(v134, (Swift::String_optional)0, (NSBundle)v133, v135, v180);

        sub_100004010((uint64_t *)&unk_1003839F0);
        uint64_t v137 = swift_allocObject();
        *(_OWORD *)(v137 + 16) = xmmword_1002B31C0;
        swift_bridgeObjectRetain();
        id v138 = [v132 mainBundle];
        v181._uint64_t countAndFlagsBits = 0xD000000000000064;
        v181._object = (void *)0x80000001002D5020;
        v139._object = (void *)0x80000001002D4FE0;
        v139._uint64_t countAndFlagsBits = 0xD000000000000032;
        v140._uint64_t countAndFlagsBits = 0;
        v140._object = (void *)0xE000000000000000;
        Swift::String v141 = NSLocalizedString(_:tableName:bundle:value:comment:)(v139, (Swift::String_optional)0, (NSBundle)v138, v140, v181);

        *(Swift::String *)(v137 + 32) = v141;
        id v142 = [v132 mainBundle];
        v143._uint64_t countAndFlagsBits = 0xD000000000000020;
        v182._uint64_t countAndFlagsBits = 0xD00000000000009ELL;
        v182._object = (void *)0x80000001002C64F0;
        v143._object = (void *)0x80000001002D51B0;
        v144._uint64_t countAndFlagsBits = 0;
        v144._object = (void *)0xE000000000000000;
        Swift::String v145 = NSLocalizedString(_:tableName:bundle:value:comment:)(v143, (Swift::String_optional)0, (NSBundle)v142, v144, v182);

        *(Swift::String *)(v137 + 48) = v145;
        Swift::Int v146 = sub_100265564((uint64_t)&off_10034BDB8);
        sub_10000950C(v163, &qword_100390E78);
        type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 112) = 0;
        uint64_t v147 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
        uint64_t v148 = type metadata accessor for DispatchTime();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v147, 1, 1, v148);
        *(Swift::String *)(v29 + 16) = v136;
        *(Swift::String *)(v29 + 32) = v136;
        *(void *)(v29 + 72) = v137;
        *(_OWORD *)(v29 + 80) = 0u;
        *(_OWORD *)(v29 + 96) = 0u;
        *(void *)(v29 + 48) = v146;
LABEL_60:
        *(void *)(v29 + 56) = 0;
        *(unsigned char *)(v29 + 64) = 1;
        return v29;
      }
      uint64_t v94 = self;
      id v95 = [v94 mainBundle];
      v96._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v177._uint64_t countAndFlagsBits = 0xD000000000000089;
      v177._object = (void *)0x80000001002C6300;
      v96._object = (void *)0x80000001002C62E0;
      v97._uint64_t countAndFlagsBits = 0;
      v97._object = (void *)0xE000000000000000;
      Swift::String v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, (Swift::String_optional)0, (NSBundle)v95, v97, v177);

      swift_bridgeObjectRetain();
      id v99 = [v94 mainBundle];
      v100._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      v178._uint64_t countAndFlagsBits = 0xD00000000000009ALL;
      v178._object = (void *)0x80000001002D4EB0;
      v100._object = (void *)0x80000001002D4E90;
      v101._uint64_t countAndFlagsBits = 0;
      v101._object = (void *)0xE000000000000000;
      Swift::String v102 = NSLocalizedString(_:tableName:bundle:value:comment:)(v100, (Swift::String_optional)0, (NSBundle)v99, v101, v178);

      type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
      swift_allocObject();
      return sub_100222E58(v98._countAndFlagsBits, (uint64_t)v98._object, v98._countAndFlagsBits, (uint64_t)v98._object, v102._countAndFlagsBits, (uint64_t)v102._object, (uint64_t)_swiftEmptySetSingleton, 0, 1);
    }
    id v79 = [self mainBundle];
    v80._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v176._uint64_t countAndFlagsBits = 0xD000000000000089;
    v176._object = (void *)0x80000001002C6300;
    v80._object = (void *)0x80000001002C62E0;
    v81._uint64_t countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    Swift::String v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v176);
    uint64_t countAndFlagsBits = v82._countAndFlagsBits;
    object = v82._object;

    uint64_t v85 = v170;
    if (*(void *)(v170 + 64))
    {
      if (sub_100078E0C(0, *(void *)(v170 + 88)))
      {
LABEL_29:
        swift_bridgeObjectRelease();
        uint64_t v86 = sub_100021D7C();
LABEL_30:
        uint64_t countAndFlagsBits = v86;
        object = v87;
        uint64_t v90 = v88;
        uint64_t v91 = v89;
LABEL_59:
        type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 112) = 0;
        uint64_t v128 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
        uint64_t v129 = type metadata accessor for DispatchTime();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v128, 1, 1, v129);
        *(void *)(v29 + 16) = countAndFlagsBits;
        *(void *)(v29 + 24) = object;
        *(void *)(v29 + 32) = v90;
        *(void *)(v29 + 40) = v91;
        *(_OWORD *)(v29 + 72) = 0u;
        *(_OWORD *)(v29 + 88) = 0u;
        *(void *)(v29 + 104) = 0;
        *(void *)(v29 + 48) = _swiftEmptySetSingleton;
        goto LABEL_60;
      }
      if (*(void *)(v85 + 64))
      {
        if (sub_100078E0C(3, *(void *)(v85 + 88))) {
          goto LABEL_29;
        }
        if (*(void *)(v85 + 64) && (sub_100078E0C(4, *(void *)(v85 + 88)) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v86 = sub_100021EAC();
          goto LABEL_30;
        }
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v90 = v82._countAndFlagsBits;
    uint64_t v91 = v82._object;
    goto LABEL_59;
  }
  char v72 = sub_100078E0C(3, *(void *)(a3 + v55));
  char v73 = sub_100078E0C(1, *(void *)(a3 + v55));
  char v74 = v73;
  if (v57)
  {
    if (v72)
    {
      if (v73) {
        uint64_t v93 = sub_10002223C();
      }
      else {
        uint64_t v93 = sub_100022368();
      }
      long long v112 = v92;
      swift_bridgeObjectRelease();
      id v115 = [self mainBundle];
      v116._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v179._uint64_t countAndFlagsBits = 0xD000000000000081;
      v179._object = (void *)0x80000001002D4E00;
      v116._object = (void *)0x80000001002D4DE0;
      v117._uint64_t countAndFlagsBits = 0;
      v117._object = (void *)0xE000000000000000;
      Swift::String v118 = NSLocalizedString(_:tableName:bundle:value:comment:)(v116, (Swift::String_optional)0, (NSBundle)v115, v117, v179);
      uint64_t v113 = v118._countAndFlagsBits;
      uint64_t v114 = v118._object;
    }
    else
    {
      if (v73) {
        uint64_t v107 = sub_10002223C();
      }
      else {
        uint64_t v107 = sub_100022368();
      }
      uint64_t v93 = v107;
      long long v112 = v108;
      uint64_t v113 = v109;
      uint64_t v114 = v110;
    }
    uint64_t v122 = &off_10034BDE0;
  }
  else
  {
    if (v72)
    {
      if (v73) {
        uint64_t v75 = sub_100021FDC();
      }
      else {
        uint64_t v75 = sub_10002210C();
      }
      uint64_t v93 = v75;
      long long v112 = v76;
      uint64_t v113 = v77;
      uint64_t v114 = v78;
    }
    else
    {
      id v103 = [self mainBundle];
      if (v74)
      {
        unint64_t v104 = 0xD00000000000001BLL;
        unint64_t v105 = 0xD00000000000008ELL;
        unint64_t v161 = 0x80000001002C68A0;
        char v106 = "Turn Left to Find Satellite";
      }
      else
      {
        unint64_t v104 = 0xD00000000000001CLL;
        unint64_t v105 = 0xD00000000000008FLL;
        unint64_t v161 = 0x80000001002C6A00;
        char v106 = "Turn Right to Find Satellite";
      }
      unint64_t v119 = (unint64_t)(v106 - 32) | 0x8000000000000000;
      v120._uint64_t countAndFlagsBits = 0;
      v120._object = (void *)0xE000000000000000;
      Swift::String v121 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v104, (Swift::String_optional)0, (NSBundle)v103, v120, *(Swift::String *)&v105);
      uint64_t v93 = v121._countAndFlagsBits;
      long long v112 = v121._object;

      swift_bridgeObjectRetain();
      uint64_t v113 = v121._countAndFlagsBits;
      uint64_t v114 = v121._object;
    }
    uint64_t v122 = &off_10034BE08;
  }
  Swift::Int v123 = sub_100265564((uint64_t)v122);
  type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 112) = 0;
  uint64_t v124 = v29 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
  uint64_t v125 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v124, 1, 1, v125);
  *(void *)(v29 + 16) = v93;
  *(void *)(v29 + 24) = v112;
  *(void *)(v29 + 32) = v113;
  *(void *)(v29 + 40) = v114;
  *(_OWORD *)(v29 + 72) = 0u;
  *(_OWORD *)(v29 + 88) = 0u;
  *(void *)(v29 + 104) = 0;
  *(void *)(v29 + 48) = v123;
  *(void *)(v29 + 56) = 0;
  *(unsigned char *)(v29 + 64) = 1;
  return v29;
}

uint64_t sub_100225510()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Regenerating skimmer prediction nudge extra details", v7, 2u);
    swift_slowDealloc();
  }

  static Date.now.getter();
  Date.timeIntervalSince(_:)();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_10037DEC0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100021B88(v19);
  uint64_t v10 = sub_1002334E0(&v19[0]._countAndFlagsBits, v9);
  uint64_t v12 = v11;
  sub_100233D20((uint64_t)v19);
  swift_release();
  sub_100004010((uint64_t *)&unk_1003839F0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1002B31C0;
  id v14 = [self mainBundle];
  v20._uint64_t countAndFlagsBits = 0xD000000000000064;
  v20._object = (void *)0x80000001002D5020;
  v15._object = (void *)0x80000001002D4FE0;
  v15._uint64_t countAndFlagsBits = 0xD000000000000032;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v20);

  *(Swift::String *)(v13 + 32) = v17;
  *(void *)(v13 + 48) = v10;
  *(void *)(v13 + 56) = v12;
  return v13;
}

uint64_t sub_1002257D8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100225830();
    return swift_release();
  }
  return result;
}

uint64_t sub_100225830()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (uint64_t *)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9988);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Extra details update timer fired", v12, 2u);
    swift_slowDealloc();
  }

  sub_10000FDBC();
  *double v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v13)
  {
    uint64_t v15 = *(void *)(v1 + 48);
    if (!v15) {
      return sub_10022324C(result);
    }
    uint64_t v16 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
    uint64_t v17 = v15 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
    swift_beginAccess();
    swift_retain();
    sub_100156648((uint64_t)v4, v17, &qword_100380788);
    swift_endAccess();
    uint64_t result = swift_release();
    uint64_t v18 = *(void *)(v1 + 48);
    if (!v18) {
      return sub_10022324C(result);
    }
    if (*(void *)(v18 + 72))
    {
      uint64_t v19 = *(void *)(v18 + 72);
    }
    else
    {
      swift_retain();
      uint64_t v19 = sub_100232DD0();
      swift_bridgeObjectRetain();
      uint64_t result = swift_release();
      if (!v19) {
        return sub_10022324C(result);
      }
    }
    unint64_t v20 = *(void *)(v19 + 16);
    if (v20 >= 2)
    {
      uint64_t v21 = *(void *)(v1 + 56);
      char v22 = *(unsigned char *)(v1 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v22)
      {
        uint64_t v21 = -1;
      }
      else if (v21 >= (uint64_t)(v20 - 1))
      {
        uint64_t v25 = 0;
        goto LABEL_25;
      }
      uint64_t v25 = v21 + 1;
LABEL_25:
      sub_10022316C(v25, 0);
      return sub_10022324C(result);
    }
    uint64_t v23 = *(void *)(v1 + 48);
    if (v23 && ((uint64_t v24 = *(void *)(v23 + 72)) != 0 && *(void *)(v24 + 16) > 1uLL || *(void *)(v23 + 80)))
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      if (v20)
      {
        if (*(void *)(v1 + 32))
        {
          *(unsigned char *)(v1 + 40) = 1;
        }
        else
        {
          sub_100004010(&qword_100393AA0);
          sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
          uint64_t result = Subject<>.send()();
          if (!*(void *)(v1 + 32))
          {
            sub_100004010(&qword_100393AA0);
            uint64_t result = Subject<>.send()();
            return sub_10022324C(result);
          }
        }
        *(unsigned char *)(v1 + 41) = 1;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
    }
    return sub_10022324C(result);
  }
  __break(1u);
  return result;
}

uint64_t sub_100225C54()
{
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 112) = 2;
  *(void *)(v0 + 32) = 0;
  *(_WORD *)(v0 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  return v0;
}

uint64_t sub_100225CF0()
{
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t sub_100225D30()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GuidanceMessagesModel()
{
  return self;
}

uint64_t sub_100225DB4()
{
  return type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
}

uint64_t type metadata accessor for GuidanceMessagesModel.NudgeMessages(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038FEB8);
}

void sub_100225DDC()
{
  sub_10021B770(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100225EB4(unsigned char *a1, unsigned __int8 *a2)
{
  if (*a1 != 9 && ((v2 = *a2, !*a1) ? (BOOL v3 = v2 == 9) : (BOOL v3 = 1), !v3 ? (v4 = v2 == 1) : (v4 = 0), v4)) {
    return 0x4024000000000000;
  }
  else {
    return 0;
  }
}

void sub_100225EEC(char a1)
{
  if (*(unsigned char *)(v1 + 56) != (a1 & 1))
  {
    uint64_t v2 = v1;
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      if (a1) {
        uint64_t v8 = 1702195828;
      }
      else {
        uint64_t v8 = 0x65736C6166;
      }
      if (a1) {
        unint64_t v9 = 0xE400000000000000;
      }
      else {
        unint64_t v9 = 0xE500000000000000;
      }
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      if (*(unsigned char *)(v2 + 56)) {
        uint64_t v10 = 1702195828;
      }
      else {
        uint64_t v10 = 0x65736C6166;
      }
      if (*(unsigned char *)(v2 + 56)) {
        unint64_t v11 = 0xE400000000000000;
      }
      else {
        unint64_t v11 = 0xE500000000000000;
      }
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "potentialObstructionDetected changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32)) {
        goto LABEL_18;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32))
      {
LABEL_18:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
}

uint64_t sub_100226188()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v19 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimerBasedHysteresisScheduler();
  uint64_t v8 = swift_allocObject();
  sub_100004010(&qword_100390FA0);
  uint64_t v9 = swift_allocObject();
  swift_retain();
  *(void *)(v1 + 48) = sub_100232A54(v8, 0x7463656E6E6F4327, 0xEE00277974697669, (uint64_t)sub_100225EB4, 0, v9, 9);
  *(_WORD *)(v1 + 56) = 256;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v10 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v10 = _swiftEmptySetSingleton;
  }
  *(void *)(v1 + 64) = v10;
  uint64_t v20 = v1 + 64;
  swift_release();
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  uint64_t v21 = *(void *)(*(void *)(v1 + 48) + 16);
  sub_10000FDBC();
  swift_retain();
  swift_retain();
  id v22 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v18 = v12 + 56;
  v17(v4, 1, 1, v11);
  v16[3] = sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  _OWORD v16[2] = sub_1002340A0((unint64_t *)&qword_100393AC0, (void (*)(uint64_t))sub_10000FDBC);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v4, &qword_1003924A0);

  swift_release();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100234248;
  *(void *)(v13 + 24) = v1;
  v16[1] = sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v19 = *(void *)(v19 + 8);
  ((void (*)(char *, uint64_t))v19)(v7, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v21 = *(void *)(*(void *)(v1 + 48) + 24);
  swift_retain();
  id v22 = (id)static OS_dispatch_queue.main.getter();
  v17(v4, 1, 1, v11);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v4, &qword_1003924A0);

  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100234264;
  *(void *)(v14 + 24) = v1;
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v19)(v7, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100226704(uint64_t result)
{
  if (*(void *)(result + 32))
  {
    *(unsigned char *)(result + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_100226784(uint64_t result)
{
  if (*(unsigned __int8 *)(*(void *)(result + 48) + 106) <= 1u) {
    *(unsigned char *)(result + 57) = 0;
  }
  if (*(void *)(result + 32))
  {
    *(unsigned char *)(result + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_100226818()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100226848()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConnectivityModel()
{
  return self;
}

uint64_t sub_1002268BC(uint64_t a1, uint64_t a2)
{
  Swift::Int v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (sub_100231EF4(*(void **)a1, *(void **)a2)) {
    char v4 = sub_10020D388(v2, v3);
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

void sub_100226908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 56);
  if (!v5)
  {
    if (!a2) {
      return;
    }
LABEL_10:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A9988);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446466;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380920);
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v13 = String.init<A>(describing:)();
      sub_1001B3178(v13, v14, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "carrierName changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v3 + 32))
      {
LABEL_14:
        *(unsigned char *)(v3 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (*(void *)(v3 + 32)) {
        goto LABEL_14;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (!a2) {
    goto LABEL_10;
  }
  BOOL v6 = *(void *)(v2 + 48) == a1 && v5 == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_10;
  }
}

uint64_t sub_100226BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = *(void *)(v2 + 56);
  if (v6)
  {
    if (a2)
    {
      BOOL v7 = v5 == a1 && v6 == a2;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_12;
      }
    }
  }
  else if (!a2)
  {
    goto LABEL_14;
  }
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 40) = 1;
LABEL_12:
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
LABEL_14:
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  swift_bridgeObjectRelease();
  sub_100226908(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100226D10(void *a1)
{
  uint64_t v2 = v1;
  char v4 = *(void **)(v1 + 64);
  if (v4)
  {
    if (!a1)
    {
      swift_bridgeObjectRetain();
      if (*(void *)(v1 + 32)) {
        goto LABEL_5;
      }
LABEL_9:
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v5 = sub_1002324E4(v4, a1);
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_10;
    }
LABEL_4:
    if (*(void *)(v2 + 32))
    {
LABEL_5:
      *(unsigned char *)(v2 + 40) = 1;
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (a1) {
    goto LABEL_4;
  }
LABEL_10:
  *(void *)(v2 + 64) = a1;
  swift_bridgeObjectRelease();
  sub_100226F18(v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100226E18(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 72);
  if (v3)
  {
    if (a1 && (sub_10020D388(*(void *)(v1 + 72), a1) & 1) != 0) {
      goto LABEL_8;
    }
  }
  else if (!a1)
  {
    goto LABEL_10;
  }
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
LABEL_8:
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
LABEL_10:
  *(void *)(v1 + 72) = a1;
  swift_bridgeObjectRelease();
  sub_1002271FC(v3);

  return swift_bridgeObjectRelease();
}

void sub_100226F18(void *a1)
{
  uint64_t v2 = v1;
  if (!*(void *)(v1 + 64))
  {
    if (!a1) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9988);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    BOOL v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446466;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100390ED0);
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v12 = String.init<A>(describing:)();
      sub_1001B3178(v12, v13, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "partners changed from: %{public}s to: %{public}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_10:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (!a1) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  char v4 = (void *)swift_bridgeObjectRetain();
  char v5 = sub_1002324E4(v4, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    goto LABEL_6;
  }
}

void sub_1002271FC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = *(void *)(v1 + 72);
  if (!v4)
  {
    if (!a1) {
      return;
    }
LABEL_6:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A9988);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100390F90);
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "footnotes changed from: %{public}s to: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_10:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_10;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  if (!a1 || (sub_10020D388(v4, a1) & 1) == 0) {
    goto LABEL_6;
  }
}

uint64_t sub_1002274BC()
{
  *(void *)(v0 + 32) = 0;
  *(_WORD *)(v0 + 40) = 0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  return v0;
}

uint64_t sub_10022753C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100227574()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PartnerModel()
{
  return self;
}

uint64_t sub_1002275F0(uint64_t a1)
{
  sub_10000D544(a1, (uint64_t)v14, &qword_10038B210);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 64);
  if (v3 == 2)
  {
    uint64_t result = sub_10000D544(a1, (uint64_t)v18, &qword_10038B210);
    if (v19 == 2) {
      return result;
    }
    goto LABEL_5;
  }
  char v5 = v14[0];
  uint64_t v6 = v14[1];
  int v7 = v15;
  char v8 = v17;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v13 = v16;
  char v11 = *(unsigned char *)(v1 + 80);
  uint64_t result = sub_10000D544(a1, (uint64_t)v18, &qword_10038B210);
  if (v19 == 2) {
    goto LABEL_5;
  }
  uint64_t result = sub_10028AA74(v9, v5);
  if ((result & 1) == 0 || v10 != v6 || ((v7 ^ ((v3 & 1) == 0)) & 1) == 0) {
    goto LABEL_5;
  }
  if (v11)
  {
    if (v8) {
      return result;
    }
    goto LABEL_5;
  }
  if ((v8 & 1) != 0 || v12 != v13)
  {
LABEL_5:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      return Subject<>.send()();
    }
  }
  return result;
}

void sub_100227758(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000D544(a1, (uint64_t)v28, &qword_10038B210);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 64);
  if (v4 == 2)
  {
    sub_10000D544(a1, (uint64_t)v32, &qword_10038B210);
    if (v33 == 2) {
      return;
    }
  }
  else
  {
    char v5 = v28[0];
    uint64_t v6 = v28[1];
    int v7 = v29;
    char v8 = v31;
    uint64_t v9 = *(void *)(v2 + 48);
    uint64_t v10 = *(void *)(v2 + 56);
    uint64_t v23 = *(void *)(v2 + 72);
    uint64_t v24 = v30;
    char v11 = *(unsigned char *)(v2 + 80);
    sub_10000D544(a1, (uint64_t)v32, &qword_10038B210);
    if (v33 != 2)
    {
      BOOL v22 = (v4 & 1) == 0;
      if (sub_10028AA74(v9, v5) & 1) != 0 && v10 == v6 && ((v7 ^ v22))
      {
        if (v11)
        {
          if (v8) {
            return;
          }
        }
        else if ((v8 & 1) == 0 && v23 == v24)
        {
          return;
        }
      }
    }
  }
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9988);
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446466;
    sub_10000D544(a1, (uint64_t)v25, &qword_10038B210);
    sub_100004010(&qword_10038B210);
    uint64_t v16 = String.init<A>(describing:)();
    *(void *)&v25[0] = sub_1001B3178(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    char v18 = *(unsigned char *)(v2 + 80);
    long long v19 = *(_OWORD *)(v2 + 64);
    v25[0] = *(_OWORD *)(v2 + 48);
    v25[1] = v19;
    char v26 = v18;
    uint64_t v20 = String.init<A>(describing:)();
    *(void *)&v25[0] = sub_1001B3178(v20, v21, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Emergency conversation changed from: %{public}s to: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v2 + 32))
    {
LABEL_9:
      *(unsigned char *)(v2 + 41) = 1;
      return;
    }
  }
  else
  {

    swift_release_n();
    if (*(void *)(v2 + 32)) {
      goto LABEL_9;
    }
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
}

uint64_t sub_100227AA8()
{
  return sub_100227FE0();
}

uint64_t type metadata accessor for ConversationModel()
{
  return self;
}

uint64_t sub_100227AD4(uint64_t a1)
{
  sub_10000D544(a1, (uint64_t)&v16, &qword_100382458);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 56);
  if (v3 == 2)
  {
    uint64_t result = sub_10000D544(a1, (uint64_t)v22, &qword_100382458);
    if (v23 == 2) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t v5 = v16;
  int v6 = v17;
  char v7 = v19;
  uint64_t v13 = v20;
  uint64_t v14 = v18;
  char v15 = v21;
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v12 = *(void *)(v1 + 80);
  char v11 = *(unsigned char *)(v1 + 88);
  uint64_t result = sub_10000D544(a1, (uint64_t)v22, &qword_100382458);
  if (v23 == 2 || v8 != v5 || ((v6 ^ ((v3 & 1) == 0)) & 1) == 0) {
    goto LABEL_5;
  }
  if (v9)
  {
    if ((v7 & 1) == 0) {
      goto LABEL_5;
    }
  }
  else if ((v7 & 1) != 0 || v10 != v14)
  {
    goto LABEL_5;
  }
  if (v11)
  {
    if (v15) {
      return result;
    }
    goto LABEL_5;
  }
  if ((v15 & 1) != 0 || v12 != v13)
  {
LABEL_5:
    if (*(void *)(v1 + 32))
    {
      *(unsigned char *)(v1 + 40) = 1;
    }
    else
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      return Subject<>.send()();
    }
  }
  return result;
}

void sub_100227C60(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000D544(a1, (uint64_t)&v31, &qword_100382458);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 56);
  if (v4 == 2)
  {
    sub_10000D544(a1, (uint64_t)v37, &qword_100382458);
    if (v38 == 2) {
      return;
    }
LABEL_17:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000FD84(v12, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446466;
      sub_10000D544(a1, (uint64_t)v27, &qword_100382458);
      sub_100004010(&qword_100382458);
      uint64_t v16 = String.init<A>(describing:)();
      *(void *)&v27[0] = sub_1001B3178(v16, v17, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v18 = *(void *)(v2 + 80);
      char v19 = *(unsigned char *)(v2 + 88);
      long long v20 = *(_OWORD *)(v2 + 64);
      v27[0] = *(_OWORD *)(v2 + 48);
      v27[1] = v20;
      uint64_t v28 = v18;
      char v29 = v19;
      uint64_t v21 = String.init<A>(describing:)();
      *(void *)&v27[0] = sub_1001B3178(v21, v22, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Roadside Assistance conversation changed from: %{public}s to: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (*(void *)(v2 + 32))
      {
LABEL_21:
        *(unsigned char *)(v2 + 41) = 1;
        return;
      }
    }
    else
    {

      swift_release_n();
      if (*(void *)(v2 + 32)) {
        goto LABEL_21;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return;
  }
  uint64_t v5 = v31;
  int v6 = v32;
  char v7 = v34;
  uint64_t v24 = v35;
  uint64_t v25 = v33;
  char v26 = v36;
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v23 = *(void *)(v2 + 80);
  char v11 = *(unsigned char *)(v2 + 88);
  sub_10000D544(a1, (uint64_t)v37, &qword_100382458);
  if (v38 == 2 || v8 != v5 || ((v6 ^ ((v4 & 1) == 0)) & 1) == 0) {
    goto LABEL_17;
  }
  if (v9)
  {
    if ((v7 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else if ((v7 & 1) != 0 || v10 != v25)
  {
    goto LABEL_17;
  }
  if (v11)
  {
    if (v26) {
      return;
    }
    goto LABEL_17;
  }
  if ((v26 & 1) != 0 || v23 != v24) {
    goto LABEL_17;
  }
}

uint64_t sub_100227FD8()
{
  return sub_100227FE0();
}

uint64_t sub_100227FE0()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RoadsideAssistanceConversationModel()
{
  return self;
}

uint64_t sub_100228050(uint64_t result, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 56);
  if (v4)
  {
    if (!a2) {
      goto LABEL_11;
    }
    uint64_t v5 = result;
    uint64_t result = *(void *)(v2 + 48);
    if (result != v5 || v4 != a2)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        goto LABEL_11;
      }
    }
LABEL_10:
    if (*(unsigned char *)(v2 + 64)) {
      return result;
    }
    goto LABEL_11;
  }
  if (!a2) {
    goto LABEL_10;
  }
LABEL_11:
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

void sub_100228110(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 56);
  if (v5)
  {
    if (!a2) {
      goto LABEL_11;
    }
    BOOL v6 = *(void *)(v2 + 48) == a1 && v5 == a2;
    if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_11;
    }
  }
  else if (a2)
  {
    goto LABEL_11;
  }
  if (*(unsigned char *)(v2 + 64)) {
    return;
  }
LABEL_11:
  if (*(unsigned char *)(v2 + 64) == 1)
  {
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A9988);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446466;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380920);
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v13 = String.init<A>(describing:)();
      sub_1001B3178(v13, v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Current country changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!*(void *)(v3 + 32)) {
        goto LABEL_22;
      }
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      if (!*(void *)(v3 + 32))
      {
LABEL_22:
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
        return;
      }
    }
  }
  else
  {
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000FD84(v15, (uint64_t)qword_1003A9988);
    swift_retain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v22 = v19;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380920);
      uint64_t v20 = String.init<A>(describing:)();
      sub_1001B3178(v20, v21, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Current country initialized with: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(v3 + 64) = 1;
    if (!*(void *)(v3 + 32)) {
      goto LABEL_22;
    }
  }
  *(unsigned char *)(v3 + 41) = 1;
}

uint64_t sub_100228594()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10022859C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CountryModel()
{
  return self;
}

uint64_t sub_100228608()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_10038B418);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 48) = PassthroughSubject.init()();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 56) = PassthroughSubject.init()();
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
  uint64_t v3 = type metadata accessor for ConnectionClosed(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_release();
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  return v1;
}

uint64_t sub_10022871C()
{
  swift_release();
  swift_release();
  return sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed, &qword_100380780);
}

uint64_t sub_100228758()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed, &qword_100380780);

  return swift_deallocClassInstance();
}

uint64_t sub_1002287E4()
{
  return type metadata accessor for ConnectionClosedModel(0);
}

uint64_t type metadata accessor for ConnectionClosedModel(uint64_t a1)
{
  return sub_1000497F4(a1, qword_1003906A0);
}

void sub_10022880C()
{
  sub_10021B770(319, (unint64_t *)&unk_1003880D0, (void (*)(uint64_t))type metadata accessor for ConnectionClosed);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1002288C8()
{
  uint64_t v1 = *(void **)(v0 + 144);
  if (!v1[4] || *(void *)(v0 + 64) && *(unsigned char *)(v0 + 56) == 5)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    if (!v2) {
      goto LABEL_12;
    }
  }
  else
  {
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000023, 0x80000001002D4C00);
    uint64_t v2 = *(void *)(v0 + 64);
    if (!v2) {
      goto LABEL_12;
    }
  }
  if (*(unsigned char *)(v0 + 56) != 5)
  {
    uint64_t v2 = 0;
LABEL_12:
    v1[4] = v2;
    swift_release();
    goto LABEL_13;
  }
  if (!v1[4])
  {
    uint64_t v3 = v1[2];
    unint64_t v4 = v1[3];
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, v3, v4);
    goto LABEL_12;
  }
LABEL_13:
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
  swift_retain();
  PassthroughSubject.send(_:)();
  return swift_release_n();
}

void sub_100228A6C(void *a1)
{
  uint64_t v2 = v1;
  sub_10000D544((uint64_t)a1, (uint64_t)v73, &qword_1003826B8);
  uint64_t v4 = v73[2];
  uint64_t v35 = v73[0];
  uint64_t v36 = v73[1];
  uint64_t v37 = v73[3];
  uint64_t v38 = v73[4];
  uint64_t v39 = v73[5];
  uint64_t v40 = v73[6];
  uint64_t v5 = v73[8];
  uint64_t v41 = v73[7];
  uint64_t v42 = v73[9];
  uint64_t v7 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v45 = v1[11];
  uint64_t v46 = v1[12];
  uint64_t v10 = v1[13];
  uint64_t v11 = v1[14];
  uint64_t v12 = v1[15];
  uint64_t v47 = v10;
  uint64_t v48 = v11;
  uint64_t v13 = v2[17];
  uint64_t v43 = v73[10];
  uint64_t v44 = v2[16];
  if (!v6)
  {
    sub_10000D544((uint64_t)a1, (uint64_t)v76, &qword_1003826B8);
    if (!v77) {
      return;
    }
    goto LABEL_6;
  }
  sub_10000D544((uint64_t)a1, (uint64_t)v74, &qword_1003826B8);
  if (!v75)
  {
LABEL_6:
    uint64_t v51 = v7;
    uint64_t v52 = v6;
    uint64_t v53 = v9;
    uint64_t v54 = v8;
    uint64_t v55 = v45;
    uint64_t v56 = v46;
    uint64_t v57 = v47;
    uint64_t v58 = v48;
    uint64_t v59 = v12;
    uint64_t v60 = v44;
    uint64_t v61 = v13;
    uint64_t v62 = v35;
    uint64_t v63 = v36;
    uint64_t v64 = v4;
    uint64_t v65 = v37;
    uint64_t v66 = v38;
    uint64_t v67 = v39;
    uint64_t v68 = v40;
    uint64_t v69 = v41;
    uint64_t v70 = v5;
    uint64_t v71 = v42;
    uint64_t v72 = v43;
    sub_100094728(v7, v6);
    sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    sub_100094668(&v51);
LABEL_7:
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000FD84(v14, (uint64_t)qword_1003A9988);
    sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    swift_retain();
    sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    swift_retain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446466;
      sub_10000D544((uint64_t)a1, (uint64_t)v49, &qword_1003826B8);
      sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
      sub_100004010(&qword_1003826B8);
      uint64_t v18 = String.init<A>(describing:)();
      v49[0] = sub_1001B3178(v18, v19, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
      sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v20 = v2[8];
      uint64_t v21 = v2[9];
      uint64_t v22 = v2[10];
      uint64_t v23 = v2[11];
      uint64_t v24 = v2[12];
      uint64_t v25 = v2[13];
      uint64_t v26 = v2[14];
      uint64_t v27 = v2[15];
      uint64_t v28 = v2[16];
      uint64_t v29 = v2[17];
      v49[0] = v2[7];
      v49[1] = v20;
      v49[2] = v21;
      v49[3] = v22;
      v49[4] = v23;
      v49[5] = v24;
      v49[6] = v25;
      unsigned char v49[7] = v26;
      v49[8] = v27;
      v49[9] = v28;
      _OWORD v49[10] = v29;
      sub_100094728(v49[0], v20);
      uint64_t v30 = String.init<A>(describing:)();
      v49[0] = sub_1001B3178(v30, v31, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Stewie state changed from: %{public}s to: %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!v2[8]) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
      sub_100233E60(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);

      swift_release_n();
      if (!v2[8]) {
        goto LABEL_15;
      }
    }
    if (*((unsigned char *)v2 + 56) == 5)
    {
      uint64_t v32 = (void *)v2[18];
      if (!v32[4])
      {
        uint64_t v33 = v32[2];
        unint64_t v34 = v32[3];
        type metadata accessor for PreventSuspensionAssertion();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v32[4] = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, v33, v34);
        swift_release();
        if (v2[4]) {
          goto LABEL_16;
        }
        goto LABEL_18;
      }
    }
LABEL_15:
    if (v2[4])
    {
LABEL_16:
      *((unsigned char *)v2 + 41) = 1;
      return;
    }
LABEL_18:
    sub_1002288C8();
    return;
  }
  LOBYTE(v51) = v35;
  uint64_t v52 = v36;
  LOWORD(v53) = v4 & 0xFF01;
  uint64_t v54 = v37;
  uint64_t v55 = v38;
  uint64_t v56 = v39;
  uint64_t v57 = v40;
  uint64_t v58 = v41;
  LOWORD(v59) = v5;
  uint64_t v60 = v42;
  uint64_t v61 = v43;
  v76[0] = v7;
  uint64_t v77 = v6;
  __int16 v78 = v9 & 0xFF01;
  uint64_t v79 = v8;
  uint64_t v80 = v45;
  uint64_t v81 = v46;
  uint64_t v82 = v47;
  uint64_t v83 = v48;
  __int16 v84 = v12;
  uint64_t v85 = v44;
  uint64_t v86 = v13;
  if (!sub_1000205F0((uint64_t)v76, (uint64_t)&v51)) {
    goto LABEL_7;
  }
}

uint64_t sub_100229004()
{
  sub_100004010((uint64_t *)&unk_100393AB0);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 48) = PassthroughSubject.init()();
  type metadata accessor for PreventSuspension();
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(void *)(v0 + 136) = 0;
  uint64_t v1 = (void *)swift_allocObject();
  v1[2] = 0xD00000000000001FLL;
  v1[3] = 0x80000001002D52F0;
  v1[4] = 0;
  *(void *)(v0 + 144) = v1;
  swift_release();
  *(void *)(v0 + 32) = 0;
  *(_WORD *)(v0 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  return v0;
}

uint64_t sub_100229104()
{
  swift_release();
  sub_100093F40(*(void *)(v0 + 56), *(void *)(v0 + 64));

  return swift_release();
}

uint64_t sub_100229160()
{
  swift_release();
  swift_release();
  swift_release();
  sub_100093F40(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StewieModel()
{
  return self;
}

uint64_t sub_100229200()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_requestedAt;
  uint64_t v2 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_responseReceivedAt, &qword_100380788);

  return swift_deallocClassInstance();
}

uint64_t sub_1002292C8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004010(&qword_100390E78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v13[-v9];
  static Date.now.getter();
  sub_10000D544(v0 + 56, (uint64_t)v14, &qword_100382698);
  uint64_t v11 = v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction;
  swift_beginAccess();
  sub_10000D2A0(v11, (uint64_t)v8, &qword_100390E78);
  sub_1002294D0((uint64_t)v4, (uint64_t)v14, (unint64_t)v8, (uint64_t)v10);
  sub_10000950C((uint64_t)v8, &qword_100390E78);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10000D2A0(v11, (uint64_t)v8, &qword_100390E78);
  sub_10022C28C((uint64_t)v10);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v10, v11, &qword_100390E78);
  swift_endAccess();
  sub_10022C648((uint64_t)v8);
  sub_10000950C((uint64_t)v10, &qword_100390E78);
  return sub_10000950C((uint64_t)v8, &qword_100390E78);
}

uint64_t sub_1002294D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v148 = a3;
  uint64_t v152 = a1;
  uint64_t v145 = type metadata accessor for TargetTracks.TimePoint(0);
  uint64_t v143 = *(void *)(v145 - 8);
  uint64_t v7 = __chkstk_darwin(v145);
  uint64_t v137 = (uint64_t)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::String v140 = (char *)&v129 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v136 = (uint64_t)&v129 - v12;
  __chkstk_darwin(v11);
  Swift::Int v146 = (int *)((char *)&v129 - v13);
  uint64_t v14 = sub_100004010(&qword_100390E78);
  __chkstk_darwin(v14 - 8);
  uint64_t v147 = (char **)((char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v141 = (uint64_t)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  unint64_t v149 = *(void *)(v19 - 8);
  uint64_t v150 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  Swift::String v144 = (char *)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  id v138 = (char *)&v129 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v129 - v24;
  uint64_t v26 = sub_100004010(&qword_10038B448);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for TargetTracks(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  unint64_t v151 = (unint64_t)&v129 - v34;
  sub_10000D544(a2, (uint64_t)v155, &qword_100382698);
  if (v157) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a4, 1, 1, v16);
  }
  id v142 = (int *)v16;
  uint64_t v139 = v17;
  uint64_t v135 = a4;
  if (v156 > 0.436332313) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *, double))(v139 + 56))(v135, 1, 1, v142, v156);
  }
  double v134 = v155[0];
  uint64_t v36 = v4 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
  swift_beginAccess();
  sub_10000D2A0(v36, (uint64_t)v28, &qword_10038B448);
  int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  uint64_t v38 = v139;
  if (v37 == 1)
  {
    sub_10000950C((uint64_t)v28, &qword_10038B448);
LABEL_11:
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v38 + 56);
    uint64_t v47 = v135;
    uint64_t v48 = 1;
    Swift::String v49 = v142;
    return v46(v47, v48, 1, v49);
  }
  uint64_t v39 = v151;
  sub_100233C38((uint64_t)v28, v151, type metadata accessor for TargetTracks);
  sub_1002340A0((unint64_t *)&qword_100388198, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v40 = v152;
  uint64_t v41 = v150;
  char v42 = dispatch thunk of static Comparable.< infix(_:_:)();
  unint64_t v43 = v149;
  id v133 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
  unint64_t v132 = v149 + 16;
  v133(v25, v40, v41);
  sub_100232D08(v39, (uint64_t)v33, type metadata accessor for TargetTracks);
  if (v42)
  {
    sub_100232D70((uint64_t)v33, type metadata accessor for TargetTracks);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v41);
LABEL_10:
    sub_100232D70(v39, type metadata accessor for TargetTracks);
    goto LABEL_11;
  }
  char v44 = dispatch thunk of static Comparable.< infix(_:_:)();
  sub_100232D70((uint64_t)v33, type metadata accessor for TargetTracks);
  uint64_t v45 = *(char ***)(v43 + 8);
  ((void (*)(char *, uint64_t))v45)(v25, v41);
  if (v44) {
    goto LABEL_10;
  }
  uint64_t v50 = (void (*)(void, void))v147;
  sub_10000D2A0(v148, (uint64_t)v147, &qword_100390E78);
  uint64_t v51 = v142;
  if ((*(unsigned int (**)(void (*)(void, void), uint64_t, int *))(v38 + 48))(v50, 1, v142) == 1)
  {
    sub_10000950C((uint64_t)v50, &qword_100390E78);
  }
  else
  {
    uint64_t v52 = v141;
    sub_100233C38((uint64_t)v50, v141, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
    if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
    {
      if (*(void *)&v134 == *(void *)(v52 + v51[5])
        || (uint64_t v54 = v52 + v51[6], (*(unsigned char *)(v54 + 24) & 1) == 0) && *(void *)&v134 == *(void *)v54)
      {
        sub_100232D70(v39, type metadata accessor for TargetTracks);
        uint64_t v53 = v135;
        sub_100233C38(v52, v135, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
        uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v38 + 56);
        uint64_t v47 = v53;
        uint64_t v48 = 0;
        goto LABEL_27;
      }
    }
    sub_100232D70(v52, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
  }
  uint64_t v55 = *(int *)(v29 + 24);
  uint64_t v56 = *(void *)(v151 + v55);
  uint64_t v57 = *(void *)(v56 + 16);
  if (!v57) {
    goto LABEL_26;
  }
  uint64_t v147 = v45;
  unint64_t v148 = (*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
  uint64_t v58 = v56 + v148;
  uint64_t v59 = *(void *)(v143 + 72);
  swift_bridgeObjectRetain();
  unint64_t v60 = 0;
  double v61 = v134;
  while ((static Date.> infix(_:_:)() & 1) == 0)
  {
    ++v60;
    v58 += v59;
    if (v57 == v60)
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = v142;
LABEL_26:
      sub_100232D70(v151, type metadata accessor for TargetTracks);
      uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v38 + 56);
      uint64_t v47 = v135;
      uint64_t v48 = 1;
LABEL_27:
      Swift::String v49 = v51;
      return v46(v47, v48, 1, v49);
    }
  }
  swift_bridgeObjectRelease();
  if (qword_10037DD90 != -1) {
    goto LABEL_88;
  }
  while (1)
  {
    uint64_t v62 = type metadata accessor for Logger();
    uint64_t v63 = sub_10000FD84(v62, (uint64_t)qword_1003A9988);
    uint64_t v64 = v138;
    uint64_t v65 = v150;
    v133(v138, v152, v150);
    uint64_t v143 = v63;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.default.getter();
    uint64_t v68 = (int *)v67;
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v131 = (int *)v66;
      uint64_t v70 = v64;
      uint64_t v64 = (char *)v69;
      uint64_t v141 = swift_slowAlloc();
      double v153 = v61;
      uint64_t v154 = v141;
      *(_DWORD *)uint64_t v64 = 134349314;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v64 + 6) = 2082;
      uint64_t v129 = v64 + 14;
      sub_1002340A0(&qword_100380430, (void (*)(uint64_t))&type metadata accessor for Date);
      int v130 = (int)v68;
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
      double v153 = COERCE_DOUBLE(sub_1001B3178(v71, v72, &v154));
      double v61 = v134;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v147)(v70, v65);
      uint64_t v68 = v131;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v131, (os_log_type_t)v130, "Skimmer prediction for target: %{public}lld at: %{public}s", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      ((void (*)(char *, uint64_t))v147)(v64, v65);
    }
    uint64_t v73 = *(void *)(v151 + v55);
    unint64_t v74 = *(void *)(v73 + 16);
    if (v74 < v60)
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      swift_once();
      goto LABEL_59;
    }
    if (v74 != v60)
    {
      if (v74 <= v60) {
        unint64_t v75 = v60;
      }
      else {
        unint64_t v75 = *(void *)(v73 + 16);
      }
      unint64_t v76 = v60;
      uint64_t v68 = v146;
      while (v76 != v75)
      {
        uint64_t v77 = *(void *)(v151 + v55);
        if (v76 >= *(void *)(v77 + 16)) {
          goto LABEL_85;
        }
        sub_100232D08(v77 + v148 + v76 * v59, (uint64_t)v68, type metadata accessor for TargetTracks.TimePoint);
        __int16 v78 = *(double **)((char *)v68 + *(int *)(v145 + 20));
        uint64_t v79 = *((void *)v78 + 2);
        if (!v79) {
          goto LABEL_53;
        }
        if (*((void *)v78 + 4) != *(void *)&v61)
        {
          if (v79 == 1)
          {
LABEL_53:
            sub_100232D70((uint64_t)v146, type metadata accessor for TargetTracks.TimePoint);
            goto LABEL_54;
          }
          uint64_t v81 = v78 + 9;
          uint64_t v82 = 1;
          while (1)
          {
            uint64_t v83 = v82 + 1;
            if (__OFADD__(v82, 1)) {
              break;
            }
            if (*((void *)v81 - 2) == *(void *)&v61)
            {
              uint64_t v80 = v81 - 1;
              goto LABEL_50;
            }
            v81 += 3;
            ++v82;
            if (v83 == v79) {
              goto LABEL_53;
            }
          }
          __break(1u);
          break;
        }
        uint64_t v80 = v78 + 5;
        uint64_t v81 = v78 + 6;
LABEL_50:
        double v84 = *v81;
        double v85 = *v81 * 57.2957795;
        if (v85 > 25.0)
        {
          uint64_t v116 = *(void *)v80;
          uint64_t v117 = v136;
          sub_100232D08((uint64_t)v146, v136, type metadata accessor for TargetTracks.TimePoint);
          Swift::String v118 = Logger.logObject.getter();
          os_log_type_t v119 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v118, v119))
          {
            uint64_t v120 = swift_slowAlloc();
            uint64_t v154 = swift_slowAlloc();
            *(_DWORD *)uint64_t v120 = 136446466;
            sub_1002340A0(&qword_100380430, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v121 = v150;
            uint64_t v122 = dispatch thunk of CustomStringConvertible.description.getter();
            double v153 = COERCE_DOUBLE(sub_1001B3178(v122, v123, &v154));
            double v61 = v134;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100232D70(v117, type metadata accessor for TargetTracks.TimePoint);
            *(_WORD *)(v120 + 12) = 2050;
            double v153 = v85;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v118, v119, "Current target is rising at: %{public}s to: %{public}f", (uint8_t *)v120, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            sub_100232D70(v151, type metadata accessor for TargetTracks);
            uint64_t v124 = v135;
            uint64_t v125 = v142;
          }
          else
          {

            sub_100232D70(v117, type metadata accessor for TargetTracks.TimePoint);
            sub_100232D70(v151, type metadata accessor for TargetTracks);
            uint64_t v124 = v135;
            uint64_t v125 = v142;
            uint64_t v121 = v150;
          }
          uint64_t v126 = v144;
          uint64_t v127 = (uint64_t)v146;
          v133(v144, (uint64_t)v146, v121);
          sub_100232D70(v127, type metadata accessor for TargetTracks.TimePoint);
          (*(void (**)(uint64_t, char *, uint64_t))(v149 + 32))(v124, v126, v121);
          *(double *)(v124 + v125[5]) = v61;
          uint64_t v128 = v124 + v125[6];
          *(double *)uint64_t v128 = v61;
          *(void *)(v128 + 8) = v116;
          *(double *)(v128 + 16) = v84;
          *(unsigned char *)(v128 + 24) = 0;
          return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v139 + 56))(v124, 0, 1, v125);
        }
        ++v76;
        sub_100232D70((uint64_t)v146, type metadata accessor for TargetTracks.TimePoint);
        if (v76 == v74) {
          goto LABEL_54;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
LABEL_54:
    uint64_t v64 = *(char **)(*(void *)(v151 + v55) + 16);
    if ((unint64_t)v64 < v60) {
      goto LABEL_90;
    }
    uint64_t v86 = (uint64_t)v140;
    if (v64 == (char *)v60) {
      break;
    }
    if ((unint64_t)v64 <= v60) {
      unint64_t v93 = v60;
    }
    else {
      unint64_t v93 = *(void *)(*(void *)(v151 + v55) + 16);
    }
    while (v60 != v93)
    {
      uint64_t v94 = *(void *)(v151 + v55);
      if (v60 >= *(void *)(v94 + 16)) {
        goto LABEL_87;
      }
      sub_100232D08(v94 + v148 + v60 * v59, v86, type metadata accessor for TargetTracks.TimePoint);
      if (qword_10037DEC8 != -1) {
        swift_once();
      }
      id v95 = v144;
      static Date.+ infix(_:_:)();
      char v96 = static Date.> infix(_:_:)();
      ((void (*)(char *, uint64_t))v147)(v95, v150);
      if (v96)
      {
        sub_100232D70(v86, type metadata accessor for TargetTracks.TimePoint);
        double v61 = v134;
        goto LABEL_56;
      }
      uint64_t v97 = *(void *)(v86 + *(int *)(v145 + 20));
      uint64_t v98 = *(void *)(v97 + 16);
      double v61 = v134;
      if (v98)
      {
        id v99 = (double *)(v97 + 48);
        while (1)
        {
          double v100 = *(v99 - 2);
          if (*(void *)&v100 != *(void *)&v134)
          {
            double v101 = *v99;
            if (*v99 > 0.436332313) {
              break;
            }
          }
          v99 += 3;
          if (!--v98) {
            goto LABEL_63;
          }
        }
        uint64_t v102 = *((void *)v99 - 1);
        uint64_t v103 = v137;
        sub_100232D08(v86, v137, type metadata accessor for TargetTracks.TimePoint);
        unint64_t v104 = Logger.logObject.getter();
        os_log_type_t v105 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v104, v105))
        {
          uint64_t v106 = swift_slowAlloc();
          uint64_t v152 = swift_slowAlloc();
          uint64_t v154 = v152;
          *(_DWORD *)uint64_t v106 = 134349570;
          double v153 = v101 * 57.2957795;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v106 + 12) = 2050;
          double v153 = v100;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v106 + 22) = 2082;
          sub_1002340A0(&qword_100380430, (void (*)(uint64_t))&type metadata accessor for Date);
          uint64_t v107 = v103;
          uint64_t v108 = v150;
          uint64_t v109 = dispatch thunk of CustomStringConvertible.description.getter();
          double v153 = COERCE_DOUBLE(sub_1001B3178(v109, v110, &v154));
          double v61 = v134;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100232D70(v107, type metadata accessor for TargetTracks.TimePoint);
          _os_log_impl((void *)&_mh_execute_header, v104, v105, "Higher pass of: %{public}f for target: %{public}lld is available at: %{public}s", (uint8_t *)v106, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_100232D70(v151, type metadata accessor for TargetTracks);
          uint64_t v111 = v135;
        }
        else
        {

          sub_100232D70(v103, type metadata accessor for TargetTracks.TimePoint);
          sub_100232D70(v151, type metadata accessor for TargetTracks);
          uint64_t v111 = v135;
          uint64_t v108 = v150;
        }
        long long v112 = v144;
        uint64_t v113 = (uint64_t)v140;
        v133(v144, (uint64_t)v140, v108);
        sub_100232D70(v113, type metadata accessor for TargetTracks.TimePoint);
        (*(void (**)(uint64_t, char *, uint64_t))(v149 + 32))(v111, v112, v108);
        uint64_t v114 = v142;
        *(double *)(v111 + v142[5]) = v61;
        uint64_t v115 = v111 + v114[6];
        *(double *)uint64_t v115 = v100;
        *(void *)(v115 + 8) = v102;
        *(double *)(v115 + 16) = v101;
        *(unsigned char *)(v115 + 24) = 0;
        return (*(uint64_t (**)(uint64_t, void, uint64_t))(v139 + 56))(v111, 0, 1);
      }
LABEL_63:
      ++v60;
      sub_100232D70(v86, type metadata accessor for TargetTracks.TimePoint);
      uint64_t v38 = v139;
      if ((char *)v60 == v64) {
        goto LABEL_56;
      }
    }
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    swift_once();
  }
LABEL_56:
  unsigned __int8 v87 = Logger.logObject.getter();
  os_log_type_t v88 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v87, v88))
  {
    float64x2_t v89 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float64x2_t v89 = 0;
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "No better service suggestions found", v89, 2u);
    swift_slowDealloc();
  }

  uint64_t v68 = v142;
  unint64_t v60 = v149;
  uint64_t v64 = (char *)v150;
  unint64_t v74 = v151;
  if (qword_10037DEC8 != -1) {
    goto LABEL_91;
  }
LABEL_59:
  uint64_t v90 = v144;
  static Date.+ infix(_:_:)();
  sub_100232D70(v74, type metadata accessor for TargetTracks);
  uint64_t v91 = v135;
  (*(void (**)(uint64_t, char *, char *))(v60 + 32))(v135, v90, v64);
  *(double *)(v91 + v68[5]) = v61;
  uint64_t v92 = v91 + v68[6];
  *(void *)uint64_t v92 = 0;
  *(void *)(v92 + 8) = 0;
  *(void *)(v92 + 16) = 0;
  *(unsigned char *)(v92 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v38 + 56))(v91, 0, 1, v68);
}

unint64_t sub_10022AA30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v38 - v20;
  unint64_t result = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v38 - v23;
  if ((*(unsigned char *)(v1 + 96) & 1) != 0 || *(double *)(v1 + 72) > 0.436332313) {
    return result;
  }
  uint64_t v25 = *(void *)(v1 + 104);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  uint64_t v39 = v9;
  uint64_t v26 = v25 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_responseReceivedAt;
  swift_beginAccess();
  uint64_t v27 = v26;
  uint64_t v9 = v39;
  sub_10000D2A0(v27, (uint64_t)v4, &qword_100380788);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:
    sub_10000950C((uint64_t)v4, &qword_100380788);
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v24, v4, v5);
  static DispatchTime.now()();
  unint64_t v28 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v28)
  {
    unint64_t v38 = 0;
  }
  else
  {
    unint64_t v29 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t result = DispatchTime.uptimeNanoseconds.getter();
    if (v29 < result)
    {
      __break(1u);
      return result;
    }
    unint64_t v38 = v29 - result;
  }
  int v37 = *(void (**)(char *, uint64_t))(v6 + 8);
  v37(v21, v5);
  unint64_t result = ((uint64_t (*)(char *, uint64_t))v37)(v24, v5);
  uint64_t v9 = v39;
  if (v38 > 0x8BEE6439FFLL)
  {
LABEL_10:
    uint64_t v30 = *(void *)(v1 + 104);
    if (!v30) {
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v30 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_requestedAt, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v18, v15, v5);
    static DispatchTime.now()();
    unint64_t v31 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() < v31)
    {
      unint64_t v32 = DispatchTime.uptimeNanoseconds.getter();
      unint64_t v33 = DispatchTime.uptimeNanoseconds.getter();
      unint64_t v34 = v32 - v33;
      if (v32 >= v33) {
        goto LABEL_15;
      }
      __break(1u);
    }
    unint64_t v34 = 0;
LABEL_15:
    uint64_t v35 = *(void (**)(char *, uint64_t))(v6 + 8);
    v35(v12, v5);
    unint64_t result = ((uint64_t (*)(char *, uint64_t))v35)(v18, v5);
    if (v34 <= 0x8BEE6439FFLL) {
      return result;
    }
LABEL_16:
    static DispatchTime.now()();
    type metadata accessor for ServicePredictionsModel.Request(0);
    uint64_t v36 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v36 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_responseReceivedAt, 1, 1, v5);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v36 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_requestedAt, v9, v5);
    *(void *)(v36 + OBJC_IVAR____TtCC8SOSBuddy23ServicePredictionsModel7Request_model) = v1;
    *(void *)(v1 + 104) = v36;
    swift_retain();
    swift_retain();
    swift_release();
    swift_weakInit();
    PassthroughSubject.send(_:)();
    swift_release();
    return sub_100233CA0((uint64_t)v40);
  }
  return result;
}

uint64_t sub_10022AEE8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TargetTracks(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B448);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100390E98);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_10038B448);
  sub_10000D2A0(a1, v15, &qword_10038B448);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) == 1)
  {
    if (v16(v15, 1, v3) == 1) {
      return sub_10000950C((uint64_t)v13, &qword_10038B448);
    }
    uint64_t v18 = &qword_100390E98;
  }
  else
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_10038B448);
    if (v16(v15, 1, v3) == 1)
    {
      uint64_t v18 = &qword_100390E98;
    }
    else
    {
      sub_100233C38(v15, (uint64_t)v6, type metadata accessor for TargetTracks);
      if (static Date.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        char v19 = sub_10023215C(*(void *)&v9[*(int *)(v3 + 24)], *(void *)&v6[*(int *)(v3 + 24)]);
        sub_100232D70((uint64_t)v6, type metadata accessor for TargetTracks);
        sub_100232D70((uint64_t)v9, type metadata accessor for TargetTracks);
        uint64_t result = sub_10000950C((uint64_t)v13, &qword_10038B448);
        if (v19) {
          return result;
        }
        if (*(void *)(v1 + 32)) {
          goto LABEL_15;
        }
LABEL_11:
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        return Subject<>.send()();
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for TargetTracks);
      uint64_t v18 = &qword_10038B448;
    }
    sub_100232D70((uint64_t)v9, type metadata accessor for TargetTracks);
  }
  uint64_t result = sub_10000950C((uint64_t)v13, v18);
  if (!*(void *)(v1 + 32)) {
    goto LABEL_11;
  }
LABEL_15:
  *(unsigned char *)(v1 + 40) = 1;
  return result;
}

uint64_t sub_10022B274(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TargetTracks(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10038B448);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_100390E98);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
  swift_beginAccess();
  uint64_t v16 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10000D2A0(v15, (uint64_t)v14, &qword_10038B448);
  sub_10000D2A0(a1, v16, &qword_10038B448);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1) {
      return sub_10000950C((uint64_t)v14, &qword_10038B448);
    }
    char v19 = &qword_100390E98;
    goto LABEL_13;
  }
  sub_10000D2A0((uint64_t)v14, (uint64_t)v10, &qword_10038B448);
  if (v17(v16, 1, v4) == 1)
  {
    char v19 = &qword_100390E98;
LABEL_12:
    sub_100232D70((uint64_t)v10, type metadata accessor for TargetTracks);
LABEL_13:
    sub_10000950C((uint64_t)v14, v19);
    goto LABEL_14;
  }
  sub_100233C38(v16, (uint64_t)v7, type metadata accessor for TargetTracks);
  if ((static Date.== infix(_:_:)() & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0)
  {
    sub_100232D70((uint64_t)v7, type metadata accessor for TargetTracks);
    char v19 = &qword_10038B448;
    goto LABEL_12;
  }
  char v20 = sub_10023215C(*(void *)&v10[*(int *)(v4 + 24)], *(void *)&v7[*(int *)(v4 + 24)]);
  sub_100232D70((uint64_t)v7, type metadata accessor for TargetTracks);
  sub_100232D70((uint64_t)v10, type metadata accessor for TargetTracks);
  uint64_t result = sub_10000950C((uint64_t)v14, &qword_10038B448);
  if (v20) {
    return result;
  }
LABEL_14:
  if (v17(a1, 1, v4) == 1)
  {
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000FD84(v21, (uint64_t)qword_1003A9988);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v22, v23)) {
      goto LABEL_24;
    }
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    uint64_t v25 = "targetTracks changed from: nil to:";
  }
  else
  {
    if (qword_10037DD90 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000FD84(v26, (uint64_t)qword_1003A9988);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v22, v23)) {
      goto LABEL_24;
    }
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    uint64_t v25 = "targetTracks changed to:";
  }
  _os_log_impl((void *)&_mh_execute_header, v22, v23, v25, v24, 2u);
  swift_slowDealloc();
LABEL_24:

  sub_10022B768();
  uint64_t result = sub_1002292C8();
  if (*(void *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 41) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

void sub_10022B768()
{
  uint64_t v1 = type metadata accessor for TargetTracks.TimePoint(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v71 = v1;
  uint64_t v72 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v66 = (char *)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v74 = (uint64_t)v65 - v5;
  uint64_t v6 = sub_100004010(&qword_10038B448);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TargetTracks(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v65 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v65 - v17;
  uint64_t v19 = v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
  swift_beginAccess();
  sub_10000D2A0(v19, (uint64_t)v8, &qword_10038B448);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000950C((uint64_t)v8, &qword_10038B448);
    if (qword_10037DD90 == -1)
    {
LABEL_3:
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000FD84(v20, (uint64_t)qword_1003A9988);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "nil", v23, 2u);
        swift_slowDealloc();
      }

      return;
    }
LABEL_42:
    swift_once();
    goto LABEL_3;
  }
  sub_100233C38((uint64_t)v8, (uint64_t)v18, type metadata accessor for TargetTracks);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = sub_10000FD84(v24, (uint64_t)qword_1003A9988);
  sub_100232D08((uint64_t)v18, (uint64_t)v16, type metadata accessor for TargetTracks);
  sub_100232D08((uint64_t)v18, (uint64_t)v13, type metadata accessor for TargetTracks);
  uint64_t v75 = v25;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  int v28 = v27;
  BOOL v29 = os_log_type_enabled(v26, v27);
  v65[0] = v18;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    *(void *)&long long v77 = swift_slowAlloc();
    uint64_t v79 = v77;
    *(_DWORD *)uint64_t v30 = 136446466;
    type metadata accessor for Date();
    sub_1002340A0(&qword_100380430, (void (*)(uint64_t))&type metadata accessor for Date);
    LODWORD(v76) = v28;
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v78 = sub_1001B3178(v31, v32, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100232D70((uint64_t)v16, type metadata accessor for TargetTracks);
    *(_WORD *)(v30 + 12) = 2082;
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v78 = sub_1001B3178(v33, v34, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100232D70((uint64_t)v13, type metadata accessor for TargetTracks);
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v76, "  validFrom: %{public}s, expiresAt: %{public}s, tracks: [", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v18 = (char *)v65[0];
    swift_slowDealloc();
  }
  else
  {
    sub_100232D70((uint64_t)v16, type metadata accessor for TargetTracks);
    sub_100232D70((uint64_t)v13, type metadata accessor for TargetTracks);
  }

  uint64_t v35 = (uint64_t)v66;
  uint64_t v36 = *(void *)&v18[*(int *)(v9 + 24)];
  uint64_t v68 = *(void *)(v36 + 16);
  if (v68)
  {
    uint64_t v69 = v36 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    uint64_t v37 = swift_bridgeObjectRetain();
    unint64_t v38 = 0;
    *(void *)&long long v39 = 136446210;
    long long v76 = v39;
    v65[1] = (char *)&type metadata for Any + 8;
    long long v77 = xmmword_1002B4DF0;
    uint64_t v67 = v37;
    while (v38 < *(void *)(v37 + 16))
    {
      uint64_t v40 = *(void *)(v72 + 72);
      unint64_t v73 = v38;
      uint64_t v41 = v69 + v40 * v38;
      uint64_t v42 = v74;
      sub_100232D08(v41, v74, type metadata accessor for TargetTracks.TimePoint);
      sub_100232D08(v42, v35, type metadata accessor for TargetTracks.TimePoint);
      unint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = v76;
        type metadata accessor for Date();
        sub_1002340A0(&qword_100380430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v45 + 4) = sub_1001B3178(v46, v47, &v79);
        swift_bridgeObjectRelease();
        sub_100232D70(v35, type metadata accessor for TargetTracks.TimePoint);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "    at: %{public}s, targets:", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100232D70(v35, type metadata accessor for TargetTracks.TimePoint);
      }

      uint64_t v48 = *(void *)(*(void *)(v74 + *(int *)(v71 + 20)) + 16);
      if (v48)
      {
        uint64_t v70 = swift_bridgeObjectRetain();
        Swift::String v49 = (double *)(v70 + 48);
        while (1)
        {
          uint64_t v50 = *((void *)v49 - 2);
          double v52 = *(v49 - 1);
          double v51 = *v49;
          sub_100004010(&qword_100380030);
          uint64_t v53 = swift_allocObject();
          *(_OWORD *)(v53 + 16) = v77;
          *(void *)(v53 + 56) = &type metadata for Int64;
          *(void *)(v53 + 64) = &protocol witness table for Int64;
          *(void *)(v53 + 32) = v50;
          double v54 = v52 * 57.2957795;
          if ((~COERCE__INT64(v52 * 57.2957795) & 0x7FF0000000000000) == 0) {
            break;
          }
          if (v54 <= -9.22337204e18) {
            goto LABEL_36;
          }
          if (v54 >= 9.22337204e18) {
            goto LABEL_37;
          }
          *(void *)(v53 + 96) = &type metadata for Int;
          *(void *)(v53 + 104) = &protocol witness table for Int;
          *(void *)(v53 + 72) = (uint64_t)v54;
          double v55 = v51 * 57.2957795;
          if ((~COERCE__INT64(v51 * 57.2957795) & 0x7FF0000000000000) == 0) {
            goto LABEL_38;
          }
          if (v55 <= -9.22337204e18) {
            goto LABEL_39;
          }
          if (v55 >= 9.22337204e18) {
            goto LABEL_40;
          }
          *(void *)(v53 + 136) = &type metadata for Int;
          *(void *)(v53 + 144) = &protocol witness table for Int;
          *(void *)(v53 + 112) = (uint64_t)v55;
          uint64_t v56 = String.init(format:_:)();
          unint64_t v58 = v57;
          swift_bridgeObjectRetain();
          uint64_t v59 = Logger.logObject.getter();
          os_log_type_t v60 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v59, v60))
          {
            uint64_t v61 = swift_slowAlloc();
            uint64_t v79 = swift_slowAlloc();
            *(_DWORD *)uint64_t v61 = v76;
            swift_bridgeObjectRetain();
            *(void *)(v61 + 4) = sub_1001B3178(v56, v58, &v79);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v59, v60, "      %{public}s,", (uint8_t *)v61, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v49 += 3;
          if (!--v48)
          {
            swift_bridgeObjectRelease();
            uint64_t v35 = (uint64_t)v66;
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        break;
      }
LABEL_14:
      unint64_t v38 = v73 + 1;
      sub_100232D70(v74, type metadata accessor for TargetTracks.TimePoint);
      uint64_t v37 = v67;
      if (v38 == v68)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = (char *)v65[0];
        goto LABEL_32;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_32:
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v64 = 0;
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "  ]", v64, 2u);
    swift_slowDealloc();
  }

  sub_100232D70((uint64_t)v18, type metadata accessor for TargetTracks);
}

uint64_t sub_10022C28C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100390E78);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100390E90);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction;
  swift_beginAccess();
  uint64_t v15 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100390E78);
  sub_10000D2A0(a1, v15, &qword_100390E78);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v13, 1, v3) != 1)
  {
    sub_10000D2A0((uint64_t)v13, (uint64_t)v9, &qword_100390E78);
    if (v16(v15, 1, v3) == 1)
    {
      uint64_t v18 = &qword_100390E90;
LABEL_19:
      sub_100232D70((uint64_t)v9, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
      goto LABEL_20;
    }
    sub_100233C38(v15, (uint64_t)v6, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
    if ((static Date.== infix(_:_:)() & 1) != 0
      && *(void *)&v9[*(int *)(v3 + 20)] == *(void *)&v6[*(int *)(v3 + 20)])
    {
      uint64_t v19 = *(int *)(v3 + 24);
      uint64_t v20 = &v9[v19];
      char v21 = v9[v19 + 24];
      os_log_type_t v22 = &v6[v19];
      char v23 = v22[24];
      if (v21)
      {
        if ((v22[24] & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        if (*(void *)v20 != *(void *)v22) {
          char v23 = 1;
        }
        if ((v23 & 1) != 0 || (static Angle.== infix(_:_:)() & 1) == 0 || (static Angle.== infix(_:_:)() & 1) == 0) {
          goto LABEL_18;
        }
      }
      sub_100232D70((uint64_t)v6, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
      sub_100232D70((uint64_t)v9, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
      return sub_10000950C((uint64_t)v13, &qword_100390E78);
    }
LABEL_18:
    sub_100232D70((uint64_t)v6, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
    uint64_t v18 = &qword_100390E78;
    goto LABEL_19;
  }
  if (v16(v15, 1, v3) == 1) {
    return sub_10000950C((uint64_t)v13, &qword_100390E78);
  }
  uint64_t v18 = &qword_100390E90;
LABEL_20:
  uint64_t result = sub_10000950C((uint64_t)v13, v18);
  if (*(void *)(v1 + 32))
  {
    *(unsigned char *)(v1 + 40) = 1;
  }
  else
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

void sub_10022C648(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004010(&qword_100390E78);
  uint64_t v8 = __chkstk_darwin(v38);
  uint64_t v40 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v37 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_100004010(&qword_100390E90);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v2 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v17[*(int *)(v15 + 56)];
  uint64_t v39 = v18;
  sub_10000D2A0(v18, (uint64_t)v17, &qword_100390E78);
  sub_10000D2A0(a1, v19, &qword_100390E78);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v17, 1, v4) != 1)
  {
    sub_10000D2A0((uint64_t)v17, (uint64_t)v13, &qword_100390E78);
    if (v20(v19, 1, v4) == 1)
    {
      char v21 = &qword_100390E90;
LABEL_18:
      sub_100232D70((uint64_t)v13, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
      goto LABEL_19;
    }
    sub_100233C38(v19, (uint64_t)v7, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
    if ((static Date.== infix(_:_:)() & 1) != 0
      && *(void *)&v13[*(int *)(v4 + 20)] == *(void *)&v7[*(int *)(v4 + 20)])
    {
      uint64_t v22 = *(int *)(v4 + 24);
      char v23 = &v13[v22];
      char v24 = v13[v22 + 24];
      uint64_t v25 = &v7[v22];
      char v26 = v25[24];
      if (v24)
      {
        if (v25[24])
        {
LABEL_11:
          sub_100232D70((uint64_t)v7, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
          sub_100232D70((uint64_t)v13, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
          goto LABEL_3;
        }
      }
      else
      {
        if (*(void *)v23 != *(void *)v25) {
          char v26 = 1;
        }
        if (v26 & 1) == 0 && (static Angle.== infix(_:_:)() & 1) != 0 && (static Angle.== infix(_:_:)()) {
          goto LABEL_11;
        }
      }
    }
    sub_100232D70((uint64_t)v7, type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
    char v21 = &qword_100390E78;
    goto LABEL_18;
  }
  if (v20(v19, 1, v4) == 1)
  {
LABEL_3:
    sub_10000950C((uint64_t)v17, &qword_100390E78);
    return;
  }
  char v21 = &qword_100390E90;
LABEL_19:
  uint64_t v27 = (uint64_t)v41;
  sub_10000950C((uint64_t)v17, v21);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9988);
  sub_10000D2A0(a1, v27, &qword_100390E78);
  swift_retain_n();
  BOOL v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v41 = (char *)swift_slowAlloc();
    unint64_t v43 = v41;
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v32 = v40;
    sub_10000D2A0(v27, v40, &qword_100390E78);
    uint64_t v33 = String.init<A>(describing:)();
    uint64_t v42 = sub_1001B3178(v33, v34, (uint64_t *)&v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v27, &qword_100390E78);
    *(_WORD *)(v31 + 12) = 2082;
    sub_10000D2A0(v39, v32, &qword_100390E78);
    uint64_t v35 = String.init<A>(describing:)();
    uint64_t v42 = sub_1001B3178(v35, v36, (uint64_t *)&v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "_skimmer changed from: %{public}s to: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v2 + 32))
    {
LABEL_23:
      *(unsigned char *)(v2 + 41) = 1;
      return;
    }
  }
  else
  {
    sub_10000950C(v27, &qword_100390E78);

    swift_release_n();
    if (*(void *)(v2 + 32)) {
      goto LABEL_23;
    }
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
}

uint64_t sub_10022CC7C()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_10038B430);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 48) = PassthroughSubject.init()();
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  *(void *)(v0 + 104) = 0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks;
  uint64_t v3 = type metadata accessor for TargetTracks(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction;
  uint64_t v5 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_release();
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  return v1;
}

uint64_t sub_10022CDDC()
{
  swift_release();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks, &qword_10038B448);
  return sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction, &qword_100390E78);
}

uint64_t sub_10022CE30()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__targetTracks, &qword_10038B448);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy23ServicePredictionsModel__skimmerPrediction, &qword_100390E78);

  return swift_deallocClassInstance();
}

uint64_t sub_10022CED4()
{
  return type metadata accessor for ServicePredictionsModel(0);
}

uint64_t type metadata accessor for ServicePredictionsModel(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_100390970);
}

void sub_10022CEFC()
{
  sub_10021B770(319, &qword_100390980, (void (*)(uint64_t))type metadata accessor for TargetTracks);
  if (v0 <= 0x3F)
  {
    sub_10021B770(319, (unint64_t *)&unk_100390988, (void (*)(uint64_t))type metadata accessor for ServicePredictionsModel.SkimmerPrediction);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for ServicePredictionsModel.SkimmerPrediction(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100390CF0);
}

uint64_t sub_10022D040()
{
  return type metadata accessor for ServicePredictionsModel.Request(0);
}

uint64_t type metadata accessor for ServicePredictionsModel.Request(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100390B10);
}

void sub_10022D068()
{
  type metadata accessor for DispatchTime();
  if (v0 <= 0x3F)
  {
    sub_10021B770(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10022D160()
{
  qword_10038F150 = 0x4092C00000000000;
}

uint64_t sub_10022D174()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ApproximateTimeIntervalFormatter()
{
  return self;
}

uint64_t initializeWithCopy for ServicePredictionsModel.RequestToken()
{
  return _swift_weakCopyInit();
}

uint64_t assignWithCopy for ServicePredictionsModel.RequestToken()
{
  return _swift_weakCopyAssign();
}

uint64_t initializeWithTake for ServicePredictionsModel.RequestToken()
{
  return _swift_weakTakeInit();
}

uint64_t assignWithTake for ServicePredictionsModel.RequestToken()
{
  return _swift_weakTakeAssign();
}

ValueMetadata *type metadata accessor for ServicePredictionsModel.RequestToken()
{
  return &type metadata for ServicePredictionsModel.RequestToken;
}

uint64_t *sub_10022D1F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    *uint64_t v9 = *v10;
    *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  }
  return a1;
}

uint64_t sub_10022D2D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10022D33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v9 + 9);
  return a1;
}

uint64_t sub_10022D3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = *(_OWORD *)((char *)v9 + 9);
  *uint64_t v8 = *v9;
  *(_OWORD *)((char *)v8 + 9) = v10;
  return a1;
}

uint64_t sub_10022D468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v9 + 9);
  return a1;
}

uint64_t sub_10022D4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v9 + 9);
  return a1;
}

uint64_t sub_10022D590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022D5A4);
}

uint64_t sub_10022D5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10022D610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022D624);
}

uint64_t sub_10022D624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10022D694()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *assignWithCopy for PartnerModel.Partners(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PartnerModel.Partners()
{
  return &type metadata for PartnerModel.Partners;
}

uint64_t initializeBufferWithCopyOfBuffer for GuidanceMessagesModel.BitsForStats(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GuidanceMessagesModel.BitsForStats()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for GuidanceMessagesModel.BitsForStats(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for GuidanceMessagesModel.BitsForStats(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidanceMessagesModel.BitsForStats(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GuidanceMessagesModel.BitsForStats(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidanceMessagesModel.BitsForStats()
{
  return &type metadata for GuidanceMessagesModel.BitsForStats;
}

unsigned char *storeEnumTagSinglePayload for GuidanceMessagesModel.HowToConnectGuidance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10022D9ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidanceMessagesModel.HowToConnectGuidance()
{
  return &type metadata for GuidanceMessagesModel.HowToConnectGuidance;
}

void *sub_10022DA24(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v28 = a3;
    BOOL v29 = a2;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(void *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = (int *)type metadata accessor for TransmissionProgress(0);
    uint64_t v13 = v12[5];
    __dst = (char *)v9 + v13;
    uint64_t v14 = &v10[v13];
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_100004010(&qword_100380418);
      memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v20 = v12[6];
    char v21 = (char *)v9 + v20;
    uint64_t v22 = &v10[v20];
    *(void *)char v21 = *(void *)v22;
    float v21[8] = v22[8];
    *(void *)((char *)v9 + v12[7]) = *(void *)&v10[v12[7]];
    *((unsigned char *)v9 + v12[8]) = v10[v12[8]];
    uint64_t v23 = *(int *)(v28 + 24);
    char v24 = *(void **)((char *)v29 + v23);
    *(void *)((char *)a1 + v23) = v24;
    id v25 = v24;
  }
  return a1;
}

void sub_10022DC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for TransmissionProgress(0) + 20);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_10022DD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v26 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v12 = v11[5];
  __dst = (char *)v8 + v12;
  uint64_t v13 = (const void *)(v9 + v12);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_100004010(&qword_100380418);
    memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v18 = v11[6];
  uint64_t v19 = (char *)v8 + v18;
  uint64_t v20 = v9 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = *(unsigned char *)(v20 + 8);
  *(void *)((char *)v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *((unsigned char *)v8 + v11[8]) = *(unsigned char *)(v9 + v11[8]);
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = *(void **)(v26 + v21);
  *(void *)(a1 + v21) = v22;
  id v23 = v22;
  return a1;
}

uint64_t sub_10022DF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v30 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v29 = a1;
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (char *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_100004010(&qword_100380418);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = v10[6];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = (uint64_t *)(v9 + v20);
  uint64_t v23 = *v22;
  float v21[8] = *((unsigned char *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  *(void *)((char *)v8 + v10[7]) = *(void *)(v9 + v10[7]);
  *((unsigned char *)v8 + v10[8]) = *(unsigned char *)(v9 + v10[8]);
  uint64_t v24 = *(int *)(a3 + 24);
  id v25 = *(void **)(v30 + v24);
  uint64_t v26 = *(void **)(v29 + v24);
  *(void *)(v29 + v24) = v25;
  id v27 = v25;

  return v29;
}

uint64_t sub_10022E1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100004010(&qword_100380418);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = v10[6];
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  *(unsigned char *)(v8 + v10[8]) = *(unsigned char *)(v9 + v10[8]);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10022E370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v28 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (char *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  id v27 = v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v27, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
      goto LABEL_9;
    }
    size_t v19 = *(void *)(*(void *)(sub_100004010(&qword_100380418) - 8) + 64);
    uint64_t v20 = v27;
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 40))(v27, v14, v15);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v27, v15);
    size_t v19 = *(void *)(*(void *)(sub_100004010(&qword_100380418) - 8) + 64);
    uint64_t v20 = v27;
  }
  memcpy(v20, v14, v19);
LABEL_9:
  uint64_t v21 = v11[6];
  uint64_t v22 = (char *)v8 + v21;
  uint64_t v23 = v9 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  unsigned char v22[8] = *(unsigned char *)(v23 + 8);
  *(void *)((char *)v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *((unsigned char *)v8 + v11[8]) = *(unsigned char *)(v9 + v11[8]);
  uint64_t v24 = *(int *)(a3 + 24);
  id v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(v28 + v24);

  return a1;
}

uint64_t sub_10022E5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022E5F0);
}

uint64_t sub_10022E5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for TransmissionProgress(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10022E704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022E718);
}

uint64_t sub_10022E718(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for TransmissionProgress(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_10022E828()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TransmissionProgress(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_10022E8FC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for TransmissionProgress(0);
    uint64_t v9 = v8[5];
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    uint64_t v31 = v13;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004010(&qword_100380418);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v8[6];
    uint64_t v17 = (char *)v4 + v16;
    int v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    *(void *)((char *)v4 + v8[7]) = *(void *)((char *)a2 + v8[7]);
    *((unsigned char *)v4 + v8[8]) = *((unsigned char *)a2 + v8[8]);
    __dsta = a3;
    uint64_t v19 = a3[5];
    uint64_t v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)((char *)a2 + v19 + 8);
    *uint64_t v20 = *(void *)((char *)a2 + v19);
    v20[1] = v22;
    uint64_t v23 = v8[5];
    uint64_t v24 = (char *)v20 + v23;
    id v25 = &v21[v23];
    swift_bridgeObjectRetain();
    if (v31(v25, 1, v11))
    {
      uint64_t v26 = sub_100004010(&qword_100380418);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
    }
    uint64_t v27 = v8[6];
    uint64_t v28 = (char *)v20 + v27;
    uint64_t v29 = &v21[v27];
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    *(void *)((char *)v20 + v8[7]) = *(void *)&v21[v8[7]];
    *((unsigned char *)v20 + v8[8]) = v21[v8[8]];
    *(void *)((char *)v4 + __dsta[6]) = *(void *)((char *)a2 + __dsta[6]);
  }
  return v4;
}

uint64_t sub_10022EBD4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for TransmissionProgress(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v9 = v8 + *(int *)(v4 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v6);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v9, v6);
  }
  return result;
}

void *sub_10022ED24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v29 = v12;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004010(&qword_100380418);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = v6[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v17 = *(int *)(a3 + 20);
  int v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *int v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = v6[5];
  uint64_t v22 = (char *)v18 + v21;
  uint64_t v23 = &v19[v21];
  swift_bridgeObjectRetain();
  if (v29(v23, 1, v10))
  {
    uint64_t v24 = sub_100004010(&qword_100380418);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v22, v23, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
  }
  uint64_t v25 = v6[6];
  uint64_t v26 = (char *)v18 + v25;
  uint64_t v27 = &v19[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)((char *)v18 + v6[7]) = *(void *)&v19[v6[7]];
  *((unsigned char *)v18 + v6[8]) = v19[v6[8]];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10022EFA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  unint64_t v34 = v11;
  int v13 = v11(v8, 1, v9);
  uint64_t v33 = v10;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004010(&qword_100380418);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
  *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)((char *)a2 + v19);
  *((void *)v20 + 1) = *(void *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[5];
  uint64_t v23 = &v20[v22];
  uint64_t v24 = &v21[v22];
  int v25 = v34(&v20[v22], 1, v9);
  int v26 = v34(v24, 1, v9);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v23, v24, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v9);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_100004010(&qword_100380418);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v23, v24, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v23, 0, 1, v9);
LABEL_13:
  uint64_t v28 = v5[6];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  *(void *)&v20[v5[7]] = *(void *)&v21[v5[7]];
  v20[v5[8]] = v21[v5[8]];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_10022F31C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v27(v9, 1, v10))
  {
    uint64_t v12 = sub_100004010(&qword_100380418);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  unsigned char v14[8] = v15[8];
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v28 = a3;
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  _OWORD *v17 = *(_OWORD *)((char *)a2 + v16);
  uint64_t v19 = v6[5];
  uint64_t v20 = (char *)v17 + v19;
  uint64_t v21 = &v18[v19];
  if (v27(&v18[v19], 1, v10))
  {
    uint64_t v22 = sub_100004010(&qword_100380418);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v21, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  uint64_t v23 = v6[6];
  uint64_t v24 = (char *)v17 + v23;
  int v25 = &v18[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  *(void *)((char *)v17 + v6[7]) = *(void *)&v18[v6[7]];
  *((unsigned char *)v17 + v6[8]) = v18[v6[8]];
  *(void *)((char *)a1 + *(int *)(v28 + 24)) = *(void *)((char *)a2 + *(int *)(v28 + 24));
  return a1;
}

void *sub_10022F590(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  unint64_t v34 = v12;
  int v14 = v12(v9, 1, v10);
  uint64_t v33 = v11;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100004010(&qword_100380418);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a2 + v19 + 8);
  *(void *)uint64_t v20 = *(void *)((char *)a2 + v19);
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v6[5];
  uint64_t v24 = &v20[v23];
  int v25 = &v21[v23];
  int v26 = v34(&v20[v23], 1, v10);
  int v27 = v34(v25, 1, v10);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v24, v25, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v10);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_100004010(&qword_100380418);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v24, v25, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v10);
LABEL_13:
  uint64_t v29 = v6[6];
  uint64_t v30 = &v20[v29];
  uint64_t v31 = &v21[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)&v20[v6[7]] = *(void *)&v21[v6[7]];
  v20[v6[8]] = v21[v6[8]];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10022F8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022F8FC);
}

uint64_t sub_10022F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransmissionProgress(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10022F968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022F97C);
}

uint64_t sub_10022F97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransmissionProgress(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10022F9EC()
{
  uint64_t result = type metadata accessor for TransmissionProgress(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceOutageModel.OutageDescription()
{
  return &type metadata for ServiceOutageModel.OutageDescription;
}

unsigned char *storeEnumTagSinglePayload for GuidanceModel.SuggestedAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10022FB64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidanceModel.SuggestedAction()
{
  return &type metadata for GuidanceModel.SuggestedAction;
}

unsigned char *storeEnumTagSinglePayload for ConnectivityModel.ConnectivityStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10022FC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectivityModel.ConnectivityStatus()
{
  return &type metadata for ConnectivityModel.ConnectivityStatus;
}

ValueMetadata *type metadata accessor for GuidanceModel.RelativeBearing()
{
  return &type metadata for GuidanceModel.RelativeBearing;
}

unint64_t sub_10022FCB4()
{
  unint64_t result = qword_100390E60;
  if (!qword_100390E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390E60);
  }
  return result;
}

unint64_t sub_10022FD0C()
{
  unint64_t result = qword_100390E68;
  if (!qword_100390E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390E68);
  }
  return result;
}

unint64_t sub_10022FD64()
{
  unint64_t result = qword_100390E70;
  if (!qword_100390E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390E70);
  }
  return result;
}

uint64_t sub_10022FDB8()
{
  sub_10023187C();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  *(_OWORD *)(v0 + 80) = xmmword_1002B3310;
  *(void *)(v0 + 96) = 0;
  *(_WORD *)(v0 + 104) = 0;
  sub_100027F90(v1, v2);
  *(unsigned char *)(v0 + 106) = 2;
  uint64_t v3 = *(unsigned __int16 *)(v0 + 107);
  if (*(_WORD *)(v0 + 107) != 2)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(_WORD *)(v0 + 107) = 2;
  sub_1002301C4(v3);
  uint64_t v4 = *(unsigned __int16 *)(v0 + 120);
  sub_10023187C();
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  *(_OWORD *)(v0 + 80) = xmmword_1002B3310;
  *(void *)(v0 + 96) = 0;
  *(_WORD *)(v0 + 104) = 0;
  sub_100027F90(v5, v6);
  if (*(unsigned char *)(v0 + 120) != 2)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(_WORD *)(v0 + 120) = 2;
  return sub_100230B4C(v4);
}

uint64_t sub_10022FF30()
{
  sub_100231BAC((void (*)(uint64_t, void, uint64_t, uint64_t))sub_100233D78, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100027F90, (uint64_t (*)(uint64_t *))sub_100230170);
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  *(_OWORD *)(v0 + 80) = xmmword_1002B3310;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 0;
  sub_100027F90(v1, v2);
  *(unsigned char *)(v0 + 105) = 2;
  uint64_t v3 = *(unsigned __int8 *)(v0 + 106);
  if (v3 != 9)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v0 + 106) = 9;
  sub_100230830(v3);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 120);
  sub_100231BAC((void (*)(uint64_t, void, uint64_t, uint64_t))sub_100233D78, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100027F90, (uint64_t (*)(uint64_t *))sub_100230170);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  *(_OWORD *)(v0 + 80) = xmmword_1002B3310;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 0;
  sub_100027F90(v5, v6);
  if (*(unsigned char *)(v0 + 120) != 9)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v0 + 120) = 9;
  return sub_1002311B8(v4);
}

uint64_t (*sub_10023011C())()
{
  return j__swift_endAccess;
}

uint64_t (*sub_100230170())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002301C4(uint64_t result)
{
  uint64_t v2 = v1;
  __int16 v3 = *(_WORD *)(v1 + 107);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
LABEL_10:
    uint64_t v7 = *(void *)(v1 + 112);
    BOOL v8 = __CFADD__(v7, 1);
    uint64_t v9 = v7 + 1;
    if (v8)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v1 + 112) = v9;
      if (qword_10037DD80 == -1)
      {
LABEL_12:
        uint64_t v10 = type metadata accessor for Logger();
        sub_10000FD84(v10, (uint64_t)qword_1003A9958);
        swift_retain_n();
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v20 = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 136446978;
          uint64_t v14 = *(void *)(v2 + 48);
          unint64_t v15 = *(void *)(v2 + 56);
          swift_bridgeObjectRetain();
          sub_1001B3178(v14, v15, &v20);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 12) = 2082;
          sub_100004010(&qword_100380298);
          uint64_t v16 = String.init<A>(describing:)();
          sub_1001B3178(v16, v17, &v20);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 22) = 2082;
          uint64_t v18 = String.init<A>(describing:)();
          sub_1001B3178(v18, v19, &v20);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 32) = 2048;
          swift_release();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s state changed from: %{public}s to: %{public}s (generation = %llu)", (uint8_t *)v13, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        return Subject<>.send()();
      }
    }
    swift_once();
    goto LABEL_12;
  }
  if (result == 2) {
    goto LABEL_10;
  }
  BOOL v4 = (v3 & 1) == 0;
  int v5 = ((v3 & 0x100) == 0) ^ ((unsigned __int16)(result & 0x100) >> 8);
  if ((result & 1) == v4 || v5 == 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100230508(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 106);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if (result != 2 && ((result & 1) == 0) != (v3 & 1))
  {
    return result;
  }
  uint64_t v4 = *(void *)(v1 + 112);
  BOOL v5 = __CFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v1 + 112) = v6;
  if (qword_10037DD80 != -1) {
LABEL_14:
  }
    swift_once();
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  swift_retain_n();
  BOOL v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446978;
    uint64_t v11 = *(void *)(v2 + 48);
    unint64_t v12 = *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    sub_1001B3178(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v13 = String.init<A>(describing:)();
    sub_1001B3178(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    uint64_t v15 = String.init<A>(describing:)();
    sub_1001B3178(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2048;
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s state changed from: %{public}s to: %{public}s (generation = %llu)", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

uint64_t sub_100230830(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 106);
  if (v3 == 9)
  {
    if (result == 9) {
      return result;
    }
  }
  else if (result != 9 && v3 == result)
  {
    return result;
  }
  uint64_t v4 = *(void *)(v1 + 112);
  BOOL v5 = __CFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v1 + 112) = v6;
  if (qword_10037DD80 != -1) {
LABEL_14:
  }
    swift_once();
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  swift_retain_n();
  BOOL v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446978;
    uint64_t v11 = *(void *)(v2 + 48);
    unint64_t v12 = *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    sub_1001B3178(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_100004010(&qword_1003802A8);
    uint64_t v13 = String.init<A>(describing:)();
    sub_1001B3178(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    uint64_t v15 = String.init<A>(describing:)();
    sub_1001B3178(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2048;
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s state changed from: %{public}s to: %{public}s (generation = %llu)", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

uint64_t sub_100230B4C(uint64_t result)
{
  uint64_t v2 = v1;
  __int16 v3 = *(_WORD *)(v1 + 120);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
LABEL_10:
    uint64_t v7 = *(void *)(v1 + 128);
    BOOL v8 = __CFADD__(v7, 1);
    uint64_t v9 = v7 + 1;
    if (v8)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v1 + 128) = v9;
      if (qword_10037DD80 == -1)
      {
LABEL_12:
        uint64_t v10 = type metadata accessor for Logger();
        sub_10000FD84(v10, (uint64_t)qword_1003A9958);
        swift_retain_n();
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v20 = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 136446978;
          uint64_t v14 = *(void *)(v2 + 48);
          unint64_t v15 = *(void *)(v2 + 56);
          swift_bridgeObjectRetain();
          sub_1001B3178(v14, v15, &v20);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 12) = 2082;
          sub_100004010(&qword_100380298);
          uint64_t v16 = String.init<A>(describing:)();
          sub_1001B3178(v16, v17, &v20);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 22) = 2082;
          uint64_t v18 = String.init<A>(describing:)();
          sub_1001B3178(v18, v19, &v20);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 32) = 2048;
          swift_release();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s (with hysteresis) state changed from: %{public}s to: %{public}s (generation = %llu)", (uint8_t *)v13, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        return Subject<>.send()();
      }
    }
    swift_once();
    goto LABEL_12;
  }
  if (result == 2) {
    goto LABEL_10;
  }
  BOOL v4 = (v3 & 1) == 0;
  int v5 = ((v3 & 0x100) == 0) ^ ((unsigned __int16)(result & 0x100) >> 8);
  if ((result & 1) == v4 || v5 == 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100230E90(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 120);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if (result != 2 && ((result & 1) == 0) != (v3 & 1))
  {
    return result;
  }
  uint64_t v4 = *(void *)(v1 + 128);
  BOOL v5 = __CFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v1 + 128) = v6;
  if (qword_10037DD80 != -1) {
LABEL_14:
  }
    swift_once();
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  swift_retain_n();
  BOOL v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446978;
    uint64_t v11 = *(void *)(v2 + 48);
    unint64_t v12 = *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    sub_1001B3178(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v13 = String.init<A>(describing:)();
    sub_1001B3178(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    uint64_t v15 = String.init<A>(describing:)();
    sub_1001B3178(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2048;
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (with hysteresis) state changed from: %{public}s to: %{public}s (generation = %llu)", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

uint64_t sub_1002311B8(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 120);
  if (v3 == 9)
  {
    if (result == 9) {
      return result;
    }
  }
  else if (result != 9 && v3 == result)
  {
    return result;
  }
  uint64_t v4 = *(void *)(v1 + 128);
  BOOL v5 = __CFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v1 + 128) = v6;
  if (qword_10037DD80 != -1) {
LABEL_14:
  }
    swift_once();
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  swift_retain_n();
  BOOL v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446978;
    uint64_t v11 = *(void *)(v2 + 48);
    unint64_t v12 = *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    sub_1001B3178(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_100004010(&qword_1003802A8);
    uint64_t v13 = String.init<A>(describing:)();
    sub_1001B3178(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    uint64_t v15 = String.init<A>(describing:)();
    sub_1001B3178(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2048;
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (with hysteresis) state changed from: %{public}s to: %{public}s (generation = %llu)", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

uint64_t sub_1002314D4(__int16 a1)
{
  char v2 = a1;
  uint64_t v4 = *(unsigned __int16 *)(v1 + 120);
  sub_10023187C();
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  *(_OWORD *)(v1 + 80) = xmmword_1002B3310;
  *(void *)(v1 + 96) = 0;
  *(_WORD *)(v1 + 104) = 0;
  sub_100027F90(v5, v6);
  __int16 v7 = *(_WORD *)(v1 + 120);
  if (v7 == 2)
  {
    if (v2 == 2) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (v2 == 2
    || (BOOL v9 = (v7 & 1) == 0, v10 = (v7 & 0x100) == 0, (a1 & 1) == v9)
    || v10 == (unsigned __int16)(a1 & 0x100) >> 8)
  {
LABEL_5:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
LABEL_6:
  *(_WORD *)(v1 + 120) = a1;
  return sub_100230B4C(v4);
}

uint64_t sub_100231600(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = *(unsigned __int8 *)(v1 + 120);
  sub_100231BAC((void (*)(uint64_t, void, uint64_t, uint64_t))sub_10023442C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100234428, (uint64_t (*)(uint64_t *))sub_100230170);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  *(_OWORD *)(v1 + 80) = xmmword_1002B3310;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  sub_100027F90(v4, v5);
  int v6 = *(unsigned __int8 *)(v1 + 120);
  if (v6 == 2)
  {
    if (v2 == 2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v2 == 2 || ((v2 & 1) == 0) == (v6 & 1))
  {
LABEL_6:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
LABEL_7:
  *(unsigned char *)(v1 + 120) = v2;
  return sub_100230E90(v3);
}

uint64_t sub_100231744(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = *(unsigned __int8 *)(v1 + 120);
  sub_100231BAC((void (*)(uint64_t, void, uint64_t, uint64_t))sub_100233D78, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100027F90, (uint64_t (*)(uint64_t *))sub_100230170);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  *(_OWORD *)(v1 + 80) = xmmword_1002B3310;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  sub_100027F90(v4, v5);
  int v6 = *(unsigned __int8 *)(v1 + 120);
  if (v6 == 9)
  {
    if (v2 == 9) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v2 == 9 || v6 != v2)
  {
LABEL_6:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
LABEL_7:
  *(unsigned char *)(v1 + 120) = v2;
  return sub_1002311B8(v3);
}

void sub_10023187C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
LABEL_7:
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000FD84(v13, (uint64_t)qword_1003A9958);
    swift_retain();
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      v20[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v16 = 136446210;
      uint64_t v17 = v1[6];
      unint64_t v18 = v1[7];
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1001B3178(v17, v18, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Deleted %{public}s hysteresis event", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    return;
  }
  swift_beginAccess();
  uint64_t v7 = v1[11];
  if (v7 != 1)
  {
    uint64_t v8 = v1[10];
    sub_100233D78(v8, v1[11]);
    swift_unknownObjectRetain();
    sub_100027F90(v8, v7);
    if (v7)
    {
      swift_unknownObjectRelease();
      BOOL v9 = sub_10023011C();
      uint64_t v12 = *(void *)(v10 + 8);
      uint64_t v11 = (void *)(v10 + 8);
      if (v12 != 1)
      {
        *uint64_t v11 = 0;
        v11[1] = 0;
        swift_unknownObjectRelease();
      }
      ((void (*)(uint64_t *, void))v9)(v20, 0);
      if (qword_10037DD80 == -1) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
}

void sub_100231BAC(void (*a1)(uint64_t, void, uint64_t, uint64_t), void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(uint64_t *))
{
  uint64_t v7 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
LABEL_7:
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000FD84(v21, (uint64_t)qword_1003A9958);
    swift_retain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446210;
      uint64_t v25 = *(void *)(v7 + 48);
      unint64_t v26 = *(void *)(v7 + 56);
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1001B3178(v25, v26, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Deleted %{public}s hysteresis event", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    return;
  }
  swift_beginAccess();
  uint64_t v13 = *(void *)(v7 + 88);
  if (v13 != 1)
  {
    uint64_t v14 = *(void *)(v7 + 96);
    uint64_t v15 = *(void *)(v7 + 80);
    uint64_t v16 = *(unsigned __int8 *)(v7 + 104);
    a1(v15, *(void *)(v7 + 88), v14, v16);
    swift_unknownObjectRetain();
    a2(v15, v13, v14, v16);
    if (v13)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = (void (*)(uint64_t *, void))a3(v28);
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v19 = (void *)(v18 + 8);
      if (v20 != 1)
      {
        *uint64_t v19 = 0;
        v19[1] = 0;
        swift_unknownObjectRelease();
      }
      v17(v28, 0);
      if (qword_10037DD80 == -1) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
}

uint64_t sub_100231EF4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100231FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceOutages.Outage(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_100232D08(a1 + v12, (uint64_t)v10, type metadata accessor for ServiceOutages.Outage);
        sub_100232D08(a2 + v12, (uint64_t)v7, type metadata accessor for ServiceOutages.Outage);
        char v15 = sub_100111208(v10, v7);
        sub_100232D70((uint64_t)v7, type metadata accessor for ServiceOutages.Outage);
        sub_100232D70((uint64_t)v10, type metadata accessor for ServiceOutages.Outage);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_10023215C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TargetTracks.TimePoint(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v12 || a1 == a2) {
    return 1;
  }
  uint64_t v31 = v8;
  uint64_t v13 = 0;
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v9 + 72);
  while (1)
  {
    uint64_t v19 = v17;
    uint64_t v20 = v17 * v13;
    uint64_t v21 = v15;
    sub_100232D08(v15 + v17 * v13, (uint64_t)v11, type metadata accessor for TargetTracks.TimePoint);
    uint64_t v22 = v16;
    sub_100232D08(v16 + v20, (uint64_t)v7, type metadata accessor for TargetTracks.TimePoint);
    if ((static Date.== infix(_:_:)() & 1) == 0) {
      break;
    }
    uint64_t v23 = *(int *)(v31 + 20);
    uint64_t v24 = *(void *)&v11[v23];
    uint64_t v25 = *(void *)&v7[v23];
    uint64_t v26 = *(void *)(v24 + 16);
    if (v26 != *(void *)(v25 + 16)) {
      break;
    }
    if (v26) {
      BOOL v27 = v24 == v25;
    }
    else {
      BOOL v27 = 1;
    }
    if (!v27)
    {
      if (*(void *)(v24 + 32) != *(void *)(v25 + 32)
        || (static Angle.== infix(_:_:)() & 1) == 0
        || (static Angle.== infix(_:_:)() & 1) == 0)
      {
        break;
      }
      uint64_t v28 = v25 + 72;
      uint64_t v29 = v24 + 72;
      while (--v26)
      {
        if (*(void *)(v29 - 16) == *(void *)(v28 - 16) && (static Angle.== infix(_:_:)() & 1) != 0)
        {
          v28 += 24;
          v29 += 24;
          if (static Angle.== infix(_:_:)()) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
    ++v13;
    sub_100232D70((uint64_t)v7, type metadata accessor for TargetTracks.TimePoint);
    sub_100232D70((uint64_t)v11, type metadata accessor for TargetTracks.TimePoint);
    uint64_t result = 1;
    uint64_t v15 = v21;
    uint64_t v16 = v22;
    uint64_t v17 = v19;
    if (v13 == v12) {
      return result;
    }
  }
LABEL_21:
  sub_100232D70((uint64_t)v7, type metadata accessor for TargetTracks.TimePoint);
  sub_100232D70((uint64_t)v11, type metadata accessor for TargetTracks.TimePoint);
  return 0;
}

uint64_t sub_100232404(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 32) != *(void *)(a2 + 32)
    || (static Angle.== infix(_:_:)() & 1) == 0
    || (static Angle.== infix(_:_:)() & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = a2 + 72;
  uint64_t v6 = a1 + 72;
  do
  {
    BOOL v7 = --v2 == 0;
    if (!v2) {
      break;
    }
    if (*(void *)(v6 - 16) != *(void *)(v5 - 16)) {
      break;
    }
    if ((static Angle.== infix(_:_:)() & 1) == 0) {
      break;
    }
    v5 += 24;
    v6 += 24;
  }
  while ((static Angle.== infix(_:_:)() & 1) != 0);
  return v7;
}

uint64_t sub_1002324E4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 4;
    uint64_t v4 = a2 + 4;
    uint64_t v5 = (void *)a1[4];
    uint64_t v6 = (void *)a2[4];
    uint64_t v7 = v5[2];
    if (v7 == v6[2])
    {
      uint64_t v8 = a1 + 5;
      uint64_t v9 = a2 + 5;
      for (uint64_t i = 1; ; ++i)
      {
        uint64_t v11 = *v9;
        Swift::Int v12 = *v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          if (v5 != v6)
          {
            if ((v5[4] != v6[4] || v5[5] != v6[5]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              goto LABEL_27;
            }
            if (v7 != 1)
            {
              if ((v5[6] != v6[6] || v5[7] != v6[7]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_27;
              }
              uint64_t v13 = v7 - 2;
              if (v13) {
                break;
              }
            }
          }
        }
LABEL_16:
        char v14 = sub_10020D388(v12, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          return 0;
        }
        if (i == v2) {
          return 1;
        }
        uint64_t v15 = 2 * i;
        uint64_t v5 = (void *)v3[2 * i];
        uint64_t v6 = (void *)v4[2 * i];
        uint64_t v7 = v5[2];
        if (v7 != v6[2]) {
          return 0;
        }
        uint64_t v8 = &v3[v15 + 1];
        uint64_t v9 = &v4[v15 + 1];
      }
      uint64_t v16 = 0;
      while (1)
      {
        BOOL v17 = v5[v16 + 8] == v6[v16 + 8] && v5[v16 + 9] == v6[v16 + 9];
        if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
        v16 += 2;
        if (!--v13) {
          goto LABEL_16;
        }
      }
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1002326EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (uint64_t i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      if (*(i - 4) != *(v3 - 4) || *((unsigned __int8 *)i - 24) != *((unsigned __int8 *)v3 - 24)) {
        return 0;
      }
      uint64_t v8 = *(i - 2);
      uint64_t v7 = *(i - 1);
      uint64_t v9 = *i;
      uint64_t v10 = *(v3 - 2);
      if (v8) {
        break;
      }
      if (v10) {
        return 0;
      }
      uint64_t v8 = 0;
LABEL_8:
      sub_1000904E0(v8);
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
    if (!v10) {
      return 0;
    }
    uint64_t v11 = *(v3 - 1);
    uint64_t v12 = *v3;
    BOOL v13 = *(void *)(v8 + 16) == *(void *)(v10 + 16) && *(void *)(v8 + 24) == *(void *)(v10 + 24);
    if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
LABEL_33:
      sub_10009049C(v8);
      sub_10009049C(v8);
LABEL_34:
      sub_10009049C(v10);
      sub_10009049C(v8);
      sub_10009049C(v10);
      swift_retain_n();
      swift_release();
LABEL_35:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000904E0(v8);
      swift_release();
      sub_1000904E0(v10);
      swift_release();
      sub_1000904E0(v8);
      return 0;
    }
    if (v9)
    {
      if (!v12) {
        goto LABEL_33;
      }
      if (v7 != v11 || v9 != v12)
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10009049C(v8);
        sub_10009049C(v8);
        sub_10009049C(v10);
        sub_10009049C(v8);
        sub_10009049C(v10);
        swift_retain_n();
        swift_release();
        if ((v15 & 1) == 0) {
          goto LABEL_35;
        }
        goto LABEL_7;
      }
      sub_10009049C(v8);
      sub_10009049C(v8);
      sub_10009049C(v10);
      sub_10009049C(v8);
      uint64_t v5 = v10;
    }
    else
    {
      sub_10009049C(v8);
      sub_10009049C(v8);
      if (v12) {
        goto LABEL_34;
      }
      sub_10009049C(v10);
      sub_10009049C(v8);
      uint64_t v5 = v10;
    }
    sub_10009049C(v5);
    swift_retain_n();
    swift_release();
LABEL_7:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000904E0(v8);
    swift_release();
    sub_1000904E0(v10);
    swift_release();
    goto LABEL_8;
  }
  return 1;
}

uint64_t sub_100232A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(a6 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v14 = PassthroughSubject.init()();
  *(_WORD *)(a6 + 104) = 512;
  *(_OWORD *)(a6 + 80) = xmmword_1002B3310;
  *(void *)(a6 + 96) = 0;
  *(unsigned char *)(a6 + 106) = a7;
  *(void *)(a6 + 112) = 0;
  *(unsigned char *)(a6 + 120) = a7;
  *(void *)(a6 + 128) = 0;
  *(void *)(a6 + 24) = v14;
  *(void *)(a6 + 32) = a1;
  *(void *)(a6 + 40) = &off_100360F18;
  *(void *)(a6 + 48) = a2;
  *(void *)(a6 + 56) = a3;
  *(void *)(a6 + 64) = a4;
  *(void *)(a6 + 72) = a5;
  return a6;
}

uint64_t sub_100232B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  if (v4 != v6 || v5 != v7)
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  BOOL v13 = *(void **)(a1 + 72);
  uint64_t v14 = *(void **)(a2 + 72);
  if (v13)
  {
    if (!v14 || (sub_100231EF4(v13, v14) & 1) == 0) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a2 + 104);
  if (!v15)
  {
    if (!v16)
    {
LABEL_25:
      Swift::Int v18 = *(void *)(a1 + 48);
      int v19 = *(unsigned __int8 *)(a1 + 64);
      uint64_t v20 = *(void *)(a2 + 48);
      int v21 = *(unsigned __int8 *)(a2 + 64);
      if (sub_10020D1A0(v18, v20)) {
        return v19 ^ v21 ^ 1u;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  if (!v16) {
    return 0;
  }
  if (*(void *)(a1 + 96) == *(void *)(a2 + 96) && v15 == v16) {
    goto LABEL_25;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v17) {
    goto LABEL_25;
  }
  return result;
}

BOOL sub_100232C58(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);
  if (*(void *)(a1 + *(int *)(v4 + 20)) != *(void *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 24);
  uint64_t v8 = a2 + v5;
  char v9 = *(unsigned char *)(v8 + 24);
  if ((v7 & 1) == 0)
  {
    if (*v6 != *(void *)v8) {
      char v9 = 1;
    }
    return (v9 & 1) == 0 && (static Angle.== infix(_:_:)() & 1) != 0 && (static Angle.== infix(_:_:)() & 1) != 0;
  }
  return (*(unsigned char *)(v8 + 24) & 1) != 0;
}

uint64_t sub_100232D08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100232D70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100232DD0()
{
  uint64_t v1 = type metadata accessor for DispatchTime();
  uint64_t v2 = *(char **)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100380788);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  char v9 = (char *)&v34 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)&v34 - v11;
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v34 - v14;
  if (!v0[10]) {
    goto LABEL_7;
  }
  uint64_t v39 = (uint64_t (*)(void))v0[10];
  unint64_t v34 = v4;
  uint64_t v35 = v13;
  unint64_t v36 = v9;
  uint64_t v37 = v0;
  uint64_t v16 = v0[11];
  uint64_t v17 = (uint64_t)v0 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
  swift_beginAccess();
  sub_10000D2A0(v17, (uint64_t)v15, &qword_100380788);
  char v9 = (char *)*((void *)v2 + 6);
  uint64_t v18 = v1;
  int v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v9)(v15, 1, v1);
  uint64_t v38 = v16;
  swift_retain();
  uint64_t v20 = sub_10000950C((uint64_t)v15, &qword_100380788);
  BOOL v21 = v19 == 1;
  uint64_t v1 = v18;
  uint64_t v22 = v2;
  if (v21) {
    goto LABEL_10;
  }
  uint64_t v2 = v34;
  static DispatchTime.now()();
  sub_10000D2A0(v17, (uint64_t)v12, &qword_100380788);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v9)(v12, 1, v1);
  if (result != 1)
  {
    unint64_t v24 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() >= v24)
    {
      uint64_t v0 = 0;
    }
    else
    {
      unint64_t v25 = DispatchTime.uptimeNanoseconds.getter();
      unint64_t v26 = DispatchTime.uptimeNanoseconds.getter();
      uint64_t v0 = (void *)(v25 - v26);
      if (v25 < v26)
      {
        __break(1u);
LABEL_7:
        v0[14] = 0;
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v2 + 7))(v9, 1, 1, v1);
        uint64_t v27 = (uint64_t)v0 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
        swift_beginAccess();
        sub_100156648((uint64_t)v9, v27, &qword_100380788);
LABEL_11:
        swift_endAccess();
        return v0[14];
      }
    }
    uint64_t v28 = (void (*)(char *, uint64_t))*((void *)v22 + 1);
    v28(v2, v1);
    uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v28)(v12, v1);
    if ((unint64_t)v0 < 0x3BAA0C40)
    {
      sub_10005BEA0((uint64_t)v39);
      uint64_t v0 = v37;
      return v0[14];
    }
LABEL_10:
    uint64_t v29 = v39;
    uint64_t v30 = v39(v20);
    uint64_t v0 = v37;
    v37[14] = v30;
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t)v36;
    static DispatchTime.now()();
    sub_10005BEA0((uint64_t)v29);
    (*((void (**)(uint64_t, void, uint64_t, uint64_t))v22 + 7))(v31, 0, 1, v1);
    uint64_t v32 = v31;
    uint64_t v33 = v35;
    sub_10000D544(v32, v35, &qword_100380788);
    swift_beginAccess();
    sub_100156648(v33, v17, &qword_100380788);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002331B8(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038D1A8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - v6;
  sub_10000D2A0(a1, (uint64_t)&v24 - v6, &qword_10038D1A8);
  uint64_t v8 = type metadata accessor for DeviceOrientationError(0);
  char v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (v9(v7, 1, v8) == 1)
  {
    sub_10000950C((uint64_t)v7, &qword_10038D1A8);
  }
  else
  {
    uint64_t v10 = sub_1001CADE0();
    unint64_t v12 = v11;
    sub_100232D70((uint64_t)v7, type metadata accessor for DeviceOrientationError);
    if (v12) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = 0;
  unint64_t v12 = 0xE000000000000000;
LABEL_5:
  sub_10000D2A0(a1, (uint64_t)v5, &qword_10038D1A8);
  if (v9(v5, 1, v8) == 1)
  {
    sub_10000950C((uint64_t)v5, &qword_10038D1A8);
  }
  else
  {
    uint64_t v13 = sub_1001CAC9C();
    unint64_t v15 = v14;
    sub_100232D70((uint64_t)v5, type metadata accessor for DeviceOrientationError);
    if (v15) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
  unint64_t v15 = 0xE000000000000000;
LABEL_9:
  uint64_t v16 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v16 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    Swift::Int v17 = sub_100265564((uint64_t)&off_10034BCF0);
    type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
    swift_allocObject();
    uint64_t v18 = sub_100222E58(v10, v12, v10, v12, v13, v15, v17, 0, 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v19 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (!v19)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    Swift::Int v20 = sub_100265564((uint64_t)&off_10034BCC8);
    type metadata accessor for GuidanceMessagesModel.NudgeMessages(0);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 112) = 0;
    uint64_t v21 = v18 + OBJC_IVAR____TtCC8SOSBuddy21GuidanceMessagesModel13NudgeMessages__lastProducedExtraDetailsAt;
    uint64_t v22 = type metadata accessor for DispatchTime();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *(void *)(v18 + 16) = v13;
    *(void *)(v18 + 24) = v15;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v15;
    *(_OWORD *)(v18 + 72) = 0u;
    *(_OWORD *)(v18 + 88) = 0u;
    *(void *)(v18 + 104) = 0;
    *(void *)(v18 + 48) = v20;
    *(void *)(v18 + 56) = 0;
    *(unsigned char *)(v18 + 64) = 1;
  }
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t *sub_1002334E0(uint64_t *result, double a2)
{
  double v2 = round(a2);
  if (v2 <= 30.0)
  {
    uint64_t v13 = *result;
    swift_bridgeObjectRetain();
    return (uint64_t *)v13;
  }
  double v3 = floor(v2 + 0.5);
  double v4 = v3 - floor(v3 / 60.0) * 60.0;
  double v5 = 0.0;
  if (v4 > 30.0) {
    double v5 = 60.0;
  }
  double v6 = floor((v3 - v4 + v5) / 60.0);
  double v7 = floor(v6 / 60.0);
  double v8 = v6 - v7 * 60.0;
  if (v8 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0 || (*(void *)&v8 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_22;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 < 9.22337204e18)
  {
    uint64_t v10 = (uint64_t)v8;
    uint64_t v11 = (uint64_t)v7;
    if ((uint64_t)v7 <= 0)
    {
      sub_100004010(&qword_100380030);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1002B3350;
      *(void *)(v14 + 56) = &type metadata for Int64;
      *(void *)(v14 + 64) = &protocol witness table for Int64;
      *(void *)(v14 + 32) = v10;
    }
    else
    {
      sub_100004010(&qword_100380030);
      uint64_t v12 = swift_allocObject();
      if (v10 <= 0)
      {
        *(_OWORD *)(v12 + 16) = xmmword_1002B3350;
        *(void *)(v12 + 56) = &type metadata for Int64;
        *(void *)(v12 + 64) = &protocol witness table for Int64;
        *(void *)(v12 + 32) = v11;
      }
      else
      {
        *(_OWORD *)(v12 + 16) = xmmword_1002B31C0;
        *(void *)(v12 + 56) = &type metadata for Int64;
        *(void *)(v12 + 64) = &protocol witness table for Int64;
        *(void *)(v12 + 32) = v11;
        *(void *)(v12 + 96) = &type metadata for Int64;
        *(void *)(v12 + 104) = &protocol witness table for Int64;
        *(void *)(v12 + 72) = v10;
      }
    }
    uint64_t v13 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    return (uint64_t *)v13;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10023370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((*(unsigned char *)(a2 + 43) & 1) == 0 && *(unsigned char *)(a2 + 42) != 1) {
    return 8;
  }
  if (*(void *)(a4 + 64) && (unint64_t)*(unsigned __int8 *)(a4 + 73) << 8 == 512) {
    return 0;
  }
  if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) & 1) != 0
    || (*(unsigned char *)(a3 + 66) & 1) != 0
    || (*(unsigned char *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24) & 1) != 0)
  {
    if (*(void *)(a5 + 56)) {
      return 6;
    }
    else {
      return 7;
    }
  }
  else
  {
    uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
    uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions);
    if (*(unsigned char *)(*(void *)(a1 + 56) + 120))
    {
      return (sub_100078E0C(0, v10) & 1) == 0;
    }
    else if (sub_100078E0C(4, v10))
    {
      return 5;
    }
    else
    {
      int v11 = sub_100078E0C(0, *(void *)(a3 + v9));
      if (a6 & 1) != 0 || (v11)
      {
        int v12 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__targetLinkSynced);
        if (v12 == 2 || (v12 & v11 & 1) == 0) {
          return 3;
        }
        else {
          return 4;
        }
      }
      else
      {
        return 2;
      }
    }
  }
}

uint64_t sub_100233838(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    unint64_t v3 = 4;
    if ((unint64_t)(v1 - 1) < 4) {
      unint64_t v3 = v1 - 1;
    }
    long long v4 = 0uLL;
    do
    {
      if ((unint64_t)(v1 - 1) > 3)
      {
        __break(1u);
        goto LABEL_10;
      }
      int v5 = *(_DWORD *)(result + 32 + 4 * v2);
      long long v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v5;
      long long v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (v3 < 3) {
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_1002338A8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    unint64_t v3 = 3;
    if ((unint64_t)(v1 - 1) < 3) {
      unint64_t v3 = v1 - 1;
    }
    long long v4 = 0uLL;
    do
    {
      if ((unint64_t)(v1 - 1) > 2)
      {
        __break(1u);
        goto LABEL_10;
      }
      int v5 = *(_DWORD *)(result + 32 + 4 * v2);
      long long v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v5;
      long long v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (v3 < 2) {
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_100233918(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a3 & 1) != 0 || (a5) {
    return 0;
  }
  v6.i64[0] = a1;
  v6.i64[1] = a2;
  float32x4_t v25 = v6;
  if (*(double *)&a4 < 0.0 || *(double *)&a4 > 6.28318531)
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A99D0);
    double v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      double v26 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)uint64_t v10 = 136446210;
      uint64_t v11 = String.init<A>(describing:)();
      sub_1001B3178(v11, v12, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unexpected target heading value %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  sub_1002338A8((uint64_t)&off_10034BE80);
  float32x4_t v13 = vmulq_f32(v25, (float32x4_t)xmmword_1002B72B0);
  int32x4_t v14 = (int32x4_t)vnegq_f32(v13);
  int8x16_t v15 = (int8x16_t)vtrn2q_s32((int32x4_t)v13, vtrn1q_s32((int32x4_t)v13, v14));
  float32x4_t v17 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v13, (int8x16_t)v14, 8uLL), *(float32x2_t *)v16.f32, 1), (float32x4_t)vextq_s8(v15, v15, 8uLL), v16.f32[0]);
  float32x4_t v18 = (float32x4_t)vrev64q_s32((int32x4_t)v13);
  v18.i32[0] = v14.i32[1];
  v18.i32[3] = v14.i32[2];
  float32x4_t v19 = vmlaq_laneq_f32(v17, v18, v16, 2);
  int32x4_t v20 = (int32x4_t)vnegq_f32(v19);
  int8x16_t v21 = (int8x16_t)vtrn2q_s32((int32x4_t)v19, vtrn1q_s32((int32x4_t)v19, v20));
  float32x4_t v22 = (float32x4_t)vrev64q_s32((int32x4_t)v19);
  v22.i32[0] = v20.i32[1];
  v22.i32[3] = v20.i32[2];
  v21.i64[0] = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v19, v25, 3), v22, v25, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v19, (int8x16_t)v20, 8uLL), *(float32x2_t *)v25.f32, 1), (float32x4_t)vextq_s8(v21, v21, 8uLL), v25.f32[0])).u64[0];
  atan2f(-*(float *)&v21.i32[1], *(float *)v21.i32);
  double v26 = *(double *)&a4;
  Angle.animatableData.getter();
  Angle.animatableData.getter();
  Angle.animatableData.setter();
  double v23 = v26;
  if (v26 < 0.0 || v26 >= 6.28318531) {
    double v23 = v26 - floor(v26 / 6.28318531) * 6.28318531;
  }
  if (v23 > 3.14159265)
  {
    double v26 = v23;
    Angle.animatableData.getter();
    Angle.animatableData.getter();
    Angle.animatableData.setter();
    double v23 = v26;
  }
  return *(void *)&v23;
}

uint64_t sub_100233C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100233CA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100233CC8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100233D00()
{
  return sub_10021B204();
}

uint64_t sub_100233D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100233D18()
{
  return swift_release();
}

uint64_t sub_100233D20(uint64_t a1)
{
  return a1;
}

uint64_t sub_100233D78(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_100233D8C()
{
  return sub_100220164();
}

uint64_t sub_100233D94()
{
  return sub_100224040();
}

uint64_t sub_100233D9C()
{
  return sub_1002257D8();
}

uint64_t sub_100233DA4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100233DDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

unint64_t sub_100233E0C()
{
  unint64_t result = qword_100390EB0;
  if (!qword_100390EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390EB0);
  }
  return result;
}

void *sub_100233E60(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100233EBC(uint64_t *a1)
{
  return sub_10020FAE0(a1);
}

void *sub_100233EC4(char *a1)
{
  return sub_10020FD38(a1);
}

uint64_t sub_100233ECC(uint64_t a1)
{
  return sub_1002100E4(a1);
}

uint64_t sub_100233ED4(uint64_t *a1)
{
  return sub_100212B50(a1);
}

uint64_t sub_100233EDC()
{
  return sub_100212C10();
}

uint64_t sub_100233EE4()
{
  return sub_10021377C();
}

uint64_t sub_100233EEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100233FD0()
{
  type metadata accessor for ServicePredictionsModel.SkimmerPrediction(0);

  return sub_100225510();
}

uint64_t sub_10023405C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100234088(uint64_t a1)
{
  return sub_1002341D0(a1, (void (*)(uint64_t))sub_10021CE8C);
}

uint64_t sub_1002340A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002340EC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002341B8(uint64_t a1)
{
  return sub_1002341D0(a1, (void (*)(uint64_t))sub_10021DCE0);
}

uint64_t sub_1002341D0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  return sub_10021DC6C(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_100234248()
{
  return sub_100226704(v0);
}

uint64_t sub_100234264()
{
  return sub_100226784(v0);
}

uint64_t sub_10023426C()
{
  return sub_10021BE20(v0);
}

unsigned char *storeEnumTagSinglePayload for GuidanceMessagesModel.StatesForStats(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100234340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuidanceMessagesModel.StatesForStats()
{
  return &type metadata for GuidanceMessagesModel.StatesForStats;
}

unint64_t sub_10023437C()
{
  unint64_t result = qword_100390FB0;
  if (!qword_100390FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390FB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutTranscriptFooterView()
{
  return &type metadata for TryOutTranscriptFooterView;
}

ValueMetadata *type metadata accessor for TryOutTranscriptMessageView()
{
  return &type metadata for TryOutTranscriptMessageView;
}

ValueMetadata *type metadata accessor for TryOutTranscriptStatusView()
{
  return &type metadata for TryOutTranscriptStatusView;
}

uint64_t sub_100234460()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10023447C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_100004010(&qword_100390FB8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  unsigned int v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = sub_100004010(&qword_100390FC0);
  __chkstk_darwin(v31);
  double v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = static VerticalAlignment.center.getter();
  sub_1002347F0((uint64_t)&v33);
  uint64_t v10 = v33;
  char v11 = v34;
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  char v12 = v37;
  uint64_t v26 = v38;
  int v25 = v39;
  long long v29 = v40;
  uint64_t v28 = v41;
  uint64_t v27 = v42;
  char v13 = v43;
  uint64_t v30 = v44;
  char v50 = 1;
  char v49 = v34;
  char v48 = v37;
  char v47 = v43;
  unsigned __int8 v46 = v45;
  uint64_t v14 = a1 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  int8x16_t v15 = &v6[*(int *)(v4 + 60)];
  int v22 = v45;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, v14, v16);
  *(void *)unsigned int v6 = v9;
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  *(_DWORD *)(v6 + 17) = *(_DWORD *)v55;
  *((_DWORD *)v6 + 5) = *(_DWORD *)&v55[3];
  *((void *)v6 + 3) = v10;
  v6[32] = v11;
  *(_DWORD *)(v6 + 33) = *(_DWORD *)v54;
  *((_DWORD *)v6 + 9) = *(_DWORD *)&v54[3];
  uint64_t v17 = v23;
  *((void *)v6 + 5) = v24;
  *((void *)v6 + 6) = v17;
  v6[56] = v12;
  LODWORD(v17) = *(_DWORD *)v53;
  *((_DWORD *)v6 + 15) = *(_DWORD *)&v53[3];
  *(_DWORD *)(v6 + 57) = v17;
  *((void *)v6 + 8) = v26;
  v6[72] = v25;
  *((_DWORD *)v6 + 19) = *(_DWORD *)&v52[3];
  *(_DWORD *)(v6 + 73) = *(_DWORD *)v52;
  *((_OWORD *)v6 + 5) = v29;
  uint64_t v18 = v27;
  *((void *)v6 + 12) = v28;
  *((void *)v6 + 13) = v18;
  v6[112] = v13;
  *((_DWORD *)v6 + 29) = *(_DWORD *)&v51[3];
  *(_DWORD *)(v6 + 113) = *(_DWORD *)v51;
  *((void *)v6 + 15) = v30;
  v6[128] = v22;
  uint64_t v33 = static Color.clear.getter();
  swift_retain();
  uint64_t v19 = AnyView.init<A>(_:)();
  sub_10000D2A0((uint64_t)v6, (uint64_t)v8, &qword_100390FB8);
  swift_release();
  *(void *)&v8[*(int *)(v31 + 36)] = v19;
  sub_10000950C((uint64_t)v6, &qword_100390FB8);
  static VerticalEdge.Set.all.getter();
  sub_100236C54();
  View.listRowSeparator(_:edges:)();
  return sub_10000950C((uint64_t)v8, &qword_100390FC0);
}

uint64_t sub_1002347F0@<X0>(uint64_t a1@<X8>)
{
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.caption.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_100033364(v2, v4, v6);
  swift_bridgeObjectRelease();
  if (qword_10037DCE0 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v12 = Text.foregroundColor(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  sub_100033364(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  char v19 = static Edge.Set.all.getter();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = v16 & 1;
  *(void *)(a1 + 40) = v18;
  *(unsigned char *)(a1 + 48) = v19;
  *(_OWORD *)(a1 + 56) = xmmword_1002C24D0;
  *(_OWORD *)(a1 + 72) = xmmword_1002C24D0;
  *(unsigned char *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 104) = 1;
  sub_100033724(v12, v14, v16 & 1);
  swift_bridgeObjectRetain();
  sub_100033364(v12, v14, v16 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002349C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10023447C(*v1, a1);
}

uint64_t sub_1002349D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_100004010(&qword_100390FE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_100004010(&qword_100390FF0);
  __chkstk_darwin(v25);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v9 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_sender);
  int v24 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage);
  uint64_t v10 = static VerticalAlignment.center.getter();
  uint64_t v35 = a1;
  BOOL v36 = (v9 & 1) != 0;
  sub_100236D18();
  sub_100236D6C();
  swift_retain();
  _ConditionalContent<>.init(storage:)();
  uint64_t v11 = v27;
  char v12 = v28;
  uint64_t v13 = sub_1001E34DC();
  uint64_t v15 = v14;
  uint64_t v27 = static Color.clear.getter();
  uint64_t v16 = AnyView.init<A>(_:)();
  uint64_t v27 = v10;
  uint64_t v28 = 0;
  char v29 = 1;
  uint64_t v30 = v11;
  char v31 = v12;
  uint64_t v32 = v13;
  uint64_t v33 = v15;
  uint64_t v34 = v16;
  static VerticalEdge.Set.all.getter();
  sub_100004010(&qword_100391008);
  sub_100236DC0();
  View.listRowSeparator(_:edges:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v8, v6, v3);
  uint64_t v17 = &v8[*(int *)(v25 + 36)];
  v17[32] = 0;
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  if (v24) {
    uint64_t v18 = 0x4028000000000000;
  }
  else {
    uint64_t v18 = 0x4000000000000000;
  }
  char v19 = static Edge.Set.all.getter();
  uint64_t v20 = v26;
  sub_10000D2A0((uint64_t)v8, v26, &qword_100390FF0);
  uint64_t v21 = v20 + *(int *)(sub_100004010(&qword_100391028) + 36);
  *(unsigned char *)uint64_t v21 = v19;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = v18;
  *(void *)(v21 + 32) = 0;
  *(unsigned char *)(v21 + 40) = 0;
  return sub_10000950C((uint64_t)v8, &qword_100390FF0);
}

uint64_t sub_100234CC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002349D0(*v1, a1);
}

void *sub_100234CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v4 = static HorizontalAlignment.trailing.getter();
  sub_100234E1C(a1, (uint64_t)__src);
  v13[296] = 0;
  memcpy(&v13[7], __src, 0x121uLL);
  v14[0] = v4;
  v14[1] = 0;
  LOBYTE(v14[2]) = 0;
  memcpy((char *)&v14[2] + 1, v13, 0x128uLL);
  char v18 = 1;
  char v17 = 1;
  char v16 = v7;
  char v15 = v9;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  memcpy((void *)(a2 + 80), v14, 0x139uLL);
  v19[0] = v4;
  v19[1] = 0;
  char v20 = 0;
  memcpy(v21, v13, sizeof(v21));
  sub_100237830(v14);
  return sub_10023796C(v19);
}

uint64_t sub_100234E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = static HorizontalAlignment.trailing.getter();
  sub_100235194(a1, (uint64_t)v38);
  *(_OWORD *)((char *)&v40[7] + 7) = v38[7];
  *(_OWORD *)((char *)&v40[8] + 7) = v38[8];
  *(_OWORD *)((char *)&v40[9] + 7) = v38[9];
  *(_OWORD *)((char *)&v40[3] + 7) = v38[3];
  *(_OWORD *)((char *)&v40[4] + 7) = v38[4];
  *(_OWORD *)((char *)&v40[5] + 7) = v38[5];
  *(_OWORD *)((char *)&v40[6] + 7) = v38[6];
  *(_OWORD *)((char *)v40 + 7) = v38[0];
  *(_OWORD *)((char *)&v40[1] + 7) = v38[1];
  char v41 = 1;
  *(void *)((char *)&v40[10] + 7) = v39;
  *(_OWORD *)((char *)&v40[2] + 7) = v38[2];
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status)
    && *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_status) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      uint64_t v23 = 0;
      uint64_t v14 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v11 = 0;
      uint64_t v10 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      char v15 = 0;
      goto LABEL_7;
    }
  }
  uint64_t v23 = static HorizontalAlignment.leading.getter();
  sub_10023535C((uint64_t)&v27);
  uint64_t v5 = v27;
  uint64_t v6 = v28;
  uint64_t v7 = v29;
  uint64_t v8 = *(void *)((char *)&v30 + 7);
  uint64_t v9 = HIBYTE(v30);
  uint64_t v11 = *(void *)&v31[7];
  uint64_t v10 = *(void *)&v31[15];
  uint64_t v12 = *(void *)&v31[23];
  uint64_t v13 = *(void *)&v31[31];
  uint64_t v14 = 1;
  char v15 = v31[39];
LABEL_7:
  *(_OWORD *)&v26[113] = v40[7];
  *(_OWORD *)&v26[129] = v40[8];
  *(_OWORD *)&v26[145] = v40[9];
  *(_OWORD *)&v26[160] = *(_OWORD *)((char *)&v40[9] + 15);
  *(_OWORD *)&v26[49] = v40[3];
  *(_OWORD *)&v26[65] = v40[4];
  *(_OWORD *)&v26[81] = v40[5];
  *(_OWORD *)&v26[97] = v40[6];
  *(_OWORD *)&v26[1] = v40[0];
  long long v25 = (unint64_t)v24;
  v26[0] = 1;
  *(_OWORD *)&v26[17] = v40[1];
  *(_OWORD *)&v26[33] = v40[2];
  long long v16 = *(_OWORD *)&v26[128];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v26[112];
  *(_OWORD *)(a2 + 144) = v16;
  long long v17 = *(_OWORD *)&v26[160];
  *(_OWORD *)(a2 + 160) = *(_OWORD *)&v26[144];
  *(_OWORD *)(a2 + 176) = v17;
  long long v18 = *(_OWORD *)&v26[64];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v26[48];
  *(_OWORD *)(a2 + 80) = v18;
  long long v19 = *(_OWORD *)&v26[96];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v26[80];
  *(_OWORD *)(a2 + 112) = v19;
  long long v20 = *(_OWORD *)v26;
  *(_OWORD *)a2 = v25;
  *(_OWORD *)(a2 + 16) = v20;
  long long v21 = *(_OWORD *)&v26[32];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v26[16];
  *(_OWORD *)(a2 + 48) = v21;
  *(void *)(a2 + 192) = v23;
  *(void *)(a2 + 200) = 0;
  *(void *)(a2 + 208) = v14;
  *(void *)(a2 + 216) = v5;
  *(void *)(a2 + 224) = v6;
  *(void *)(a2 + 232) = v7;
  *(void *)(a2 + 240) = v8;
  *(void *)(a2 + 248) = v9;
  *(void *)(a2 + 256) = v11;
  *(void *)(a2 + 264) = v10;
  *(void *)(a2 + 272) = v12;
  *(void *)(a2 + 280) = v13;
  *(unsigned char *)(a2 + 288) = v15;
  sub_100237AAC((uint64_t)&v25);
  sub_100237920(v23, 0, v14, v5, v6, v7, v8);
  sub_100237A60(v23, 0, v14, v5, v6, v7, v8);
  long long v35 = v40[7];
  long long v36 = v40[8];
  *(_OWORD *)char v37 = v40[9];
  *(_OWORD *)&v37[15] = *(_OWORD *)((char *)&v40[9] + 15);
  *(_OWORD *)&v31[32] = v40[3];
  long long v32 = v40[4];
  long long v33 = v40[5];
  long long v34 = v40[6];
  long long v30 = v40[0];
  *(_OWORD *)char v31 = v40[1];
  uint64_t v27 = v24;
  uint64_t v28 = 0;
  unsigned __int8 v29 = 1;
  *(_OWORD *)&v31[16] = v40[2];
  return sub_100237B20((uint64_t)&v27);
}

double sub_100235194@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content);
  int v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content + 32);
  if (v5 == 1) {
    uint64_t v6 = static HorizontalAlignment.leading.getter();
  }
  else {
    uint64_t v6 = static HorizontalAlignment.trailing.getter();
  }
  uint64_t v7 = v4[1];
  uint64_t v19 = *v4;
  uint64_t v20 = v6;
  uint64_t v8 = v4[2];
  uint64_t v9 = v4[3];
  uint64_t v18 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v16 = static Edge.Set.all.getter();
  uint64_t v17 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_10037DCD0 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1003A9868;
  swift_retain();
  char v12 = static Edge.Set.all.getter();
  char v13 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage);
  uint64_t v14 = static HorizontalAlignment.trailing.getter();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v9;
  *(unsigned char *)(a2 + 56) = v5;
  *(unsigned char *)(a2 + 64) = v16;
  *(_OWORD *)(a2 + 72) = xmmword_1002C24E0;
  double result = 7.0;
  *(_OWORD *)(a2 + 88) = xmmword_1002C24F0;
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = KeyPath;
  *(void *)(a2 + 120) = v17;
  *(void *)(a2 + 128) = v11;
  *(unsigned char *)(a2 + 136) = v12;
  *(unsigned char *)(a2 + 137) = 1;
  *(unsigned char *)(a2 + 138) = v13;
  *(_WORD *)(a2 + 139) = 256;
  *(void *)(a2 + 144) = v14;
  *(void *)(a2 + 152) = sub_100235334;
  *(void *)(a2 + 160) = 0;
  return result;
}

uint64_t sub_100235334()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10023535C@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v28._object = (void *)0x80000001002D5530;
  v3._uint64_t countAndFlagsBits = 1953391955;
  v3._object = (void *)0xE400000000000000;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD000000000000029;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v28);

  sub_100033310();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.caption.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  sub_100033364(v5, v7, v9);
  swift_bridgeObjectRelease();
  if (qword_10037DCE0 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v15 = Text.foregroundColor(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  sub_100033364(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  char v22 = static Edge.Set.all.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v19 & 1;
  *(void *)(a1 + 24) = v21;
  *(unsigned char *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v26;
  *(void *)(a1 + 64) = v27;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

void *sub_100235560@<X0>(uint64_t a1@<X8>)
{
  return sub_100234CD0(*v1, a1);
}

void *sub_100235568@<X0>(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 32))
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v22 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    static Font.body.getter();
    Font.bold()();
    swift_release();
    uint64_t v105 = Text.font(_:)();
    uint64_t v107 = v27;
    char v29 = v28;
    uint64_t v108 = v30;
    swift_release();
    char v120 = v29 & 1;
    sub_100033364(v22, v24, v26);
    swift_bridgeObjectRelease();
    char v94 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v39 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v41 = v40;
    char v43 = v42 & 1;
    static Font.body.getter();
    Font.bold()();
    swift_release();
    uint64_t v44 = Text.font(_:)();
    uint64_t v101 = v45;
    uint64_t v103 = v44;
    char v47 = v46;
    uint64_t v104 = v48;
    swift_release();
    char v118 = v47 & 1;
    sub_100033364(v39, v41, v43);
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v49 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    static Font.body.getter();
    uint64_t v116 = Text.font(_:)();
    uint64_t v99 = v54;
    uint64_t v100 = v55;
    char v57 = v56;
    swift_release();
    char v110 = v57 & 1;
    sub_100033364(v49, v51, v53);
    swift_bridgeObjectRelease();
    char v93 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v66 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v68 = v67;
    char v70 = v69 & 1;
    static Font.body.getter();
    Font.bold()();
    swift_release();
    uint64_t v71 = Text.font(_:)();
    uint64_t v112 = v72;
    uint64_t v114 = v71;
    char v74 = v73;
    uint64_t v95 = v75;
    swift_release();
    char v76 = v74 & 1;
    sub_100033364(v66, v68, v70);
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v77 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v79 = v78;
    char v81 = v80 & 1;
    static Font.body.getter();
    uint64_t v82 = Text.font(_:)();
    uint64_t v96 = v83;
    uint64_t v97 = v82;
    char v85 = v84;
    uint64_t v98 = v86;
    swift_release();
    sub_100033364(v77, v79, v81);
    swift_bridgeObjectRelease();
    sub_100033724(v105, v107, v120);
    swift_bridgeObjectRetain();
    sub_100033724(v103, v101, v118);
    swift_bridgeObjectRetain();
    sub_100033724(v116, v99, v110);
    swift_bridgeObjectRetain();
    sub_100033724(v114, v112, v76);
    swift_bridgeObjectRetain();
    sub_100033724(v97, v96, v85 & 1);
    swift_bridgeObjectRetain();
    sub_100033724(v105, v107, v120);
    swift_bridgeObjectRetain();
    sub_100033724(v103, v101, v118);
    swift_bridgeObjectRetain();
    sub_100033724(v116, v99, v110);
    swift_bridgeObjectRetain();
    sub_100033724(v114, v112, v76);
    swift_bridgeObjectRetain();
    sub_100033724(v97, v96, v85 & 1);
    swift_bridgeObjectRetain();
    sub_100033364(v97, v96, v85 & 1);
    swift_bridgeObjectRelease();
    sub_100033364(v114, v112, v76);
    swift_bridgeObjectRelease();
    sub_100033364(v116, v99, v110);
    swift_bridgeObjectRelease();
    sub_100033364(v103, v101, v118);
    swift_bridgeObjectRelease();
    sub_100033364(v105, v107, v120);
    swift_bridgeObjectRelease();
    uint64_t v131 = v105;
    uint64_t v132 = v107;
    LOBYTE(v133) = v120;
    *(_DWORD *)((char *)&v133 + 1) = *(_DWORD *)v129;
    HIDWORD(v133) = *(_DWORD *)&v129[3];
    uint64_t v134 = v108;
    LOBYTE(v135) = v94;
    *(_DWORD *)((char *)&v135 + 1) = *(_DWORD *)v128;
    HIDWORD(v135) = *(_DWORD *)&v128[3];
    uint64_t v136 = v32;
    uint64_t v137 = v34;
    uint64_t v138 = v36;
    uint64_t v139 = v38;
    char v140 = 0;
    *(_DWORD *)&v141[3] = *(_DWORD *)&v127[3];
    *(_DWORD *)uint64_t v141 = *(_DWORD *)v127;
    uint64_t v142 = v103;
    uint64_t v143 = v101;
    char v144 = v118;
    *(_DWORD *)&v145[3] = *(_DWORD *)&v126[3];
    *(_DWORD *)uint64_t v145 = *(_DWORD *)v126;
    uint64_t v146 = v104;
    uint64_t v147 = v116;
    uint64_t v148 = v99;
    char v149 = v110;
    *(_DWORD *)uint64_t v150 = *(_DWORD *)v125;
    *(_DWORD *)&v150[3] = *(_DWORD *)&v125[3];
    uint64_t v151 = v100;
    char v152 = v93;
    *(_DWORD *)&v153[3] = *(_DWORD *)&v124[3];
    *(_DWORD *)double v153 = *(_DWORD *)v124;
    uint64_t v154 = v59;
    uint64_t v155 = v61;
    uint64_t v156 = v63;
    uint64_t v157 = v65;
    char v158 = 0;
    *(_DWORD *)uint64_t v159 = *(_DWORD *)v123;
    *(_DWORD *)&v159[3] = *(_DWORD *)&v123[3];
    uint64_t v160 = v114;
    uint64_t v161 = v112;
    char v162 = v76;
    *(_DWORD *)uint64_t v163 = *(_DWORD *)v122;
    *(_DWORD *)&v163[3] = *(_DWORD *)&v122[3];
    uint64_t v164 = v95;
    uint64_t v165 = v97;
    uint64_t v166 = v96;
    char v167 = v85 & 1;
    *(_DWORD *)uint64_t v168 = *(_DWORD *)v121;
    *(_DWORD *)&v168[3] = *(_DWORD *)&v121[3];
    uint64_t v169 = v98;
    sub_100033390((uint64_t)&v131);
    sub_100237FB8((uint64_t)&v131, (uint64_t)__dst);
    sub_100004010(&qword_1003910C0);
    sub_100004010(&qword_1003910C8);
    sub_100009B18(&qword_1003910D0, &qword_1003910C0);
    sub_100009B18(&qword_1003910D8, &qword_1003910C8);
    _ConditionalContent<>.init(storage:)();
    sub_100033364(v97, v96, v85 & 1);
    swift_bridgeObjectRelease();
    sub_100033364(v114, v112, v76);
    swift_bridgeObjectRelease();
    sub_100033364(v116, v99, v110);
    swift_bridgeObjectRelease();
    sub_100033364(v103, v101, v118);
    swift_bridgeObjectRelease();
    sub_100033364(v105, v107, v120);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v4 = *(void *)(v1 + 24);
    if (v2)
    {
      __dst[0] = *(void *)v1;
      __dst[1] = v2;
      sub_100033310();
      swift_bridgeObjectRetain();
      uint64_t v5 = Text.init<A>(_:)();
      uint64_t v7 = v6;
      char v9 = v8 & 1;
      static Font.headline.getter();
      Font.bold()();
      swift_release();
      uint64_t v102 = Text.font(_:)();
      uint64_t v117 = v11;
      uint64_t v119 = v10;
      char v13 = v12;
      swift_release();
      uint64_t v115 = v13 & 1;
      sub_100033364(v5, v7, v9);
      swift_bridgeObjectRelease();
      LOBYTE(v5) = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      uint64_t v106 = v14;
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v21 = v5;
    }
    else
    {
      uint64_t v102 = 0;
      uint64_t v117 = 0;
      uint64_t v119 = 0;
      uint64_t v115 = 0;
      uint64_t v21 = 0;
      uint64_t v106 = 0;
      uint64_t v16 = 0;
      uint64_t v18 = 0;
      uint64_t v20 = 0;
    }
    __dst[0] = v3;
    __dst[1] = v4;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v87 = Text.init<A>(_:)();
    uint64_t v113 = v88;
    uint64_t v111 = v89;
    char v91 = v90 & 1;
    sub_100080908(v102, v119, v115, v117);
    sub_100033724(v87, v113, v91);
    swift_bridgeObjectRetain();
    sub_100080908(v102, v119, v115, v117);
    sub_100033724(v87, v113, v91);
    swift_bridgeObjectRetain();
    sub_100033364(v87, v113, v91);
    swift_bridgeObjectRelease();
    sub_10008094C(v102, v119, v115, v117);
    uint64_t v131 = v102;
    uint64_t v132 = v119;
    uint64_t v133 = v115;
    uint64_t v134 = v117;
    uint64_t v135 = v21;
    uint64_t v136 = v106;
    uint64_t v137 = v16;
    uint64_t v138 = v18;
    uint64_t v139 = v20;
    char v140 = 0;
    uint64_t v142 = v87;
    uint64_t v143 = v113;
    char v144 = v91;
    uint64_t v146 = v111;
    sub_100033CA0((uint64_t)&v131);
    sub_100237FB8((uint64_t)&v131, (uint64_t)__dst);
    sub_100080908(v102, v119, v115, v117);
    sub_100033724(v87, v113, v91);
    swift_bridgeObjectRetain();
    sub_100004010(&qword_1003910C0);
    sub_100004010(&qword_1003910C8);
    sub_100009B18(&qword_1003910D0, &qword_1003910C0);
    sub_100009B18(&qword_1003910D8, &qword_1003910C8);
    _ConditionalContent<>.init(storage:)();
    sub_10008094C(v102, v119, v115, v117);
    sub_10008094C(v102, v119, v115, v117);
    sub_100033364(v87, v113, v91);
    swift_bridgeObjectRelease();
    sub_100033364(v87, v113, v91);
  }
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, 0x101uLL);
  return memcpy(a1, __dst, 0x101uLL);
}

void *sub_10023623C@<X0>(void *a1@<X8>)
{
  return sub_100235568(a1);
}

uint64_t sub_100236278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  uint64_t v5 = static HorizontalAlignment.leading.getter();
  sub_1002364C4(a1, (uint64_t)v27);
  *(_OWORD *)((char *)&v29[7] + 7) = v27[7];
  *(_OWORD *)((char *)&v29[8] + 7) = v27[8];
  *(_OWORD *)((char *)&v29[9] + 7) = v27[9];
  *(_OWORD *)((char *)&v29[3] + 7) = v27[3];
  *(_OWORD *)((char *)&v29[4] + 7) = v27[4];
  *(_OWORD *)((char *)&v29[5] + 7) = v27[5];
  *(_OWORD *)((char *)&v29[6] + 7) = v27[6];
  *(_OWORD *)((char *)v29 + 7) = v27[0];
  *(_OWORD *)((char *)&v29[1] + 7) = v27[1];
  char v30 = 1;
  *(void *)((char *)&v29[10] + 7) = v28;
  *(_OWORD *)((char *)&v29[2] + 7) = v27[2];
  char v31 = 0;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  long long v32 = (unint64_t)v4;
  LOBYTE(v33) = 0;
  *((void *)&v33 + 1) = v5;
  *(void *)uint64_t v34 = 0;
  v34[8] = 1;
  long long v6 = v29[6];
  *(_OWORD *)&v34[121] = v29[7];
  long long v7 = v29[7];
  *(_OWORD *)&v34[137] = v29[8];
  long long v8 = v29[8];
  *(_OWORD *)&v34[153] = v29[9];
  *(_OWORD *)&v34[168] = *(_OWORD *)((char *)&v29[9] + 15);
  long long v9 = v29[2];
  *(_OWORD *)&v34[57] = v29[3];
  long long v10 = v29[3];
  *(_OWORD *)&v34[73] = v29[4];
  long long v11 = v29[4];
  *(_OWORD *)&v34[89] = v29[5];
  long long v12 = v29[5];
  *(_OWORD *)&v34[105] = v29[6];
  long long v13 = v29[1];
  *(_OWORD *)&v34[9] = v29[0];
  long long v14 = v29[0];
  *(_OWORD *)&v34[25] = v29[1];
  *(_OWORD *)&v34[41] = v29[2];
  long long v15 = *(_OWORD *)&v34[144];
  *(_OWORD *)(a2 + 160) = *(_OWORD *)&v34[128];
  *(_OWORD *)(a2 + 176) = v15;
  *(_OWORD *)(a2 + 192) = *(_OWORD *)&v34[160];
  long long v16 = *(_OWORD *)&v34[80];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v34[64];
  *(_OWORD *)(a2 + 112) = v16;
  long long v17 = *(_OWORD *)&v34[112];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v34[96];
  *(_OWORD *)(a2 + 144) = v17;
  long long v18 = *(_OWORD *)&v34[16];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)v34;
  *(_OWORD *)(a2 + 48) = v18;
  long long v19 = *(_OWORD *)&v34[48];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v34[32];
  *(_OWORD *)(a2 + 80) = v19;
  long long v20 = v33;
  *(_OWORD *)a2 = v32;
  *(_OWORD *)(a2 + 16) = v20;
  *(_OWORD *)(a2 + 264) = v26;
  long long v46 = v9;
  long long v45 = v13;
  long long v44 = v14;
  long long v50 = v6;
  long long v49 = v12;
  char v38 = 1;
  char v37 = v23;
  char v36 = v25;
  char v35 = 1;
  *(void *)(a2 + 208) = *(void *)&v34[176];
  *(void *)(a2 + 216) = 0;
  *(unsigned char *)(a2 + 224) = 1;
  *(void *)(a2 + 232) = v22;
  *(unsigned char *)(a2 + 240) = v23;
  *(void *)(a2 + 248) = v24;
  *(unsigned char *)(a2 + 256) = v25;
  *(void *)(a2 + 280) = 0;
  *(unsigned char *)(a2 + 288) = 1;
  v39[0] = v4;
  v39[1] = 0;
  char v40 = 0;
  uint64_t v41 = v5;
  uint64_t v42 = 0;
  char v43 = 1;
  long long v48 = v11;
  long long v47 = v10;
  *(_OWORD *)&v53[15] = *(_OWORD *)((char *)&v29[9] + 15);
  *(_OWORD *)char v53 = v29[9];
  long long v52 = v8;
  long long v51 = v7;
  sub_100237B9C((uint64_t)&v32);
  return sub_100237C10((uint64_t)v39);
}

double sub_1002364C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = static HorizontalAlignment.leading.getter();
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content + 8);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content + 24);
  uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content + 16);
  uint64_t v17 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content);
  char v15 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_content + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = static Edge.Set.all.getter();
  id v6 = [self labelColor];
  uint64_t v7 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_10037DCD8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1003A9870;
  swift_retain();
  char v10 = static Edge.Set.all.getter();
  char v11 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy27TryOutTranscriptMessageItem_lastConsecutiveMessage);
  uint64_t v12 = static HorizontalAlignment.leading.getter();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 56) = v15;
  *(unsigned char *)(a2 + 64) = v14;
  *(_OWORD *)(a2 + 72) = xmmword_1002C24F0;
  double result = 7.0;
  *(_OWORD *)(a2 + 88) = xmmword_1002C24E0;
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = KeyPath;
  *(void *)(a2 + 120) = v7;
  *(void *)(a2 + 128) = v9;
  *(unsigned char *)(a2 + 136) = v10;
  *(unsigned char *)(a2 + 137) = 0;
  *(unsigned char *)(a2 + 138) = v11;
  *(_WORD *)(a2 + 139) = 256;
  *(void *)(a2 + 144) = v12;
  *(void *)(a2 + 152) = sub_100236674;
  *(void *)(a2 + 160) = 0;
  return result;
}

uint64_t sub_100236674()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10023669C@<X0>(uint64_t a1@<X8>)
{
  return sub_100236278(*v1, a1);
}

uint64_t sub_1002366A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v20[1] = a2;
  uint64_t v3 = sub_100004010(&qword_100391030);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  id v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100391038);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = static VerticalAlignment.top.getter();
  sub_100236930(a1, (uint64_t)v21);
  *(_OWORD *)((char *)&v23[2] + 7) = v21[2];
  *(_OWORD *)((char *)&v23[1] + 7) = v21[1];
  *(_OWORD *)((char *)v23 + 7) = v21[0];
  *(_OWORD *)((char *)&v23[6] + 7) = v22[0];
  *(_OWORD *)((char *)&v23[5] + 7) = v21[5];
  char v24 = 1;
  *(_OWORD *)((char *)&v23[4] + 7) = v21[4];
  v23[7] = *(_OWORD *)((char *)v22 + 9);
  *(_OWORD *)((char *)&v23[3] + 7) = v21[3];
  long long v29 = v23[4];
  long long v30 = v23[5];
  long long v31 = v23[6];
  long long v32 = *(_OWORD *)((char *)v22 + 9);
  long long v25 = v23[0];
  long long v26 = v23[1];
  uint64_t v11 = a1 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
  uint64_t v12 = &v6[*(int *)(v4 + 60)];
  long long v27 = v23[2];
  long long v28 = v23[3];
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
  long long v14 = v30;
  *(_OWORD *)(v6 + 81) = v29;
  *(_OWORD *)(v6 + 97) = v14;
  long long v15 = v32;
  *(_OWORD *)(v6 + 113) = v31;
  *(_OWORD *)(v6 + 129) = v15;
  long long v16 = v26;
  *(_OWORD *)(v6 + 17) = v25;
  *(_OWORD *)(v6 + 33) = v16;
  long long v17 = v28;
  *(_OWORD *)(v6 + 49) = v27;
  *(void *)id v6 = v10;
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  *(_OWORD *)(v6 + 65) = v17;
  long long v20[2] = static Color.clear.getter();
  swift_retain();
  uint64_t v18 = AnyView.init<A>(_:)();
  sub_10000D2A0((uint64_t)v6, (uint64_t)v9, &qword_100391030);
  swift_release();
  *(void *)&v9[*(int *)(v7 + 36)] = v18;
  sub_10000950C((uint64_t)v6, &qword_100391030);
  static VerticalEdge.Set.all.getter();
  sub_100236E84();
  View.listRowSeparator(_:edges:)();
  return sub_10000950C((uint64_t)v9, &qword_100391038);
}

uint64_t sub_100236930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_10037F140);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = static HorizontalAlignment.center.getter();
  uint64_t v27 = Image.init(systemName:)();
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy26TryOutTranscriptFooterItem_content);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy26TryOutTranscriptFooterItem_content + 8);
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  LOBYTE(v8) = v12 & 1;
  uint64_t v13 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  static Font.system(size:weight:design:)();
  sub_10000950C((uint64_t)v6, &qword_10037F140);
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v26 = v19;
  swift_release();
  sub_100033364(v9, v11, v8);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  char v39 = 1;
  char v38 = 1;
  char v36 = 1;
  char v34 = v18 & 1;
  char v31 = 1;
  *(_DWORD *)(a2 + 9) = v29;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v29 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v37;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v37[3];
  int v21 = *(_DWORD *)v35;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v35[3];
  *(_DWORD *)(a2 + 57) = v21;
  int v22 = *(_DWORD *)v33;
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v33[3];
  *(_DWORD *)(a2 + 81) = v22;
  int v23 = *(_DWORD *)v32;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v32[3];
  *(_DWORD *)(a2 + 105) = v23;
  LOBYTE(v23) = v31;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v24 = v27;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(void *)(a2 + 40) = v24;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  *(void *)(a2 + 64) = v14;
  *(void *)(a2 + 72) = v16;
  *(unsigned char *)(a2 + 80) = v18 & 1;
  *(void *)(a2 + 88) = v26;
  *(void *)(a2 + 96) = KeyPath;
  *(unsigned char *)(a2 + 104) = 1;
  *(void *)(a2 + 112) = 0;
  *(unsigned char *)(a2 + 120) = v23;
  swift_retain();
  sub_100033724(v14, v16, v18 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100033364(v14, v16, v18 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100236C14@<X0>(uint64_t a1@<X8>)
{
  return sub_1002366A4(*v1, a1);
}

uint64_t sub_100236C1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100236C38()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100236C54()
{
  unint64_t result = qword_100390FC8;
  if (!qword_100390FC8)
  {
    sub_1000094C4(&qword_100390FC0);
    sub_100009B18(&qword_100390FD0, &qword_100390FB8);
    sub_100009B18(&qword_100390FD8, &qword_100390FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390FC8);
  }
  return result;
}

unint64_t sub_100236D18()
{
  unint64_t result = qword_100390FF8;
  if (!qword_100390FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100390FF8);
  }
  return result;
}

unint64_t sub_100236D6C()
{
  unint64_t result = qword_100391000;
  if (!qword_100391000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391000);
  }
  return result;
}

unint64_t sub_100236DC0()
{
  unint64_t result = qword_100391010;
  if (!qword_100391010)
  {
    sub_1000094C4(&qword_100391008);
    sub_100009B18(&qword_100391018, &qword_100391020);
    sub_100009B18(&qword_100390FD8, &qword_100390FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391010);
  }
  return result;
}

unint64_t sub_100236E84()
{
  unint64_t result = qword_100391040;
  if (!qword_100391040)
  {
    sub_1000094C4(&qword_100391038);
    sub_100009B18(&qword_100391048, &qword_100391030);
    sub_100009B18(&qword_100390FD8, &qword_100390FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391040);
  }
  return result;
}

uint64_t sub_100236F48(uint64_t a1, __int16 a2)
{
  if ((a2 & 0x100) != 0)
  {
    Path.addCurve(to:control1:control2:)();
    Path.addLine(to:)();
    Path.addCurve(to:control1:control2:)();
  }
  return Path.addCurve(to:control1:control2:)();
}

uint64_t sub_100237128(uint64_t a1, __int16 a2)
{
  if ((a2 & 0x100) != 0)
  {
    Path.addCurve(to:control1:control2:)();
    Path.addLine(to:)();
    Path.addCurve(to:control1:control2:)();
  }
  return Path.addCurve(to:control1:control2:)();
}

__n128 sub_100237308@<Q0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  CGRectGetWidth(*(CGRect *)&a2);
  v15.origin.CGFloat x = a2;
  v15.origin.CGFloat y = a3;
  v15.size.CGFloat width = a4;
  v15.size.CGFloat height = a5;
  CGRectGetHeight(v15);
  __chkstk_darwin(v10);
  Path.init(_:)();
  __n128 result = v12;
  *(__n128 *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 32) = v14;
  return result;
}

void (*sub_100237458(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_1000DBA20;
}

uint64_t sub_1002374C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100237F64();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10023752C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100237F64();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100237590(uint64_t a1)
{
  unint64_t v2 = sub_100237F64();

  return Shape.body.getter(a1, v2);
}

ValueMetadata *type metadata accessor for TryOutTranscriptOtherMessageView()
{
  return &type metadata for TryOutTranscriptOtherMessageView;
}

ValueMetadata *type metadata accessor for TryOutTranscriptMyMessageView()
{
  return &type metadata for TryOutTranscriptMyMessageView;
}

uint64_t sub_100237604(uint64_t a1)
{
  return sub_100237798(a1, &qword_100390FC0, (void (*)(void))sub_100236C54);
}

unint64_t sub_100237628()
{
  unint64_t result = qword_100391050;
  if (!qword_100391050)
  {
    sub_1000094C4(&qword_100391028);
    sub_1002376A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391050);
  }
  return result;
}

unint64_t sub_1002376A4()
{
  unint64_t result = qword_100391058;
  if (!qword_100391058)
  {
    sub_1000094C4(&qword_100390FF0);
    sub_1000094C4(&qword_100391008);
    sub_100236DC0();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100391060, &qword_100391068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391058);
  }
  return result;
}

uint64_t sub_100237778(uint64_t a1)
{
  return sub_100237798(a1, &qword_100391038, (void (*)(void))sub_100236E84);
}

uint64_t sub_100237798(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002377F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100237814()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100237830(void *a1)
{
  uint64_t v8 = a1[28];
  uint64_t v9 = a1[27];
  uint64_t v2 = a1[30];
  uint64_t v6 = a1[31];
  uint64_t v7 = a1[29];
  uint64_t v4 = a1[33];
  uint64_t v5 = a1[32];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100237920(v9, v8, v7, v2, v6, v5, v4);
  return a1;
}

uint64_t sub_100237920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_100033724(a4, a5, a6 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_10023796C(void *a1)
{
  uint64_t v8 = a1[28];
  uint64_t v9 = a1[27];
  uint64_t v2 = a1[30];
  uint64_t v6 = a1[31];
  uint64_t v7 = a1[29];
  uint64_t v4 = a1[33];
  uint64_t v5 = a1[32];
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100237A60(v9, v8, v7, v2, v6, v5, v4);
  return a1;
}

uint64_t sub_100237A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_100033364(a4, a5, a6 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100237AAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100237B20(uint64_t a1)
{
  return a1;
}

uint64_t sub_100237B9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100237C10(uint64_t a1)
{
  return a1;
}

uint64_t storeEnumTagSinglePayload for BubbleShape(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100237D50);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BubbleShape()
{
  return &type metadata for BubbleShape;
}

ValueMetadata *type metadata accessor for TryOutTranscriptMessageContent()
{
  return &type metadata for TryOutTranscriptMessageContent;
}

uint64_t sub_100237D98()
{
  return sub_100009B18(&qword_100391070, &qword_100391078);
}

uint64_t sub_100237DD4()
{
  return sub_100009B18(&qword_100391080, &qword_100391088);
}

uint64_t sub_100237E10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100237E2C()
{
  return sub_100009B18(&qword_100391090, &qword_100391098);
}

unint64_t sub_100237E6C()
{
  unint64_t result = qword_1003910A0;
  if (!qword_1003910A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003910A0);
  }
  return result;
}

unint64_t sub_100237EC4()
{
  unint64_t result = qword_1003910A8;
  if (!qword_1003910A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003910A8);
  }
  return result;
}

uint64_t sub_100237F18(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 49)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_100237128(a1, v2 | *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_100237F3C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 41)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_100236F48(a1, v2 | *(unsigned __int8 *)(v1 + 40));
}

unint64_t sub_100237F64()
{
  unint64_t result = qword_1003910B0;
  if (!qword_1003910B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003910B0);
  }
  return result;
}

uint64_t sub_100237FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003910B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100238024()
{
  unint64_t result = qword_1003910E0;
  if (!qword_1003910E0)
  {
    sub_1000094C4(&qword_1003910E8);
    sub_100009B18(&qword_1003910D0, &qword_1003910C0);
    sub_100009B18(&qword_1003910D8, &qword_1003910C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003910E0);
  }
  return result;
}

uint64_t destroy for ExplorerConnectionAssistantView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ExplorerConnectionAssistantView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ExplorerConnectionAssistantView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  a1[22] = a2[22];
  return a1;
}

uint64_t assignWithTake for ExplorerConnectionAssistantView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_release();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_release();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_release();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  long long v12 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v12;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerConnectionAssistantView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 184)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerConnectionAssistantView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 184) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerConnectionAssistantView()
{
  return &type metadata for ExplorerConnectionAssistantView;
}

uint64_t sub_100238578()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100383C38);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimeZone();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0[10];
  if (!v12)
  {
    type metadata accessor for PartnerModel();
    long long v20 = &qword_100380DA8;
    int v21 = type metadata accessor for PartnerModel;
LABEL_22:
    sub_1002396C4(v20, (void (*)(uint64_t))v21);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v13 = *(void *)(v12 + 56);
  uint64_t v14 = v0[4];
  if (!v13)
  {
    if (v14)
    {
LABEL_13:
      if (*(unsigned char *)(v14 + 72)) {
        return 0;
      }
      else {
        return *(void *)(v14 + 56);
      }
    }
    goto LABEL_20;
  }
  if (!v14)
  {
LABEL_20:
    type metadata accessor for GeoLocationModel();
    long long v20 = &qword_100385440;
    int v21 = type metadata accessor for GeoLocationModel;
    goto LABEL_22;
  }
  int v15 = *(unsigned __int8 *)(v14 + 48);
  if (v15 == 2 || (v15 & 1) != 0) {
    goto LABEL_13;
  }
  uint64_t v17 = v0[14];
  if (!v17)
  {
    type metadata accessor for TimeZoneModel();
    long long v20 = &qword_100385448;
    int v21 = type metadata accessor for TimeZoneModel;
    goto LABEL_22;
  }
  uint64_t v18 = v17 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone;
  swift_beginAccess();
  sub_10008E4F4(v18, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_retain();
    static TimeZone.autoupdatingCurrent.getter();
    sub_100239718((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_retain();
  }
  Date.init()();
  TimeZone.secondsFromGMT(for:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  return 0x4051800000000000;
}

uint64_t sub_100238930(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    type metadata accessor for GeoLocationModel.LocationAssertion();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    uint64_t v2 = sub_100019890(v1, 0x726373206C6C7546, 0xEB000000006E6565);
    swift_release();
    return v2;
  }
  else
  {
    type metadata accessor for GeoLocationModel();
    sub_1002396C4(&qword_100385440, (void (*)(uint64_t))type metadata accessor for GeoLocationModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void *sub_1002389EC(uint64_t a1, double *a2)
{
  double v3 = sub_10027ACA0(a2[18], a2[19], a2[20], a2[21], a2[22]);
  if (v3 == *(double *)(a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgress))
  {
LABEL_6:
    sub_100238BB4((uint64_t)v6);
    sub_10007B6B8(v6);
    return (void *)sub_10007C848((uint64_t)v6);
  }
  uint64_t result = *(void **)(a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink);
  if (result)
  {
    [result preferredFrameRateRange];
    if ((static CAFrameRateRange.== infix(_:_:)() & 1) == 0)
    {
      uint64_t v5 = a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending;
      *(double *)uint64_t v5 = v3;
      *(unsigned char *)(v5 + 8) = 0;
      sub_10007A858();
    }
    sub_10007AC0C(v3);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void *sub_100238AD0(uint64_t a1)
{
  double v3 = sub_10027ACA0(v1[18], v1[19], v1[20], v1[21], v1[22]);
  if (v3 == *(double *)(a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgress))
  {
LABEL_6:
    sub_100238BB4((uint64_t)v6);
    sub_10007B6B8(v6);
    return (void *)sub_10007C848((uint64_t)v6);
  }
  uint64_t result = *(void **)(a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__displayLink);
  if (result)
  {
    [result preferredFrameRateRange];
    if ((static CAFrameRateRange.== infix(_:_:)() & 1) == 0)
    {
      uint64_t v5 = a1 + OBJC_IVAR____TtC8SOSBuddy33ConnectionAssistantViewController__offsetRotationProgressPending;
      *(double *)uint64_t v5 = v3;
      *(unsigned char *)(v5 + 8) = 0;
      sub_10007A858();
    }
    sub_10007AC0C(v3);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100238BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[10];
  if (!v4)
  {
    type metadata accessor for PartnerModel();
    long long v51 = &qword_100380DA8;
    long long v52 = (void (*)(uint64_t))type metadata accessor for PartnerModel;
    goto LABEL_51;
  }
  uint64_t v5 = *(void *)(v4 + 56);
  if (v5)
  {
    if (*v2)
    {
      uint64_t v6 = *(void *)(v4 + 48);
      char v7 = *(unsigned char *)(*v2 + 80);
      uint64_t v8 = self;
      swift_bridgeObjectRetain();
      id v9 = [v8 mainBundle];
      v79._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
      v79._object = (void *)0x80000001002D5890;
      v10._uint64_t countAndFlagsBits = 0x6C65746153204025;
      v10._object = (void *)0xEC0000006574696CLL;
      v11.value._uint64_t countAndFlagsBits = 0x50726F7265706D45;
      v11.value._object = (void *)0xEE006E6975676E65;
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v79);

      sub_100004010(&qword_100380030);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1002B3350;
      *(void *)(v13 + 56) = &type metadata for String;
      *(void *)(v13 + 64) = sub_100023078();
      *(void *)(v13 + 32) = v6;
      *(void *)(v13 + 40) = v5;
      uint64_t v14 = String.init(format:_:)();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      uint64_t v17 = v2[12];
      if (v17)
      {
        uint64_t v77 = v14;
        uint64_t v78 = v16;
        char v76 = v7;
        if (*(void *)(v17 + 64)) {
          char v75 = sub_100078E0C(3, *(void *)(v17 + 88));
        }
        else {
          char v75 = 0;
        }
        char v40 = 0;
        char v41 = 0;
        uint64_t v42 = 0;
        char v43 = 0;
        uint64_t v44 = 0;
        long long v45 = 0;
        uint64_t v46 = 0;
        char v73 = 0;
        char v74 = 1;
        long long v47 = _swiftEmptySetSingleton;
LABEL_41:
        uint64_t result = sub_100238578();
        *(unsigned char *)a1 = v76 & 1;
        *(void *)(a1 + 8) = v47;
        *(unsigned char *)(a1 + 16) = v40;
        *(unsigned char *)(a1 + 17) = v74;
        *(unsigned char *)(a1 + 18) = v41;
        *(void *)(a1 + 24) = v77;
        *(void *)(a1 + 32) = v78;
        *(void *)(a1 + 40) = v42;
        *(void *)(a1 + 48) = v43;
        *(void *)(a1 + 56) = v44;
        *(void *)(a1 + 64) = v45;
        *(void *)(a1 + 72) = v46;
        *(unsigned char *)(a1 + 80) = v73;
        *(unsigned char *)(a1 + 81) = v75 & 1;
        *(void *)(a1 + 88) = result;
        *(void *)(a1 + 96) = v65;
        *(unsigned char *)(a1 + 104) = v66;
        return result;
      }
      goto LABEL_44;
    }
    type metadata accessor for AppPropertiesModel();
    sub_1002396C4(&qword_1003852A0, (void (*)(uint64_t))type metadata accessor for AppPropertiesModel);
    swift_bridgeObjectRetain();
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v18 = v2[12];
  if (!v18)
  {
LABEL_44:
    type metadata accessor for StewieModel();
    long long v51 = &qword_100380DA0;
    long long v52 = (void (*)(uint64_t))type metadata accessor for StewieModel;
    goto LABEL_51;
  }
  uint64_t v19 = *(void *)(v18 + 64);
  if (v19) {
    LOBYTE(v19) = *(void *)(*(void *)(v18 + 88) + 16) == 0;
  }
  uint64_t v20 = v2[16];
  if (!v20)
  {
LABEL_46:
    type metadata accessor for TryOutModel();
    long long v51 = &qword_1003827A8;
    long long v52 = (void (*)(uint64_t))type metadata accessor for TryOutModel;
    goto LABEL_51;
  }
  unsigned int v21 = *(unsigned __int16 *)(v20 + 56);
  if (v21 >> 9 > 0x7E || (v21 & 0xC000) != 0x4000 || (int v22 = *(unsigned __int8 *)(v20 + 88), v22 == 2))
  {
    if ((v19 & 1) == 0)
    {
      char v23 = 0;
      uint64_t v24 = v2[2];
      if (v24)
      {
LABEL_16:
        char v68 = *(unsigned char *)(*(void *)(v24 + 48) + 120);
        char v71 = *(unsigned char *)(v24 + 56);
        swift_retain();
        sub_10020D834();
        uint64_t v77 = v25;
        uint64_t v27 = v26;
        swift_release();
        swift_bridgeObjectRelease();
        if (v23)
        {
          uint64_t v28 = self;
          id v29 = [v28 mainBundle];
          v80._uint64_t countAndFlagsBits = 0xD000000000000056;
          v80._object = (void *)0x80000001002D57A0;
          v30._uint64_t countAndFlagsBits = 0x6D6F43206F6D6544;
          v30._object = (void *)0xED00006574656C70;
          v31._uint64_t countAndFlagsBits = 0;
          v31._object = (void *)0xE000000000000000;
          Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v80);
          uint64_t countAndFlagsBits = v32._countAndFlagsBits;
          object = v32._object;

          id v35 = [v28 mainBundle];
          v81._uint64_t countAndFlagsBits = 0xD000000000000055;
          v81._object = (void *)0x80000001002D5830;
          v36._object = (void *)0x80000001002D5800;
          v36._uint64_t countAndFlagsBits = 0xD000000000000025;
          v37._uint64_t countAndFlagsBits = 0;
          v37._object = (void *)0xE000000000000000;
          Swift::String v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v81);
          uint64_t v39 = v38._countAndFlagsBits;
          char v69 = v38._object;
        }
        else
        {
          uint64_t v49 = v2[6];
          if (!v49) {
            goto LABEL_50;
          }
          uint64_t v50 = *(void *)(v49 + 48);
          if (v50)
          {
            uint64_t countAndFlagsBits = *(void *)(v50 + 32);
            object = *(void **)(v50 + 40);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t countAndFlagsBits = 0;
            object = (void *)0xE000000000000000;
          }
          swift_retain();
          sub_10020D580();
          uint64_t v39 = v53;
          char v69 = v54;
          swift_release();
        }
        char v48 = v71;
LABEL_30:
        uint64_t v55 = *v2;
        if (!*v2)
        {
          type metadata accessor for AppPropertiesModel();
          long long v51 = &qword_1003852A0;
          long long v52 = (void (*)(uint64_t))type metadata accessor for AppPropertiesModel;
          goto LABEL_51;
        }
        char v72 = v48;
        uint64_t v56 = v2[8];
        if (!v56)
        {
          type metadata accessor for GuidanceModel(0);
          long long v51 = &qword_10037F0F8;
          long long v52 = (void (*)(uint64_t))type metadata accessor for GuidanceModel;
          goto LABEL_51;
        }
        char v57 = *(void **)(v56 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions);
        uint64_t v58 = v2[2];
        if (v58)
        {
          char v70 = object;
          if ((*(unsigned char *)(v56 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow) & 1) != 0
            || (*(unsigned char *)(v56 + 66) & 1) != 0
            || (uint64_t v59 = (uint64_t *)(v56 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing),
                (v59[3] & 1) != 0))
          {
            uint64_t v60 = 0;
            char v61 = 1;
          }
          else
          {
            char v61 = 0;
            uint64_t v60 = *v59;
          }
          uint64_t v67 = v60;
          uint64_t v42 = countAndFlagsBits;
          char v40 = v68;
          uint64_t v78 = v27;
          char v76 = *(unsigned char *)(v55 + 80);
          char v62 = *(unsigned char *)(v58 + 57);
          uint64_t v44 = v39;
          if (*(void *)(v18 + 64))
          {
            uint64_t v63 = v57;
            char v75 = sub_100078E0C(3, *(void *)(v18 + 88));
            char v57 = v63;
          }
          else
          {
            char v75 = 0;
          }
          char v74 = v62 ^ 1;
          long long v47 = v57;
          swift_bridgeObjectRetain();
          char v41 = v72;
          long long v45 = v69;
          char v43 = v70;
          char v73 = v61;
          uint64_t v46 = v67;
          goto LABEL_41;
        }
        type metadata accessor for ConnectivityModel();
        sub_1002396C4(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
        swift_bridgeObjectRetain();
        EnvironmentObject.error()();
        __break(1u);
LABEL_50:
        type metadata accessor for GuidanceMessagesModel();
        long long v51 = &qword_100381CB8;
        long long v52 = (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel;
        goto LABEL_51;
      }
      goto LABEL_26;
    }
LABEL_21:
    uint64_t v39 = 0;
    char v69 = 0;
    uint64_t countAndFlagsBits = 0;
    object = 0;
    uint64_t v77 = 0;
    uint64_t v27 = 0;
    char v68 = 9;
    char v48 = 2;
    goto LABEL_30;
  }
  if (v19) {
    goto LABEL_21;
  }
  char v23 = v22 & 1;
  uint64_t v24 = v2[2];
  if (v24) {
    goto LABEL_16;
  }
LABEL_26:
  type metadata accessor for ConnectivityModel();
  long long v51 = &qword_10037F0F0;
  long long v52 = (void (*)(uint64_t))type metadata accessor for ConnectivityModel;
LABEL_51:
  sub_1002396C4(v51, v52);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1002392EC()
{
  long long v1 = v0[9];
  long long v36 = v0[8];
  long long v37 = v1;
  long long v38 = v0[10];
  uint64_t v39 = *((void *)v0 + 22);
  long long v2 = v0[5];
  long long v32 = v0[4];
  long long v33 = v2;
  long long v3 = v0[7];
  long long v34 = v0[6];
  long long v35 = v3;
  long long v4 = v0[1];
  long long v28 = *v0;
  long long v29 = v4;
  long long v5 = v0[3];
  long long v30 = v0[2];
  long long v31 = v5;
  if (qword_10037DC78 != -1) {
    swift_once();
  }
  _OWORD v24[4] = xmmword_1003A97D0;
  void v24[5] = *(_OWORD *)&byte_1003A97E0;
  v24[6] = xmmword_1003A97F0;
  uint64_t v25 = qword_1003A9800;
  v24[0] = static ConnectionAssistantDisplayState.Metrics.fullScreen;
  v24[1] = *(_OWORD *)&qword_1003A97A0;
  _OWORD v24[2] = xmmword_1003A97B0;
  v24[3] = *(_OWORD *)&qword_1003A97C0;
  v26[0] = xmmword_10037F598;
  v26[1] = unk_10037F5A8;
  *(_OWORD *)&v27[9] = unk_10037F5F1;
  v26[4] = xmmword_10037F5D8;
  *(_OWORD *)uint64_t v27 = unk_10037F5E8;
  v26[2] = xmmword_10037F5B8;
  v26[3] = unk_10037F5C8;
  uint64_t v6 = sub_100238578();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v11 = swift_allocObject();
  long long v12 = v37;
  *(_OWORD *)(v11 + 144) = v36;
  *(_OWORD *)(v11 + 160) = v12;
  *(_OWORD *)(v11 + 176) = v38;
  *(void *)(v11 + 192) = v39;
  long long v13 = v33;
  *(_OWORD *)(v11 + 80) = v32;
  *(_OWORD *)(v11 + 96) = v13;
  long long v14 = v35;
  *(_OWORD *)(v11 + 112) = v34;
  *(_OWORD *)(v11 + 128) = v14;
  long long v15 = v29;
  *(_OWORD *)(v11 + 16) = v28;
  *(_OWORD *)(v11 + 32) = v15;
  long long v16 = v31;
  *(_OWORD *)(v11 + 48) = v30;
  *(_OWORD *)(v11 + 64) = v16;
  uint64_t v17 = swift_allocObject();
  long long v18 = v37;
  *(_OWORD *)(v17 + 144) = v36;
  *(_OWORD *)(v17 + 160) = v18;
  *(_OWORD *)(v17 + 176) = v38;
  *(void *)(v17 + 192) = v39;
  long long v19 = v33;
  *(_OWORD *)(v17 + 80) = v32;
  *(_OWORD *)(v17 + 96) = v19;
  long long v20 = v35;
  *(_OWORD *)(v17 + 112) = v34;
  *(_OWORD *)(v17 + 128) = v20;
  long long v21 = v29;
  *(_OWORD *)(v17 + 16) = v28;
  *(_OWORD *)(v17 + 32) = v21;
  long long v22 = v31;
  *(_OWORD *)(v17 + 48) = v30;
  *(_OWORD *)(v17 + 64) = v22;
  objc_allocWithZone((Class)type metadata accessor for ConnectionAssistantViewController());
  sub_100239808((uint64_t)&v28);
  sub_100239808((uint64_t)&v28);
  return sub_100079434((char *)v24, v26, v6, v8, v10, (uint64_t)sub_10023977C, v11, (uint64_t)sub_100239800, v17);
}

void *sub_100239508(uint64_t a1)
{
  return sub_100238AD0(a1);
}

uint64_t sub_100239580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100239670();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002395E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100239670();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100239648()
{
}

unint64_t sub_100239670()
{
  unint64_t result = qword_1003910F0;
  if (!qword_1003910F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003910F0);
  }
  return result;
}

uint64_t sub_1002396C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100239718(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100383C38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10023977C()
{
  return sub_100238930(v0 + 16);
}

uint64_t sub_100239788()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 200, 7);
}

void *sub_100239800(uint64_t a1)
{
  return sub_1002389EC(a1, (double *)(v1 + 16));
}

uint64_t sub_100239808(uint64_t a1)
{
  return a1;
}

unint64_t CTStewieConnectionAssistantEventType.debugDescription.getter(uint64_t a1)
{
  unint64_t result = 0x6E776F6E6B6E752ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x68636E75616C2ELL;
      break;
    case 2:
      unint64_t result = 0x747365757165722ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x746978652ELL;
      break;
    case 6:
      unint64_t result = 0x73736553646E652ELL;
      break;
    case 7:
      unint64_t result = 0x6944726566666F2ELL;
      break;
    case 8:
      unint64_t result = 0x6341726566666F2ELL;
      break;
    default:
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      unint64_t result = 0x756C61567761722ELL;
      break;
  }
  return result;
}

unint64_t sub_100239A64()
{
  return CTStewieConnectionAssistantEventType.debugDescription.getter(*v0);
}

uint64_t sub_100239A6C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

double ConnectionAssistantRendererEarthOutline.__allocating_init(device:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_WORD *)(v2 + 104) = 1;
  *(void *)(v2 + 16) = a1;
  return result;
}

uint64_t sub_100239AF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10028A640(*a1, *a2);
}

Swift::Int sub_100239AFC()
{
  return Hasher._finalize()();
}

uint64_t sub_100239B9C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100239C28()
{
  return Hasher._finalize()();
}

unint64_t sub_100239CC4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10023C9D0(*a1);
  *a2 = result;
  return result;
}

void sub_100239CF4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x746E65726170;
  if (v2 != 1)
  {
    uint64_t v5 = 0x616E6964726F6F63;
    unint64_t v4 = 0xEB00000000736574;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701667182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100239D50()
{
  uint64_t v1 = 0x746E65726170;
  if (*v0 != 1) {
    uint64_t v1 = 0x616E6964726F6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

unint64_t sub_100239DA8@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10023C9D0(a1);
  *a2 = result;
  return result;
}

void sub_100239DD0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100239DDC(uint64_t a1)
{
  unint64_t v2 = sub_10023C7A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100239E18(uint64_t a1)
{
  unint64_t v2 = sub_10023C7A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100239E54(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100004010(&qword_100391378);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[4] = 0;
  v3[5] = 0;
  v3[7] = _swiftEmptyArrayStorage;
  uint64_t v9 = a1[3];
  long long v34 = a1;
  sub_100008F88(a1, v9);
  sub_10023C7A8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v10 = (uint64_t)v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes.Shape();
    swift_deallocPartialClassInstance();
LABEL_4:
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v10);
    return (uint64_t)v3;
  }
  uint64_t v33 = v6;
  LOBYTE(v36[0]) = 0;
  v3[2] = KeyedDecodingContainer.decode(_:forKey:)();
  v3[3] = v11;
  LOBYTE(v36[0]) = 1;
  v3[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v3[5] = v12;
  swift_bridgeObjectRelease();
  char v35 = 2;
  KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
  sub_100008F88(v36, v37);
  uint64_t v14 = dispatch thunk of UnkeyedDecodingContainer.count.getter();
  if (v14 >= 0) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v14 + 1;
  }
  uint64_t v17 = v16 >> 1;
  if (v15) {
    uint64_t v17 = 0;
  }
  if (_swiftEmptyArrayStorage[2] <= v17) {
    int64_t v18 = v17;
  }
  else {
    int64_t v18 = _swiftEmptyArrayStorage[2];
  }
  long long v19 = (double *)sub_1001B2E30(0, v18, 0, _swiftEmptyArrayStorage);
  while (1)
  {
    sub_100008F88(v36, v37);
    uint64_t result = dispatch thunk of UnkeyedDecodingContainer.isAtEnd.getter();
    if (result) {
      break;
    }
    sub_1000238C4((uint64_t)v36, v37);
    dispatch thunk of UnkeyedDecodingContainer.decode(_:)();
    uint64_t v21 = v20;
    sub_1000238C4((uint64_t)v36, v37);
    dispatch thunk of UnkeyedDecodingContainer.decode(_:)();
    unint64_t v24 = *((void *)v19 + 2);
    unint64_t v23 = *((void *)v19 + 3);
    unint64_t v25 = v24 + 1;
    if (v24 >= v23 >> 1)
    {
      unint64_t v32 = v24 + 1;
      uint64_t v31 = v22;
      uint64_t v27 = (double *)sub_1001B2E30((void *)(v23 > 1), v24 + 1, 1, v19);
      unint64_t v25 = v32;
      uint64_t v22 = v31;
      long long v19 = v27;
    }
    *((void *)v19 + 2) = v25;
    uint64_t v26 = &v19[2 * v24];
    *((void *)v26 + 4) = v21;
    *((void *)v26 + 5) = v22;
  }
  uint64_t v28 = *((void *)v19 + 2);
  if (v28)
  {
    uint64_t v29 = v28 - 1;
    uint64_t v30 = v33;
    uint64_t v10 = (uint64_t)v34;
    if (v19[4] == v19[2 * v29 + 4] && v19[5] == v19[2 * v29 + 5]) {
      *((void *)v19 + 2) = v29;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v5);
    v3[6] = v19;
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v36);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10023A254(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004010(&qword_1003913D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100008F88(a1, a1[3]);
  sub_10023C7A8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v13[0] = 0;
  swift_bridgeObjectRetain();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v13[0] = 1;
    swift_bridgeObjectRetain();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    swift_bridgeObjectRelease();
    char v15 = 2;
    KeyedEncodingContainer.nestedUnkeyedContainer(forKey:)();
    uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 16);
    if (v10)
    {
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v11 = v12 + 40;
      do
      {
        sub_1000238C4((uint64_t)v13, v14);
        dispatch thunk of UnkeyedEncodingContainer.encode(_:)();
        sub_1000238C4((uint64_t)v13, v14);
        dispatch thunk of UnkeyedEncodingContainer.encode(_:)();
        v11 += 16;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v13);
  }
}

uint64_t sub_10023A4D0(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t result = (uint64_t)CGPathCreateMutable();
  uint64_t v7 = (CGPath *)result;
  uint64_t v8 = *(void *)(v2 + 48);
  unint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    double v10 = (*(double *)(v8 + 40) + 180.0) / 360.0 * a1;
    uint64_t v26 = 0x3FF0000000000000;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0x3FF0000000000000;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t result = CGMutablePathRef.move(to:transform:)();
    uint64_t v8 = *(void *)(v2 + 48);
    unint64_t v9 = *(void *)(v8 + 16);
  }
  else
  {
    double v10 = 0.0;
  }
  unint64_t v11 = v9 != 0;
  if (v9 != v11)
  {
    uint64_t v20 = 0x3FF0000000000000;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0x3FF0000000000000;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    unint64_t v12 = v9 - v11;
    if (v9 <= v11) {
      goto LABEL_22;
    }
    swift_bridgeObjectRetain();
    long long v13 = (double *)(v8 + 16 * v11 + 40);
    do
    {
      double v14 = (*v13 + 180.0) / 360.0 * a1;
      if (a1 * 0.5 <= vabdd_f64(v14, v10))
      {
        CGMutablePathRef.addLine(to:transform:)();
        CGMutablePathRef.addLine(to:transform:)();
      }
      CGMutablePathRef.addLine(to:transform:)();
      v13 += 2;
      double v10 = v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  CGPathCloseSubpath(v7);
  swift_beginAccess();
  unint64_t v15 = *(void *)(v3 + 56);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v16 = result;
    if (result) {
      goto LABEL_13;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_20;
  }
LABEL_13:
  transform.a = 1.0;
  transform.b = 0.0;
  transform.c = 0.0;
  transform.d = 1.0;
  transform.tCGFloat x = 0.0;
  transform.tCGFloat y = 0.0;
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v17;
      int64_t v18 = (const CGPath *)sub_10023A4D0(a1, a2);
      CGMutablePathRef.addPath(_:transform:)(v18, &transform);
      swift_release();
    }
    while (v16 != v17);
    goto LABEL_20;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_10023A7C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10023A814@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes.Shape();
  swift_allocObject();
  uint64_t result = sub_100239E54(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10023A874(void *a1)
{
  return sub_10023A254(a1);
}

Swift::Int sub_10023A898()
{
  return Hasher._finalize()();
}

uint64_t sub_10023A8E8()
{
  return String.hash(into:)();
}

Swift::Int sub_10023A8FC()
{
  return Hasher._finalize()();
}

uint64_t sub_10023A948@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10034BF48, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_10023A99C(void *a1@<X8>)
{
  *a1 = 0x736570616873;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_10023A9B4()
{
  return 0x736570616873;
}

uint64_t sub_10023A9C8@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10034BF80, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_10023AA20(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10023AA2C(uint64_t a1)
{
  unint64_t v2 = sub_10023D0AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10023AA68(uint64_t a1)
{
  unint64_t v2 = sub_10023D0AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10023AAA4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003913B8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  sub_10023D0AC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[1] = a2;
  sub_100004010(&qword_100391398);
  sub_10023D100(&qword_1003913C0, &qword_1003913C8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10023AC2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10023CCA8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10023AC58(void *a1)
{
  return sub_10023AAA4(a1, *v1);
}

uint64_t ConnectionAssistantRendererEarthOutline.Textures.outlineTextureBlur1.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ConnectionAssistantRendererEarthOutline.Buffers.coordinatesCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t ConnectionAssistantRendererEarthOutline.Buffers.coordinatesBuffer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ConnectionAssistantRendererEarthOutline.Textures.outlineTextureBlur2.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10023AC98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  Swift::String v3 = (void *)*a1;
  swift_beginAccess();
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return sub_100024314(v4, v5);
}

uint64_t sub_10023ACEC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = (void *)*a2;
  swift_beginAccess();
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  v6[3] = v2;
  v6[4] = v3;
  v6[5] = v4;
  v6[6] = v5;
  sub_100024314(v2, v3);
  return sub_100023BB8(v7, v8);
}

uint64_t ConnectionAssistantRendererEarthOutline.buffers.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_100024314(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t sub_10023ADF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)*a1;
  swift_beginAccess();
  uint64_t v4 = v3[7];
  uint64_t v5 = v3[8];
  uint64_t v6 = v3[9];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  return sub_10023AF64(v4);
}

uint64_t sub_10023AE48(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = (void *)*a2;
  swift_beginAccess();
  uint64_t v6 = v5[7];
  v5[7] = v2;
  v5[8] = v3;
  v5[9] = v4;
  sub_10023AF64(v2);
  return sub_10023C4B8(v6);
}

uint64_t ConnectionAssistantRendererEarthOutline.textures.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  sub_10023AF64(v1);
  return v1;
}

uint64_t ConnectionAssistantRendererEarthOutline.init(device:)(uint64_t a1)
{
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_WORD *)(v1 + 104) = 1;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_10023AF64(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t ConnectionAssistantRendererEarthOutline.loadTexturesIfNecessary(in:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v7 = sub_100004010(&qword_100391100);
  uint64_t result = __chkstk_darwin(v7 - 8);
  double v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v3 + 105)) {
    return result;
  }
  if (*(unsigned char *)(v3 + 104)) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)(v3 + 80);
  BOOL v12 = __OFSUB__(a1, v11);
  uint64_t v13 = a1 - v11;
  if (v12)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)(v3 + 88);
  if (v13 < 0)
  {
    BOOL v12 = __OFSUB__(0, v13);
    uint64_t v13 = -v13;
    if (v12) {
      goto LABEL_26;
    }
  }
  if (a1 >= 0) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = a1 + 1;
  }
  BOOL v12 = __OFSUB__(a2, v14);
  uint64_t v16 = a2 - v14;
  if (v12)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  if (v16 < 0)
  {
    BOOL v12 = __OFSUB__(0, v16);
    uint64_t v16 = -v16;
    if (v12) {
      goto LABEL_27;
    }
  }
  uint64_t v17 = v15 >> 1;
  if (a2 >= 0) {
    uint64_t v18 = a2;
  }
  else {
    uint64_t v18 = a2 + 1;
  }
  if (v18 >> 1 < v16 || v17 < v13)
  {
LABEL_20:
    if (a1)
    {
      if (a2)
      {
        *(void *)(v3 + 80) = a1;
        *(void *)(v3 + 88) = a2;
        *(double *)(v3 + 96) = a3;
        *(_WORD *)(v3 + 104) = 256;
        uint64_t v20 = *(void *)(v3 + 16);
        static TaskPriority.userInitiated.getter();
        uint64_t v21 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = 0;
        *(void *)(v22 + 24) = 0;
        *(void *)(v22 + 32) = v20;
        *(void *)(v22 + 40) = a1;
        *(void *)(v22 + 48) = a2;
        *(double *)(v22 + 56) = a3;
        *(void *)(v22 + 64) = v3;
        swift_unknownObjectRetain();
        swift_retain();
        sub_10023B870((uint64_t)v10, (uint64_t)&unk_100391110, v22);
        swift_release();
        return sub_10000950C((uint64_t)v10, &qword_100391100);
      }
    }
  }
  return result;
}

uint64_t sub_10023B184(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 96) = a8;
  *(double *)(v8 + 88) = a1;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 64) = a5;
  return _swift_task_switch(sub_10023B1B0, 0, 0);
}

uint64_t sub_10023B1B0()
{
  uint64_t v10 = v0;
  sub_10023DE40(*(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), &v5, *(double *)(v0 + 88));
  *(void *)(v0 + 104) = 0;
  *(_OWORD *)(v0 + 112) = v5;
  uint64_t v1 = v7;
  *(void *)(v0 + 128) = v6;
  *(void *)(v0 + 136) = v1;
  *(_OWORD *)(v0 + 144) = v8;
  *(void *)(v0 + 160) = v9;
  type metadata accessor for MainActor();
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10023B3AC, v3, v2);
}

uint64_t sub_10023B3AC()
{
  uint64_t v1 = v0[18];
  uint64_t v11 = v0[19];
  uint64_t v12 = v0[20];
  uint64_t v2 = v0[16];
  uint64_t v10 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[12];
  swift_release();
  *(unsigned char *)(v5 + 105) = 0;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 56);
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 64) = v3;
  *(void *)(v5 + 72) = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_10023C4B8(v6);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void *)(v5 + 32);
  *(void *)(v5 + 24) = v10;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v11;
  *(void *)(v5 + 48) = v12;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_100023BB8(v7, v8);
  return _swift_task_switch(sub_10023B4F4, 0, 0);
}

uint64_t sub_10023B4F4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10023B588()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  *(unsigned char *)(v1 + 105) = 0;
  return _swift_task_switch(sub_10023B5F8, 0, 0);
}

uint64_t sub_10023B5F8()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10023B658()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10023B6A0()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_10023B77C;
  *(void *)(v5 + 96) = v4;
  *(void *)(v5 + 88) = v3;
  *(void *)(v5 + 80) = v2;
  *(_OWORD *)(v5 + 64) = v7;
  return _swift_task_switch(sub_10023B1B0, 0, 0);
}

uint64_t sub_10023B77C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10023B870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004010(&qword_100391100);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10023D1C4(a1, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000950C((uint64_t)v8, &qword_100391100);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    _OWORD v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_10023BA5C(void *a1, unint64_t a2, double a3, double a4, CGFloat a5, double a6, double a7)
{
  double v90 = a7;
  uint64_t v98 = type metadata accessor for CGPathFillRule();
  uint64_t v13 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGColorRef GenericRGB = CGColorCreateGenericRGB(1.0, 0.0, 0.0, 1.0);
  CGColorRef v91 = CGColorCreateGenericRGB(0.0, 1.0, 0.0, 1.0);
  CGColorRef v16 = CGColorCreateGenericRGB(0.0, 0.0, 1.0, 1.0);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (v17) {
      goto LABEL_3;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_18;
  }
LABEL_3:
  if (v17 >= 1)
  {
    uint64_t v18 = 0;
    unint64_t v19 = a2 & 0xC000000000000001;
    double v20 = -a3;
    double v21 = -a4;
    unsigned int v95 = enum case for CGPathFillRule.evenOdd(_:);
    char v93 = (void (**)(char *, uint64_t))(v13 + 8);
    char v94 = (void (**)(char *, void, uint64_t))(v13 + 104);
    double v87 = v90 * 0.125;
    double v88 = v90 * 0.0625;
    double v86 = v90 * 0.25;
    CGFloat v85 = v90 * 0.5;
    uint64_t v89 = v16;
    unint64_t v96 = a2 & 0xC000000000000001;
    uint64_t v97 = v17;
    while (1)
    {
      if (v19)
      {
        if (!*(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 40)) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v22 = *(void *)(a2 + 8 * v18 + 32);
        swift_retain();
        if (!*(void *)(v22 + 40))
        {
LABEL_11:
          uint64_t v23 = (const CGPath *)sub_10023A4D0(a3, a4);
          uint64_t v24 = (CGContext *)[a1 CGContext];
          CGContextSaveGState(v24);

          uint64_t v25 = (CGContext *)[a1 CGContext];
          CGContextSetBlendMode(v25, kCGBlendModePlusLighter);

          uint64_t v26 = (CGContext *)[a1 CGContext];
          uint64_t v27 = v26;
          if (a5 == 0.0)
          {
            CGContextSetFillColorWithColor(v26, v16);

            uint64_t v28 = (CGContext *)[a1 CGContext];
            CGContextAddPath(v28, v23);

            id v29 = [a1 CGContext];
            uint64_t v30 = v98;
            (*v94)(v15, v95, v98);
            CGContextRef.fillPath(using:)();

            (*v93)(v15, v30);
            uint64_t v31 = (CGContext *)[a1 CGContext];
            CGContextTranslateCTM(v31, v20, v21);

            if (a6 != 0.0) {
              goto LABEL_13;
            }
          }
          else
          {
            CGContextTranslateCTM(v26, v20, v21);

            Swift::String v79 = (CGContext *)[a1 CGContext];
            v104.CGFloat width = a3;
            v104.CGFloat height = a4;
            CGContextSetShadowWithColor(v79, v104, a5, v16);

            Swift::String v80 = (CGContext *)[a1 CGContext];
            CGContextSetFillColorWithColor(v80, GenericRGB);

            Swift::String v81 = (CGContext *)[a1 CGContext];
            CGContextAddPath(v81, v23);

            id v82 = [a1 CGContext];
            uint64_t v83 = v98;
            (*v94)(v15, v95, v98);
            CGContextRef.fillPath(using:)();

            (*v93)(v15, v83);
            if (a6 != 0.0)
            {
LABEL_13:
              unint64_t v32 = (CGContext *)[a1 CGContext];
              v99.CGFloat width = a3;
              v99.CGFloat height = a4;
              double v33 = v21;
              double v34 = v20;
              double v35 = v88;
              long long v36 = v91;
              CGContextSetShadowWithColor(v32, v99, v88, v91);

              uint64_t v37 = (CGContext *)[a1 CGContext];
              CGFloat v38 = v35;
              double v20 = v34;
              double v21 = v33;
              CGContextSetLineWidth(v37, v38);

              uint64_t v39 = (CGContext *)[a1 CGContext];
              CGContextSetLineJoin(v39, kCGLineJoinBevel);

              char v40 = (CGContext *)[a1 CGContext];
              char v41 = GenericRGB;
              CGContextSetStrokeColorWithColor(v40, GenericRGB);

              uint64_t v42 = (CGContext *)[a1 CGContext];
              CGContextSetAlpha(v42, a6 * 0.2);

              char v43 = (CGContext *)[a1 CGContext];
              CGContextAddPath(v43, v23);

              uint64_t v44 = (CGContext *)[a1 CGContext];
              CGContextStrokePath(v44);

              long long v45 = (CGContext *)[a1 CGContext];
              v100.CGFloat width = a3;
              v100.CGFloat height = a4;
              CGFloat v46 = v87;
              CGContextSetShadowWithColor(v45, v100, v87, v36);

              long long v47 = (CGContext *)[a1 CGContext];
              CGContextSetLineWidth(v47, v46);

              char v48 = (CGContext *)[a1 CGContext];
              CGContextSetLineJoin(v48, kCGLineJoinBevel);

              uint64_t v49 = (CGContext *)[a1 CGContext];
              CGContextSetStrokeColorWithColor(v49, v41);

              uint64_t v50 = (CGContext *)[a1 CGContext];
              CGContextSetAlpha(v50, a6 * 0.2);

              long long v51 = (CGContext *)[a1 CGContext];
              CGContextAddPath(v51, v23);

              long long v52 = (CGContext *)[a1 CGContext];
              CGContextStrokePath(v52);

              uint64_t v53 = (CGContext *)[a1 CGContext];
              v101.CGFloat width = a3;
              v101.CGFloat height = a4;
              CGFloat v54 = v86;
              CGContextSetShadowWithColor(v53, v101, v86, v36);

              uint64_t v55 = (CGContext *)[a1 CGContext];
              CGContextSetLineWidth(v55, v54);

              uint64_t v56 = (CGContext *)[a1 CGContext];
              CGContextSetLineJoin(v56, kCGLineJoinBevel);

              char v57 = (CGContext *)[a1 CGContext];
              CGContextSetStrokeColorWithColor(v57, v41);

              uint64_t v58 = (CGContext *)[a1 CGContext];
              CGContextSetAlpha(v58, a6 * 0.2);

              uint64_t v59 = (CGContext *)[a1 CGContext];
              CGContextAddPath(v59, v23);

              uint64_t v60 = (CGContext *)[a1 CGContext];
              CGContextStrokePath(v60);

              char v61 = (CGContext *)[a1 CGContext];
              v102.CGFloat width = a3;
              v102.CGFloat height = a4;
              CGFloat v62 = v85;
              CGContextSetShadowWithColor(v61, v102, v85, v36);

              uint64_t v63 = (CGContext *)[a1 CGContext];
              CGContextSetLineWidth(v63, v62);

              uint64_t v64 = (CGContext *)[a1 CGContext];
              CGContextSetLineJoin(v64, kCGLineJoinBevel);

              uint64_t v65 = (CGContext *)[a1 CGContext];
              CGContextSetStrokeColorWithColor(v65, v41);

              char v66 = (CGContext *)[a1 CGContext];
              CGContextSetAlpha(v66, a6 * 0.2);

              uint64_t v67 = (CGContext *)[a1 CGContext];
              CGContextAddPath(v67, v23);

              char v68 = (CGContext *)[a1 CGContext];
              CGContextStrokePath(v68);

              char v69 = (CGContext *)[a1 CGContext];
              v103.CGFloat width = a3;
              v103.CGFloat height = a4;
              CGFloat v70 = v90;
              char v71 = v36;
              CGColorRef v16 = v89;
              CGContextSetShadowWithColor(v69, v103, v90, v71);

              char v72 = (CGContext *)[a1 CGContext];
              CGContextSetLineWidth(v72, v70);

              char v73 = (CGContext *)[a1 CGContext];
              CGContextSetLineJoin(v73, kCGLineJoinBevel);

              char v74 = (CGContext *)[a1 CGContext];
              CGContextSetStrokeColorWithColor(v74, v41);

              char v75 = (CGContext *)[a1 CGContext];
              CGContextSetAlpha(v75, a6 * 0.2);

              char v76 = (CGContext *)[a1 CGContext];
              CGContextAddPath(v76, v23);

              uint64_t v77 = (CGContext *)[a1 CGContext];
              CGContextStrokePath(v77);
            }
          }
          uint64_t v78 = (CGContext *)[a1 CGContext];
          CGContextRestoreGState(v78);
          swift_release();

          unint64_t v19 = v96;
          uint64_t v17 = v97;
          goto LABEL_6;
        }
      }
      swift_release();
LABEL_6:
      if (v17 == ++v18) {
        goto LABEL_18;
      }
    }
  }
  __break(1u);
}

uint64_t *ConnectionAssistantRendererEarthOutline.deinit()
{
  swift_unknownObjectRelease();
  sub_100023BB8(v0[3], v0[4]);
  sub_10023C4B8(v0[7]);
  return v0;
}

uint64_t sub_10023C4B8(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ConnectionAssistantRendererEarthOutline.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  sub_100023BB8(v0[3], v0[4]);
  sub_10023C4B8(v0[7]);

  return swift_deallocClassInstance();
}

unint64_t sub_10023C558()
{
  unint64_t result = qword_100391118;
  if (!qword_100391118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391118);
  }
  return result;
}

uint64_t type metadata accessor for ConnectionAssistantRendererEarthOutline()
{
  return self;
}

uint64_t type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes.Shape()
{
  return self;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererEarthOutline.Error()
{
  return &type metadata for ConnectionAssistantRendererEarthOutline.Error;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererEarthOutline.Buffers()
{
  return &type metadata for ConnectionAssistantRendererEarthOutline.Buffers;
}

uint64_t destroy for ConnectionAssistantRendererEarthOutline.Textures()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void *_s8SOSBuddy39ConnectionAssistantRendererEarthOutlineC8TexturesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ConnectionAssistantRendererEarthOutline.Textures(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for ConnectionAssistantRendererEarthOutline.Textures(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererEarthOutline.Textures()
{
  return &type metadata for ConnectionAssistantRendererEarthOutline.Textures;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes()
{
  return &type metadata for ConnectionAssistantRendererEarthOutline.Shapes;
}

unint64_t sub_10023C7A8()
{
  unint64_t result = qword_100391380;
  if (!qword_100391380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391380);
  }
  return result;
}

uint64_t sub_10023C7FC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10023C8D8;
  return v6(a1);
}

uint64_t sub_10023C8D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_10023C9D0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10034BEE0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

void *sub_10023CA1C(unint64_t a1)
{
  unint64_t v1 = a1;
  uint64_t v31 = _swiftEmptyDictionarySingleton;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      unint64_t v28 = v1 & 0xC000000000000001;
      unint64_t v3 = _swiftEmptyDictionarySingleton;
      uint64_t v4 = 4;
      uint64_t v27 = v2;
      while (1)
      {
        uint64_t v6 = v4 - 4;
        if (v28)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v4 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v4);
          swift_retain();
          uint64_t v8 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_20:
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        uint64_t v29 = v8;
        uint64_t v9 = (void *)v1;
        uint64_t v11 = *(void *)(v7 + 16);
        uint64_t v10 = *(void *)(v7 + 24);
        swift_bridgeObjectRetain();
        unint64_t v1 = (unint64_t)v3;
        unint64_t v13 = sub_1001BEC58(v11, v10);
        uint64_t v14 = v3[2];
        BOOL v15 = (v12 & 1) == 0;
        uint64_t v16 = v14 + v15;
        if (__OFADD__(v14, v15)) {
          goto LABEL_21;
        }
        char v17 = v12;
        if (v3[3] < v16)
        {
          sub_1000A05B0(v16, 1);
          unint64_t v3 = v31;
          unint64_t v18 = sub_1001BEC58(v11, v10);
          if ((v17 & 1) != (v19 & 1))
          {
            unint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          unint64_t v13 = v18;
        }
        if (v17)
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = (void *)(v3[7] + 8 * v13);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          sub_100004010(&qword_1003913B0);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_1002B3AF0;
          *(void *)(v20 + 32) = v7;
          uint64_t v30 = v20;
          unint64_t v1 = (unint64_t)&v30;
          specialized Array._endMutation()();
          uint64_t v21 = v30;
          v3[(v13 >> 6) + 8] |= 1 << v13;
          uint64_t v22 = (uint64_t *)(v3[6] + 16 * v13);
          *uint64_t v22 = v11;
          v22[1] = v10;
          *(void *)(v3[7] + 8 * v13) = v21;
          uint64_t v23 = v3[2];
          BOOL v24 = __OFADD__(v23, 1);
          uint64_t v25 = v23 + 1;
          if (v24) {
            goto LABEL_22;
          }
          v3[2] = v25;
        }
        unint64_t v1 = (unint64_t)v9;
        ++v4;
        if (v29 == v27) {
          return v3;
        }
      }
    }
  }
  return _swiftEmptyDictionarySingleton;
}

uint64_t sub_10023CCA8(void *a1)
{
  unint64_t v3 = sub_100004010(&qword_100391388);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  sub_10023D0AC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
    return v3;
  }
  sub_100004010(&qword_100391398);
  sub_10023D100(&qword_1003913A0, &qword_1003913A8);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v22 = v6;
  uint64_t v23 = v4;
  unint64_t v24 = v3;
  unint64_t v3 = v25;
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_10023CA1C(v8);
  swift_bridgeObjectRelease();
  v21[1] = 0;
  if (v3 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
  uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, unint64_t))(v23 + 8))(v22, v24);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
    return v3;
  }
LABEL_7:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    unint64_t v12 = v3 & 0xC000000000000001;
    unint64_t v26 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v12)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v14 = *(void *)(v13 + 40);
        if (!v14) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v13 = *(void *)(v3 + 8 * v11 + 32);
        swift_retain();
        uint64_t v14 = *(void *)(v13 + 40);
        if (!v14) {
          goto LABEL_10;
        }
      }
      if (!v9[2]) {
        goto LABEL_10;
      }
      uint64_t v15 = *(void *)(v13 + 32);
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1001BEC58(v15, v14);
      if ((v17 & 1) == 0) {
        break;
      }
      unint64_t v18 = *(void *)(v9[7] + 8 * v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v20) {
          break;
        }
      }
      else if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        break;
      }
      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_29;
        }
        uint64_t v19 = *(void *)(v18 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v19 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v19 + 56) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      swift_release();
      unint64_t v12 = v26;
LABEL_10:
      ++v11;
      swift_release();
      if (v10 == v11) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_10023D0AC()
{
  unint64_t result = qword_100391390;
  if (!qword_100391390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391390);
  }
  return result;
}

uint64_t sub_10023D100(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(&qword_100391398);
    sub_10023D180(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023D180(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes.Shape();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023D1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100391100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023D22C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023D264(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10023B77C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1003913D8 + dword_1003913D8);
  return v6(a1, v4);
}

id sub_10023D31C(uint64_t a1, id a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  id v16 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v16 setScale:a5];
  [v16 setOpaque:1];
  id v17 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v16 format:a3];
  uint64_t v18 = swift_allocObject();
  *(double *)(v18 + 16) = a3;
  *(double *)(v18 + 24) = a4;
  *(void *)(v18 + 32) = a1;
  *(double *)(v18 + 40) = a8;
  *(double *)(v18 + 48) = a7;
  *(double *)(v18 + 56) = a6;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = sub_10023E3CC;
  void v19[3] = v18;
  aBlock[4] = sub_1000959EC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10009592C;
  aBlock[3] = &unk_10035FE60;
  uint64_t v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v21 = [v17 imageWithActions:v20];
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v20) {
    __break(1u);
  }
  id v22 = [v21 CGImage];
  if (!v22)
  {
    sub_10023E2EC();
    swift_allocError();
    unsigned char *v26 = 2;
    swift_willThrow();
    uint64_t v27 = v17;
    id v17 = v16;
LABEL_7:

    swift_release();
    return a2;
  }
  uint64_t v23 = v22;
  aBlock[0] = 0;
  id v24 = [a2 newTextureWithCGImage:v22 options:0 error:aBlock];
  if (!v24)
  {
    a2 = aBlock[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v27 = v21;
    id v21 = v16;
    goto LABEL_7;
  }
  a2 = v24;
  id v25 = aBlock[0];

  swift_release();
  return a2;
}

id sub_10023D648(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  id v6 = a4;
  id v11 = [objc_allocWithZone((Class)MTKTextureLoader) initWithDevice:a4];
  if ((double)a2 > (double)a3) {
    double v12 = (double)a2;
  }
  else {
    double v12 = (double)a3;
  }
  double v13 = v12 * 0.5;
  id v14 = sub_10023D31C(a1, v11, v12 * 0.125, v12 * 0.5 * 0.125, a5, v12 * 0.125 * 0.01, 1.0, 0.0);
  if (!v5)
  {
    id v6 = v14;
    double v15 = v12 * 0.0625;
    double v16 = v13 * 0.0625;
    sub_10023D31C(a1, v11, v15, v16, a5, 0.0, 0.0, v15 * 0.004);
    sub_10023D31C(a1, v11, v15, v16, a5, 0.0, 0.0, v15 * 0.012);
  }

  return v6;
}

uint64_t sub_10023D7D0(unint64_t a1, void *a2)
{
  uint64_t i = a1;
  if (a1 >> 62) {
    goto LABEL_71;
  }
  int64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = sub_1001B3068(0, v4, 0, _swiftEmptyArrayStorage);
  uint64_t v6 = *(void *)((i & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_72;
  }
  while (v6 >= 1)
  {
    if ((i & 0xC000000000000001) != 0)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v10 = *(void *)(v9 + 16);
        swift_bridgeObjectRelease();
        BOOL v11 = __OFADD__(v7, v10);
        v7 += v10;
        if (v11) {
          break;
        }
        if (v6 == ++v8) {
          goto LABEL_12;
        }
      }
LABEL_66:
      __break(1u);
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v12 = 0;
      while (1)
      {
        uint64_t v13 = *(void *)(*(void *)(*(void *)(i + 8 * v12 + 32) + 48) + 16);
        BOOL v11 = __OFADD__(v7, v13);
        v7 += v13;
        if (v11) {
          break;
        }
        if (v6 == ++v12)
        {
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v14 = v7 + v4;
          if (!__OFADD__(v7, v4)) {
            goto LABEL_13;
          }
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      int64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_1001B3068(0, v4 & ~(v4 >> 63), 0, _swiftEmptyArrayStorage);
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (v6) {
        break;
      }
LABEL_72:
      swift_bridgeObjectRelease();
      uint64_t v14 = v4;
LABEL_13:
      id v46 = a2;
      int64_t v45 = v4;
      a2 = sub_1001B2F40(0, v14 & ~(v14 >> 63), 0, _swiftEmptyArrayStorage);
      uint64_t v50 = i;
      uint64_t v54 = v6;
      if (v6)
      {
        unint64_t v49 = i & 0xC000000000000001;
        int64_t v4 = (int64_t)v5;
        if ((i & 0xC000000000000001) != 0) {
          goto LABEL_77;
        }
        if (*(void *)((i & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v15 = *(void *)(i + 32);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_17;
        }
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      int64_t v4 = (int64_t)v5;
LABEL_43:
      unint64_t v31 = *(void *)(v4 + 16);
      if (v31 >> 60) {
        goto LABEL_74;
      }
      uint64_t v32 = 8 * v31;
      swift_bridgeObjectRetain();
      uint64_t v6 = (uint64_t)[v46 newBufferWithBytes:v4 + 32 length:v32 options:0];
      swift_bridgeObjectRelease();
      uint64_t v33 = a2[2];
      uint64_t v34 = 12 * v33;
      if ((unsigned __int128)(v33 * (__int128)12) >> 64 != (12 * v33) >> 63) {
        goto LABEL_75;
      }
      swift_bridgeObjectRetain();
      id v35 = [v46 newBufferWithBytes:a2 + 4 length:v34 options:0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35) {
        BOOL v36 = v6 == 0;
      }
      else {
        BOOL v36 = 1;
      }
      if (v36)
      {
        sub_10023E2EC();
        swift_allocError();
        *uint64_t v37 = 0;
        swift_willThrow();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (!v54)
      {
LABEL_63:
        swift_bridgeObjectRelease();
        return v45;
      }
      if (v54 < 1) {
        goto LABEL_79;
      }
      if ((i & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t i = 0;
        uint64_t v39 = 0;
        while (1)
        {
          uint64_t v40 = *(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          uint64_t v41 = *(void *)(v40 + 16);
          swift_bridgeObjectRelease();
          BOOL v11 = __OFADD__(i, v41);
          i += v41;
          if (v11) {
            break;
          }
          if (v54 == ++v39)
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            return v45;
          }
        }
        goto LABEL_69;
      }
LABEL_60:
      uint64_t v42 = i;
      uint64_t i = 0;
      uint64_t v43 = v42 + 32;
      while (1)
      {
        uint64_t v44 = *(void *)(*(void *)(*(void *)v43 + 48) + 16);
        BOOL v11 = __OFADD__(i, v44);
        i += v44;
        if (v11) {
          break;
        }
        v43 += 8;
        if (!--v54) {
          goto LABEL_63;
        }
      }
    }
  }
LABEL_76:
  __break(1u);
LABEL_77:
  swift_bridgeObjectRetain();
  uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
  unint64_t v16 = a2[2];
  if (!HIDWORD(v16))
  {
    unint64_t v17 = 0;
    uint64_t v47 = i + 32;
    uint64_t v48 = i & 0xFFFFFFFFFFFFFF8;
    uint64_t v18 = 1;
    do
    {
      unint64_t v55 = v18;
      unint64_t v19 = *(void *)(*(void *)(v15 + 48) + 16);
      if (HIDWORD(v19)) {
        break;
      }
      unint64_t v21 = *(void *)(v4 + 16);
      unint64_t v20 = *(void *)(v4 + 24);
      if (v21 >= v20 >> 1) {
        int64_t v4 = (int64_t)sub_1001B3068((void *)(v20 > 1), v21 + 1, 1, (void *)v4);
      }
      *(void *)(v4 + 16) = v21 + 1;
      int64_t v22 = v4 + 8 * v21;
      *(_DWORD *)(v22 + 32) = v16;
      *(_DWORD *)(v22 + 36) = v19;
      uint64_t v23 = *(void *)(v15 + 48);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        int64_t v51 = v4;
        if (v17 > 0xFF) {
          break;
        }
        float64x2_t v52 = *(float64x2_t *)(v23 + 32);
        uint64_t v25 = a2[2];
        swift_bridgeObjectRetain();
        float64x2_t v26 = v52;
        uint64_t v27 = 0;
        for (uint64_t i = 12 * v25; ; i += 12)
        {
          unint64_t v28 = a2[3];
          if (v25 + v27 >= v28 >> 1)
          {
            float64x2_t v53 = v26;
            uint64_t v30 = sub_1001B2F40((void *)(v28 > 1), v25 + v27 + 1, 1, a2);
            float64x2_t v26 = v53;
            a2 = v30;
          }
          a2[2] = v25 + v27 + 1;
          uint64_t v29 = (char *)a2 + i;
          v29[32] = v17;
          *(float32x2_t *)(v29 + 36) = vcvt_f32_f64(v26);
          if (v24 - 1 == v27)
          {
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t i = v50;
            uint64_t v6 = v54;
            int64_t v4 = v51;
            goto LABEL_32;
          }
          if ((unint64_t)(v27 + 1) >= *(void *)(v23 + 16)) {
            break;
          }
          float64x2_t v26 = *(float64x2_t *)(v23 + 48 + 16 * v27++);
        }
        __break(1u);
        goto LABEL_60;
      }
      swift_release();
LABEL_32:
      unint64_t v17 = v55;
      if (v55 == v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      if (v49)
      {
        uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v18 = v55 + 1;
        if (__OFADD__(v55, 1)) {
          goto LABEL_65;
        }
      }
      else
      {
        if (v55 >= *(void *)(v48 + 16)) {
          goto LABEL_68;
        }
        uint64_t v15 = *(void *)(v47 + 8 * v55);
        swift_retain();
        uint64_t v18 = v55 + 1;
        if (__OFADD__(v55, 1))
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
      }
      unint64_t v16 = a2[2];
    }
    while (!HIDWORD(v16));
  }
LABEL_80:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10023DE40@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>, double a5@<D0>)
{
  uint64_t v47 = a2;
  unint64_t v48 = a3;
  unint64_t v49 = a1;
  id v46 = a4;
  uint64_t v7 = sub_100004010(&qword_100380420);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v46 - v15;
  type metadata accessor for ConnectionAssistantRendererEarthOutline();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v17 URLForResource:v18 withExtension:v19];

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v21(v9, v13, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_10000950C((uint64_t)v9, &qword_100380420);
    sub_10023E2EC();
    swift_allocError();
    unsigned char *v26 = 1;
    return swift_willThrow();
  }
  int64_t v22 = v50;
  v21(v50, v9, v10);
  uint64_t v23 = Data.init(contentsOf:options:)();
  if (v5) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v22, v10);
  }
  uint64_t v27 = v23;
  unint64_t v28 = v24;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10023E340();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  unint64_t v29 = v51;
  uint64_t v30 = v49;
  id v31 = sub_10023D648(v51, v47, v48, v49, a5);
  uint64_t v33 = v32;
  uint64_t v47 = v34;
  unint64_t v48 = v28;
  uint64_t v35 = sub_10023D7D0(v29, v30);
  uint64_t v37 = v36;
  CGFloat v38 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v39 = v50;
  uint64_t v40 = v10;
  uint64_t v42 = v41;
  uint64_t v50 = v43;
  v38(v39, v40);
  sub_10000F294(v27, v48);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v44 = v46;
  uint64_t v45 = v47;
  void *v46 = v31;
  v44[1] = v33;
  v44[2] = v45;
  void v44[3] = v35;
  v44[4] = v37;
  v44[5] = v42;
  v44[6] = v50;
  return result;
}

unint64_t sub_10023E2EC()
{
  unint64_t result = qword_1003913F0;
  if (!qword_1003913F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003913F0);
  }
  return result;
}

unint64_t sub_10023E340()
{
  unint64_t result = qword_1003913F8;
  if (!qword_1003913F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003913F8);
  }
  return result;
}

uint64_t sub_10023E394()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10023E3CC(void *a1)
{
  sub_10023BA5C(a1, *(void *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24), *(CGFloat *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_10023E3E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023E3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10023E400()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for ConnectionAssistantRendererEarthOutline.Shapes.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10023E4A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes.CodingKeys()
{
  return &type metadata for ConnectionAssistantRendererEarthOutline.Shapes.CodingKeys;
}

unsigned char *_s8SOSBuddy39ConnectionAssistantRendererEarthOutlineC5ErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10023E5A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererEarthOutline.Shapes.Shape.CodingKeys()
{
  return &type metadata for ConnectionAssistantRendererEarthOutline.Shapes.Shape.CodingKeys;
}

unint64_t sub_10023E5E4()
{
  unint64_t result = qword_100391400;
  if (!qword_100391400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391400);
  }
  return result;
}

unint64_t sub_10023E63C()
{
  unint64_t result = qword_100391408;
  if (!qword_100391408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391408);
  }
  return result;
}

unint64_t sub_10023E694()
{
  unint64_t result = qword_100391410;
  if (!qword_100391410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391410);
  }
  return result;
}

unint64_t sub_10023E6EC()
{
  unint64_t result = qword_100391418;
  if (!qword_100391418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391418);
  }
  return result;
}

unint64_t sub_10023E744()
{
  unint64_t result = qword_100391420;
  if (!qword_100391420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391420);
  }
  return result;
}

unint64_t sub_10023E79C()
{
  unint64_t result = qword_100391428;
  if (!qword_100391428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391428);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantConnectionGuidance()
{
  return &type metadata for ConnectionAssistantConnectionGuidance;
}

uint64_t sub_10023E800(uint64_t *a1, uint64_t *a2)
{
  return sub_10023E81C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_10023E81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v12 & 1) != 0))
  {
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10023E8C0(__int16 a1)
{
  if ((a1 & 0xFF00) == 0x200)
  {
    uint64_t v2 = 0;
    goto LABEL_3;
  }
  uint64_t v2 = 0;
  switch((char)a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t v2 = 1;
      goto LABEL_7;
    case 6:
      goto LABEL_3;
    case 7:
    case 8:
LABEL_7:
      if (((1 << a1) & 0x1C) != 0)
      {
        id v4 = [self whiteColor];
        goto LABEL_11;
      }
      if (((1 << a1) & 0x22) != 0)
      {
        id v4 = [self systemOrangeColor];
LABEL_11:
        v4;
LABEL_12:
        int v5 = a1;
        if (a1 != 3) {
LABEL_15:
        }
          int v5 = a1;
        switch(v5)
        {
          case 1:
          case 5:
            goto LABEL_20;
          case 2:
          case 3:
          case 4:
          case 6:
            goto LABEL_18;
          case 7:
          case 8:
            if ((a1 & 0x100) == 0) {
              goto LABEL_18;
            }
LABEL_20:
            if (qword_10037DCA0 == -1) {
              return v2;
            }
            goto LABEL_24;
          default:
            if (qword_10037DC98 != -1) {
              goto LABEL_24;
            }
            return v2;
        }
      }
LABEL_3:
      int v3 = a1 & 0xFF00;
      [self clearColor];
      if (v3 != 512) {
        goto LABEL_12;
      }
LABEL_18:
      if (qword_10037DCA8 != -1) {
LABEL_24:
      }
        swift_once();
      return v2;
    default:
      [self greenColor];
      uint64_t v2 = 1;
      goto LABEL_15;
  }
}

double sub_10023EB64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_100242288((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v9 = EnvironmentObject.init()();
  uint64_t v11 = v10;
  State.init(wrappedValue:)();
  type metadata accessor for CGSize(0);
  State.init(wrappedValue:)();
  type metadata accessor for CGRect(0);
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  double result = *(double *)&v16;
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v11;
  *(void *)(a6 + 16) = a1;
  *(void *)(a6 + 24) = a2;
  *(void *)(a6 + 32) = a3;
  *(void *)(a6 + 40) = a4;
  *(unsigned char *)(a6 + 48) = a5;
  *(_DWORD *)(a6 + 49) = v16;
  *(_DWORD *)(a6 + 52) = *(_DWORD *)((char *)&v16 + 3);
  *(unsigned char *)(a6 + 56) = v16;
  *(_DWORD *)(a6 + 57) = 0;
  *(_DWORD *)(a6 + 60) = 0;
  *(void *)(a6 + 64) = *((void *)&v16 + 1);
  *(_OWORD *)(a6 + 72) = v16;
  *(void *)(a6 + 88) = v17;
  *(_OWORD *)(a6 + 96) = v16;
  *(void *)(a6 + 112) = v17;
  *(void *)(a6 + 120) = v18;
  *(void *)(a6 + 128) = v19;
  *(_OWORD *)(a6 + 136) = v16;
  *(void *)(a6 + 152) = v17;
  *(void *)(a6 + 160) = v18;
  *(void *)(a6 + 168) = v19;
  *(_OWORD *)(a6 + 176) = v16;
  return result;
}

uint64_t sub_10023ED5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v42 = a1[2];
  uint64_t v43 = a1[4];
  type metadata accessor for VStack();
  sub_1000094C4(&qword_100391500);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391508);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v45 = &protocol conformance descriptor for _BackgroundModifier<A>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v67 = sub_100009B18(&qword_100391510, &qword_100391500);
  uint64_t v44 = &protocol conformance descriptor for _PreferenceActionModifier<A>;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v65 = sub_100009B18(&qword_100391518, &qword_100391508);
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable();
  uint64_t v4 = type metadata accessor for ScrollView();
  uint64_t v5 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v60 = v4;
  uint64_t v61 = v5;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for VStack();
  sub_1000094C4(&qword_100391520);
  uint64_t v40 = a1[3];
  sub_1000094C4(&qword_100385188);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v39 = a1[5];
  uint64_t v58 = v39;
  uint64_t v59 = sub_100009B18(&qword_100385190, &qword_100385188);
  uint64_t v41 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_100242288(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  swift_getWitnessTable();
  type metadata accessor for VStack();
  sub_1000094C4(&qword_100391528);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391530);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  v34[1] = swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for ZStack();
  uint64_t v37 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v34 - v7;
  sub_1000094C4(&qword_100391538);
  uint64_t v36 = type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391540);
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v35 = (char *)v34 - v13;
  uint64_t v14 = v42;
  uint64_t v15 = v40;
  uint64_t v47 = v42;
  uint64_t v48 = v40;
  uint64_t v16 = v43;
  uint64_t v17 = v39;
  uint64_t v49 = v43;
  uint64_t v50 = v39;
  unint64_t v51 = v2;
  static Alignment.center.getter();
  ZStack.init(alignment:content:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  *(void *)(v18 + 24) = v15;
  *(void *)(v18 + 32) = v16;
  *(void *)(v18 + 40) = v17;
  long long v19 = v2[9];
  *(_OWORD *)(v18 + 176) = v2[8];
  *(_OWORD *)(v18 + 192) = v19;
  long long v20 = v2[11];
  *(_OWORD *)(v18 + 208) = v2[10];
  *(_OWORD *)(v18 + 224) = v20;
  long long v21 = v2[5];
  *(_OWORD *)(v18 + 112) = v2[4];
  *(_OWORD *)(v18 + 128) = v21;
  long long v22 = v2[7];
  *(_OWORD *)(v18 + 144) = v2[6];
  *(_OWORD *)(v18 + 160) = v22;
  long long v23 = v2[1];
  *(_OWORD *)(v18 + 48) = *v2;
  *(_OWORD *)(v18 + 64) = v23;
  long long v24 = v2[3];
  *(_OWORD *)(v18 + 80) = v2[2];
  *(_OWORD *)(v18 + 96) = v24;
  sub_100135CCC((uint64_t)v2);
  uint64_t v25 = swift_getWitnessTable();
  unint64_t v26 = sub_1002422FC();
  sub_100037218((uint64_t)sub_1002422EC, v18, v6, (uint64_t)&type metadata for ViewContentSizeKey, v25, v26, (uint64_t)v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
  uint64_t v27 = sub_100009B18(&qword_100391550, &qword_100391538);
  uint64_t v54 = v25;
  uint64_t v55 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = sub_100009B18(&qword_100391558, &qword_100391540);
  uint64_t v52 = v28;
  uint64_t v53 = v29;
  uint64_t v30 = swift_getWitnessTable();
  id v31 = v35;
  sub_1000A7320(v11, v9, v30);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v38 + 8);
  v32(v11, v9);
  sub_1000A7320(v31, v9, v30);
  return ((uint64_t (*)(char *, uint64_t))v32)(v31, v9);
}

uint64_t sub_10023F4FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v57 = a1;
  uint64_t v58 = a3;
  uint64_t v54 = a6;
  sub_1000094C4(&qword_100385188);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v101 = a5;
  uint64_t v102 = sub_100009B18(&qword_100385190, &qword_100385188);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v100 = sub_100242288(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  swift_getWitnessTable();
  type metadata accessor for VStack();
  sub_1000094C4(&qword_100391528);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391530);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = type metadata accessor for TupleView();
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v8;
  uint64_t v9 = type metadata accessor for VStack();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v48 = (char *)&v43 - v12;
  type metadata accessor for VStack();
  sub_1000094C4(&qword_100391500);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391508);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_100009B18(&qword_100391510, &qword_100391500);
  uint64_t v97 = v13;
  uint64_t v98 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_100009B18(&qword_100391518, &qword_100391508);
  uint64_t v95 = v15;
  uint64_t v96 = v16;
  uint64_t v93 = swift_getWitnessTable();
  char v94 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable();
  uint64_t v17 = type metadata accessor for ScrollView();
  uint64_t v18 = swift_getWitnessTable();
  *(void *)&v103[0] = v17;
  *((void *)&v103[0] + 1) = v18;
  swift_getOpaqueTypeMetadata2();
  *(void *)&v103[0] = v17;
  *((void *)&v103[0] + 1) = v18;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = type metadata accessor for VStack();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  long long v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v43 - v24;
  uint64_t v55 = a2;
  uint64_t v61 = a2;
  uint64_t v62 = v58;
  uint64_t v63 = v59;
  uint64_t v64 = v60;
  unint64_t v26 = v57;
  uint64_t v65 = v57;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t v27 = v26;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v56 = v25;
  uint64_t v43 = v28;
  sub_1000A7320(v22, v19, v28);
  uint64_t v44 = v20;
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v46 = v20 + 8;
  uint64_t v47 = v22;
  uint64_t v45 = v29;
  v29(v22, v19);
  v103[0] = *(_OWORD *)(v26 + 7);
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  if (LOBYTE(v81[0]) == 1)
  {
    uint64_t v30 = static HorizontalAlignment.center.getter();
    sub_100240B08(v57, v55, v58, v59, v60, (uint64_t)&v66);
    *(_OWORD *)((char *)&v77[4] + 7) = v70;
    *(_OWORD *)((char *)&v77[3] + 7) = v69;
    *(_OWORD *)((char *)&v77[7] + 7) = v73;
    *(_OWORD *)((char *)&v77[8] + 7) = v74;
    *(_OWORD *)((char *)&v77[9] + 7) = v75;
    *(void *)((char *)&v77[10] + 7) = v76;
    *(_OWORD *)((char *)&v77[5] + 7) = v71;
    *(_OWORD *)((char *)&v77[6] + 7) = v72;
    *(_OWORD *)((char *)v77 + 7) = v66;
    *(_OWORD *)((char *)&v77[1] + 7) = v67;
    *(_OWORD *)((char *)&v77[2] + 7) = v68;
    long long v90 = v77[7];
    long long v91 = v77[8];
    v92[0] = v77[9];
    *(_OWORD *)((char *)v92 + 15) = *(_OWORD *)((char *)&v77[9] + 15);
    long long v86 = v77[3];
    long long v87 = v77[4];
    long long v88 = v77[5];
    long long v89 = v77[6];
    long long v83 = v77[0];
    long long v84 = v77[1];
    LOBYTE(v78) = 0;
    v81[0] = v30;
    v81[1] = 0;
    char v82 = 0;
    long long v85 = v77[2];
    uint64_t v27 = v57;
    sub_1002424A8((uint64_t)v81);
  }
  else
  {
    sub_100242368((uint64_t)v81);
  }
  uint64_t v31 = sub_100242390((uint64_t)v81, (uint64_t)v103);
  __chkstk_darwin(v31);
  uint64_t v32 = v58;
  *(&v43 - 6) = v55;
  *(&v43 - 5) = v32;
  uint64_t v33 = v60;
  *(&v43 - 4) = v59;
  *(&v43 - 3) = v33;
  *(&v43 - 2) = (uint64_t)v27;
  static HorizontalAlignment.center.getter();
  uint64_t v34 = v53;
  VStack.init(alignment:spacing:content:)();
  uint64_t v35 = v52;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v48;
  sub_1000A7320(v34, v35, v36);
  uint64_t v38 = v51;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v51 + 8);
  v39(v34, v35);
  uint64_t v40 = v47;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v47, v56, v19);
  *(void *)&v77[0] = v40;
  sub_100242390((uint64_t)v103, (uint64_t)v81);
  *((void *)&v77[0] + 1) = v81;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v34, v37, v35);
  *(void *)&v77[1] = v34;
  *(void *)&long long v66 = v19;
  *((void *)&v66 + 1) = sub_100004010(&qword_100391520);
  *(void *)&long long v67 = v35;
  uint64_t v78 = v43;
  unint64_t v79 = sub_100242410();
  uint64_t v80 = v36;
  sub_1000A754C((uint64_t)v77, 3uLL, (uint64_t)&v66);
  v39(v37, v35);
  uint64_t v41 = v45;
  v45(v56, v19);
  v39(v34, v35);
  return v41(v40, v19);
}

uint64_t sub_10023FD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v36 = a6;
  type metadata accessor for VStack();
  sub_1000094C4(&qword_100391500);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391508);
  type metadata accessor for ModifiedContent();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v51 = sub_100009B18(&qword_100391510, &qword_100391500);
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = sub_100009B18(&qword_100391518, &qword_100391508);
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = &protocol witness table for _PaddingLayout;
  uint64_t v28 = v7;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for ScrollView();
  uint64_t v31 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v42 = v8;
  uint64_t v43 = v26;
  uint64_t v29 = &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v30 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = a2;
  uint64_t v37 = a2;
  uint64_t v18 = v33;
  uint64_t v19 = v32;
  uint64_t v38 = v33;
  uint64_t v39 = v32;
  uint64_t v20 = v35;
  uint64_t v40 = v35;
  uint64_t v41 = v34;
  static Axis.Set.vertical.getter();
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  uint64_t v44 = v19;
  uint64_t v45 = v20;
  type metadata accessor for ScrollableContentWithFloatingPanelView();
  sub_1002409D4();
  uint64_t v21 = v26;
  View.scrollDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
  uint64_t v42 = v8;
  uint64_t v43 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000A7320(v13, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v30 + 8);
  v23(v13, OpaqueTypeMetadata2);
  sub_1000A7320(v16, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v23)(v16, OpaqueTypeMetadata2);
}

uint64_t sub_1002401B4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v53 = a6;
  uint64_t v11 = type metadata accessor for VStack();
  uint64_t v45 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v44 - v12;
  sub_1000094C4(&qword_100391500);
  uint64_t v14 = type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391508);
  uint64_t v47 = v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v51 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v46 = v18;
  uint64_t v19 = type metadata accessor for ModifiedContent();
  uint64_t v52 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v48 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v50 = (char *)&v44 - v22;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v44 = a3;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v58 = a1;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a3;
  *(void *)(v23 + 32) = a4;
  *(void *)(v23 + 40) = a5;
  uint64_t v24 = a5;
  long long v25 = a1[9];
  *(_OWORD *)(v23 + 176) = a1[8];
  *(_OWORD *)(v23 + 192) = v25;
  long long v26 = a1[11];
  *(_OWORD *)(v23 + 208) = a1[10];
  *(_OWORD *)(v23 + 224) = v26;
  long long v27 = a1[5];
  *(_OWORD *)(v23 + 112) = a1[4];
  *(_OWORD *)(v23 + 128) = v27;
  long long v28 = a1[7];
  *(_OWORD *)(v23 + 144) = a1[6];
  *(_OWORD *)(v23 + 160) = v28;
  long long v29 = a1[1];
  *(_OWORD *)(v23 + 48) = *a1;
  *(_OWORD *)(v23 + 64) = v29;
  long long v30 = a1[3];
  *(_OWORD *)(v23 + 80) = a1[2];
  *(_OWORD *)(v23 + 96) = v30;
  sub_100135CCC((uint64_t)a1);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v32 = sub_10024262C();
  uint64_t v49 = v17;
  sub_100036AD4((uint64_t)sub_1002425FC, v23, v11, (uint64_t)&type metadata for ScrollContentFrame, WitnessTable, v32, (uint64_t)v17);
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v11);
  static Edge.Set.bottom.getter();
  uint64_t v65 = a2;
  uint64_t v66 = v44;
  uint64_t v67 = a4;
  uint64_t v68 = v24;
  type metadata accessor for ScrollableContentWithFloatingPanelView();
  if (sub_1002409D4()) {
    sub_100240A80();
  }
  uint64_t v33 = sub_100009B18(&qword_100391510, &qword_100391500);
  uint64_t v63 = WitnessTable;
  uint64_t v64 = v33;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = sub_100009B18(&qword_100391518, &qword_100391508);
  uint64_t v61 = v34;
  uint64_t v62 = v35;
  uint64_t v36 = v46;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = v48;
  uint64_t v39 = v49;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v36);
  uint64_t v59 = v37;
  uint64_t v60 = &protocol witness table for _PaddingLayout;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = v50;
  sub_1000A7320(v38, v19, v40);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v52 + 8);
  v42(v38, v19);
  sub_1000A7320(v41, v19, v40);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v19);
}

uint64_t sub_1002406CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(void))(v10 + 16))();
  sub_1000A7320(v9, a2, a4);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, a2);
  sub_1000A7320(v12, a2, a4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, a2);
}

uint64_t sub_100240800()
{
  return sub_100240898();
}

uint64_t sub_100240898()
{
  sub_100004010(&qword_1003808A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B31C0;
  sub_100004010(&qword_100391560);
  State.wrappedValue.getter();
  *(CGPoint *)(inited + 32) = v2.origin;
  *(CGSize *)(inited + 48) = v2.size;
  State.wrappedValue.getter();
  *(CGPoint *)(inited + 64) = v2.origin;
  *(CGSize *)(inited + 80) = v2.size;
  CGRectIntersectsRect(v2, *(CGRect *)(inited + 32));
  swift_bridgeObjectRelease();
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.setter();
  sub_1002418A4();
  sub_100004010(&qword_1003853C0);
  return State.wrappedValue.setter();
}

BOOL sub_1002409D4()
{
  sub_100004010(&qword_100391560);
  State.wrappedValue.getter();
  double v0 = v3 + sub_100240A80();
  sub_100004010(&qword_100383D50);
  State.wrappedValue.getter();
  return v2 < v0;
}

double sub_100240A80()
{
  sub_100004010(&qword_100391560);
  State.wrappedValue.getter();
  sub_100004010(&qword_1003853C0);
  State.wrappedValue.getter();
  return v2 + v1;
}

void sub_100240B08(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)uint64_t v21 = a2;
  *(void *)&float v21[8] = a3;
  *(void *)&v21[16] = a4;
  *(void *)&unsigned char v21[24] = a5;
  type metadata accessor for ScrollableContentWithFloatingPanelView();
  double v8 = sub_100240A80();
  if (*a1)
  {
    double v9 = v8;
    uint64_t v10 = qword_10037DCE8;
    swift_retain();
    if (v10 != -1) {
      swift_once();
    }
    double v11 = *(double *)&qword_1003A9890;
    swift_release();
    uint64_t v12 = static Alignment.center.getter();
    sub_100166B8C(0.0, 1, 0.0, 1, INFINITY, 0, v9 + v11, 0, (uint64_t)v19, 0.0, 1.0, 0.0, 1, v9 + v11, 0, v12, v13, 6);
    *(_OWORD *)&v21[103] = v19[6];
    *(_OWORD *)&v21[87] = v19[5];
    *(_OWORD *)&v21[39] = v19[2];
    *(_OWORD *)&v21[23] = v19[1];
    *(void *)&v21[135] = v20;
    *(_OWORD *)&v21[119] = v19[7];
    *(_OWORD *)&v21[55] = v19[3];
    *(_OWORD *)&v21[71] = v19[4];
    *(_OWORD *)&v21[7] = v19[0];
    long long v14 = *(_OWORD *)&v21[64];
    *(_OWORD *)(a6 + 89) = *(_OWORD *)&v21[80];
    long long v15 = *(_OWORD *)&v21[112];
    *(_OWORD *)(a6 + 105) = *(_OWORD *)&v21[96];
    *(_OWORD *)(a6 + 121) = v15;
    *(_OWORD *)(a6 + 136) = *(_OWORD *)&v21[127];
    long long v16 = *(_OWORD *)v21;
    *(_OWORD *)(a6 + 25) = *(_OWORD *)&v21[16];
    long long v17 = *(_OWORD *)&v21[48];
    *(_OWORD *)(a6 + 41) = *(_OWORD *)&v21[32];
    *(_OWORD *)(a6 + 57) = v17;
    *(_OWORD *)(a6 + 73) = v14;
    uint64_t v18 = qword_1003A9890;
    char v22 = 1;
    *(void *)a6 = 0;
    *(unsigned char *)(a6 + 8) = 1;
    *(_OWORD *)(a6 + 9) = v16;
    *(void *)(a6 + 152) = 0;
    *(void *)(a6 + 160) = v18;
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100242288((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_100240D04@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v52 = a6;
  sub_1000094C4(&qword_100385188);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v72 = a5;
  uint64_t v73 = sub_100009B18(&qword_100385190, &qword_100385188);
  uint64_t v51 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v71 = sub_100242288(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  v42[1] = v10;
  swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for VStack();
  uint64_t v46 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v42 - v12;
  sub_1000094C4(&qword_100391528);
  uint64_t v47 = type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100391530);
  uint64_t v44 = type metadata accessor for ModifiedContent();
  uint64_t v50 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (uint64_t)v42 - v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v49 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  long long v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v48 = (char *)v42 - v19;
  uint64_t v53 = a2;
  uint64_t v20 = a3;
  uint64_t v54 = a3;
  uint64_t v21 = v45;
  uint64_t v55 = v45;
  uint64_t v56 = a5;
  uint64_t v57 = a1;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = v20;
  *(void *)(v22 + 32) = v21;
  *(void *)(v22 + 40) = a5;
  long long v23 = a1[9];
  *(_OWORD *)(v22 + 176) = a1[8];
  *(_OWORD *)(v22 + 192) = v23;
  long long v24 = a1[11];
  *(_OWORD *)(v22 + 208) = a1[10];
  *(_OWORD *)(v22 + 224) = v24;
  long long v25 = a1[5];
  *(_OWORD *)(v22 + 112) = a1[4];
  *(_OWORD *)(v22 + 128) = v25;
  long long v26 = a1[7];
  *(_OWORD *)(v22 + 144) = a1[6];
  *(_OWORD *)(v22 + 160) = v26;
  long long v27 = a1[1];
  *(_OWORD *)(v22 + 48) = *a1;
  *(_OWORD *)(v22 + 64) = v27;
  long long v28 = a1[3];
  *(_OWORD *)(v22 + 80) = a1[2];
  *(_OWORD *)(v22 + 96) = v28;
  sub_100135CCC((uint64_t)a1);
  uint64_t v29 = swift_getWitnessTable();
  unint64_t v30 = sub_1002424E4();
  uint64_t v31 = v43;
  sub_100036AD4((uint64_t)sub_1002424CC, v22, v11, (uint64_t)&type metadata for FloatingPanelFrame, v29, v30, v43);
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v11);
  static Edge.Set.bottom.getter();
  long long v69 = a1[11];
  sub_100004010(&qword_1003853C0);
  State.wrappedValue.getter();
  uint64_t v32 = sub_100009B18(&qword_100391588, &qword_100391528);
  uint64_t v67 = v29;
  uint64_t v68 = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = sub_100009B18(&qword_100391590, &qword_100391530);
  uint64_t v65 = v33;
  uint64_t v66 = v34;
  uint64_t v35 = v44;
  uint64_t v36 = swift_getWitnessTable();
  View.padding(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v31, v35);
  uint64_t v63 = v36;
  uint64_t v64 = &protocol witness table for _PaddingLayout;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = v48;
  sub_1000A7320(v17, v15, v37);
  uint64_t v39 = v49;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v49 + 8);
  v40(v17, v15);
  uint64_t v61 = 0;
  char v62 = 1;
  *(void *)&long long v69 = &v61;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v17, v38, v15);
  *((void *)&v69 + 1) = v17;
  v60[0] = &type metadata for Spacer;
  v60[1] = v15;
  uint64_t v58 = &protocol witness table for Spacer;
  uint64_t v59 = v37;
  sub_1000A754C((uint64_t)&v69, 2uLL, (uint64_t)v60);
  v40(v38, v15);
  return ((uint64_t (*)(char *, uint64_t))v40)(v17, v15);
}

uint64_t sub_100241380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v29 = a4;
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  double v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000094C4(&qword_100385188);
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - v10;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v28 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - v17;
  (*(void (**)(double))(a1 + 32))(v16);
  long long v34 = *(_OWORD *)(a1 + 56);
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  uint64_t v19 = v26;
  sub_100241700();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
  uint64_t v20 = sub_100009B18(&qword_100385190, &qword_100385188);
  uint64_t v32 = v19;
  uint64_t v33 = v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.accessibilitySortPriority(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  uint64_t v22 = sub_100242288(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v30 = WitnessTable;
  uint64_t v31 = v22;
  uint64_t v23 = swift_getWitnessTable();
  sub_1000A7320(v14, v12, v23);
  long long v24 = *(void (**)(char *, uint64_t))(v28 + 8);
  v24(v14, v12);
  sub_1000A7320(v18, v12, v23);
  return ((uint64_t (*)(char *, uint64_t))v24)(v18, v12);
}

uint64_t sub_100241700()
{
  return swift_release();
}

uint64_t sub_100241774()
{
  return sub_100240898();
}

uint64_t sub_100241810()
{
  return sub_100240898();
}

void sub_1002418A4()
{
  if (*(unsigned char *)(v0 + 48))
  {
    sub_100004010(&qword_100383D50);
    State.wrappedValue.getter();
    sub_100004010(&qword_100391560);
    State.wrappedValue.getter();
    State.wrappedValue.getter();
    double v1 = *(void **)v0;
    if (*(void *)v0)
    {
      uint64_t v2 = v1[9];
      uint64_t v3 = v1[10];
      sub_100008F88(v1 + 6, v2);
      (*(double (**)(uint64_t, uint64_t))(v3 + 88))(v2, v3);
    }
    else
    {
      type metadata accessor for UIMetrics();
      sub_100242288((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      EnvironmentObject.error()();
      __break(1u);
    }
  }
}

uint64_t sub_100241A44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023ED5C(a1, a2);
}

void sub_100241AA0()
{
  xmmword_100391430 = 0uLL;
}

double sub_100241AB0@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10037DED0 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_100391430;
  *a1 = xmmword_100391430;
  return result;
}

void *sub_100241B10(double *a1, void *(*a2)(double *__return_ptr))
{
  double result = a2(&v5);
  double v4 = v6;
  if (v5 != 0.0 || v6 != 0.0)
  {
    *a1 = v5;
    a1[1] = v4;
  }
  return result;
}

double sub_100241B60()
{
  double result = 0.0;
  xmmword_100391440 = 0u;
  *(_OWORD *)algn_100391450 = 0u;
  return result;
}

double sub_100241B74@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_100241BDC(&qword_10037DED8, (__n128 *)&xmmword_100391440, (__n128 *)algn_100391450, a1).n128_u64[0];
  return result;
}

double sub_100241BA0()
{
  double result = 0.0;
  xmmword_100391460 = 0u;
  *(_OWORD *)algn_100391470 = 0u;
  return result;
}

double sub_100241BB4@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_100241BDC(&qword_10037DEE0, (__n128 *)&xmmword_100391460, (__n128 *)algn_100391470, a1).n128_u64[0];
  return result;
}

__n128 sub_100241BDC@<Q0>(void *a1@<X2>, __n128 *a2@<X3>, __n128 *a3@<X4>, __n128 *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  __n128 result = *a2;
  __n128 v8 = *a3;
  *a4 = *a2;
  a4[1] = v8;
  return result;
}

uint64_t sub_100241C34()
{
  sub_10004F4DC();
  EnvironmentValues.subscript.getter();
  return v1;
}

ValueMetadata *type metadata accessor for _ScrollableContentFloatingPanelVisibleKey()
{
  return &type metadata for _ScrollableContentFloatingPanelVisibleKey;
}

uint64_t sub_100241C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

uint64_t sub_100241C88()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100241CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v6 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v6;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100241DF4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  return a1;
}

__n128 sub_100241F54(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t sub_100241F88(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  return a1;
}

uint64_t sub_100242070(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1002420B8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ScrollableContentWithFloatingPanelView()
{
  return swift_getGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for ScrollableContentWithFloatingPanelViewStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024220CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollableContentWithFloatingPanelViewStyle()
{
  return &type metadata for ScrollableContentWithFloatingPanelViewStyle;
}

uint64_t sub_100242244()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100242288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002422D0()
{
  return sub_100242570((uint64_t (*)(void, void, void, void, void))sub_10023F4FC);
}

uint64_t sub_1002422EC()
{
  return sub_100241810();
}

unint64_t sub_1002422FC()
{
  unint64_t result = qword_100391548;
  if (!qword_100391548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391548);
  }
  return result;
}

uint64_t sub_100242350()
{
  return sub_100242570((uint64_t (*)(void, void, void, void, void))sub_10023FD80);
}

double sub_100242368(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 192) = 1;
  return result;
}

uint64_t sub_100242390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100391520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002423F8()
{
  return sub_100242570((uint64_t (*)(void, void, void, void, void))sub_100240D04);
}

unint64_t sub_100242410()
{
  unint64_t result = qword_100391568;
  if (!qword_100391568)
  {
    sub_1000094C4(&qword_100391520);
    sub_100009B18(&qword_100391570, &qword_100391578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391568);
  }
  return result;
}

uint64_t sub_1002424A8(uint64_t result)
{
  *(unsigned char *)(result + 192) = 0;
  return result;
}

uint64_t sub_1002424B0()
{
  return sub_100242570((uint64_t (*)(void, void, void, void, void))sub_100241380);
}

uint64_t sub_1002424CC()
{
  return sub_100242614((uint64_t (*)(void *, void, void, void, void))sub_100241774);
}

unint64_t sub_1002424E4()
{
  unint64_t result = qword_100391580;
  if (!qword_100391580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391580);
  }
  return result;
}

uint64_t sub_100242540()
{
  return sub_100242570((uint64_t (*)(void, void, void, void, void))sub_1002401B4);
}

uint64_t sub_100242558()
{
  return sub_100242570((uint64_t (*)(void, void, void, void, void))sub_1002406CC);
}

uint64_t sub_100242570(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10024258C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 240, 7);
}

uint64_t sub_1002425FC()
{
  return sub_100242614((uint64_t (*)(void *, void, void, void, void))sub_100240800);
}

uint64_t sub_100242614(uint64_t (*a1)(void *, void, void, void, void))
{
  return a1(v1 + 6, v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_10024262C()
{
  unint64_t result = qword_100391598;
  if (!qword_100391598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391598);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewContentSizeKey()
{
  return &type metadata for ViewContentSizeKey;
}

ValueMetadata *type metadata accessor for FloatingPanelFrame()
{
  return &type metadata for FloatingPanelFrame;
}

ValueMetadata *type metadata accessor for ScrollContentFrame()
{
  return &type metadata for ScrollContentFrame;
}

uint64_t sub_1002426B0()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for FullScreenGuidanceConnectivityStatusTextView()
{
  return &type metadata for FullScreenGuidanceConnectivityStatusTextView;
}

uint64_t sub_100242B6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100242B88@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  int v3 = (void *)*((void *)v1 + 2);
  if (v3)
  {
    uint64_t v5 = v3[9];
    uint64_t v6 = v3[10];
    sub_100008F88(v3 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 32))(v16, v5, v6);
    long long v7 = *v1;
    long long v17 = v1[2];
    long long v18 = v7;
    __n128 v8 = (_OWORD *)swift_allocObject();
    long long v9 = v2[1];
    v8[1] = *v2;
    v8[2] = v9;
    v8[3] = v2[2];
    sub_1000090FC((uint64_t)v16, (uint64_t)v15);
    long long v10 = (_OWORD *)swift_allocObject();
    long long v11 = v2[1];
    v10[1] = *v2;
    v10[2] = v11;
    v10[3] = v2[2];
    sub_100009164(v15, (uint64_t)(v10 + 4));
    sub_10004ED30((uint64_t)&v18);
    swift_retain();
    sub_100039BF8((uint64_t)&v17);
    sub_10004ED30((uint64_t)&v18);
    swift_retain();
    sub_100039BF8((uint64_t)&v17);
    State.init(wrappedValue:)();
    uint64_t result = _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v16);
    *(unsigned char *)a1 = v13;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = sub_1002439D8;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = sub_100243A30;
    *(void *)(a1 + 40) = v10;
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100243A64((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100242D58(void *a1)
{
  uint64_t v2 = a1[2];
  if (v2)
  {
    sub_1000090FC(v2 + 48, (uint64_t)v9);
    uint64_t v3 = v10;
    uint64_t v4 = v11;
    sub_100008F88(v9, v10);
    if (*a1)
    {
      char v5 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v4 + 104))(*(unsigned __int8 *)(*(void *)(*a1 + 48) + 120), v3, v4);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v9);
      return v5 & 1;
    }
    type metadata accessor for ConnectivityModel();
    long long v7 = &qword_10037F0F0;
    __n128 v8 = type metadata accessor for ConnectivityModel;
  }
  else
  {
    type metadata accessor for UIMetrics();
    long long v7 = (unint64_t *)&qword_10037EFF0;
    __n128 v8 = type metadata accessor for UIMetrics;
  }
  sub_100243A64(v7, (void (*)(uint64_t))v8);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100242E74@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v94 = a2;
  uint64_t v108 = a3;
  uint64_t v102 = type metadata accessor for OpacityTransition();
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v98 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100381CB0);
  uint64_t v105 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  CGSize v99 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v80 - v8;
  uint64_t v109 = type metadata accessor for Font.Leading();
  uint64_t KeyPath = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_1003915A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v97 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100004010(&qword_1003915A8);
  __chkstk_darwin(v96);
  uint64_t v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_1003915B0);
  __chkstk_darwin(v15);
  long long v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v110 = a1;
  if (!*a1)
  {
    type metadata accessor for ConnectivityModel();
    uint64_t v78 = &qword_10037F0F0;
    unint64_t v79 = type metadata accessor for ConnectivityModel;
LABEL_20:
    sub_100243A64(v78, (void (*)(uint64_t))v79);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  swift_retain();
  uint64_t v18 = sub_10020D834();
  uint64_t v20 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v112 = v18;
  uint64_t v104 = v15;
  if (!v18 && v20 == (void *)0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v21 = v110;
    uint64_t v22 = (void *)v110[5];
    uint64_t v112 = v110[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v22;
  }
  else
  {
    uint64_t v21 = v110;
  }
  uint64_t v111 = v20;
  CGSize v103 = v17;
  uint64_t v106 = v5;
  uint64_t v107 = v14;
  uint64_t v23 = v21[2];
  if (!v23)
  {
    type metadata accessor for UIMetrics();
    uint64_t v78 = (unint64_t *)&qword_10037EFF0;
    unint64_t v79 = type metadata accessor for UIMetrics;
    goto LABEL_20;
  }
  uint64_t v24 = *(void *)(v23 + 72);
  uint64_t v25 = *(void *)(v23 + 80);
  sub_100008F88((void *)(v23 + 48), v24);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 96);
  uint64_t v27 = swift_retain();
  uint64_t v28 = v26(v27, v24, v25);
  swift_release();
  v114[0] = v112;
  v114[1] = v111;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v29 = Text.init<A>(_:)();
  uint64_t v92 = v30;
  uint64_t v93 = v29;
  char v32 = v31;
  uint64_t v91 = v33;
  long long v34 = v94;
  uint64_t v35 = sub_100008F88(v94, v94[3]);
  uint64_t v36 = *v35;
  uint64_t v37 = *(void *)(*v35 + 184);
  uint64_t v89 = *(void *)(*v35 + 192);
  uint64_t v90 = v37;
  uint64_t v38 = *(void *)(v36 + 200);
  uint64_t v87 = *(void *)(v36 + 208);
  uint64_t v88 = v38;
  int v85 = static Edge.Set.all.getter();
  int v86 = static Edge.Set.bottom.getter();
  sub_100008F88(v34, v34[3]);
  EdgeInsets.init(_all:)();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  unsigned __int8 v136 = v32 & 1;
  unsigned __int8 v133 = 0;
  unsigned __int8 v130 = 0;
  static Font.title3.getter();
  Font.bold()();
  swift_release();
  uint64_t v47 = KeyPath;
  uint64_t v48 = v109;
  (*(void (**)(char *, void, uint64_t))(KeyPath + 104))(v10, enum case for Font.Leading.tight(_:), v109);
  char v94 = (void *)Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
  uint64_t KeyPath = swift_getKeyPath();
  int v81 = v136;
  int v82 = v133;
  int v84 = v130;
  uint64_t v83 = swift_getKeyPath();
  uint64_t v49 = *(void **)(v23 + 112);
  uint64_t v109 = v28;
  swift_retain();
  id v50 = v49;
  char v51 = static UIContentSizeCategory.>= infix(_:_:)();

  *((void *)&v80 + 1) = (v51 & 1) == 0;
  *(void *)&long long v80 = swift_getKeyPath();
  id v52 = *(id *)(v23 + 112);
  LOBYTE(v28) = static UIContentSizeCategory.>= infix(_:_:)();

  BOOL v53 = (v28 & 1) == 0;
  uint64_t v54 = swift_getKeyPath();
  id v55 = *(id *)(v23 + 112);
  static Alignment.center.getter();
  if (static UIContentSizeCategory.>= infix(_:_:)())
  {
    static Alignment.center.getter();
    if (static Alignment.== infix(_:_:)()) {
      static Alignment.leading.getter();
    }
  }

  *(_DWORD *)((char *)&v117 + 1) = *(_DWORD *)v135;
  DWORD1(v117) = *(_DWORD *)&v135[3];
  *(_DWORD *)((char *)&v118 + 1) = *(_DWORD *)v134;
  DWORD1(v118) = *(_DWORD *)&v134[3];
  *(_DWORD *)((char *)&v120 + 9) = *(_DWORD *)v132;
  HIDWORD(v120) = *(_DWORD *)&v132[3];
  *(_DWORD *)((char *)&v121 + 1) = *(_DWORD *)v131;
  DWORD1(v121) = *(_DWORD *)&v131[3];
  *(_DWORD *)((char *)&v123 + 9) = *(_DWORD *)v137;
  HIDWORD(v123) = *(_DWORD *)&v137[3];
  char v115 = v51 & 1;
  *(void *)&long long v116 = v93;
  *((void *)&v116 + 1) = v92;
  LOBYTE(v117) = v81;
  *((void *)&v117 + 1) = v91;
  LOBYTE(v118) = v85;
  *((void *)&v118 + 1) = v90;
  *(void *)&long long v119 = v89;
  *((void *)&v119 + 1) = v88;
  *(void *)&long long v120 = v87;
  BYTE8(v120) = v82;
  LOBYTE(v121) = v86;
  *((void *)&v121 + 1) = v40;
  *(void *)&long long v122 = v42;
  *((void *)&v122 + 1) = v44;
  *(void *)&long long v123 = v46;
  BYTE8(v123) = v84;
  *(void *)&long long v124 = KeyPath;
  *((void *)&v124 + 1) = v94;
  *(void *)&long long v125 = v83;
  *((void *)&v125 + 1) = v109;
  long long v126 = v80;
  LOBYTE(v127) = v51 & 1;
  *((void *)&v127 + 1) = v54;
  BOOL v128 = v53;
  long long v145 = v123;
  long long v144 = v122;
  BOOL v150 = v53;
  long long v149 = v127;
  long long v148 = v80;
  long long v146 = v124;
  long long v147 = v125;
  long long v143 = v121;
  long long v142 = v120;
  long long v141 = v119;
  long long v140 = v118;
  long long v138 = v116;
  long long v139 = v117;
  sub_100166530(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v129, 0.0, 1, 0.0, 1);
  sub_10005BEB0((uint64_t)&v116);
  id v56 = *(id *)(v23 + 112);
  char v57 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v57) {
    double v58 = 1.0;
  }
  else {
    double v58 = 0.5;
  }
  uint64_t v59 = swift_getKeyPath();
  memcpy(v114, v129, 0x138uLL);
  v114[39] = v59;
  *(double *)&v114[40] = v58;
  memcpy(v113, v114, sizeof(v113));
  uint64_t v60 = v111;
  if (v112 != v110[4] || v111 != (void *)v110[5]) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_100004010(&qword_100381D30);
  sub_10005C2A0();
  uint64_t v61 = (uint64_t)v97;
  View.accessibility(hidden:)();
  sub_10005C75C((uint64_t)v114);
  char v62 = v98;
  OpacityTransition.init()();
  static Animation.easeInOut.getter();
  uint64_t v63 = sub_100243A64(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v65 = v101;
  uint64_t v64 = v102;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v62, v64);
  uint64_t v67 = v105;
  uint64_t v66 = v106;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v99, v65, v106);
  v113[0] = v64;
  v113[1] = v63;
  swift_getOpaqueTypeConformance2();
  uint64_t v68 = AnyTransition.init<A>(_:)();
  uint64_t v69 = (uint64_t)v107;
  sub_10000D2A0(v61, (uint64_t)v107, &qword_1003915A0);
  *(void *)(v69 + *(int *)(v96 + 36)) = v68;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v65, v66);
  sub_10000950C(v61, &qword_1003915A0);
  v113[0] = 0;
  v113[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  v113[0] = 0x6554737574617453;
  v113[1] = 0xEB000000002D7478;
  v70._uint64_t countAndFlagsBits = v112;
  v70._object = v60;
  String.append(_:)(v70);
  swift_bridgeObjectRelease();
  v71._uint64_t countAndFlagsBits = 45;
  v71._object = (void *)0xE100000000000000;
  String.append(_:)(v71);
  v72._uint64_t countAndFlagsBits = Color.description.getter();
  String.append(_:)(v72);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v73 = v113[0];
  uint64_t v74 = v113[1];
  uint64_t v75 = (uint64_t)v103;
  sub_10000D2A0(v69, (uint64_t)v103, &qword_1003915A8);
  uint64_t v76 = (void *)(v75 + *(int *)(v104 + 52));
  *uint64_t v76 = v73;
  v76[1] = v74;
  sub_10000950C(v69, &qword_1003915A8);
  return sub_100243AAC(v75, v108);
}

uint64_t sub_100243990()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002439D8()
{
  return sub_100242D58((void *)(v0 + 16));
}

uint64_t sub_1002439E0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 64);

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100243A30@<X0>(uint64_t a1@<X8>)
{
  return sub_100242E74((void *)(v1 + 16), (void *)(v1 + 64), a1);
}

uint64_t sub_100243A64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100243AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003915B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100243B14()
{
  return sub_100009B18(&qword_1003915B8, (uint64_t *)&unk_1003915C0);
}

void sub_100243B98()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      swift_beginAccess();
      uint64_t v3 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v3)
      {
        uint64_t v4 = v3;
        [v3 setPreferredContentSize:*(double *)(*(void *)(v2 + 40) + 32), *(double *)(*(void *)(v2 + 40) + 40)];
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_100243C74()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] loadView", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v11 = sub_1001AE068(v2);
    [v2 setView:v11];
    swift_unknownObjectRelease();
  }
  else
  {
    id v12 = v2;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      id v16 = v12;
      id v17 = [v16 description];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v19;

      sub_1001B3178(v18, v20, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] contentProducer expired", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_100244034()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] viewDidLoad", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = (objc_class *)type metadata accessor for BannerViewController();
  v16.receiver = v2;
  v16.super_class = v11;
  [super viewDidLoad];
  [v2 setOverrideUserInterfaceStyle:2];
  id v12 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_tapGesture];
  [v12 addTarget:v2 action:"didTap"];
  id v13 = [v2 view];
  if (v13)
  {
    os_log_type_t v14 = v13;
    [v13 addGestureRecognizer:v12];
  }
  else
  {
    __break(1u);
  }
}

id sub_1002443AC(char a1, char *a2, SEL *a3)
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  id v8 = v3;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v20 = a3;
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)id v11 = 136446210;
    format = a2;
    id v12 = v8;
    id v13 = [v12 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    a3 = v20;
    sub_1001B3178(v14, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, format, v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v17 = (objc_class *)type metadata accessor for BannerViewController();
  v22.receiver = v8;
  v22.super_class = v17;
  return [super a1 & 1];
}

uint64_t sub_10024461C()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A99A0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v4 = _typeName(_:qualified:)();
    sub_1001B3178(v4, v5, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%{public}s] _isSecureForRemoteViewService", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 1;
}

uint64_t sub_1002447CC()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 138543362;
    id v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}@] _canShowWhileLocked", v5, 0xCu);
    sub_100004010((uint64_t *)&unk_1003839E0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

uint64_t sub_10024499C()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] didTap", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100202E58(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100244BE8(void *a1, double a2, double a3)
{
  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for BannerViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(double *)(v7 + 24) = a2;
  *(double *)(v7 + 32) = a3;
  id v17 = sub_1002455B8;
  uint64_t v18 = v7;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  unint64_t v15 = sub_100261174;
  unint64_t v16 = &unk_1003602F8;
  uint64_t v8 = _Block_copy(&v13);
  id v9 = v3;
  swift_release();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  id v17 = sub_1002455F8;
  uint64_t v18 = v10;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  unint64_t v15 = sub_100261174;
  unint64_t v16 = &unk_100360348;
  id v11 = _Block_copy(&v13);
  id v12 = v9;
  swift_release();
  [a1 animateAlongsideTransition:v8 completion:v11];
  _Block_release(v11);
  _Block_release(v8);
}

uint64_t sub_100244D98()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    PassthroughSubject.send(_:)();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100244EB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for BannerViewController()
{
  return self;
}

id sub_100244FE0()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

void sub_1002452E4()
{
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_contentProducer + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy20BannerViewController_tapGesture;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    objc_super v2 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    objc_super v2 = _swiftEmptySetSingleton;
  }
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_subscriptions] = v2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100245400()
{
  uint64_t v1 = v0;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1002017FC(v0);
    swift_unknownObjectRelease();
  }
  id v2 = [v0 presentableDismissalPreventionContext];
  if (v2)
  {
    uint64_t v3 = v2;
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 acquireTransitionDismissalPreventionAssertionForReason:v4];
    swift_unknownObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_dismissalPreventionAssertion] = v5;

  return swift_unknownObjectRelease();
}

id sub_1002454E4(void *a1)
{
  id v2 = v1;
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    sub_100201D48(v2, a1);
    swift_unknownObjectRelease();
  }
  id result = *(id *)&v2[OBJC_IVAR____TtC8SOSBuddy20BannerViewController_dismissalPreventionAssertion];
  if (result)
  {
    return [result invalidate];
  }
  return result;
}

uint64_t sub_100245580()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002455B8()
{
  return sub_100244D98();
}

uint64_t sub_1002455E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002455F0()
{
  return swift_release();
}

uint64_t sub_1002455F8()
{
  return sub_100244D98();
}

void sub_10024562C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (!v1 || (uint64_t v2 = v1 - 1, (*(void *)(v0 + 32) = v2) == 0))
  {
    if (*(unsigned char *)(v0 + 40) == 1)
    {
      *(unsigned char *)(v0 + 40) = 0;
      sub_100004010(&qword_100393AA0);
      sub_100019834();
      Subject<>.send()();
    }
    if (*(unsigned char *)(v0 + 41) == 1)
    {
      *(unsigned char *)(v0 + 41) = 0;
      uint64_t v3 = *(void (**)(void))(*(void *)v0 + 248);
      v3();
    }
  }
}

uint64_t sub_1002456EC()
{
  return Subject<>.send()();
}

uint64_t sub_10024572C(uint64_t result)
{
  uint64_t v1 = (unsigned char *)result;
  uint64_t v2 = *(void *)(result + 32);
  if (!v2 || (uint64_t v3 = v2 - 1, (*(void *)(result + 32) = v3) == 0))
  {
    if (*(unsigned char *)(result + 40))
    {
      *(unsigned char *)(result + 40) = 0;
      sub_100004010(&qword_100393AA0);
      sub_100019834();
      id result = Subject<>.send()();
    }
    if (v1[41] == 1)
    {
      v1[41] = 0;
      return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 248))(result);
    }
  }
  return result;
}

uint64_t sub_1002457D0()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SuspendableModelBase()
{
  return self;
}

void sub_100245834()
{
  uint64_t v1 = *(void *)(v0 + 32);
  BOOL v2 = __CFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2) {
    __break(1u);
  }
  else {
    *(void *)(v0 + 32) = v3;
  }
}

uint64_t sub_100245850()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  __chkstk_darwin(v2);
  unint64_t v20 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  id v6 = [self mainBundle];
  id v7 = [v6 bundleIdentifier];

  if (v7)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0x80000001002C5A40;
    uint64_t v8 = 0xD000000000000012;
  }
  sub_10000FDBC();
  v24[0] = v8;
  v24[1] = v10;
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = 7697454;
  v11._object = (void *)0xE300000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v24[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v20, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  *(void *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9958);
  swift_retain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v1;
    v24[0] = v16;
    *(_DWORD *)unint64_t v15 = 136446210;
    type metadata accessor for TelephonyUtilitiesAgent();
    swift_retain();
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v23 = sub_1001B3178(v17, v18, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] init", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_100245CAC()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for TelephonyUtilitiesAgent();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100245E84()
{
  sub_100245CAC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TelephonyUtilitiesAgent()
{
  return self;
}

uint64_t sub_100245EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(v3 + 16);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  long long v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1002462FC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_1003603E8;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  objc_super v19 = &_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_1002461CC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100246204(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a2();
  }
  uint64_t v6 = *(void *)(Strong + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(Strong + 24);
    swift_bridgeObjectRetain();
    sub_10024690C(v7, v6, (uint64_t)a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1002465D4((void (*)(void))a2, a3);
  }
  return swift_release();
}

uint64_t sub_1002462BC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002462FC()
{
  return sub_100246204(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100246308(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100246318()
{
  return swift_release();
}

uint64_t sub_100246320(uint64_t a1, uint64_t (*a2)(BOOL), uint64_t a3, const char *a4, const char *a5)
{
  if (!a1)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000FD84(v15, (uint64_t)qword_1003A9958);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v16, a5, v17, 2u);
      swift_slowDealloc();
    }
    goto LABEL_11;
  }
  swift_errorRetain();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9958);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v9, v10))
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_11:

    return a2(a1 == 0);
  }
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  uint64_t v12 = a2;
  uint64_t v13 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v11 = 138543362;
  swift_errorRetain();
  uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v13 = v19;
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v9, v10, a4, v11, 0xCu);
  sub_100004010((uint64_t *)&unk_1003839E0);
  swift_arrayDestroy();
  a2 = v12;
  swift_slowDealloc();
  swift_slowDealloc();

  swift_errorRelease();
  return a2(a1 == 0);
}

void sub_1002465D4(void (*a1)(void), uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)TUCallProviderManager) init];
  id v5 = [v4 emergencyProvider];
  id v6 = [objc_allocWithZone((Class)TUDialRequest) initWithProvider:v5];

  [v6 setDialType:1];
  if ([v6 isValid])
  {
    id v7 = [self sharedInstance];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    aBlock[4] = sub_100246D38;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100273438;
    aBlock[3] = &unk_100360488;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 launchAppForDialRequest:v6 completion:v9];
    _Block_release(v9);

    id v4 = v6;
  }
  else
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000FD84(v10, (uint64_t)qword_1003A9958);
    id v7 = v6;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138543362;
      aBlock[0] = v7;
      id v14 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v15 = v7;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to start emergency call, dial request is invalid: %{public}@", v13, 0xCu);
      sub_100004010((uint64_t *)&unk_1003839E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    a1(0);
  }
}

void sub_10024690C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [objc_allocWithZone((Class)TUCallProviderManager) init];
  id v7 = [v6 defaultProvider];
  id v8 = [objc_allocWithZone((Class)TUDialRequest) initWithProvider:v7];

  id v9 = objc_allocWithZone((Class)TUHandle);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithType:2 value:v10];

  [v8 setHandle:v11];
  [v8 setShowUIPrompt:1];
  if ([v8 isValid])
  {
    id v12 = [self sharedInstance];
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = a4;
    aBlock[4] = sub_100246D0C;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100273438;
    aBlock[3] = &unk_100360438;
    id v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v12 launchAppForDialRequest:v8 completion:v14];
    _Block_release(v14);
  }
  else
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000FD84(v15, (uint64_t)qword_1003A9958);
    id v21 = v8;
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138543362;
      aBlock[0] = v21;
      id v20 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v19 = v21;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to start emergency call, dial request is invalid: %{public}@", v18, 0xCu);
      sub_100004010((uint64_t *)&unk_1003839E0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_100246CD4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100246D0C(uint64_t a1)
{
  return sub_100246320(a1, *(uint64_t (**)(BOOL))(v1 + 16), *(void *)(v1 + 24), "Failed to start simulated emergency call, error: %{public}@", "Started simulated emergency call");
}

uint64_t sub_100246D38(uint64_t a1)
{
  return sub_100246320(a1, *(uint64_t (**)(BOOL))(v1 + 16), *(void *)(v1 + 24), "Failed to start emergency call, error: %{public}@", "Started emergency call");
}

ValueMetadata *type metadata accessor for CallEmergencyServicesButtonView()
{
  return &type metadata for CallEmergencyServicesButtonView;
}

uint64_t sub_100246D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100246DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v60 = a2;
  uint64_t v62 = a1;
  uint64_t v82 = a5;
  uint64_t v78 = type metadata accessor for KeyboardShortcut();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for ButtonBorderShape();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for BorderedButtonStyle();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  id v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_100391860);
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  id v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004010(&qword_100391868);
  uint64_t v12 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  id v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004010(&qword_100391870);
  __chkstk_darwin(v67);
  os_log_type_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004010(&qword_100391878);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004010(&qword_100391880);
  __chkstk_darwin(v69);
  Swift::String v70 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100004010(&qword_100391888);
  __chkstk_darwin(v80);
  uint64_t v81 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_100391890);
  __chkstk_darwin(v21 - 8);
  unint64_t v79 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    sub_100008F88(a3 + 6, v23);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 32))(v83, v23, v24);
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v26 = v60;
    _OWORD v25[2] = v62;
    v25[3] = v26;
    uint64_t v27 = v66;
    Swift::String v25[4] = a3;
    v25[5] = v27;
    sub_100247A38();
    swift_retain();
    swift_retain();
    Button.init(action:label:)();
    BorderedButtonStyle.init()();
    sub_100009B18(&qword_1003918A0, &qword_100391860);
    sub_100248E8C((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    uint64_t v28 = v63;
    uint64_t v29 = v65;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v9, v29);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v28);
    uint64_t v30 = v73;
    static ButtonBorderShape.capsule.getter();
    uint64_t KeyPath = swift_getKeyPath();
    char v32 = (uint64_t *)&v16[*(int *)(v67 + 36)];
    uint64_t v33 = sub_100004010(&qword_100381038);
    uint64_t v34 = v74;
    uint64_t v35 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)v32 + *(int *)(v33 + 28), v30, v75);
    *char v32 = KeyPath;
    uint64_t v36 = v68;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v68);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v35);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v36);
    uint64_t v37 = v76;
    static KeyboardShortcut.defaultAction.getter();
    sub_100248B6C();
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v37, v78);
    sub_10000950C((uint64_t)v16, &qword_100391870);
    uint64_t v38 = static Color.green.getter();
    uint64_t v39 = swift_getKeyPath();
    *(void *)&long long v85 = v38;
    swift_retain();
    uint64_t v40 = AnyShapeStyle.init<A>(_:)();
    uint64_t v41 = v71;
    uint64_t v42 = (uint64_t)v70;
    uint64_t v43 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v18, v72);
    swift_release();
    uint64_t v44 = (uint64_t *)(v42 + *(int *)(v69 + 36));
    *uint64_t v44 = v39;
    v44[1] = v40;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v43);
    double v45 = *(double *)(*sub_100008F88(v83, v84) + 216);
    double v46 = *(double *)(*sub_100008F88(v83, v84) + 216);
    static Alignment.center.getter();
    if (v45 > v46)
    {
      static os_log_type_t.fault.getter();
      uint64_t v47 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v48 = v81;
    sub_10000D2A0(v42, v81, &qword_100391880);
    uint64_t v49 = (_OWORD *)(v48 + *(int *)(v80 + 36));
    long long v50 = v90;
    v49[4] = v89;
    v49[5] = v50;
    v49[6] = v91;
    long long v51 = v86;
    *uint64_t v49 = v85;
    v49[1] = v51;
    long long v52 = v88;
    v49[2] = v87;
    v49[3] = v52;
    sub_10000950C(v42, &qword_100391880);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v53 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v55 = v54;
    char v57 = v56 & 1;
    sub_100248CBC();
    uint64_t v58 = (uint64_t)v79;
    View.accessibility(label:)();
    sub_100033364(v53, v55, v57);
    swift_bridgeObjectRelease();
    sub_10000950C(v48, &qword_100391888);
    sub_10000D544(v58, v82, &qword_100391890);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v83);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100248E8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10024786C(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_100248E8C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100247970@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_100248E8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002479E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100246DA4(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1002479EC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100247A2C()
{
  return sub_10024786C(*(void *)(v0 + 16));
}

unint64_t sub_100247A38()
{
  unint64_t result = qword_100391898;
  if (!qword_100391898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391898);
  }
  return result;
}

uint64_t sub_100247A8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_100388DA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100388DA8);
  __chkstk_darwin(v7);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100388DB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v13 = a1[9];
    uint64_t v14 = a1[10];
    sub_100008F88(a1 + 6, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 32))(v21, v13, v14);
    *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    uint64_t v15 = sub_100004010(&qword_100388DB8);
    sub_100247D68((uint64_t)a1, &v6[*(int *)(v15 + 44)]);
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v6, (uint64_t)v9, &qword_100388DA0);
    os_log_type_t v16 = &v9[*(int *)(v7 + 36)];
    long long v17 = v27;
    *((_OWORD *)v16 + 4) = v26;
    *((_OWORD *)v16 + 5) = v17;
    *((_OWORD *)v16 + 6) = v28;
    long long v18 = v23;
    *(_OWORD *)os_log_type_t v16 = v22;
    *((_OWORD *)v16 + 1) = v18;
    long long v19 = v25;
    *((_OWORD *)v16 + 2) = v24;
    *((_OWORD *)v16 + 3) = v19;
    sub_10000950C((uint64_t)v6, &qword_100388DA0);
    sub_10014B4B0();
    View.accessibility(hidden:)();
    sub_10000950C((uint64_t)v9, &qword_100388DA8);
    sub_10000D544((uint64_t)v12, a2, &qword_100388DB0);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v21);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100248E8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100247D68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v103 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v103);
  long long v120 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100004010(&qword_100388DD0);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v104 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004010(&qword_100388DD8);
  __chkstk_darwin(v102);
  uint64_t v108 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100004010(&qword_100388DE0);
  __chkstk_darwin(v105);
  uint64_t v111 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100004010(&qword_100388DE8);
  __chkstk_darwin(v110);
  uint64_t v113 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v109 = (uint64_t)&v97 - v9;
  __chkstk_darwin(v10);
  uint64_t v112 = (uint64_t)&v97 - v11;
  uint64_t v12 = type metadata accessor for Font.Leading();
  uint64_t v117 = *(void *)(v12 - 8);
  uint64_t v118 = v12;
  __chkstk_darwin(v12);
  char v115 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004010(&qword_1003828F8);
  __chkstk_darwin(v98);
  uint64_t v15 = (uint64_t *)((char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for Image.Scale();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  long long v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_1003828E8);
  __chkstk_darwin(v20);
  long long v22 = (uint64_t *)((char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_100004010(&qword_1003828D0);
  __chkstk_darwin(v100);
  long long v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100004010(&qword_100388DF0);
  uint64_t v25 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v99 = (uint64_t)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100004010(&qword_100388DF8);
  __chkstk_darwin(v27 - 8);
  uint64_t v101 = (uint64_t)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v122 = (uint64_t)&v97 - v30;
  if (!a1) {
    goto LABEL_11;
  }
  uint64_t v121 = a1;
  id v31 = *(id *)(a1 + 112);
  UIContentSizeCategory v119 = UIContentSizeCategoryAccessibilityExtraLarge;
  char v32 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v32)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v122, 1, 1, v116);
    uint64_t v33 = enum case for Font.Leading.tight(_:);
    uint64_t v35 = v117;
    uint64_t v34 = v118;
    uint64_t v36 = v115;
  }
  else
  {
    uint64_t v37 = Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for Image.Scale.medium(_:), v16);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)v15 + *(int *)(v98 + 28), v19, v16);
    *uint64_t v15 = KeyPath;
    sub_10000D2A0((uint64_t)v15, (uint64_t)v22 + *(int *)(v20 + 36), &qword_1003828F8);
    *long long v22 = v37;
    swift_retain();
    sub_10000950C((uint64_t)v15, &qword_1003828F8);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    swift_release();
    static Font.title3.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v33 = enum case for Font.Leading.tight(_:);
    uint64_t v35 = v117;
    uint64_t v34 = v118;
    uint64_t v36 = v115;
    (*(void (**)(char *, void, uint64_t))(v117 + 104))(v115, enum case for Font.Leading.tight(_:), v118);
    uint64_t v39 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    uint64_t v40 = swift_getKeyPath();
    sub_10000D2A0((uint64_t)v22, (uint64_t)v24, &qword_1003828E8);
    uint64_t v41 = (uint64_t *)&v24[*(int *)(v100 + 36)];
    *uint64_t v41 = v40;
    v41[1] = v39;
    sub_10000950C((uint64_t)v22, &qword_1003828E8);
    uint64_t v42 = static Color.green.getter();
    uint64_t v43 = v99;
    sub_10000D2A0((uint64_t)v24, v99, &qword_1003828D0);
    uint64_t v44 = v116;
    *(void *)(v43 + *(int *)(v116 + 36)) = v42;
    sub_10000950C((uint64_t)v24, &qword_1003828D0);
    uint64_t v45 = v122;
    sub_10000D544(v43, v122, &qword_100388DF0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v44);
  }
  id v46 = [self mainBundle];
  v127._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v127._object = (void *)0x80000001002D3BC0;
  v47._object = (void *)0x80000001002D1190;
  v47._uint64_t countAndFlagsBits = 0xD000000000000017;
  v48._uint64_t countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  Swift::String v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v127);

  Swift::String v123 = v49;
  sub_100033310();
  uint64_t v50 = Text.init<A>(_:)();
  uint64_t v52 = v51;
  char v54 = v53 & 1;
  static Font.title3.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v36, v33, v34);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
  uint64_t v55 = Text.font(_:)();
  uint64_t v57 = v56;
  char v59 = v58;
  swift_release();
  char v60 = v59 & 1;
  sub_100033364(v50, v52, v54);
  swift_bridgeObjectRelease();
  static Color.green.getter();
  uint64_t v61 = Text.foregroundColor(_:)();
  uint64_t v63 = v62;
  char v65 = v64;
  uint64_t v67 = v66;
  swift_release();
  sub_100033364(v55, v57, v60);
  swift_bridgeObjectRelease();
  uint64_t v68 = v121;
  id v69 = *(id *)(v121 + 112);
  char v70 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v71 = swift_getKeyPath();
  v123._uint64_t countAndFlagsBits = v61;
  v123._object = v63;
  LOBYTE(v124._countAndFlagsBits) = v65 & 1;
  v124._object = v67;
  v125._uint64_t countAndFlagsBits = v71;
  v125._object = (void *)((v70 & 1) == 0);
  char v126 = v70 & 1;
  uint64_t v72 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v73 = type metadata accessor for DynamicTypeSize();
  uint64_t v74 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 104))(v120, v72, v73);
  sub_100248E8C(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
LABEL_11:
    type metadata accessor for UIMetrics();
    sub_100248E8C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  sub_100004010(&qword_1003887A0);
  sub_10013A764();
  sub_100009B18(&qword_10037F030, &qword_10037F010);
  uint64_t v75 = v104;
  View.dynamicTypeSize<A>(_:)();
  sub_10000950C(v74, &qword_10037F010);
  sub_100033364(v123._countAndFlagsBits, (uint64_t)v123._object, v124._countAndFlagsBits);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v76 = swift_getKeyPath();
  uint64_t v77 = v106;
  uint64_t v78 = (uint64_t)v108;
  uint64_t v79 = v107;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v108, v75, v107);
  uint64_t v80 = v78 + *(int *)(v102 + 36);
  *(void *)uint64_t v80 = v76;
  *(unsigned char *)(v80 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v79);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v81 = v111;
  sub_10000D2A0(v78, v111, &qword_100388DD8);
  uint64_t v82 = (Swift::String *)(v81 + *(int *)(v105 + 36));
  Swift::String v83 = v124;
  *uint64_t v82 = v123;
  v82[1] = v83;
  v82[2] = v125;
  sub_10000950C(v78, &qword_100388DD8);
  id v84 = *(id *)(v68 + 112);
  LOBYTE(v78) = static UIContentSizeCategory.>= infix(_:_:)();

  if (v78) {
    double v85 = 1.0;
  }
  else {
    double v85 = 0.5;
  }
  uint64_t v86 = swift_getKeyPath();
  uint64_t v87 = v109;
  sub_10000D2A0(v81, v109, &qword_100388DE0);
  uint64_t v88 = v87 + *(int *)(v110 + 36);
  *(void *)uint64_t v88 = v86;
  *(double *)(v88 + 8) = v85;
  sub_10000950C(v81, &qword_100388DE0);
  uint64_t v89 = v112;
  sub_10000D544(v87, v112, &qword_100388DE8);
  uint64_t v90 = v122;
  uint64_t v91 = v101;
  sub_10000D2A0(v122, v101, &qword_100388DF8);
  uint64_t v92 = v113;
  sub_10000D2A0(v89, v113, &qword_100388DE8);
  uint64_t v93 = v114;
  *uint64_t v114 = 0;
  *((unsigned char *)v93 + 8) = 1;
  char v94 = (int *)sub_100004010(&qword_100388E00);
  sub_10000D2A0(v91, (uint64_t)v93 + v94[12], &qword_100388DF8);
  sub_10000D2A0(v92, (uint64_t)v93 + v94[16], &qword_100388DE8);
  uint64_t v95 = (char *)v93 + v94[20];
  *(void *)uint64_t v95 = 0;
  v95[8] = 1;
  sub_10000950C(v89, &qword_100388DE8);
  sub_10000950C(v90, &qword_100388DF8);
  sub_10000950C(v92, &qword_100388DE8);
  return sub_10000950C(v91, &qword_100388DF8);
}

uint64_t sub_100248B5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100247A8C(*v1, a1);
}

unint64_t sub_100248B6C()
{
  unint64_t result = qword_1003918A8;
  if (!qword_1003918A8)
  {
    sub_1000094C4(&qword_100391870);
    sub_1000094C4(&qword_100391860);
    type metadata accessor for BorderedButtonStyle();
    sub_100009B18(&qword_1003918A0, &qword_100391860);
    sub_100248E8C((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003918A8);
  }
  return result;
}

unint64_t sub_100248CBC()
{
  unint64_t result = qword_1003918B0;
  if (!qword_1003918B0)
  {
    sub_1000094C4(&qword_100391888);
    sub_100248D38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003918B0);
  }
  return result;
}

unint64_t sub_100248D38()
{
  unint64_t result = qword_1003918B8;
  if (!qword_1003918B8)
  {
    sub_1000094C4(&qword_100391880);
    sub_1000094C4(&qword_100391870);
    sub_100248B6C();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003918B8);
  }
  return result;
}

ValueMetadata *_s8SOSBuddy36CallEmergencyServicesButtonLabelViewVMa_1()
{
  return &_s8SOSBuddy36CallEmergencyServicesButtonLabelViewVN_1;
}

uint64_t sub_100248E1C()
{
  return sub_100248EE4(&qword_1003918C0, &qword_100391890, (void (*)(void))sub_100248CBC);
}

uint64_t sub_100248E58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100248E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100248EE4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    sub_100248E8C(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100248F94(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a3 + 8 * v7);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v14 = v9;
        char v12 = a1(&v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v9;
        }
        if (v12)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1002490D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v17 = a1;
  uint64_t v3 = sub_100004010(&qword_1003918F8);
  __chkstk_darwin(v3);
  uint64_t v5 = (_OWORD *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004010(&qword_100391900);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DEF8 != -1) {
    swift_once();
  }
  *uint64_t v5 = xmmword_1003918D8;
  uint64_t v10 = sub_100004010(&qword_100391908);
  sub_1002493D4((_OWORD *)v2, (uint64_t)v5 + *(int *)(v10 + 44));
  uint64_t v11 = *(void *)(v2 + 16);
  if (v11)
  {
    __int16 v18 = *(_WORD *)(v11 + 56);
    char v12 = (_OWORD *)swift_allocObject();
    long long v13 = *(_OWORD *)(v2 + 80);
    v12[5] = *(_OWORD *)(v2 + 64);
    v12[6] = v13;
    _OWORD v12[7] = *(_OWORD *)(v2 + 96);
    long long v14 = *(_OWORD *)(v2 + 16);
    v12[1] = *(_OWORD *)v2;
    v12[2] = v14;
    long long v15 = *(_OWORD *)(v2 + 48);
    v12[3] = *(_OWORD *)(v2 + 32);
    void v12[4] = v15;
    sub_10024DCA0(v2);
    sub_100004010(&qword_1003852F0);
    sub_100009B18(&qword_100391910, &qword_1003918F8);
    sub_10024F7E0((unint64_t *)&qword_1003852F8, &qword_1003852F0, (void (*)(void))sub_1000B31C0);
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_10000950C((uint64_t)v5, &qword_1003918F8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v9, v6);
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002493D4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_100004010(&qword_100391920);
  uint64_t v55 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v52 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v51 = (char *)&v50 - v6;
  uint64_t v7 = sub_100004010(&qword_100391928);
  __chkstk_darwin(v7 - 8);
  uint64_t v53 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v50 - v10;
  uint64_t v12 = sub_100004010(&qword_100391930);
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_100391938);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  __int16 v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v50 - v20;
  *(void *)long long v14 = static HorizontalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  uint64_t v22 = 1;
  v14[16] = 1;
  uint64_t v23 = sub_100004010(&qword_100391940);
  sub_100249A4C(a1, &v14[*(int *)(v23 + 44)]);
  long long v24 = (uint64_t (*)())swift_allocObject();
  long long v25 = a1[5];
  *((_OWORD *)v24 + 5) = a1[4];
  *((_OWORD *)v24 + 6) = v25;
  *((_OWORD *)v24 + 7) = a1[6];
  long long v26 = a1[1];
  *((_OWORD *)v24 + 1) = *a1;
  *((_OWORD *)v24 + 2) = v26;
  long long v27 = a1[3];
  *((_OWORD *)v24 + 3) = a1[2];
  *((_OWORD *)v24 + 4) = v27;
  sub_10000D2A0((uint64_t)v14, (uint64_t)v18, &qword_100391930);
  uint64_t v28 = (uint64_t (**)())&v18[*(int *)(v16 + 44)];
  CGContext *v28 = sub_10024DD1C;
  v28[1] = v24;
  void v28[2] = 0;
  v28[3] = 0;
  sub_10024DCA0((uint64_t)a1);
  uint64_t v29 = (uint64_t)v14;
  uint64_t v30 = v3;
  uint64_t v31 = v55;
  sub_10000950C(v29, &qword_100391930);
  sub_10000D544((uint64_t)v18, (uint64_t)v21, &qword_100391938);
  long long v66 = a1[4];
  long long v58 = a1[4];
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  if (v56 != 1)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v11, v22, 1, v30);
    sub_10000D2A0((uint64_t)v21, (uint64_t)v18, &qword_100391938);
    uint64_t v46 = v53;
    sub_10000D2A0((uint64_t)v11, v53, &qword_100391928);
    uint64_t v47 = v54;
    sub_10000D2A0((uint64_t)v18, v54, &qword_100391938);
    uint64_t v48 = sub_100004010(&qword_100391948);
    sub_10000D2A0(v46, v47 + *(int *)(v48 + 48), &qword_100391928);
    sub_10000950C((uint64_t)v11, &qword_100391928);
    sub_10000950C((uint64_t)v21, &qword_100391938);
    sub_10000950C(v46, &qword_100391928);
    return sub_10000950C((uint64_t)v18, &qword_100391938);
  }
  long long v56 = v66;
  State.projectedValue.getter();
  long long v32 = v58;
  char v33 = v59;
  if (qword_10037DEF8 != -1) {
    swift_once();
  }
  long long v58 = v32;
  char v59 = v33;
  uint64_t v60 = *((void *)&xmmword_1003918D8 + 1);
  uint64_t v61 = sub_10024BF7C;
  uint64_t v62 = 0;
  uint64_t v63 = xmmword_1003918D8;
  char v64 = sub_10024BFA4;
  uint64_t v65 = 0;
  uint64_t v34 = *((void *)a1 + 2);
  if (v34)
  {
    uint64_t v35 = *(void *)(v34 + 96);
    if (v35)
    {
      uint64_t v36 = *(void *)(v35 + 16);
      if (v36)
      {
        uint64_t v37 = v36
            + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_messagesInProgress;
        swift_beginAccess();
        if (*(void *)(*(void *)v37 + 16)) {
          char v38 = 1;
        }
        else {
          char v38 = *(void *)(v36
        }
                          + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight
                          + 8) != 0;
      }
      else
      {
        char v38 = 0;
      }
    }
    else
    {
      char v38 = 2;
    }
    char v57 = v38;
    uint64_t v39 = (_OWORD *)swift_allocObject();
    long long v40 = a1[5];
    v39[5] = a1[4];
    v39[6] = v40;
    v39[7] = a1[6];
    long long v41 = a1[1];
    v39[1] = *a1;
    void v39[2] = v41;
    long long v42 = a1[3];
    v39[3] = a1[2];
    v39[4] = v42;
    sub_10024DCA0((uint64_t)a1);
    sub_100004010(&qword_100391950);
    sub_100004010((uint64_t *)&unk_10038EBC0);
    sub_10024DD58(&qword_100391958, &qword_100391950, (void (*)(void))sub_10024DD30);
    sub_10024DE80();
    uint64_t v43 = v52;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v31 = v55;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
    uint64_t v45 = v51;
    v44(v51, v43, v30);
    v44(v11, v45, v30);
    uint64_t v22 = 0;
    goto LABEL_13;
  }
  type metadata accessor for TryOutModel();
  sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100249A4C@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_100004010(&qword_100391988);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100391990);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v38 = (uint64_t)&v37 - v11;
  uint64_t v12 = sub_100004010(&qword_100391998);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = static HorizontalAlignment.center.getter();
  uint64_t v19 = (_OWORD *)swift_allocObject();
  long long v20 = a1[5];
  void v19[5] = a1[4];
  v19[6] = v20;
  v19[7] = a1[6];
  long long v21 = a1[1];
  v19[1] = *a1;
  void v19[2] = v21;
  long long v22 = a1[3];
  void v19[3] = a1[2];
  Swift::String v19[4] = v22;
  sub_10024DCA0((uint64_t)a1);
  char v23 = static Edge.Set.all.getter();
  uint64_t v40 = v18;
  uint64_t v41 = 0;
  char v42 = 1;
  uint64_t v43 = sub_10024DF48;
  uint64_t v44 = v19;
  char v45 = v23;
  long long v46 = xmmword_1002C36B0;
  long long v47 = xmmword_1002B5660;
  char v48 = 0;
  long long v24 = (_OWORD *)swift_allocObject();
  long long v25 = a1[5];
  void v24[5] = a1[4];
  v24[6] = v25;
  _OWORD v24[7] = a1[6];
  long long v26 = a1[1];
  v24[1] = *a1;
  uint64_t v24[2] = v26;
  long long v27 = a1[3];
  v24[3] = a1[2];
  _OWORD v24[4] = v27;
  sub_10024DCA0((uint64_t)a1);
  sub_100004010(&qword_1003919A0);
  sub_10024EDA8(&qword_1003919A8, &qword_1003919A0, &qword_1003919B0, &qword_1003919B8);
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v28 = sub_100004010(&qword_1003919C0);
  sub_10024B3B4(a1, &v5[*(int *)(v28 + 44)]);
  LOBYTE(v18) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v5, (uint64_t)v9, &qword_100391988);
  uint64_t v29 = &v9[*(int *)(v7 + 44)];
  char *v29 = v18;
  *(_OWORD *)(v29 + 8) = xmmword_1002B5670;
  *(_OWORD *)(v29 + 24) = xmmword_1002B5670;
  v29[40] = 0;
  sub_10000950C((uint64_t)v5, &qword_100391988);
  uint64_t v30 = v38;
  sub_10000D544((uint64_t)v9, v38, &qword_100391990);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  long long v32 = v37;
  v31(v37, v17, v12);
  sub_10000D2A0(v30, (uint64_t)v9, &qword_100391990);
  char v33 = v39;
  v31(v39, v32, v12);
  uint64_t v34 = sub_100004010(&qword_1003919C8);
  sub_10000D2A0((uint64_t)v9, (uint64_t)&v33[*(int *)(v34 + 48)], &qword_100391990);
  sub_10000950C(v30, &qword_100391990);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
  v35(v17, v12);
  sub_10000950C((uint64_t)v9, &qword_100391990);
  return ((uint64_t (*)(char *, uint64_t))v35)(v32, v12);
}

uint64_t sub_100249E7C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = (_OWORD *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v13 = a2[5];
  void v12[4] = a2[4];
  v12[5] = v13;
  v12[6] = a2[6];
  long long v14 = a2[1];
  *uint64_t v12 = *a2;
  v12[1] = v14;
  long long v15 = a2[3];
  v12[2] = a2[2];
  v12[3] = v15;
  *a3 = sub_10024E2D4;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v11;
  return sub_10024DCA0((uint64_t)a2);
}

uint64_t sub_100249FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v81 = a4;
  uint64_t v72 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DragGesture();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100391A70);
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  __chkstk_darwin(v10);
  uint64_t v78 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ScrollViewProxy();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v82 = v14;
  long long v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004010(&qword_100391A78);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100004010(&qword_100391A80);
  __chkstk_darwin(v83);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004010(&qword_100391A88);
  uint64_t v73 = *(void *)(v20 - 8);
  uint64_t v74 = v20;
  __chkstk_darwin(v20);
  char v70 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004010(&qword_100391A90);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v67 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.vertical.getter();
  uint64_t v84 = a2;
  uint64_t v85 = a3;
  sub_100004010(&qword_100391A98);
  sub_100009B18(&qword_100391AA0, &qword_100391A98);
  char v64 = v17;
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v23 = *(void *)(a3 + 16);
  if (v23)
  {
    uint64_t v24 = *(void *)(v23 + 32);
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v63(v15, a1, v12);
    uint64_t v61 = a1;
    uint64_t v25 = *(unsigned __int8 *)(v13 + 80);
    long long v58 = v15;
    uint64_t v59 = v12;
    uint64_t v62 = v25 | 7;
    long long v26 = (uint64_t (*)(uint64_t))swift_allocObject();
    long long v27 = *(_OWORD *)(a3 + 80);
    *((_OWORD *)v26 + 5) = *(_OWORD *)(a3 + 64);
    *((_OWORD *)v26 + 6) = v27;
    *((_OWORD *)v26 + 7) = *(_OWORD *)(a3 + 96);
    long long v28 = *(_OWORD *)(a3 + 16);
    *((_OWORD *)v26 + 1) = *(_OWORD *)a3;
    *((_OWORD *)v26 + 2) = v28;
    long long v29 = *(_OWORD *)(a3 + 48);
    *((_OWORD *)v26 + 3) = *(_OWORD *)(a3 + 32);
    *((_OWORD *)v26 + 4) = v29;
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v60((char *)v26 + ((v25 + 128) & ~v25), v15, v12);
    uint64_t v30 = v65;
    uint64_t v31 = v64;
    uint64_t v32 = v66;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v19, v64, v66);
    uint64_t v33 = v83;
    *(void *)&v19[*(int *)(v83 + 52)] = v24;
    uint64_t v34 = (uint64_t (**)(uint64_t))&v19[*(int *)(v33 + 56)];
    void *v34 = sub_10024E47C;
    v34[1] = v26;
    swift_retain();
    sub_10024DCA0(a3);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
    long long v86 = *(_OWORD *)(a3 + 48);
    sub_100004010(&qword_100391A68);
    State.wrappedValue.getter();
    uint64_t v35 = v58;
    uint64_t v36 = v59;
    v63(v58, v61, v59);
    uint64_t v37 = (v25 + 16) & ~v25;
    unint64_t v38 = (v82 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    v60((char *)(v39 + v37), v35, v36);
    uint64_t v40 = (_OWORD *)(v39 + v38);
    long long v41 = *(_OWORD *)(a3 + 80);
    v40[4] = *(_OWORD *)(a3 + 64);
    v40[5] = v41;
    v40[6] = *(_OWORD *)(a3 + 96);
    long long v42 = *(_OWORD *)(a3 + 16);
    *uint64_t v40 = *(_OWORD *)a3;
    v40[1] = v42;
    long long v43 = *(_OWORD *)(a3 + 48);
    v40[2] = *(_OWORD *)(a3 + 32);
    void v40[3] = v43;
    sub_10024DCA0(a3);
    uint64_t v44 = sub_100009B18(&qword_100391AA8, &qword_100391A80);
    char v45 = v70;
    uint64_t v46 = v83;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_10000950C((uint64_t)v19, &qword_100391A80);
    static CoordinateSpaceProtocol<>.local.getter();
    long long v47 = v75;
    DragGesture.init<A>(minimumDistance:coordinateSpace:)();
    char v48 = (_OWORD *)swift_allocObject();
    long long v49 = *(_OWORD *)(a3 + 80);
    v48[5] = *(_OWORD *)(a3 + 64);
    v48[6] = v49;
    v48[7] = *(_OWORD *)(a3 + 96);
    long long v50 = *(_OWORD *)(a3 + 16);
    v48[1] = *(_OWORD *)a3;
    uint64_t v48[2] = v50;
    long long v51 = *(_OWORD *)(a3 + 48);
    v48[3] = *(_OWORD *)(a3 + 32);
    v48[4] = v51;
    sub_10024DCA0(a3);
    sub_10024E678(&qword_100391A00, (void (*)(uint64_t))&type metadata accessor for DragGesture);
    sub_10024E678(&qword_100391AB0, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
    uint64_t v53 = v77;
    uint64_t v52 = v78;
    Gesture<>.onChanged(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v47, v53);
    static GestureMask.all.getter();
    *(void *)&long long v86 = v46;
    *((void *)&v86 + 1) = &type metadata for Double;
    uint64_t v87 = v44;
    uint64_t v88 = &protocol witness table for Double;
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100391AB8, &qword_100391A70);
    uint64_t v54 = v67;
    uint64_t v55 = v74;
    uint64_t v56 = v80;
    View.simultaneousGesture<A>(_:including:)();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v56);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v55);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v69 + 32))(v81, v54, v71);
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10024A9A4@<X0>(_OWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.center.getter();
  sub_10024ABC8(a1, (uint64_t)v28);
  *(_OWORD *)&v29[103] = v28[6];
  *(_OWORD *)&v29[119] = v28[7];
  *(_OWORD *)&v29[135] = v28[8];
  *(_OWORD *)&v29[151] = v28[9];
  *(_OWORD *)&v29[39] = v28[2];
  *(_OWORD *)&v29[55] = v28[3];
  *(_OWORD *)&v29[71] = v28[4];
  *(_OWORD *)&v29[87] = v28[5];
  *(_OWORD *)&v29[7] = v28[0];
  char v30 = 1;
  *(_OWORD *)&v29[23] = v28[1];
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v5 = Namespace.wrappedValue.getter();
  long long v31 = (unint64_t)v4;
  v32[0] = 1;
  long long v6 = *(_OWORD *)&v29[128];
  *(_OWORD *)&v32[113] = *(_OWORD *)&v29[112];
  long long v7 = *(_OWORD *)&v29[112];
  *(_OWORD *)&v32[129] = *(_OWORD *)&v29[128];
  long long v8 = *(_OWORD *)&v29[144];
  *(_OWORD *)&v32[145] = *(_OWORD *)&v29[144];
  long long v9 = *(_OWORD *)&v29[64];
  *(_OWORD *)&v32[49] = *(_OWORD *)&v29[48];
  long long v10 = *(_OWORD *)&v29[48];
  *(_OWORD *)&v32[65] = *(_OWORD *)&v29[64];
  long long v11 = *(_OWORD *)&v29[96];
  *(_OWORD *)&v32[81] = *(_OWORD *)&v29[80];
  long long v12 = *(_OWORD *)&v29[80];
  *(_OWORD *)&v32[97] = *(_OWORD *)&v29[96];
  long long v13 = *(_OWORD *)&v29[16];
  *(_OWORD *)&v32[1] = *(_OWORD *)v29;
  long long v14 = *(_OWORD *)v29;
  *(_OWORD *)&v32[17] = *(_OWORD *)&v29[16];
  long long v15 = *(_OWORD *)&v29[32];
  *(_OWORD *)&v32[33] = *(_OWORD *)&v29[32];
  long long v16 = *(_OWORD *)&v32[128];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v32[112];
  *(_OWORD *)(a2 + 144) = v16;
  *(_OWORD *)(a2 + 160) = *(_OWORD *)&v32[144];
  long long v17 = *(_OWORD *)&v32[64];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v32[48];
  *(_OWORD *)(a2 + 80) = v17;
  long long v18 = *(_OWORD *)&v32[96];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v32[80];
  *(_OWORD *)(a2 + 112) = v18;
  long long v19 = *(_OWORD *)v32;
  *(_OWORD *)a2 = v31;
  *(_OWORD *)(a2 + 16) = v19;
  long long v20 = *(_OWORD *)&v32[32];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v32[16];
  *(_OWORD *)(a2 + 48) = v20;
  long long v40 = v15;
  long long v39 = v13;
  long long v38 = v14;
  long long v44 = v11;
  long long v43 = v12;
  long long v42 = v9;
  *(void *)&v32[160] = *(void *)&v29[159];
  char v35 = 1;
  char v34 = v23;
  char v33 = v25;
  *(void *)(a2 + 176) = *(void *)&v29[159];
  *(void *)(a2 + 184) = 0;
  *(unsigned char *)(a2 + 192) = 1;
  *(void *)(a2 + 200) = v22;
  *(unsigned char *)(a2 + 208) = v23;
  *(void *)(a2 + 216) = v24;
  *(unsigned char *)(a2 + 224) = v25;
  *(void *)(a2 + 232) = v26;
  *(void *)(a2 + 240) = v27;
  *(void *)(a2 + 248) = v5;
  v36[0] = v4;
  v36[1] = 0;
  char v37 = 1;
  long long v41 = v10;
  *(void *)&v47[15] = *(void *)&v29[159];
  *(_OWORD *)long long v47 = v8;
  long long v46 = v6;
  long long v45 = v7;
  sub_10024E6DC((uint64_t)&v31);
  return sub_10024E728((uint64_t)v36);
}

uint64_t sub_10024ABC8@<X0>(_OWORD *a1@<X1>, uint64_t a2@<X8>)
{
  GeometryProxy.size.getter();
  double v5 = v4;
  long long v28 = a1[2];
  sub_100004010(&qword_100391A68);
  State.wrappedValue.getter();
  double v6 = v5 - v27;
  if (v6 > 0.0)
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v24 = BYTE8(v28);
    uint64_t v25 = v28;
    uint64_t v22 = v30;
    uint64_t v23 = v29;
    uint64_t v21 = 1;
    uint64_t v7 = v31;
    uint64_t v8 = v32;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v23 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = static HorizontalAlignment.center.getter();
  type metadata accessor for TryOutModel();
  sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  uint64_t v10 = EnvironmentObject.init()();
  uint64_t v12 = v11;
  long long v13 = (_OWORD *)swift_allocObject();
  long long v14 = a1[5];
  v13[5] = a1[4];
  _OWORD v13[6] = v14;
  v13[7] = a1[6];
  long long v15 = a1[1];
  v13[1] = *a1;
  _OWORD v13[2] = v15;
  long long v16 = a1[3];
  v13[3] = a1[2];
  v13[4] = v16;
  sub_10024DCA0((uint64_t)a1);
  uint64_t v17 = static Alignment.center.getter();
  uint64_t v19 = v18;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_10024E7D8;
  *(void *)(result + 24) = v13;
  *(_DWORD *)(a2 + 65) = LODWORD(v27);
  *(_DWORD *)(a2 + 68) = *(_DWORD *)((char *)&v27 + 3);
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v26;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v26[3];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = v21;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v24;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 64) = v6 <= 0.0;
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = v10;
  *(void *)(a2 + 104) = v12;
  *(void *)(a2 + 112) = sub_10024D750;
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = v17;
  *(void *)(a2 + 136) = v19;
  *(void *)(a2 + 144) = sub_10024F850;
  *(void *)(a2 + 152) = result;
  return result;
}

uint64_t sub_10024AE1C()
{
  return swift_release();
}

uint64_t sub_10024AE8C(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[2];
  if (!v4)
  {
    type metadata accessor for TryOutModel();
    uint64_t v19 = &qword_1003827A8;
    long long v20 = type metadata accessor for TryOutModel;
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)(v4 + 96);
  if (!v5) {
    return result;
  }
  uint64_t v7 = result;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    uint64_t v9 = *(void **)(v8 + 48);
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(result);
  uint64_t v22 = v7;
  swift_retain();
  uint64_t v10 = sub_100248F94((uint64_t (*)(uint64_t *))sub_10004A48C, (uint64_t)&v21, (unint64_t)v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (qword_10037DDC0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000FD84(v11, (uint64_t)qword_1003A9A18);
    swift_retain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      long long v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v24 = 0;
      uint64_t v25 = a3;
      *(_DWORD *)long long v14 = 136446210;
      uint64_t v27 = v15;
      uint64_t v16 = (*(uint64_t (**)(void))(*(void *)v10 + 96))();
      uint64_t v26 = sub_1001B3178(v16, v17, &v27);
      a3 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Item to scroll to - %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v18 = swift_release_n();
    }
    __chkstk_darwin(v18);
    uint64_t v22 = a3;
    uint64_t v23 = v10;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    if (*a2)
    {
      LOBYTE(v27) = 0;
      swift_retain();
      PassthroughSubject.send(_:)();
      swift_release();
      swift_release();
      return swift_release();
    }
    type metadata accessor for AppEvents();
    uint64_t v19 = (unint64_t *)&qword_10037F000;
    long long v20 = type metadata accessor for AppEvents;
LABEL_19:
    sub_10024E678(v19, (void (*)(uint64_t))v20);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  return swift_release();
}

uint64_t sub_10024B244(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10024B2E0()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t sub_10024B34C()
{
  uint64_t result = DragGesture.Value.translation.getter();
  if (v1 > 0.0)
  {
    sub_100004010(&qword_100391918);
    return FocusState.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_10024B3B4@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v3 = sub_100004010(&qword_1003919D0);
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  __chkstk_darwin(v3);
  uint64_t v77 = (char *)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004010(&qword_1003919D8);
  __chkstk_darwin(v75);
  uint64_t v78 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_1003919E0);
  uint64_t v87 = *(void *)(v6 - 8);
  uint64_t v88 = v6;
  __chkstk_darwin(v6);
  uint64_t v76 = (uint64_t)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_1003919E8);
  __chkstk_darwin(v8 - 8);
  uint64_t v90 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v89 = (uint64_t)v74 - v11;
  *(void *)&long long v82 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v82);
  *(void *)&long long v83 = type metadata accessor for DragGesture();
  uint64_t v84 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  os_log_type_t v13 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004010(&qword_1003919F0);
  uint64_t v85 = *(void *)(v14 - 8);
  uint64_t v86 = v14;
  __chkstk_darwin(v14);
  uint64_t v81 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_1003919F8);
  uint64_t v94 = *(void *)(v16 - 8);
  uint64_t v95 = v16;
  __chkstk_darwin(v16);
  uint64_t v93 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v92 = (char *)v74 - v19;
  type metadata accessor for AppEvents();
  sub_10024E678((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v20 = EnvironmentObject.init()();
  uint64_t v22 = v21;
  uint64_t v23 = type metadata accessor for TryOutModel();
  v74[1] = sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  v74[2] = v23;
  uint64_t v24 = EnvironmentObject.init()();
  uint64_t v26 = v25;
  type metadata accessor for UIMetrics();
  sub_10024E678((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v27 = EnvironmentObject.init()();
  *(void *)&long long v107 = v20;
  *((void *)&v107 + 1) = v22;
  *(void *)&long long v108 = v24;
  *((void *)&v108 + 1) = v26;
  *(void *)uint64_t v109 = v27;
  *(void *)&v109[8] = v28;
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v29 = (_OWORD *)swift_allocObject();
  long long v30 = a1[5];
  v29[5] = a1[4];
  v29[6] = v30;
  v29[7] = a1[6];
  long long v31 = a1[1];
  v29[1] = *a1;
  void v29[2] = v31;
  long long v32 = a1[3];
  v29[3] = a1[2];
  v29[4] = v32;
  sub_10024DCA0((uint64_t)a1);
  sub_10024E678(&qword_100391A00, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  char v33 = v81;
  uint64_t v34 = v83;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v13, v34);
  static GestureMask.all.getter();
  sub_10024DFAC();
  sub_100009B18(&qword_100391A10, &qword_1003919F0);
  char v35 = v93;
  uint64_t v36 = v86;
  View.gesture<A>(_:including:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v33, v36);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v92, v35, v95);
  uint64_t v37 = *((void *)a1 + 2);
  if (v37)
  {
    uint64_t v38 = *(void *)(v37 + 96);
    if (v38 && (uint64_t v39 = *(void *)(v38 + 16)) != 0 && *(unsigned char *)(v39 + 16) == 2)
    {
      uint64_t v40 = v89;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v89, 1, 1, v88);
    }
    else
    {
      long long v98 = a1[4];
      sub_100004010(&qword_10037ED78);
      State.projectedValue.getter();
      uint64_t v85 = *((void *)&v107 + 1);
      uint64_t v86 = v107;
      LODWORD(v84) = v108;
      uint64_t v41 = EnvironmentObject.init()();
      uint64_t v43 = v42;
      *(void *)&long long v98 = 0;
      *((void *)&v98 + 1) = 0xE000000000000000;
      State.init(wrappedValue:)();
      long long v83 = v107;
      uint64_t v44 = v108;
      *(void *)&long long v98 = 0;
      *((void *)&v98 + 1) = 0xE000000000000000;
      State.init(wrappedValue:)();
      long long v82 = v107;
      uint64_t v45 = v108;
      long long v46 = (_OWORD *)swift_allocObject();
      long long v47 = a1[5];
      v46[5] = a1[4];
      v46[6] = v47;
      v46[7] = a1[6];
      long long v48 = a1[1];
      v46[1] = *a1;
      v46[2] = v48;
      long long v49 = a1[3];
      v46[3] = a1[2];
      v46[4] = v49;
      sub_10024DCA0((uint64_t)a1);
      uint64_t v50 = static Alignment.center.getter();
      uint64_t v52 = v51;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = sub_10024E004;
      *(void *)(v53 + 24) = v46;
      *(void *)&long long v107 = v41;
      *((void *)&v107 + 1) = v43;
      *(void *)&long long v108 = v86;
      *((void *)&v108 + 1) = v85;
      v109[0] = v84;
      *(_OWORD *)&v109[8] = v83;
      long long v110 = v82;
      *(void *)&v109[24] = v44;
      *(void *)&long long v111 = v45;
      *((void *)&v111 + 1) = sub_10024D750;
      *(void *)&long long v112 = 0;
      *((void *)&v112 + 1) = v50;
      *(void *)&long long v113 = v52;
      *((void *)&v113 + 1) = sub_100037A38;
      uint64_t v114 = v53;
      long long v104 = v112;
      long long v105 = v113;
      uint64_t v106 = v53;
      long long v100 = *(_OWORD *)v109;
      long long v101 = *(_OWORD *)&v109[16];
      long long v102 = v82;
      long long v103 = v111;
      long long v98 = v107;
      long long v99 = v108;
      long long v96 = a1[5];
      char v97 = *((unsigned char *)a1 + 96);
      sub_100004010(&qword_100391918);
      FocusState.projectedValue.getter();
      sub_100004010(&qword_100391A18);
      sub_10024E088();
      uint64_t v54 = v77;
      View.focused(_:)();
      swift_release();
      swift_release();
      sub_10024E21C((uint64_t)&v107);
      if (qword_10037DEF8 != -1) {
        swift_once();
      }
      uint64_t v55 = *((void *)&xmmword_1003918D8 + 1);
      uint64_t v57 = (uint64_t)v78;
      uint64_t v56 = v79;
      uint64_t v58 = v80;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v78, v54, v80);
      uint64_t v59 = (void *)(v57 + *(int *)(v75 + 36));
      *uint64_t v59 = v55;
      v59[1] = sub_10024BE88;
      v59[2] = 0;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v58);
      uint64_t v60 = xmmword_1003918D8;
      uint64_t v61 = v76;
      sub_10000D2A0(v57, v76, &qword_1003919D8);
      uint64_t v62 = v88;
      uint64_t v63 = (void *)(v61 + *(int *)(v88 + 36));
      *uint64_t v63 = v60;
      v63[1] = sub_10024F854;
      v63[2] = 0;
      sub_10000950C(v57, &qword_1003919D8);
      uint64_t v40 = v89;
      sub_10000D544(v61, v89, &qword_1003919E0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v40, 0, 1, v62);
    }
    uint64_t v65 = (uint64_t)v90;
    char v64 = v91;
    uint64_t v67 = v94;
    uint64_t v66 = v95;
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
    uint64_t v69 = v92;
    char v70 = v93;
    v68(v93, v92, v95);
    sub_10000D2A0(v40, v65, &qword_1003919E8);
    v68(v64, v70, v66);
    uint64_t v71 = sub_100004010(&qword_100391A60);
    sub_10000D2A0(v65, (uint64_t)&v64[*(int *)(v71 + 48)], &qword_1003919E8);
    sub_10000950C(v40, &qword_1003919E8);
    uint64_t v72 = *(void (**)(char *, uint64_t))(v67 + 8);
    v72(v69, v66);
    sub_10000950C(v65, &qword_1003919E8);
    return ((uint64_t (*)(char *, uint64_t))v72)(v70, v66);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10024BE88()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10024BEB0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 96);
    if (v2 && *(void *)(v2 + 16))
    {
      swift_retain();
      swift_retain();
      sub_1000441BC();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10024BF7C()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10024BFA4()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_10024BFCC(uint64_t result, unsigned char *a2)
{
  if ((*a2 & 1) == 0)
  {
    __chkstk_darwin(result);
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  return result;
}

void sub_10024C068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_10037DDC0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9A18);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    sub_100004010(&qword_1003852F0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, (uint64_t *)&v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Demo transcript: TryOut state changed: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    unsigned int v11 = *(unsigned __int16 *)(v10 + 56);
    if (v11 >= 0x4000 && (v11 >> 9 > 0x7E || (v11 & 0xC000) != 0x4000))
    {
      long long v12 = *(_OWORD *)(a3 + 80);
      char v13 = *(unsigned char *)(a3 + 96);
      sub_100004010(&qword_100391918);
      FocusState.wrappedValue.setter();
    }
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_10024C2BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002490D0(a1);
}

uint64_t sub_10024C308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_100004010(&qword_100391AD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_100391AD8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v15 = sub_100004010(&qword_100391AE0);
  sub_10024C4BC(a1, a2, a3, (uint64_t)&v10[*(int *)(v15 + 44)]);
  uint64_t v16 = static Alignment.center.getter();
  uint64_t v18 = v17;
  sub_10000D2A0((uint64_t)v10, (uint64_t)v14, &qword_100391AD0);
  uint64_t v19 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v19 = 0x4038000000000000;
  *((void *)v19 + 1) = 9;
  *((void *)v19 + 2) = 0x3FF0000000000000;
  *((void *)v19 + 3) = v16;
  *((void *)v19 + 4) = v18;
  sub_10000950C((uint64_t)v10, &qword_100391AD0);
  char v20 = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v14, a4, &qword_100391AD8);
  uint64_t v21 = a4 + *(int *)(sub_100004010(&qword_100391AE8) + 36);
  *(unsigned char *)uint64_t v21 = v20;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(unsigned char *)(v21 + 40) = 1;
  return sub_10000950C((uint64_t)v14, &qword_100391AD8);
}

uint64_t sub_10024C4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v31 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v32 = a4;
  uint64_t v4 = sub_100004010(&qword_100391AF0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoundedRectangle();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (_OWORD *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100004010(&qword_100391AF8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = static HorizontalAlignment.leading.getter();
  sub_10024C7AC(v33);
  v34[368] = 0;
  memcpy(&v34[7], v33, 0x168uLL);
  char v16 = static Edge.Set.all.getter();
  v35[0] = v15;
  v35[1] = 0x4020000000000000;
  LOBYTE(v35[2]) = 0;
  memcpy((char *)&v35[2] + 1, v34, 0x16FuLL);
  LOBYTE(v35[48]) = v16;
  memset(&v35[49], 0, 32);
  LOBYTE(v35[53]) = 1;
  uint64_t v17 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v18 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v19 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  __asm { FMOV            V0.2D, #24.0 }
  *uint64_t v11 = _Q0;
  sub_100034580((uint64_t)v11, (uint64_t)v7);
  v7[*(int *)(v5 + 44)] = 0;
  sub_10000D2A0((uint64_t)v7, (uint64_t)&v14[*(int *)(v12 + 36)], &qword_100391AF0);
  memcpy(v14, v35, 0x1A9uLL);
  sub_10024EB3C((uint64_t)v35);
  sub_10000950C((uint64_t)v7, &qword_100391AF0);
  sub_1000345E4((uint64_t)v11);
  sub_10024EBEC((uint64_t)v33);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v30;
  *(void *)(v25 + 16) = v29;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = v31;
  sub_10024ECE8();
  swift_retain();
  swift_retain();
  View.onTapGesture(count:perform:)();
  swift_release();
  return sub_10000950C((uint64_t)v14, &qword_100391AF8);
}

uint64_t sub_10024C7AC@<X0>(void *a1@<X8>)
{
  uint64_t v11 = static VerticalAlignment.center.getter();
  sub_10024CB90((uint64_t)v22);
  char v25 = 1;
  *(_OWORD *)&v24[135] = v22[8];
  *(_OWORD *)&v24[151] = v22[9];
  *(_OWORD *)&v24[167] = v22[10];
  *(_OWORD *)&v24[183] = v23;
  *(_OWORD *)&v24[71] = v22[4];
  *(_OWORD *)&v24[87] = v22[5];
  *(_OWORD *)&v24[103] = v22[6];
  *(_OWORD *)&v24[119] = v22[7];
  *(_OWORD *)&_OWORD v24[7] = v22[0];
  *(_OWORD *)&v24[23] = v22[1];
  *(_OWORD *)&v24[39] = v22[2];
  *(_OWORD *)&v24[55] = v22[3];
  long long v35 = *(_OWORD *)&v24[144];
  long long v36 = *(_OWORD *)&v24[160];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)&v24[176];
  *(void *)&v37[15] = *((void *)&v23 + 1);
  long long v32 = *(_OWORD *)&v24[96];
  long long v33 = *(_OWORD *)&v24[112];
  long long v34 = *(_OWORD *)&v24[128];
  long long v28 = *(_OWORD *)&v24[32];
  long long v29 = *(_OWORD *)&v24[48];
  long long v30 = *(_OWORD *)&v24[64];
  long long v31 = *(_OWORD *)&v24[80];
  long long v26 = *(_OWORD *)v24;
  long long v27 = *(_OWORD *)&v24[16];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v1 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = static Alignment.leading.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v13, 0.0, 1, 0.0, 1, v8, v9, v1, v3, v7, v5);
  sub_100033364(v1, v3, v7);
  swift_bridgeObjectRelease();
  v38[0] = v11;
  v38[1] = 0;
  v39[0] = 1;
  *(_OWORD *)&v39[145] = v35;
  *(_OWORD *)&v39[161] = v36;
  *(_OWORD *)&v39[177] = *(_OWORD *)v37;
  *(_OWORD *)&v39[81] = v31;
  *(_OWORD *)&v39[97] = v32;
  *(_OWORD *)&v39[113] = v33;
  *(_OWORD *)&v39[129] = v34;
  *(_OWORD *)&v39[17] = v27;
  *(_OWORD *)&v39[33] = v28;
  *(_OWORD *)&v39[49] = v29;
  *(_OWORD *)&v39[65] = v30;
  *(_OWORD *)&v39[1] = v26;
  v40[6] = v19;
  v40[7] = v20;
  v40[2] = v15;
  void v40[3] = v16;
  v40[4] = v17;
  v40[5] = v18;
  v40[0] = v13;
  v40[1] = v14;
  __src[11] = *(_OWORD *)&v39[160];
  __src[12] = *(_OWORD *)&v39[176];
  __src[7] = *(_OWORD *)&v39[96];
  __src[8] = *(_OWORD *)&v39[112];
  __src[9] = *(_OWORD *)&v39[128];
  __src[10] = *(_OWORD *)&v39[144];
  __src[3] = *(_OWORD *)&v39[32];
  __src[4] = *(_OWORD *)&v39[48];
  __src[5] = *(_OWORD *)&v39[64];
  __src[6] = *(_OWORD *)&v39[80];
  char v40[8] = v21;
  __src[0] = (unint64_t)v11;
  __src[1] = *(_OWORD *)v39;
  __src[2] = *(_OWORD *)&v39[16];
  *(_OWORD *)((char *)&__src[18] + 8) = v18;
  *(_OWORD *)((char *)&__src[19] + 8) = v19;
  *(_OWORD *)((char *)&__src[20] + 8) = v20;
  *(_OWORD *)((char *)&__src[21] + 8) = v21;
  *(_OWORD *)((char *)&__src[16] + 8) = v16;
  *(_OWORD *)((char *)&__src[17] + 8) = v17;
  *(_OWORD *)((char *)&__src[14] + 8) = v14;
  *(_OWORD *)((char *)&__src[15] + 8) = v15;
  *(void *)&v39[192] = *(void *)&v37[15];
  *(void *)&__src[13] = *(void *)&v37[15];
  *(_OWORD *)((char *)&__src[13] + 8) = v13;
  memcpy(a1, __src, 0x168uLL);
  v42[6] = v19;
  unsigned char v42[7] = v20;
  v42[8] = v21;
  void v42[2] = v15;
  v42[3] = v16;
  v42[4] = v17;
  v42[5] = v18;
  v42[0] = v13;
  v42[1] = v14;
  sub_10024EEA0((uint64_t)v38);
  sub_10024EF1C((uint64_t)v40);
  sub_10024EF5C((uint64_t)v42);
  long long v54 = v35;
  long long v55 = v36;
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v37;
  long long v50 = v31;
  long long v51 = v32;
  long long v52 = v33;
  long long v53 = v34;
  long long v46 = v27;
  long long v47 = v28;
  long long v48 = v29;
  long long v49 = v30;
  v43[0] = v11;
  v43[1] = 0;
  char v44 = 1;
  *(void *)&v56[15] = *(void *)&v37[15];
  long long v45 = v26;
  return sub_10024EF9C((uint64_t)v43);
}

uint64_t sub_10024CB90@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v60._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v60._object = (void *)0x80000001002CB6D0;
  v3._object = (void *)0x80000001002CB6B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v60);

  Swift::String v48 = v5;
  sub_100033310();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.headline.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  sub_100033364(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v18 = static Alignment.leading.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v48, 0.0, 1, 0.0, 1, v18, v19, v11, v13, v15 & 1, v17);
  sub_100033364(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  long long v35 = v54;
  long long v36 = v55;
  long long v37 = v56;
  long long v31 = v50;
  long long v32 = v51;
  long long v33 = v52;
  long long v34 = v53;
  Swift::String v29 = v48;
  long long v30 = v49;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = Image.init(systemName:)();
  uint64_t v22 = static Font.body.getter();
  uint64_t v23 = swift_getKeyPath();
  long long v43 = v35;
  long long v44 = v36;
  long long v45 = v37;
  long long v39 = v31;
  long long v40 = v32;
  long long v41 = v33;
  long long v42 = v34;
  v38[0] = v29;
  v38[1] = v30;
  *(void *)&long long v46 = KeyPath;
  *((void *)&v46 + 1) = 1;
  char v47 = 0;
  *(unsigned char *)(a1 + 160) = 0;
  long long v24 = v40;
  *(_OWORD *)(a1 + 64) = v41;
  *(_OWORD *)(a1 + 80) = v34;
  long long v25 = v44;
  *(_OWORD *)(a1 + 96) = v43;
  *(_OWORD *)(a1 + 112) = v25;
  long long v26 = v39;
  *(_OWORD *)a1 = v38[0];
  *(_OWORD *)(a1 + 16) = v30;
  *(_OWORD *)(a1 + 32) = v26;
  *(_OWORD *)(a1 + 48) = v24;
  long long v27 = v46;
  *(_OWORD *)(a1 + 128) = v45;
  *(_OWORD *)(a1 + 144) = v27;
  *(void *)(a1 + 168) = v21;
  *(void *)(a1 + 176) = v23;
  *(void *)(a1 + 184) = v22;
  sub_10024F028((uint64_t)v38);
  long long v54 = v35;
  long long v55 = v36;
  long long v56 = v37;
  long long v50 = v31;
  long long v51 = v32;
  long long v52 = v33;
  long long v53 = v34;
  Swift::String v48 = v29;
  long long v49 = v30;
  uint64_t v57 = KeyPath;
  uint64_t v58 = 1;
  char v59 = 0;
  return sub_10024F07C((uint64_t)&v48);
}

uint64_t sub_10024CE68()
{
  return swift_release();
}

uint64_t sub_10024CED8@<X0>(uint64_t a1@<X8>)
{
  return sub_10024C308(*(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_10024CEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100391B38);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v10 = *(void *)(a1 + 96);
    if (v10 && *(void *)(v10 + 16)) {
      uint64_t v11 = (void *)swift_bridgeObjectRetain();
    }
    else {
      uint64_t v11 = _swiftEmptyArrayStorage;
    }
    v14[1] = v11;
    swift_getKeyPath();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    swift_retain();
    sub_100004010(&qword_1003881D0);
    sub_100004010(&qword_100391B40);
    sub_100009B18(&qword_100391B48, &qword_1003881D0);
    sub_10024F15C();
    ForEach<>.init(_:id:content:)();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10024D118@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(unsigned __int8 *)(*(void *)result + 16);
  if (v5 == 4)
  {
    type metadata accessor for TryOutTranscriptFooterItem(0);
    if (swift_dynamicCastClass()) {
      swift_retain();
    }
    sub_100004010(&qword_100391B70);
    sub_100004010(&qword_100391BC0);
    sub_10024F290();
    sub_10024F4CC();
    uint64_t result = _ConditionalContent<>.init(storage:)();
    long long v6 = v20;
    long long v7 = v21;
    uint64_t v8 = v22;
    __int16 v9 = v23;
    if (v24) {
      __int16 v10 = 256;
    }
    else {
      __int16 v10 = 0;
    }
LABEL_14:
    __int16 v11 = v10 | v9;
    goto LABEL_23;
  }
  if (v5 != 2)
  {
    if (v5 != 1)
    {
      uint64_t v8 = 0;
      long long v6 = 0uLL;
      __int16 v11 = -256;
      long long v7 = 0uLL;
      goto LABEL_23;
    }
    type metadata accessor for TryOutTranscriptStatusItem(0);
    if (swift_dynamicCastClass()) {
      swift_retain();
    }
    swift_retain();
    sub_100004010(&qword_100391B80);
    sub_100004010(&qword_100391B98);
    sub_10024F2CC();
    sub_10024F35C();
    _ConditionalContent<>.init(storage:)();
    sub_10024F5C0(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
    sub_100004010(&qword_100391B70);
    sub_100004010(&qword_100391BC0);
    sub_10024F290();
    sub_10024F4CC();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    uint64_t result = sub_10024F630(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
    long long v6 = v20;
    long long v7 = v21;
    uint64_t v8 = v22;
    __int16 v9 = v23;
    if (v24) {
      __int16 v10 = 256;
    }
    else {
      __int16 v10 = 0;
    }
    goto LABEL_14;
  }
  type metadata accessor for TryOutTranscriptMessageItem(0);
  uint64_t v14 = swift_dynamicCastClass();
  uint64_t v19 = a4;
  if (v14)
  {
    char v15 = (void *)swift_allocObject();
    long long v15[2] = a2;
    void v15[3] = a3;
    v15[4] = v14;
    swift_retain();
    swift_retain_n();
    uint64_t v16 = sub_10024F67C;
  }
  else
  {
    uint64_t v16 = 0;
    char v15 = 0;
  }
  uint64_t v18 = (uint64_t)v16;
  sub_10024F55C(v14, (uint64_t)v16, (uint64_t)v15, 0);
  sub_100004010(&qword_100391B80);
  sub_100004010(&qword_100391B98);
  sub_10024F2CC();
  sub_10024F35C();
  _ConditionalContent<>.init(storage:)();
  sub_10024F5C0(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
  sub_100004010(&qword_100391B70);
  sub_100004010(&qword_100391BC0);
  sub_10024F290();
  sub_10024F4CC();
  _ConditionalContent<>.init(storage:)();
  sub_10024F5CC(v14, v18, (uint64_t)v15, 0);
  uint64_t result = sub_10024F630(v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
  long long v6 = v20;
  long long v7 = v21;
  uint64_t v8 = v22;
  if (v24) {
    __int16 v17 = 256;
  }
  else {
    __int16 v17 = 0;
  }
  __int16 v11 = v17 | v23;
  a4 = v19;
LABEL_23:
  *(_OWORD *)a4 = v6;
  *(_OWORD *)(a4 + 16) = v7;
  *(void *)(a4 + 32) = v8;
  *(_WORD *)(a4 + 40) = v11;
  return result;
}

uint64_t sub_10024D568(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = *(void *)(result + 96);
    if (v3 && *(void *)(v3 + 16))
    {
      uint64_t v4 = a3 + OBJC_IVAR____TtC8SOSBuddy20TryOutTranscriptItem_id;
      swift_retain();
      swift_retain();
      sub_1000461E8(v4);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10024D64C@<X0>(uint64_t a1@<X8>)
{
  return sub_10024CEE4(*v1, v1[1], a1);
}

uint64_t sub_10024D658()
{
  sub_10024E83C();
  uint64_t result = VerticalAlignment.init(_:)();
  qword_1003918C8 = result;
  return result;
}

uint64_t sub_10024D688()
{
  sub_10024E890();
  uint64_t result = HorizontalAlignment.init(_:)();
  qword_1003918D0 = result;
  return result;
}

uint64_t sub_10024D6B8()
{
  if (qword_10037DEF0 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = qword_1003918D0;
  if (qword_10037DEE8 != -1) {
    uint64_t result = swift_once();
  }
  *(void *)&xmmword_1003918D8 = v0;
  *((void *)&xmmword_1003918D8 + 1) = qword_1003918C8;
  return result;
}

uint64_t sub_10024D750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

void sub_10024D790()
{
  xmmword_1003918E8 = 0uLL;
}

double sub_10024D7A0@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10037DF00 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_1003918E8;
  *a1 = xmmword_1003918E8;
  return result;
}

uint64_t sub_10024D800@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_10024E678((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  type metadata accessor for TryOutModel();
  sub_10024E678(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  uint64_t v5 = EnvironmentObject.init()();
  uint64_t v7 = v6;
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  uint64_t result = FocusState.init<>()();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = result & 1;
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = v10 & 1;
  *(void *)(a1 + 104) = 0;
  return result;
}

uint64_t destroy for TryOutTranscriptView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TryOutTranscriptView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TryOutTranscriptView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for TryOutTranscriptView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for TryOutTranscriptView()
{
  return &type metadata for TryOutTranscriptView;
}

uint64_t sub_10024DC78()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10024DC98(uint64_t a1, uint64_t a2)
{
  sub_10024C068(a1, a2, v2 + 16);
}

uint64_t sub_10024DCA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024DD1C()
{
  return sub_10024BEB0(v0 + 16);
}

uint64_t sub_10024DD28(uint64_t result, unsigned char *a2)
{
  return sub_10024BFCC(result, a2);
}

uint64_t sub_10024DD30()
{
  return sub_10024DD58(&qword_100391960, &qword_100391968, (void (*)(void))sub_10024DDD8);
}

uint64_t sub_10024DD58(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    sub_10024DE2C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024DDD8()
{
  unint64_t result = qword_100391970;
  if (!qword_100391970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391970);
  }
  return result;
}

unint64_t sub_10024DE2C()
{
  unint64_t result = qword_100391978;
  if (!qword_100391978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391978);
  }
  return result;
}

unint64_t sub_10024DE80()
{
  unint64_t result = qword_100391980;
  if (!qword_100391980)
  {
    sub_1000094C4((uint64_t *)&unk_10038EBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391980);
  }
  return result;
}

uint64_t sub_10024DEEC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10024DF48@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_100249E7C(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_10024DF54()
{
  return FocusState.wrappedValue.setter();
}

unint64_t sub_10024DFAC()
{
  unint64_t result = qword_100391A08;
  if (!qword_100391A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391A08);
  }
  return result;
}

uint64_t sub_10024E004()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10024E050()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10024E088()
{
  unint64_t result = qword_100391A20;
  if (!qword_100391A20)
  {
    sub_1000094C4(&qword_100391A18);
    sub_10024E128();
    sub_100009B18(&qword_100391A50, &qword_100391A58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391A20);
  }
  return result;
}

unint64_t sub_10024E128()
{
  unint64_t result = qword_100391A28;
  if (!qword_100391A28)
  {
    sub_1000094C4(&qword_100391A30);
    sub_10024E1C8();
    sub_100009B18(&qword_100391A40, &qword_100391A48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391A28);
  }
  return result;
}

unint64_t sub_10024E1C8()
{
  unint64_t result = qword_100391A38;
  if (!qword_100391A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391A38);
  }
  return result;
}

uint64_t sub_10024E21C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024E2BC()
{
  return sub_10024E508((uint64_t (*)(void))&type metadata accessor for GeometryProxy);
}

uint64_t sub_10024E2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_100249FE4(a1, v2 + v6, v7, a2);
}

uint64_t sub_10024E380@<X0>(uint64_t a1@<X8>)
{
  return sub_10024A9A4(*(_OWORD **)(v1 + 24), a1);
}

uint64_t sub_10024E388()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 128) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10024E47C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10024AE8C(a1, (void *)(v1 + 16), v4);
}

uint64_t sub_10024E4F0()
{
  return sub_10024E508((uint64_t (*)(void))&type metadata accessor for ScrollViewProxy);
}

uint64_t sub_10024E508(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 112;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_10024E5E0()
{
  type metadata accessor for ScrollViewProxy();

  return sub_10024B2E0();
}

uint64_t sub_10024E670()
{
  return sub_10024B34C();
}

uint64_t sub_10024E678(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10024E6C0()
{
  return sub_10024B244(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10024E6DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024E728(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024E778()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10024E7D8()
{
  return sub_10024AE1C();
}

uint64_t sub_10024E7E0()
{
  return State.wrappedValue.setter();
}

unint64_t sub_10024E83C()
{
  unint64_t result = qword_100391AC0;
  if (!qword_100391AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391AC0);
  }
  return result;
}

unint64_t sub_10024E890()
{
  unint64_t result = qword_100391AC8;
  if (!qword_100391AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391AC8);
  }
  return result;
}

ValueMetadata *_s32WarningBannerHorizontalAlignmentOMa()
{
  return &_s32WarningBannerHorizontalAlignmentON;
}

ValueMetadata *_s30WarningBannerVerticalAlignmentOMa()
{
  return &_s30WarningBannerVerticalAlignmentON;
}

uint64_t sub_10024E908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TryOutTranscriptWarningView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TryOutTranscriptWarningView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for TryOutTranscriptWarningView()
{
  return &type metadata for TryOutTranscriptWarningView;
}

ValueMetadata *type metadata accessor for SizePreferenceKey()
{
  return &type metadata for SizePreferenceKey;
}

ValueMetadata *type metadata accessor for TryOutTranscriptItemsView()
{
  return &type metadata for TryOutTranscriptItemsView;
}

uint64_t sub_10024EA28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10024EB04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10024EB20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10024EB3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 240);
  uint64_t v3 = *(void *)(a1 + 248);
  char v4 = *(unsigned char *)(a1 + 256);
  sub_100033724(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10024EBEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 216);
  uint64_t v3 = *(void *)(a1 + 224);
  char v4 = *(unsigned char *)(a1 + 232);
  sub_100033364(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100033364(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10024EC9C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10024ECDC()
{
  return sub_10024CE68();
}

unint64_t sub_10024ECE8()
{
  unint64_t result = qword_100391B00;
  if (!qword_100391B00)
  {
    sub_1000094C4(&qword_100391AF8);
    sub_10024EDA8(&qword_100391B08, &qword_100391B10, &qword_100391B18, &qword_100391B20);
    sub_100009B18(&qword_100391B28, &qword_100391AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391B00);
  }
  return result;
}

uint64_t sub_10024EDA8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    sub_100009B18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10024EE44()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_10024EEA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024EF1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024EF5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024EF9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024F028(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024F07C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024F0D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10024F11C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024F154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024D118(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_10024F15C()
{
  unint64_t result = qword_100391B50;
  if (!qword_100391B50)
  {
    sub_1000094C4(&qword_100391B40);
    sub_10024F208(&qword_100391B58, &qword_100391B60, (void (*)(void))sub_10024F290, (void (*)(void))sub_10024F4CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391B50);
  }
  return result;
}

uint64_t sub_10024F208(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10024F290()
{
  return sub_10024F208(&qword_100391B68, &qword_100391B70, (void (*)(void))sub_10024F2CC, (void (*)(void))sub_10024F35C);
}

uint64_t sub_10024F2CC()
{
  return sub_10024F7E0(&qword_100391B78, &qword_100391B80, (void (*)(void))sub_10024F308);
}

unint64_t sub_10024F308()
{
  unint64_t result = qword_100391B88;
  if (!qword_100391B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391B88);
  }
  return result;
}

unint64_t sub_10024F35C()
{
  unint64_t result = qword_100391B90;
  if (!qword_100391B90)
  {
    sub_1000094C4(&qword_100391B98);
    sub_10024F3FC(&qword_100391BA0, &qword_100391BA8, (void (*)(void))sub_10024F478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391B90);
  }
  return result;
}

uint64_t sub_10024F3FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024F478()
{
  unint64_t result = qword_100391BB0;
  if (!qword_100391BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391BB0);
  }
  return result;
}

uint64_t sub_10024F4CC()
{
  return sub_10024F7E0(&qword_100391BB8, &qword_100391BC0, (void (*)(void))sub_10024F508);
}

unint64_t sub_10024F508()
{
  unint64_t result = qword_100391BC8;
  if (!qword_100391BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391BC8);
  }
  return result;
}

uint64_t sub_10024F55C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_retain();
    sub_10001EA7C(a2);
    return sub_10001EA7C(a4);
  }
  return result;
}

uint64_t sub_10024F5C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6) {
    return sub_10024F55C(result, a2, a3, a4);
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_10024F5CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_release();
    sub_10005BEA0(a2);
    return sub_10005BEA0(a4);
  }
  return result;
}

uint64_t sub_10024F630(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6) {
    return sub_10024F5CC(result, a2, a3, a4);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_10024F63C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10024F67C()
{
  return sub_10024D568(v0[2], v0[3], v0[4]);
}

uint64_t sub_10024F688()
{
  return sub_10024F3FC(&qword_100391BD0, &qword_100391AE8, (void (*)(void))sub_10024F6CC);
}

unint64_t sub_10024F6CC()
{
  unint64_t result = qword_100391BD8;
  if (!qword_100391BD8)
  {
    sub_1000094C4(&qword_100391AD8);
    sub_100009B18(&qword_100391BE0, &qword_100391AD0);
    sub_100009B18(&qword_100391BE8, &qword_100391BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391BD8);
  }
  return result;
}

uint64_t sub_10024F790()
{
  return sub_10024F7E0(&qword_100391BF8, &qword_100391B38, (void (*)(void))sub_10024F15C);
}

uint64_t sub_10024F7E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for TryOutContinueButtonView(uint64_t a1)
{
  sub_10004C738(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10004C738(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TryOutContinueButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10004C6D4(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_10004C6D4(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TryOutContinueButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10004C6D4(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10004C738(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_10004C6D4(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_10004C738(v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v12;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TryOutContinueButtonView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10004C738(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_10004C738(v9, v10);
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[7];
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  *(void *)(a1 + 56) = v11;
  swift_release();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  swift_release();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = a2[11];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutContinueButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutContinueButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutContinueButtonView()
{
  return &type metadata for TryOutContinueButtonView;
}

uint64_t sub_10024FBDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10024FBF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v98 = a1;
  uint64_t v3 = type metadata accessor for KeyboardShortcut();
  uint64_t v89 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  __chkstk_darwin(v3);
  uint64_t v88 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for ButtonBorderShape();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  long long v83 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v82 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ControlSize();
  uint64_t v7 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004010(&qword_1003888D8);
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  char v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004010(&qword_1003888E0);
  __chkstk_darwin(v71);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100004010(&qword_1003888E8);
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v73 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004010(&qword_1003888F0);
  __chkstk_darwin(v77);
  char v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_1003888F8);
  uint64_t v86 = *(void *)(v16 - 8);
  uint64_t v87 = v16;
  __chkstk_darwin(v16);
  char v70 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100004010(&qword_100388900);
  __chkstk_darwin(v91);
  uint64_t v92 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004010(&qword_100391C00);
  uint64_t v96 = *(void *)(v19 - 8);
  uint64_t v97 = v19;
  __chkstk_darwin(v19);
  uint64_t v95 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004010(&qword_100391C08);
  __chkstk_darwin(v93);
  uint64_t v94 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = v2;
  swift_retain();
  sub_100004010(&qword_1003820A8);
  sub_1000EC694(&qword_1003820C8, &qword_1003820A8, (void (*)(void))sub_10006528C);
  Button.init(action:label:)();
  uint64_t v22 = v72;
  uint64_t v23 = v74;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v72, enum case for ControlSize.large(_:), v74);
  uint64_t KeyPath = swift_getKeyPath();
  long long v25 = (uint64_t *)&v12[*(int *)(v71 + 36)];
  uint64_t v26 = sub_100004010(&qword_10037F228);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v25 + *(int *)(v26 + 28), v22, v23);
  *long long v25 = KeyPath;
  uint64_t v27 = v75;
  uint64_t v28 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v12, v10, v76);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  Swift::String v29 = v79;
  BorderedProminentButtonStyle.init()();
  sub_10013EEB0();
  sub_100251070(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  long long v30 = v73;
  uint64_t v31 = v81;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v29, v31);
  sub_10000950C((uint64_t)v12, &qword_1003888E0);
  long long v32 = v83;
  static ButtonBorderShape.roundedRectangle.getter();
  uint64_t v33 = swift_getKeyPath();
  long long v34 = (uint64_t *)&v15[*(int *)(v77 + 36)];
  uint64_t v35 = sub_100004010(&qword_100381038);
  uint64_t v36 = v84;
  uint64_t v37 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))((char *)v34 + *(int *)(v35 + 28), v32, v85);
  uint64_t *v34 = v33;
  uint64_t v38 = v78;
  uint64_t v39 = v80;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v15, v30, v80);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v37);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v39);
  long long v40 = v88;
  static KeyboardShortcut.defaultAction.getter();
  sub_10013F150();
  long long v41 = v70;
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v40, v90);
  sub_10000950C((uint64_t)v15, &qword_1003888F0);
  long long v100 = *(_OWORD *)(v2 + 80);
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  if (v101 == 1)
  {
    uint64_t v42 = static Color.white.getter();
  }
  else
  {
    id v43 = [self systemGray4Color];
    uint64_t v42 = Color.init(uiColor:)();
  }
  uint64_t v44 = v42;
  uint64_t v45 = swift_getKeyPath();
  *(void *)&long long v100 = v44;
  swift_retain();
  uint64_t v46 = AnyShapeStyle.init<A>(_:)();
  uint64_t v48 = v86;
  uint64_t v47 = v87;
  uint64_t v49 = (uint64_t)v92;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v92, v41, v87);
  swift_release();
  long long v50 = (uint64_t *)(v49 + *(int *)(v91 + 36));
  *long long v50 = v45;
  v50[1] = v46;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v47);
  uint64_t v51 = *(void *)v2;
  LOBYTE(v45) = *(unsigned char *)(v2 + 8);
  sub_10004C6D4(*(void *)v2, v45);
  LOBYTE(v46) = sub_10004EE90(v51, v45);
  sub_10004C738(v51, v45);
  if (v46)
  {
    char v52 = 1;
  }
  else
  {
    uint64_t v53 = *(void *)(v2 + 16);
    char v54 = *(unsigned char *)(v2 + 24);
    sub_10004C6D4(v53, v54);
    char v52 = sub_10004EE90(v53, v54);
    sub_10004C738(v53, v54);
  }
  LOBYTE(v100) = v52 & 1;
  long long v55 = (_OWORD *)swift_allocObject();
  long long v56 = *(_OWORD *)(v2 + 48);
  v55[3] = *(_OWORD *)(v2 + 32);
  v55[4] = v56;
  long long v57 = *(_OWORD *)(v2 + 80);
  v55[5] = *(_OWORD *)(v2 + 64);
  v55[6] = v57;
  long long v58 = *(_OWORD *)(v2 + 16);
  v55[1] = *(_OWORD *)v2;
  void v55[2] = v58;
  sub_100250F14(v2);
  sub_10013F2FC();
  char v59 = v95;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10000950C(v49, &qword_100388900);
  Swift::String v60 = (uint64_t (*)())swift_allocObject();
  long long v61 = *(_OWORD *)(v2 + 48);
  *((_OWORD *)v60 + 3) = *(_OWORD *)(v2 + 32);
  *((_OWORD *)v60 + 4) = v61;
  long long v62 = *(_OWORD *)(v2 + 80);
  *((_OWORD *)v60 + 5) = *(_OWORD *)(v2 + 64);
  *((_OWORD *)v60 + 6) = v62;
  long long v63 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v60 + 1) = *(_OWORD *)v2;
  *((_OWORD *)v60 + 2) = v63;
  uint64_t v65 = v96;
  uint64_t v64 = v97;
  uint64_t v66 = (uint64_t)v94;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v94, v59, v97);
  uint64_t v67 = (uint64_t (**)())(v66 + *(int *)(v93 + 36));
  *uint64_t v67 = sub_10025100C;
  v67[1] = v60;
  v67[2] = 0;
  v67[3] = 0;
  sub_100250F14(v2);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v64);
  return sub_10000D544(v66, v98, &qword_100391C08);
}

uint64_t sub_10025079C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v37 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v37);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004010(&qword_100382090);
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  long long v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004010(&qword_100382098);
  __chkstk_darwin(v36);
  id v43 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_1003820A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100004010(&qword_1003820A8);
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 40);
  *(void *)&long long v46 = *(void *)(a1 + 32);
  *((void *)&v46 + 1) = v10;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  long long v46 = *(_OWORD *)(a1 + 80);
  sub_100004010(&qword_10037ED78);
  State.wrappedValue.getter();
  if (v49 == 1) {
    static Color.black.getter();
  }
  else {
    static Color.white.getter();
  }
  uint64_t v16 = Text.foregroundColor(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  swift_release();
  sub_100033364(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  *(void *)&long long v46 = v16;
  *((void *)&v46 + 1) = v18;
  char v47 = v20 & 1;
  uint64_t v48 = v22;
  uint64_t v23 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v24 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v4, v23, v24);
  sub_100251070(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    uint64_t v26 = v40;
    View.dynamicTypeSize<A>(_:)();
    sub_10000950C((uint64_t)v4, &qword_10037F010);
    sub_100033364(v46, *((uint64_t *)&v46 + 1), v47);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v29 = v42;
    uint64_t v28 = (uint64_t)v43;
    uint64_t v30 = v44;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v43, v26, v44);
    uint64_t v31 = v28 + *(int *)(v36 + 36);
    *(void *)uint64_t v31 = KeyPath;
    *(unsigned char *)(v31 + 8) = 1;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v30);
    uint64_t v32 = static Alignment.center.getter();
    uint64_t v33 = v41;
    sub_100166904(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v41, 0.0, 1, 0.0, 1, v32, v34);
    sub_10000950C(v28, &qword_100382098);
    uint64_t v35 = v38;
    sub_1002510C0(v33, v38);
    *(_WORD *)(v35 + *(int *)(v39 + 36)) = 256;
    sub_10000950C(v33, &qword_1003820A0);
    return sub_10000D544(v35, v45, &qword_1003820A8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100250CA0(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  sub_100004010(&qword_10037ED78);
  uint64_t result = State.wrappedValue.getter();
  if (v2 != v5)
  {
    uint64_t v4 = State.wrappedValue.getter();
    if (v6 == 1)
    {
      State.wrappedValue.setter();
      return State.wrappedValue.setter();
    }
    else
    {
      __chkstk_darwin(v4);
      static Animation.default.getter();
      withAnimation<A>(_:_:)();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100250DDC(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  sub_10004C6D4(*(void *)a1, v3);
  char v4 = sub_10004EE90(v2, v3);
  sub_10004C738(v2, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    char v6 = *(unsigned char *)(a1 + 24);
    sub_10004C6D4(v5, v6);
    sub_10004EE90(v5, v6);
    sub_10004C738(v5, v6);
  }
  sub_100004010(&qword_10037ED78);
  return State.wrappedValue.setter();
}

uint64_t sub_100250EA4@<X0>(uint64_t a1@<X8>)
{
  return sub_10024FBF8(a1);
}

uint64_t sub_100250EE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10025079C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100250F0C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100250CA0(a1, a2);
}

uint64_t sub_100250F14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  sub_10004C6D4(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10004C6D4(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100250FA4()
{
  sub_10004C738(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  sub_10004C738(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10025100C()
{
  return sub_100250DDC(v0 + 16);
}

uint64_t sub_100251014()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100251070(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002510C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_1003820A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10025112C()
{
  unint64_t result = qword_100391C10;
  if (!qword_100391C10)
  {
    sub_1000094C4(&qword_100391C08);
    sub_1000094C4(&qword_100388900);
    sub_10013F2FC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391C10);
  }
  return result;
}

uint64_t UIContentSizeCategory.debugDescription.getter()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    return 20053;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    return 20053;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    return 21336;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    return 21336;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    return 83;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    return 83;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
    return 77;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23) {
    return 77;
  }
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;
  if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
    return 76;
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28) {
    return 76;
  }
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;
  if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
    return 19544;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    return 19544;
  }
  uint64_t v16 = 5003352;
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;
  if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37) {
    goto LABEL_43;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38) {
    return v16;
  }
  uint64_t v16 = 1280858200;
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;
  if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42) {
    goto LABEL_43;
  }
  char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v43) {
    return v16;
  }
  uint64_t v16 = 3233857;
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;
  if (v44 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v46 == v47)
  {
LABEL_43:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
    {
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v51 = v50;
      if (v49 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v51 == v52)
      {
        swift_bridgeObjectRelease_n();
        return 3299393;
      }
      else
      {
        char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53)
        {
          return 3299393;
        }
        else
        {
          uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v56 = v55;
          if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57)
          {
            swift_bridgeObjectRelease_n();
            return 3364929;
          }
          else
          {
            char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58)
            {
              return 3364929;
            }
            else
            {
              uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v61 = v60;
              if (v59 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v61 == v62)
              {
                swift_bridgeObjectRelease_n();
                return 3430465;
              }
              else
              {
                char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v63)
                {
                  return 3430465;
                }
                else
                {
                  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v66 = v65;
                  if (v64 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v66 == v67)
                  {
                    swift_bridgeObjectRelease_n();
                    return 3496001;
                  }
                  else
                  {
                    char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v68) {
                      return 3496001;
                    }
                    else {
                      return 63;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v16;
}

uint64_t sub_1002518A4()
{
  return UIContentSizeCategory.debugDescription.getter();
}

unint64_t sub_1002518AC(char a1)
{
  unint64_t result = 0x53746E6572727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x7361655274697865;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100251974()
{
  return sub_1002518AC(*v0);
}

void sub_10025197C(uint64_t a1, char a2)
{
  char v3 = *(unsigned char *)(v2 + 96);
  if (a2)
  {
    if (*(unsigned char *)(v2 + 96)) {
      return;
    }
    goto LABEL_7;
  }
  if (*(void *)(v2 + 88) != a1) {
    char v3 = 1;
  }
  if (v3)
  {
LABEL_7:
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A99A0);
    swift_retain_n();
    char v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v11 = v8;
      sub_100004010(&qword_100382420);
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Connectivity state generation = %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_100251B6C()
{
  uint64_t v1 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v1 - 8);
  char v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(*(void *)(v0 + 48) + 32) = 0;
  swift_release();
  *(void *)(v0 + 56) = _swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  sub_1002528B4();
  *(unsigned char *)(v0 + 64) = 2;
  sub_1002528B4();
  *(_DWORD *)(v0 + 65) = 34144771;
  *(void *)(v0 + 72) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 80) = 2;
  uint64_t v4 = *(void *)(v0 + 88);
  char v5 = *(unsigned char *)(v0 + 96);
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  sub_10025197C(v4, v5);
  *(unsigned char *)(v0 + 97) = 2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__lastMainSceneIsExpectedToBeForegoundSoonAt;
  swift_beginAccess();
  sub_10002D2A8((uint64_t)v3, v7);
  swift_endAccess();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__everSeenConnectedInCone) = 2;
  uint64_t v8 = OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer) invalidate];
  uint64_t v9 = *(void **)(v0 + v8);
  *(void *)(v0 + v8) = 0;
}

uint64_t sub_100251CF0()
{
  uint64_t v0 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_100391FA8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10037F0C8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = *(void *)(Strong + 40);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v18 = v17 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
    swift_beginAccess();
    sub_10000D2A0(v18, (uint64_t)v15, &qword_10037F0C8);
    swift_release();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v19(v15, 1, 1, v0);
  }
  swift_storeEnumTagMultiPayload();
  v19(v12, 0, 1, v0);
  uint64_t v20 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10000D2A0((uint64_t)v15, (uint64_t)v6, &qword_10037F0C8);
  sub_10000D2A0((uint64_t)v12, v20, &qword_10037F0C8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v21((uint64_t)v6, 1, v0) == 1)
  {
    sub_10000950C((uint64_t)v12, &qword_10037F0C8);
    sub_10000950C((uint64_t)v15, &qword_10037F0C8);
    int v22 = v21(v20, 1, v0);
    if (v22 == 1) {
      char v23 = &qword_10037F0C8;
    }
    else {
      char v23 = &qword_100391FA8;
    }
    if (v22 == 1) {
      char v24 = -1;
    }
    else {
      char v24 = 0;
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v6, (uint64_t)v9, &qword_10037F0C8);
    if (v21(v20, 1, v0) == 1)
    {
      sub_10000950C((uint64_t)v12, &qword_10037F0C8);
      sub_10000950C((uint64_t)v15, &qword_10037F0C8);
      sub_1002562DC((uint64_t)v9);
      char v24 = 0;
      char v23 = &qword_100391FA8;
    }
    else
    {
      sub_100256338(v20, (uint64_t)v3);
      char v24 = sub_1001E5BCC((uint64_t)v9, (uint64_t)v3);
      sub_1002562DC((uint64_t)v3);
      char v23 = &qword_10037F0C8;
      sub_10000950C((uint64_t)v12, &qword_10037F0C8);
      sub_10000950C((uint64_t)v15, &qword_10037F0C8);
      sub_1002562DC((uint64_t)v9);
    }
  }
  sub_10000950C((uint64_t)v6, v23);
  return v24 & 1;
}

uint64_t sub_1002520AC()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = *(void *)(result + 32);
    swift_retain();
    swift_unknownObjectRelease();
    char v3 = *(unsigned char *)(v2 + 42);
    swift_release();
    if ((v3 & 1) == 0) {
      return 0;
    }
    if (sub_100251CF0())
    {
      char v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__everSeenConnectedInCone);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (v4)
      {
        if (Strong)
        {
          uint64_t v8 = *(void *)(*(void *)(Strong + 48) + 96);
          swift_retain();
          swift_unknownObjectRelease();
          unsigned int v9 = *(unsigned __int8 *)(*(void *)(v8 + 48) + 120);
          swift_release();
          return v9 > 1;
        }
      }
      else if (Strong)
      {
        uint64_t v6 = *(void *)(*(void *)(Strong + 48) + 96);
        swift_retain();
        swift_unknownObjectRelease();
        int v7 = *(unsigned __int8 *)(*(void *)(v6 + 48) + 120);
        swift_release();
        return v7 != 0;
      }
    }
    return 1;
  }
  return result;
}

void sub_1002521A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 56);
  uint64_t v15 = v5;
  if (a1)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_100252438(v6, v5);
    uint64_t v15 = v5;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  if (a2)
  {
LABEL_3:
    sub_1002558A8(a2);
    uint64_t v5 = v15;
  }
LABEL_4:
  if (sub_10020D384(*(void *)(v3 + 56), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v3 + 56) = v5;
    swift_bridgeObjectRelease();
    sub_1002528B4();
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      sub_100256230();
      swift_bridgeObjectRetain();
      uint64_t v11 = Set.description.getter();
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      sub_1001B3178(v11, v13, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Assertions: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_100252438(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_10012F0A0(&v14, *(unsigned __int8 *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100252594(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 56);
  if (*(void *)(v3 + 16))
  {
    if (a1) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = _swiftEmptySetSingleton;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Swift::Int v5 = sub_100255A1C((uint64_t)v4, v3);
    swift_bridgeObjectRelease();
    *(void *)(v2 + 56) = v5;
    swift_bridgeObjectRelease();
    sub_1002528B4();
    if (*(void *)(*(void *)(v2 + 56) + 16))
    {
      if (qword_10037DD98 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
      swift_retain_n();
      unint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        unint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        *(_DWORD *)unint64_t v9 = 136446210;
        sub_100256230();
        swift_bridgeObjectRetain();
        uint64_t v10 = Set.description.getter();
        unint64_t v12 = v11;
        swift_bridgeObjectRelease();
        sub_1001B3178(v10, v12, &v17);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "All assertions dismissed except %{public}s", v9, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_10037DD98 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000FD84(v13, (uint64_t)qword_1003A99A0);
      oslog = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v14, "All assertions dismissed", v15, 2u);
        swift_slowDealloc();
      }
    }
  }
}

void sub_1002528B4()
{
  uint64_t v1 = *(void **)(v0 + 48);
  if ((*(unsigned char *)(v0 + 64) & 1) != 0 || *(void *)(*(void *)(v0 + 56) + 16))
  {
    if (v1[4]) {
      return;
    }
    uint64_t v2 = v1[2];
    unint64_t v3 = v1[3];
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v1[4] = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, v2, v3);
  }
  else
  {
    v1[4] = 0;
  }

  swift_release();
}

void sub_10025297C(char a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 64);
  if ((v3 == 2 || (v3 & 1) == 0)
    && (a1 & 1) != 0
    && ((sub_100078E0C(2, *(void *)(v1 + 56)) & 1) != 0 || (sub_100078E0C(3, *(void *)(v1 + 56)) & 1) != 0))
  {
    PassthroughSubject.send(_:)();
  }
  *(unsigned char *)(v1 + 64) = a1 & 1;
  sub_1002528B4();
}

uint64_t sub_100252A04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10020CBFC((uint64_t)v4);
  uint64_t v5 = type metadata accessor for TransmissionProgress(0);
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  uint64_t result = sub_10000950C((uint64_t)v4, &qword_10037F158);
  int v8 = *(unsigned __int8 *)(v1 + 68);
  if (v8 == 2 || ((v8 & 1) == 0) == (v6 != 1))
  {
    *(unsigned char *)(v1 + 68) = v6 != 1;
    if (v6 == 1 || (sub_100251CF0() & 1) != 0)
    {
      Swift::Int v9 = sub_100265558((uint64_t)&off_10034BFE0);
      Swift::Int v10 = 0;
    }
    else
    {
      Swift::Int v10 = sub_100265558((uint64_t)&off_10034BFB8);
      Swift::Int v9 = 0;
    }
    sub_1002521A8(v10, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100252B60()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    int v4 = 9;
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)(*(void *)(Strong + 48) + 96);
  swift_retain();
  swift_unknownObjectRelease();
  int v4 = *(unsigned __int8 *)(*(void *)(v3 + 48) + 120);
  swift_release();
  uint64_t v5 = OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__everSeenConnectedInCone;
  int v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__everSeenConnectedInCone);
  if (v6 == 2)
  {
    if (v4) {
      goto LABEL_17;
    }
  }
  else
  {
    if (v6) {
      goto LABEL_17;
    }
    if (v4 == 9 || v4 != 0) {
      goto LABEL_17;
    }
  }
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A99A0);
  Swift::Int v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "First time user is connected and oriented, CA banner is less sticky now", v11, 2u);
    swift_slowDealloc();
  }

  int v4 = 0;
  *(unsigned char *)(v1 + v5) = 1;
LABEL_17:
  if (*(unsigned __int8 *)(v1 + 67) > 1u)
  {
LABEL_20:
    *(unsigned char *)(v1 + 67) = v4;
    goto LABEL_28;
  }
  if (v4 == 2)
  {
    *(unsigned char *)(v1 + 67) = 2;
  }
  else
  {
    if (v4 == 9) {
      goto LABEL_20;
    }
    *(unsigned char *)(v1 + 67) = v4;
    if (v4 != 5) {
      goto LABEL_28;
    }
  }
  Swift::Int v12 = sub_100265558((uint64_t)&off_10034C008);
  aBlock[0] = v12;
  if (*(unsigned char *)(v1 + 68))
  {
    swift_bridgeObjectRetain();
    if (sub_100251CF0())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10012F0A0(&v25, 4);
      swift_bridgeObjectRelease();
      Swift::Int v12 = aBlock[0];
    }
  }
  sub_1002521A8(v12, 0);
  swift_bridgeObjectRelease();
LABEL_28:
  if ((sub_100251CF0() & 1) != 0 && (sub_100078E0C(1, *(void *)(v1 + 56)) & 1) != 0 && (sub_1002520AC() & 1) == 0)
  {
    uint64_t v15 = OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer;
    if (!*(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer))
    {
      if (qword_10037DD98 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000FD84(v16, (uint64_t)qword_1003A99A0);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Dismissing CA banner cause connection assistance is not required anymore, starting a convenience timer", v19, 2u);
        swift_slowDealloc();
      }

      uint64_t v20 = self;
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      aBlock[4] = sub_1002562BC;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10008A9B0;
      aBlock[3] = &unk_100360C10;
      int v22 = _Block_copy(aBlock);
      swift_release();
      id v23 = [v20 scheduledTimerWithTimeInterval:0 repeats:v22 block:3.0];
      _Block_release(v22);
      char v24 = *(void **)(v1 + v15);
      *(void *)(v1 + v15) = v23;
    }
  }
  else
  {
    uint64_t v13 = OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer;
    [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer) invalidate];
    os_log_type_t v14 = *(void **)(v1 + v13);
    *(void *)(v1 + v13) = 0;
  }
}

uint64_t sub_100252F80()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100252FD8();
    return swift_release();
  }
  return result;
}

uint64_t sub_100252FD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer) invalidate];
  uint64_t v3 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = 0;

  uint64_t result = sub_100251CF0();
  if (result)
  {
    uint64_t result = sub_100078E0C(1, *(void *)(v1 + 56));
    if (result)
    {
      uint64_t result = sub_1002520AC();
      if ((result & 1) == 0)
      {
        if (qword_10037DD98 != -1) {
          swift_once();
        }
        uint64_t v5 = type metadata accessor for Logger();
        sub_10000FD84(v5, (uint64_t)qword_1003A99A0);
        int v6 = Logger.logObject.getter();
        os_log_type_t v7 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, v7, "Dismissing CA banner cause connection assistance is not required anymore", v8, 2u);
          swift_slowDealloc();
        }

        Swift::Int v9 = sub_100265558((uint64_t)&off_10034C030);
        sub_1002521A8(0, v9);
        swift_bridgeObjectRelease();
        sub_100004010(&qword_100393AA0);
        sub_100019834();
        return Subject<>.send()();
      }
    }
  }
  return result;
}

uint64_t sub_10025314C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
  if (!v4
    || (uint64_t result = sub_10020D19C(v4, *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)),
        (result & 1) == 0))
  {
    *(void *)(v2 + 72) = *(void *)(a1 + v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10025325C(a1, v2);
    char v7 = result;
    int v8 = *(unsigned __int8 *)(v2 + 80);
    BOOL v9 = v8 != 2 && (v8 & 1) == 0;
    if (v9 && (result & 1) != 0)
    {
      Swift::Int v10 = sub_100265558((uint64_t)&off_10034C080);
      Swift::Int v12 = v10;
      if (*(unsigned char *)(v2 + 68))
      {
        swift_bridgeObjectRetain();
        if (sub_100251CF0())
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10012F0A0(&v11, 4);
          swift_bridgeObjectRelease();
          Swift::Int v10 = v12;
        }
      }
      sub_1002521A8(v10, 0);
      uint64_t result = swift_bridgeObjectRelease();
    }
    *(unsigned char *)(v2 + 80) = v7 & 1;
  }
  return result;
}

BOOL sub_10025325C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions);
  Swift::Int v6 = sub_100265570((uint64_t)&off_10034C058);
  LOBYTE(v5) = sub_10020D19C(v5, v6);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0 || !*(void *)(*(void *)(a1 + v4) + 16)) {
    return 0;
  }
  if ((sub_100251CF0() & 1) == 0) {
    return 1;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v8 = Strong;
  if (Strong)
  {
    uint64_t v9 = *(void *)(*(void *)(Strong + 48) + 72);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 128);
    swift_release();
    uint64_t v11 = *(void *)(a2 + 88);
    if (*(unsigned char *)(a2 + 96))
    {
      LOBYTE(v12) = 1;
LABEL_11:
      *(void *)(a2 + 88) = v10;
      *(unsigned char *)(a2 + 96) = v8 == 0;
      sub_10025197C(v11, v12);
      uint64_t v13 = swift_unknownObjectWeakLoadStrong();
      if (v13)
      {
        uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 72);
        swift_retain();
        swift_unknownObjectRelease();
        int v15 = *(unsigned __int8 *)(*(void *)(v14 + 56) + 120);
        swift_release();
        if (v15 != 2) {
          return (v15 & 1) == 0;
        }
      }
      return 0;
    }
    uint64_t v12 = 0;
    if (v11 != v10) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v12 = 0;
    if ((*(unsigned char *)(a2 + 96) & 1) == 0)
    {
      uint64_t v10 = 0;
      uint64_t v11 = *(void *)(a2 + 88);
      goto LABEL_11;
    }
  }
  return v12;
}

uint64_t sub_1002533C0(char a1)
{
  uint64_t v2 = v1;
  if (a1) {
    goto LABEL_10;
  }
  if (!*(void *)(*(void *)(v1 + 56) + 16))
  {
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000FD84(v3, (uint64_t)qword_1003A99A0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      Swift::Int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "REVIEW THIS USE CASE (not user initiated and no assertions held). Forcing currentState for now.", v6, 2u);
      swift_slowDealloc();
    }
  }
  if (!*(void *)(*(void *)(v2 + 56) + 16)) {
LABEL_10:
  }
    char v7 = (void *)sub_100265558((uint64_t)&off_10034C0A8);
  else {
    char v7 = _swiftEmptySetSingleton;
  }
  uint64_t v10 = v7;
  if (*(unsigned char *)(v2 + 68))
  {
    swift_bridgeObjectRetain();
    if (sub_100251CF0())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10012F0A0(&v9, 4);
      swift_bridgeObjectRelease();
      char v7 = v10;
    }
  }
  sub_1002521A8((uint64_t)v7, 0);

  return swift_bridgeObjectRelease();
}

void sub_100253548(char a1)
{
  if (a1 != 2 && (a1 & 1) == 0)
  {
    uint64_t v3 = _swiftEmptySetSingleton;
    uint64_t v12 = _swiftEmptySetSingleton;
    if ((*(unsigned char *)(v1 + 68) & 1) != 0 && (sub_100251CF0() & 1) == 0)
    {
      sub_10012F0A0(&v11, 4);
      uint64_t v3 = v12;
    }
    if (v3[2])
    {
      sub_1002521A8((uint64_t)v3, 0);
      swift_bridgeObjectRelease();
      if (qword_10037DD98 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_10000FD84(v4, (uint64_t)qword_1003A99A0);
      swift_retain_n();
      os_log_type_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        char v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = (void *)swift_slowAlloc();
        *(_DWORD *)char v7 = 136446210;
        sub_100256230();
        swift_bridgeObjectRetain();
        uint64_t v8 = Set.description.getter();
        unint64_t v10 = v9;
        swift_bridgeObjectRelease();
        uint64_t v11 = sub_1001B3178(v8, v10, (uint64_t *)&v12);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "onScreenLockedDidChange: assertions: %{public}s", v7, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002537C4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_100252594(0);
    uint64_t v9 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    uint64_t v10 = v2 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__lastMainSceneIsExpectedToBeForegoundSoonAt;
    swift_beginAccess();
    sub_10002D2A8((uint64_t)v7, v10);
    swift_endAccess();
  }
  else
  {
    if (sub_1002520AC()) {
      uint64_t v8 = (void *)sub_100265558((uint64_t)&off_10034C0D0);
    }
    else {
      uint64_t v8 = _swiftEmptySetSingleton;
    }
    v18[0] = (uint64_t)v8;
    if (*(unsigned char *)(v2 + 68))
    {
      swift_bridgeObjectRetain();
      if (sub_100251CF0())
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10012F0A0(&v19, 4);
        swift_bridgeObjectRelease();
        uint64_t v8 = (void *)v18[0];
      }
    }
    sub_1002521A8((uint64_t)v8, 0);
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v2 + 97) = a1;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A99A0);
  swift_retain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446210;
    sub_100256230();
    swift_bridgeObjectRetain();
    uint64_t v15 = Set.description.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1001B3178(v15, v17, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "onMainSceneIsForegroundDidChange: assertions: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_100253B08()
{
  if ((*(unsigned char *)(v0 + 97) & 1) == 0)
  {
    if (sub_1002520AC()) {
      uint64_t v1 = (void *)sub_100265558((uint64_t)&off_10034C0F8);
    }
    else {
      uint64_t v1 = _swiftEmptySetSingleton;
    }
    uint64_t v10 = v1;
    if (*(unsigned char *)(v0 + 68))
    {
      swift_bridgeObjectRetain();
      if (sub_100251CF0())
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10012F0A0(&v9, 4);
        swift_bridgeObjectRelease();
        uint64_t v1 = v10;
      }
    }
    sub_1002521A8((uint64_t)v1, 0);
    swift_bridgeObjectRelease();
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000FD84(v2, (uint64_t)qword_1003A99A0);
    swift_retain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      sub_100256230();
      swift_bridgeObjectRetain();
      uint64_t v6 = Set.description.getter();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_1001B3178(v6, v8, (uint64_t *)&v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "onGuidanceUIRequiredDidChange: assertions: %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

unsigned char *sub_100253D74(unsigned char *result)
{
  if (((1 << *result) & 0xFEC) != 0)
  {
    if (*(unsigned char *)(v1 + 97)) {
      return result;
    }
    Swift::Int v2 = sub_100265558((uint64_t)&off_10034C148);
    sub_1002521A8(v2, 0);
  }
  else
  {
    uint64_t v3 = (void *)sub_100265558((uint64_t)&off_10034C120);
    sub_100252594(v3);
  }

  return (unsigned char *)swift_bridgeObjectRelease();
}

void sub_100253E00(uint64_t a1)
{
  Swift::Int v2 = v1;
  sub_10000D544(a1, (uint64_t)v34, &qword_1003826B8);
  unint64_t v4 = v35;
  uint64_t v5 = v36;
  unint64_t v6 = v37;
  int v7 = v1[66];
  sub_10000D544(a1, (uint64_t)v47, &qword_1003826B8);
  if (!v48)
  {
    if (v7 == 2) {
      goto LABEL_29;
    }
    goto LABEL_10;
  }
  int v8 = v50;
  char v9 = sub_100078E0C(0, v49);
  int v10 = v8 & 1;
  if (v8 == 2) {
    int v10 = 0;
  }
  if ((v9 & 1) == 0) {
    int v10 = 0;
  }
  if (v7 == 2 || v10 != (v7 & 1))
  {
LABEL_10:
    sub_10000D544(a1, (uint64_t)v43, &qword_1003826B8);
    if (v44)
    {
      int v11 = v46;
      if (sub_100078E0C(0, v45) & 1) != 0 && v11 != 2 && (v11)
      {
        Swift::Int v12 = sub_100265558((uint64_t)&off_10034B968);
        v41[0] = v12;
        if (v2[68])
        {
          swift_bridgeObjectRetain();
          if (sub_100251CF0())
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10012F0A0(v38, 4);
            swift_bridgeObjectRelease();
            Swift::Int v12 = v41[0];
          }
        }
        sub_1002521A8(v12, 0);
        swift_bridgeObjectRelease();
        if (qword_10037DD98 != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        sub_10000FD84(v14, (uint64_t)qword_1003A99A0);
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, v16))
        {
          unint64_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v17 = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "isEmergencyCallAvailable changed to true", v17, 2u);
          swift_slowDealloc();
        }
      }
      char v18 = sub_100078E0C(0, v5);
      uint64_t v13 = (v6 >> 8) & 1;
      if ((v6 & 0xFF00) == 0x200) {
        LOBYTE(v13) = 0;
      }
      if ((v18 & 1) == 0) {
        LOBYTE(v13) = 0;
      }
    }
    else
    {
      LOBYTE(v13) = 2;
    }
    v2[66] = v13;
  }
LABEL_29:
  int v19 = v2[65];
  sub_10000D544(a1, (uint64_t)v41, &qword_1003826B8);
  if (v41[1]) {
    unsigned __int8 v20 = v42;
  }
  else {
    unsigned __int8 v20 = 3;
  }
  if (v19 == 3)
  {
    if (v20 == 3) {
      return;
    }
    sub_10000D544(a1, (uint64_t)v38, &qword_1003826B8);
    if (v39)
    {
      LOBYTE(v21) = v40;
      goto LABEL_55;
    }
    goto LABEL_47;
  }
  if (v20 == 3 || v19 != v20)
  {
    sub_10000D544(a1, (uint64_t)v38, &qword_1003826B8);
    if (v39)
    {
      if (v19 == 2)
      {
        if (v40 == 1)
        {
          Swift::Int v28 = sub_100265558((uint64_t)&off_10034B9E0);
          Swift::Int v29 = sub_100265558((uint64_t)&off_10034BA08);
          sub_1002521A8(v28, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_10037DD98 != -1) {
            swift_once();
          }
          uint64_t v30 = type metadata accessor for Logger();
          sub_10000FD84(v30, (uint64_t)qword_1003A99A0);
          uint64_t v31 = Logger.logObject.getter();
          os_log_type_t v32 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v31, v32))
          {
            char v33 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v33 = 0;
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "satelliteDidRecover", v33, 2u);
            swift_slowDealloc();
          }
        }
      }
      else if (v19 == 1 && v40 == 2)
      {
        Swift::Int v22 = sub_100265558((uint64_t)&off_10034B990);
        Swift::Int v23 = sub_100265558((uint64_t)&off_10034B9B8);
        sub_1002521A8(v22, v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_10037DD98 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_10000FD84(v24, (uint64_t)qword_1003A99A0);
        char v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v27 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "internetDidRecover", v27, 2u);
          swift_slowDealloc();
        }

        unint64_t v21 = v4 >> 8;
        goto LABEL_55;
      }
      unint64_t v21 = v4 >> 8;
LABEL_55:
      v2[65] = v21;
      return;
    }
LABEL_47:
    LOBYTE(v21) = 3;
    goto LABEL_55;
  }
}

void sub_100254314()
{
  uint64_t v1 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v13 - v5;
  static DispatchTime.now()();
  uint64_t v7 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  sub_10000D544((uint64_t)v6, (uint64_t)v3, &qword_100380788);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__lastMainSceneIsExpectedToBeForegoundSoonAt;
  swift_beginAccess();
  sub_10002D2A8((uint64_t)v3, v8);
  swift_endAccess();
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A99A0);
  int v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    Swift::Int v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::Int v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "mainSceneIsExpectedToBeForegroundSoon", v12, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1002544EC()
{
  uint64_t v1 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v24 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__lastMainSceneIsExpectedToBeForegoundSoonAt;
  swift_beginAccess();
  sub_10000D2A0(v11, (uint64_t)v3, &qword_100380788);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000950C((uint64_t)v3, &qword_100380788);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  static DispatchTime.now()();
  unint64_t v12 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() < v12)
  {
    unint64_t v13 = DispatchTime.uptimeNanoseconds.getter();
    unint64_t v14 = DispatchTime.uptimeNanoseconds.getter();
    BOOL v15 = v13 >= v14;
    unint64_t v16 = v13 - v14;
    if (v15) {
      goto LABEL_7;
    }
    __break(1u);
  }
  unint64_t v16 = 0;
LABEL_7:
  unint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  if (v16 > 0xEE6B27F)
  {
    v17(v10, v4);
    return 0;
  }
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000FD84(v18, (uint64_t)qword_1003A99A0);
  int v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = v16 / 0xF4240;
    Swift::Int v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::Int v22 = 134349056;
    unint64_t v24 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Delaying banner, mainSceneIsExpectedToBeForegroundSoon was called %{public}llu ms ago", v22, 0xCu);
    swift_slowDealloc();
  }

  v17(v10, v4);
  return 1;
}

uint64_t sub_100254838()
{
  swift_release();
  swift_release();
  sub_10002D3E4(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__lastMainSceneIsExpectedToBeForegoundSoonAt, &qword_100380788);

  return v0;
}

uint64_t sub_1002548A8()
{
  sub_100254838();

  return swift_deallocClassInstance();
}

uint64_t sub_100254900()
{
  return type metadata accessor for SessionUserAttentionTracker();
}

uint64_t type metadata accessor for SessionUserAttentionTracker()
{
  uint64_t result = qword_100391C58;
  if (!qword_100391C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100254954()
{
  sub_10002D190();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for SessionUserAttentionTracker.EventAssertion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100254B1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionUserAttentionTracker.EventAssertion()
{
  return &type metadata for SessionUserAttentionTracker.EventAssertion;
}

unint64_t sub_100254B58()
{
  unint64_t result = qword_100391F98;
  if (!qword_100391F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391F98);
  }
  return result;
}

uint64_t sub_100254BAC()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  sub_100004010(qword_1003807A0);
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  *(void *)(v0 + 40) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for PreventSuspension();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = 0xD00000000000001BLL;
  v2[3] = 0x80000001002D6010;
  v2[4] = 0;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = _swiftEmptySetSingleton;
  *(_DWORD *)(v0 + 64) = 151126786;
  *(unsigned char *)(v0 + 68) = 2;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 2;
  *(_WORD *)(v0 + 96) = 513;
  uint64_t v3 = v0 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__lastMainSceneIsExpectedToBeForegoundSoonAt;
  *(void *)(v1 + 88) = 0;
  uint64_t v4 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__everSeenConnectedInCone) = 2;
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy27SessionUserAttentionTracker__explorerConnectedTimer) = 0;
  return v1;
}

uint64_t sub_100254CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  int v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      unint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001301F0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_100255354(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100254E8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    Hasher.init(_seed:)();
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v13 = *(void *)(v4 + 48);
      uint64_t v14 = *(void *)(v13 + 8 * v12);
      BOOL v15 = *(void *)(v14 + 16) == v8 && *(void *)(v14 + 24) == v9;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *v2;
        uint64_t v22 = *v2;
        *uint64_t v2 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1001303A4();
          uint64_t v17 = v22;
        }
        uint64_t v7 = *(void *)(*(void *)(v17 + 48) + 8 * v12);
        sub_10025551C(v12);
        *uint64_t v2 = v22;
        goto LABEL_16;
      }
      uint64_t v18 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v18;
        if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        uint64_t v19 = *(void *)(v13 + 8 * v12);
        BOOL v20 = *(void *)(v19 + 16) == v8 && *(void *)(v19 + 24) == v9;
        if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = *v2;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  char v6 = __CocoaSet.contains(_:)();
  swift_release();
  if ((v6 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v7 = sub_10025519C(v5, a1);
LABEL_16:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100255078(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 5;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 5;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100130550();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_1002556FC(v6);
  *uint64_t v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10025519C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = __CocoaSet.count.getter();
  uint64_t v6 = swift_unknownObjectRetain();
  Swift::Int v7 = sub_10012F1EC(v6, v5);
  Swift::Int v22 = v7;
  Hasher.init(_seed:)();
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = *(void *)(v7 + 48);
    uint64_t v14 = *(void *)(v13 + 8 * v12);
    BOOL v15 = *(void *)(v14 + 16) == v8 && *(void *)(v14 + 24) == v9;
    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_14:
      swift_release();
      uint64_t v19 = *(void *)(*(void *)(v7 + 48) + 8 * v12);
      sub_10025551C(v12);
      BOOL v20 = v8 == *(void *)(v19 + 16) && v9 == *(void *)(v19 + 24);
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        *uint64_t v3 = v22;
        return v19;
      }
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v16;
        if (((*(void *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        uint64_t v17 = *(void *)(v13 + 8 * v12);
        BOOL v18 = *(void *)(v17 + 16) == v8 && *(void *)(v17 + 24) == v9;
        if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_14;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100255354(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10025551C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_retain();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v10 = Hasher._finalize()();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          uint64_t v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1002556FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1002558A8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_100255078(*(unsigned char *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

Swift::Int sub_100255A1C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    Swift::Int v7 = sub_100255BA4((Swift::Int)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    int64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    Swift::Int v7 = sub_100255BA4((Swift::Int)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

Swift::Int sub_100255BA4(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v43 = (unint64_t *)result;
  uint64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = a4 + 56;
    uint64_t v9 = 1 << *(unsigned char *)(a4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(a4 + 56);
    int64_t v45 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = a3 + 56;
    while (1)
    {
LABEL_6:
      if (v11)
      {
        unint64_t v13 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v14 = v13 | (v7 << 6);
      }
      else
      {
        int64_t v15 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v15 >= v45) {
          goto LABEL_60;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v15);
        ++v7;
        if (!v16)
        {
          int64_t v7 = v15 + 1;
          if (v15 + 1 >= v45) {
            goto LABEL_60;
          }
          unint64_t v16 = *(void *)(v8 + 8 * v7);
          if (!v16)
          {
            int64_t v7 = v15 + 2;
            if (v15 + 2 >= v45) {
              goto LABEL_60;
            }
            unint64_t v16 = *(void *)(v8 + 8 * v7);
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v45)
              {
LABEL_60:
                swift_retain();
                return sub_100255FC4(v43, a2, v6, a3);
              }
              unint64_t v16 = *(void *)(v8 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v7 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    break;
                  }
                  if (v7 >= v45) {
                    goto LABEL_60;
                  }
                  unint64_t v16 = *(void *)(v8 + 8 * v7);
                  ++v17;
                  if (v16) {
                    goto LABEL_21;
                  }
                }
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              int64_t v7 = v17;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v14);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v18);
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      uint64_t v22 = 1 << v20;
      if (((1 << v20) & *(void *)(v12 + 8 * (v20 >> 6))) != 0)
      {
        uint64_t v23 = *(void *)(a3 + 48);
        if (*(unsigned __int8 *)(v23 + v20) != v18)
        {
          for (unint64_t i = v20 + 1; ; unint64_t i = v25 + 1)
          {
            unint64_t v25 = i & ~v19;
            if (((*(void *)(v12 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
              goto LABEL_6;
            }
            if (*(unsigned __int8 *)(v23 + v25) == v18) {
              break;
            }
          }
          unint64_t v21 = v25 >> 6;
          uint64_t v22 = 1 << v25;
        }
        v43[v21] |= v22;
        BOOL v26 = __OFADD__(v6++, 1);
        if (v26) {
          break;
        }
      }
    }
    __break(1u);
  }
  int64_t v27 = 0;
  uint64_t v44 = a3 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(a3 + 32);
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & *(void *)(a3 + 56);
  int64_t v46 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v31 = a4 + 56;
  while (v30)
  {
    unint64_t v32 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
    unint64_t v33 = v32 | (v27 << 6);
LABEL_52:
    Swift::UInt v37 = *(unsigned __int8 *)(*(void *)(a3 + 48) + v33);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v37);
    uint64_t result = Hasher._finalize()();
    uint64_t v38 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v39 = result & ~v38;
    if ((*(void *)(v31 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
    {
      uint64_t v40 = *(void *)(a4 + 48);
      if (*(unsigned __int8 *)(v40 + v39) == v37)
      {
LABEL_57:
        *(unint64_t *)((char *)v43 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
        BOOL v26 = __OFADD__(v6++, 1);
        if (v26)
        {
          __break(1u);
          goto LABEL_60;
        }
      }
      else
      {
        uint64_t v41 = ~v38;
        while (1)
        {
          unint64_t v39 = (v39 + 1) & v41;
          if (((*(void *)(v31 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v40 + v39) == v37) {
            goto LABEL_57;
          }
        }
      }
    }
  }
  int64_t v34 = v27 + 1;
  if (__OFADD__(v27, 1)) {
    goto LABEL_62;
  }
  if (v34 >= v46) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(v44 + 8 * v34);
  ++v27;
  if (v35) {
    goto LABEL_51;
  }
  int64_t v27 = v34 + 1;
  if (v34 + 1 >= v46) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(v44 + 8 * v27);
  if (v35) {
    goto LABEL_51;
  }
  int64_t v27 = v34 + 2;
  if (v34 + 2 >= v46) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(v44 + 8 * v27);
  if (v35)
  {
LABEL_51:
    unint64_t v30 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v27 << 6);
    goto LABEL_52;
  }
  int64_t v36 = v34 + 3;
  if (v36 >= v46) {
    goto LABEL_60;
  }
  unint64_t v35 = *(void *)(v44 + 8 * v36);
  if (v35)
  {
    int64_t v27 = v36;
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v27 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v27 >= v46) {
      goto LABEL_60;
    }
    unint64_t v35 = *(void *)(v44 + 8 * v27);
    ++v36;
    if (v35) {
      goto LABEL_51;
    }
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_100255FC4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = _swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100004010(&qword_1003885B8);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v9 = (void *)result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(v9[6] + v22) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_100256230()
{
  unint64_t result = qword_100391FA0;
  if (!qword_100391FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100391FA0);
  }
  return result;
}

uint64_t sub_100256284()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002562BC()
{
  return sub_100252F80();
}

uint64_t sub_1002562C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002562D4()
{
  return swift_release();
}

uint64_t sub_1002562DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100256338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025639C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_100256490()
{
  uint64_t v1 = OBJC_IVAR____TtC8SOSBuddy28ApplicationActiveStateSource_appForegroundDidChange;
  sub_100004010(&qword_100385860);
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = PassthroughSubject.init()();
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy28ApplicationActiveStateSource_observers] = _swiftEmptyArrayStorage;

  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for ApplicationActiveStateSource();
  id v3 = [super init];
  uint64_t v4 = qword_10037DD80;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 136446210;
    id v11 = v7;
    id v12 = [v11 description];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1001B3178(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "init: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v7;
}

id sub_100256708()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  active = (objc_class *)type metadata accessor for ApplicationActiveStateSource();
  v14.receiver = v2;
  v14.super_class = active;
  return [super dealloc];
}

uint64_t type metadata accessor for ApplicationActiveStateSource()
{
  return self;
}

uint64_t sub_100256994()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DD80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "ApplicationActiveStateSource::start", v10, 2u);
    swift_slowDealloc();
  }

  id v11 = self;
  id v12 = [v11 defaultCenter];
  uint64_t v13 = self;
  id v14 = [v13 mainQueue];
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = sub_1002572D0;
  uint64_t v30 = v15;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  int64_t v27 = sub_10025639C;
  uint64_t v28 = &unk_100360C60;
  unint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  id v17 = [v12 addObserverForName:UIApplicationWillEnterForegroundNotification object:0 queue:v14 usingBlock:v16];
  _Block_release(v16);

  objc_super v18 = (void *)(v1 + OBJC_IVAR____TtC8SOSBuddy28ApplicationActiveStateSource_observers);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  id v19 = [v11 defaultCenter];
  id v20 = [v13 mainQueue];
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = sub_100257310;
  uint64_t v30 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  int64_t v27 = sub_10025639C;
  uint64_t v28 = &unk_100360C88;
  unint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  id v23 = [v19 addObserverForName:UIApplicationDidEnterBackgroundNotification object:0 queue:v20 usingBlock:v22];
  _Block_release(v22);

  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return 1;
}

uint64_t sub_100256E64(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a3, v7, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    os_log_type_t v9 = (void *)result;
    swift_retain();

    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100256FA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DD80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "ApplicationActiveStateSource::stop", v10, 2u);
    swift_slowDealloc();
  }

  id v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8SOSBuddy28ApplicationActiveStateSource_observers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_7;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    *id v11 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_16;
  }
LABEL_7:
  uint64_t result = self;
  if (v13 >= 1)
  {
    uint64_t v15 = (void *)result;
    uint64_t v16 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v17 = *(void *)(v12 + 8 * v16 + 32);
        swift_unknownObjectRetain();
      }
      ++v16;
      id v18 = [v15 defaultCenter];
      [v18 removeObserver:v17];
      swift_unknownObjectRelease();
    }
    while (v13 != v16);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100257298()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002572D0(uint64_t a1)
{
  return sub_100256E64(a1, v1, "ApplicationActiveStateSource::willEnterForegroundNotification");
}

uint64_t sub_1002572F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100257308()
{
  return swift_release();
}

uint64_t sub_100257310(uint64_t a1)
{
  return sub_100256E64(a1, v1, "ApplicationActiveStateSource::didEnterBackgroundNotification");
}

ValueMetadata *type metadata accessor for SessionBannerActionTextView()
{
  return &type metadata for SessionBannerActionTextView;
}

uint64_t sub_100257350()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10025736C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v7 = sub_100004010(&qword_10038EA68);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v109 = (uint64_t *)((char *)&v90 - v11);
  uint64_t v106 = type metadata accessor for OpacityTransition();
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  char v101 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100004010(&qword_100381CB0);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  long long v102 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v103 = (char *)&v90 - v15;
  uint64_t v16 = type metadata accessor for Font.Leading();
  uint64_t v100 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004010(&qword_100391FE8);
  __chkstk_darwin(v19 - 8);
  long long v108 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  long long v110 = (char *)&v90 - v22;
  if (a3)
  {
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v99 = a3 + 6;
    sub_100008F88(a3 + 6, v23);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 16))(v153, v23, v24);
    if (a1)
    {
      uint64_t v25 = *(void *)(a1 + 48);
      if (v25)
      {
        unint64_t v26 = *(void *)(v25 + 24);
        if ((v26 & 0x2000000000000000) == 0)
        {
          uint64_t v27 = *(void *)(v25 + 16);
          if ((v27 & 0xFFFFFFFFFFFFLL) == 0) {
            goto LABEL_17;
          }
LABEL_9:
          v94._uint64_t countAndFlagsBits = v27;
          uint64_t v98 = a4;
          uint64_t v28 = (void *)v26;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v95 = a1;
          sub_10020D580();
          uint64_t v30 = v29;
          unint64_t v32 = v31;
          swift_release();
          if (v32) {
            uint64_t v33 = v30;
          }
          else {
            uint64_t v33 = 0;
          }
          uint64_t v91 = v33;
          int64_t v34 = (void *)0xE000000000000000;
          if (v32) {
            int64_t v34 = v32;
          }
          uint64_t v96 = v34;
          *(void *)&long long v125 = v27;
          *((void *)&v125 + 1) = v28;
          v94._object = v28;
          sub_100033310();
          swift_bridgeObjectRetain();
          uint64_t v35 = Text.init<A>(_:)();
          uint64_t v37 = v36;
          uint64_t v93 = v38;
          char v40 = v39 & 1;
          static Font.body.getter();
          uint64_t v97 = v9;
          static Font.Weight.medium.getter();
          Font.weight(_:)();
          swift_release();
          uint64_t v41 = v100;
          (*(void (**)(char *, void, uint64_t))(v100 + 104))(v18, enum case for Font.Leading.tight(_:), v16);
          Font.leading(_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v16);
          uint64_t v92 = Text.font(_:)();
          uint64_t v43 = v42;
          LOBYTE(v41) = v44;
          uint64_t v100 = v45;
          swift_release();
          sub_100033364(v35, v37, v40);
          swift_bridgeObjectRelease();
          uint64_t v47 = a3[9];
          uint64_t v46 = a3[10];
          sub_100008F88(v99, v47);
          (*(void (**)(uint64_t, uint64_t))(v46 + 64))(v47, v46);
          uint64_t v48 = v92;
          uint64_t v49 = Text.foregroundColor(_:)();
          uint64_t v51 = v50;
          uint64_t v53 = v52;
          char v55 = v54 & 1;
          uint64_t v56 = v43;
          uint64_t v57 = (uint64_t)v97;
          sub_100033364(v48, v56, v41 & 1);
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v59 = swift_getKeyPath();
          uint64_t v60 = swift_getKeyPath();
          v153[5] = v49;
          v153[6] = v51;
          char v154 = v55;
          uint64_t v155 = v53;
          uint64_t v156 = KeyPath;
          uint64_t v157 = 3;
          char v158 = 0;
          uint64_t v159 = v59;
          char v160 = 0;
          uint64_t v161 = v60;
          uint64_t v162 = 0x3FE0000000000000;
          static Alignment.leading.getter();
          sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v125, 0.0, 1, 0.0, 1);
          sub_100033364(v49, v51, v55);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          long long v150 = v135;
          long long v151 = v136;
          uint64_t v152 = v137;
          long long v146 = v131;
          long long v147 = v132;
          long long v148 = v133;
          long long v149 = v134;
          long long v142 = v127;
          long long v143 = v128;
          long long v144 = v129;
          long long v145 = v130;
          long long v140 = v125;
          long long v141 = v126;
          uint64_t v61 = v101;
          OpacityTransition.init()();
          static Animation.easeInOut.getter();
          uint64_t v62 = sub_1001FECE8(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
          char v63 = v103;
          uint64_t v64 = v106;
          Transition.animation(_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v104 + 8))(v61, v64);
          uint64_t v65 = v105;
          uint64_t v66 = v107;
          (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v63, v107);
          *(void *)&long long v111 = v64;
          *((void *)&v111 + 1) = v62;
          swift_getOpaqueTypeConformance2();
          uint64_t v67 = AnyTransition.init<A>(_:)();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v66);
          strcpy((char *)&v125, "GuidanceText-");
          HIWORD(v125) = -4864;
          String.append(_:)(v94);
          swift_bridgeObjectRelease();
          long long v68 = v125;
          uint64_t v69 = *(void *)(v95 + 48);
          if (v69)
          {
            if (*(void *)(v69 + 72))
            {
              uint64_t v70 = *(void *)(v69 + 72);
LABEL_19:
              swift_bridgeObjectRetain();
              uint64_t v73 = static Alignment.top.getter();
              uint64_t v74 = (uint64_t)v109;
              *uint64_t v109 = v73;
              *(void *)(v74 + 8) = v75;
              uint64_t v76 = sub_100004010(&qword_10038EA90);
              sub_100257E80(v70, (uint64_t)v153, v91, v96, v74 + *(int *)(v76 + 44));
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v77 = sub_100004010(&qword_10038EA78);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v74, 0, 1, v77);
LABEL_21:
              a4 = v98;
              uint64_t v72 = (uint64_t)v110;
              sub_10000D2A0(v74, v57, &qword_10038EA68);
              long long v121 = v150;
              long long v122 = v151;
              long long v117 = v146;
              long long v118 = v147;
              long long v119 = v148;
              long long v120 = v149;
              long long v113 = v142;
              long long v114 = v143;
              long long v115 = v144;
              long long v116 = v145;
              long long v111 = v140;
              long long v112 = v141;
              *(void *)&long long v123 = v152;
              *((void *)&v123 + 1) = v67;
              long long v124 = v68;
              long long v79 = v151;
              uint64_t v80 = v108;
              *((_OWORD *)v108 + 10) = v150;
              v80[11] = v79;
              long long v81 = v118;
              v80[6] = v117;
              v80[7] = v81;
              long long v82 = v120;
              v80[8] = v119;
              v80[9] = v82;
              long long v83 = v114;
              v80[2] = v113;
              v80[3] = v83;
              long long v84 = v116;
              v80[4] = v115;
              v80[5] = v84;
              long long v85 = v112;
              *uint64_t v80 = v111;
              v80[1] = v85;
              long long v86 = v124;
              v80[12] = v123;
              v80[13] = v86;
              uint64_t v87 = sub_100004010(&qword_100391FF0);
              sub_10000D2A0(v57, (uint64_t)v80 + *(int *)(v87 + 48), &qword_10038EA68);
              sub_100258BD4((uint64_t)&v111);
              sub_10000950C(v74, &qword_10038EA68);
              sub_10000950C(v57, &qword_10038EA68);
              long long v135 = v150;
              long long v136 = v151;
              long long v131 = v146;
              long long v132 = v147;
              long long v133 = v148;
              long long v134 = v149;
              long long v127 = v142;
              long long v128 = v143;
              long long v129 = v144;
              long long v130 = v145;
              long long v125 = v140;
              long long v126 = v141;
              uint64_t v137 = v152;
              uint64_t v138 = v67;
              long long v139 = v68;
              sub_100258C64((uint64_t)&v125);
              uint64_t v88 = sub_100004010(&qword_100391FF8);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v80, 0, 1, v88);
              sub_100258CF4((uint64_t)v80, v72);
              goto LABEL_22;
            }
            swift_retain();
            uint64_t v70 = sub_100232DD0();
            swift_bridgeObjectRetain();
            swift_release();
            if (v70) {
              goto LABEL_19;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v78 = sub_100004010(&qword_10038EA78);
          uint64_t v74 = (uint64_t)v109;
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v109, 1, 1, v78);
          goto LABEL_21;
        }
        if ((v26 & 0xF00000000000000) != 0)
        {
          uint64_t v27 = *(void *)(v25 + 16);
          goto LABEL_9;
        }
      }
LABEL_17:
      uint64_t v71 = sub_100004010(&qword_100391FF8);
      uint64_t v72 = (uint64_t)v110;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v110, 1, 1, v71);
LABEL_22:
      sub_100258CF4(v72, a4);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v153);
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1001FECE8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for GuidanceMessagesModel();
  sub_1001FECE8(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100257E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v77 = a5;
  uint64_t v75 = type metadata accessor for OpacityTransition();
  uint64_t v72 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v69 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100381CB0);
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  __chkstk_darwin(v9);
  uint64_t v70 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v71 = (char *)&v65 - v12;
  uint64_t v67 = type metadata accessor for Font.Leading();
  uint64_t v13 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_10038EA98);
  __chkstk_darwin(v16 - 8);
  uint64_t v76 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v78 = (uint64_t)&v65 - v19;
  if (*(void *)(a1 + 16) < 2uLL)
  {
    uint64_t v23 = sub_100004010(&qword_10038EAA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v78, 1, 1, v23);
  }
  else
  {
    *(void *)&v103[0] = a1;
    uint64_t KeyPath = (void *)swift_getKeyPath();
    sub_1000090FC(a2, (uint64_t)&v104);
    uint64_t v20 = swift_allocObject();
    sub_100009164(&v104, v20 + 16);
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380040);
    sub_100004010(&qword_10038EAB0);
    sub_100009B18(&qword_100381CF8, &qword_100380040);
    sub_1001FEB18();
    uint64_t v21 = v78;
    ForEach<>.init(_:id:content:)();
    uint64_t v22 = sub_100004010(&qword_10038EAA0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 1, v22);
  }
  *(void *)&long long v104 = v79;
  *((void *)&v104 + 1) = a4;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v66 = Text.init<A>(_:)();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  static Font.subheadline.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  uint64_t KeyPath = a4;
  swift_release();
  uint64_t v28 = v67;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Font.Leading.tight(_:), v67);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  uint64_t v29 = v66;
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v65 = v35;
  swift_release();
  sub_100033364(v29, v25, v27);
  swift_bridgeObjectRelease();
  id v36 = [self secondaryLabelColor];
  Color.init(_:)();
  uint64_t v37 = Text.foregroundColor(_:)();
  uint64_t v67 = v38;
  char v40 = v39;
  uint64_t v42 = v41;
  swift_release();
  v40 &= 1u;
  sub_100033364(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = swift_getKeyPath();
  LOBYTE(v32) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v86 = v40;
  char v84 = 0;
  char v80 = 0;
  uint64_t v46 = v67;
  uint64_t v122 = v37;
  uint64_t v123 = v67;
  char v124 = v40;
  *(_DWORD *)long long v125 = *(_DWORD *)v85;
  *(_DWORD *)&v125[3] = *(_DWORD *)&v85[3];
  uint64_t v126 = v42;
  uint64_t v127 = v43;
  uint64_t v128 = 3;
  char v129 = 0;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v83[3];
  *(_DWORD *)long long v130 = *(_DWORD *)v83;
  uint64_t v131 = v44;
  char v132 = 0;
  *(_DWORD *)&v133[3] = *(_DWORD *)&v82[3];
  *(_DWORD *)long long v133 = *(_DWORD *)v82;
  uint64_t v134 = v45;
  uint64_t v135 = 0x3FE0000000000000;
  char v136 = v32;
  *(_DWORD *)&v137[3] = *(_DWORD *)&v81[3];
  *(_DWORD *)uint64_t v137 = *(_DWORD *)v81;
  uint64_t v138 = v47;
  uint64_t v139 = v48;
  uint64_t v140 = v49;
  uint64_t v141 = v50;
  char v142 = 0;
  static Alignment.leading.getter();
  sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v104, 0.0, 1, 0.0, 1);
  sub_100033364(v37, v46, v40);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v100 = v117;
  long long v101 = v118;
  long long v96 = v113;
  long long v97 = v114;
  long long v98 = v115;
  long long v99 = v116;
  long long v92 = v109;
  long long v93 = v110;
  uint64_t v102 = v119;
  long long v94 = v111;
  long long v95 = v112;
  long long v87 = v104;
  long long v88 = v105;
  long long v89 = v106;
  long long v90 = v107;
  long long v91 = v108;
  uint64_t v51 = v69;
  OpacityTransition.init()();
  static Animation.easeInOut.getter();
  uint64_t v52 = sub_1001FECE8(&qword_100380E30, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v53 = v71;
  uint64_t v54 = v75;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v54);
  uint64_t v56 = v73;
  uint64_t v55 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v53, v74);
  *(void *)&v103[0] = v54;
  *((void *)&v103[0] + 1) = v52;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = AnyTransition.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
  *(void *)&long long v104 = 0xD000000000000010;
  *((void *)&v104 + 1) = 0x80000001002C9980;
  v58._uint64_t countAndFlagsBits = v79;
  v58._object = KeyPath;
  String.append(_:)(v58);
  long long v59 = v104;
  uint64_t v60 = v78;
  uint64_t v61 = v76;
  sub_10000D2A0(v78, v76, &qword_10038EA98);
  uint64_t v62 = v77;
  sub_10000D2A0(v61, v77, &qword_10038EA98);
  uint64_t v63 = *(int *)(sub_100004010(&qword_10038EAA8) + 48);
  v103[12] = v99;
  v103[13] = v100;
  _OWORD v103[14] = v101;
  v103[8] = v95;
  v103[9] = v96;
  v103[10] = v97;
  v103[11] = v98;
  v103[4] = v91;
  v103[5] = v92;
  v103[6] = v93;
  v103[7] = v94;
  v103[0] = v87;
  v103[1] = v88;
  v103[2] = v89;
  v103[3] = v90;
  *(void *)&v103[15] = v102;
  *((void *)&v103[15] + 1) = v57;
  v103[16] = v59;
  memcpy((void *)(v62 + v63), v103, 0x110uLL);
  sub_1001FE950((uint64_t)v103);
  sub_10000950C(v60, &qword_10038EA98);
  long long v116 = v99;
  long long v117 = v100;
  long long v118 = v101;
  long long v112 = v95;
  long long v113 = v96;
  long long v114 = v97;
  long long v115 = v98;
  long long v108 = v91;
  long long v109 = v92;
  long long v110 = v93;
  long long v111 = v94;
  long long v104 = v87;
  long long v105 = v88;
  long long v106 = v89;
  long long v107 = v90;
  uint64_t v119 = v102;
  uint64_t v120 = v57;
  long long v121 = v59;
  sub_1001FE9E0((uint64_t)&v104);
  return sub_10000950C(v61, &qword_10038EA98);
}

uint64_t sub_1002587D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v29[1] = a2;
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  *(void *)&v30[0] = v7;
  *((void *)&v30[0] + 1) = v8;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  v29[0] = v12;
  LOBYTE(v8) = v13 & 1;
  static Font.subheadline.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.Leading.tight(_:), v3);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  LOBYTE(v3) = v17;
  uint64_t v19 = v18;
  swift_release();
  char v20 = v3 & 1;
  sub_100033364(v9, v11, v8);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  LOBYTE(v3) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v61 = v20;
  char v59 = 0;
  char v55 = 0;
  uint64_t v34 = v14;
  uint64_t v35 = v16;
  char v36 = v20;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v60;
  *(_DWORD *)&v37[3] = *(_DWORD *)&v60[3];
  uint64_t v38 = v19;
  uint64_t v39 = KeyPath;
  uint64_t v40 = 3;
  char v41 = 0;
  *(_DWORD *)&v42[3] = *(_DWORD *)&v58[3];
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v58;
  uint64_t v43 = v22;
  char v44 = 0;
  *(_DWORD *)&v45[3] = *(_DWORD *)&v57[3];
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v57;
  uint64_t v46 = v23;
  uint64_t v47 = 0x3FE0000000000000;
  char v48 = v3;
  *(_DWORD *)&v49[3] = *(_DWORD *)&v56[3];
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v56;
  uint64_t v50 = v24;
  uint64_t v51 = v25;
  uint64_t v52 = v26;
  uint64_t v53 = v27;
  char v54 = 0;
  static Alignment.leading.getter();
  sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1);
  sub_100033364(v14, v16, v20);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v62[12] = v30[12];
  v62[13] = v30[13];
  v62[14] = v30[14];
  uint64_t v63 = v31;
  v62[8] = v30[8];
  v62[9] = v30[9];
  v62[10] = v30[10];
  v62[11] = v30[11];
  v62[4] = v30[4];
  v62[5] = v30[5];
  v62[6] = v30[6];
  v62[7] = v30[7];
  v62[0] = v30[0];
  v62[1] = v30[1];
  void v62[2] = v30[2];
  uint64_t v62[3] = v30[3];
  uint64_t v32 = 0;
  char v33 = 0;
  sub_100004010(&qword_10038EAC8);
  sub_1001FEBC4();
  View.accessibilityHidden(_:)();
  return sub_10018BF94((uint64_t)v62);
}

uint64_t sub_100258BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_10025736C(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), a1);
}

uint64_t sub_100258BD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100258C64(uint64_t a1)
{
  return a1;
}

uint64_t sub_100258CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100391FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100258D5C()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100258D94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002587D0(a1, a2);
}

unint64_t sub_100258DA0()
{
  unint64_t result = qword_100392000;
  if (!qword_100392000)
  {
    sub_1000094C4(&qword_100391FE8);
    sub_100009B18(&qword_100392008, &qword_100391FF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100392000);
  }
  return result;
}

uint64_t sub_100258E38(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a1 < 0) {
    goto LABEL_65;
  }
  unint64_t v3 = a2;
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  unint64_t v4 = a3 >> 62;
  uint64_t v5 = a1;
  uint64_t result = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_67;
      }
      uint64_t v7 = HIDWORD(a2) - (int)a2;
LABEL_7:
      if (v7 < 0) {
        goto LABEL_66;
      }
LABEL_8:
      uint64_t result = 0;
      if (!v5 || !v7) {
        return result;
      }
      uint64_t v11 = 0;
      uint64_t v47 = (uint64_t)a2 >> 32;
      uint64_t v48 = (int)a2;
      unint64_t v49 = BYTE6(a3);
      unint64_t v45 = HIDWORD(a2);
      BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
      BOOL v33 = v12;
      unint64_t v32 = HIDWORD(a2) - (int)a2;
      uint64_t v13 = 1;
      unint64_t v43 = a2 >> 16;
      unint64_t v44 = a2 >> 8;
      unint64_t v41 = a2 >> 40;
      unint64_t v42 = a2 >> 24;
      unint64_t v39 = HIBYTE(a2);
      unint64_t v40 = HIWORD(a2);
      unint64_t v37 = a3 >> 16;
      unint64_t v38 = a3 >> 8;
      unint64_t v35 = HIDWORD(a3);
      unint64_t v36 = a3 >> 24;
      char v46 = a3;
      unint64_t v34 = a3 >> 40;
      unint64_t v51 = a3 >> 62;
      uint64_t v50 = v7;
      while (2)
      {
        if (v4)
        {
          if (v4 == 1)
          {
            if (v11 < v48 || v11 >= v47)
            {
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
            uint64_t v14 = __DataStorage._bytes.getter();
            if (!v14)
            {
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
            }
            uint64_t v15 = v14;
            uint64_t v16 = __DataStorage._offset.getter();
            uint64_t v17 = v11 - v16;
            if (__OFSUB__(v11, v16)) {
              goto LABEL_60;
            }
          }
          else
          {
            if (v11 < *(void *)(v3 + 16))
            {
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
            if (v11 >= *(void *)(v3 + 24))
            {
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
            uint64_t v19 = __DataStorage._bytes.getter();
            if (!v19) {
              goto LABEL_70;
            }
            uint64_t v15 = v19;
            uint64_t v20 = __DataStorage._offset.getter();
            uint64_t v17 = v11 - v20;
            if (__OFSUB__(v11, v20)) {
              goto LABEL_62;
            }
          }
          unsigned int v18 = *(unsigned __int8 *)(v15 + v17);
        }
        else
        {
          if (v11 >= v49)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          LOBYTE(v53._countAndFlagsBits) = v3;
          BYTE1(v53._countAndFlagsBits) = v44;
          BYTE2(v53._countAndFlagsBits) = v43;
          BYTE3(v53._countAndFlagsBits) = v42;
          BYTE4(v53._countAndFlagsBits) = v45;
          BYTE5(v53._countAndFlagsBits) = v41;
          BYTE6(v53._countAndFlagsBits) = v40;
          HIBYTE(v53._countAndFlagsBits) = v39;
          LOBYTE(v53._object) = v46;
          BYTE1(v53._object) = v38;
          BYTE2(v53._object) = v37;
          BYTE3(v53._object) = v36;
          BYTE4(v53._object) = v35;
          BYTE5(v53._object) = v34;
          unsigned int v18 = *((unsigned __int8 *)&v53._countAndFlagsBits + v11);
        }
        unsigned __int8 v21 = 0;
        if (v5 >= 8) {
          uint64_t v22 = 8;
        }
        else {
          uint64_t v22 = v5;
        }
        v53._uint64_t countAndFlagsBits = 0;
        v53._object = (void *)0xE000000000000000;
        do
        {
          if (v21 >= v22)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          int v23 = 7 - v21;
          if ((v23 & 0xFFFFFF00) != 0) {
            goto LABEL_55;
          }
          ++v21;
          if ((v18 >> v23)) {
            uint64_t v24 = 49;
          }
          else {
            uint64_t v24 = 48;
          }
          if ((v23 & 0xF8) != 0) {
            uint64_t v25 = 48;
          }
          else {
            uint64_t v25 = v24;
          }
          unint64_t v26 = 0xE100000000000000;
          String.append(_:)(*(Swift::String *)&v25);
          swift_bridgeObjectRelease();
        }
        while (v21 != v22);
        String.append(_:)(v53);
        swift_bridgeObjectRelease();
        LODWORD(v4) = v51;
        unint64_t v3 = a2;
        unint64_t v27 = 0;
        switch((int)v51)
        {
          case 1:
            unint64_t v27 = v32;
            if (v33) {
              goto LABEL_63;
            }
            goto LABEL_47;
          case 2:
            uint64_t v29 = *(void *)(a2 + 16);
            uint64_t v28 = *(void *)(a2 + 24);
            BOOL v10 = __OFSUB__(v28, v29);
            unint64_t v27 = v28 - v29;
            if (!v10) {
              goto LABEL_47;
            }
            goto LABEL_64;
          case 3:
            goto LABEL_47;
          default:
            unint64_t v27 = v49;
LABEL_47:
            BOOL v10 = __OFSUB__(v27, 1);
            uint64_t v30 = v27 - 1;
            if (v10) {
              goto LABEL_56;
            }
            if (v11 < v30)
            {
              v31._uint64_t countAndFlagsBits = 32;
              v31._object = (void *)0xE100000000000000;
              String.append(_:)(v31);
            }
            if (v13 != v50)
            {
              v5 -= v22;
              uint64_t v11 = v13++;
              if (v5 > 0) {
                continue;
              }
            }
            uint64_t result = v54;
            break;
        }
        return result;
      }
    case 2uLL:
      uint64_t v9 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_7;
      }
      goto LABEL_68;
    case 3uLL:
      return result;
    default:
      uint64_t v7 = BYTE6(a3);
      goto LABEL_8;
  }
}

ValueMetadata *type metadata accessor for BuiltInSelectRoadsidePhoneNumberFooterView()
{
  return &type metadata for BuiltInSelectRoadsidePhoneNumberFooterView;
}

uint64_t sub_100259238()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100259254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = type metadata accessor for KeyboardShortcut();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for ControlSize();
  uint64_t v7 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100004010(&qword_100381C00);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100381C08);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_100381C10);
  uint64_t v58 = *(void *)(v15 - 8);
  uint64_t v59 = v15;
  __chkstk_darwin(v15);
  uint64_t v56 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_100381C18);
  uint64_t v60 = *(void *)(v17 - 8);
  uint64_t v61 = v17;
  __chkstk_darwin(v17);
  uint64_t v57 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004010(&qword_100381C20);
  __chkstk_darwin(v53);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_100381C28);
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v69 = v21;
  __chkstk_darwin(v21);
  uint64_t v55 = (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)a1)
  {
    swift_retain();
    uint64_t v23 = sub_10007400C();
    swift_release();
    swift_bridgeObjectRelease();
    if (!sub_10009A3A8() || v23)
    {
      uint64_t v48 = v69;
      unint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
      uint64_t v50 = v70;
      return v49(v50, 1, 1, v48);
    }
    else
    {
      uint64_t v24 = swift_allocObject();
      long long v25 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v24 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v24 + 32) = v25;
      *(_OWORD *)(v24 + 48) = *(_OWORD *)(a1 + 32);
      *(void *)(v24 + 64) = *(void *)(a1 + 48);
      long long v75 = v25;
      swift_retain();
      sub_10004ED30((uint64_t)&v75);
      swift_retain();
      swift_retain();
      sub_100004010(&qword_100381C50);
      sub_10005850C();
      Button.init(action:label:)();
      uint64_t v26 = v54;
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ControlSize.large(_:), v54);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v28 = (uint64_t *)&v14[*(int *)(v12 + 36)];
      uint64_t v29 = sub_100004010(&qword_10037F228);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v28 + *(int *)(v29 + 28), v9, v26);
      uint64_t *v28 = KeyPath;
      uint64_t v30 = v51;
      uint64_t v31 = v52;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v14, v11, v52);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
      unint64_t v32 = v62;
      BorderlessButtonStyle.init()();
      unint64_t v33 = sub_10025A164();
      uint64_t v34 = sub_10025A300(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
      unint64_t v35 = v56;
      uint64_t v36 = v64;
      View.buttonStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v36);
      sub_10000950C((uint64_t)v14, &qword_100381C08);
      unint64_t v37 = v65;
      static KeyboardShortcut.defaultAction.getter();
      uint64_t v71 = v12;
      uint64_t v72 = v36;
      unint64_t v73 = v33;
      uint64_t v74 = v34;
      swift_getOpaqueTypeConformance2();
      unint64_t v38 = v57;
      uint64_t v39 = v59;
      View.keyboardShortcut(_:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v67);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v39);
      LOBYTE(v39) = static Edge.Set.top.getter();
      uint64_t v41 = v60;
      uint64_t v40 = v61;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v20, v38, v61);
      unint64_t v42 = &v20[*(int *)(v53 + 36)];
      *unint64_t v42 = v39;
      *(_OWORD *)(v42 + 8) = 0u;
      *(_OWORD *)(v42 + 24) = 0u;
      v42[40] = 1;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
      LOBYTE(v39) = static Edge.Set.bottom.getter();
      uint64_t v43 = v55;
      sub_10025A228((uint64_t)v20, v55);
      uint64_t v44 = v69;
      uint64_t v45 = v43 + *(int *)(v69 + 36);
      *(unsigned char *)uint64_t v45 = v39;
      *(_OWORD *)(v45 + 8) = 0u;
      *(_OWORD *)(v45 + 24) = 0u;
      *(unsigned char *)(v45 + 40) = 1;
      sub_10000950C((uint64_t)v20, &qword_100381C20);
      uint64_t v46 = v70;
      sub_10025A290(v43, v70);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v46, 0, 1, v44);
    }
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_10025A300(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_100259B30()
{
  uint64_t v1 = v0;
  if (v0[2])
  {
    uint64_t v2 = v0[4];
    swift_retain();
    char v3 = sub_1000CA784(v2, 0, 3);
    uint64_t v4 = swift_release();
    if (v3)
    {
      v1[5](v4);
    }
    else
    {
      if (qword_10037DE10 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10000FD84(v5, (uint64_t)qword_1003A9B08);
      long long v15 = *(_OWORD *)v1;
      swift_retain();
      sub_10004ED30((uint64_t)&v15);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10004ED30((uint64_t)&v15);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10004ED30((uint64_t)&v15);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10004ED30((uint64_t)&v15);
      swift_retain();
      swift_retain();
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136446467;
        swift_retain();
        uint64_t v9 = sub_1000C8E54();
        unint64_t v11 = v10;
        swift_release();
        sub_1001B3178(v9, v11, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v8 + 12) = 2081;
        uint64_t v13 = *((void *)v2 + 2);
        unint64_t v12 = *((void *)v2 + 3);
        swift_bridgeObjectRetain();
        sub_1001B3178(v13, v12, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] QuestionnaireBodyView: failed to record skip for %{private}s", (uint8_t *)v8, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        sub_10004F584((uint64_t)&v15);
        swift_release();
        swift_release();
        swift_release();
        sub_10004F584((uint64_t)&v15);

        swift_release();
        swift_release();
        swift_release();
      }
    }
  }
  else
  {
    type metadata accessor for QuestionnaireState();
    sub_10025A300(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    EnvironmentObject.error()();
    __break(1u);
  }
}

__n128 sub_100259F50@<Q0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = static Alignment.center.getter();
  sub_100165FA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1, v9, v10, v2, v4, v8, v6);
  sub_100033364(v2, v4, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = static Color.green.getter();
  uint64_t KeyPath = swift_getKeyPath();
  long long v13 = v17[7];
  *(_OWORD *)(a1 + 96) = v17[6];
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 128) = v17[8];
  long long v14 = v17[3];
  *(_OWORD *)(a1 + 32) = v17[2];
  *(_OWORD *)(a1 + 48) = v14;
  long long v15 = v17[5];
  *(_OWORD *)(a1 + 64) = v17[4];
  *(_OWORD *)(a1 + 80) = v15;
  __n128 result = (__n128)v17[1];
  *(_OWORD *)a1 = v17[0];
  *(__n128 *)(a1 + 16) = result;
  *(void *)(a1 + 144) = KeyPath;
  *(void *)(a1 + 152) = v11;
  return result;
}

uint64_t sub_10025A07C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  v6[2] = *(_OWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_100004010(&qword_100392010);
  return sub_100259254((uint64_t)v6, a1 + *(int *)(v4 + 44));
}

uint64_t sub_10025A0E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10025A138()
{
}

unint64_t sub_10025A164()
{
  unint64_t result = qword_100381C60;
  if (!qword_100381C60)
  {
    sub_1000094C4(&qword_100381C08);
    sub_100009B18(&qword_100381C68, &qword_100381C00);
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100381C60);
  }
  return result;
}

uint64_t sub_10025A228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025A290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381C28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025A300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10025A348()
{
  return sub_100009B18(&qword_100392018, qword_100392020);
}

uint64_t sub_10025A384()
{
  type metadata accessor for ValueWithHysteresis.Hysteresis();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Optional();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_10025A4A8()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  type metadata accessor for ValueWithHysteresis.Hysteresis();
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + *(void *)(*(void *)v0 + 168), v4);
  return v0;
}

uint64_t sub_10025A60C()
{
  sub_10025A4A8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ValueWithHysteresis()
{
  return sub_100006BAC();
}

uint64_t type metadata accessor for ValueWithHysteresis.Hysteresis()
{
  return sub_100006BAC();
}

uint64_t sub_10025A694(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _UNKNOWN **))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = swift_retain();
    a3(v5, &off_100360F28);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_10025A710()
{
  [*(id *)(v0 + 16) invalidate];
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TimerBasedHysteresisSchedulerEvent()
{
  return self;
}

uint64_t type metadata accessor for TimerBasedHysteresisScheduler()
{
  return self;
}

uint64_t sub_10025A7AC()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10025A854(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 24) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v16 = *a2;
    unint64_t v15 = (unint64_t)a2 + 15;
    *a1 = v16;
    uint64_t v17 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    _OWORD *v17 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)(((unint64_t)v17 + v8 + 16) & ~v8);
    uint64_t v19 = (const void *)(((v15 & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_unknownObjectRetain();
    if (v20(v19, 1, v4))
    {
      memcpy(v18, v19, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_10025A9E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v4 - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v4);
  if (!result)
  {
    int v7 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 8);
    return v7(v5, v4);
  }
  return result;
}

void *sub_10025AAD0(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  uint64_t v6 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *(_OWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (void *)(((unint64_t)v6 + v9 + 16) & ~v9);
  int v11 = (const void *)((v9 + 16 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v9);
  unint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_unknownObjectRetain();
  if (v12(v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v13 = *(void *)(v8 + 64);
    }
    else {
      size_t v13 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
  }
  return a1;
}

void *sub_10025AC10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = v6[1];
  *uint64_t v5 = *v6;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v5[1] = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)(((unint64_t)v5 + v10 + 16) & ~v10);
  unint64_t v12 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v6) = v13(v11, 1, v8);
  int v14 = v13(v12, 1, v8);
  if (v6)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v11, v12, v8);
      return a1;
    }
    uint64_t v18 = *(void (**)(void *, uint64_t))(v9 + 8);
    uint64_t v17 = v9 + 8;
    v18(v11, v8);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

void *sub_10025ADB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = v6[1];
  *uint64_t v5 = *v6;
  swift_unknownObjectRelease();
  v5[1] = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)(((unint64_t)v5 + v10 + 16) & ~v10);
  unint64_t v12 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  size_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  int v14 = v13(v12, 1, v8);
  if (v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    uint64_t v18 = *(void (**)(void *, uint64_t))(v9 + 8);
    uint64_t v17 = v9 + 8;
    v18(v11, v8);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

uint64_t sub_10025AF50(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 24) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      uint64_t v17 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v6 > 0x7FFFFFFE)
      {
        unsigned int v19 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v17 + v8 + 16) & ~v8);
        if (v19 >= 2) {
          return v19 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v18 = *v17;
        if (v18 >= 0xFFFFFFFF) {
          LODWORD(v18) = -1;
        }
        if ((v18 + 1) >= 2) {
          return v18;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_10025B144(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 24) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x10025B470);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        uint64_t v20 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if (v9 > 0x7FFFFFFE)
        {
          uint64_t v21 = (unsigned char *)(((unint64_t)v20 + v11 + 16) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v25 = a2 + 1;
            uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            v26(((unint64_t)v20 + v11 + 16) & ~v11, v25);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(v21, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)uint64_t v21 = v23;
                  break;
                case 3:
                  *(_WORD *)uint64_t v21 = v23;
                  void v21[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v21 = v23;
                  break;
                default:
                  *uint64_t v21 = v23;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *uint64_t v20 = 0;
          v20[1] = 0;
          *(_DWORD *)uint64_t v20 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *uint64_t v20 = a2;
        }
      }
      return;
  }
}

uint64_t sub_10025B4A8(unint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void *a7, unint64_t a8)
{
  uint64_t v14 = a2 & 1;
  type metadata accessor for BitCollector();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B8420;
  *(unsigned char *)(inited + 32) = 0;
  sub_10012BF84(0, 3u);
  sub_10012BF84(v14, 1u);
  do
  {
    if (a1 >= 8) {
      uint64_t v16 = a1 & 7 | 8;
    }
    else {
      uint64_t v16 = a1 & 7;
    }
    sub_10012BF84(v16, 4u);
    BOOL v17 = a1 > 7;
    a1 >>= 3;
  }
  while (v17);
  unint64_t v18 = sub_10025B8D0(a3, a4, a5, a6);
  do
  {
    if (v18 >= 8) {
      uint64_t v19 = v18 & 7 | 8;
    }
    else {
      uint64_t v19 = v18 & 7;
    }
    sub_10012BF84(v19, 4u);
    BOOL v17 = v18 > 7;
    v18 >>= 3;
  }
  while (v17);
  uint64_t v20 = sub_10025C110(a8, a7);
  if (v35)
  {
    swift_setDeallocating();
    return sub_10000F294(*(void *)(inited + 16), *(void *)(inited + 24));
  }
  else
  {
    sub_10012C2AC(v20);
    swift_release();
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000FD84(v22, (uint64_t)qword_1003A9B08);
    swift_retain_n();
    swift_retain();
    int v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446723;
      uint64_t v26 = sub_1000C8E54();
      sub_1001B3178(v26, v27, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2081;
      swift_beginAccess();
      unint64_t v28 = *(void *)(inited + 16);
      unint64_t v29 = *(void *)(inited + 24);
      uint64_t v30 = sub_10012BE3C();
      sub_10000F1F0(v28, v29);
      uint64_t v31 = sub_100258E38(v30, v28, v29);
      unint64_t v33 = v32;
      sub_10000F294(v28, v29);
      uint64_t v37 = sub_1001B3178(v31, v33, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2049;
      uint64_t v37 = sub_10012BE3C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%{public}s] Bit stream: '%{private}s', bits used: %{private}lu", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
      swift_release_n();
    }
    swift_beginAccess();
    return *(void *)(inited + 16);
  }
}

uint64_t sub_10025B878()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_10025B8A8()
{
  unint64_t result = sub_100283E6C((uint64_t)&off_10034A938);
  qword_1003A9C98 = result;
  return result;
}

uint64_t sub_10025B8D0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9B08);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  int v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v32._uint64_t countAndFlagsBits = a1;
    *(_DWORD *)uint64_t v10 = 136446466;
    v32._object = a2;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380920);
    uint64_t v11 = String.init<A>(describing:)();
    v32._uint64_t countAndFlagsBits = sub_1001B3178(v11, v12, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    v32._uint64_t countAndFlagsBits = a3;
    v32._object = a4;
    swift_bridgeObjectRetain();
    uint64_t v13 = String.init<A>(describing:)();
    v32._uint64_t countAndFlagsBits = sub_1001B3178(v13, v14, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "languageRegionToInternalCode language: %{public}s, region: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a2) {
      goto LABEL_5;
    }
LABEL_12:
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v24 = 134349056;
      uint64_t v21 = 8;
      v32._uint64_t countAndFlagsBits = 8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v25 = "language == nil, code: %{public}lu";
LABEL_24:
      _os_log_impl((void *)&_mh_execute_header, v22, v23, v25, v24, 0xCu);
      swift_slowDealloc();
      goto LABEL_26;
    }
LABEL_25:
    uint64_t v21 = 8;
    goto LABEL_26;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!a2) {
    goto LABEL_12;
  }
LABEL_5:
  Swift::String v15 = String.lowercased()();
  if (a4)
  {
    Swift::String v16 = String.lowercased()();
    if (qword_10037DF08 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1003A9C98;
    Swift::String v32 = v15;
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = 45;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    swift_bridgeObjectRetain();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 16))
    {
      unint64_t v19 = sub_1001BEC58(v32._countAndFlagsBits, (uint64_t)v32._object);
      if (v20)
      {
        uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_10037DF08 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_1003A9C98;
  if (!*(void *)(qword_1003A9C98 + 16)
    || (unint64_t v27 = sub_1001BEC58(v15._countAndFlagsBits, (uint64_t)v15._object), (v28 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v24 = 134349056;
      uint64_t v21 = 8;
      v32._uint64_t countAndFlagsBits = 8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v25 = "Unsupported language, code: %{public}lu";
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  uint64_t v21 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v24 = 134349056;
    v32._uint64_t countAndFlagsBits = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v25 = "language-region internal code: %{public}lu";
    goto LABEL_24;
  }
LABEL_26:

  return v21;
}

uint64_t sub_10025BE18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Data.Iterator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(a2 + 16))
  {
    sub_10025D448(a2 + 24, (uint64_t)v21);
    sub_10025D448((uint64_t)v21, (uint64_t)&v22);
    if ((v23 & 1) == 0)
    {
      unint64_t v8 = v22;
      sub_10012BF84(2, 2u);
      do
      {
        sub_10012BF84(v8 & 0x7F | ((v8 > 0x7F) << 7), 8u);
        BOOL v9 = v8 >= 0x80;
        v8 >>= 7;
      }
      while (v9);
      goto LABEL_8;
    }
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v7 = 0;
  }
  sub_10012BF84(v7, 2u);
LABEL_8:
  uint64_t v10 = *(void *)a2;
  unint64_t v11 = *(void *)(a2 + 8);
  unsigned int v12 = 0;
  unint64_t v13 = 0;
  switch(v11 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v10), v10))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x10025C0F0);
      }
      unint64_t v13 = HIDWORD(v10) - (int)v10;
LABEL_13:
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_31;
      }
LABEL_14:
      unsigned int v12 = v13 & 0x3F;
LABEL_15:
      if (v13 >= 0x40) {
        uint64_t v16 = v12 | 0x40;
      }
      else {
        uint64_t v16 = v12;
      }
      sub_10012BF84(v16, 7u);
      if (v13 >= 0x40)
      {
        do
        {
          if (v13 >= 0x1000) {
            uint64_t v17 = (v13 >> 6) & 0x3F | 0x40;
          }
          else {
            uint64_t v17 = (v13 >> 6) & 0x3F;
          }
          sub_10012BF84(v17, 7u);
          BOOL v18 = v13 > 0xFFF;
          v13 >>= 6;
        }
        while (v18);
      }
      switch(v11 >> 62)
      {
        case 1uLL:
        case 2uLL:
          sub_10000F1F0(v10, v11);
          break;
        default:
          break;
      }
      Data.Iterator.init(_:at:)();
      while (1)
      {
        LOWORD(v19) = Data.Iterator.next()();
        if ((v19 & 0x100) != 0) {
          break;
        }
        sub_10012BF84(v19, 8u);
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    case 2uLL:
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v14 = *(void *)(v10 + 24);
      unint64_t v13 = v14 - v15;
      if (!__OFSUB__(v14, v15)) {
        goto LABEL_13;
      }
      goto LABEL_30;
    case 3uLL:
      goto LABEL_15;
    default:
      unint64_t v13 = BYTE6(v11);
      goto LABEL_14;
  }
}

uint64_t sub_10025C110(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  type metadata accessor for BitCollector();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1002B8420;
  *(unsigned char *)(v5 + 32) = 0;
  unint64_t v6 = *(void *)(a1 + 72);
  if (v6 >> 62)
  {
LABEL_191:
    swift_bridgeObjectRetain();
    unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
LABEL_192:
    swift_bridgeObjectRelease();
    return v5;
  }
  unint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_192;
  }
LABEL_3:
  unint64_t v135 = v6 & 0xC000000000000001;
  if ((v6 & 0xC000000000000001) != 0) {
    goto LABEL_196;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void *)(v6 + 32);
  swift_retain();
LABEL_6:
  uint64_t v9 = *(void *)a1;
  if (!*(void *)(*(void *)a1 + 16))
  {
LABEL_171:
    swift_bridgeObjectRelease();
LABEL_173:
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease();
    uint64_t v139 = 0x6E6F697473657551;
    unint64_t v141 = 0xE900000000000020;
    uint64_t v76 = *(void *)(v8 + 16);
    long long v75 = *(void **)(v8 + 24);
    swift_bridgeObjectRetain();
    v77._uint64_t countAndFlagsBits = v76;
    v77._object = v75;
    String.append(_:)(v77);
    swift_bridgeObjectRelease();
    v78._object = (void *)0x80000001002D61E0;
    v78._uint64_t countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v78);
LABEL_174:
    sub_10025D3C4();
    swift_allocError();
    uint64_t *v79 = v139;
    v79[1] = v141;
    swift_willThrow();
LABEL_175:
    swift_release();
    goto LABEL_176;
  }
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_1001BECD0(v10);
  if ((v12 & 1) == 0)
  {
LABEL_172:
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_173;
  }
  unint64_t v128 = v6 + 32;
  uint64_t v129 = v6 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = 1;
  uint64_t v137 = v5;
  unint64_t v126 = v3;
  unint64_t v127 = v6;
  unint64_t v125 = a1;
  uint64_t v133 = v9;
  unint64_t v134 = v7;
  while (1)
  {
    unint64_t v136 = v13;
    uint64_t v14 = (unsigned __int8 *)(*(void *)(v9 + 56) + 16 * v11);
    unsigned int v15 = *v14;
    uint64_t v16 = *((void *)v14 + 1);
    swift_retain();
    swift_release();
    int v17 = *(unsigned __int8 *)(v8 + 32);
    if (v17 == 3) {
      goto LABEL_10;
    }
    if (!*(void *)(*(void *)(v8 + 56) + 16))
    {
      if (v15 >= 3)
      {
        if (v15 == 3) {
          sub_10012BF84(0, 1u);
        }
        goto LABEL_10;
      }
      sub_10012BF84(1, 1u);
      uint64_t v131 = v16;
      if (!v17) {
        goto LABEL_73;
      }
LABEL_19:
      if (v17 == 1)
      {
        if (v16)
        {
          swift_bridgeObjectRelease();
          unint64_t v140 = 0;
          unint64_t v142 = 0xE000000000000000;
          _StringGuts.grow(_:)(67);
          v107._uint64_t countAndFlagsBits = 0xD000000000000041;
          v107._object = (void *)0x80000001002D6280;
          String.append(_:)(v107);
          uint64_t v109 = *(void *)(v8 + 16);
          long long v108 = *(void **)(v8 + 24);
          swift_bridgeObjectRetain();
          v110._uint64_t countAndFlagsBits = v109;
          v110._object = v108;
          String.append(_:)(v110);
          swift_bridgeObjectRelease();
          goto LABEL_188;
        }
        uint64_t v18 = *(void *)(a1 + 8);
        if (*(void *)(v18 + 16))
        {
          uint64_t v19 = swift_retain();
          uint64_t v20 = sub_1001BECD0(v19);
          if (v21)
          {
            uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 8 * v20);
            swift_bridgeObjectRetain();
            swift_release();
            unint64_t v23 = *(void *)(v8 + 40);
            if (v23 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v74 > 63)
              {
LABEL_185:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _StringGuts.grow(_:)(40);
                swift_bridgeObjectRelease();
                unint64_t v111 = 0xD000000000000026;
                long long v112 = "Too many options defined for question ";
                goto LABEL_186;
              }
            }
            else if (*(uint64_t *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) > 63)
            {
              goto LABEL_185;
            }
            unint64_t v24 = *(void *)(v8 + 40);
            unint64_t v132 = v24;
            if (!(v24 >> 62))
            {
              uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v25) {
                goto LABEL_27;
              }
              goto LABEL_168;
            }
            swift_bridgeObjectRetain();
            uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
            if (!v25)
            {
LABEL_168:
              swift_release();
              swift_bridgeObjectRelease();
LABEL_169:
              swift_bridgeObjectRelease();
              unint64_t v3 = v126;
              goto LABEL_11;
            }
LABEL_27:
            unint64_t v7 = 0;
            a1 = v132 & 0xC000000000000001;
            uint64_t v130 = v22 + 56;
            while (1)
            {
              if (a1)
              {
                uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                BOOL v28 = __OFADD__(v7++, 1);
                if (v28) {
                  goto LABEL_189;
                }
              }
              else
              {
                if (v7 >= *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_195;
                }
                uint64_t v27 = *(void *)(v132 + 32 + 8 * v7);
                swift_retain();
                BOOL v28 = __OFADD__(v7++, 1);
                if (v28)
                {
LABEL_189:
                  __break(1u);
                  goto LABEL_190;
                }
              }
              if ((v22 & 0xC000000000000001) != 0)
              {
                uint64_t v26 = __CocoaSet.contains(_:)() & 1;
              }
              else if (*(void *)(v22 + 16))
              {
                Hasher.init(_seed:)();
                unint64_t v3 = *(void *)(v27 + 16);
                unint64_t v6 = *(void *)(v27 + 24);
                swift_bridgeObjectRetain();
                String.hash(into:)();
                swift_bridgeObjectRelease();
                Swift::Int v29 = Hasher._finalize()();
                uint64_t v30 = -1 << *(unsigned char *)(v22 + 32);
                unint64_t v31 = v29 & ~v30;
                if (((*(void *)(v130 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
                {
                  uint64_t v26 = 0;
LABEL_48:
                  uint64_t v5 = v137;
                  goto LABEL_29;
                }
                uint64_t v32 = *(void *)(*(void *)(v22 + 48) + 8 * v31);
                if (*(void *)(v32 + 16) == v3 && *(void *)(v32 + 24) == v6)
                {
                  uint64_t v26 = 1;
                  goto LABEL_48;
                }
                uint64_t v124 = *(void *)(v22 + 48);
                if (_stringCompareWithSmolCheck(_:_:expecting:)())
                {
                  uint64_t v26 = 1;
                  uint64_t v5 = v137;
                }
                else
                {
                  uint64_t v123 = ~v30;
                  unint64_t v34 = (v31 + 1) & ~v30;
                  if ((*(void *)(v130 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
                  {
                    uint64_t v35 = *(void *)(v124 + 8 * v34);
                    BOOL v36 = *(void *)(v35 + 16) == v3 && *(void *)(v35 + 24) == v6;
                    uint64_t v5 = v137;
                    if (!v36 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                    {
                      unint64_t v37 = (v34 + 1) & v123;
                      if (((*(void *)(v130 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
                      {
                        uint64_t v26 = 0;
                        goto LABEL_29;
                      }
                      while (1)
                      {
                        uint64_t v38 = *(void *)(v124 + 8 * v37);
                        BOOL v39 = *(void *)(v38 + 16) == v3 && *(void *)(v38 + 24) == v6;
                        if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                          break;
                        }
                        uint64_t v26 = 0;
                        unint64_t v37 = (v37 + 1) & v123;
                        if (((*(void *)(v130 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
                          goto LABEL_29;
                        }
                      }
                    }
                    uint64_t v26 = 1;
                  }
                  else
                  {
                    uint64_t v26 = 0;
                    uint64_t v5 = v137;
                  }
                }
              }
              else
              {
                uint64_t v26 = 0;
              }
LABEL_29:
              sub_10012BF84(v26, 1u);
              swift_release();
              if (v7 == v25)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                unint64_t v6 = v127;
                a1 = v125;
                goto LABEL_169;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v139 = 0;
        unint64_t v141 = 0xE000000000000000;
        _StringGuts.grow(_:)(53);
        v113._uint64_t countAndFlagsBits = 0xD000000000000033;
        v113._object = (void *)0x80000001002D62D0;
        String.append(_:)(v113);
LABEL_187:
        uint64_t v115 = *(void *)(v8 + 16);
        long long v114 = *(void **)(v8 + 24);
        swift_bridgeObjectRetain();
        v116._uint64_t countAndFlagsBits = v115;
        v116._object = v114;
        String.append(_:)(v116);
        swift_bridgeObjectRelease();
        goto LABEL_174;
      }
      unint64_t v50 = *(void *)(v8 + 40);
      if (v50 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v51) {
          goto LABEL_87;
        }
      }
      else
      {
        uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v51)
        {
LABEL_87:
          if ((v50 & 0xC000000000000001) != 0)
          {
            uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_201;
            }
            uint64_t v52 = *(void *)(v50 + 32);
            swift_retain();
          }
          if (*(unsigned char *)(v52 + 40) != 1)
          {
LABEL_177:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _StringGuts.grow(_:)(35);
            swift_bridgeObjectRelease();
            uint64_t v81 = *(void *)(v52 + 16);
            char v80 = *(void **)(v52 + 24);
            swift_bridgeObjectRetain();
            v82._uint64_t countAndFlagsBits = v81;
            v82._object = v80;
            String.append(_:)(v82);
            swift_bridgeObjectRelease();
            sub_10025D3C4();
            swift_allocError();
            void *v83 = 0xD000000000000021;
            v83[1] = 0x80000001002D6250;
            swift_willThrow();
            swift_release();
            swift_release();
            uint64_t v5 = v137;
            swift_release();
            swift_release();
            return v5;
          }
          unint64_t v53 = a1;
          a1 = 0;
          uint64_t v54 = *(void *)(v53 + 24);
          uint64_t v5 = v51 - 1;
          while (1)
          {
            if (*(void *)(v54 + 16))
            {
              uint64_t v55 = swift_retain();
              uint64_t v56 = sub_1001BECD0(v55);
              if (v57)
              {
                uint64_t v58 = (unint64_t *)(*(void *)(v54 + 56) + 16 * v56);
                unint64_t v6 = *v58;
                unint64_t v3 = v58[1];
                swift_bridgeObjectRetain();
              }
              else
              {
                unint64_t v6 = 0;
                unint64_t v3 = 0xE000000000000000;
              }
              swift_release();
            }
            else
            {
              unint64_t v6 = 0;
              unint64_t v3 = 0xE000000000000000;
            }
            sub_100008F88(a2, a2[3]);
            sub_1000D3CE0(v6, v3, (uint64_t)v143);
            swift_bridgeObjectRelease();
            sub_10025BE18(v137, (uint64_t)v143);
            sub_10025D418((uint64_t)v143);
            swift_release();
            if (v5 == a1) {
              break;
            }
            unint64_t v59 = a1 + 1;
            if ((v50 & 0xC000000000000001) != 0)
            {
              uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              if (__OFADD__(v59, 1)) {
                goto LABEL_190;
              }
            }
            else
            {
              if (v59 >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_198;
              }
              uint64_t v52 = *(void *)(v50 + 8 * a1 + 40);
              swift_retain();
              if (__OFADD__(v59, 1))
              {
LABEL_190:
                __break(1u);
                goto LABEL_191;
              }
            }
            ++a1;
            if ((*(unsigned char *)(v52 + 40) & 1) == 0) {
              goto LABEL_177;
            }
          }
          swift_release();
          uint64_t v5 = v137;
          unint64_t v3 = v126;
          unint64_t v6 = v127;
          a1 = v125;
          goto LABEL_159;
        }
      }
      swift_release();
LABEL_159:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v15 >= 3)
    {
      if (v15 != 4)
      {
        swift_bridgeObjectRelease();
        _StringGuts.grow(_:)(45);
        swift_bridgeObjectRelease();
        unint64_t v140 = 0xD000000000000013;
        unint64_t v142 = 0x80000001002D6210;
        uint64_t v118 = *(void *)(v8 + 16);
        long long v117 = *(void **)(v8 + 24);
        swift_bridgeObjectRetain();
        v119._uint64_t countAndFlagsBits = v118;
        v119._object = v117;
        String.append(_:)(v119);
        swift_bridgeObjectRelease();
        v120._uint64_t countAndFlagsBits = 0xD000000000000018;
        v120._object = (void *)0x80000001002D6230;
        String.append(_:)(v120);
LABEL_188:
        sub_10025D3C4();
        swift_allocError();
        *long long v121 = v140;
        v121[1] = v142;
        swift_willThrow();
        swift_release();
        goto LABEL_175;
      }
LABEL_10:
      swift_release();
      swift_release();
      goto LABEL_11;
    }
    uint64_t v131 = v16;
    if (*(unsigned char *)(v8 + 32)) {
      goto LABEL_19;
    }
LABEL_73:
    if (!v16)
    {
      swift_bridgeObjectRelease();
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease();
      unint64_t v111 = 0xD000000000000029;
      long long v112 = "No option recorded for answered question ";
LABEL_186:
      uint64_t v139 = v111;
      unint64_t v141 = (unint64_t)(v112 - 32) | 0x8000000000000000;
      goto LABEL_187;
    }
    unint64_t v42 = *(void *)(v8 + 40);
    uint64_t v43 = (void *)v8;
    if (v42 >> 62) {
      break;
    }
    uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (!v44) {
      goto LABEL_179;
    }
LABEL_76:
    unint64_t v45 = v42 & 0xC000000000000001;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_200;
      }
      uint64_t v46 = *(void *)(v42 + 32);
      swift_retain();
    }
    BOOL v47 = *(void *)(v46 + 16) == *(void *)(v131 + 16) && *(void *)(v46 + 24) == *(void *)(v131 + 24);
    uint64_t v48 = (void *)v8;
    if (v47)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      if ((v49 & 1) == 0)
      {
        if (v44 == 1) {
          goto LABEL_179;
        }
        if (v45)
        {
          uint64_t v68 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_207;
          }
          uint64_t v68 = *(void *)(v42 + 40);
          swift_retain();
        }
        if (*(void *)(v68 + 16) == *(void *)(v131 + 16) && *(void *)(v68 + 24) == *(void *)(v131 + 24))
        {
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v60 = 1;
        }
        else
        {
          char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_release();
          if (v69)
          {
            swift_bridgeObjectRelease();
            unint64_t v60 = 1;
          }
          else
          {
            uint64_t v70 = 1;
            while (1)
            {
              unint64_t v60 = v70 + 1;
              if (__OFADD__(v70, 1)) {
                goto LABEL_202;
              }
              if (v60 == v44) {
                goto LABEL_179;
              }
              if (v45)
              {
                uint64_t v71 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if ((v60 & 0x8000000000000000) != 0) {
                  goto LABEL_205;
                }
                if (v60 >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_206;
                }
                uint64_t v71 = *(void *)(v42 + 32 + 8 * v60);
                swift_retain();
              }
              if (*(void *)(v71 + 16) == *(void *)(v131 + 16) && *(void *)(v71 + 24) == *(void *)(v131 + 24)) {
                break;
              }
              char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_release();
              ++v70;
              if (v73)
              {
                swift_bridgeObjectRelease();
                uint64_t v48 = v43;
                goto LABEL_113;
              }
            }
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v48 = v43;
          }
        }
        goto LABEL_113;
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v60 = 0;
LABEL_113:
    unint64_t v61 = v48[5];
    if (v61 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v5 = v137;
      if ((v62 & 0x8000000000000000) != 0) {
        goto LABEL_208;
      }
    }
    else
    {
      unint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v5 = v137;
    }
    if (v62 >= 0x100) {
      goto LABEL_208;
    }
    if (v62 >= 2u)
    {
      unsigned __int8 v63 = 1;
      do
        v63 *= 2;
      while ((v63 & 0xFEu) < v62);
      int v64 = 0;
      unsigned __int8 v65 = v63 - v62;
      do
      {
        LOBYTE(v66) = v64++;
        unsigned int v67 = v63;
        v63 >>= 1;
      }
      while (v67 > 1);
      if ((v60 & 0x8000000000000000) != 0 || v60 >= 0x100) {
        goto LABEL_208;
      }
      if (v65 <= v60)
      {
        unint64_t v60 = v60 + v65;
        if ((v60 & 0x100) != 0) {
          goto LABEL_204;
        }
      }
      else
      {
        int v66 = v66 - 1;
        if ((v66 & 0xFFFFFF00) != 0) {
          goto LABEL_203;
        }
      }
      if (v66 >= 8u || v60 >> v66)
      {
        swift_bridgeObjectRelease();
        _StringGuts.grow(_:)(86);
        v84._uint64_t countAndFlagsBits = 0x206465646F636E45;
        v84._object = (void *)0xEF20726577736E61;
        String.append(_:)(v84);
        char v144 = v60;
        v85._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v85);
        swift_bridgeObjectRelease();
        v86._uint64_t countAndFlagsBits = 0x74706F20726F6620;
        v86._object = (void *)0xEC000000206E6F69;
        String.append(_:)(v86);
        uint64_t v87 = *(void *)(v131 + 16);
        long long v88 = *(void **)(v131 + 24);
        swift_bridgeObjectRetain();
        v89._uint64_t countAndFlagsBits = v87;
        v89._object = v88;
        String.append(_:)(v89);
        swift_bridgeObjectRelease();
        v90._uint64_t countAndFlagsBits = 0x65757120726F6620;
        v90._object = (void *)0xEE00206E6F697473;
        String.append(_:)(v90);
        uint64_t v91 = v48[2];
        long long v92 = (void *)v48[3];
        swift_bridgeObjectRetain();
        v93._uint64_t countAndFlagsBits = v91;
        v93._object = v92;
        String.append(_:)(v93);
        swift_bridgeObjectRelease();
        v94._object = (void *)0x80000001002D6370;
        v94._uint64_t countAndFlagsBits = 0xD000000000000020;
        String.append(_:)(v94);
        char v144 = v66;
        v95._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v95);
        swift_bridgeObjectRelease();
        v96._uint64_t countAndFlagsBits = 0x7374696220;
        v96._object = (void *)0xE500000000000000;
        String.append(_:)(v96);
        sub_10025D3C4();
        swift_allocError();
        *long long v97 = 0;
        v97[1] = 0xE000000000000000;
        swift_willThrow();
        swift_release();
        swift_release_n();
        goto LABEL_176;
      }
      sub_10012BF84(v60, v66);
    }
    swift_release();
    swift_release_n();
    unint64_t v3 = v126;
    unint64_t v6 = v127;
    a1 = v125;
LABEL_11:
    uint64_t v9 = v133;
    unint64_t v7 = v134;
    if (v136 == v134) {
      goto LABEL_192;
    }
    if (!v135)
    {
      if (v136 >= *(void *)(v129 + 16)) {
        goto LABEL_199;
      }
      uint64_t v8 = *(void *)(v128 + 8 * v136);
      swift_retain();
      uint64_t v13 = v136 + 1;
      if (!__OFADD__(v136, 1)) {
        goto LABEL_68;
      }
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
    uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v13 = v136 + 1;
    if (__OFADD__(v136, 1)) {
      goto LABEL_194;
    }
LABEL_68:
    if (!*(void *)(v133 + 16)) {
      goto LABEL_171;
    }
    uint64_t v40 = swift_retain();
    uint64_t v11 = sub_1001BECD0(v40);
    if ((v41 & 1) == 0) {
      goto LABEL_172;
    }
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v44) {
    goto LABEL_76;
  }
LABEL_179:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(61);
  v98._uint64_t countAndFlagsBits = 0x206E6F6974704FLL;
  v98._object = (void *)0xE700000000000000;
  String.append(_:)(v98);
  uint64_t v100 = *(void *)(v131 + 16);
  long long v99 = *(void **)(v131 + 24);
  swift_bridgeObjectRetain();
  v101._uint64_t countAndFlagsBits = v100;
  v101._object = v99;
  String.append(_:)(v101);
  swift_bridgeObjectRelease();
  v102._uint64_t countAndFlagsBits = 0xD000000000000032;
  v102._object = (void *)0x80000001002D63A0;
  String.append(_:)(v102);
  uint64_t v104 = v43[2];
  long long v103 = (void *)v43[3];
  swift_bridgeObjectRetain();
  v105._uint64_t countAndFlagsBits = v104;
  v105._object = v103;
  String.append(_:)(v105);
  swift_bridgeObjectRelease();
  sub_10025D3C4();
  swift_allocError();
  void *v106 = 0;
  v106[1] = 0xE000000000000000;
  swift_willThrow();
  swift_release();
  swift_release_n();
  uint64_t v5 = v137;
LABEL_176:
  swift_release();
  return v5;
}

unint64_t sub_10025D3C4()
{
  unint64_t result = qword_100392290;
  if (!qword_100392290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100392290);
  }
  return result;
}

uint64_t sub_10025D418(uint64_t a1)
{
  return a1;
}

uint64_t sub_10025D448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100392298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for QuestionnaireSerializationError()
{
  return &type metadata for QuestionnaireSerializationError;
}

id sub_10025D4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  unint64_t v6 = *(uint8_t **)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v58 = v6;
  __chkstk_darwin(v5);
  uint64_t v56 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  unint64_t v53 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager] = 0;
  char v12 = &v2[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback];
  *(void *)char v12 = a1;
  *((void *)v12 + 1) = a2;
  uint64_t v13 = self;
  uint64_t v54 = v2;
  uint64_t v52 = a2;
  swift_retain();
  id v49 = v13;
  id v14 = [v13 mainBundle];
  id v15 = [v14 bundleIdentifier];

  unint64_t v16 = 0x80000001002C5A40;
  if (v15)
  {
    int v17 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;
  }
  else
  {
    int v17 = (void *)0xD000000000000012;
    unint64_t v19 = 0x80000001002C5A40;
  }
  unint64_t v20 = sub_10000FDBC();
  unint64_t v61 = v17;
  unint64_t v62 = v19;
  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v21._object = (void *)0x80000001002D6500;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  unint64_t v61 = &_swiftEmptyArrayStorage;
  uint64_t v22 = sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v23 = sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  v48[1] = v23;
  uint64_t v48[2] = v22;
  uint64_t v51 = v8;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v24 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v25 = (void (*)(char *, uint64_t, uint64_t))*((void *)v58 + 13);
  v58 += 104;
  v25(v56, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v57);
  unint64_t v50 = v20;
  *(void *)&v54[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v26 = [v49 mainBundle];
  id v27 = [v26 bundleIdentifier];

  if (v27)
  {
    BOOL v28 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v29;
  }
  else
  {
    BOOL v28 = (void *)0xD000000000000012;
  }
  unint64_t v61 = v28;
  unint64_t v62 = v16;
  swift_bridgeObjectRetain();
  v30._uint64_t countAndFlagsBits = 0xD000000000000017;
  v30._object = (void *)0x80000001002D6520;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  unint64_t v61 = &_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v25(v56, v24, v57);
  uint64_t v31 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v32 = v54;
  *(void *)&v54[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__managerQueue] = v31;

  unint64_t v33 = (objc_class *)type metadata accessor for IdentityServicesAgent();
  v60.receiver = v32;
  v60.super_class = v33;
  id v34 = [super init];
  uint64_t v35 = qword_10037DD80;
  id v36 = v34;
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_10000FD84(v37, (uint64_t)qword_1003A9958);
  id v38 = v36;
  BOOL v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    char v41 = (uint8_t *)swift_slowAlloc();
    unint64_t v61 = (void *)swift_slowAlloc();
    *(_DWORD *)char v41 = 136446210;
    uint64_t v58 = v41 + 4;
    id v42 = v38;
    id v43 = [v42 description];
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v46 = v45;

    uint64_t v59 = sub_1001B3178(v44, v46, (uint64_t *)&v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%{public}s] init", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release();
  }
  return v38;
}

id sub_10025DB10()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for IdentityServicesAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t sub_10025DD9C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *char v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue);
    int v17 = (void *)swift_allocObject();
    void v17[2] = v16;
    v17[3] = v15;
    v17[4] = ObjectType;
    aBlock[4] = sub_100260F68;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100207A1C;
    aBlock[3] = &unk_100361280;
    unint64_t v18 = _Block_copy(aBlock);
    id v19 = v16;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v23 = &_swiftEmptyArrayStorage;
    sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
    swift_release();
    swift_release();
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10025E184(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone((Class)IDSOffGridStateManager);
  aBlock[0] = 0;
  id v11 = a1;
  id v12 = [v10 initWithQueue:v11 error:aBlock];
  id v13 = aBlock[0];
  if (v12)
  {

    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = (void *)Strong;
      unint64_t v16 = *(void **)(Strong + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager);
      *(void *)(Strong + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager) = v12;
      id v17 = v12;

      [v17 setDelegate:v15];
      if (qword_10037DDD8 != -1) {
        swift_once();
      }
      uint64_t v35 = v7;
      uint64_t v36 = v6;
      uint64_t v37 = v3;
      uint64_t v18 = type metadata accessor for Logger();
      sub_10000FD84(v18, (uint64_t)qword_1003A9A60);
      id v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Fetching initial mode", v21, 2u);
        swift_slowDealloc();
      }

      __int16 v22 = sub_10026044C(0x6C616974696E49, 0xE700000000000000, (uint64_t)[v17 offGridMode], (unint64_t)[v17 publishStatus]);
      sub_10000FDBC();
      uint64_t v23 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(_WORD *)(v25 + 24) = v22;
      aBlock[4] = sub_100260FAC;
      aBlock[5] = (id)v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100207A1C;
      aBlock[3] = &unk_1003612D0;
      id v26 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = &_swiftEmptyArrayStorage;
      sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004010((uint64_t *)&unk_10037FF80);
      sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();

      _Block_release(v26);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
    }
    else
    {
    }
  }
  else
  {
    id v27 = v13;
    uint64_t v28 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10037DDD8 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000FD84(v29, (uint64_t)qword_1003A9A60);
    swift_errorRetain();
    swift_errorRetain();
    Swift::String v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446210;
      uint64_t v39 = v28;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v33 = String.init<A>(describing:)();
      uint64_t v39 = sub_1001B3178(v33, v34, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Error initializing IDSOffGridStateManager: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10025E810(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback);
    swift_retain();

    v5(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10025E89C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (void *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *id v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v1;
    aBlock[4] = sub_100260F10;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100207A1C;
    aBlock[3] = &unk_100361230;
    unint64_t v16 = _Block_copy(aBlock);
    id v17 = v1;
    static DispatchQoS.unspecified.getter();
    v18[1] = _swiftEmptyArrayStorage;
    sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, void))(v6 + 8))(v8, v18[0]);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10025EC28(int a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a3;
  LODWORD(v8) = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v38 = v12;
  __chkstk_darwin(v12);
  objc_super v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10037DDD8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9A60);
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    int v34 = a2;
    aBlock[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    if (v8) {
      uint64_t v20 = 1702195828;
    }
    else {
      uint64_t v20 = 0x65736C6166;
    }
    int v32 = v8;
    if (v8) {
      unint64_t v8 = 0xE400000000000000;
    }
    else {
      unint64_t v8 = 0xE500000000000000;
    }
    uint64_t v33 = v9;
    os_log_type_t v40 = (void *)sub_1001B3178(v20, v8, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    LOBYTE(v40) = v34;
    uint64_t v21 = String.init<A>(describing:)();
    os_log_type_t v40 = (void *)sub_1001B3178(v21, v22, aBlock);
    uint64_t v9 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    LOBYTE(v8) = v32;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "setOffTheGridMode: on - %s, requester: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    LOBYTE(a2) = v34;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = *(void **)(v5 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v36;
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = v26;
  *(void *)(v25 + 32) = a4;
  *(unsigned char *)(v25 + 40) = v8 & 1;
  *(unsigned char *)(v25 + 41) = a2;
  uint64_t v27 = ObjectType;
  *(void *)(v25 + 48) = v24;
  *(void *)(v25 + 56) = v27;
  aBlock[4] = (uint64_t)sub_100260D7C;
  aBlock[5] = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100207A1C;
  aBlock[3] = (uint64_t)&unk_1003610F0;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v29 = v24;
  static DispatchQoS.unspecified.getter();
  os_log_type_t v40 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v11, v9);
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v14, v38);
  swift_release();
  return swift_release();
}

void sub_10025F120(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v35 = a7;
  uint64_t v36 = a6;
  uint64_t v39 = a2;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  objc_super v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (unint64_t v16 = (void *)Strong,
        os_log_type_t v17 = *(void **)(Strong + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager),
        id v18 = v17,
        v16,
        v17))
  {
    if (a4) {
      uint64_t v19 = 2;
    }
    else {
      uint64_t v19 = 1;
    }
    id v20 = [objc_allocWithZone((Class)IDSOffGridModeOptions) init];
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setEntryPointSource:v28];

    id v29 = (void *)swift_allocObject();
    Swift::String v30 = v36;
    uint64_t v31 = v39;
    void v29[2] = v36;
    v29[3] = v31;
    uint64_t v32 = v35;
    v29[4] = a3;
    v29[5] = v32;
    uint64_t v44 = sub_100260E38;
    unint64_t v45 = v29;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v41 = 1107296256;
    id v42 = sub_10025FDC0;
    id v43 = &unk_100361190;
    uint64_t v33 = _Block_copy(&aBlock);
    id v34 = v30;
    swift_retain();
    swift_release();
    [v18 setOffGridMode:v19 options:v20 completion:v33];
    _Block_release(v33);
  }
  else
  {
    if (qword_10037DDD8 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000FD84(v21, (uint64_t)qword_1003A9A60);
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "_manager is down, ignoring setOffTheGridMode request", v24, 2u);
      swift_slowDealloc();
    }

    sub_10000FDBC();
    uint64_t v25 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v39;
    *(void *)(v26 + 24) = a3;
    uint64_t v44 = sub_100260DCC;
    unint64_t v45 = (void *)v26;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v41 = 1107296256;
    id v42 = sub_100207A1C;
    id v43 = &unk_100361140;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v37);
  }
}

uint64_t sub_10025F67C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v50 = a2;
  uint64_t v51 = a7;
  uint64_t v48 = a5;
  uint64_t v55 = a1;
  uint64_t v54 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  os_log_type_t v17 = (uint64_t *)((char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v17 = a4;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v18 = a4;
  LOBYTE(a4) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((a4 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v19 = &unk_10037D000;
  uint64_t v14 = v55;
  if (a3)
  {
    swift_errorRetain();
    if (qword_10037DDD8 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000FD84(v20, (uint64_t)qword_1003A9A60);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v47 = a6;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v56 = a3;
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v24 = 136446210;
      unint64_t v46 = v12;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v56 = sub_1001B3178(v26, v27, aBlock);
      uint64_t v12 = v46;
      uint64_t v14 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v19 = (void *)&unk_10037D000;
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "setOffGridMode failed: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v47;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  if (v19[443] != -1) {
    goto LABEL_14;
  }
LABEL_9:
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9A60);
  id v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v56 = v14;
    aBlock[0] = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    type metadata accessor for IDSOffGridMode(0);
    uint64_t v33 = String.init<A>(describing:)();
    uint64_t v47 = a6;
    uint64_t v56 = sub_1001B3178(v33, v34, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    uint64_t v35 = v14;
    uint64_t v36 = v50;
    uint64_t v56 = v50;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    uint64_t v37 = String.init<A>(describing:)();
    uint64_t v56 = sub_1001B3178(v37, v38, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a6 = v47;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "setOffGridMode returned: %{public}s, publishStatus: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v35 = v14;
    uint64_t v36 = v50;
  }
  sub_10000FDBC();
  uint64_t v39 = (void *)static OS_dispatch_queue.main.getter();
  os_log_type_t v40 = (void *)swift_allocObject();
  v40[2] = v48;
  void v40[3] = a6;
  v40[4] = v35;
  v40[5] = v36;
  v40[6] = v51;
  aBlock[4] = (uint64_t)sub_100260E7C;
  aBlock[5] = (uint64_t)v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100207A1C;
  aBlock[3] = (uint64_t)&unk_1003611E0;
  uint64_t v41 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v42 = v52;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v43 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v42, v49);
}

void sub_10025FDC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

BOOL sub_10025FE48(unint64_t a1)
{
  if (a1 < 4) {
    return (a1 & 0xF) == 0;
  }
  if (qword_10037DDD8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9A60);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown publishStatus value: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0;
}

uint64_t type metadata accessor for IdentityServicesAgent()
{
  return self;
}

uint64_t sub_10026003C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    unint64_t v7 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback);
    swift_retain();

    uint64_t v8 = sub_10026044C(0xD000000000000012, 0x80000001002D6460, a2, a3);
    v7(v8);
    return swift_release();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OffTheGridMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10026024CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OffTheGridMode()
{
  return &type metadata for OffTheGridMode;
}

uint64_t sub_100260284(uint64_t a1, unint64_t a2)
{
  BOOL v3 = sub_10025FE48(a2);
  if (!a1) {
    return 2;
  }
  if (a1 != 1)
  {
    if (a1 == 2)
    {
      if (v3) {
        return 257;
      }
      else {
        return 1;
      }
    }
    if (qword_10037DDD8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A9A60);
    unsigned int v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      type metadata accessor for IDSOffGridMode(0);
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Unknown offGridMode value: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 2;
  }
  if (v3) {
    return 256;
  }
  else {
    return 0;
  }
}

uint64_t sub_10026044C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_100260284(a3, a4);
  if (qword_10037DDD8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A60);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446978;
    swift_bridgeObjectRetain();
    sub_1001B3178(a1, a2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2082;
    type metadata accessor for IDSOffGridMode(0);
    uint64_t v11 = String.init<A>(describing:)();
    sub_1001B3178(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2082;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    uint64_t v13 = String.init<A>(describing:)();
    sub_1001B3178(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 32) = 2082;
    sub_100004010(&qword_100380298);
    uint64_t v15 = String.init<A>(describing:)();
    sub_1001B3178(v15, v16, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s: (mode: %{public}s, publishStatus: %{public}s) -> %{public}s", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v6;
}

uint64_t sub_100260708(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DDD8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A9A60);
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = ObjectType;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v39 = v37;
    aBlock[0] = v15;
    type metadata accessor for IDSOffGridMode(0);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v31 = v4;
    uint64_t v39 = sub_1001B3178(v16, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v39 = v38;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v39 = sub_1001B3178(v18, v19, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v4 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "offGridMode update received: %s, publishStatus: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    uint64_t ObjectType = v30;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v20 = *(void **)(v36 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue);
  void *v10 = v20;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v20)
  {
    sub_10000FDBC();
    uint64_t v23 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v26 = v37;
    _OWORD v25[2] = v24;
    v25[3] = v26;
    Swift::String v25[4] = v38;
    v25[5] = ObjectType;
    aBlock[4] = (uint64_t)sub_100260D10;
    aBlock[5] = (uint64_t)v25;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100207A1C;
    aBlock[3] = (uint64_t)&unk_1003610A0;
    unint64_t v27 = _Block_copy(aBlock);
    swift_release();
    uint64_t v28 = v32;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    id v29 = v34;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v28, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100260CA0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100260CD8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100260D10()
{
  return sub_10026003C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100260D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100260D2C()
{
  return swift_release();
}

uint64_t sub_100260D34()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100260D7C()
{
  sub_10025F120(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(unsigned __int8 *)(v0 + 41), *(void **)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_100260D94()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100260DCC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(2);
}

uint64_t sub_100260DF8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100260E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025F67C(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_100260E44()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100260E7C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[2];
  uint64_t v2 = sub_10026044C(0x724766664F746573, 0xEE0065646F4D6469, v0[4], v0[5]);
  return v1(v2);
}

uint64_t sub_100260ED8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100260F10()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager) = 0;
}

uint64_t sub_100260F28()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100260F68()
{
  sub_10025E184(*(void **)(v0 + 16));
}

uint64_t sub_100260F74()
{
  swift_release();

  return _swift_deallocObject(v0, 26, 7);
}

uint64_t sub_100260FAC()
{
  return sub_10025E810(*(void *)(v0 + 16), *(unsigned __int16 *)(v0 + 24));
}

unsigned char *storeEnumTagSinglePayload for OffTheGridModeRequester(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100261084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OffTheGridModeRequester()
{
  return &type metadata for OffTheGridModeRequester;
}

unint64_t sub_1002610C0()
{
  unint64_t result = qword_100392350;
  if (!qword_100392350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100392350);
  }
  return result;
}

uint64_t sub_10026114C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100261174(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_10026121C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      swift_beginAccess();
      uint64_t v3 = swift_unknownObjectWeakLoadStrong();
      if (v3)
      {
        unsigned int v4 = (void *)v3;
        sub_100262034(*(double *)(*(void *)(v2 + 40) + 64), *(double *)(*(void *)(v2 + 40) + 72));
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_1002612F0()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    unsigned int v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] loadView", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v11 = sub_1001AE608(v2);
    os_log_type_t v13 = v12;
    uint64_t v15 = v14;
    unint64_t v17 = v16;
    id v18 = [objc_allocWithZone((Class)UIView) init];
    [v18 addSubview:v11];
    [v18 addSubview:v13];
    [v18 addSubview:v15];
    [v18 addSubview:v17];
    [v2 setView:v18];
    unint64_t v19 = (char **)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
    uint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
    id v21 = v19[1];
    os_log_type_t v22 = v19[2];
    uint64_t v23 = v19[3];
    *unint64_t v19 = v11;
    v19[1] = v13;
    void v19[2] = v15;
    void v19[3] = v17;
    uint64_t v24 = v11;
    uint64_t v25 = v13;
    uint64_t v26 = v15;
    unint64_t v27 = v17;
    sub_100265CAC(v20, v21, v22, v23);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v28 = v2;
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136446210;
      uint64_t v32 = v28;
      id v33 = [v32 description];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v35;

      sub_1001B3178(v34, v36, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%{public}s] contentProducer expired", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_100261778()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    unsigned int v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] viewDidLoad", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v16.receiver = v2;
  v16.super_class = v11;
  [super viewDidLoad];
  [v2 setOverrideUserInterfaceStyle:2];
  unint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture];
  [v12 addTarget:v2 action:"didTap"];
  id v13 = [v2 view];
  if (v13)
  {
    uint64_t v14 = v13;
    [v13 addGestureRecognizer:v12];
  }
  else
  {
    __break(1u);
  }
}

id sub_100261AF0(char a1, char *a2, SEL *a3)
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  id v8 = v3;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v20 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    format = a2;
    id v12 = v8;
    id v13 = [v12 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    a3 = v20;
    sub_1001B3178(v14, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, format, v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v17 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v22.receiver = v8;
  v22.super_class = v17;
  return [super a1 & 1];
}

uint64_t sub_100261DBC()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    unsigned int v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] didTap", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = &v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v13 + 80))(v2, &off_100361410, ObjectType, v13);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100262034(double a1, double a2)
{
  uint64_t v3 = v2;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A99A0);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 136315138;
    uint64_t v10 = sub_1000FC35C(2, a1, a2);
    sub_1001B3178(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "updatePreferredBannerContentSize - %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id result = [v3 preferredContentSize];
  if (v14 != a1 || v13 != a2)
  {
    [v3 setPreferredContentSize:a1, a2];
    return (id)sub_100262204();
  }
  return result;
}

uint64_t sub_100262204()
{
  uint64_t v1 = v0;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A99A0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Jindo: updateJindoElement", v5, 2u);
    swift_slowDealloc();
  }

  objc_msgSend(objc_msgSend(v1, "systemApertureElementContext"), "setElementNeedsUpdate");

  return swift_unknownObjectRelease();
}

void sub_10026231C(void *a1, double a2, double a3)
{
  os_log_type_t v4 = v3;
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A99A0);
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 136315138;
    uint64_t v12 = sub_1000FC35C(2, a2, a3);
    sub_1001B3178(v12, v13, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "viewWillTransition to %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  double v14 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v27.receiver = v4;
  v27.super_class = v14;
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2 a3];
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(double *)(v16 + 24) = a2;
  *(double *)(v16 + 32) = a3;
  uint64_t v25 = sub_100265D3C;
  uint64_t v26 = v16;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_100261174;
  uint64_t v24 = &unk_1003614B0;
  unint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(double *)(v19 + 24) = a2;
  *(double *)(v19 + 32) = a3;
  uint64_t v25 = sub_100265D60;
  uint64_t v26 = v19;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_100261174;
  uint64_t v24 = &unk_100361500;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  [a1 animateAlongsideTransition:v17 completion:v20];
  _Block_release(v20);
  _Block_release(v17);
}

void sub_100262658(double a1, double a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1002627DC();
  }
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    id v7 = (void *)v6;
    sub_100262EC4(a1, a2);
  }
}

void sub_1002626F0(double a1, double a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_100262EC4(a1, a2);
  }
}

void sub_1002627DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  if (v3)
  {
    uint64_t v5 = (void *)*((void *)v2 + 2);
    os_log_type_t v4 = (void *)*((void *)v2 + 3);
    uint64_t v6 = (void *)*((void *)v2 + 1);
    id v7 = v3;
    id v8 = v6;
    id v9 = v5;
    id v10 = v4;
    id v99 = v7;
    sub_100265CAC(v3, v6, v5, v4);
    unint64_t v11 = *(void **)v2;
    if (*(void *)v2)
    {
      unint64_t v13 = (void *)*((void *)v2 + 2);
      uint64_t v12 = (void *)*((void *)v2 + 3);
      double v14 = (void *)*((void *)v2 + 1);
      id v15 = v11;
      id v16 = v14;
      id v17 = v13;
      id v18 = v12;
      id v98 = v16;
      sub_100265CAC(v11, v14, v13, v12);
      uint64_t v19 = *(void **)v2;
      if (*(void *)v2)
      {
        uint64_t v21 = (void *)*((void *)v2 + 2);
        uint64_t v20 = (void *)*((void *)v2 + 3);
        uint64_t v22 = (void *)*((void *)v2 + 1);
        id v23 = v19;
        id v24 = v22;
        id v25 = v21;
        id v26 = v20;
        id v97 = v25;
        sub_100265CAC(v19, v22, v21, v20);
        objc_super v27 = *(void **)v2;
        if (*(void *)v2)
        {
          id v29 = (void *)*((void *)v2 + 2);
          uint64_t v28 = (void *)*((void *)v2 + 3);
          os_log_type_t v30 = (void *)*((void *)v2 + 1);
          id v31 = v27;
          id v32 = v30;
          id v33 = v29;
          id v34 = v28;
          sub_100265CAC(v27, v30, v29, v28);
          id v35 = v99;
          p_base_prots = &SessionEnvironmentFactory.base_prots;
          id v37 = [v1 view];
          if (v37)
          {
            uint64_t v38 = v37;
            id v39 = [v37 SBUISA_systemApertureLeadingViewLayoutGuide];

            [v39 layoutFrame];
            double v41 = v40;
            double v43 = v42;
            double v45 = v44;
            double v47 = v46;

            uint64_t v48 = &SessionEnvironmentFactory.base_prots;
            [v35 setFrame:v41, v43, v45, v47];

            id v49 = v35;
            uint64_t v50 = &selRef_initWithExplanation_target_attributes_;
            [v49 setHidden:[v1 activeLayoutMode] != 3];

            if (qword_10037DD98 != -1) {
              swift_once();
            }
            uint64_t v51 = type metadata accessor for Logger();
            sub_10000FD84(v51, (uint64_t)qword_1003A99A0);
            id v52 = v49;
            uint64_t v53 = Logger.logObject.getter();
            os_log_type_t v54 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v53, v54))
            {
              uint64_t v55 = swift_slowAlloc();
              uint64_t v100 = swift_slowAlloc();
              *(_DWORD *)uint64_t v55 = 136315394;
              [v52 frame];
              uint64_t v60 = sub_100102D08(2, v56, v57, v58, v59);
              sub_1001B3178(v60, v61, &v100);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              uint64_t v50 = &selRef_initWithExplanation_target_attributes_;
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 12) = 1024;
              [v52 isHidden];

              uint64_t v48 = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              _os_log_impl((void *)&_mh_execute_header, v53, v54, "Leading view frame = %s, isHidden = %{BOOL}d", (uint8_t *)v55, 0x12u);
              swift_arrayDestroy();
              p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            id v63 = v98;
            id v64 = [v1 p_base_prots[205]];
            if (v64)
            {
              unsigned __int8 v65 = v64;
              id v66 = [v64 SBUISA_systemApertureTrailingViewLayoutGuide];

              [v66 layoutFrame];
              double v68 = v67;
              double v70 = v69;
              double v72 = v71;
              double v74 = v73;

              [v63 v48[207]:v68, v70, v72, v74];
              id v75 = v63;
              objc_msgSend(v75, "setHidden:", objc_msgSend(v1, v50[195]) != (id)3);

              id v76 = v97;
              objc_msgSend(v76, "setHidden:", objc_msgSend(v1, v50[195]) != (id)2);

              id v77 = [v1 p_base_prots[205]];
              if (v77)
              {
                Swift::String v78 = v77;
                [v77 bounds];
                double v80 = v79;
                double v82 = v81;
                double v84 = v83;
                double v86 = v85;

                [v34 performSelector:(SEL)v48[207] withObject:v80, v82, v84, v86];
                id v87 = v34;
                long long v88 = Logger.logObject.getter();
                os_log_type_t v89 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v88, v89))
                {
                  Swift::String v90 = (uint8_t *)swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  *(_DWORD *)Swift::String v90 = 136315138;
                  [v87 frame];
                  uint64_t v95 = sub_100102D08(2, v91, v92, v93, v94);
                  sub_1001B3178(v95, v96, &v100);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v88, v89, "Custom view frame = %s", v90, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                }
                return;
              }
LABEL_25:
              __break(1u);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_25;
        }

        unint64_t v62 = v97;
      }
      else
      {

        unint64_t v62 = v98;
      }
    }
    else
    {
      unint64_t v62 = v99;
    }
  }
}

id sub_100262EC4(double a1, double a2)
{
  id result = [v2 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = result;
  id v7 = [result SBUISA_systemApertureObstructedAreaLayoutGuide];

  [v7 layoutFrame];
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;

  id result = [v2 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  id v16 = result;
  id v17 = [result SBUISA_layoutMode];

  if ((unint64_t)(v17 - 2) > 2) {
    id v18 = _swiftEmptySetSingleton;
  }
  else {
    id v18 = (void *)sub_1002656B8((uint64_t)off_100361528[(void)(v17 - 2)], &qword_1003924C8);
  }
  uint64_t v19 = &v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t ObjectType = swift_getObjectType();
    BOOL v22 = *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] == 4;
    *(double *)id v23 = a1;
    *(double *)&v23[1] = a2;
    v23[2] = v9;
    void v23[3] = v11;
    void v23[4] = v13;
    uint64_t v23[5] = v15;
    BOOL v24 = v22;
    id v25 = v18;
    (*(void (**)(void *, uint64_t, uint64_t))(v20 + 96))(v23, ObjectType, v20);
    swift_bridgeObjectRelease();
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    return (id)swift_bridgeObjectRelease();
  }
}

id sub_1002630D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionBannerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SessionBannerViewController()
{
  return self;
}

void sub_10026325C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode;
  if (*(void *)&v1[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] != a1)
  {
    uint64_t v3 = v1;
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A99A0);
    uint64_t v6 = v1;
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446466;
      uint64_t v52 = v49;
      type metadata accessor for SBUISystemApertureLayoutMode(0);
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      uint64_t v12 = String.init<A>(describing:)();
      sub_1001B3178(v12, v13, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "activeLayoutMode changing from %{public}s to %{public}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v14 = *(void *)&v3[v2];
    *(void *)&v3[v2] = a1;
    uint64_t v15 = &v6[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(BOOL, BOOL, uint64_t, uint64_t))(v16 + 40))((unint64_t)(a1 - 2) < 3, a1 == 4, ObjectType, v16);
      swift_unknownObjectRelease();
    }
    uint64_t v18 = *(void *)&v3[v2];
    switch(v18)
    {
      case -1:
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v29 = *((void *)v15 + 1);
          uint64_t v30 = swift_getObjectType();
          (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 64))(v6, &off_100361410, v30, v29);
          break;
        }
        return;
      case 0:
        uint64_t v21 = v6;
        BOOL v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v22, v23)) {
          goto LABEL_29;
        }
        BOOL v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)BOOL v24 = 136315138;
        uint64_t v52 = v31;
        type metadata accessor for SBUISystemApertureLayoutMode(0);
        uint64_t v32 = String.init<A>(describing:)();
        sub_1001B3178(v32, v33, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        uint64_t v28 = "Transition to %s mode is not expected, ignoring";
        goto LABEL_24;
      case 1:
      case 2:
      case 3:
        uint64_t v19 = *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode];
        if (v19 == v18) {
          return;
        }
        if (v18 == 1) {
          uint64_t v18 = 3;
        }
        *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = v18;
        if (v19 != 4 || !v14) {
          return;
        }
        id v20 = objc_msgSend(objc_msgSend(v6, "systemApertureElementContext"), "transitionContext");
        swift_unknownObjectRelease();
        if (v20)
        {
          unsigned int v50 = [v20 isUserInitiated];
        }
        else
        {
          unsigned int v50 = 2;
        }
        id v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v35, v36))
        {
          id v37 = (uint8_t *)swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          *(_DWORD *)id v37 = 136446210;
          sub_100004010((uint64_t *)&unk_10038EBC0);
          uint64_t v38 = String.init<A>(describing:)();
          sub_1001B3178(v38, v39, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "Element collapsed, requested by user: %{public}s", v37, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        if (!swift_unknownObjectWeakLoadStrong()) {
          return;
        }
        uint64_t v40 = *((void *)v15 + 1);
        uint64_t v41 = swift_getObjectType();
        (*(void (**)(char *, _UNKNOWN **, void, uint64_t, uint64_t))(v40 + 48))(v6, &off_100361410, v50, v41, v40);
        break;
      case 4:
        if (*(void *)&v6[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] == 4) {
          return;
        }
        *(void *)&v6[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = 4;
        if (!v14) {
          return;
        }
        id v34 = objc_msgSend(objc_msgSend(v6, "systemApertureElementContext"), "transitionContext");
        swift_unknownObjectRelease();
        if (v34)
        {
          unsigned int v51 = [v34 isUserInitiated];
        }
        else
        {
          unsigned int v51 = 2;
        }
        double v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          double v44 = (uint8_t *)swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          *(_DWORD *)double v44 = 136446210;
          sub_100004010((uint64_t *)&unk_10038EBC0);
          uint64_t v45 = String.init<A>(describing:)();
          sub_1001B3178(v45, v46, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Element expanded, requested by user: %{public}s", v44, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        if (!swift_unknownObjectWeakLoadStrong()) {
          return;
        }
        uint64_t v47 = *((void *)v15 + 1);
        uint64_t v48 = swift_getObjectType();
        (*(void (**)(char *, _UNKNOWN **, void, uint64_t, uint64_t))(v47 + 56))(v6, &off_100361410, v51, v48, v47);
        break;
      default:
        uint64_t v21 = v6;
        BOOL v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v22, v23))
        {
          BOOL v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v25 = swift_slowAlloc();
          *(_DWORD *)BOOL v24 = 136315138;
          uint64_t v52 = v25;
          type metadata accessor for SBUISystemApertureLayoutMode(0);
          uint64_t v26 = String.init<A>(describing:)();
          sub_1001B3178(v26, v27, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          uint64_t v28 = "Ignoring activeLayoutMode transition to %s";
LABEL_24:
          _os_log_impl((void *)&_mh_execute_header, v22, v23, v28, v24, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
LABEL_29:
        }
        return;
    }
    swift_unknownObjectRelease();
  }
}

void sub_100263BC8(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode;
  if (*(void *)&v1[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] != a1)
  {
    uint64_t v3 = v1;
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A99A0);
    uint64_t v6 = v1;
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446466;
      uint64_t v15 = v14;
      type metadata accessor for SBUISystemApertureLayoutMode(0);
      uint64_t v10 = String.init<A>(describing:)();
      sub_1001B3178(v10, v11, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      uint64_t v12 = String.init<A>(describing:)();
      sub_1001B3178(v12, v13, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "preferredLayoutMode changing from %{public}s to %{public}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    *(void *)&v3[v2] = a1;
  }
}

void sub_100263E34()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 SBUISA_systemApertureObstructedAreaLayoutGuide];

    [v3 layoutFrame];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    [v0 preferredContentSize];
    double v13 = v12;
    v14.origin.CGFloat x = v5;
    v14.origin.CGFloat y = v7;
    v14.size.CGFloat width = v9;
    v14.size.CGFloat height = v11;
    if (CGRectGetHeight(v14) < v13)
    {
      [v0 preferredContentSize];
      v15.origin.CGFloat x = v5;
      v15.origin.CGFloat y = v7;
      v15.size.CGFloat width = v9;
      v15.size.CGFloat height = v11;
      CGRectGetHeight(v15);
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_100263F90()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  if (v2)
  {
    double v4 = (void *)v1[2];
    id v3 = (void *)v1[3];
    CGFloat v5 = (void *)v1[1];
    sub_100265C54(v2, v5, v4, v3);
    id v6 = v2;
    sub_100265CAC(v2, v5, v4, v3);
  }
  return v2;
}

void *sub_100264044()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  if (!v2) {
    return 0;
  }
  double v4 = (void *)v1[2];
  id v3 = (void *)v1[3];
  CGFloat v5 = (void *)v1[1];
  sub_100265C54(v2, v5, v4, v3);
  id v6 = v5;
  sub_100265CAC(v2, v5, v4, v3);
  return v5;
}

void *sub_100264100()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  if (!v2) {
    return 0;
  }
  id v3 = (void *)v1[2];
  double v4 = (void *)v1[3];
  CGFloat v5 = (void *)v1[1];
  sub_100265C54(v2, v5, v3, v4);
  id v6 = v3;
  sub_100265CAC(v2, v5, v3, v4);
  return v3;
}

uint64_t sub_100264188(char a1)
{
  uint64_t v2 = v1;
  if (a1) {
    uint64_t v3 = 4;
  }
  else {
    uint64_t v3 = 3;
  }
  uint64_t result = (uint64_t)[v1 preferredLayoutMode];
  if (v3 != result)
  {
    if (qword_10037DD98 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A99A0);
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      double v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)double v8 = 136446210;
      type metadata accessor for SBUISystemApertureLayoutMode(0);
      uint64_t v9 = String.init<A>(describing:)();
      sub_1001B3178(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "SessionBannerViewController.updateState requestedLayoutMode = %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    [v2 setPreferredLayoutMode:v3];
    id v11 = [v2 activeLayoutMode];
    uint64_t result = (uint64_t)[v2 preferredLayoutMode];
    if (v11 != (id)result)
    {
      uint64_t result = (uint64_t)[v2 activeLayoutMode];
      if (result >= 2)
      {
        objc_msgSend(objc_msgSend(v2, "systemApertureElementContext"), "requestTransitionToPreferredLayoutMode");
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_100264408(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  a4();
  swift_unknownObjectRelease();
}

void sub_1002644A8(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void *))
{
  swift_unknownObjectRetain();
  id v8 = a4;
  id v9 = a1;
  a5(a4);
  swift_unknownObjectRelease();
}

void destroy for SessionContent(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for SessionContent(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  double v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t assignWithCopy for SessionContent(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  double v13 = *(void **)(a2 + 24);
  CGRect v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  return a1;
}

uint64_t assignWithTake for SessionContent(uint64_t a1, _OWORD *a2)
{
  double v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for SessionContent()
{
  return &type metadata for SessionContent;
}

id sub_1002646B8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_100264750(a1, a2, a3, a4, a5, a6, a7, v8, ObjectType, a8);
}

id sub_100264750(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getObjectType();
  id result = (id)swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v17 = (uint64_t)result;
    uint64_t v18 = (char *)objc_allocWithZone((Class)type metadata accessor for SessionBannerViewController());
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    return sub_100264840(a1, a2, a3, a4, a5, v17, a6 & 1, a7, v18, a9, a10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100264840(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v58 = a5;
  uint64_t v59 = a8;
  uint64_t v60 = a1;
  uint64_t v61 = a3;
  uint64_t v53 = a11;
  uint64_t v15 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v15 - 8);
  os_log_type_t v54 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  uint64_t v55 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer];
  *(void *)&a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer + 8] = 0;
  swift_unknownObjectWeakInit();
  id v20 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  *(void *)&a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v21 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *(void *)&a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] = 0;
  uint64_t v22 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture;
  id v23 = objc_allocWithZone((Class)UITapGestureRecognizer);
  BOOL v24 = a9;
  *(void *)&a9[v22] = [v23 init];
  swift_unknownObjectWeakInit();
  *(void *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v25 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v25 = _swiftEmptySetSingleton;
  }
  uint64_t v26 = v58;
  *(void *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions] = v25;
  unint64_t v27 = &v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__requesterId];
  *(void *)unint64_t v27 = v60;
  *((void *)v27 + 1) = a2;
  uint64_t v28 = &v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__requestId];
  *(void *)uint64_t v28 = v61;
  *((void *)v28 + 1) = a4;
  *((void *)v19 + 1) = a6;
  swift_unknownObjectWeakAssign();
  uint64_t v29 = 3;
  if (a7) {
    uint64_t v29 = 4;
  }
  *(void *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = v29;
  *((void *)v20 + 1) = v53;
  swift_unknownObjectWeakAssign();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  uint64_t v30 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v64.receiver = v24;
  v64.super_class = v30;
  id v31 = [super initWithNibName:0 bundle:0];
  uint64_t v32 = qword_10037DD98;
  id v33 = v31;
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_10000FD84(v34, (uint64_t)qword_1003A99A0);
  id v35 = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v36 = v35;
  id v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    v62[0] = v53;
    *(_DWORD *)uint64_t v39 = 136446722;
    uint64_t v52 = v39 + 4;
    id v40 = v36;
    id v41 = [v40 description];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v44 = v43;

    id v63 = (id)sub_1001B3178(v42, v44, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v26 = v58;
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain();
    id v63 = (id)sub_1001B3178(v60, a2, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    swift_bridgeObjectRetain();
    id v63 = (id)sub_1001B3178(v61, a4, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "[%{public}s] init for '%s' and %s", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  [v36 setPreferredContentSize:*(double *)(*(void *)(v26 + 40) + 64), *(double *)(*(void *)(v26 + 40) + 72)];
  v62[0] = *(void *)(v26 + 328);
  sub_10000FDBC();
  swift_retain();
  id v63 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v45 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v46 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v54, 1, 1, v45);
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  sub_1002652D4((unint64_t *)&qword_100393AC0, (void (*)(uint64_t))sub_10000FDBC);
  uint64_t v47 = v55;
  Publisher.receive<A>(on:options:)();
  sub_100028480(v46);

  swift_release();
  uint64_t v48 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_100264FE0;
  *(void *)(v49 + 24) = v48;
  sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  uint64_t v50 = v57;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v50);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v36;
}

uint64_t sub_100264FA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100264FE0()
{
}

uint64_t sub_100264FE8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100265020(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    id result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100004010(&qword_1003924A8);
      id result = static _SetStorage.allocate(capacity:)();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      id result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    id result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_1002652D4(&qword_1003924B0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    id result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1002652D4(&qword_1003924B8, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        id result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      id result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  id result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002652D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10026531C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004010(&qword_1003924D0);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return _swiftEmptySetSingleton;
}

Swift::Int sub_10026554C(uint64_t a1)
{
  return sub_1002656B8(a1, &qword_1003924C0);
}

Swift::Int sub_100265558(uint64_t a1)
{
  return sub_1002656B8(a1, &qword_1003885B8);
}

Swift::Int sub_100265564(uint64_t a1)
{
  return sub_1002656B8(a1, &qword_1003924D8);
}

Swift::Int sub_100265570(uint64_t a1)
{
  return sub_1002656B8(a1, &qword_1003885C0);
}

void sub_10026557C()
{
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v3 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v3 = _swiftEmptySetSingleton;
  }
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions] = v3;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Int sub_1002656B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100004010(a2);
    uint64_t v4 = static _SetStorage.allocate(capacity:)();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v7 = a1 + 32;
    while (1)
    {
      Swift::UInt v8 = *(unsigned __int8 *)(v7 + v5);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v8);
      Swift::Int result = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v15 + v11) == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v6 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v8;
      uint64_t v17 = *(void *)(v4 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2) {
        return v4;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1002657F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v3 + 8))(v0, &off_100361410, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  id v5 = [v0 presentableDismissalPreventionContext];
  if (v5)
  {
    uint64_t v6 = v5;
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 acquireTransitionDismissalPreventionAssertionForReason:v7];
    swift_unknownObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  *(void *)&v1[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = v8;

  return swift_unknownObjectRelease();
}

void sub_100265908()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v3 + 16))(v0, &off_100361410, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  id v5 = [v0 view];
  if (!v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  id v7 = [v5 window];

  if (v7)
  {
    [v7 setAccessibilityViewIsModal:1];
  }
  id v8 = [v1 view];
  if (!v8) {
    goto LABEL_13;
  }
  unint64_t v9 = v8;
  id v10 = [v8 window];

  if (v10)
  {
    [v10 setAccessibilityElementsHidden:0];
  }
}

id sub_100265A70(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate;
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v6 + 24))(v2, &off_100361410, a1, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  id result = *(id *)(v2 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion);
  if (result)
  {
    return [result invalidate];
  }
  return result;
}

void sub_100265B38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (!a1)
    {
LABEL_11:
      __break(1u);
      return;
    }
    uint64_t v5 = *((void *)v4 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, &off_100361410, a1, ObjectType, v5);
    swift_unknownObjectRelease();
  }
  id v7 = [v2 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v8 = v7;
  id v9 = [v7 window];

  if (v9)
  {
    [v9 setAccessibilityElementsHidden:1];
  }
}

id sub_100265C54(id result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v6 = result;
    id v7 = a2;
    id v8 = a3;
    return a4;
  }
  return result;
}

void sub_100265CAC(void *a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {
  }
}

uint64_t sub_100265D04()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100265D3C()
{
  sub_100262658(*(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100265D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100265D58()
{
  return swift_release();
}

void sub_100265D60()
{
  sub_1002626F0(*(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100265D7C(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 2;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(void *)(v1 + 72) = 0;
  *(unsigned char *)(v1 + 80) = 1;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0;
  *(void *)(v1 + 88) = 0;
  *(unsigned char *)(v1 + 112) = 1;
  *(_WORD *)(v1 + 113) = 3;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(void *)(v1 + 184) = 0;
  uint64_t v3 = v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages;
  *(unsigned char *)(v1 + 192) = 1;
  uint64_t v4 = type metadata accessor for ServiceOutages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentIsTryOut) = 2;
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_kExpiryTimerDurationSeconds) = 0x408C200000000000;
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer) = 0;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_100265E74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LinkState(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D2A0(a1, (uint64_t)v6, (uint64_t *)&unk_100383910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10000950C((uint64_t)v6, (uint64_t *)&unk_100383910);
  }
  sub_10026A10C((uint64_t)v6, (uint64_t)v10, type metadata accessor for LinkState);
  int v12 = *(unsigned __int8 *)(v2 + 32);
  int v13 = v10[1];
  if (v12 != 2 && ((((v12 & 1) == 0) ^ v13) & 1) != 0) {
    return sub_10026A174((uint64_t)v10, type metadata accessor for LinkState);
  }
  char v14 = v13 & 1;
  if ((v13 & 1) == 0 && !*(void *)(v2 + 24)) {
    sub_100266330(v12 == 2);
  }
  if (*(void *)(v2 + 24))
  {
    swift_retain();
    sub_100267DE0((uint64_t)v10);
    swift_release();
  }
  uint64_t result = sub_10026A174((uint64_t)v10, type metadata accessor for LinkState);
  *(unsigned char *)(v2 + 32) = v14;
  return result;
}

void sub_100266080(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_100387FA0);
  __chkstk_darwin(v4 - 8);
  id v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedInSilencePeriodNow))
  {
    uint64_t v9 = 0;
    *(unsigned char *)(v2 + 113) = 3;
  }
  else
  {
    if ((*(unsigned char *)(a1 + 66) & 1) != 0 || (int v7 = *(unsigned __int8 *)(a1 + 64), v7 == 4)) {
      LOBYTE(v7) = 3;
    }
    *(unsigned char *)(v2 + 113) = v7;
    if ((*(unsigned char *)(a1 + 66) & 1) == 0)
    {
      long long v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing);
      uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 16);
      char v10 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__correctedTargetRelativeBearing + 24);
      goto LABEL_10;
    }
    uint64_t v9 = 0;
  }
  long long v8 = 0uLL;
  char v10 = 1;
LABEL_10:
  *(_OWORD *)(v2 + 88) = v8;
  *(void *)(v2 + 104) = v9;
  *(unsigned char *)(v2 + 112) = v10;
  *(unsigned char *)(v2 + 114) = sub_100078E0C(0, *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1;
  uint64_t v11 = a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel___cachedServiceOutages;
  swift_beginAccess();
  sub_10000D2A0(v11, (uint64_t)v6, &qword_100387FA0);
  uint64_t v12 = v2 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages;
  swift_beginAccess();
  sub_100156648((uint64_t)v6, v12, &qword_100387FA0);
  swift_endAccess();
  if (*(unsigned char *)(v2 + 114))
  {
    if (*(void *)(v2 + 24))
    {
      swift_retain();
      sub_100268194();
      swift_release();
    }
    sub_100267144();
  }
}

uint64_t sub_10026622C(uint64_t a1)
{
  sub_10000D544(a1, (uint64_t)v6, &qword_1003826B8);
  uint64_t v3 = v7;
  sub_10000D544(a1, (uint64_t)v11, &qword_1003826B8);
  if (*((void *)&v11[0] + 1))
  {
    long long v15 = v11[2];
    long long v16 = v11[3];
    long long v17 = v11[4];
    uint64_t v18 = v12;
    long long v13 = v11[0];
    long long v14 = v11[1];
    sub_1000207A0(&v13, &v19);
    sub_1000207A0(&v19, v20);
    if (v20[0] == 5 && BYTE1(v14) == 1) {
      goto LABEL_6;
    }
  }
  char v4 = 2;
  *(unsigned char *)(v1 + 32) = 2;
  sub_10026723C();
  uint64_t result = sub_10000D544(a1, (uint64_t)v8, &qword_1003826B8);
  if (v9)
  {
    uint64_t v3 = v10;
LABEL_6:
    uint64_t result = sub_100078E0C(3, v3);
    char v4 = result & 1;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentIsTryOut) = v4;
  return result;
}

void sub_100266330(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v106) = a1;
  uint64_t v108 = type metadata accessor for ServiceOutages.Outage(0);
  uint64_t v97 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v110 = (uint64_t)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_100380418);
  __chkstk_darwin(v4 - 8);
  uint64_t v95 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v105 = (char *)&v90 - v7;
  __chkstk_darwin(v8);
  uint64_t v109 = (char *)&v90 - v9;
  __chkstk_darwin(v10);
  uint64_t v96 = (uint64_t)&v90 - v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v102 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v94 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v103 = (char *)&v90 - v15;
  __chkstk_darwin(v16);
  uint64_t v104 = (char *)&v90 - v17;
  __chkstk_darwin(v18);
  char v20 = (char *)&v90 - v19;
  __chkstk_darwin(v21);
  unint64_t v111 = (char *)&v90 - v22;
  uint64_t v23 = sub_100004010(&qword_100387FA0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ServiceOutages(0);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  BOOL v29 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v107 = (uint64_t)&v90 - v31;
  uint64_t v32 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchTime.now()();
  char v35 = *(unsigned char *)(v2 + 80);
  _s8SOSBuddy4DataCMa_1(0);
  swift_allocObject();
  *(void *)(v2 + 24) = sub_100267870(v34, v106, (v35 & 1) == 0);
  swift_release();
  uint64_t v36 = *(void *)(v2 + 24);
  if (!v36) {
    goto LABEL_41;
  }
  *(unsigned char *)(v36 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_targetVisibility) = *(unsigned char *)(v2 + 113);
  uint64_t v37 = *(void *)(v2 + 24);
  if (!v37)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v38 = *(void *)(v2 + 104);
  char v39 = *(unsigned char *)(v2 + 112);
  uint64_t v40 = v37 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_relativeBearing;
  *(_OWORD *)uint64_t v40 = *(_OWORD *)(v2 + 88);
  *(void *)(v40 + 16) = v38;
  *(unsigned char *)(v40 + 24) = v39;
  uint64_t v41 = *(void *)(v2 + 24);
  if (!v41)
  {
LABEL_43:
    __break(1u);
    return;
  }
  uint64_t v42 = *(void *)(v2 + 184);
  char v43 = *(unsigned char *)(v2 + 192);
  uint64_t v44 = v41 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_deviceOrientation;
  long long v45 = *(_OWORD *)(v2 + 136);
  long long v46 = *(_OWORD *)(v2 + 152);
  long long v47 = *(_OWORD *)(v2 + 168);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v44 + 16) = v45;
  *(_OWORD *)(v44 + 32) = v46;
  *(_OWORD *)(v44 + 48) = v47;
  *(void *)(v44 + 64) = v42;
  *(unsigned char *)(v44 + 72) = v43;
  uint64_t v48 = v2 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages;
  swift_beginAccess();
  sub_10000D2A0(v48, (uint64_t)v25, &qword_100387FA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_10000950C((uint64_t)v25, &qword_100387FA0);
    goto LABEL_11;
  }
  uint64_t v99 = v26;
  uint64_t v49 = v107;
  sub_10026A10C((uint64_t)v25, v107, type metadata accessor for ServiceOutages);
  uint64_t v50 = v111;
  Date.init()();
  unint64_t v51 = sub_10026A04C();
  char v52 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v53 = v102;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v20, v50, v12);
  sub_10026A0A4(v49, (uint64_t)v29, type metadata accessor for ServiceOutages);
  if (v52)
  {
    sub_10026A174((uint64_t)v29, type metadata accessor for ServiceOutages);
    os_log_type_t v54 = *(void (**)(char *, uint64_t))(v53 + 8);
    v54(v20, v12);
LABEL_9:
    uint64_t v57 = v107;
    v54(v111, v12);
    uint64_t v58 = v57;
    goto LABEL_10;
  }
  uint64_t v55 = v99;
  unint64_t v106 = v51;
  char v56 = dispatch thunk of static Comparable.< infix(_:_:)();
  sub_10026A174((uint64_t)v29, type metadata accessor for ServiceOutages);
  os_log_type_t v54 = *(void (**)(char *, uint64_t))(v53 + 8);
  v54(v20, v12);
  if (v56) {
    goto LABEL_9;
  }
  uint64_t v100 = v53 + 8;
  Swift::String v101 = v54;
  uint64_t v59 = v55;
  uint64_t v60 = v53 + 56;
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  uint64_t v62 = v96;
  v61(v96, 1, 1, v12);
  uint64_t v63 = v107;
  uint64_t v64 = *(void *)(v107 + *(int *)(v59 + 24));
  uint64_t v65 = v53;
  uint64_t v66 = *(void *)(v64 + 16);
  if (!v66) {
    goto LABEL_30;
  }
  uint64_t v99 = v12;
  double v91 = v61;
  uint64_t v92 = v60;
  uint64_t v67 = v64 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  double v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  uint64_t v97 = *(void *)(v97 + 72);
  id v98 = (void (**)(char *, uint64_t, uint64_t))(v65 + 32);
  uint64_t v93 = v64;
  swift_bridgeObjectRetain();
  uint64_t v69 = (uint64_t)v105;
  uint64_t v71 = (uint64_t)v109;
  uint64_t v70 = v110;
  while (1)
  {
    sub_10026A0A4(v67, v70, type metadata accessor for ServiceOutages.Outage);
    sub_10000D2A0(v70, v71, &qword_100380418);
    double v72 = *v68;
    uint64_t v12 = v99;
    if ((*v68)(v71, 1, v99) == 1)
    {
      sub_10000950C(v71, &qword_100380418);
    }
    else
    {
      double v73 = *v98;
      double v74 = v104;
      (*v98)(v104, v71, v12);
      if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
      {
        sub_10026A174(v110, type metadata accessor for ServiceOutages.Outage);
        swift_bridgeObjectRelease();
        uint64_t v62 = v96;
        sub_10000950C(v96, &qword_100380418);
        v73((char *)v62, (uint64_t)v74, v12);
        v91(v62, 0, 1, v12);
        uint64_t v63 = v107;
        uint64_t v65 = v102;
        goto LABEL_30;
      }
      v101(v74, v12);
      uint64_t v69 = (uint64_t)v105;
      uint64_t v71 = (uint64_t)v109;
    }
    uint64_t v75 = v12;
    uint64_t v70 = v110;
    sub_10000D2A0(v110 + *(int *)(v108 + 20), v69, &qword_100380418);
    if (v72(v69, 1, v75) != 1) {
      break;
    }
    sub_10026A174(v70, type metadata accessor for ServiceOutages.Outage);
    sub_10000950C(v69, &qword_100380418);
LABEL_19:
    v67 += v97;
    if (!--v66)
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = v96;
      uint64_t v63 = v107;
      uint64_t v65 = v102;
      uint64_t v12 = v99;
      goto LABEL_30;
    }
  }
  id v76 = *v98;
  id v77 = v103;
  (*v98)(v103, v69, v75);
  char v78 = dispatch thunk of static Comparable.< infix(_:_:)();
  sub_10026A174(v70, type metadata accessor for ServiceOutages.Outage);
  if (v78)
  {
    v101(v77, v75);
    uint64_t v71 = (uint64_t)v109;
    uint64_t v70 = v110;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = v96;
  sub_10000950C(v96, &qword_100380418);
  v76((char *)v62, (uint64_t)v77, v75);
  v91(v62, 0, 1, v75);
  uint64_t v63 = v107;
  uint64_t v65 = v102;
  uint64_t v12 = v75;
LABEL_30:
  uint64_t v79 = v95;
  sub_10000D2A0(v62, v95, &qword_100380418);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v79, 1, v12) == 1)
  {
    sub_10000950C(v62, &qword_100380418);
    v101(v111, v12);
    sub_10026A174(v63, type metadata accessor for ServiceOutages);
    sub_10000950C(v79, &qword_100380418);
    goto LABEL_11;
  }
  double v80 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
  double v81 = v94;
  v80(v94, v79, v12);
  uint64_t v82 = *(void *)(v2 + 24);
  if (v82)
  {
    swift_retain();
    double v83 = v111;
    Date.distance(to:)();
    double v85 = fabs(floor(v84));
    double v86 = v81;
    id v87 = v101;
    v101(v86, v12);
    sub_10000950C(v62, &qword_100380418);
    v87(v83, v12);
    sub_10026A174(v63, type metadata accessor for ServiceOutages);
    if ((~*(void *)&v85 & 0x7FF0000000000000) != 0)
    {
      if (v85 > -1.0)
      {
        if (v85 < 1.84467441e19)
        {
          uint64_t v88 = v82 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_nextStatusChangeAtStart;
          *(void *)uint64_t v88 = (unint64_t)v85;
          *(unsigned char *)(v88 + 8) = 0;
          swift_release();
          goto LABEL_11;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_40;
  }
  os_log_type_t v89 = v101;
  v101(v81, v12);
  sub_10000950C(v62, &qword_100380418);
  v89(v111, v12);
  uint64_t v58 = v63;
LABEL_10:
  sub_10026A174(v58, type metadata accessor for ServiceOutages);
LABEL_11:
  sub_10026735C();
  if (*(unsigned char *)(v2 + 114) == 1)
  {
    if (*(void *)(v2 + 24))
    {
      swift_retain();
      sub_100268194();
      swift_release();
    }
    sub_100267144();
  }
}

void sub_100266F64()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    if (qword_10037DD78 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9940);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SatelliteConnectionAttempt: timer expired", v8, 2u);
    swift_slowDealloc();
  }

  sub_100267144();
}

void sub_100267144()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    char v4 = *(unsigned char *)(v0 + 80);
    uint64_t v5 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentTarget;
    long long v6 = *(_OWORD *)(v0 + 56);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v5 + 16) = v6;
    *(void *)(v5 + 32) = v3;
    *(unsigned char *)(v5 + 40) = v4;
    uint64_t v7 = *(void *)(v0 + 24);
    if (v7)
    {
      *(unsigned char *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentIsTryOut) = *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentIsTryOut);
      if (*(void *)(v0 + 24))
      {
        swift_retain();
        unint64_t v8 = sub_10026853C();
        swift_release();
        sub_1001B6D38(1, v8);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 24) = 0;
        swift_release();
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_5:
  uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer) invalidate];
  uint64_t v10 = *(void **)(v1 + v9);
  *(void *)(v1 + v9) = 0;
}

void sub_10026723C()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 24))
  {
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000FD84(v2, (uint64_t)qword_1003A9940);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "SatelliteConnectionAttempt: canceling event", v5, 2u);
      swift_slowDealloc();
    }

    *(void *)(v1 + 24) = 0;
    swift_release();
  }
  uint64_t v6 = OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer) invalidate];
  uint64_t v7 = *(void **)(v1 + v6);
  *(void *)(v1 + v6) = 0;
}

void sub_10026735C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer;
    [*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer) invalidate];
    unint64_t v8 = *(void **)(v1 + v7);
    *(void *)(v1 + v7) = 0;

    uint64_t v9 = self;
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_10026A02C;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008A9B0;
    aBlock[3] = &unk_1003615F0;
    uint64_t v11 = _Block_copy(aBlock);
    swift_release();
    id v12 = [v9 scheduledTimerWithTimeInterval:0 repeats:v11 block:900.0];
    _Block_release(v11);
    uint64_t v13 = *(void **)(v1 + v7);
    *(void *)(v1 + v7) = v12;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10026758C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100266F64();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002675E4()
{
  swift_release();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages, &qword_100387FA0);

  return swift_deallocClassInstance();
}

uint64_t sub_100267670()
{
  return type metadata accessor for AnalyticsSatelliteConnectionAttempt(0);
}

uint64_t type metadata accessor for AnalyticsSatelliteConnectionAttempt(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100392528);
}

void sub_100267698()
{
  sub_100268D1C(319, &qword_1003880B8, (void (*)(uint64_t))type metadata accessor for ServiceOutages);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1002677AC(uint64_t a1)
{
  return sub_10000D544(a1, *v1 + 40, &qword_100382698);
}

uint64_t sub_1002677D4(uint64_t a1)
{
  return sub_100265E74(a1);
}

__n128 sub_1002677F8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(a1 + 96);
  char v4 = *(unsigned char *)(a1 + 104);
  __n128 result = *(__n128 *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  long long v7 = *(_OWORD *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(v2 + 120) = result;
  *(_OWORD *)(v2 + 136) = v6;
  *(_OWORD *)(v2 + 152) = v7;
  *(_OWORD *)(v2 + 168) = v8;
  *(void *)(v2 + 184) = v3;
  *(unsigned char *)(v2 + 192) = v4;
  return result;
}

void sub_100267828(uint64_t a1)
{
}

uint64_t sub_10026784C(uint64_t a1)
{
  return sub_10026622C(a1);
}

uint64_t sub_100267870(char *a1, int a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v38) = a3;
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v39 = (char *)&v35 - v11;
  uint64_t v12 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_nextStatusChangeAtStart;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_caLatency;
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  uint64_t v17 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_syncLatency;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_targetVisibility) = 3;
  uint64_t v18 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_deviceOrientation;
  *(void *)(v18 + 64) = 0;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(unsigned char *)(v18 + 72) = 1;
  uint64_t v19 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_relativeBearing;
  *(void *)(v19 + 8) = 0;
  *(void *)(v19 + 16) = 0;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 24) = 1;
  uint64_t v20 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentTarget;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(void *)(v20 + 32) = 0;
  *(unsigned char *)(v20 + 40) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentIsTryOut) = 2;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v21(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince, 1, 1, v7);
  v21(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince, 1, 1, v7);
  uint64_t v40 = v8;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v22(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_startTimestamp, (uint64_t)a1, v7);
  int v36 = a2;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_newConnection) = a2;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_inServiceAtStart) = (_BYTE)v38;
  v22((uint64_t)v14, (uint64_t)a1, v7);
  v21((uint64_t)v14, 0, 1, v7);
  uint64_t v23 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince;
  swift_beginAccess();
  sub_100156648((uint64_t)v14, v23, &qword_100380788);
  swift_endAccess();
  v22((uint64_t)v14, (uint64_t)a1, v7);
  v21((uint64_t)v14, 0, 1, v7);
  uint64_t v24 = v4 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince;
  swift_beginAccess();
  sub_100156648((uint64_t)v14, v24, &qword_100380788);
  swift_endAccess();
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000FD84(v25, (uint64_t)qword_1003A9940);
  uint64_t v26 = v39;
  v22((uint64_t)v39, (uint64_t)a1, v7);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v42[0] = v35;
    *(_DWORD *)uint64_t v29 = 67109378;
    LODWORD(v41) = v36 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 8) = 2080;
    uint64_t v38 = a1;
    v22((uint64_t)v37, (uint64_t)v26, v7);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v41 = sub_1001B3178(v30, v31, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v40 + 8);
    v32(v26, v7);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "SatelliteConnectionAttempt: started tracking newConnection = %{BOOL}d at %s", (uint8_t *)v29, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v32(v38, v7);
  }
  else
  {

    uint64_t v33 = *(void (**)(char *, uint64_t))(v40 + 8);
    v33(v26, v7);
    v33(a1, v7);
  }
  return v4;
}

void sub_100267DE0(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v6 - 8);
  uint64_t v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v31 = v1;
  uint64_t v14 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince;
  swift_beginAccess();
  sub_10000D2A0(v14, (uint64_t)v13, &qword_100380788);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v16 = v15(v13, 1, v2);
  sub_10000950C((uint64_t)v13, &qword_100380788);
  if (v16 == 1 || (*(unsigned char *)(v32 + 1) & 1) == 0) {
    return;
  }
  static DispatchTime.now()();
  sub_10000D2A0(v14, (uint64_t)v10, &qword_100380788);
  if (v15(v10, 1, v2) == 1)
  {
    __break(1u);
    return;
  }
  unint64_t v17 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v17) {
    goto LABEL_7;
  }
  unint64_t v18 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v19 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v20 = v18 - v19;
  if (v18 < v19)
  {
    __break(1u);
LABEL_7:
    unint64_t v20 = 0;
  }
  unint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v5, v2);
  v22(v10, v2);
  uint64_t v23 = v31 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_syncLatency;
  *(void *)uint64_t v23 = v21 / 0x3B9ACA00;
  *(unsigned char *)(v23 + 8) = 0;
  uint64_t v24 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v30, 1, 1, v2);
  swift_beginAccess();
  sub_100156648(v24, v14, &qword_100380788);
  swift_endAccess();
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000FD84(v25, (uint64_t)qword_1003A9940);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "SatelliteConnectionAttempt: detected link synced", v28, 2u);
    swift_slowDealloc();
  }
}

void sub_100268194()
{
  uint64_t v1 = type metadata accessor for DispatchTime();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v5 - 8);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v32 = v0;
  uint64_t v13 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince;
  swift_beginAccess();
  sub_10000D2A0(v13, (uint64_t)v12, &qword_100380788);
  uint64_t v31 = v2;
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  int v15 = v14(v12, 1, v1);
  sub_10000950C((uint64_t)v12, &qword_100380788);
  if (v15 == 1) {
    return;
  }
  static DispatchTime.now()();
  sub_10000D2A0(v13, (uint64_t)v9, &qword_100380788);
  if (v14(v9, 1, v1) == 1)
  {
    __break(1u);
    return;
  }
  unint64_t v16 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v16) {
    goto LABEL_6;
  }
  unint64_t v17 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v18 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v19 = v17 - v18;
  if (v17 < v18)
  {
    __break(1u);
LABEL_6:
    unint64_t v19 = 0;
  }
  unint64_t v20 = v19;
  uint64_t v21 = v31;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v31 + 8);
  v22(v4, v1);
  v22(v9, v1);
  uint64_t v23 = v32 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_caLatency;
  *(void *)uint64_t v23 = v20 / 0x3B9ACA00;
  *(unsigned char *)(v23 + 8) = 0;
  uint64_t v24 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v30, 1, 1, v1);
  swift_beginAccess();
  sub_100156648(v24, v13, &qword_100380788);
  swift_endAccess();
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000FD84(v25, (uint64_t)qword_1003A9940);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "SatelliteConnectionAttempt: detected CA in proper orientation", v28, 2u);
    swift_slowDealloc();
  }
}

unint64_t sub_10026853C()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_1003826A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B67F0;
  *(void *)(inited + 32) = 0x6174537472617473;
  *(void *)(inited + 40) = 0xEB00000000737574;
  sub_10001E6FC(0, (unint64_t *)&qword_1003826B0);
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0x65707954646E65;
  *(void *)(inited + 64) = 0xE700000000000000;
  uint64_t v3 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_caLatency;
  *(void *)(inited + 72) = NSString.init(stringLiteral:)();
  *(void *)(inited + 80) = 0x7373656E6E65706FLL;
  *(void *)(inited + 88) = 0xE800000000000000;
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = 0x74617453636E7973;
  *(void *)(inited + 112) = 0xEA00000000007375;
  uint64_t v5 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_syncLatency;
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  *(void *)(inited + 128) = 1701869940;
  *(void *)(inited + 136) = 0xE400000000000000;
  *(void *)(inited + 144) = NSString.init(stringLiteral:)();
  strcpy((char *)(inited + 152), "is_tryout_mode");
  *(unsigned char *)(inited + 167) = -18;
  *(NSNumber *)(inited + 168) = Bool._bridgeToObjectiveC()();
  unint64_t v6 = sub_100283ACC(inited);
  if ((*(unsigned char *)(v3 + 8) & 1) == 0)
  {
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)isa, 0x636E6574614C6163, 0xEA00000000004D79, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v5 + 8) & 1) == 0)
  {
    Class v9 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v9, 0x6574614C636E7973, 0xEC0000004D79636ELL, v10);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_deviceOrientation + 72) & 1) == 0)
  {
    Class v11 = Double._bridgeToObjectiveC()().super.super.isa;
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v11, 0x7461746E6569726FLL, 0xEF736261686E6F69, v12);
    swift_bridgeObjectRelease();
    Class v13 = Double._bridgeToObjectiveC()().super.super.isa;
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v13, 0x7461746E6569726FLL, 0xEF736261766E6F69, v14);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_relativeBearing + 24) & 1) == 0)
  {
    Class v15 = Double._bridgeToObjectiveC()().super.super.isa;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v15, 0x7461746E6569726FLL, 0xEC000000686E6F69, v16);
    swift_bridgeObjectRelease();
    Class v17 = Double._bridgeToObjectiveC()().super.super.isa;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v17, 0x7461746E6569726FLL, 0xEC000000766E6F69, v18);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_nextStatusChangeAtStart + 8) & 1) == 0)
  {
    Class v19 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v19, 0xD000000000000019, 0x80000001002D3B90, v20);
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentTarget + 40) & 1) == 0)
  {
    Class v21 = Int64._bridgeToObjectiveC()().super.super.isa;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1002699E8((uint64_t)v21, 0x4449746153, 0xE500000000000000, v22);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100268AF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_startTimestamp;
  uint64_t v2 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince, &qword_100380788);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince, &qword_100380788);

  return swift_deallocClassInstance();
}

uint64_t sub_100268BC4()
{
  return _s8SOSBuddy4DataCMa_1(0);
}

uint64_t _s8SOSBuddy4DataCMa_1(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100392838);
}

void sub_100268BEC()
{
  type metadata accessor for DispatchTime();
  if (v0 <= 0x3F)
  {
    sub_100268D1C(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100268D1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100268D70(uint64_t a1, uint64_t a2, Swift::UInt a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1001BEB14(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000A08C8();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      Class v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *Class v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    Class v21 = (void *)(v18[7] + 16 * v12);
    *Class v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      void v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_10009CDA0(result, a4 & 1);
  uint64_t result = sub_1001BEB14(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CTSubscriptionSlot(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100268EB0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001BEB10(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000A0C00();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_10009D340(result, a3 & 1);
  uint64_t result = sub_1001BEB10(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100268FE8(uint64_t a1, char a2, char a3)
{
  unint64_t v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001BEBE8(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_10009D614(result, a3 & 1);
      uint64_t result = sub_1001BEBE8(v7);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      char v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1000A0DA4();
  }
  char v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    uint64_t v19 = v16[7] + 72 * v10;
    *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
    long long v20 = *(_OWORD *)(a1 + 16);
    long long v21 = *(_OWORD *)(a1 + 32);
    long long v22 = *(_OWORD *)(a1 + 48);
    *(unsigned char *)(v19 + 64) = *(unsigned char *)(a1 + 64);
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v22;
    *(_OWORD *)(v19 + 16) = v20;
    uint64_t v23 = v16[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      _OWORD v16[2] = v25;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 72 * v10;

  return sub_10026A1D4(a1, v17);
}

uint64_t sub_100269164(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1001BECD0(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000A1168();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;
      uint64_t result = swift_release();
      *(unsigned char *)uint64_t v19 = a1;
      *(void *)(v19 + 8) = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_10009DC84(v15, a4 & 1);
  uint64_t v21 = sub_1001BECD0(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    type metadata accessor for Question();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  *(void *)(v18[6] + 8 * v12) = a3;
  uint64_t v23 = v18[7] + 16 * v12;
  *(unsigned char *)uint64_t v23 = a1;
  *(void *)(v23 + 8) = a2;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;

  return swift_retain();
}

uint64_t sub_1002692D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1001BECD0(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000A1328();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_10009DFB8(v15, a4 & 1);
  uint64_t v21 = sub_1001BECD0(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    type metadata accessor for Option();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  *(void *)(v18[6] + 8 * v12) = a3;
  uint64_t v23 = (void *)(v18[7] + 16 * v12);
  *uint64_t v23 = a1;
  v23[1] = a2;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;

  return swift_retain();
}

_OWORD *sub_10026943C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1001BEC58(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1000A14E0();
      goto LABEL_7;
    }
    sub_10009E2E4(v15, a4 & 1);
    unint64_t v21 = sub_1001BEC58(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v19);
    return sub_10004A864(a1, v19);
  }
LABEL_13:
  sub_100269E60(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_100269590(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001BECD0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1000A16C8();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10009E5E4(v13, a3 & 1);
  uint64_t v19 = sub_1001BECD0(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_17:
    type metadata accessor for Question();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = 8 * v10;
  *(void *)(v16[6] + v21) = a2;
  *(void *)(v16[7] + v21) = a1;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v16[2] = v24;

  return swift_retain();
}

_OWORD *sub_1002696F4(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1001BEB10(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1000A1874();
      goto LABEL_7;
    }
    sub_10009E910(v13, a3 & 1);
    uint64_t v19 = sub_1001BEB10(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v17);
    return sub_10004A864(a1, v17);
  }
LABEL_13:

  return sub_100269ECC(v10, a2, a1, v16);
}

uint64_t sub_100269830(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1001BEC58(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1000A1C10();
LABEL_7:
    BOOL v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 32 * v17;
      uint64_t result = sub_10000F294(*(void *)v24, *(void *)(v24 + 8));
      *(void *)uint64_t v24 = a1;
      *(void *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = a3;
      *(unsigned char *)(v24 + 24) = a4 & 1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10009EEE8(v20, a7 & 1);
  unint64_t v26 = sub_1001BEC58(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  BOOL v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  os_log_type_t v28 = (uint64_t *)(v23[6] + 16 * v17);
  uint64_t *v28 = a5;
  v28[1] = a6;
  uint64_t v29 = v23[7] + 32 * v17;
  *(void *)uint64_t v29 = a1;
  *(void *)(v29 + 8) = a2;
  *(void *)(v29 + 16) = a3;
  *(unsigned char *)(v29 + 24) = a4 & 1;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v32;

  return swift_bridgeObjectRetain();
}

void sub_1002699E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1001BEC58(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000A2000();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10009F540(v15, a4 & 1);
  unint64_t v20 = sub_1001BEC58(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_100269B58(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001BEDE8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000A21B4();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v16[6] + v18) = a2;
    *(void *)(v16[7] + v18) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_10009F850(result, a3 & 1);
  uint64_t result = sub_1001BEDE8(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

_OWORD *sub_100269C88(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for CodingUserInfoKey();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1001BEE24(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1000A2730();
      goto LABEL_7;
    }
    sub_1000A01B4(v17, a3 & 1);
    unint64_t v23 = sub_1001BEE24(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      BOOL v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_100269F34(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v21);

  return sub_10004A864(a1, v21);
}

_OWORD *sub_100269E60(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10004A864(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_100269ECC(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_10004A864(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_100269F34(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for CodingUserInfoKey();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_10004A864(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_100269FF4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026A02C()
{
  return sub_10026758C();
}

uint64_t sub_10026A034(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10026A044()
{
  return swift_release();
}

unint64_t sub_10026A04C()
{
  unint64_t result = qword_100388198;
  if (!qword_100388198)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388198);
  }
  return result;
}

uint64_t sub_10026A0A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10026A10C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10026A174(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10026A1D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s8SOSBuddy14OptionSelectedCMa_0()
{
  return self;
}

uint64_t sub_10026A254()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000015;
  v57._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v57._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D6F90;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v57);

  Swift::String v50 = v5;
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  uint64_t v53 = &off_10034C1E8;
  os_log_type_t v54 = &off_10034C210;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  sub_100004010(&qword_1003913B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002C4430;
  id v7 = [v0 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000012;
  v58._object = (void *)0x80000001002D77D0;
  v8._object = (void *)0x80000001002D77B0;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v58._uint64_t countAndFlagsBits = 0xD000000000000037;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v58);

  uint64_t v12 = static Color.green.getter();
  type metadata accessor for OptionPresentation();
  uint64_t v13 = swift_allocObject();
  *(Swift::String *)(v13 + 16) = v11;
  *(_OWORD *)(v13 + 48) = xmmword_1002C4440;
  *(void *)(v13 + 64) = v12;
  type metadata accessor for Option();
  *(void *)(v13 + 32) = 0;
  *(void *)(v13 + 40) = 0;
  uint64_t v14 = swift_allocObject();
  strcpy((char *)(v14 + 16), "TYPE_MEDICAL");
  *(unsigned char *)(v14 + 29) = 0;
  *(_WORD *)(v14 + 30) = -5120;
  *(void *)(v14 + 32) = v13;
  *(unsigned char *)(v14 + 40) = 0;
  *(void *)(v14 + 48) = 40;
  *(void *)(v6 + 32) = v14;
  id v15 = [v0 mainBundle];
  v59._object = (void *)0x80000001002D77D0;
  v16._uint64_t countAndFlagsBits = 0x656D697243;
  v16._object = (void *)0xE500000000000000;
  v17.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v17.value._object = (void *)0xEE00796464754279;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v59._uint64_t countAndFlagsBits = 0xD000000000000037;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v59);

  uint64_t v20 = static Color.green.getter();
  uint64_t v21 = swift_allocObject();
  *(Swift::String *)(v21 + 16) = v19;
  *(_OWORD *)(v21 + 48) = xmmword_1002C4450;
  *(void *)(v21 + 64) = v20;
  *(void *)(v21 + 32) = 0;
  *(void *)(v21 + 40) = 0;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0x4C4F505F45505954;
  *(void *)(v22 + 24) = 0xEB00000000454349;
  *(void *)(v22 + 32) = v21;
  *(unsigned char *)(v22 + 40) = 0;
  *(void *)(v22 + 48) = 40;
  *(void *)(v6 + 40) = v22;
  id v23 = [v0 mainBundle];
  v60._object = (void *)0x80000001002D77D0;
  v24._uint64_t countAndFlagsBits = 1701996870;
  v24._object = (void *)0xE400000000000000;
  v25.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v25.value._object = (void *)0xEE00796464754279;
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v60._uint64_t countAndFlagsBits = 0xD000000000000037;
  Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v60);

  uint64_t v28 = static Color.green.getter();
  uint64_t v29 = swift_allocObject();
  *(Swift::String *)(v29 + 16) = v27;
  *(_OWORD *)(v29 + 48) = xmmword_1002C4460;
  *(void *)(v29 + 64) = v28;
  *(void *)(v29 + 32) = 0;
  *(void *)(v29 + 40) = 0;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0x5249465F45505954;
  *(void *)(v30 + 24) = 0xE900000000000045;
  *(void *)(v30 + 32) = v29;
  *(unsigned char *)(v30 + 40) = 0;
  *(void *)(v30 + 48) = 40;
  *(void *)(v6 + 48) = v30;
  id v31 = [v0 mainBundle];
  v61._object = (void *)0x80000001002D77D0;
  v32._uint64_t countAndFlagsBits = 0x20726F2074736F4CLL;
  v32._object = (void *)0xEF64657070617254;
  v33.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v33.value._object = (void *)0xEE00796464754279;
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v61._uint64_t countAndFlagsBits = 0xD000000000000037;
  Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v61);

  uint64_t v36 = static Color.green.getter();
  uint64_t v37 = swift_allocObject();
  *(Swift::String *)(v37 + 16) = v35;
  *(_OWORD *)(v37 + 48) = xmmword_1002C4470;
  *(void *)(v37 + 64) = v36;
  *(void *)(v37 + 32) = 0;
  *(void *)(v37 + 40) = 0;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = 0x524E535F45505954;
  *(void *)(v38 + 24) = 0xE800000000000000;
  *(void *)(v38 + 32) = v37;
  *(unsigned char *)(v38 + 40) = 0;
  *(void *)(v38 + 48) = 40;
  *(void *)(v6 + 56) = v38;
  id v39 = [v0 mainBundle];
  v40._uint64_t countAndFlagsBits = 0xD000000000000014;
  v62._object = (void *)0x80000001002D77D0;
  v40._object = (void *)0x80000001002D7810;
  v41.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v41.value._object = (void *)0xEE00796464754279;
  v42._uint64_t countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v62._uint64_t countAndFlagsBits = 0xD000000000000037;
  Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v62);

  uint64_t v44 = static Color.green.getter();
  uint64_t v45 = swift_allocObject();
  *(Swift::String *)(v45 + 16) = v43;
  *(_OWORD *)(v45 + 48) = xmmword_1002C4480;
  *(void *)(v45 + 64) = v44;
  *(void *)(v45 + 32) = 0;
  *(void *)(v45 + 40) = 0;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = 0x4142435F45505954;
  *(void *)(v46 + 24) = 0xE800000000000000;
  *(void *)(v46 + 32) = v45;
  *(unsigned char *)(v46 + 40) = 0;
  *(void *)(v46 + 48) = 40;
  *(void *)(v6 + 64) = v46;
  specialized Array._endMutation()();
  unint64_t v47 = v6;
  type metadata accessor for NoPrerequisites();
  uint64_t v48 = swift_allocObject();
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(1162893652, 0xE400000000000000, 0, &v50, v47, v48, (uint64_t)&off_10034C280, 7);
}

uint64_t sub_10026A89C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v25._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v2._uint64_t countAndFlagsBits = 0xD000000000000038;
  v25._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002CDC30;
  v3.value._uint64_t countAndFlagsBits = 0xD000000000000017;
  v3.value._object = (void *)0x80000001002CD700;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v25);

  id v6 = [v0 mainBundle];
  v7._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v26._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
  v26._object = (void *)0x80000001002CDCA0;
  v7._object = (void *)0x80000001002CDC70;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000017;
  v8.value._object = (void *)0x80000001002CD700;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v26);

  v20[0] = v5;
  v20[1] = v10;
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  sub_100004010(&qword_1003913B0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1002C4490;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4142435F45505954;
  *(void *)(v12 + 24) = 0xE800000000000000;
  *(void *)(v11 + 32) = v12;
  type metadata accessor for BuiltInCondition();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 2;
  *(void *)(v11 + 40) = v13;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 5;
  type metadata accessor for NotCondition();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1002B3AF0;
  *(void *)(v16 + 32) = v14;
  uint64_t v19 = v16;
  specialized Array._endMutation()();
  *(unsigned char *)(v15 + 16) = 2;
  *(void *)(v15 + 24) = v19;
  *(void *)(v11 + 48) = v15;
  specialized Array._endMutation()();
  type metadata accessor for AndCondition();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = v11;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x4544495344414F52, 0xED00004B524F465FLL, 3, v20, (unint64_t)_swiftEmptyArrayStorage, v17, (uint64_t)&off_10034C2A8, 1);
}

uint64_t sub_10026AB6C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v22._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v2._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v22._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D76E0;
  v3.value._uint64_t countAndFlagsBits = 0xD000000000000017;
  v3.value._object = (void *)0x80000001002CD700;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v22);

  id v6 = [v0 mainBundle];
  v23._uint64_t countAndFlagsBits = 0xD000000000000046;
  v7._uint64_t countAndFlagsBits = 0xD000000000000047;
  v23._object = (void *)0x80000001002D7760;
  v7._object = (void *)0x80000001002D7710;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000017;
  v8.value._object = (void *)0x80000001002CD700;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v23);

  v17[0] = v5;
  v17[1] = v10;
  Swift::String v18 = _swiftEmptyArrayStorage;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  sub_100004010(&qword_1003913B0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1002B7BC0;
  type metadata accessor for QuestionCondition();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 1;
  strcpy((char *)(v12 + 24), "ROADSIDE_FORK");
  *(_WORD *)(v12 + 38) = -4864;
  *(void *)(v11 + 32) = v12;
  type metadata accessor for BuiltInCondition();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 3;
  *(void *)(v11 + 40) = v13;
  specialized Array._endMutation()();
  uint64_t v14 = v11;
  type metadata accessor for AndCondition();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = v14;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0xD000000000000012, 0x80000001002D6B10, 3, v17, (unint64_t)_swiftEmptyArrayStorage, v15, (uint64_t)&off_10034C2D0, 2);
}

uint64_t sub_10026ADCC()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v38._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v38._object = (void *)0x80000001002D6B80;
  v2._uint64_t countAndFlagsBits = 0x6465656E206F6857;
  v2._object = (void *)0xEF3F706C65682073;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v38);

  Swift::String v31 = v5;
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  Swift::String v34 = _swiftEmptyArrayStorage;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  sub_100004010(&qword_1003913B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002C4490;
  id v7 = [v0 mainBundle];
  v39._object = (void *)0x80000001002D76A0;
  v8._uint64_t countAndFlagsBits = 25933;
  v8._object = (void *)0xE200000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v39._uint64_t countAndFlagsBits = 0xD000000000000031;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v39);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x454D5F4F4857;
  *(void *)(v13 + 24) = 0xE600000000000000;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v40._object = (void *)0x80000001002D76A0;
  v15._uint64_t countAndFlagsBits = 0x20656E6F656D6F53;
  v15._object = (void *)0xEC00000065736C45;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v40._uint64_t countAndFlagsBits = 0xD000000000000031;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v40);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0x4548544F5F4F4857;
  *(void *)(v20 + 24) = 0xE900000000000052;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  id v21 = [v0 mainBundle];
  v41._object = (void *)0x80000001002D76A0;
  v22._uint64_t countAndFlagsBits = 0x656C7069746C754DLL;
  v22._object = (void *)0xEF656C706F655020;
  v23.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v23.value._object = (void *)0xEE00796464754279;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v41._uint64_t countAndFlagsBits = 0xD000000000000031;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v41);

  Swift::String v26 = (Swift::String *)swift_allocObject();
  v26[1] = v25;
  v26[3]._uint64_t countAndFlagsBits = 0;
  v26[3]._object = 0;
  v26[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v26[2]._uint64_t countAndFlagsBits = 0;
  v26[2]._object = 0;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0x594E414D5F4F4857;
  *(void *)(v27 + 24) = 0xE800000000000000;
  *(void *)(v27 + 32) = v26;
  *(unsigned char *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = 40;
  *(void *)(v6 + 48) = v27;
  specialized Array._endMutation()();
  unint64_t v28 = v6;
  type metadata accessor for QuestionCondition();
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = 1;
  *(void *)(v29 + 24) = 1162893652;
  *(void *)(v29 + 32) = 0xE400000000000000;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(5195863, 0xE300000000000000, 0, &v31, v28, v29, (uint64_t)&off_10034C2F8, 7);
}

uint64_t sub_10026B228()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000028;
  v33._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v33._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7670;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v33);

  Swift::String v26 = v5;
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B7BC0;
  id v7 = [v0 mainBundle];
  v34._object = (void *)0x80000001002CD900;
  v8._uint64_t countAndFlagsBits = 7562585;
  v8._object = (void *)0xE300000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v34);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x45595F434F4C5441;
  *(void *)(v13 + 24) = 0xE900000000000053;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v35._object = (void *)0x80000001002CD900;
  v15._uint64_t countAndFlagsBits = 28494;
  v15._object = (void *)0xE200000000000000;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v35);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0x4F4E5F434F4C5441;
  *(void *)(v20 + 24) = 0xE800000000000000;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  specialized Array._endMutation()();
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0x454D5F4F4857;
  *(void *)(v21 + 24) = 0xE600000000000000;
  type metadata accessor for NotCondition();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1002B3AF0;
  *(void *)(v23 + 32) = v21;
  uint64_t v25 = v23;
  specialized Array._endMutation()();
  *(unsigned char *)(v22 + 16) = 2;
  *(void *)(v22 + 24) = v25;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x434F4C5441, 0xE500000000000000, 0, &v26, v6, v22, (uint64_t)&off_10034C320, 7);
}

uint64_t sub_10026B5E0()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000016;
  v34._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v34._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7650;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v34);

  Swift::String v27 = v5;
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B7BC0;
  id v7 = [v0 mainBundle];
  v35._object = (void *)0x80000001002D7610;
  v8._uint64_t countAndFlagsBits = 0x796C6C616D726F4ELL;
  v8._object = (void *)0xE800000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v35);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0xD000000000000010;
  *(void *)(v13 + 24) = 0x80000001002D6F10;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v36._object = (void *)0x80000001002D7610;
  v15._uint64_t countAndFlagsBits = 0x6669442068746957;
  v15._object = (void *)0xEF79746C75636966;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v36);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0xD000000000000013;
  *(void *)(v20 + 24) = 0x80000001002D6EF0;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  specialized Array._endMutation()();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1002B7BC0;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v22 = swift_allocObject();
  strcpy((char *)(v22 + 16), "TYPE_MEDICAL");
  *(unsigned char *)(v22 + 29) = 0;
  *(_WORD *)(v22 + 30) = -5120;
  *(void *)(v21 + 32) = v22;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0x454D5F4F4857;
  *(void *)(v23 + 24) = 0xE600000000000000;
  *(void *)(v21 + 40) = v23;
  specialized Array._endMutation()();
  uint64_t v24 = v21;
  type metadata accessor for AndCondition();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = v24;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x4D45485441455242, 0xE900000000000045, 0, &v27, v6, v25, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026B9FC()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000017;
  v43._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v43._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D75F0;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v43);

  Swift::String v36 = v5;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  Swift::String v39 = _swiftEmptyArrayStorage;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002C4490;
  id v7 = [v0 mainBundle];
  v44._object = (void *)0x80000001002D7610;
  v8._uint64_t countAndFlagsBits = 0x796C6C616D726F4ELL;
  v8._object = (void *)0xE800000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v44._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v44);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0xD000000000000013;
  *(void *)(v13 + 24) = 0x80000001002D6ED0;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v45._object = (void *)0x80000001002D7610;
  v15._uint64_t countAndFlagsBits = 0x6669442068746957;
  v15._object = (void *)0xEF79746C75636966;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v45._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v45);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0xD000000000000016;
  *(void *)(v20 + 24) = 0x80000001002D6EB0;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  id v21 = [v0 mainBundle];
  v46._object = (void *)0x80000001002D7610;
  v22._uint64_t countAndFlagsBits = 0x6165724220746F4ELL;
  v22._object = (void *)0xED0000676E696874;
  v23.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v23.value._object = (void *)0xEE00796464754279;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v46._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v46);

  Swift::String v26 = (Swift::String *)swift_allocObject();
  v26[1] = v25;
  v26[3]._uint64_t countAndFlagsBits = 0;
  v26[3]._object = 0;
  v26[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v26[2]._uint64_t countAndFlagsBits = 0;
  v26[2]._object = 0;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0xD000000000000010;
  *(void *)(v27 + 24) = 0x80000001002D6E90;
  *(void *)(v27 + 32) = v26;
  *(unsigned char *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = 40;
  *(void *)(v6 + 48) = v27;
  specialized Array._endMutation()();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1002B7BC0;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v29 = swift_allocObject();
  strcpy((char *)(v29 + 16), "TYPE_MEDICAL");
  *(unsigned char *)(v29 + 29) = 0;
  *(_WORD *)(v29 + 30) = -5120;
  *(void *)(v28 + 32) = v29;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0x454D5F4F4857;
  *(void *)(v30 + 24) = 0xE600000000000000;
  type metadata accessor for NotCondition();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1002B3AF0;
  *(void *)(v32 + 32) = v30;
  uint64_t v35 = v32;
  specialized Array._endMutation()();
  *(unsigned char *)(v31 + 16) = 2;
  *(void *)(v31 + 24) = v35;
  *(void *)(v28 + 40) = v31;
  specialized Array._endMutation()();
  type metadata accessor for AndCondition();
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = v28;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x4F45485441455242, 0xEC00000052454854, 0, &v36, v6, v33, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026BF60()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000013;
  v43._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v43._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7590;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v43);

  Swift::String v36 = v5;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  Swift::String v39 = _swiftEmptyArrayStorage;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002C4490;
  id v7 = [v0 mainBundle];
  v44._object = (void *)0x80000001002CD900;
  v8._uint64_t countAndFlagsBits = 7562585;
  v8._object = (void *)0xE300000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v44._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v44);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  strcpy((char *)(v13 + 16), "CONSCIOUS_YES");
  *(_WORD *)(v13 + 30) = -4864;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v45._uint64_t countAndFlagsBits = 0xD000000000000035;
  v45._object = (void *)0x80000001002D75B0;
  v15._uint64_t countAndFlagsBits = 0x74616877656D6F53;
  v15._object = (void *)0xE800000000000000;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v45);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0xD000000000000012;
  *(void *)(v20 + 24) = 0x80000001002D6E70;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  id v21 = [v0 mainBundle];
  v46._object = (void *)0x80000001002CD900;
  v22._uint64_t countAndFlagsBits = 28494;
  v22._object = (void *)0xE200000000000000;
  v23.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v23.value._object = (void *)0xEE00796464754279;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v46._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v46);

  Swift::String v26 = (Swift::String *)swift_allocObject();
  v26[1] = v25;
  v26[3]._uint64_t countAndFlagsBits = 0;
  v26[3]._object = 0;
  v26[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v26[2]._uint64_t countAndFlagsBits = 0;
  v26[2]._object = 0;
  uint64_t v27 = swift_allocObject();
  strcpy((char *)(v27 + 16), "CONSCIOUS_NO");
  *(unsigned char *)(v27 + 29) = 0;
  *(_WORD *)(v27 + 30) = -5120;
  *(void *)(v27 + 32) = v26;
  *(unsigned char *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = 40;
  *(void *)(v6 + 48) = v27;
  specialized Array._endMutation()();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1002B7BC0;
  type metadata accessor for QuestionCondition();
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = 0;
  strcpy((char *)(v29 + 24), "BREATHEOTHER");
  *(unsigned char *)(v29 + 37) = 0;
  *(_WORD *)(v29 + 38) = -5120;
  *(void *)(v28 + 32) = v29;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0xD000000000000010;
  *(void *)(v30 + 24) = 0x80000001002D6E90;
  type metadata accessor for NotCondition();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1002B3AF0;
  *(void *)(v32 + 32) = v30;
  uint64_t v35 = v32;
  specialized Array._endMutation()();
  *(unsigned char *)(v31 + 16) = 2;
  *(void *)(v31 + 24) = v35;
  *(void *)(v28 + 40) = v31;
  specialized Array._endMutation()();
  type metadata accessor for AndCondition();
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = v28;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x554F4943534E4F43, 0xE900000000000053, 0, &v36, v6, v33, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026C4C8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000022;
  v68._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v68._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7080;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v68);

  Swift::String v61 = v5;
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  uint64_t v64 = _swiftEmptyArrayStorage;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B8140;
  id v7 = [v0 mainBundle];
  v69._object = (void *)0x80000001002D7500;
  v8._uint64_t countAndFlagsBits = 0x6150207473656843;
  v8._object = (void *)0xEA00000000006E69;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v69._uint64_t countAndFlagsBits = 0xD000000000000067;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v69);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  strcpy((char *)(v13 + 16), "MEDTYPE_CHEST");
  *(_WORD *)(v13 + 30) = -4864;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v15._uint64_t countAndFlagsBits = 0xD000000000000010;
  v70._object = (void *)0x80000001002D7500;
  v15._object = (void *)0x80000001002D7570;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v70._uint64_t countAndFlagsBits = 0xD000000000000067;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v70);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  strcpy((char *)(v20 + 16), "MEDTYPE_TRAUM");
  *(_WORD *)(v20 + 30) = -4864;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  id v21 = [v0 mainBundle];
  v71._object = (void *)0x80000001002D7500;
  v22._uint64_t countAndFlagsBits = 0x7373656E6B636953;
  v22._object = (void *)0xE800000000000000;
  v23.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v23.value._object = (void *)0xEE00796464754279;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v71._uint64_t countAndFlagsBits = 0xD000000000000067;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v71);

  Swift::String v26 = (Swift::String *)swift_allocObject();
  v26[1] = v25;
  v26[3]._uint64_t countAndFlagsBits = 0;
  v26[3]._object = 0;
  v26[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v26[2]._uint64_t countAndFlagsBits = 0;
  v26[2]._object = 0;
  uint64_t v27 = swift_allocObject();
  strcpy((char *)(v27 + 16), "MEDTYPE_SICKN");
  *(_WORD *)(v27 + 30) = -4864;
  *(void *)(v27 + 32) = v26;
  *(unsigned char *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = 40;
  *(void *)(v6 + 48) = v27;
  id v28 = [v0 mainBundle];
  v72._object = (void *)0x80000001002D7500;
  v29._uint64_t countAndFlagsBits = 0x656B6F727453;
  v29._object = (void *)0xE600000000000000;
  v30.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v30.value._object = (void *)0xEE00796464754279;
  v31._uint64_t countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v72._uint64_t countAndFlagsBits = 0xD000000000000067;
  Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v72);

  uint64_t v33 = (Swift::String *)swift_allocObject();
  v33[1] = v32;
  v33[3]._uint64_t countAndFlagsBits = 0;
  v33[3]._object = 0;
  v33[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v33[2]._uint64_t countAndFlagsBits = 0;
  v33[2]._object = 0;
  uint64_t v34 = swift_allocObject();
  strcpy((char *)(v34 + 16), "MEDTYPE_STROK");
  *(_WORD *)(v34 + 30) = -4864;
  *(void *)(v34 + 32) = v33;
  *(unsigned char *)(v34 + 40) = 0;
  *(void *)(v34 + 48) = 40;
  *(void *)(v6 + 56) = v34;
  id v35 = [v0 mainBundle];
  v73._object = (void *)0x80000001002D7500;
  v36._uint64_t countAndFlagsBits = 0x676E696E776F7244;
  v36._object = (void *)0xE800000000000000;
  v37.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v37.value._object = (void *)0xEE00796464754279;
  v38._uint64_t countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v73._uint64_t countAndFlagsBits = 0xD000000000000067;
  Swift::String v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v73);

  uint64_t v40 = (Swift::String *)swift_allocObject();
  v40[1] = v39;
  v40[3]._uint64_t countAndFlagsBits = 0;
  v40[3]._object = 0;
  v40[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v40[2]._uint64_t countAndFlagsBits = 0;
  v40[2]._object = 0;
  uint64_t v41 = swift_allocObject();
  strcpy((char *)(v41 + 16), "MEDTYPE_DROWN");
  *(_WORD *)(v41 + 30) = -4864;
  *(void *)(v41 + 32) = v40;
  *(unsigned char *)(v41 + 40) = 0;
  *(void *)(v41 + 48) = 40;
  *(void *)(v6 + 64) = v41;
  id v42 = [v0 mainBundle];
  v74._uint64_t countAndFlagsBits = 0xD000000000000066;
  v74._object = (void *)0x80000001002CDB90;
  v43._uint64_t countAndFlagsBits = 0x726568744FLL;
  v43._object = (void *)0xE500000000000000;
  v44.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v44.value._object = (void *)0xEE00796464754279;
  v45._uint64_t countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v74);

  unint64_t v47 = (Swift::String *)swift_allocObject();
  v47[1] = v46;
  v47[3]._uint64_t countAndFlagsBits = 0;
  v47[3]._object = 0;
  v47[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v47[2]._uint64_t countAndFlagsBits = 0;
  v47[2]._object = 0;
  uint64_t v48 = swift_allocObject();
  strcpy((char *)(v48 + 16), "MEDTYPE_OTHER");
  *(_WORD *)(v48 + 30) = -4864;
  *(void *)(v48 + 32) = v47;
  *(unsigned char *)(v48 + 40) = 0;
  *(void *)(v48 + 48) = 40;
  *(void *)(v6 + 72) = v48;
  specialized Array._endMutation()();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1002C4490;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v50 = swift_allocObject();
  strcpy((char *)(v50 + 16), "TYPE_MEDICAL");
  *(unsigned char *)(v50 + 29) = 0;
  *(_WORD *)(v50 + 30) = -5120;
  *(void *)(v49 + 32) = v50;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0xD000000000000010;
  *(void *)(v51 + 24) = 0x80000001002D6E90;
  type metadata accessor for NotCondition();
  uint64_t v52 = swift_allocObject();
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1002B3AF0;
  *(void *)(v53 + 32) = v51;
  uint64_t v59 = v53;
  specialized Array._endMutation()();
  *(unsigned char *)(v52 + 16) = 2;
  *(void *)(v52 + 24) = v59;
  *(void *)(v49 + 40) = v52;
  uint64_t v54 = swift_allocObject();
  strcpy((char *)(v54 + 16), "CONSCIOUS_NO");
  *(unsigned char *)(v54 + 29) = 0;
  *(_WORD *)(v54 + 30) = -5120;
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1002B3AF0;
  *(void *)(v56 + 32) = v54;
  uint64_t v60 = v56;
  specialized Array._endMutation()();
  *(unsigned char *)(v55 + 16) = 2;
  *(void *)(v55 + 24) = v60;
  *(void *)(v49 + 48) = v55;
  specialized Array._endMutation()();
  type metadata accessor for AndCondition();
  uint64_t v57 = swift_allocObject();
  *(unsigned char *)(v57 + 16) = 0;
  *(void *)(v57 + 24) = v49;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x4550595444454DLL, 0xE700000000000000, 0, &v61, v6, v57, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026CD5C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000010;
  v34._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v34._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D74E0;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v34);

  Swift::String v27 = v5;
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  Swift::String_optional v30 = _swiftEmptyArrayStorage;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B7BC0;
  id v7 = [v0 mainBundle];
  v35._object = (void *)0x80000001002D74A0;
  v8._uint64_t countAndFlagsBits = 0x6C4F20726F203533;
  v8._object = (void *)0xEB00000000726564;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0xD000000000000038;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v35);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  strcpy((char *)(v13 + 16), "AGEME_35PLUS");
  *(unsigned char *)(v13 + 29) = 0;
  *(_WORD *)(v13 + 30) = -5120;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v36._object = (void *)0x80000001002D74A0;
  v15._uint64_t countAndFlagsBits = 0x3533207265646E55;
  v15._object = (void *)0xE800000000000000;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0xD000000000000038;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v36);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  strcpy((char *)(v20 + 16), "AGEME_BELOW35");
  *(_WORD *)(v20 + 30) = -4864;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  specialized Array._endMutation()();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1002B7BC0;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0x454D5F4F4857;
  *(void *)(v22 + 24) = 0xE600000000000000;
  *(void *)(v21 + 32) = v22;
  uint64_t v23 = swift_allocObject();
  strcpy((char *)(v23 + 16), "MEDTYPE_CHEST");
  *(_WORD *)(v23 + 30) = -4864;
  *(void *)(v21 + 40) = v23;
  specialized Array._endMutation()();
  uint64_t v24 = v21;
  type metadata accessor for AndCondition();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = v24;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x454D454741, 0xE500000000000000, 0, &v27, v6, v25, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026D17C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  v36._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v36._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7480;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v36);

  Swift::String v29 = v5;
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  sub_100004010(&qword_1003913B0);
  unint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B7BC0;
  id v7 = [v0 mainBundle];
  v37._object = (void *)0x80000001002D74A0;
  v8._uint64_t countAndFlagsBits = 0x6C4F20726F203533;
  v8._object = (void *)0xEB00000000726564;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v37._uint64_t countAndFlagsBits = 0xD000000000000038;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v37);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x524548544F454741;
  *(void *)(v13 + 24) = 0xEF53554C5035335FLL;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v38._object = (void *)0x80000001002D74A0;
  v15._uint64_t countAndFlagsBits = 0x3533207265646E55;
  v15._object = (void *)0xE800000000000000;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v38._uint64_t countAndFlagsBits = 0xD000000000000038;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v38);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0xD000000000000010;
  *(void *)(v20 + 24) = 0x80000001002D6E50;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  specialized Array._endMutation()();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1002B7BC0;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0x454D5F4F4857;
  *(void *)(v22 + 24) = 0xE600000000000000;
  type metadata accessor for NotCondition();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1002B3AF0;
  *(void *)(v24 + 32) = v22;
  uint64_t v28 = v24;
  specialized Array._endMutation()();
  *(unsigned char *)(v23 + 16) = 2;
  *(void *)(v23 + 24) = v28;
  *(void *)(v21 + 32) = v23;
  uint64_t v25 = swift_allocObject();
  strcpy((char *)(v25 + 16), "MEDTYPE_CHEST");
  *(_WORD *)(v25 + 30) = -4864;
  *(void *)(v21 + 40) = v25;
  specialized Array._endMutation()();
  type metadata accessor for AndCondition();
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = v21;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x524548544F454741, 0xE800000000000000, 0, &v29, v6, v26, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026D5F8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v31._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v31._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7460;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v31);

  Swift::String v24 = v5;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  Swift::String v27 = _swiftEmptyArrayStorage;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  sub_100004010(&qword_1003913B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B7BC0;
  id v7 = [v0 mainBundle];
  v32._object = (void *)0x80000001002CD900;
  v8._uint64_t countAndFlagsBits = 7562585;
  v8._object = (void *)0xE300000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v32);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  strcpy((char *)(v13 + 16), "IMNTDNGR_YES");
  *(unsigned char *)(v13 + 29) = 0;
  *(_WORD *)(v13 + 30) = -5120;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v33._object = (void *)0x80000001002CD900;
  v15._uint64_t countAndFlagsBits = 28494;
  v15._object = (void *)0xE200000000000000;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v33);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0x52474E44544E4D49;
  *(void *)(v20 + 24) = 0xEB000000004F4E5FLL;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  specialized Array._endMutation()();
  unint64_t v21 = v6;
  _s8SOSBuddy14OptionSelectedCMa_0();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0x4C4F505F45505954;
  *(void *)(v22 + 24) = 0xEB00000000454349;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x52474E44544E4D49, 0xE800000000000000, 0, &v24, v21, v22, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10026D968()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._uint64_t countAndFlagsBits = 0xD000000000000015;
  v31._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v31._object = (void *)0x80000001002D6B80;
  v2._object = (void *)0x80000001002D7440;
  v3.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v31);

  Swift::String v24 = v5;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  Swift::String v27 = _swiftEmptyArrayStorage;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  sub_100004010(&qword_1003913B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002B7BC0;
  id v7 = [v0 mainBundle];
  v32._object = (void *)0x80000001002CD900;
  v8._uint64_t countAndFlagsBits = 7562585;
  v8._object = (void *)0xE300000000000000;
  v9.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v32);

  type metadata accessor for OptionPresentation();
  uint64_t v12 = (Swift::String *)swift_allocObject();
  v12[1] = v11;
  v12[3]._uint64_t countAndFlagsBits = 0;
  v12[3]._object = 0;
  v12[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  type metadata accessor for Option();
  v12[2]._uint64_t countAndFlagsBits = 0;
  v12[2]._object = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x595F4E4F50414557;
  *(void *)(v13 + 24) = 0xEA00000000005345;
  *(void *)(v13 + 32) = v12;
  *(unsigned char *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 40;
  *(void *)(v6 + 32) = v13;
  id v14 = [v0 mainBundle];
  v33._object = (void *)0x80000001002CD900;
  v15._uint64_t countAndFlagsBits = 28494;
  v15._object = (void *)0xE200000000000000;
  v16.value._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v16.value._object = (void *)0xEE00796464754279;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v33);

  uint64_t v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0x4E5F4E4F50414557;
  *(void *)(v20 + 24) = 0xE90000000000004FLL;
  *(void *)(v20 + 32) = v19;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = 40;
  *(void *)(v6 + 40) = v20;
  specialized Array._endMutation()();
  unint64_t v21 = v6;
  type metadata accessor for QuestionCondition();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0x52474E44544E4D49;
  *(void *)(v22 + 32) = 0xE800000000000000;
  type metadata accessor for Question();
  swift_allocObject();
  return sub_10009B318(0x4E4F50414557, 0xE600000000000000, 0, &v24, v21, v22, (uint64_t)_swiftEmptyArrayStorage, 7);
}