unint64_t sub_10012DC38()
{
  long long *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  const char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  const char *v15;
  unint64_t v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  void *v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  Swift::String v50;
  void *v51;
  Swift::String v52;
  Swift::String v53;
  void *v54;
  Swift::String v55;
  Swift::String v56;
  void *v57;
  Swift::String v58;
  Swift::String v59;
  void *v60;
  Swift::String v61;
  Swift::String v62;
  unint64_t result;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char v70;

  sub_1001325FC(v0, (uint64_t)&v66);
  v1 = v66;
  switch(v70)
  {
    case 1:
      v6 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(71);
      v7._countAndFlagsBits = 0xD000000000000016;
      v7._object = (void *)0x80000001002CF450;
      String.append(_:)(v7);
      v8._countAndFlagsBits = v1;
      v8._object = v6;
      String.append(_:)(v8);
      v4 = 0xD00000000000002FLL;
      v9 = " is already used by another question or option.";
      goto LABEL_25;
    case 2:
      v10 = v67;
      v65 = 0;
      _StringGuts.grow(_:)(52);
      v11 = 0x80000001002CF410;
      v12 = 0xD000000000000031;
      goto LABEL_9;
    case 3:
      v13 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(83);
      v14 = 0xD00000000000001ALL;
      v15 = "Too many options defined: ";
      goto LABEL_7;
    case 4:
      v13 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(96);
      v14 = 0xD000000000000027;
      v15 = "Too many total textLimitBytes defined: ";
LABEL_7:
      v16 = (unint64_t)(v15 - 32) | 0x8000000000000000;
      String.append(_:)(*(Swift::String *)&v14);
      v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
      v18._countAndFlagsBits = 0x65757120726F6620;
      v18._object = (void *)0xEE00206E6F697473;
      String.append(_:)(v18);
      v19._countAndFlagsBits = v1;
      v19._object = v13;
      String.append(_:)(v19);
      v20._countAndFlagsBits = 0x2078614D202ELL;
      v20._object = (void *)0xE600000000000000;
      String.append(_:)(v20);
      v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      v4 = 0xD00000000000001FLL;
      v9 = " allowed (encoding limitation).";
      goto LABEL_25;
    case 5:
      v10 = v67;
      v65 = 0;
      _StringGuts.grow(_:)(71);
      v12 = 0xD000000000000044;
      v11 = 0x80000001002CF310;
LABEL_9:
      String.append(_:)(*(Swift::String *)&v12);
      goto LABEL_22;
    case 6:
      v22 = (void *)v67;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      v23 = 0x6E6F697473657551;
      goto LABEL_12;
    case 7:
      v22 = (void *)v67;
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease();
      v23 = 0x206E6F6974704FLL;
LABEL_12:
      v65 = v23;
      v24._countAndFlagsBits = v1;
      v24._object = v22;
      String.append(_:)(v24);
      v4 = 0xD000000000000010;
      v9 = " is not defined.";
      goto LABEL_25;
    case 8:
      v25 = (void *)v67;
      v26 = v68;
      v27 = v69;
      _StringGuts.grow(_:)(45);
      swift_bridgeObjectRelease();
      v65 = 0xD00000000000001BLL;
      v28._countAndFlagsBits = v1;
      v28._object = v25;
      String.append(_:)(v28);
      v29._countAndFlagsBits = 0x61766E6920736920;
      v29._object = (void *)0xED0000203A64696CLL;
      String.append(_:)(v29);
      v30 = v26;
      v31 = v27;
      goto LABEL_23;
    case 9:
      v32 = (void *)v67;
      v33 = v68;
      v34 = v69;
      v65 = 0;
      _StringGuts.grow(_:)(53);
      v35._countAndFlagsBits = 0xD000000000000017;
      v35._object = (void *)0x80000001002CF210;
      String.append(_:)(v35);
      v36._countAndFlagsBits = v1;
      v36._object = v32;
      String.append(_:)(v36);
      v37 = 0xD00000000000001ALL;
      v38 = 0x80000001002CF2B0;
      goto LABEL_17;
    case 10:
      v40 = (void *)v67;
      v39 = v68;
      v65 = 0;
      swift_retain();
      _StringGuts.grow(_:)(50);
      v41._countAndFlagsBits = 0x6E6F697473657551;
      v41._object = (void *)0xE900000000000020;
      String.append(_:)(v41);
      v42._countAndFlagsBits = v1;
      v42._object = v40;
      String.append(_:)(v42);
      v43._countAndFlagsBits = 0xD000000000000020;
      v43._object = (void *)0x80000001002CF280;
      String.append(_:)(v43);
      _print_unlocked<A, B>(_:_:)();
      v44._countAndFlagsBits = 10272;
      v44._object = (void *)0xE200000000000000;
      String.append(_:)(v44);
      v45 = *(void *)(v39 + 16);
      v46 = *(void **)(v39 + 24);
      swift_bridgeObjectRetain();
      v47._countAndFlagsBits = v45;
      v47._object = v46;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      v48._countAndFlagsBits = 41;
      v48._object = (void *)0xE100000000000000;
      String.append(_:)(v48);
      swift_release();
      return v65;
    case 11:
      v49 = (void *)v67;
      v33 = v68;
      v34 = v69;
      _StringGuts.grow(_:)(40);
      swift_bridgeObjectRelease();
      v65 = 0xD000000000000022;
      v50._countAndFlagsBits = v1;
      v50._object = v49;
      String.append(_:)(v50);
      v37 = 8250;
      v38 = 0xE200000000000000;
LABEL_17:
      String.append(_:)(*(Swift::String *)&v37);
      v4 = v33;
      v5 = v34;
      goto LABEL_26;
    case 12:
      v51 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(55);
      v52._countAndFlagsBits = 0xD000000000000017;
      v52._object = (void *)0x80000001002CF210;
      String.append(_:)(v52);
      v53._countAndFlagsBits = v1;
      v53._object = v51;
      String.append(_:)(v53);
      v4 = 0xD00000000000001ELL;
      v9 = " refers to the question itself";
      goto LABEL_25;
    case 13:
      v54 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(84);
      v55._countAndFlagsBits = 0xD000000000000023;
      v55._object = (void *)0x80000001002CF1B0;
      String.append(_:)(v55);
      v56._countAndFlagsBits = v1;
      v56._object = v54;
      String.append(_:)(v56);
      v4 = 0xD00000000000002FLL;
      v9 = " refers to builtin question, it is not allowed.";
      goto LABEL_25;
    case 14:
      v57 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(64);
      v58._countAndFlagsBits = 0xD000000000000014;
      v58._object = (void *)0x80000001002CF160;
      String.append(_:)(v58);
      v59._countAndFlagsBits = v1;
      v59._object = v57;
      String.append(_:)(v59);
      v4 = 0xD00000000000002ALL;
      v9 = ") can only be used for built-in questions.";
      goto LABEL_25;
    case 15:
      v10 = v67;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      v65 = 0xD000000000000022;
LABEL_22:
      v30 = v1;
      v31 = v10;
LABEL_23:
      String.append(_:)(*(Swift::String *)&v30);
      v4 = 46;
      v5 = 0xE100000000000000;
      goto LABEL_26;
    case 16:
      v60 = (void *)v67;
      v65 = 0;
      _StringGuts.grow(_:)(54);
      v61._countAndFlagsBits = 0x20656C646E7542;
      v61._object = (void *)0xE700000000000000;
      String.append(_:)(v61);
      v62._countAndFlagsBits = v1;
      v62._object = v60;
      String.append(_:)(v62);
      v4 = 0xD00000000000002DLL;
      v9 = " does not contain a questionnaire definition.";
LABEL_25:
      v5 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_26;
    case 17:
      result = 0xD000000000000031;
      if (v68 | v69 | v66 | v67)
      {
        v64 = v68 | v69 | v67;
        if (v66 != 1 || v64)
        {
          if (v66 != 2 || v64)
          {
            if (v66 == 3 && v64 == 0) {
              return 0xD000000000000020;
            }
            else {
              return 0xD000000000000058;
            }
          }
          else
          {
            return 0xD000000000000025;
          }
        }
      }
      return result;
    default:
      v2 = (void *)v67;
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease();
      v65 = 0xD000000000000023;
      v3._countAndFlagsBits = v1;
      v3._object = v2;
      String.append(_:)(v3);
      v4 = 11815;
      v5 = 0xE200000000000000;
LABEL_26:
      String.append(_:)(*(Swift::String *)&v4);
      return v65;
  }
}

unint64_t sub_10012E53C()
{
  sub_1001325FC(v0, (uint64_t)v2);
  return sub_10012DC38();
}

uint64_t sub_10012E574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  type metadata accessor for QuestionCondition();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v12 = *(void *)(v10 + 24);
    uint64_t v11 = *(void *)(v10 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    char v13 = sub_100078F90(v12, v11, a3);
    swift_bridgeObjectRelease();
    if (v13)
    {
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      BOOL v16 = v15 == v12 && v14 == v11;
      if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        sub_1000A1FAC();
        swift_allocError();
        *(void *)uint64_t v17 = v15;
        *(void *)(v17 + 8) = v14;
        *(void *)(v17 + 16) = 0;
        *(void *)(v17 + 24) = 0;
        char v18 = 12;
LABEL_37:
        *(unsigned char *)(v17 + 32) = v18;
        goto LABEL_40;
      }
      uint64_t v40 = *(void *)(v4 + 104);
      if (*(void *)(v40 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v41 = sub_1001BEC58(v12, v11);
        if (v42)
        {
          uint64_t v43 = *(void *)(*(void *)(v40 + 56) + 8 * v41);
          swift_retain();
          swift_bridgeObjectRelease();
          if (*(unsigned char *)(v43 + 32) != 3 || *(unsigned char *)(a1 + 32) == 3) {
            goto LABEL_59;
          }
          sub_1000A1FAC();
          swift_allocError();
          *(void *)uint64_t v44 = v15;
          *(void *)(v44 + 8) = v14;
          *(void *)(v44 + 16) = 0;
          *(void *)(v44 + 24) = 0;
          *(unsigned char *)(v44 + 32) = 13;
          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
    }
    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v50 = v12;
    *(void *)(v50 + 8) = v11;
    *(void *)(v50 + 16) = 0;
    *(void *)(v50 + 24) = 0;
    *(unsigned char *)(v50 + 32) = 6;
    goto LABEL_40;
  }
  type metadata accessor for OptionCondition();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v20 = *(void *)(v19 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    char v22 = sub_100078F90(v21, v20, a4);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      uint64_t v38 = *(void *)(a1 + 16);
      uint64_t v37 = *(void *)(a1 + 24);
      sub_1000A1FAC();
      swift_allocError();
      *(void *)uint64_t v39 = v38;
      *(void *)(v39 + 8) = v37;
      *(void *)(v39 + 16) = v21;
      *(void *)(v39 + 24) = v20;
      *(unsigned char *)(v39 + 32) = 9;
      swift_bridgeObjectRetain();
LABEL_40:
      swift_bridgeObjectRetain();
      swift_willThrow();
      return swift_release();
    }
    uint64_t v23 = *(void *)(v4 + 112);
    if (*(void *)(v23 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1001BEC58(v21, v20);
      if (v25)
      {
        uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v28 = *(void *)(a1 + 16);
        uint64_t v27 = *(void *)(a1 + 24);
        BOOL v29 = *(void *)(v26 + 16) == v28 && *(void *)(v26 + 24) == v27;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          sub_1000A1FAC();
          swift_allocError();
          *(void *)uint64_t v30 = v28;
          *(void *)(v30 + 8) = v27;
          *(void *)(v30 + 16) = 0;
          *(void *)(v30 + 24) = 0;
          char v31 = 12;
        }
        else
        {
          if (*(unsigned char *)(v26 + 32) != 3) {
            goto LABEL_59;
          }
          sub_1000A1FAC();
          swift_allocError();
          *(void *)uint64_t v30 = v28;
          *(void *)(v30 + 8) = v27;
          *(void *)(v30 + 16) = 0;
          *(void *)(v30 + 24) = 0;
          char v31 = 13;
        }
        *(unsigned char *)(v30 + 32) = v31;
LABEL_20:
        swift_bridgeObjectRetain();
        swift_willThrow();
LABEL_59:
        swift_release();
        return swift_release();
      }
      swift_bridgeObjectRelease();
    }
    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v17 = v21;
    *(void *)(v17 + 8) = v20;
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = 0;
    char v18 = 7;
    goto LABEL_37;
  }
  type metadata accessor for BuiltInCondition();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    if (*(unsigned char *)(a1 + 32) != 3)
    {
      unint64_t v33 = sub_1001B7B08();
      uint64_t v35 = v34;
      sub_1000A1FAC();
      swift_allocError();
      *(void *)uint64_t v36 = v33;
      *(void *)(v36 + 8) = v35;
      *(void *)(v36 + 16) = 0;
      *(void *)(v36 + 24) = 0;
      *(unsigned char *)(v36 + 32) = 14;
      return swift_willThrow();
    }
    return result;
  }
  type metadata accessor for LogicalCondition();
  uint64_t v45 = swift_dynamicCastClass();
  if (!v45)
  {
    type metadata accessor for NoPrerequisites();
    uint64_t result = swift_dynamicCastClass();
    if (!result)
    {
      uint64_t v52 = *(void *)(a1 + 16);
      uint64_t v51 = *(void *)(a1 + 24);
      sub_1000A1FAC();
      swift_allocError();
      *(void *)uint64_t v53 = v52;
      *(void *)(v53 + 8) = v51;
      *(void *)(v53 + 16) = 0;
      *(void *)(v53 + 24) = 0;
      *(unsigned char *)(v53 + 32) = 15;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    return result;
  }
  uint64_t v46 = v45;
  type metadata accessor for NotCondition();
  uint64_t v47 = swift_dynamicCastClass();
  if (!v47)
  {
    swift_retain();
    while (1)
    {
      unint64_t v54 = *(void *)(v46 + 24);
      if (v54 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
        if (!v55)
        {
LABEL_56:
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v55) {
          goto LABEL_56;
        }
      }
      unint64_t v64 = v54;
      uint64_t v65 = a4;
      unint64_t v66 = v54 & 0xC000000000000001;
      uint64_t v56 = 4;
      while (1)
      {
        a4 = v55;
        uint64_t v57 = v56 - 4;
        if (!v66) {
          break;
        }
        uint64_t v58 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v59 = __OFADD__(v57, 1);
        uint64_t v46 = v56 - 3;
        if (v59) {
          goto LABEL_62;
        }
LABEL_54:
        sub_10012E574(a1, v58, a3, v65);
        if (v6)
        {
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        swift_release();
        ++v56;
        unint64_t v54 = v64;
        if (v46 == v55) {
          goto LABEL_56;
        }
      }
      uint64_t v58 = *(void *)(v54 + 8 * v56);
      swift_retain();
      BOOL v59 = __OFADD__(v57, 1);
      uint64_t v46 = v56 - 3;
      if (!v59) {
        goto LABEL_54;
      }
LABEL_62:
      __break(1u);
LABEL_63:
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v60 != 1) {
        goto LABEL_64;
      }
LABEL_34:
      swift_release();
    }
  }
  unint64_t v48 = *(void *)(v47 + 24);
  if (v48 >> 62) {
    goto LABEL_63;
  }
  uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v49 == 1) {
    goto LABEL_34;
  }
LABEL_64:
  uint64_t v62 = *(void *)(a1 + 16);
  uint64_t v61 = *(void *)(a1 + 24);
  sub_1000A1FAC();
  swift_allocError();
  *(void *)uint64_t v63 = v62;
  *(void *)(v63 + 8) = v61;
  *(void *)(v63 + 16) = 0;
  *(void *)(v63 + 24) = 0;
  *(unsigned char *)(v63 + 32) = 5;
  swift_bridgeObjectRetain();
  swift_willThrow();
  return swift_release_n();
}

uint64_t sub_10012EBDC(unsigned char *a1, Swift::Int a2)
{
  return sub_10012F0B4(a1, a2, &qword_1003924C0);
}

uint64_t sub_10012EBF0(unsigned char *a1, Swift::Int a2)
{
  return sub_10012F0B4(a1, a2, &qword_1003885C0);
}

uint64_t sub_10012EC04(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10012FE98(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10012EDB4(unsigned char *a1, Swift::Int a2)
{
  return sub_10012F0B4(a1, a2, &qword_1003885D8);
}

uint64_t sub_10012EDC8(uint64_t *a1, uint64_t a2)
{
  v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for Option();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v25;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v18 = sub_10012F1EC(v7, result + 1);
    Swift::Int v26 = v18;
    if (*(void *)(v18 + 24) <= *(void *)(v18 + 16))
    {
      swift_retain();
      sub_10012F6EC();
      uint64_t v19 = v26;
    }
    else
    {
      uint64_t v19 = v18;
      swift_retain();
    }
    sub_10012FC80(a2, v19);
    uint64_t *v3 = v19;
  }
  else
  {
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v13 = *(void *)(v6 + 48);
      uint64_t v14 = *(void *)(v13 + 8 * v12);
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      BOOL v17 = *(void *)(v14 + 16) == v15 && *(void *)(v14 + 24) == v16;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_13:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v3 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      uint64_t v20 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v20;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        uint64_t v21 = *(void *)(v13 + 8 * v12);
        BOOL v22 = *(void *)(v21 + 16) == v15 && *(void *)(v21 + 24) == v16;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    Swift::Int v24 = swift_retain();
    sub_100130034(v24, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v27;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_10012F08C(unsigned char *a1, Swift::Int a2)
{
  return sub_10012F0B4(a1, a2, &qword_1003885C8);
}

uint64_t sub_10012F0A0(unsigned char *a1, Swift::Int a2)
{
  return sub_10012F0B4(a1, a2, &qword_1003885B8);
}

uint64_t sub_10012F0B4(unsigned char *a1, Swift::Int a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_10012FD3C(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    uint64_t *v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_10012F1EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100004010(&qword_1003885D0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for Option();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10012F6EC();
          uint64_t v2 = v14;
        }
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int result = Hasher._finalize()();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10012F40C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_100004010(&qword_1003885B0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10012F6EC()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_100004010(&qword_1003885D0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v27 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10012F9D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100004010(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    int64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v20);
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

unint64_t sub_10012FC80(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

Swift::Int sub_10012FD3C(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  Swift::UInt v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_10012F9D8(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (Swift::Int)sub_10013055C(a4);
      goto LABEL_14;
    }
    sub_100130C54(v9, a4);
  }
  uint64_t v10 = *v4;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v6);
  unint64_t result = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

Swift::Int sub_10012FE98(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10012F40C();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_1001301F0();
      goto LABEL_22;
    }
    sub_1001306E8();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  unint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_100130034(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_10012F6EC();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (Swift::Int)sub_1001303A4();
      goto LABEL_22;
    }
    sub_100130998();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  unint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  uint64_t v10 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for Option();
    uint64_t v11 = *(void *)(v8 + 48);
    uint64_t v12 = *(void *)(v11 + 8 * a2);
    uint64_t v13 = *(void *)(v5 + 16);
    uint64_t v14 = *(void *)(v5 + 24);
    BOOL v15 = *(void *)(v12 + 16) == v13 && *(void *)(v12 + 24) == v14;
    if (v15 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(void *)(v10 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v17 = *(void *)(v11 + 8 * a2);
        if (*(void *)(v17 + 16) != v13 || *(void *)(v17 + 24) != v14)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v19 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v19 + 48) + 8 * a2) = v5;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v22;
  }
  return result;
}

void *sub_1001301F0()
{
  v1 = v0;
  sub_100004010(&qword_1003885B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001303A4()
{
  v1 = v0;
  sub_100004010(&qword_1003885D0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100130550()
{
  return sub_10013055C(&qword_1003885B8);
}

void *sub_10013055C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100004010(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001306E8()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_100004010(&qword_1003885B0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100130998()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_100004010(&qword_1003885D0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    swift_retain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100130C54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100004010(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v20);
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100130ECC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100130F6C(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      type metadata accessor for Option();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v6 = v19;
      swift_unknownObjectRelease();
      return v6;
    }
    goto LABEL_31;
  }
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (*(_DWORD *)(a4 + 36) == a2)
    {
LABEL_18:
      uint64_t v6 = *(void *)(*(void *)(a4 + 48) + 8 * v5);
      swift_retain();
      return v6;
    }
    __break(1u);
  }
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  __CocoaSet.Index.element.getter();
  type metadata accessor for Option();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v5 = v7 & ~v8;
  uint64_t v9 = a4 + 56;
  if (((*(void *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_32:
    swift_release();
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v10 = *(void *)(a4 + 48);
  uint64_t v11 = *(void *)(v10 + 8 * v5);
  uint64_t v12 = *(void *)(v19 + 16);
  uint64_t v13 = *(void *)(v19 + 24);
  BOOL v14 = *(void *)(v11 + 16) == v12 && *(void *)(v11 + 24) == v13;
  if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    goto LABEL_17;
  }
  uint64_t v16 = ~v8;
  unint64_t v5 = (v5 + 1) & v16;
  if ((*(void *)(v9 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    while (1)
    {
      uint64_t v17 = *(void *)(v10 + 8 * v5);
      BOOL v18 = *(void *)(v17 + 16) == v12 && *(void *)(v17 + 24) == v13;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v16;
      if (((*(void *)(v9 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      {
        swift_release();
        __break(1u);
        goto LABEL_28;
      }
    }
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
LABEL_33:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100131214(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1001312C4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_100131318(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_10013136C(uint64_t a1, uint64_t a2)
{
  if (a1 != 65 || a2 != 0xE100000000000000)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_6;
    }
    if (a1 == 90 && a2 == 0xE100000000000000) {
      return 1;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 1;
  }
LABEL_6:
  if (a1 == 97 && a2 == 0xE100000000000000)
  {
LABEL_8:
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL v6 = a1 == 95 && a2 == 0xE100000000000000;
    if ((v4 & 1) == 0 || v6) {
      return 1;
    }
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (a1 == 122 && a2 == 0xE100000000000000) {
      return 1;
    }
    goto LABEL_8;
  }
  if (a1 == 95 && a2 == 0xE100000000000000) {
    return 1;
  }
LABEL_16:

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001314C4(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10012C67C(a1, a2);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6 || (char v7 = sub_10013136C(v4, v6), swift_bridgeObjectRelease(), (v7 & 1) == 0))
  {
    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v15 = a1;
    *(void *)(v15 + 8) = a2;
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 0;
    *(unsigned char *)(v15 + 32) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  Swift::String_optional v8 = String.Iterator.next()();
  if (!v8.value._object) {
    return swift_bridgeObjectRelease();
  }
  uint64_t countAndFlagsBits = v8.value._countAndFlagsBits;
  object = v8.value._object;
  while (1)
  {
    if (countAndFlagsBits != 65 || object != (void *)0xE100000000000000)
    {
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        goto LABEL_10;
      }
      if (countAndFlagsBits == 90 && object == (void *)0xE100000000000000) {
        goto LABEL_31;
      }
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_31;
    }
LABEL_10:
    if (countAndFlagsBits == 97 && object == (void *)0xE100000000000000) {
      goto LABEL_12;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      if (countAndFlagsBits == 122 && object == (void *)0xE100000000000000) {
        goto LABEL_31;
      }
LABEL_12:
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL v12 = object == (void *)0xE100000000000000 && countAndFlagsBits == 95;
      if (v12 || (v11 & 1) == 0) {
        goto LABEL_31;
      }
      goto LABEL_17;
    }
    if (countAndFlagsBits == 95 && object == (void *)0xE100000000000000) {
      goto LABEL_31;
    }
LABEL_17:
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_31;
    }
    if (countAndFlagsBits != 48 || object != (void *)0xE100000000000000) {
      break;
    }
LABEL_20:
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_35;
    }
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    Swift::String_optional v13 = String.Iterator.next()();
    uint64_t countAndFlagsBits = v13.value._countAndFlagsBits;
    object = v13.value._object;
    if (!v13.value._object) {
      return swift_bridgeObjectRelease();
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (countAndFlagsBits == 57 && object == (void *)0xE100000000000000) {
      goto LABEL_31;
    }
    goto LABEL_20;
  }
LABEL_35:
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_32;
  }
  sub_1000A1FAC();
  swift_allocError();
  *(void *)uint64_t v17 = a1;
  *(void *)(v17 + 8) = a2;
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(unsigned char *)(v17 + 32) = 0;
  swift_bridgeObjectRetain();
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001317B4(uint64_t result, uint64_t a2)
{
  uint64_t v51 = (void *)result;
  uint64_t v2 = *(void **)(result + 112);
  if (!v2) {
    return result;
  }
  unint64_t v54 = _swiftEmptySetSingleton;
  uint64_t v3 = v2[2];
  if (!v3)
  {
    uint64_t v22 = _swiftEmptySetSingleton[2];
    uint64_t result = swift_bridgeObjectRelease();
    if (v22) {
      return result;
    }
    goto LABEL_53;
  }
  uint64_t v4 = v2 + 4;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  uint64_t v50 = v3;
  do
  {
    if (v5 >= v2[2])
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      return result;
    }
    uint64_t v6 = &v4[2 * v5];
    uint64_t v8 = *v6;
    char v7 = (void *)v6[1];
    if (*v6 != 45 || v7 != (void *)0xE100000000000000)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0)
      {
        unint64_t v10 = v51[5];
        if (v10 >> 62)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v11)
          {
LABEL_51:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v29 = sub_100078F90(v8, (uint64_t)v7, a2);
            uint64_t v30 = v51[2];
            uint64_t v31 = v51[3];
            if ((v29 & 1) == 0)
            {
              Swift::Int v52 = 0;
              unint64_t v53 = 0xE000000000000000;
              swift_bridgeObjectRetain();
              _StringGuts.grow(_:)(19);
              swift_bridgeObjectRelease();
              Swift::Int v52 = 0xD000000000000011;
              unint64_t v53 = 0x80000001002CEE20;
              goto LABEL_57;
            }
            Swift::Int v52 = 0;
            unint64_t v53 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            _StringGuts.grow(_:)(43);
            swift_bridgeObjectRelease();
            Swift::Int v52 = 0x64496E6F6974706FLL;
            unint64_t v53 = 0xE900000000000020;
            v32._uint64_t countAndFlagsBits = v8;
            v32._object = v7;
            String.append(_:)(v32);
            swift_bridgeObjectRelease();
            v33._uint64_t countAndFlagsBits = 0xD000000000000020;
            v33._object = (void *)0x80000001002CEE40;
            String.append(_:)(v33);
LABEL_58:
            Swift::Int v37 = v52;
            unint64_t v38 = v53;
            sub_1000A1FAC();
            swift_allocError();
            *(void *)uint64_t v39 = v30;
            *(void *)(v39 + 8) = v31;
            *(void *)(v39 + 16) = v37;
            *(void *)(v39 + 24) = v38;
            *(unsigned char *)(v39 + 32) = 8;
            return swift_willThrow();
          }
        }
        else
        {
          uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          if (!v11) {
            goto LABEL_51;
          }
        }
        if ((v10 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v12 = *(void *)(v10 + 32);
          swift_retain();
        }
        if ((*(void *)(v12 + 16) != v8 || *(void **)(v12 + 24) != v7)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t result = swift_release();
          if (v11 == 1) {
            goto LABEL_51;
          }
          if ((v10 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = 1;
            while (1)
            {
              uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v16 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_75;
              }
              BOOL v17 = *(void *)(result + 16) == v8 && *(void *)(result + 24) == (void)v7;
              if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                goto LABEL_18;
              }
              swift_unknownObjectRelease();
              ++v15;
              if (v16 == v11) {
                goto LABEL_51;
              }
            }
          }
          uint64_t v18 = 5;
          while (1)
          {
            uint64_t v19 = v18 - 3;
            if (__OFADD__(v18 - 4, 1)) {
              goto LABEL_76;
            }
            uint64_t v20 = *(void *)(v10 + 8 * v18);
            if (*(void *)(v20 + 16) == v8 && *(void *)(v20 + 24) == (void)v7) {
              break;
            }
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if (result) {
              break;
            }
            ++v18;
            if (v19 == v11) {
              goto LABEL_51;
            }
          }
          swift_retain();
        }
LABEL_18:
        swift_bridgeObjectRelease_n();
        swift_release();
        uint64_t v13 = (uint64_t)v54;
        swift_bridgeObjectRetain();
        char v14 = sub_100078F90(v8, (uint64_t)v7, v13);
        swift_bridgeObjectRelease();
        if (v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = v51[2];
          uint64_t v31 = v51[3];
          Swift::Int v52 = 0;
          unint64_t v53 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          _StringGuts.grow(_:)(21);
          swift_bridgeObjectRelease();
          Swift::Int v52 = 0xD000000000000013;
          unint64_t v53 = 0x80000001002CEFE0;
LABEL_57:
          v36._uint64_t countAndFlagsBits = v8;
          v36._object = v7;
          String.append(_:)(v36);
          swift_bridgeObjectRelease();
          goto LABEL_58;
        }
        sub_10012EC04(&v52, v8, (Swift::Int)v7);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v2 + 4;
        uint64_t v3 = v50;
      }
    }
    ++v5;
  }
  while (v5 != v3);
  swift_bridgeObjectRelease();
  uint64_t v23 = v54[2];
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_53:
    uint64_t v34 = v51[2];
    uint64_t v35 = v51[3];
    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v26 = v34;
    *(void *)(v26 + 8) = v35;
    unint64_t v27 = 0xD000000000000024;
    uint64_t v28 = "at least one option should be listed";
    goto LABEL_54;
  }
  if (v2[4] == 45 && v2[5] == 0xE100000000000000
    || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
  {
    uint64_t v24 = v51[2];
    uint64_t v25 = v51[3];
    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v26 = v24;
    *(void *)(v26 + 8) = v25;
    unint64_t v27 = 0xD000000000000019;
    uint64_t v28 = "separator cannot be first";
    goto LABEL_54;
  }
  if (v3 == 1) {
    return result;
  }
  uint64_t v40 = 0;
  unint64_t v41 = v2 + 7;
  char v42 = 1;
  uint64_t v43 = 1;
  while (1)
  {
    uint64_t result = *(v41 - 1);
    if (result != 45 || *v41 != 0xE100000000000000)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        goto LABEL_63;
      }
    }
    if (v43 == v2[2] - 1)
    {
      uint64_t v45 = v51[2];
      uint64_t v46 = v51[3];
      sub_1000A1FAC();
      swift_allocError();
      *(void *)uint64_t v26 = v45;
      *(void *)(v26 + 8) = v46;
      unint64_t v27 = 0xD000000000000018;
      uint64_t v28 = "separator cannot be last";
      goto LABEL_54;
    }
    if (!(v42 & 1 | (v43 - 1 != v40))) {
      break;
    }
    char v42 = 0;
    uint64_t v40 = v43;
LABEL_63:
    ++v43;
    v41 += 2;
    if (v3 == v43) {
      return result;
    }
  }
  uint64_t v47 = v51[2];
  uint64_t v48 = v51[3];
  sub_1000A1FAC();
  swift_allocError();
  *(void *)uint64_t v26 = v47;
  *(void *)(v26 + 8) = v48;
  unint64_t v27 = 0xD000000000000025;
  uint64_t v28 = "adjacent separators are not supported";
LABEL_54:
  *(void *)(v26 + 16) = v27;
  *(void *)(v26 + 24) = (unint64_t)(v28 - 32) | 0x8000000000000000;
  *(unsigned char *)(v26 + 32) = 8;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_100131E28(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)(result + 128);
  if (v2)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void *)(result + 120);
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v6 = *(void *)(result + 16);
      uint64_t v5 = *(void *)(result + 24);
      unint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(77);
      v7._uint64_t countAndFlagsBits = 0x206E6F6974704FLL;
      v7._object = (void *)0xE700000000000000;
      String.append(_:)(v7);
      v8._uint64_t countAndFlagsBits = v4;
      v8._object = v2;
      String.append(_:)(v8);
      unint64_t v9 = 0xD000000000000044;
      unint64_t v10 = ": optionPresentedAsSkip is supported for SingleChoice questions only";
      goto LABEL_4;
    }
    if (!*(void *)(*(void *)(result + 56) + 16))
    {
      uint64_t v6 = *(void *)(result + 16);
      uint64_t v5 = *(void *)(result + 24);
      unint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(74);
      v22._uint64_t countAndFlagsBits = 0x206E6F6974704FLL;
      v22._object = (void *)0xE700000000000000;
      String.append(_:)(v22);
      v23._uint64_t countAndFlagsBits = v4;
      v23._object = v2;
      String.append(_:)(v23);
      unint64_t v9 = 0xD000000000000041;
      unint64_t v10 = ": optionPresentedAsSkip is supported for mandatory questions only";
      goto LABEL_4;
    }
    unint64_t v14 = *(void *)(result + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000A2B54(v14, v4, (uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v15)
    {
      char v24 = sub_100078F90(v4, (uint64_t)v2, a2);
      uint64_t v6 = v3[2];
      uint64_t v5 = v3[3];
      if ((v24 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        _StringGuts.grow(_:)(19);
        swift_bridgeObjectRelease();
        unint64_t v31 = 0xD000000000000011;
        unint64_t v32 = 0x80000001002CEE20;
        unint64_t v9 = v4;
        unint64_t v11 = (unint64_t)v2;
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease();
      unint64_t v31 = 0x64496E6F6974706FLL;
      unint64_t v32 = 0xE900000000000020;
      v25._uint64_t countAndFlagsBits = v4;
      v25._object = v2;
      String.append(_:)(v25);
      unint64_t v9 = 0xD000000000000020;
      unint64_t v10 = " belongs to a different question";
LABEL_4:
      unint64_t v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
LABEL_5:
      String.append(_:)(*(Swift::String *)&v9);
      sub_1000A1FAC();
      swift_allocError();
      *(void *)uint64_t v12 = v6;
      *(void *)(v12 + 8) = v5;
      *(void *)(v12 + 16) = v31;
      *(void *)(v12 + 24) = v32;
      *(unsigned char *)(v12 + 32) = 11;
      return swift_willThrow();
    }
    if (*(unsigned char *)(v15 + 40))
    {
      uint64_t v17 = v3[2];
      uint64_t v16 = v3[3];
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(72);
      v18._uint64_t countAndFlagsBits = 0x206E6F6974704FLL;
      v18._object = (void *)0xE700000000000000;
      String.append(_:)(v18);
      v19._uint64_t countAndFlagsBits = v4;
      v19._object = v2;
      String.append(_:)(v19);
      unint64_t v20 = 0xD00000000000003FLL;
      uint64_t v21 = ": optionPresentedAsSkip is supported for Selection options only";
    }
    else
    {
      uint64_t v26 = (void *)v3[14];
      if (!v26 || (sub_10012C964(v4, (uint64_t)v2, v26) & 1) != 0) {
        return swift_release();
      }
      uint64_t v17 = v3[2];
      uint64_t v16 = v3[3];
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(66);
      v27._uint64_t countAndFlagsBits = 0x206E6F6974704FLL;
      v27._object = (void *)0xE700000000000000;
      String.append(_:)(v27);
      v28._uint64_t countAndFlagsBits = v4;
      v28._object = v2;
      String.append(_:)(v28);
      unint64_t v20 = 0xD000000000000039;
      uint64_t v21 = ": optionPresentedAsSkip must be mentioned in optionsOrder";
    }
    unint64_t v29 = (unint64_t)(v21 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v20);
    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v30 = v17;
    *(void *)(v30 + 8) = v16;
    *(void *)(v30 + 16) = 0;
    *(void *)(v30 + 24) = 0xE000000000000000;
    *(unsigned char *)(v30 + 32) = 11;
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_100132210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      goto LABEL_2;
    case 8:
    case 9:
    case 11:
      swift_bridgeObjectRetain();
LABEL_2:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 10:
      swift_bridgeObjectRetain();
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for QuestionnaireError(uint64_t a1)
{
  return sub_100132314(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_100132314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      goto LABEL_2;
    case 8:
    case 9:
    case 11:
      swift_bridgeObjectRelease();
LABEL_2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 10:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for QuestionnaireError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100132210(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for QuestionnaireError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100132210(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100132314(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for QuestionnaireError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_100132314(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 239);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0x11) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 239;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xEF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xEF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001325B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 0x10u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 17);
  }
}

uint64_t sub_1001325D0(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x11)
  {
    *(void *)uint64_t result = a2 - 17;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 17;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireError()
{
  return &type metadata for QuestionnaireError;
}

uint64_t sub_1001325FC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_100132640()
{
  unint64_t v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for MetalView();
  [super layoutSubviews];
  id v2 = [v0 layer];
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    int v4 = (void *)v3;
    id v5 = v2;
    id v6 = [v1 traitCollection];
    [v6 displayScale];
    double v8 = v7;

    [v4 setContentsScale:v8];
    [v4 bounds];
    double Width = CGRectGetWidth(v15);
    [v4 contentsScale];
    double v11 = Width * v10;
    [v4 bounds];
    double Height = CGRectGetHeight(v16);
    [v4 contentsScale];
    [v4 setDrawableSize:v11 Height * v13];
  }
}

id sub_100132964()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetalView();
  return [super dealloc];
}

uint64_t type metadata accessor for MetalView()
{
  return self;
}

unint64_t sub_1001329BC()
{
  unint64_t result = qword_100388608[0];
  if (!qword_100388608[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_100388608);
  }
  return result;
}

uint64_t sub_1001329FC(uint64_t result, uint64_t a2, float32x2_t a3, float32x2_t a4, float32x2_t a5)
{
  float32x2_t v5 = vdiv_f32(a3, a5);
  float32x2_t v6 = vdiv_f32(a4, a5);
  float v7 = (float)a2;
  float v8 = (float)(1.0 - (float)(vmuls_lane_f32(0.5, v6, 1) + 0.5)) * (float)a2;
  float v9 = (float)((float)(0.5 * v6.f32[0]) + 0.5) * (float)result;
  float v10 = (float)(1.0 - (float)(vmuls_lane_f32(0.5, v5, 1) + 0.5)) * (float)a2;
  float v11 = floorf((float)((float)(0.5 * v5.f32[0]) + 0.5) * (float)result);
  if (v11 > (float)result) {
    float v11 = (float)result;
  }
  if (v11 < 0.0) {
    float v11 = 0.0;
  }
  float v12 = floorf(v8);
  if (v12 > v7) {
    float v12 = (float)a2;
  }
  if (v12 < 0.0) {
    float v12 = 0.0;
  }
  float v13 = ceilf(v9) - v11;
  float v14 = (float)result - v11;
  if (v14 >= v13) {
    float v14 = v13;
  }
  if (v14 < 0.0) {
    float v14 = 0.0;
  }
  float v15 = ceilf(v10) - v12;
  float v16 = v7 - v12;
  if (v16 >= v15) {
    float v16 = v15;
  }
  if (v16 < 0.0) {
    float v16 = 0.0;
  }
  if (v11 <= -9.2234e18)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v12 >= 9.2234e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v14 <= -9.2234e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v14 >= 9.2234e18)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if ((LODWORD(v11) & 0x7F800000) == 0x7F800000 || (LODWORD(v12) & 0x7F800000) == 2139095040) {
    goto LABEL_40;
  }
  if ((LODWORD(v14) & 0x7F800000) == 0x7F800000 || (LODWORD(v16) & 0x7F800000) == 2139095040) {
    goto LABEL_40;
  }
  if (v16 <= -9.2234e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v16 < 9.2234e18) {
    return (uint64_t)v11;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100132B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 88);
}

uint64_t sub_100132B9C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100132C10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100132D28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ExplorerConnectionAssistantView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t sub_100132EC4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  return a1;
}

uint64_t sub_100132FB4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100132FFC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ScrollableContentWithPanelsView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100133080()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001330CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  sub_1000094C4(&qword_100385170);
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  unint64_t v29 = &protocol conformance descriptor for VStack<A>;
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  sub_1000094C4(&qword_100385178);
  uint64_t v26 = a1[4];
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100385180);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  uint64_t v5 = a1[7];
  uint64_t v28 = a1[6];
  uint64_t v27 = v5;
  uint64_t v43 = v3;
  uint64_t v44 = v26;
  uint64_t v45 = v28;
  uint64_t v46 = v5;
  type metadata accessor for ScrollableContentWithFloatingPanelView();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v42 = swift_getWitnessTable();
  v23[1] = swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for VStack();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)v23 - v8;
  sub_1000094C4(&qword_100385188);
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  float v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  float v16 = (char *)v23 - v15;
  uint64_t v32 = v24;
  uint64_t v33 = v25;
  uint64_t v17 = a1[5];
  uint64_t v34 = v26;
  uint64_t v35 = v17;
  uint64_t v36 = v28;
  uint64_t v37 = v27;
  uint64_t v38 = v30;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  sub_100134084();
  uint64_t v18 = swift_getWitnessTable();
  sub_1000AA19C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v19 = sub_100009B18(&qword_100385190, &qword_100385188);
  uint64_t v39 = v18;
  uint64_t v40 = v19;
  uint64_t v20 = swift_getWitnessTable();
  sub_1000A7320(v14, v10, v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  sub_1000A7320(v16, v10, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v10);
}

uint64_t sub_100133668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v68 = a7;
  uint64_t v69 = a1;
  uint64_t v79 = a4;
  uint64_t v80 = a6;
  uint64_t v77 = a8;
  uint64_t v78 = a5;
  *(void *)&long long v125 = a3;
  *((void *)&v125 + 1) = a4;
  *(void *)&long long v126 = a6;
  *((void *)&v126 + 1) = a7;
  uint64_t v65 = type metadata accessor for ScrollableContentWithFloatingPanelView();
  swift_getTupleTypeMetadata2();
  uint64_t v10 = type metadata accessor for TupleView();
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v66 = (char *)&v59 - v12;
  uint64_t v63 = *(void *)(a2 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v64 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v75 = (char *)&v59 - v15;
  sub_1000094C4(&qword_100385170);
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  sub_1000094C4(&qword_100385178);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100385180);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  uint64_t WitnessTable = (void (*)(char *, uint64_t))swift_getWitnessTable();
  uint64_t v16 = type metadata accessor for ZStack();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  Swift::String v22 = (char *)&v59 - v21;
  uint64_t v70 = v23;
  uint64_t v76 = v10;
  uint64_t v24 = type metadata accessor for _ConditionalContent();
  uint64_t v73 = *(void *)(v24 - 8);
  uint64_t v74 = v24;
  __chkstk_darwin(v24);
  uint64_t v71 = a3;
  v72 = (char *)&v59 - v25;
  uint64_t v26 = a2;
  *(void *)&long long v125 = a2;
  *((void *)&v125 + 1) = a3;
  *(void *)&long long v126 = v79;
  uint64_t v27 = v78;
  *((void *)&v126 + 1) = v78;
  *(void *)&long long v127 = v80;
  uint64_t v28 = v68;
  *((void *)&v127 + 1) = v68;
  type metadata accessor for ScrollableContentWithPanelsView();
  uint64_t v29 = v69;
  uint64_t v30 = sub_100134084();
  if (v30)
  {
    v75 = (char *)&v59;
    __chkstk_darwin(v30);
    uint64_t v31 = v71;
    *(&v59 - 8) = v26;
    *(&v59 - 7) = v31;
    *(&v59 - 6) = v79;
    *(&v59 - 5) = v27;
    *(&v59 - 4) = v80;
    *(&v59 - 3) = v28;
    uint64_t v58 = v29;
    static Alignment.center.getter();
    ZStack.init(alignment:content:)();
    uint64_t v32 = v70;
    uint64_t v33 = swift_getWitnessTable();
    sub_1000A7320(v20, v32, v33);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
    v34(v20, v32);
    sub_1000A7320(v22, v32, v33);
    swift_getWitnessTable();
    uint64_t v35 = v72;
    sub_1000A735C((uint64_t)v20, v32);
    v34(v20, v32);
    v34(v22, v32);
  }
  else
  {
    uint64_t v36 = v64;
    (*(void (**)(void))(v29 + 16))();
    uint64_t v37 = v26;
    uint64_t v60 = v26;
    sub_1000A7320(v36, v26, v27);
    uint64_t v38 = v63;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v63 + 8);
    uint64_t v61 = v63 + 8;
    uint64_t WitnessTable = v39;
    v39(v36, v37);
    uint64_t v40 = *(void *)(v29 + 32);
    uint64_t v41 = *(void *)(v29 + 40);
    uint64_t v43 = *(void *)(v29 + 48);
    uint64_t v42 = *(void *)(v29 + 56);
    char v44 = *(unsigned char *)(v29 + 64);
    swift_retain();
    swift_retain();
    uint64_t v58 = v28;
    sub_10023EB64(v40, v41, v43, v42, v44, (uint64_t)&v125);
    long long v121 = v133;
    long long v122 = v134;
    long long v123 = v135;
    long long v124 = v136;
    long long v117 = v129;
    long long v118 = v130;
    long long v119 = v131;
    long long v120 = v132;
    long long v113 = v125;
    long long v114 = v126;
    long long v115 = v127;
    long long v116 = v128;
    uint64_t v45 = v65;
    uint64_t v46 = swift_getWitnessTable();
    sub_1000A7320(&v113, v45, v46);
    sub_100135C34((uint64_t)&v125);
    uint64_t v47 = v75;
    uint64_t v48 = v60;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v36, v75, v60);
    v111[8] = v107;
    v111[9] = v108;
    v111[10] = v109;
    v111[11] = v110;
    v111[4] = v103;
    v111[5] = v104;
    v111[6] = v105;
    v111[7] = v106;
    v111[0] = v99;
    v111[1] = v100;
    v111[2] = v101;
    v111[3] = v102;
    long long v94 = v107;
    long long v95 = v108;
    long long v96 = v109;
    long long v97 = v110;
    long long v90 = v103;
    long long v91 = v104;
    long long v92 = v105;
    long long v93 = v106;
    long long v86 = v99;
    long long v87 = v100;
    long long v88 = v101;
    long long v89 = v102;
    v98[0] = v36;
    v98[1] = &v86;
    sub_100135CCC((uint64_t)v111);
    v85[0] = v48;
    v85[1] = v45;
    uint64_t v83 = v78;
    uint64_t v84 = v46;
    uint64_t v49 = (uint64_t)v66;
    sub_1000A754C((uint64_t)v98, 2uLL, (uint64_t)v85);
    v112[8] = v94;
    v112[9] = v95;
    v112[10] = v96;
    v112[11] = v97;
    v112[4] = v90;
    v112[5] = v91;
    v112[6] = v92;
    v112[7] = v93;
    v112[0] = v86;
    v112[1] = v87;
    v112[2] = v88;
    v112[3] = v89;
    sub_100135C34((uint64_t)v112);
    uint64_t v50 = WitnessTable;
    WitnessTable(v36, v48);
    uint64_t v51 = v70;
    swift_getWitnessTable();
    uint64_t v52 = v76;
    swift_getWitnessTable();
    uint64_t v35 = v72;
    sub_1000A7454(v49, v51, v52);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v49, v52);
    long long v121 = v107;
    long long v122 = v108;
    long long v123 = v109;
    long long v124 = v110;
    long long v117 = v103;
    long long v118 = v104;
    long long v119 = v105;
    long long v120 = v106;
    long long v113 = v99;
    long long v114 = v100;
    long long v115 = v101;
    long long v116 = v102;
    sub_100135C34((uint64_t)&v113);
    v50(v47, v48);
  }
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v81 = v53;
  uint64_t v82 = v54;
  uint64_t v55 = v74;
  uint64_t v56 = swift_getWitnessTable();
  sub_1000A7320(v35, v55, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v35, v55);
}

uint64_t sub_100134084()
{
  if (*(void *)v0)
  {
    id v1 = *(id *)(*(void *)v0 + 112);
    char v2 = UIContentSizeCategory.isAccessibilityCategory.getter();

    return v2 & 1;
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100135E50((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100134120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v55 = a7;
  uint64_t v54 = a6;
  uint64_t v56 = a8;
  sub_1000094C4(&qword_100385178);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100385180);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  swift_getTupleTypeMetadata2();
  uint64_t v49 = type metadata accessor for TupleView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = type metadata accessor for VStack();
  uint64_t v52 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v38 - v13;
  uint64_t v51 = type metadata accessor for ModifiedContent();
  uint64_t v53 = *(void *)(v51 - 8);
  uint64_t v14 = __chkstk_darwin(v51);
  uint64_t v45 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v48 = (char *)&v38 - v16;
  sub_1000094C4(&qword_100385170);
  uint64_t v17 = a2;
  uint64_t v39 = a2;
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  uint64_t v42 = &protocol conformance descriptor for VStack<A>;
  char v44 = (uint64_t (*)(char *, uint64_t))swift_getWitnessTable();
  uint64_t v18 = type metadata accessor for ScrollView();
  uint64_t v57 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v40 = (char *)&v38 - v22;
  static Axis.Set.vertical.getter();
  uint64_t v65 = v17;
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v68 = a5;
  uint64_t v23 = v54;
  uint64_t v24 = v55;
  uint64_t v69 = v54;
  uint64_t v70 = v55;
  uint64_t v71 = a1;
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v41 = swift_getWitnessTable();
  sub_1000A7320(v21, v18, v41);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
  uint64_t v43 = v57 + 8;
  char v44 = v25;
  v25(v21, v18);
  uint64_t v58 = v39;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  uint64_t v64 = a1;
  static HorizontalAlignment.center.getter();
  uint64_t v26 = v46;
  VStack.init(alignment:spacing:content:)();
  static SafeAreaRegions.all.getter();
  static Edge.Set.all.getter();
  uint64_t v27 = v47;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v45;
  View.ignoresSafeArea(_:edges:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v26, v27);
  v75[2] = v28;
  v75[3] = &protocol witness table for _SafeAreaRegionsIgnoringLayout;
  uint64_t v30 = v51;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = v48;
  sub_1000A7320(v29, v30, v31);
  uint64_t v33 = v53;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v53 + 8);
  v34(v29, v30);
  uint64_t v35 = v40;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v21, v40, v18);
  v75[0] = v21;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v32, v30);
  v75[1] = v29;
  v74[0] = v18;
  v74[1] = v30;
  uint64_t v72 = v41;
  uint64_t v73 = v31;
  sub_1000A754C((uint64_t)v75, 2uLL, (uint64_t)v74);
  v34(v32, v30);
  uint64_t v36 = v44;
  v44(v35, v18);
  v34(v29, v30);
  return v36(v21, v18);
}

uint64_t sub_100134810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v22 = a5;
  uint64_t v25 = a8;
  sub_1000094C4(&qword_100385170);
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for VStack();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v22 - v17;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  uint64_t v31 = v24;
  uint64_t v32 = a1;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(v16, v12, WitnessTable);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  sub_1000A7320(v18, v12, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v12);
}

uint64_t sub_100134A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v72 = a5;
  uint64_t v6 = a4;
  uint64_t v66 = a4;
  uint64_t v70 = a3;
  uint64_t v69 = a6;
  uint64_t v61 = *(void *)(a3 - 8);
  uint64_t v9 = v61;
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v50 - v14;
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v17 = v62;
  uint64_t v18 = __chkstk_darwin(v13);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v73 = (char *)&v50 - v22;
  (*(void (**)(void))(v21 + 16))();
  uint64_t v71 = v20;
  uint64_t v63 = a2;
  sub_1000A7320(v20, a2, v6);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v67 = v17 + 8;
  uint64_t v68 = v23;
  uint64_t v24 = v23(v20, a2);
  uint64_t v25 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v26 = v12;
  uint64_t v60 = v12;
  v25(v24);
  uint64_t v27 = v15;
  uint64_t v28 = v70;
  sub_1000A7320(v26, v70, v72);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v64 = v9 + 8;
  uint64_t v65 = v29;
  v29(v26, v28);
  uint64_t v30 = static Color.clear.getter();
  long long v81 = *(_OWORD *)(a1 + 72);
  uint64_t v82 = *(void *)(a1 + 88);
  sub_100004010(&qword_100383D50);
  State.wrappedValue.getter();
  double v31 = v79;
  long long v81 = *(_OWORD *)(a1 + 72);
  uint64_t v82 = *(void *)(a1 + 88);
  State.wrappedValue.getter();
  double v32 = v79;
  uint64_t v33 = static Alignment.center.getter();
  sub_100165DE4(0.0, 1, 0.0, 1, INFINITY, 0, v31, 0, (uint64_t)&v81, 0.0, 1, v32, 0, v33, v34, v30);
  swift_release();
  long long v35 = v81;
  LOBYTE(v6) = v82;
  uint64_t v36 = v83;
  int v59 = v84;
  uint64_t v58 = v85;
  int v57 = v86;
  uint64_t v37 = v87;
  int v56 = v88;
  uint64_t v38 = v89;
  int v55 = v90;
  uint64_t v54 = v91;
  int v53 = v92;
  uint64_t v52 = v93;
  uint64_t v51 = v94;
  uint64_t v39 = v71;
  uint64_t v40 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v71, v73, v63);
  uint64_t v78 = v39;
  uint64_t v41 = v60;
  uint64_t v42 = v70;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v27, v70);
  long long v81 = v35;
  LOBYTE(v82) = v6;
  uint64_t v83 = v36;
  unsigned __int8 v84 = v59;
  uint64_t v85 = v58;
  unsigned __int8 v86 = v57;
  uint64_t v87 = v37;
  unsigned __int8 v88 = v56;
  uint64_t v89 = v38;
  unsigned __int8 v90 = v55;
  uint64_t v91 = v54;
  unsigned __int8 v92 = v53;
  uint64_t v93 = v52;
  uint64_t v94 = v51;
  uint64_t v43 = v41;
  double v79 = *(double *)&v41;
  uint64_t v80 = &v81;
  swift_retain();
  v77[0] = v40;
  v77[1] = v42;
  uint64_t v44 = v40;
  v77[2] = sub_100004010(&qword_100385170);
  uint64_t v74 = v66;
  uint64_t v75 = v72;
  unint64_t v76 = sub_1000AA51C();
  sub_1000A754C((uint64_t)&v78, 3uLL, (uint64_t)v77);
  swift_release();
  uint64_t v45 = v27;
  uint64_t v46 = v65;
  v65(v45, v42);
  uint64_t v47 = v40;
  uint64_t v48 = v68;
  v68(v73, v47);
  swift_release();
  v46(v43, v42);
  return v48(v71, v44);
}

uint64_t sub_100134FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v22 = a5;
  uint64_t v25 = a8;
  sub_1000094C4(&qword_100385178);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100385180);
  type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for ZStack();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v22 - v17;
  static Alignment.bottom.getter();
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  uint64_t v31 = v24;
  uint64_t v32 = a1;
  ZStack.init(alignment:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(v16, v12, WitnessTable);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  uint64_t v36 = 0;
  char v37 = 1;
  v38[0] = &v36;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  v38[1] = v16;
  v35[0] = &type metadata for Spacer;
  v35[1] = v12;
  uint64_t v33 = &protocol witness table for Spacer;
  uint64_t v34 = WitnessTable;
  sub_1000A754C((uint64_t)v38, 2uLL, (uint64_t)v35);
  v20(v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v12);
}

uint64_t sub_100135274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v53 = a3;
  uint64_t v54 = a5;
  uint64_t v65 = a8;
  uint64_t v51 = *(void *)(a4 - 8);
  uint64_t v52 = a2;
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v60 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int v57 = (char *)&v50 - v13;
  sub_1000094C4(&qword_100385180);
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v61 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v59 = (char *)&v50 - v15;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v64 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v58 = (char *)&v50 - v20;
  __chkstk_darwin(v19);
  uint64_t v63 = (char *)&v50 - v21;
  long long v72 = *(_OWORD *)(a1 + 72);
  uint64_t v73 = *(void *)(a1 + 88);
  long long v74 = *(_OWORD *)(a1 + 72);
  *(void *)&long long v75 = *(void *)(a1 + 88);
  sub_100004010(&qword_100383D50);
  State.wrappedValue.getter();
  double v22 = *((double *)v69 + 1);
  long long v74 = v72;
  *(void *)&long long v75 = v73;
  State.wrappedValue.getter();
  double v23 = *((double *)v69 + 1);
  uint64_t v24 = static Alignment.center.getter();
  double v26 = sub_100166B8C(0.0, 1, 0.0, 1, INFINITY, 0, v22, 0, (uint64_t)&v74, 0.0, 1.0, 0.0, 1, v23, 0, v24, v25, 6);
  (*(void (**)(double))(a1 + 48))(v26);
  static Edge.Set.bottom.getter();
  if (*(void *)a1)
  {
    uint64_t v27 = qword_10037DCE8;
    swift_retain();
    if (v27 != -1) {
      swift_once();
    }
    swift_release();
    uint64_t v28 = v57;
    uint64_t v29 = v56;
    View.padding(_:_:)();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, a4);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v53;
    *(void *)(v30 + 16) = v52;
    *(void *)(v30 + 24) = v31;
    uint64_t v32 = v54;
    *(void *)(v30 + 32) = a4;
    *(void *)(v30 + 40) = v32;
    *(void *)(v30 + 48) = v55;
    *(void *)(v30 + 56) = v29;
    long long v33 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v30 + 192) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v30 + 208) = v33;
    *(_OWORD *)(v30 + 224) = *(_OWORD *)(a1 + 160);
    *(void *)(v30 + 240) = *(void *)(a1 + 176);
    long long v34 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v30 + 128) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v30 + 144) = v34;
    long long v35 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v30 + 160) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v30 + 176) = v35;
    long long v36 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v30 + 64) = *(_OWORD *)a1;
    *(_OWORD *)(v30 + 80) = v36;
    long long v37 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v30 + 96) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v30 + 112) = v37;
    sub_100009254(a1);
    type metadata accessor for CGSize(0);
    v71[6] = v29;
    v71[7] = &protocol witness table for _PaddingLayout;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_100135E50(&qword_100380C98, type metadata accessor for CGSize);
    uint64_t v39 = v59;
    View.onGeometryChange<A>(of:do:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v12);
    uint64_t v40 = sub_100009B18(&qword_100385198, &qword_100385180);
    v71[4] = WitnessTable;
    v71[5] = v40;
    uint64_t v41 = swift_getWitnessTable();
    uint64_t v42 = v58;
    View.accessibilitySortPriority(_:)();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v14);
    uint64_t v43 = sub_100135E50(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    v71[2] = v41;
    v71[3] = v43;
    uint64_t v44 = swift_getWitnessTable();
    uint64_t v45 = v63;
    sub_1000A7320(v42, v16, v44);
    uint64_t v46 = v62;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v62 + 8);
    v47(v42, v16);
    v69[6] = v80;
    v69[7] = v81;
    uint64_t v70 = v82;
    v69[2] = v76;
    v69[3] = v77;
    v69[4] = v78;
    v69[5] = v79;
    v69[0] = v74;
    v69[1] = v75;
    v71[0] = v69;
    uint64_t v48 = v64;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v64, v45, v16);
    v71[1] = v48;
    v68[0] = sub_100004010(&qword_100385178);
    v68[1] = v16;
    unint64_t v66 = sub_1000AA41C();
    uint64_t v67 = v44;
    sub_1000A754C((uint64_t)v71, 2uLL, (uint64_t)v68);
    v47(v45, v16);
    return ((uint64_t (*)(char *, uint64_t))v47)(v48, v16);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100135E50((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001359E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B80);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    *(void *)&long long v13 = v3;
    *((void *)&v13 + 1) = v4;
    type metadata accessor for CGSize(0);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)&long long v13 = sub_1001B3178(v9, v10, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Floating panel size changed: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  long long v13 = *(_OWORD *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 88);
  v12[0] = v3;
  v12[1] = v4;
  sub_100004010(&qword_100383D50);
  return State.wrappedValue.setter();
}

uint64_t sub_100135BB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001330CC(a1, a2);
}

uint64_t sub_100135C1C()
{
  return sub_100135EB0((uint64_t (*)(void, void, void, void, void, void, void))sub_100133668);
}

uint64_t sub_100135C34(uint64_t a1)
{
  return a1;
}

uint64_t sub_100135CCC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100135D64()
{
  return sub_100135EB0((uint64_t (*)(void, void, void, void, void, void, void))sub_100134120);
}

uint64_t sub_100135D7C()
{
  return sub_100135EB0((uint64_t (*)(void, void, void, void, void, void, void))sub_100134810);
}

uint64_t sub_100135D94()
{
  return sub_100135EB0((uint64_t (*)(void, void, void, void, void, void, void))sub_100134FA8);
}

uint64_t sub_100135DAC()
{
  return sub_100135EB0((uint64_t (*)(void, void, void, void, void, void, void))sub_100135274);
}

uint64_t sub_100135DC4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 248, 7);
}

uint64_t sub_100135E3C(uint64_t *a1)
{
  return sub_1001359E8(a1, v1 + 64);
}

uint64_t sub_100135E50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100135E98()
{
  return sub_100135EB0((uint64_t (*)(void, void, void, void, void, void, void))sub_100134A2C);
}

uint64_t sub_100135EB0(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_100135ECC()
{
  return swift_getWitnessTable();
}

uint64_t Angle.debugDescription.getter()
{
  v0._uint64_t countAndFlagsBits = 0x203A6765643CLL;
  v0._object = (void *)0xE600000000000000;
  String.append(_:)(v0);
  Double.write<A>(to:)();
  v1._uint64_t countAndFlagsBits = 62;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return 0;
}

uint64_t sub_1001362C0()
{
  v0._uint64_t countAndFlagsBits = 0x203A6765643CLL;
  v0._object = (void *)0xE600000000000000;
  String.append(_:)(v0);
  Double.write<A>(to:)();
  v1._uint64_t countAndFlagsBits = 62;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return 0;
}

uint64_t destroy for BuiltInSelectRoadsidePhoneNumberContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for BuiltInSelectRoadsidePhoneNumberContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BuiltInSelectRoadsidePhoneNumberContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[9];
  a1[8] = a2[8];
  a1[9] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BuiltInSelectRoadsidePhoneNumberContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltInSelectRoadsidePhoneNumberContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInSelectRoadsidePhoneNumberContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInSelectRoadsidePhoneNumberContentView()
{
  return &type metadata for BuiltInSelectRoadsidePhoneNumberContentView;
}

uint64_t sub_100136650()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013666C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_100388698);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v38 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    swift_retain();
    uint64_t v11 = sub_10007400C();
    swift_release();
    uint64_t v41 = a2;
    if (v11)
    {
      uint64_t v12 = (void *)v11;
    }
    else
    {
      if (*(void *)(v10 + 160)) {
        uint64_t v12 = *(void **)(v10 + 160);
      }
      else {
        uint64_t v12 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();
    }
    uint64_t v43 = v12;
    swift_getKeyPath();
    long long v13 = (_OWORD *)swift_allocObject();
    long long v14 = *(_OWORD *)(a1 + 48);
    v13[3] = *(_OWORD *)(a1 + 32);
    v13[4] = v14;
    v13[5] = *(_OWORD *)(a1 + 64);
    long long v15 = *(_OWORD *)(a1 + 16);
    v13[1] = *(_OWORD *)a1;
    v13[2] = v15;
    sub_100136E78(a1);
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100380040);
    sub_100009B18(&qword_100381CF8, &qword_100380040);
    sub_100093164();
    ForEach<>.init(_:id:content:)();
    if (v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    else
    {
      id v19 = [self mainBundle];
      v44._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
      v44._object = (void *)0x80000001002CF530;
      v20._object = (void *)0x80000001002CF510;
      v21.value._object = (void *)0x80000001002C7760;
      v20._uint64_t countAndFlagsBits = 0xD000000000000012;
      v21.value._uint64_t countAndFlagsBits = 0xD000000000000012;
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v44);

      type metadata accessor for OptionPresentation();
      uint64_t v16 = (Swift::String *)swift_allocObject();
      v16[1] = v23;
      v16[3]._uint64_t countAndFlagsBits = 0;
      v16[3]._object = 0;
      v16[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
      v16[2]._uint64_t countAndFlagsBits = 0;
      v16[2]._object = 0;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v24 = *(_OWORD *)(a1 + 48);
      v18[3] = *(_OWORD *)(a1 + 32);
      v18[4] = v24;
      v18[5] = *(_OWORD *)(a1 + 64);
      long long v25 = *(_OWORD *)(a1 + 16);
      v18[1] = *(_OWORD *)a1;
      v18[2] = v25;
      sub_100136E78(a1);
      type metadata accessor for UIMetrics();
      sub_100136E18((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v26 = EnvironmentObject.init()();
      uint64_t v39 = v27;
      uint64_t v40 = v26;
      uint64_t v17 = sub_100136F50;
    }
    uint64_t v28 = v5;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v30 = v42;
    uint64_t v31 = v4;
    v29(v8, v42, v4);
    uint64_t v32 = v41;
    v29(v41, v8, v31);
    long long v33 = (uint64_t *)&v32[*(int *)(sub_100004010(&qword_1003886A0) + 48)];
    uint64_t v35 = v39;
    uint64_t v34 = v40;
    *long long v33 = v40;
    v33[1] = v35;
    v33[2] = (uint64_t)v16;
    v33[3] = 0;
    v33[4] = 0;
    v33[5] = (uint64_t)v17;
    v33[6] = (uint64_t)v18;
    sub_100136F58(v34, v35, (uint64_t)v16);
    long long v36 = *(void (**)(char *, uint64_t))(v28 + 8);
    v36(v30, v31);
    sub_100136FA4(v34, v35, (uint64_t)v16);
    return ((uint64_t (*)(char *, uint64_t))v36)(v8, v31);
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_100136E18(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100136B18@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  type metadata accessor for OptionPresentation();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = v5;
  v7[6] = 0;
  v7[7] = 0;
  swift_bridgeObjectRetain();
  v7[8] = static Color.clear.getter();
  v7[4] = 0;
  v7[5] = 0;
  uint64_t v8 = swift_allocObject();
  long long v9 = a2[3];
  *(_OWORD *)(v8 + 48) = a2[2];
  *(_OWORD *)(v8 + 64) = v9;
  *(_OWORD *)(v8 + 80) = a2[4];
  long long v10 = a2[1];
  *(_OWORD *)(v8 + 16) = *a2;
  *(_OWORD *)(v8 + 32) = v10;
  *(void *)(v8 + 96) = v6;
  *(void *)(v8 + 104) = v5;
  swift_bridgeObjectRetain();
  sub_100136E78((uint64_t)a2);
  type metadata accessor for UIMetrics();
  sub_100136E18((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  *a3 = result;
  a3[1] = v12;
  a3[3] = 0;
  a3[4] = 0;
  a3[2] = (uint64_t)v7;
  a3[5] = (uint64_t)sub_10013705C;
  a3[6] = v8;
  return result;
}

uint64_t sub_100136C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 56);
  v7[3] = &type metadata for String;
  v7[0] = a2;
  v7[1] = a3;
  swift_bridgeObjectRetain();
  sub_1000CF5E8(v4, (uint64_t)v7);
  uint64_t v5 = sub_100059550((uint64_t)v7);
  return (*(uint64_t (**)(uint64_t))(a1 + 64))(v5);
}

uint64_t sub_100136C8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  memset(v5, 0, sizeof(v5));
  sub_1000CF5E8(v2, (uint64_t)v5);
  uint64_t v3 = sub_100059550((uint64_t)v5);
  return (*(uint64_t (**)(uint64_t))(a1 + 64))(v3);
}

uint64_t sub_100136CDC@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[3];
  long long v16 = v1[2];
  long long v17 = v3;
  long long v18 = v1[4];
  long long v4 = v1[1];
  v15[0] = *v1;
  v15[1] = v4;
  if ((void)v16)
  {
    uint64_t v5 = *(void *)(v16 + 72);
    uint64_t v6 = *(void *)(v16 + 80);
    sub_100008F88((void *)(v16 + 48), v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v12, v5, v6);
    uint64_t v7 = v13;
    uint64_t v8 = v14;
    sub_100008F88(v12, v13);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 232))(v7, v8);
    *(void *)a1 = static HorizontalAlignment.center.getter();
    *(double *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = 0;
    uint64_t v10 = sub_100004010(&qword_100388690);
    sub_10013666C((uint64_t)v15, (char *)(a1 + *(int *)(v10 + 44)));
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v12);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100136E18((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100136E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100136E70@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100136B18(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_100136E78(uint64_t a1)
{
  return a1;
}

uint64_t sub_100136EF0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100136F50()
{
  return sub_100136C8C(v0 + 16);
}

uint64_t sub_100136F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100136FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100136FF4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10013705C()
{
  return sub_100136C20(v0 + 16, *(void *)(v0 + 96), *(void *)(v0 + 104));
}

uint64_t sub_100137068()
{
  return sub_100009B18(&qword_1003886A8, &qword_1003886B0);
}

ValueMetadata *type metadata accessor for CurrentStateView()
{
  return &type metadata for CurrentStateView;
}

uint64_t sub_1001370B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001370D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = type metadata accessor for StackNavigationViewStyle();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  long long v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_1003886B8);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_1003886C0);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v1 + 32);
  if (v11)
  {
    uint64_t v13 = v11[9];
    uint64_t v12 = v11[10];
    sub_100008F88(v11 + 6, v13);
    uint64_t v14 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 32))(v36, v13, v12);
    v24[1] = v24;
    __chkstk_darwin(v14);
    v24[-2] = v36;
    v24[-1] = v1;
    sub_100004010(&qword_1003886C8);
    uint64_t v15 = sub_1000094C4(&qword_1003886D0);
    uint64_t v16 = sub_1000094C4(&qword_1003851F8);
    uint64_t v17 = sub_1000094C4(&qword_1003886D8);
    uint64_t v18 = sub_100009B18(&qword_1003886E0, &qword_1003886D8);
    uint64_t v32 = v17;
    uint64_t v33 = v18;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v20 = sub_100009B18(&qword_100385210, &qword_1003851F8);
    uint64_t v32 = v15;
    uint64_t v33 = v16;
    uint64_t v34 = OpaqueTypeConformance2;
    uint64_t v35 = v20;
    swift_getOpaqueTypeConformance2();
    NavigationView.init(content:)();
    StackNavigationViewStyle.init()();
    sub_100009B18(&qword_1003886E8, &qword_1003886B8);
    sub_100138748(&qword_100385220, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
    uint64_t v21 = v28;
    uint64_t v22 = v30;
    View.navigationViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v31, v10, v26);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v36);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100138748((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100137544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v20[0] = a2;
  v20[1] = a3;
  uint64_t v4 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_1003886D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000090FC(a1, (uint64_t)&v21);
  uint64_t v12 = swift_allocObject();
  sub_100009164(&v21, v12 + 16);
  sub_1000090FC(a1, (uint64_t)v32);
  uint64_t v13 = swift_allocObject();
  sub_100009164(v32, v13 + 16);
  type metadata accessor for UIMetrics();
  sub_100138748((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v14 = EnvironmentObject.init()();
  uint64_t v16 = v15;
  type metadata accessor for CGSize(0);
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  State.init(wrappedValue:)();
  *(void *)&long long v21 = v14;
  *((void *)&v21 + 1) = v16;
  uint64_t v22 = sub_100138728;
  uint64_t v23 = v12;
  long long v24 = sub_100138730;
  uint64_t v25 = v13;
  long long v26 = v30;
  uint64_t v27 = v31;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v4);
  uint64_t v17 = sub_100004010(&qword_1003886D8);
  uint64_t v18 = sub_100009B18(&qword_1003886E0, &qword_1003886D8);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v20[4] = v20[0];
  sub_100004010(&qword_1003851F8);
  *(void *)&long long v21 = v17;
  *((void *)&v21 + 1) = v18;
  swift_getOpaqueTypeConformance2();
  sub_100009B18(&qword_100385210, &qword_1003851F8);
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

__n128 sub_100137918@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.center.getter();
  sub_100137AF0((uint64_t)v18);
  *(_OWORD *)&v19[183] = v18[11];
  *(_OWORD *)&v19[199] = v18[12];
  *(_OWORD *)&v19[215] = v18[13];
  *(_OWORD *)&v19[231] = v18[14];
  *(_OWORD *)&v19[119] = v18[7];
  *(_OWORD *)&v19[135] = v18[8];
  *(_OWORD *)&v19[151] = v18[9];
  *(_OWORD *)&v19[167] = v18[10];
  *(_OWORD *)&v19[55] = v18[3];
  *(_OWORD *)&v19[71] = v18[4];
  *(_OWORD *)&v19[87] = v18[5];
  *(_OWORD *)&v19[103] = v18[6];
  *(_OWORD *)&v19[7] = v18[0];
  *(_OWORD *)&v19[23] = v18[1];
  char v20 = 0;
  *(_OWORD *)&v19[39] = v18[2];
  uint64_t v5 = (__n128 **)sub_100008F88(a1, a1[3]);
  __n128 v17 = (*v5)[3];
  unint64_t v6 = (*v5)[4].n128_u64[0];
  unint64_t v7 = (*v5)[4].n128_u64[1];
  char v8 = static Edge.Set.all.getter();
  long long v9 = *(_OWORD *)&v19[208];
  *(_OWORD *)(a2 + 209) = *(_OWORD *)&v19[192];
  *(_OWORD *)(a2 + 225) = v9;
  *(_OWORD *)(a2 + 241) = *(_OWORD *)&v19[224];
  long long v10 = *(_OWORD *)&v19[144];
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v19[128];
  *(_OWORD *)(a2 + 161) = v10;
  long long v11 = *(_OWORD *)&v19[176];
  *(_OWORD *)(a2 + 177) = *(_OWORD *)&v19[160];
  *(_OWORD *)(a2 + 193) = v11;
  long long v12 = *(_OWORD *)&v19[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v19[64];
  *(_OWORD *)(a2 + 97) = v12;
  long long v13 = *(_OWORD *)&v19[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v19[96];
  *(_OWORD *)(a2 + 129) = v13;
  long long v14 = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 33) = v14;
  long long v15 = *(_OWORD *)&v19[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v19[32];
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 256) = *(void *)&v19[239];
  *(_OWORD *)(a2 + 65) = v15;
  *(unsigned char *)(a2 + 264) = v8;
  __n128 result = v17;
  *(__n128 *)(a2 + 272) = v17;
  *(void *)(a2 + 288) = v6;
  *(void *)(a2 + 296) = v7;
  *(unsigned char *)(a2 + 304) = 0;
  return result;
}

uint64_t sub_100137AF0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ConnectionClosedModel(0);
  sub_100138748(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  uint64_t v42 = EnvironmentObject.init()();
  uint64_t v43 = v2;
  type metadata accessor for ConnectivityModel();
  sub_100138748(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t v40 = EnvironmentObject.init()();
  uint64_t v41 = v3;
  type metadata accessor for GuidanceModel(0);
  sub_100138748(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  uint64_t v39 = EnvironmentObject.init()();
  uint64_t v5 = v4;
  type metadata accessor for OrientationModel();
  sub_100138748(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  uint64_t v37 = EnvironmentObject.init()();
  uint64_t v38 = v6;
  type metadata accessor for StewieModel();
  sub_100138748(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v35 = EnvironmentObject.init()();
  uint64_t v36 = v7;
  type metadata accessor for UIMetrics();
  sub_100138748((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v8 = EnvironmentObject.init()();
  uint64_t v34 = v9;
  uint64_t v32 = EnvironmentObject.init()();
  uint64_t v33 = v10;
  uint64_t v30 = EnvironmentObject.init()();
  uint64_t v31 = v11;
  type metadata accessor for GuidanceMessagesModel();
  sub_100138748(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  uint64_t v12 = EnvironmentObject.init()();
  uint64_t v28 = v13;
  uint64_t v29 = v12;
  uint64_t v14 = EnvironmentObject.init()();
  uint64_t v26 = v15;
  uint64_t v27 = v14;
  type metadata accessor for ConnectionModel(0);
  sub_100138748(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
  uint64_t v16 = EnvironmentObject.init()();
  uint64_t v24 = v17;
  uint64_t v25 = v16;
  uint64_t v18 = EnvironmentObject.init()();
  uint64_t v20 = v19;
  uint64_t v21 = EnvironmentObject.init()();
  *(void *)a1 = v42;
  *(void *)(a1 + 8) = v43;
  *(void *)(a1 + 16) = v40;
  *(void *)(a1 + 24) = v41;
  *(void *)(a1 + 32) = v39;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v37;
  *(void *)(a1 + 56) = v38;
  *(void *)(a1 + 64) = v35;
  *(void *)(a1 + 72) = v36;
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v34;
  *(unsigned char *)(a1 + 96) = 1;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = v32;
  *(void *)(a1 + 120) = v33;
  *(void *)(a1 + 128) = v30;
  *(void *)(a1 + 136) = v31;
  *(void *)(a1 + 144) = 32;
  *(void *)(a1 + 152) = 0xE100000000000000;
  *(void *)(a1 + 160) = v29;
  *(void *)(a1 + 168) = v28;
  *(void *)(a1 + 176) = v27;
  *(void *)(a1 + 184) = v26;
  *(void *)(a1 + 192) = v25;
  *(void *)(a1 + 200) = v24;
  *(void *)(a1 + 208) = v18;
  *(void *)(a1 + 216) = v20;
  *(void *)(a1 + 224) = v21;
  *(void *)(a1 + 232) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

__n128 sub_100137ED0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = static HorizontalAlignment.center.getter();
  type metadata accessor for AppEvents();
  sub_100138748((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v4 = EnvironmentObject.init()();
  uint64_t v6 = v5;
  type metadata accessor for RoadsideAssistanceModel();
  sub_100138748(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  uint64_t v7 = EnvironmentObject.init()();
  uint64_t v9 = v8;
  type metadata accessor for StewieModel();
  sub_100138748(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v10 = EnvironmentObject.init()();
  uint64_t v12 = v11;
  char v13 = static Edge.Set.top.getter();
  uint64_t v14 = (__n128 **)sub_100008F88(a1, a1[3]);
  __n128 v19 = (*v14)[3];
  unint64_t v16 = (*v14)[4].n128_u64[0];
  unint64_t v15 = (*v14)[4].n128_u64[1];
  char v17 = static Edge.Set.all.getter();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 72) = v13;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(unsigned char *)(a2 + 112) = 1;
  *(unsigned char *)(a2 + 120) = v17;
  __n128 result = v19;
  *(__n128 *)(a2 + 128) = v19;
  *(void *)(a2 + 144) = v16;
  *(void *)(a2 + 152) = v15;
  *(unsigned char *)(a2 + 160) = 0;
  return result;
}

uint64_t sub_10013808C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v3 = sub_100004010(&qword_100385228);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100385230);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100004010(&qword_1003818D8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter();
  v17[4] = a1;
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  sub_1000ACC84();
  ToolbarItem<>.init(placement:content:)();
  unint64_t v15 = &v5[*(int *)(v3 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v5, v14, v11);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100138368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    type metadata accessor for UIMetrics();
    uint64_t v22 = (unint64_t *)&qword_10037EFF0;
    uint64_t v23 = type metadata accessor for UIMetrics;
LABEL_9:
    sub_100138748(v22, (void (*)(uint64_t))v23);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  sub_1000090FC(v4 + 48, (uint64_t)v24);
  uint64_t v5 = v25;
  uint64_t v6 = v26;
  sub_100008F88(v24, v25);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    type metadata accessor for StewieModel();
    uint64_t v22 = &qword_100380DA0;
    uint64_t v23 = type metadata accessor for StewieModel;
    goto LABEL_9;
  }
  if (*(void *)(v7 + 64))
  {
    uint64_t v8 = *(void *)(v7 + 88);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 152))(v8, v5, v6);
  swift_bridgeObjectRelease();
  sub_100033310();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v24);
  static Font.headline.getter();
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  sub_100033364(v9, v11, v13);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v16;
  *(unsigned char *)(a2 + 16) = v18 & 1;
  *(void *)(a2 + 24) = v20;
  return result;
}

uint64_t sub_100138548@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_100138748((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  type metadata accessor for StewieModel();
  sub_100138748(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v5 = EnvironmentObject.init()();
  uint64_t v7 = v6;
  type metadata accessor for UIMetrics();
  sub_100138748((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v8 = EnvironmentObject.init()();
  uint64_t v10 = v9;
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  return result;
}

uint64_t sub_1001386AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001370D0(a1);
}

uint64_t sub_1001386E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100137544(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1001386F0()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

double sub_100138728@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100137918((void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

double sub_100138730@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100137ED0((void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_100138738@<X0>(uint64_t a1@<X8>)
{
  return sub_10013808C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100138740@<X0>(uint64_t a1@<X8>)
{
  return sub_100138368(*(void *)(v1 + 16), a1);
}

uint64_t sub_100138748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100138790()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for FullScreenGuidanceTransmissionProgressView()
{
  return &type metadata for FullScreenGuidanceTransmissionProgressView;
}

uint64_t sub_100138874()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100138890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v47 = a1;
  uint64_t v3 = sub_100004010(&qword_1003886F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_1003886F8);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  __chkstk_darwin(v6);
  uint64_t v44 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TransmissionProgress(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v43 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004010(&qword_100388700);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = (void *)v1[4];
  if (v17)
  {
    uint64_t v18 = (uint64_t)(v17 + 6);
    uint64_t v19 = v17[9];
    uint64_t v20 = v17[10];
    sub_100008F88(v17 + 6, v19);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 32))(v51, v19, v20);
    if (*v1)
    {
      swift_retain();
      sub_10020CBFC((uint64_t)v10);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_10000950C((uint64_t)v10, &qword_10037F158);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v16, 1, 1, v46);
LABEL_7:
        sub_10000D544((uint64_t)v16, v47, &qword_100388700);
        return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v51);
      }
      uint64_t v21 = v43;
      sub_10000CF90((uint64_t)v10, v43);
      sub_1000090FC(v18, (uint64_t)v48);
      uint64_t v22 = v49;
      uint64_t v23 = v50;
      sub_100008F88(v48, v49);
      uint64_t v24 = v1[2];
      if (v24)
      {
        uint64_t v25 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 112))(v21, *(unsigned __int8 *)(*(void *)(v24 + 48) + 120), v22, v23);
        uint64_t v27 = v26;
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v48);
        *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
        *((void *)v5 + 1) = 0;
        v5[16] = 0;
        uint64_t v28 = sub_100004010(&qword_100388708);
        sub_100138D94(v2, v21, v51, v25, v27, (uint64_t)&v5[*(int *)(v28 + 44)]);
        swift_bridgeObjectRelease();
        LOBYTE(v25) = static Edge.Set.top.getter();
        sub_100008F88(v51, v51[3]);
        EdgeInsets.init(_all:)();
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        uint64_t v34 = v33;
        uint64_t v36 = v35;
        uint64_t v37 = v44;
        sub_10000D2A0((uint64_t)v5, v44, &qword_1003886F0);
        uint64_t v38 = v46;
        uint64_t v39 = v37 + *(int *)(v46 + 36);
        *(unsigned char *)uint64_t v39 = v25;
        *(void *)(v39 + 8) = v30;
        *(void *)(v39 + 16) = v32;
        *(void *)(v39 + 24) = v34;
        *(void *)(v39 + 32) = v36;
        *(unsigned char *)(v39 + 40) = 0;
        sub_10000950C((uint64_t)v5, &qword_1003886F0);
        sub_10000D544(v37, (uint64_t)v16, &qword_1003886F8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v16, 0, 1, v38);
        sub_10013A26C(v21);
        goto LABEL_7;
      }
      type metadata accessor for ConnectivityModel();
      uint64_t v41 = &qword_10037F0F0;
      uint64_t v42 = (void (*)(uint64_t))type metadata accessor for ConnectivityModel;
    }
    else
    {
      type metadata accessor for ConnectionModel(0);
      uint64_t v41 = &qword_10037F100;
      uint64_t v42 = (void (*)(uint64_t))type metadata accessor for ConnectionModel;
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    uint64_t v41 = (unint64_t *)&qword_10037EFF0;
    uint64_t v42 = (void (*)(uint64_t))type metadata accessor for UIMetrics;
  }
  sub_10013A218(v41, v42);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100138D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v178 = a4;
  uint64_t v179 = a5;
  uint64_t v165 = a2;
  uint64_t v177 = sub_100004010(&qword_100388710);
  __chkstk_darwin(v177);
  uint64_t v171 = (uint64_t)&v161 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_10037F118);
  uint64_t v166 = *(void *)(v10 - 8);
  uint64_t v167 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_100388718);
  uint64_t v169 = *(void *)(v13 - 8);
  *(void *)&long long v170 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004010(&qword_100388720);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100004010(&qword_100388728);
  uint64_t v19 = __chkstk_darwin(v168);
  uint64_t v172 = (uint64_t)&v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v173 = (uint64_t)&v161 - v21;
  uint64_t v181 = sub_100004010(&qword_100388730);
  __chkstk_darwin(v181);
  uint64_t v23 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_100004010(&qword_100388738);
  __chkstk_darwin(v174);
  uint64_t v175 = (uint64_t)&v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_100004010(&qword_100388740);
  __chkstk_darwin(v182);
  UIContentSizeCategory v176 = (UIContentSizeCategory)((char *)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = type metadata accessor for Font.Leading();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIContentSizeCategory v180 = (UIContentSizeCategory)a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
    type metadata accessor for ConnectivityModel();
    v159 = &qword_10037F0F0;
    v160 = type metadata accessor for ConnectivityModel;
LABEL_32:
    sub_10013A218(v159, (void (*)(uint64_t))v160);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  int v32 = 1 << *(unsigned char *)(*(void *)(v31 + 48) + 120);
  v183 = v23;
  uint64_t v184 = a6;
  if ((v32 & 0x1D8) != 0)
  {
    *(void *)v188 = v178;
    *(void *)&v188[8] = v179;
    uint64_t v33 = v28;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v34 = Text.init<A>(_:)();
    uint64_t v36 = v35;
    char v38 = v37 & 1;
    static Font.body.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v30, enum case for Font.Leading.tight(_:), v33);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v33);
    uint64_t v39 = Text.font(_:)();
    uint64_t v41 = v40;
    char v43 = v42;
    swift_release();
    sub_100033364(v34, v36, v38);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v44 = Text.foregroundColor(_:)();
    uint64_t v178 = v45;
    uint64_t v179 = v46;
    LODWORD(v173) = v47;
    swift_release();
    sub_100033364(v39, v41, v43 & 1);
    swift_bridgeObjectRelease();
    uint64_t v48 = (id *)v180[4];
    if (v48)
    {
      id v49 = v48[14];
      char v50 = static UIContentSizeCategory.>= infix(_:_:)();

      uint64_t v171 = (v50 & 1) == 0;
      uint64_t KeyPath = swift_getKeyPath();
      id v52 = v48[14];
      char v53 = static UIContentSizeCategory.>= infix(_:_:)();

      LODWORD(v170) = (v53 & 1) == 0;
      uint64_t v54 = swift_getKeyPath();
      id v55 = v48[14];
      static Alignment.center.getter();
      char v56 = static UIContentSizeCategory.>= infix(_:_:)();
      UIContentSizeCategory v180 = UIContentSizeCategoryAccessibilityExtraLarge;
      uint64_t v172 = v54;
      if (v56 & 1) != 0 && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)()))
      {
        char v57 = v50;
        uint64_t v58 = KeyPath;
        static Alignment.leading.getter();
      }
      else
      {
        char v57 = v50;
        uint64_t v58 = KeyPath;
      }

      v186[0] = v44;
      uint64_t v102 = v178;
      v186[1] = v178;
      char v103 = v173 & 1;
      LOBYTE(v186[2]) = v173 & 1;
      v186[3] = v179;
      v186[4] = v58;
      v186[5] = v171;
      LOBYTE(v186[6]) = v57 & 1;
      v186[7] = v172;
      LOBYTE(v186[8]) = v170;
      sub_100167130(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v187, 0.0, 1, 0.0, 1);
      sub_100033364(v44, v102, v103);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      id v104 = v48[14];
      char v105 = static UIContentSizeCategory.>= infix(_:_:)();

      if (v105) {
        double v106 = 1.0;
      }
      else {
        double v106 = 0.5;
      }
      uint64_t v107 = swift_getKeyPath();
      *(_OWORD *)&v188[128] = *(_OWORD *)&v187[128];
      *(_OWORD *)&v188[144] = *(_OWORD *)&v187[144];
      *(_OWORD *)&v188[160] = *(_OWORD *)&v187[160];
      *(_OWORD *)&v188[64] = *(_OWORD *)&v187[64];
      *(_OWORD *)&v188[80] = *(_OWORD *)&v187[80];
      *(_OWORD *)&v188[96] = *(_OWORD *)&v187[96];
      *(_OWORD *)&v188[112] = *(_OWORD *)&v187[112];
      *(_OWORD *)v188 = *(_OWORD *)v187;
      *(_OWORD *)&v188[16] = *(_OWORD *)&v187[16];
      *(_OWORD *)&v188[32] = *(_OWORD *)&v187[32];
      *(_OWORD *)&v188[48] = *(_OWORD *)&v187[48];
      *(void *)&v188[176] = *(void *)&v187[176];
      *(void *)&v188[184] = v107;
      *(double *)&v188[192] = v106;
      long long v108 = *(_OWORD *)&v187[112];
      uint64_t v109 = v175;
      *(_OWORD *)(v175 + 96) = *(_OWORD *)&v187[96];
      *(_OWORD *)(v109 + 112) = v108;
      long long v110 = *(_OWORD *)&v188[144];
      *(_OWORD *)(v109 + 128) = *(_OWORD *)&v188[128];
      *(_OWORD *)(v109 + 144) = v110;
      long long v111 = *(_OWORD *)&v188[48];
      *(_OWORD *)(v109 + 32) = *(_OWORD *)&v188[32];
      *(_OWORD *)(v109 + 48) = v111;
      long long v112 = *(_OWORD *)&v188[80];
      *(_OWORD *)(v109 + 64) = *(_OWORD *)&v188[64];
      *(_OWORD *)(v109 + 80) = v112;
      long long v113 = *(_OWORD *)&v188[16];
      *(_OWORD *)uint64_t v109 = *(_OWORD *)v188;
      *(_OWORD *)(v109 + 16) = v113;
      long long v114 = *(_OWORD *)&v188[176];
      *(_OWORD *)(v109 + 160) = *(_OWORD *)&v188[160];
      *(_OWORD *)(v109 + 176) = v114;
      *(void *)(v109 + 192) = *(void *)&v188[192];
      swift_storeEnumTagMultiPayload();
      sub_10013A8A4((uint64_t)v188);
      sub_100004010(&qword_100388760);
      sub_100009B18(&qword_100388768, &qword_100388710);
      sub_10013A5A8();
      uint64_t v115 = (uint64_t)v176;
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0(v115, (uint64_t)v183, &qword_100388740);
      swift_storeEnumTagMultiPayload();
      sub_10013A804();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v115, &qword_100388740);
      return sub_10013A914((uint64_t)v188);
    }
    goto LABEL_31;
  }
  if ((v32 & 0x203) == 0)
  {
    *(void *)v188 = v178;
    *(void *)&v188[8] = v179;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v116 = Text.init<A>(_:)();
    uint64_t v118 = v117;
    char v120 = v119 & 1;
    uint64_t v122 = a3[3];
    uint64_t v121 = a3[4];
    sub_100008F88(a3, v122);
    (*(void (**)(uint64_t))(*(void *)(v121 + 8) + 32))(v122);
    uint64_t v177 = Text.font(_:)();
    uint64_t v178 = v123;
    uint64_t v125 = v124;
    char v127 = v126;
    swift_release();
    sub_100033364(v116, v118, v120);
    swift_bridgeObjectRelease();
    NSString v128 = v180[4];
    if (v128)
    {
      uint64_t v129 = *((void *)v128 + 9);
      uint64_t v130 = *((void *)v128 + 10);
      sub_100008F88((void *)v128 + 6, v129);
      long long v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 96);
      uint64_t v132 = swift_retain();
      v131(v132, v129, v130);
      swift_release();
      uint64_t v133 = v177;
      uint64_t v134 = Text.foregroundColor(_:)();
      uint64_t v136 = v135;
      LODWORD(v180) = v137;
      uint64_t v179 = v138;
      sub_100033364(v133, v125, v127 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      id v139 = *((id *)v128 + 14);
      int v140 = static UIContentSizeCategory.>= infix(_:_:)();

      LODWORD(v178) = v140;
      BOOL v141 = (v140 & 1) == 0;
      uint64_t v142 = swift_getKeyPath();
      id v143 = *((id *)v128 + 14);
      LOBYTE(v140) = static UIContentSizeCategory.>= infix(_:_:)();

      LODWORD(v175) = (v140 & 1) == 0;
      uint64_t v177 = swift_getKeyPath();
      id v144 = *((id *)v128 + 14);
      static Alignment.center.getter();
      char v145 = static UIContentSizeCategory.>= infix(_:_:)();
      UIContentSizeCategory v176 = UIContentSizeCategoryAccessibilityExtraLarge;
      if (v145 & 1) != 0 && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)()))
      {
        uint64_t v146 = v142;
        static Alignment.leading.getter();
      }
      else
      {
        uint64_t v146 = v142;
      }

      *(void *)v187 = v134;
      *(void *)&v187[8] = v136;
      char v147 = v180 & 1;
      v187[16] = v180 & 1;
      *(void *)&v187[24] = v179;
      *(void *)&v187[32] = v146;
      *(void *)&v187[40] = v141;
      v187[48] = v178 & 1;
      *(void *)&v187[56] = v177;
      v187[64] = v175;
      sub_100167130(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v188, 0.0, 1, 0.0, 1);
      sub_100033364(v134, v136, v147);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      id v148 = *((id *)v128 + 14);
      char v149 = static UIContentSizeCategory.>= infix(_:_:)();

      if (v149) {
        double v150 = 1.0;
      }
      else {
        double v150 = 0.5;
      }
      uint64_t v151 = swift_getKeyPath();
      long long v152 = *(_OWORD *)&v188[144];
      uint64_t v153 = (uint64_t)v183;
      *((_OWORD *)v183 + 8) = *(_OWORD *)&v188[128];
      *(_OWORD *)(v153 + 144) = v152;
      *(_OWORD *)(v153 + 160) = *(_OWORD *)&v188[160];
      uint64_t v154 = *(void *)&v188[176];
      long long v155 = *(_OWORD *)&v188[80];
      *(_OWORD *)(v153 + 64) = *(_OWORD *)&v188[64];
      *(_OWORD *)(v153 + 80) = v155;
      long long v156 = *(_OWORD *)&v188[112];
      *(_OWORD *)(v153 + 96) = *(_OWORD *)&v188[96];
      *(_OWORD *)(v153 + 112) = v156;
      long long v157 = *(_OWORD *)&v188[16];
      *(_OWORD *)uint64_t v153 = *(_OWORD *)v188;
      *(_OWORD *)(v153 + 16) = v157;
      long long v158 = *(_OWORD *)&v188[48];
      *(_OWORD *)(v153 + 32) = *(_OWORD *)&v188[32];
      *(_OWORD *)(v153 + 48) = v158;
      *(void *)(v153 + 176) = v154;
      *(void *)(v153 + 184) = v151;
      *(double *)(v153 + 192) = v150;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_100388760);
      sub_10013A804();
      sub_10013A5A8();
      return _ConditionalContent<>.init(storage:)();
    }
LABEL_31:
    type metadata accessor for UIMetrics();
    v159 = (unint64_t *)&qword_10037EFF0;
    v160 = type metadata accessor for UIMetrics;
    goto LABEL_32;
  }
  uint64_t v164 = v28;
  *(double *)v188 = (double)*(uint64_t *)(v165 + *(int *)(type metadata accessor for TransmissionProgress(0) + 28));
  v188[8] = 0;
  *(void *)v187 = 0x4059000000000000;
  sub_10013A2C8();
  ProgressView.init<A>(value:total:)();
  uint64_t v59 = a3[3];
  uint64_t v60 = a3[4];
  uint64_t v61 = sub_100008F88(a3, v59);
  *(void *)&v188[24] = v59;
  *(void *)&v188[32] = *(void *)(v60 + 8);
  uint64_t v62 = sub_10013A31C((uint64_t *)v188);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v62, v61, v59);
  sub_100009B18(&qword_10037F210, &qword_10037F118);
  sub_10013A380();
  uint64_t v63 = v167;
  View.progressViewStyle<A>(_:)();
  sub_10013A3D4((uint64_t)v188);
  (*(void (**)(char *, uint64_t))(v166 + 8))(v12, v63);
  uint64_t v65 = a3[3];
  uint64_t v64 = a3[4];
  sub_100008F88(a3, v65);
  double v66 = (*(double (**)(uint64_t))(*(void *)(v64 + 8) + 8))(v65);
  static Alignment.center.getter();
  __n128 v67 = sub_1001672FC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v18, 0.0, 1, v66, 0);
  (*(void (**)(char *, void, __n128))(v169 + 8))(v15, v170, v67);
  uint64_t v68 = sub_100008F88(a3, a3[3]);
  uint64_t v69 = *v68;
  long long v170 = *(_OWORD *)(*v68 + 152);
  uint64_t v70 = *(void *)(v69 + 168);
  uint64_t v71 = *(void *)(v69 + 176);
  LOBYTE(v64) = static Edge.Set.all.getter();
  uint64_t v72 = v172;
  sub_10000D2A0((uint64_t)v18, v172, &qword_100388720);
  uint64_t v73 = v72 + *(int *)(v168 + 36);
  *(unsigned char *)uint64_t v73 = v64;
  *(_OWORD *)(v73 + 8) = v170;
  *(void *)(v73 + 24) = v70;
  *(void *)(v73 + 32) = v71;
  *(unsigned char *)(v73 + 40) = 0;
  sub_10000950C((uint64_t)v18, &qword_100388720);
  sub_10000D544(v72, v173, &qword_100388728);
  *(void *)v188 = v178;
  *(void *)&v188[8] = v179;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v74 = Text.init<A>(_:)();
  uint64_t v178 = v75;
  uint64_t v179 = v74;
  LODWORD(v165) = v76;
  *(void *)&long long v170 = v77;
  long long v78 = sub_100008F88(a3, a3[3]);
  uint64_t v79 = *v78;
  uint64_t v80 = *(void *)(*v78 + 184);
  uint64_t v168 = *(void *)(*v78 + 192);
  uint64_t v169 = v80;
  uint64_t v81 = *(void *)(v79 + 200);
  uint64_t v166 = *(void *)(v79 + 208);
  uint64_t v167 = v81;
  int v163 = static Edge.Set.all.getter();
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v82 = v164;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v30, enum case for Font.Leading.tight(_:), v164);
  uint64_t v162 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v82);
  uint64_t v164 = swift_getKeyPath();
  *((void *)&v161 + 1) = static Color.white.getter();
  *(void *)&long long v161 = swift_getKeyPath();
  uint64_t v83 = (id *)v180[4];
  if (!v83) {
    goto LABEL_31;
  }
  id v84 = v83[14];
  char v85 = static UIContentSizeCategory.>= infix(_:_:)();

  UIContentSizeCategory v180 = (UIContentSizeCategory)((v85 & 1) == 0);
  uint64_t v86 = swift_getKeyPath();
  id v87 = v83[14];
  char v88 = static UIContentSizeCategory.>= infix(_:_:)();

  BOOL v89 = (v88 & 1) == 0;
  uint64_t v90 = swift_getKeyPath();
  id v91 = v83[14];
  static Alignment.center.getter();
  if (static UIContentSizeCategory.>= infix(_:_:)())
  {
    static Alignment.center.getter();
    if (static Alignment.== infix(_:_:)()) {
      static Alignment.leading.getter();
    }
  }

  char v191 = v165 & 1;
  char v190 = 0;
  char v189 = v85 & 1;
  *(void *)&long long v192 = v179;
  *((void *)&v192 + 1) = v178;
  LOBYTE(v193) = v165 & 1;
  *((void *)&v193 + 1) = v170;
  LOBYTE(v194) = v163;
  *((void *)&v194 + 1) = v169;
  *(void *)&long long v195 = v168;
  *((void *)&v195 + 1) = v167;
  *(void *)&long long v196 = v166;
  BYTE8(v196) = 0;
  *(void *)&long long v197 = v164;
  *((void *)&v197 + 1) = v162;
  long long v198 = v161;
  *(void *)&long long v199 = v86;
  *((void *)&v199 + 1) = v180;
  LOBYTE(v200) = v85 & 1;
  *((void *)&v200 + 1) = v90;
  BOOL v201 = v89;
  long long v207 = v196;
  long long v208 = v197;
  long long v205 = v194;
  long long v206 = v195;
  BOOL v212 = v89;
  long long v210 = v199;
  long long v211 = v200;
  long long v209 = v161;
  long long v203 = v192;
  long long v204 = v193;
  sub_10016634C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v202, 0.0, 1, 0.0, 1);
  sub_10005BB38((uint64_t)&v192);
  id v92 = v83[14];
  char v93 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v93) {
    double v94 = 1.0;
  }
  else {
    double v94 = 0.5;
  }
  uint64_t v95 = swift_getKeyPath();
  memcpy(v186, v202, 0x108uLL);
  v186[33] = v95;
  *(double *)&v186[34] = v94;
  uint64_t v96 = v172;
  uint64_t v97 = v173;
  sub_10000D2A0(v173, v172, &qword_100388728);
  memcpy(v185, v186, sizeof(v185));
  uint64_t v98 = v171;
  sub_10000D2A0(v96, v171, &qword_100388728);
  long long v99 = (void *)(v98 + *(int *)(sub_100004010(&qword_100388758) + 48));
  memcpy(v187, v185, sizeof(v187));
  memcpy(v99, v185, 0x118uLL);
  memcpy(v188, v185, sizeof(v188));
  sub_10013A450((uint64_t)v186);
  sub_10013A450((uint64_t)v187);
  sub_10013A4FC((uint64_t)v188);
  sub_10000950C(v96, &qword_100388728);
  sub_10000D2A0(v98, v175, &qword_100388710);
  swift_storeEnumTagMultiPayload();
  sub_100004010(&qword_100388760);
  sub_100009B18(&qword_100388768, &qword_100388710);
  sub_10013A5A8();
  uint64_t v100 = (uint64_t)v176;
  _ConditionalContent<>.init(storage:)();
  sub_10000950C(v98, &qword_100388710);
  sub_10000D2A0(v100, (uint64_t)v183, &qword_100388740);
  swift_storeEnumTagMultiPayload();
  sub_10013A804();
  _ConditionalContent<>.init(storage:)();
  sub_10000950C(v100, &qword_100388740);
  sub_10013A4FC((uint64_t)v186);
  return sub_10000950C(v97, &qword_100388728);
}

uint64_t sub_10013A1DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100138890(a1);
}

uint64_t sub_10013A218(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013A26C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10013A2C8()
{
  unint64_t result = qword_100388748;
  if (!qword_100388748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388748);
  }
  return result;
}

uint64_t *sub_10013A31C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_10013A380()
{
  unint64_t result = qword_100388750;
  if (!qword_100388750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388750);
  }
  return result;
}

uint64_t sub_10013A3D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013A450(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013A4FC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10013A5A8()
{
  unint64_t result = qword_100388770;
  if (!qword_100388770)
  {
    sub_1000094C4(&qword_100388760);
    sub_10013A648();
    sub_100009B18(&qword_100381990, &qword_100381998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388770);
  }
  return result;
}

unint64_t sub_10013A648()
{
  unint64_t result = qword_100388778;
  if (!qword_100388778)
  {
    sub_1000094C4(&qword_100388780);
    sub_10013A6C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388778);
  }
  return result;
}

unint64_t sub_10013A6C4()
{
  unint64_t result = qword_100388788;
  if (!qword_100388788)
  {
    sub_1000094C4(&qword_100388790);
    sub_10013A764();
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388788);
  }
  return result;
}

unint64_t sub_10013A764()
{
  unint64_t result = qword_100388798;
  if (!qword_100388798)
  {
    sub_1000094C4(&qword_1003887A0);
    sub_100009B18(&qword_100380A78, &qword_100380A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388798);
  }
  return result;
}

unint64_t sub_10013A804()
{
  unint64_t result = qword_1003887A8;
  if (!qword_1003887A8)
  {
    sub_1000094C4(&qword_100388740);
    sub_100009B18(&qword_100388768, &qword_100388710);
    sub_10013A5A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003887A8);
  }
  return result;
}

uint64_t sub_10013A8A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013A914(uint64_t a1)
{
  return a1;
}

unint64_t sub_10013A988()
{
  unint64_t result = qword_1003887B0;
  if (!qword_1003887B0)
  {
    sub_1000094C4(&qword_100388700);
    sub_10013A9FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003887B0);
  }
  return result;
}

unint64_t sub_10013A9FC()
{
  unint64_t result = qword_1003887B8;
  if (!qword_1003887B8)
  {
    sub_1000094C4(&qword_1003886F8);
    sub_100009B18(&qword_1003887C0, &qword_1003886F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003887B8);
  }
  return result;
}

uint64_t type metadata accessor for AnalyticsEntryPoint()
{
  return self;
}

unint64_t sub_10013AAC0()
{
  sub_100004010(&qword_1003826A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = 0x696F507972746E65;
  *(void *)(inited + 40) = 0xEA0000000000746ELL;
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v1;
  return sub_100283ACC(inited);
}

uint64_t destroy for TryOutMessagesIntroView(uint64_t a1)
{
  swift_release();
  swift_release();
  sub_10004C738(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));

  return swift_release();
}

uint64_t initializeWithCopy for TryOutMessagesIntroView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_10004C6D4(v6, v7);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TryOutMessagesIntroView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  sub_10004C6D4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  sub_10004C738(v6, v7);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TryOutMessagesIntroView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5;
  sub_10004C738(v6, v7);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TryOutMessagesIntroView()
{
  return &type metadata for TryOutMessagesIntroView;
}

uint64_t sub_10013AEA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013AEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100388878);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_100388880);
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_100388888);
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004010(&qword_100388890);
  __chkstk_darwin(v48);
  id v49 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(v1 + 16);
  if (v16)
  {
    uint64_t v17 = v16[9];
    uint64_t v18 = v16[10];
    sub_100008F88(v16 + 6, v17);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 24))(v57, v17, v18);
    sub_1000090FC((uint64_t)v57, (uint64_t)v55);
    uint64_t v19 = (_OWORD *)swift_allocObject();
    long long v20 = *(_OWORD *)(v2 + 16);
    v19[1] = *(_OWORD *)v2;
    v19[2] = v20;
    long long v21 = *(_OWORD *)(v2 + 48);
    v19[3] = *(_OWORD *)(v2 + 32);
    v19[4] = v21;
    sub_100009164(v55, (uint64_t)(v19 + 5));
    sub_1000090FC((uint64_t)v57, (uint64_t)v55);
    uint64_t v22 = (_OWORD *)swift_allocObject();
    long long v23 = *(_OWORD *)(v2 + 16);
    v22[1] = *(_OWORD *)v2;
    v22[2] = v23;
    long long v24 = *(_OWORD *)(v2 + 48);
    v22[3] = *(_OWORD *)(v2 + 32);
    v22[4] = v24;
    sub_100009164(v55, (uint64_t)(v22 + 5));
    sub_10013E2D0(v2);
    sub_10013E2D0(v2);
    sub_1001621AC(v53, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, sub_10013E258, v19, sub_10013E2C4, v22, 0);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v3);
    uint64_t v25 = sub_100004010(&qword_100388898);
    uint64_t v26 = sub_100009B18(&qword_1003888A0, &qword_100388898);
    View.navigationBarTitleDisplayMode(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v55[8] = v53[8];
    v55[9] = v53[9];
    v55[10] = v53[10];
    uint64_t v56 = v54;
    v55[4] = v53[4];
    v55[5] = v53[5];
    v55[6] = v53[6];
    v55[7] = v53[7];
    v55[0] = v53[0];
    v55[1] = v53[1];
    v55[2] = v53[2];
    v55[3] = v53[3];
    sub_100009354((uint64_t)v55);
    *(void *)&v53[0] = v25;
    *((void *)&v53[0] + 1) = v26;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v28 = v45;
    uint64_t v29 = v42;
    View.navigationBarBackButtonHidden(_:)();
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v10, v29);
    __chkstk_darwin(v30);
    *(&v42 - 2) = v2;
    sub_100004010(&qword_1003888A8);
    *(void *)&v53[0] = v29;
    *((void *)&v53[0] + 1) = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_1003888B0, &qword_1003888A8);
    uint64_t v31 = v44;
    uint64_t v32 = v47;
    View.toolbar<A>(content:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v32);
    uint64_t v33 = *(void *)(v2 + 32);
    LOBYTE(v29) = *(unsigned char *)(v2 + 40);
    sub_10004C6D4(v33, v29);
    char v34 = sub_10004EE90(v33, v29);
    sub_10004C738(v33, v29);
    uint64_t v35 = v31;
    if (v34) {
      char v36 = static Edge.Set.top.getter();
    }
    else {
      char v36 = Edge.Set.init(rawValue:)();
    }
    char v37 = v36;
    uint64_t v39 = (uint64_t)v49;
    uint64_t v38 = v50;
    uint64_t v40 = v51;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, v35, v51);
    *(unsigned char *)(v39 + *(int *)(v48 + 36)) = v37;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v40);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v57);
    return sub_10000D544(v39, v52, &qword_100388890);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10013F45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013B5AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100381918);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004010(&qword_100381920);
  uint64_t v9 = __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - v12;
  if (*(void *)(a1 + 16))
  {
    uint64_t v14 = self;
    swift_retain();
    id v15 = [v14 sharedApplication];
    id v16 = [v15 userInterfaceLayoutDirection];

    swift_release();
    unint64_t v17 = 0xD000000000000016;
    unint64_t v18 = 0xD00000000000001ALL;
    if (v16 != (id)1) {
      unint64_t v18 = 0xD000000000000016;
    }
    unint64_t v44 = v18;
    unint64_t v19 = 0x80000001002CF680;
    if (v16 != (id)1)
    {
      unint64_t v19 = 0x80000001002CF660;
      unint64_t v17 = 0;
    }
    unint64_t v42 = v17;
    unint64_t v43 = v19;
    if (v16 == (id)1) {
      unint64_t v20 = 0x80000001002CF660;
    }
    else {
      unint64_t v20 = 0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for UIMetrics();
    sub_10013F45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v22 = EnvironmentObject.init()();
    uint64_t v41 = v23;
    *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v24 = sub_100004010(&qword_100381928);
    sub_10013B99C(a1, (uint64_t)&v8[*(int *)(v24 + 44)]);
    uint64_t v26 = a2[3];
    uint64_t v25 = a2[4];
    sub_100008F88(a2, v26);
    double v27 = (*(double (**)(uint64_t, uint64_t))(v25 + 24))(v26, v25);
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    char v34 = static Edge.Set.all.getter();
    sub_10000D2A0((uint64_t)v8, (uint64_t)v11, &qword_100381918);
    uint64_t v35 = &v11[*(int *)(v45 + 36)];
    *uint64_t v35 = v34;
    *((double *)v35 + 1) = v27;
    *((void *)v35 + 2) = v29;
    *((void *)v35 + 3) = v31;
    *((void *)v35 + 4) = v33;
    v35[40] = 0;
    sub_10000950C((uint64_t)v8, &qword_100381918);
    sub_10000D544((uint64_t)v11, (uint64_t)v13, &qword_100381920);
    sub_10000D2A0((uint64_t)v13, (uint64_t)v11, &qword_100381920);
    uint64_t v36 = v41;
    *(void *)a3 = v22;
    *(void *)(a3 + 8) = v36;
    *(void *)(a3 + 16) = KeyPath;
    *(unsigned char *)(a3 + 24) = 0;
    unint64_t v37 = v43;
    *(void *)(a3 + 32) = v44;
    *(void *)(a3 + 40) = v37;
    *(void *)(a3 + 48) = v42;
    *(void *)(a3 + 56) = v20;
    uint64_t v38 = sub_100004010(&qword_100381930);
    sub_10000D2A0((uint64_t)v11, a3 + *(int *)(v38 + 48), &qword_100381920);
    swift_retain();
    sub_10004C6D4(KeyPath, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10000950C((uint64_t)v13, &qword_100381920);
    sub_10000950C((uint64_t)v11, &qword_100381920);
    swift_release();
    sub_10004C738(KeyPath, 0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10013F45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013B99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v97 = *(void *)(v3 - 8);
  uint64_t v98 = v3;
  __chkstk_darwin(v3);
  uint64_t v95 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100381938);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  double v94 = (char *)&v89 - v10;
  __chkstk_darwin(v9);
  uint64_t v99 = (uint64_t)&v89 - v11;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  static Font.title.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  LODWORD(v92) = v20;
  uint64_t v93 = v21;
  swift_release();
  sub_100033364(v12, v14, v16);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    id v23 = *(id *)(v22 + 112);
    char v24 = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v25 = (v24 & 1) == 0;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v102 = v22;
    id v27 = *(id *)(v22 + 112);
    static Alignment.center.getter();
    UIContentSizeCategory v101 = UIContentSizeCategoryAccessibilityExtraLarge;
    char v28 = static UIContentSizeCategory.>= infix(_:_:)();
    uint64_t v100 = v8;
    if (v28)
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v169 = v17;
    uint64_t v170 = v19;
    char v29 = v92 & 1;
    char v171 = v92 & 1;
    uint64_t v172 = v93;
    uint64_t v173 = KeyPath;
    BOOL v174 = v25;
    __int16 v175 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v153, 0.0, 1, 0.0, 1);
    sub_100033364(v17, v19, v29);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = v102;
    id v31 = *(id *)(v102 + 112);
    char v32 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v32) {
      double v33 = 1.0;
    }
    else {
      double v33 = 0.5;
    }
    uint64_t v34 = swift_getKeyPath();
    char v35 = static Edge.Set.top.getter();
    char v151 = 1;
    char v36 = static Edge.Set.bottom.getter();
    char v152 = 1;
    v150[6] = v153[6];
    v150[7] = v153[7];
    v150[8] = v153[8];
    v150[9] = v153[9];
    v150[2] = v153[2];
    v150[3] = v153[3];
    v150[4] = v153[4];
    v150[5] = v153[5];
    v150[0] = v153[0];
    v150[1] = v153[1];
    *(void *)&v150[10] = v34;
    *((double *)&v150[10] + 1) = v33;
    LOBYTE(v150[11]) = v35;
    *(_OWORD *)((char *)&v150[11] + 8) = 0u;
    *(_OWORD *)((char *)&v150[12] + 8) = 0u;
    BYTE8(v150[13]) = v151;
    LOBYTE(v150[14]) = v36;
    *(_OWORD *)((char *)&v150[14] + 8) = 0u;
    *(_OWORD *)((char *)&v150[15] + 8) = 0u;
    BYTE8(v150[16]) = 1;
    unint64_t v37 = v95;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100381940);
    sub_10013ED80(&qword_100381948, &qword_100381940, (void (*)(void))sub_10004F694);
    uint64_t v38 = (uint64_t)v94;
    View.accessibility(addTraits:)();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v37, v98);
    memcpy(v154, v150, 0x109uLL);
    sub_100043A24((uint64_t)v154);
    sub_10000D544(v38, v99, &qword_100381938);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v97 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v98 = v39;
    double v94 = v40;
    LODWORD(v95) = v41;
    id v42 = *(id *)(v30 + 112);
    LOBYTE(v38) = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v43 = (v38 & 1) == 0;
    uint64_t v44 = swift_getKeyPath();
    id v45 = *(id *)(v30 + 112);
    static Alignment.center.getter();
    if ((static UIContentSizeCategory.>= infix(_:_:)() & 1) != 0
      && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)() & 1) != 0))
    {
      BOOL v46 = v43;
      static Alignment.leading.getter();
    }
    else
    {
      BOOL v46 = v43;
    }

    uint64_t v47 = v97;
    uint64_t v48 = (uint64_t)v94;
    uint64_t v162 = v97;
    int v163 = v94;
    char v49 = v95 & 1;
    char v164 = v95 & 1;
    uint64_t v165 = v98;
    uint64_t v166 = v44;
    BOOL v167 = v46;
    __int16 v168 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v149, 0.0, 1, 0.0, 1);
    sub_100033364(v47, v48, v49);
    swift_release();
    swift_bridgeObjectRelease();
    long long v145 = v149[6];
    long long v146 = v149[7];
    long long v147 = v149[8];
    long long v148 = v149[9];
    long long v141 = v149[2];
    long long v142 = v149[3];
    long long v143 = v149[4];
    long long v144 = v149[5];
    long long v139 = v149[0];
    long long v140 = v149[1];
    uint64_t v50 = v102;
    id v51 = *(id *)(v102 + 112);
    LODWORD(v93) = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v98 = swift_getKeyPath();
    LODWORD(v97) = static Edge.Set.top.getter();
    unsigned __int8 v134 = 1;
    LODWORD(v95) = static Edge.Set.bottom.getter();
    LODWORD(v94) = v134;
    unsigned __int8 v135 = 1;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v92 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v53 = v52;
    int v90 = v54;
    uint64_t v56 = v55;
    id v57 = *(id *)(v50 + 112);
    int v89 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v91 = swift_getKeyPath();
    id v58 = *(id *)(v50 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    char v59 = v90 & 1;
    double v60 = 0.5;
    uint64_t v61 = v92;
    uint64_t v155 = v92;
    uint64_t v156 = v53;
    char v157 = v90 & 1;
    if (v93) {
      double v62 = 1.0;
    }
    else {
      double v62 = 0.5;
    }
    uint64_t v158 = v56;
    uint64_t v159 = v91;
    BOOL v160 = (v89 & 1) == 0;
    __int16 v161 = 256;
    sub_100166194(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v124, 0.0, 1, 0.0, 1);
    sub_100033364(v61, v53, v59);
    swift_release();
    swift_bridgeObjectRelease();
    id v63 = *(id *)(v102 + 112);
    char v64 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v64) {
      double v60 = 1.0;
    }
    uint64_t v92 = swift_getKeyPath();
    LODWORD(v101) = static Edge.Set.top.getter();
    unsigned __int8 v103 = 1;
    uint64_t v66 = v99;
    uint64_t v65 = (uint64_t)v100;
    sub_10000D2A0(v99, (uint64_t)v100, &qword_100381938);
    unsigned __int8 v67 = v135;
    LODWORD(v102) = v135;
    LODWORD(v93) = v103;
    uint64_t v68 = v65;
    uint64_t v69 = v96;
    sub_10000D2A0(v68, v96, &qword_100381938);
    uint64_t v70 = sub_100004010(&qword_1003819A0);
    uint64_t v71 = (void *)(v69 + *(int *)(v70 + 48));
    v104[6] = v145;
    v104[7] = v146;
    v104[8] = v147;
    v104[9] = v148;
    v104[4] = v143;
    v104[5] = v144;
    v104[2] = v141;
    v104[3] = v142;
    v104[0] = v139;
    v104[1] = v140;
    *(void *)&v104[10] = v98;
    *((double *)&v104[10] + 1) = v62;
    LOBYTE(v104[11]) = v97;
    *(_DWORD *)((char *)&v104[11] + 1) = *(_DWORD *)v138;
    DWORD1(v104[11]) = *(_DWORD *)&v138[3];
    *(_OWORD *)((char *)&v104[11] + 8) = 0u;
    *(_OWORD *)((char *)&v104[12] + 8) = 0u;
    char v72 = (char)v94;
    BYTE8(v104[13]) = (_BYTE)v94;
    *(_DWORD *)((char *)&v104[13] + 9) = *(_DWORD *)v137;
    HIDWORD(v104[13]) = *(_DWORD *)&v137[3];
    char v73 = (char)v95;
    LOBYTE(v104[14]) = (_BYTE)v95;
    *(_DWORD *)((char *)&v104[14] + 1) = *(_DWORD *)v136;
    DWORD1(v104[14]) = *(_DWORD *)&v136[3];
    *(_OWORD *)((char *)&v104[15] + 8) = 0u;
    *(_OWORD *)((char *)&v104[14] + 8) = 0u;
    BYTE8(v104[16]) = v67;
    memcpy(v71, v104, 0x109uLL);
    uint64_t v74 = (_OWORD *)(v69 + *(int *)(v70 + 64));
    long long v111 = v130;
    long long v112 = v131;
    long long v113 = v132;
    long long v114 = v133;
    long long v109 = v128;
    long long v110 = v129;
    long long v75 = v126;
    long long v107 = v126;
    long long v108 = v127;
    long long v105 = v124;
    long long v106 = v125;
    uint64_t v76 = v92;
    *(void *)&long long v115 = v92;
    *((double *)&v115 + 1) = v60;
    long long v77 = v131;
    long long v78 = v132;
    long long v79 = v129;
    v74[6] = v130;
    v74[7] = v77;
    long long v80 = v114;
    long long v81 = v115;
    v74[8] = v78;
    v74[9] = v80;
    long long v82 = v108;
    long long v83 = v109;
    void v74[2] = v75;
    v74[3] = v82;
    char v84 = (char)v101;
    LOBYTE(v116[0]) = (_BYTE)v101;
    *(_OWORD *)((char *)v116 + 8) = 0u;
    *(_OWORD *)((char *)&v116[1] + 8) = 0u;
    LOBYTE(v70) = v93;
    BYTE8(v116[2]) = v93;
    v74[4] = v83;
    v74[5] = v79;
    long long v85 = v106;
    *uint64_t v74 = v105;
    v74[1] = v85;
    long long v86 = v116[0];
    long long v87 = v116[1];
    v74[10] = v81;
    v74[11] = v86;
    v74[12] = v87;
    *(_OWORD *)((char *)v74 + 201) = *(_OWORD *)((char *)&v116[1] + 9);
    sub_1000439C8((uint64_t)v104);
    sub_1000439C8((uint64_t)&v105);
    sub_10000950C(v66, &qword_100381938);
    v117[6] = v130;
    v117[7] = v131;
    v117[8] = v132;
    v117[9] = v133;
    v117[2] = v126;
    v117[3] = v127;
    v117[4] = v128;
    v117[5] = v129;
    v117[0] = v124;
    v117[1] = v125;
    uint64_t v118 = v76;
    double v119 = v60;
    char v120 = v84;
    long long v121 = 0u;
    long long v122 = 0u;
    char v123 = v70;
    sub_100043A24((uint64_t)v117);
    v150[6] = v145;
    v150[7] = v146;
    v150[8] = v147;
    v150[9] = v148;
    v150[2] = v141;
    v150[3] = v142;
    v150[4] = v143;
    v150[5] = v144;
    v150[0] = v139;
    v150[1] = v140;
    *(void *)&v150[10] = v98;
    *((double *)&v150[10] + 1) = v62;
    LOBYTE(v150[11]) = v97;
    *(_DWORD *)((char *)&v150[11] + 1) = *(_DWORD *)v138;
    DWORD1(v150[11]) = *(_DWORD *)&v138[3];
    *(_OWORD *)((char *)&v150[11] + 8) = 0u;
    *(_OWORD *)((char *)&v150[12] + 8) = 0u;
    BYTE8(v150[13]) = v72;
    *(_DWORD *)((char *)&v150[13] + 9) = *(_DWORD *)v137;
    HIDWORD(v150[13]) = *(_DWORD *)&v137[3];
    LOBYTE(v150[14]) = v73;
    *(_DWORD *)((char *)&v150[14] + 1) = *(_DWORD *)v136;
    DWORD1(v150[14]) = *(_DWORD *)&v136[3];
    *(_OWORD *)((char *)&v150[15] + 8) = 0u;
    *(_OWORD *)((char *)&v150[14] + 8) = 0u;
    BYTE8(v150[16]) = v102;
    sub_100043A24((uint64_t)v150);
    return sub_10000950C((uint64_t)v100, &qword_100381938);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10013F45C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013C5F8@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_1003888C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_100004010(&qword_1003888C8);
  sub_10013C744(a1, a2, &v8[*(int *)(v9 + 44)]);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_100008F88(a2, v10);
  double v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  LOBYTE(a2) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v8, a3, &qword_1003888C0);
  uint64_t v19 = a3 + *(int *)(sub_100004010(&qword_1003888D0) + 36);
  *(unsigned char *)uint64_t v19 = (_BYTE)a2;
  *(double *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return sub_10000950C((uint64_t)v8, &qword_1003888C0);
}

uint64_t sub_10013C744@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  char v120 = a2;
  long long v121 = a3;
  uint64_t v119 = type metadata accessor for KeyboardShortcut();
  uint64_t v117 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v116 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ButtonBorderShape();
  uint64_t v113 = *(void *)(v5 - 8);
  uint64_t v114 = v5;
  __chkstk_darwin(v5);
  uint64_t v95 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v109 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v97 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlSize();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004010(&qword_1003888D8);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100004010(&qword_1003888E0);
  __chkstk_darwin(v91);
  uint64_t v15 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100004010(&qword_1003888E8);
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004010(&qword_1003888F0);
  __chkstk_darwin(v94);
  uint64_t v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100004010(&qword_1003888F8);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v96 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004010(&qword_100388900) - 8;
  __chkstk_darwin(v102);
  uint64_t v99 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100004010(&qword_100388908) - 8;
  __chkstk_darwin(v103);
  uint64_t v101 = (uint64_t)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100004010(&qword_100388910);
  __chkstk_darwin(v111);
  uint64_t v108 = (uint64_t)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100004010(&qword_100388918);
  uint64_t v115 = *(void *)(v112 - 8);
  uint64_t v24 = __chkstk_darwin(v112 - 8);
  id v104 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v118 = (char *)&v90 - v26;
  id v27 = (_OWORD *)swift_allocObject();
  long long v110 = a1;
  long long v28 = a1[1];
  v27[1] = *a1;
  v27[2] = v28;
  long long v29 = a1[3];
  v27[3] = a1[2];
  v27[4] = v29;
  sub_10013E2D0((uint64_t)a1);
  sub_100004010(&qword_1003820A8);
  sub_10013ED80(&qword_1003820C8, &qword_1003820A8, (void (*)(void))sub_10006528C);
  Button.init(action:label:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ControlSize.large(_:), v8);
  uint64_t KeyPath = swift_getKeyPath();
  id v31 = (uint64_t *)&v15[*(int *)(v91 + 36)];
  uint64_t v32 = sub_100004010(&qword_10037F228);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v31 + *(int *)(v32 + 28), v11, v8);
  *id v31 = KeyPath;
  uint64_t v33 = v92;
  uint64_t v34 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v15, v13, v93);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
  char v35 = v97;
  BorderedProminentButtonStyle.init()();
  sub_10013EEB0();
  sub_10013F45C(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v36 = v106;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v35, v36);
  sub_10000950C((uint64_t)v15, &qword_1003888E0);
  unint64_t v37 = v95;
  static ButtonBorderShape.roundedRectangle.getter();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = (uint64_t *)&v19[*(int *)(v94 + 36)];
  uint64_t v40 = sub_100004010(&qword_100381038);
  uint64_t v42 = v113;
  uint64_t v41 = v114;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))((char *)v39 + *(int *)(v40 + 28), v37, v114);
  *uint64_t v39 = v38;
  uint64_t v43 = v98;
  uint64_t v44 = v100;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v19, v17, v100);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v41);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v44);
  id v45 = v116;
  static KeyboardShortcut.defaultAction.getter();
  sub_10013F150();
  BOOL v46 = v96;
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v45, v119);
  sub_10000950C((uint64_t)v19, &qword_1003888F0);
  uint64_t v47 = static Color.white.getter();
  uint64_t v48 = swift_getKeyPath();
  uint64_t v123 = v47;
  swift_retain();
  uint64_t v49 = AnyShapeStyle.init<A>(_:)();
  uint64_t v50 = v105;
  uint64_t v51 = (uint64_t)v99;
  uint64_t v52 = v107;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v99, v46, v107);
  swift_release();
  uint64_t v53 = (uint64_t *)(v51 + *(int *)(v102 + 44));
  *uint64_t v53 = v48;
  v53[1] = v49;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v52);
  LOBYTE(v47) = static Edge.Set.top.getter();
  uint64_t v54 = v101;
  sub_10000D2A0(v51, v101, &qword_100388900);
  uint64_t v55 = v54 + *(int *)(v103 + 44);
  *(unsigned char *)uint64_t v55 = v47;
  *(_OWORD *)(v55 + 8) = 0u;
  *(_OWORD *)(v55 + 24) = 0u;
  *(unsigned char *)(v55 + 40) = 1;
  sub_10000950C(v51, &qword_100388900);
  LOBYTE(v49) = static Edge.Set.bottom.getter();
  uint64_t v56 = v120[3];
  uint64_t v57 = v120[4];
  sub_100008F88(v120, v56);
  (*(void (**)(uint64_t, uint64_t))(v57 + 112))(v56, v57);
  EdgeInsets.init(_all:)();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v108;
  sub_10000D2A0(v54, v108, &qword_100388908);
  uint64_t v67 = v66 + *(int *)(v111 + 36);
  *(unsigned char *)uint64_t v67 = v49;
  *(void *)(v67 + 8) = v59;
  *(void *)(v67 + 16) = v61;
  *(void *)(v67 + 24) = v63;
  *(void *)(v67 + 32) = v65;
  *(unsigned char *)(v67 + 40) = 0;
  sub_10000950C(v54, &qword_100388908);
  id v68 = [self mainBundle];
  v126._uint64_t countAndFlagsBits = 0xD00000000000007ALL;
  v126._object = (void *)0x80000001002CCE70;
  v69._object = (void *)0x80000001002CCE50;
  v69._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v70._uint64_t countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  Swift::String v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v126);

  Swift::String v125 = v71;
  char v72 = v110;
  long long v122 = v110[3];
  sub_100004010(&qword_10037ED78);
  State.projectedValue.getter();
  sub_10013ED80(&qword_100388938, &qword_100388910, (void (*)(void))sub_10013F2CC);
  sub_100033310();
  sub_1000B3520();
  char v73 = v104;
  View.alert<A, B, C>(_:isPresented:actions:message:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10000950C(v66, &qword_100388910);
  uint64_t v74 = v115;
  long long v75 = v118;
  uint64_t v76 = v73;
  uint64_t v77 = v112;
  (*(void (**)(void))(v115 + 32))();
  uint64_t v78 = *((void *)v72 + 4);
  LOBYTE(v49) = *((unsigned char *)v72 + 40);
  sub_10004C6D4(v78, v49);
  LOBYTE(v56) = sub_10004EE90(v78, v49);
  sub_10004C738(v78, v49);
  if (v56)
  {
    char v120 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 1;
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10013F45C(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t v81 = EnvironmentObject.init()();
    char v120 = v82;
    LOBYTE(v125._countAndFlagsBits) = 0;
    State.init(wrappedValue:)();
    uint64_t v79 = v123;
    uint64_t v80 = v124;
  }
  long long v83 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v84 = v77;
  v83(v76, v75, v77);
  long long v85 = v121;
  v83(v121, v76, v84);
  long long v86 = (uint64_t *)&v85[*(int *)(sub_100004010(&qword_100388950) + 48)];
  long long v87 = v120;
  *long long v86 = v81;
  v86[1] = (uint64_t)v87;
  v86[2] = v79;
  v86[3] = v80;
  sub_10013F3D0(v81);
  char v88 = *(void (**)(char *, uint64_t))(v74 + 8);
  v88(v75, v84);
  sub_10013F418(v81);
  return ((uint64_t (*)(char *, uint64_t))v88)(v76, v84);
}

uint64_t sub_10013D5D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v34 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v34);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004010(&qword_100382090);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  char v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100004010(&qword_100382098);
  __chkstk_darwin(v33);
  unint64_t v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_1003820A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v39 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Color.black.getter();
  uint64_t v12 = Text.foregroundColor(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  sub_100033364(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v41 = v12;
  uint64_t v42 = v14;
  char v43 = v16 & 1;
  uint64_t v44 = v18;
  uint64_t v19 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v20 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v2, v19, v20);
  sub_10013F45C(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    uint64_t v22 = v35;
    View.dynamicTypeSize<A>(_:)();
    sub_10000950C((uint64_t)v2, &qword_10037F010);
    sub_100033364(v41, v42, v43);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = v36;
    uint64_t v25 = (uint64_t)v37;
    uint64_t v26 = v38;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v37, v22, v38);
    uint64_t v27 = v25 + *(int *)(v33 + 36);
    *(void *)uint64_t v27 = KeyPath;
    *(unsigned char *)(v27 + 8) = 1;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v26);
    uint64_t v28 = static Alignment.center.getter();
    uint64_t v29 = v39;
    sub_100166904(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v39, 0.0, 1, 0.0, 1, v28, v30);
    sub_10000950C(v25, &qword_100382098);
    uint64_t v31 = v40;
    sub_10000D2A0(v29, v40, &qword_1003820A0);
    *(_WORD *)(v31 + *(int *)(sub_100004010(&qword_1003820A8) + 36)) = 256;
    return sub_10000950C(v29, &qword_1003820A0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10013DA5C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_10013F45C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t result = EnvironmentObject.init()();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_10013DAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v40 = sub_100004010(&qword_1003888B8);
  __chkstk_darwin(v40);
  uint64_t v36 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_1003818D0);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  char v35 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_1003818D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_1003818E0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v42 = (uint64_t)&v35 - v14;
  uint64_t v15 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v15 - 8);
  uint64_t v37 = sub_100004010(&qword_1003856E0);
  uint64_t v16 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.navigationBarLeading.getter();
  type metadata accessor for TryOutBackButtonView();
  sub_10013F45C(&qword_1003856F0, (void (*)(uint64_t))type metadata accessor for TryOutBackButtonView);
  uint64_t v19 = v18;
  ToolbarItem<>.init(placement:content:)();
  uint64_t v20 = *(void *)(a1 + 32);
  LOBYTE(a1) = *(unsigned char *)(a1 + 40);
  sub_10004C6D4(v20, a1);
  LOBYTE(v18) = sub_10004EE90(v20, a1);
  sub_10004C738(v20, a1);
  if (v18)
  {
    uint64_t v21 = sub_100004010(&qword_1003818F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 1, 1, v21);
    uint64_t v22 = sub_100009B18(&qword_1003818E8, &qword_1003818D8);
    uint64_t v43 = v6;
    uint64_t v44 = v22;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10000950C((uint64_t)v13, &qword_1003818E0);
  }
  else
  {
    static ToolbarItemPlacement.principal.getter();
    ToolbarItem<>.init(placement:content:)();
    uint64_t v23 = sub_100009B18(&qword_1003818E8, &qword_1003818D8);
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v24 = sub_100004010(&qword_1003818F0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 0, 1, v24);
    uint64_t v43 = v6;
    uint64_t v44 = v23;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10000950C((uint64_t)v13, &qword_1003818E0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  sub_10004F324();
  uint64_t v25 = v35;
  ToolbarItem<>.init(placement:content:)();
  uint64_t v26 = (uint64_t)&v36[*(int *)(v40 + 48)];
  uint64_t v27 = &v36[*(int *)(v40 + 64)];
  uint64_t v28 = v19;
  uint64_t v29 = v19;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v36, v29, v37);
  uint64_t v31 = v42;
  sub_10000D2A0(v42, v26, &qword_1003818E0);
  uint64_t v33 = v38;
  uint64_t v32 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v27, v25, v39);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v32);
  sub_10000950C(v31, &qword_1003818E0);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v28, v30);
}

uint64_t sub_10013E12C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_100004010(&qword_1003819B0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10013E184@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_10013F45C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_10013E218@<X0>(uint64_t a1@<X8>)
{
  return sub_10013AEBC(a1);
}

uint64_t sub_10013E258@<X0>(uint64_t a1@<X8>)
{
  return sub_10013B5AC(v1 + 16, (void *)(v1 + 80), a1);
}

uint64_t sub_10013E268()
{
  swift_release();
  swift_release();
  sub_10004C738(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 80);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10013E2C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10013C5F8((_OWORD *)(v1 + 16), (void *)(v1 + 80), a1);
}

uint64_t sub_10013E2D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  swift_retain();
  swift_retain();
  sub_10004C6D4(v2, v3);
  swift_retain();
  return a1;
}

uint64_t sub_10013E338@<X0>(uint64_t a1@<X8>)
{
  return sub_10013DAD0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10013E340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a5;
  uint64_t v9 = sub_100004010(&qword_100388960);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100388968);
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  __chkstk_darwin(v12);
  uint64_t v33 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = static HorizontalAlignment.center.getter();
  uint64_t v40 = 0;
  LOBYTE(v41) = 1;
  if (a1)
  {
    uint64_t v14 = *(void **)(a1 + 72);
    v45._uint64_t countAndFlagsBits = *(void *)(a1 + 64);
    v45._object = v14;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    char v16 = a3 & 1;
    *(unsigned char *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v29 = sub_100004010(&qword_100385398);
    uint64_t v30 = sub_100004010(&qword_100380920);
    uint64_t v17 = sub_100009B18(&qword_1003853A0, &qword_100385398);
    unint64_t v31 = sub_1000B3224();
    View.onChange<A>(of:initial:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    id v18 = [self mainBundle];
    v46._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
    v46._object = (void *)0x80000001002CB6D0;
    v19._object = (void *)0x80000001002CB6B0;
    v19._uint64_t countAndFlagsBits = 0xD000000000000012;
    v20._uint64_t countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v46);
    uint64_t v32 = v11;

    Swift::String v45 = v21;
    char v43 = v16;
    uint64_t v44 = a4;
    sub_100004010(&qword_10037ED78);
    uint64_t v22 = State.projectedValue.getter();
    uint64_t v28 = (uint64_t)&v28;
    uint64_t v23 = __chkstk_darwin(v22);
    __chkstk_darwin(v23);
    sub_100004010(&qword_100380E00);
    uint64_t v39 = v29;
    uint64_t v40 = v30;
    uint64_t v41 = v17;
    unint64_t v42 = v31;
    swift_getOpaqueTypeConformance2();
    sub_100033310();
    sub_100009B18(&qword_100380E08, &qword_100380E00);
    uint64_t v24 = v37;
    uint64_t v25 = v33;
    uint64_t v26 = v32;
    View.alert<A, B, C>(_:isPresented:actions:message:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v24);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v38, v25, v35);
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10013F45C(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013E854(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_100004010(&qword_100381AE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self mainBundle];
  v19._object = (void *)0x80000001002CCF80;
  v12._uint64_t countAndFlagsBits = 19279;
  v12._object = (void *)0xE200000000000000;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0xD000000000000017;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v19);

  Swift::String v18 = v14;
  static ButtonRole.cancel.getter();
  uint64_t v15 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(unsigned char *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a4;
  sub_100033310();
  swift_retain();
  swift_retain();
  return Button<>.init<A>(_:role:action:)();
}

uint64_t sub_10013EA20(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(void *)(a1 + 64);
    uint64_t v2 = *(void *)(a1 + 72);
    char v3 = (void *)(a1 + 64);
    if (v2)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    else
    {
      swift_retain();
    }
    void *v3 = 0;
    v3[1] = 0;
    swift_bridgeObjectRelease();
    sub_100297680(v1, v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10013F45C(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013EB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    unint64_t v3 = *(void *)(a1 + 64);
    if (!*(void *)(a1 + 72))
    {
      id v4 = [self mainBundle];
      v11._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
      v11._object = (void *)0x80000001002CCF10;
      v5._object = (void *)0x80000001002CCEF0;
      v5._uint64_t countAndFlagsBits = 0xD000000000000010;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)v3, (NSBundle)v4, v6, v11);
    }
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t result = Text.init<A>(_:)();
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v8;
    *(unsigned char *)(a2 + 16) = v9 & 1;
    *(void *)(a2 + 24) = v10;
  }
  else
  {
    type metadata accessor for TryOutModel();
    sub_10013F45C(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013ECC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10013E340(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10013ECDC()
{
  swift_release();
  swift_release();
  sub_10004C738(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10013ED30()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10013ED80(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013EDFC()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_10013EE20()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_10013EE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10013F040(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_10013EE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10013F040(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

unint64_t sub_10013EEB0()
{
  unint64_t result = qword_100388920;
  if (!qword_100388920)
  {
    sub_1000094C4(&qword_1003888E0);
    sub_100009B18(&qword_100388928, &qword_1003888D8);
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388920);
  }
  return result;
}

uint64_t sub_10013EF74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10013EFA0()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_10013EFCC()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_10013EFF0()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_10013F014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10013F040(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_10013F040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  char v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10013F110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10013F040(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

unint64_t sub_10013F150()
{
  unint64_t result = qword_100388930;
  if (!qword_100388930)
  {
    sub_1000094C4(&qword_1003888F0);
    sub_1000094C4(&qword_1003888E0);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_10013EEB0();
    sub_10013F45C(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388930);
  }
  return result;
}

uint64_t sub_10013F274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10013F2A0()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_10013F2CC()
{
  return sub_10013ED80(&qword_100388940, &qword_100388908, (void (*)(void))sub_10013F2FC);
}

unint64_t sub_10013F2FC()
{
  unint64_t result = qword_100388948;
  if (!qword_100388948)
  {
    sub_1000094C4(&qword_100388900);
    sub_1000094C4(&qword_1003888F0);
    sub_10013F150();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388948);
  }
  return result;
}

uint64_t sub_10013F3D0(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10013F418(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10013F45C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for TryOutErrorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TryOutErrorView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TryOutErrorView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TryOutErrorView()
{
  return &type metadata for TryOutErrorView;
}

unint64_t sub_10013F5E0()
{
  unint64_t result = qword_100388958;
  if (!qword_100388958)
  {
    sub_1000094C4(&qword_100388890);
    sub_1000094C4(&qword_100388880);
    sub_1000094C4(&qword_1003888A8);
    sub_1000094C4(&qword_100388878);
    sub_1000094C4(&qword_100388898);
    sub_100009B18(&qword_1003888A0, &qword_100388898);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_1003888B0, &qword_1003888A8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388958);
  }
  return result;
}

uint64_t sub_10013F774()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013F794()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10013F7F4()
{
  return sub_10013E854(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10013F804@<X0>(uint64_t a1@<X8>)
{
  return sub_10013EB68(*(void *)(v1 + 16), a1);
}

uint64_t sub_10013F818()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013F858()
{
  return sub_10013EA20(*(void *)(v0 + 16));
}

uint64_t sub_10013F868()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for BuiltInEnterRoadsidePhoneNumberHeaderView()
{
  return &type metadata for BuiltInEnterRoadsidePhoneNumberHeaderView;
}

uint64_t sub_10013F9C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013F9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, NSString *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v58 = a4;
  uint64_t v6 = sub_100004010(&qword_100388970);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004010(&qword_100388978);
  __chkstk_darwin(v54);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004010(&qword_100388980);
  __chkstk_darwin(v55);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100004010(&qword_100388988);
  uint64_t v13 = __chkstk_darwin(v56);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v57 = (uint64_t)&v53 - v16;
  if (a2)
  {
    uint64_t v18 = *(void *)(a2 + 72);
    uint64_t v17 = *(void *)(a2 + 80);
    sub_100008F88((void *)(a2 + 48), v18);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 24))(v59, v18, v17);
    uint64_t v19 = sub_10014088C(a1);
    Swift::String v21 = v20;
    *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v22 = sub_100004010(&qword_100388990);
    sub_10013FF7C(v59, a2, v53, v19, v21, (uint64_t)&v8[*(int *)(v22 + 44)]);
    swift_bridgeObjectRelease();
    id v23 = *(id *)(a2 + 112);
    LOBYTE(v21) = static UIContentSizeCategory.>= infix(_:_:)();

    double v24 = 0.0;
    if ((v21 & 1) == 0)
    {
      uint64_t v25 = v60;
      uint64_t v26 = v61;
      sub_100008F88(v59, v60);
      double v24 = (*(double (**)(uint64_t, uint64_t))(v26 + 120))(v25, v26);
    }
    id v27 = *(id *)(a2 + 112);
    char v28 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v28)
    {
      double v29 = INFINITY;
    }
    else
    {
      uint64_t v30 = v60;
      uint64_t v31 = v61;
      sub_100008F88(v59, v60);
      double v29 = (*(double (**)(uint64_t, uint64_t))(v31 + 120))(v30, v31);
    }
    static Alignment.center.getter();
    if (v24 > v29)
    {
      static os_log_type_t.fault.getter();
      uint64_t v32 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v8, (uint64_t)v10, &qword_100388970);
    uint64_t v33 = &v10[*(int *)(v54 + 36)];
    long long v34 = v67;
    *((_OWORD *)v33 + 4) = v66;
    *((_OWORD *)v33 + 5) = v34;
    *((_OWORD *)v33 + 6) = v68;
    long long v35 = v63;
    *(_OWORD *)uint64_t v33 = v62;
    *((_OWORD *)v33 + 1) = v35;
    long long v36 = v65;
    *((_OWORD *)v33 + 2) = v64;
    *((_OWORD *)v33 + 3) = v36;
    sub_10000950C((uint64_t)v8, &qword_100388970);
    char v37 = static Edge.Set.top.getter();
    uint64_t v38 = v60;
    uint64_t v39 = v61;
    sub_100008F88(v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v39 + 128))(v38, v39);
    EdgeInsets.init(_all:)();
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    uint64_t v47 = v46;
    sub_10000D2A0((uint64_t)v10, (uint64_t)v12, &qword_100388978);
    uint64_t v48 = &v12[*(int *)(v55 + 36)];
    *uint64_t v48 = v37;
    *((void *)v48 + 1) = v41;
    *((void *)v48 + 2) = v43;
    *((void *)v48 + 3) = v45;
    *((void *)v48 + 4) = v47;
    v48[40] = 0;
    sub_10000950C((uint64_t)v10, &qword_100388978);
    char v49 = static Edge.Set.bottom.getter();
    sub_10000D2A0((uint64_t)v12, (uint64_t)v15, &qword_100388980);
    uint64_t v50 = &v15[*(int *)(v56 + 36)];
    *uint64_t v50 = v49;
    *(_OWORD *)(v50 + 8) = 0u;
    *(_OWORD *)(v50 + 24) = 0u;
    v50[40] = 1;
    sub_10000950C((uint64_t)v12, &qword_100388980);
    uint64_t v51 = v57;
    sub_10000D544((uint64_t)v15, v57, &qword_100388988);
    sub_10000D544(v51, v58, &qword_100388988);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v59);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100136E18((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013FF7C@<X0>(void *a1@<X0>, uint64_t a2@<X3>, NSString *a3@<X4>, uint64_t a4@<X5>, void *a5@<X6>, uint64_t a6@<X8>)
{
  v91._uint64_t countAndFlagsBits = a4;
  v91._object = a5;
  UIContentSizeCategory v96 = a3;
  uint64_t v97 = a2;
  uint64_t v93 = a6;
  uint64_t v7 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v90 = &v82[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for AccessibilityTraits();
  uint64_t v87 = *(void *)(v9 - 8);
  uint64_t v88 = v9;
  __chkstk_darwin(v9);
  long long v85 = &v82[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100004010(&qword_100385968);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v94 = &v82[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  long long v86 = &v82[-v15];
  __chkstk_darwin(v14);
  uint64_t v95 = &v82[-v16];
  LocalizedStringKey.init(stringLiteral:)();
  int v89 = "nce via Satellite";
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  uint64_t v92 = a1;
  sub_100008F88(a1, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 152))(v22, v23);
  uint64_t v24 = Text.font(_:)();
  uint64_t v26 = v25;
  int v83 = v27;
  uint64_t v84 = v28;
  swift_release();
  sub_100033364(v17, v19, v21);
  uint64_t v29 = v97;
  swift_bridgeObjectRelease();
  if (v29)
  {
    id v30 = *(id *)(v29 + 112);
    char v31 = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v32 = (v31 & 1) == 0;
    uint64_t KeyPath = swift_getKeyPath();
    id v34 = *(id *)(v29 + 112);
    static Alignment.center.getter();
    UIContentSizeCategory v96 = UIContentSizeCategoryAccessibilityExtraLarge;
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v144 = v24;
    uint64_t v145 = v26;
    char v35 = v83 & 1;
    char v146 = v83 & 1;
    uint64_t v147 = v84;
    uint64_t v148 = KeyPath;
    BOOL v149 = v32;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v136, 0.0, 1, 0.0, 1);
    sub_100033364(v24, v26, v35);
    swift_release();
    swift_bridgeObjectRelease();
    id v36 = *(id *)(v97 + 112);
    char v37 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v37) {
      double v38 = 1.0;
    }
    else {
      double v38 = 0.5;
    }
    uint64_t v39 = swift_getKeyPath();
    long long v117 = v136[6];
    long long v118 = v136[7];
    long long v119 = v136[8];
    long long v120 = v136[9];
    long long v113 = v136[2];
    long long v114 = v136[3];
    long long v115 = v136[4];
    long long v116 = v136[5];
    long long v111 = v136[0];
    long long v112 = v136[1];
    *(void *)&long long v121 = v39;
    *((double *)&v121 + 1) = v38;
    uint64_t v40 = v85;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100385988);
    sub_1000C57C0();
    uint64_t v41 = (uint64_t)v86;
    View.accessibility(addTraits:)();
    (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v40, v88);
    v137[8] = v119;
    v137[9] = v120;
    v137[10] = v121;
    v137[4] = v115;
    v137[5] = v116;
    v137[6] = v117;
    unsigned char v137[7] = v118;
    v137[0] = v111;
    v137[1] = v112;
    v137[2] = v113;
    v137[3] = v114;
    sub_100043A24((uint64_t)v137);
    sub_10000D544(v41, (uint64_t)v95, &qword_100385968);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v42._object = (void *)0x80000001002CF860;
    v42._uint64_t countAndFlagsBits = 0x1000000000000041;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v42);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v91);
    v43._uint64_t countAndFlagsBits = 0x1000000000000056;
    v43._object = (void *)0x80000001002CF8B0;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v43);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v44 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v46 = v45;
    char v48 = v47 & 1;
    uint64_t v49 = v92[3];
    uint64_t v50 = v92[4];
    sub_100008F88(v92, v49);
    (*(void (**)(uint64_t, uint64_t))(v50 + 160))(v49, v50);
    uint64_t v51 = Text.font(_:)();
    uint64_t v53 = v52;
    LODWORD(v91._object) = v54;
    uint64_t v92 = v55;
    swift_release();
    sub_100033364(v44, v46, v48);
    swift_bridgeObjectRelease();
    uint64_t v56 = v97;
    id v57 = *(id *)(v97 + 112);
    char v58 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v59 = swift_getKeyPath();
    id v60 = *(id *)(v56 + 112);
    static Alignment.center.getter();
    if ((static UIContentSizeCategory.>= infix(_:_:)() & 1) != 0
      && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)() & 1) != 0))
    {
      uint64_t v61 = v59;
      static Alignment.leading.getter();
    }
    else
    {
      uint64_t v61 = v59;
    }

    char v62 = (uint64_t)v91._object & 1;
    uint64_t v138 = v51;
    uint64_t v139 = v53;
    char v140 = (uint64_t)v91._object & 1;
    long long v141 = v92;
    uint64_t v142 = v61;
    BOOL v143 = (v58 & 1) == 0;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v126, 0.0, 1, 0.0, 1);
    sub_100033364(v51, v53, v62);
    swift_release();
    swift_bridgeObjectRelease();
    id v63 = *(id *)(v97 + 112);
    char v64 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v64) {
      double v65 = 1.0;
    }
    else {
      double v65 = 0.5;
    }
    uint64_t v66 = swift_getKeyPath();
    char v67 = static Edge.Set.top.getter();
    char v98 = 1;
    long long v68 = v94;
    Swift::String v69 = v95;
    sub_10000D2A0((uint64_t)v95, (uint64_t)v94, &qword_100385968);
    char v70 = v98;
    uint64_t v71 = v93;
    sub_10000D2A0((uint64_t)v68, v93, &qword_100385968);
    char v72 = (_OWORD *)(v71 + *(int *)(sub_100004010(&qword_100388998) + 48));
    long long v105 = v132;
    long long v106 = v133;
    long long v107 = v134;
    long long v108 = v135;
    long long v103 = v130;
    long long v104 = v131;
    long long v101 = v128;
    long long v73 = v128;
    long long v102 = v129;
    long long v99 = v126;
    long long v100 = v127;
    *(void *)&long long v109 = v66;
    *((double *)&v109 + 1) = v65;
    LOBYTE(v110[0]) = v67;
    long long v74 = v133;
    v72[6] = v132;
    v72[7] = v74;
    long long v75 = v108;
    v72[8] = v107;
    v72[9] = v75;
    long long v76 = v102;
    long long v77 = v103;
    long long v78 = v104;
    v72[2] = v73;
    v72[3] = v76;
    *(_OWORD *)((char *)v110 + 8) = 0u;
    *(_OWORD *)((char *)&v110[1] + 8) = 0u;
    BYTE8(v110[2]) = v70;
    v72[4] = v77;
    v72[5] = v78;
    long long v79 = v100;
    _OWORD *v72 = v99;
    v72[1] = v79;
    long long v80 = v110[0];
    v72[10] = v109;
    v72[11] = v80;
    v72[12] = v110[1];
    *(_OWORD *)((char *)v72 + 201) = *(_OWORD *)((char *)&v110[1] + 9);
    sub_1000439C8((uint64_t)&v99);
    sub_10000950C((uint64_t)v69, &qword_100385968);
    long long v117 = v132;
    long long v118 = v133;
    long long v119 = v134;
    long long v120 = v135;
    long long v113 = v128;
    long long v114 = v129;
    long long v115 = v130;
    long long v116 = v131;
    long long v111 = v126;
    long long v112 = v127;
    *(void *)&long long v121 = v66;
    *((double *)&v121 + 1) = v65;
    char v122 = v67;
    long long v123 = 0u;
    long long v124 = 0u;
    char v125 = v70;
    sub_100043A24((uint64_t)&v111);
    return sub_10000950C((uint64_t)v68, &qword_100385968);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100136E18((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100140880@<X0>(uint64_t a1@<X8>)
{
  return sub_10013F9DC(*(void *)v1, *(void *)(v1 + 16), *(NSString **)(v1 + 24), a1);
}

uint64_t sub_10014088C(uint64_t a1)
{
  if (a1)
  {
    if (*(unsigned char *)(a1 + 248) == 3 || (*(unsigned char *)(a1 + 216) & 1) != 0)
    {
      id v6 = [self mainBundle];
LABEL_8:
      id v7 = v6;
      v8._uint64_t countAndFlagsBits = 0xD000000000000013;
      v15._uint64_t countAndFlagsBits = 0xD000000000000038;
      v15._object = (void *)0x80000001002CB630;
      v8._object = (void *)0x80000001002C7F70;
      v9.value._object = (void *)0x80000001002C7760;
      v9.value._uint64_t countAndFlagsBits = 0xD000000000000012;
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v15)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    uint64_t v2 = *(void *)(a1 + 208);
    swift_beginAccess();
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4)
    {
      unint64_t v5 = v4;
      if (!*(void *)(v4 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      unint64_t v5 = sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
      if (!*(void *)(v5 + 16))
      {
LABEL_13:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v6 = [self mainBundle];
        goto LABEL_8;
      }
    }
    uint64_t v13 = sub_1001C92C8(v2, v3);
    if (v14)
    {
      uint64_t countAndFlagsBits = *(void *)(*(void *)(v5 + 56) + 40 * v13 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return countAndFlagsBits;
    }
    goto LABEL_13;
  }
  type metadata accessor for RoadsideAssistanceModel();
  sub_100136E18(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100140A6C()
{
  return sub_100140AB0(&qword_1003889A0, &qword_100388988, (void (*)(void))sub_100140B2C);
}

uint64_t sub_100140AB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100140B2C()
{
  return sub_100140AB0(&qword_1003889A8, &qword_100388980, (void (*)(void))sub_100140B5C);
}

unint64_t sub_100140B5C()
{
  unint64_t result = qword_1003889B0;
  if (!qword_1003889B0)
  {
    sub_1000094C4(&qword_100388978);
    sub_100009B18(&qword_1003889B8, &qword_100388970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003889B0);
  }
  return result;
}

uint64_t sub_100140BFC(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

void *sub_100140C20()
{
  uint64_t v1 = v0;
  type metadata accessor for CoreAnalyticsAgent();
  swift_allocObject();
  uint64_t v2 = sub_1001B6698();
  v0[2] = v2;
  sub_100004010(&qword_100388B08);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1002BBA80;
  uint64_t v4 = type metadata accessor for AnalyticsObstruction();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(unsigned char *)(v5 + 72) = 1;
  *(_WORD *)(v5 + 73) = 512;
  *(void *)(v5 + 16) = v2;
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = &off_10035E0B8;
  *(void *)(v3 + 32) = v5;
  uint64_t v6 = type metadata accessor for AnalyticsQuestionnaireProgressTiming(0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7 + OBJC_IVAR____TtC8SOSBuddy36AnalyticsQuestionnaireProgressTiming_data;
  uint64_t v9 = _s8SOSBuddy4DataVMa_1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = v7 + OBJC_IVAR____TtC8SOSBuddy36AnalyticsQuestionnaireProgressTiming_currentQuestionnaireId;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  *(void *)(v7 + 16) = v2;
  *(void *)(v3 + 96) = v6;
  *(void *)(v3 + 104) = &off_1003570D8;
  *(void *)(v3 + 72) = v7;
  uint64_t v11 = v1[2];
  uint64_t v12 = type metadata accessor for AnalyticsSatelliteConnectionAttempt(0);
  swift_allocObject();
  uint64_t v13 = sub_100265D7C(v11);
  *(void *)(v3 + 136) = v12;
  *(void *)(v3 + 144) = &off_100361540;
  *(void *)(v3 + 112) = v13;
  uint64_t v14 = v1[2];
  uint64_t v15 = type metadata accessor for AnalyticsSatelliteConnectionStats();
  swift_allocObject();
  uint64_t v16 = sub_100084B8C(v14);
  *(void *)(v3 + 176) = v15;
  *(void *)(v3 + 184) = &off_100352A30;
  *(void *)(v3 + 152) = v16;
  uint64_t v17 = v1[2];
  uint64_t v18 = type metadata accessor for AnalyticsSessionStart(0);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  uint64_t v21 = _s8SOSBuddy4DataVMa_2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = v19 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentTarget;
  *(_OWORD *)uint64_t v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(void *)(v22 + 32) = 0;
  *(unsigned char *)(v22 + 40) = 1;
  *(void *)(v19 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentSuggestedActions) = _swiftEmptySetSingleton;
  uint64_t v23 = v19 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentLinkState;
  uint64_t v24 = type metadata accessor for LinkState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(void *)(v19 + 16) = v17;
  *(void *)(v3 + 216) = v18;
  *(void *)(v3 + 224) = &off_1003596E8;
  *(void *)(v3 + 192) = v19;
  uint64_t v25 = v1[2];
  uint64_t started = type metadata accessor for AnalyticsStartMessage(0);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v27 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_data;
  uint64_t v29 = type metadata accessor for Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = v27 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsStartMessage_currentTarget;
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(void *)(v30 + 32) = 0;
  *(unsigned char *)(v30 + 40) = 1;
  *(void *)(v27 + 16) = v25;
  *(void *)(v3 + 256) = started;
  *(void *)(v3 + 264) = &off_100351BD0;
  *(void *)(v3 + 232) = v27;
  uint64_t v31 = v1[2];
  uint64_t v32 = type metadata accessor for AnalyticsStateRetention(0);
  swift_allocObject();
  uint64_t v33 = sub_1000A4FB8(v31);
  *(void *)(v3 + 296) = v32;
  *(void *)(v3 + 304) = &off_1003542A8;
  *(void *)(v3 + 272) = v33;
  v1[3] = v3;
  uint64_t v34 = v1[2];
  type metadata accessor for AnalyticsEntryPoint();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  v1[4] = v35;
  uint64_t v36 = qword_10037DD80;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_10000FD84(v37, (uint64_t)qword_1003A9958);
  swift_retain_n();
  double v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136446210;
    type metadata accessor for Analytics();
    swift_retain();
    uint64_t v41 = String.init<A>(describing:)();
    sub_1001B3178(v41, v42, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "[%{public}s] init", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_1001411BC()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for Analytics();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_10014139C()
{
  sub_1001411BC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Analytics()
{
  return self;
}

uint64_t sub_1001413F4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000090FC(v3, (uint64_t)v7);
      uint64_t v4 = v8;
      uint64_t v5 = v9;
      sub_100008F88(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v5 + 112))(v4, v5);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v7);
      v3 += 40;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10014149C()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  uint64_t v4 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v5 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v6 = _dispatchPreconditionTest(_:)();
  unint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8);
  uint64_t result = v7(v3, v0);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  v5(v3, v4, v0);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = v7(v3, v0);
  if ((v9 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_100141608(uint64_t a1)
{
  if (sub_100078E0C(0, a1)) {
    return 0x636E656772656D45;
  }
  if (sub_100078E0C(1, a1)) {
    return 4281170;
  }
  if (sub_100078E0C(4, a1)) {
    return 0x794D646E6946;
  }
  if (sub_100078E0C(2, a1)) {
    return 0x6E6967617373654DLL;
  }
  if (sub_100078E0C(3, a1)) {
    return 0x74756F797254;
  }
  return 0;
}

ValueMetadata *type metadata accessor for AnalyticsConversationId()
{
  return &type metadata for AnalyticsConversationId;
}

uint64_t getEnumTagSinglePayload for AnalyticsConversationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 40) & 0x7E | (*(unsigned __int8 *)(a1 + 40) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AnalyticsConversationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 40) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1001417B4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40) >> 7;
}

uint64_t sub_1001417C0(uint64_t result)
{
  *(unsigned char *)(result + 40) &= ~0x80u;
  return result;
}

uint64_t sub_1001417D0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = *(unsigned char *)(result + 40) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsConversationState()
{
  return &type metadata for AnalyticsConversationState;
}

uint64_t sub_1001417F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7 = a7 >> 62;
  if (!(a7 >> 62) || v7 == 2 || v7 == 1) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for AnalyticsRequestContext(uint64_t a1)
{
  return sub_100141838(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48));
}

uint64_t sub_100141838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7 = a7 >> 62;
  if (!(a7 >> 62) || v7 == 2 || v7 == 1) {
    return swift_release();
  }
  return result;
}

uint64_t *initializeWithCopy for AnalyticsRequestContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  sub_1001417F4(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for AnalyticsRequestContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  sub_1001417F4(*a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  uint64_t v15 = a1[5];
  unint64_t v16 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_100141838(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for AnalyticsRequestContext(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  unint64_t v10 = a1[6];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_100141838(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsRequestContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >> 1 >= 0xFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 8190);
  }
  unsigned int v3 = (((*(void *)(a1 + 48) >> 51) >> 11) | (4
                                                            * ((*(void *)(a1 + 48) >> 51) & 0x600 | ((*(void *)(a1 + 48) & 7) << 6) | (*(void *)(a1 + 40) >> 58) & 0x3C | (*(void *)(a1 + 40) >> 1) & 3))) ^ 0x1FFF;
  if (v3 >= 0x1FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AnalyticsRequestContext(uint64_t result, unsigned int a2, unsigned int a3, double a4, uint64x2_t a5)
{
  if (a2 >> 1 > 0xFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 8190;
    if (a3 >> 1 >= 0xFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >> 1 >= 0xFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2)
    {
      uint64x2_t v5 = (uint64x2_t)vdupq_n_s64((-a2 >> 2) & 0x7FF | ((-a2 & 0x1FFF) << 11));
      a5.i64[0] = (-a2 >> 2) & 0x7FF | ((-a2 & 0x1FFF) << 11);
      v6.i64[0] = vshlq_u64(a5, (uint64x2_t)xmmword_1002BBA90).u64[0];
      v6.i64[1] = vshlq_u64(v5, (uint64x2_t)xmmword_1002BBAA0).i64[1];
      *(void *)(result + 32) = 0;
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(int8x16_t *)(result + 40) = vorrq_s8(vandq_s8(v6, (int8x16_t)xmmword_1002BBAB0), vandq_s8((int8x16_t)vshlq_u64(v5, (uint64x2_t)xmmword_1002BBAC0), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
    }
  }
  return result;
}

uint64_t sub_100141AFC(uint64_t a1)
{
  return *(void *)(a1 + 48) >> 62;
}

uint64_t sub_100141B08(uint64_t result)
{
  *(void *)(result + 48) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100141B18(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  *(void *)(result + 40) &= 0xFFFFFFFFFFFFFF9uLL;
  *(void *)(result + 48) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsRequestContext()
{
  return &type metadata for AnalyticsRequestContext;
}

id sub_100141C3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WeakCADisplayLinkTarget();
  return [super dealloc];
}

uint64_t type metadata accessor for WeakCADisplayLinkTarget()
{
  return self;
}

uint64_t sub_100141CA4()
{
  uint64_t result = 0x747865742ELL;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x7465446C6C61662ELL;
      break;
    case 3:
      uint64_t result = 0x617070616B2ELL;
      break;
    default:
      uint64_t result = 0x6C6C61632ELL;
      break;
  }
  return result;
}

uint64_t sub_100141D30()
{
  if (*v0) {
    return 0x7474696D6D6F632ELL;
  }
  else {
    return 0x6D6D6F43746F6E2ELL;
  }
}

uint64_t sub_100141DA4()
{
  return sub_100141DCC();
}

uint64_t sub_100141DCC()
{
  v0._uint64_t countAndFlagsBits = 0x203A646928;
  v0._object = (void *)0xE500000000000000;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 8236;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0;
}

uint64_t sub_100141E9C()
{
  return sub_100141DCC();
}

unint64_t sub_100141EC4(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75646F72746E692ELL;
      break;
    case 2:
      unint64_t result = 0x6F6974736575712ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6F5479646165722ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100141F98()
{
  return sub_100141EC4(*v0);
}

uint64_t sub_100141FA0()
{
  return sub_10014353C(*(unsigned char *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100141FB0()
{
  unint64_t v1 = 0xD000000000000015;
  uint64_t v2 = type metadata accessor for ConnectionClosed(0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v5);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100143698(v0, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10002D1E8((uint64_t)v7, (uint64_t)v4);
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(39);
      v10._uint64_t countAndFlagsBits = 0xD000000000000024;
      v10._object = (void *)0x80000001002CFB20;
      String.append(_:)(v10);
      _print_unlocked<A, B>(_:_:)();
      v11._uint64_t countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      unint64_t v1 = v22;
      sub_10002D24C((uint64_t)v4);
      return v1;
    case 2u:
      char v12 = *v7;
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(30);
      v13._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v13._object = (void *)0x80000001002CFB00;
      String.append(_:)(v13);
      char v21 = v12;
      goto LABEL_5;
    case 3u:
      int v14 = *v7;
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(35);
      swift_bridgeObjectRelease();
      unint64_t v22 = 0xD000000000000020;
      unint64_t v23 = 0x80000001002CFAD0;
      if (v14) {
        uint64_t v15 = 1702195828;
      }
      else {
        uint64_t v15 = 0x65736C6166;
      }
      if (v14) {
        unint64_t v16 = 0xE400000000000000;
      }
      else {
        unint64_t v16 = 0xE500000000000000;
      }
      unint64_t v17 = v16;
      String.append(_:)(*(Swift::String *)&v15);
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 4u:
      return v1;
    case 5u:
      return 0x65726F6C7078652ELL;
    default:
      char v8 = *v7;
      unint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      v9._uint64_t countAndFlagsBits = 0xD000000000000016;
      v9._object = (void *)0x80000001002CFB50;
      String.append(_:)(v9);
      char v21 = v8;
LABEL_5:
      _print_unlocked<A, B>(_:_:)();
LABEL_13:
      v18._uint64_t countAndFlagsBits = 41;
      v18._object = (void *)0xE100000000000000;
      String.append(_:)(v18);
      return v22;
  }
}

uint64_t sub_1001422B8()
{
  uint64_t v1 = 0x6C616D696E696D2ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D6F747375632ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746361706D6F632ELL;
  }
}

uint64_t sub_100142314()
{
  uint64_t v1 = (double *)v0;
  _StringGuts.grow(_:)(65);
  v2._uint64_t countAndFlagsBits = 0x203A657A697328;
  v2._object = (void *)0xE700000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = sub_1000FC35C(2, *v1, v1[1]);
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x80000001002CFB70;
  v4._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = sub_100102D08(2, v1[2], v1[3], v1[4], v1[5]);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x646E61707865202CLL;
  v6._object = (void *)0xEC000000203A6465;
  String.append(_:)(v6);
  if (*(unsigned char *)(v0 + 48)) {
    uint64_t v7 = 1702195828;
  }
  else {
    uint64_t v7 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 48)) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  unint64_t v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x80000001002CFB90;
  String.append(_:)(v10);
  sub_1001436FC(v0);
  sub_100143728();
  v11._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_10014377C(v0);
  v12._uint64_t countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0;
}

uint64_t sub_1001424BC()
{
  return sub_100142314();
}

uint64_t sub_1001424F8(char a1)
{
  BOOL v1 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v2 = 1702195828;
  }
  else {
    uint64_t v2 = 0x65736C6166;
  }
  if (v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  else {
    unint64_t v3 = 0xE400000000000000;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 0x65646E6170786528;
}

uint64_t sub_10014258C()
{
  return sub_1001424F8(*v0);
}

unint64_t sub_100142594(char a1)
{
  unint64_t result = 0x716552726573752ELL;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100142650()
{
  return sub_100142594(*v0);
}

uint64_t sub_100142658()
{
  if (*v0 == 5) {
    return 7237422;
  }
  v2._uint64_t countAndFlagsBits = 0x2866666F2ELL;
  v2._object = (void *)0xE500000000000000;
  String.append(_:)(v2);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0;
}

unint64_t sub_1001426F4()
{
  unint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6E616C707269612ELL;
      break;
    case 3:
      unint64_t result = 0x747365676E6F632ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100142798()
{
  uint64_t result = 0x6E656772656D652ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64697364616F722ELL;
      break;
    case 2:
      uint64_t result = 0x6967617373656D2ELL;
      break;
    case 3:
      uint64_t result = 0x74754F7972742ELL;
      break;
    case 4:
      uint64_t result = 0x794D646E69662ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100142850()
{
  uint64_t v1 = 0x696C6C657461732ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E7265746E692ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E752ELL;
  }
}

unint64_t sub_1001428B4(char a1)
{
  unint64_t result = 0x716552726573752ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x794D646E69662ELL;
      break;
    case 2:
      unint64_t result = 0x6E616C707269612ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6E656772656D652ELL;
      break;
    case 5:
    case 6:
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x65766F646E61682ELL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100142A44()
{
  return sub_1001428B4(*v0);
}

uint64_t sub_100142A4C()
{
  _StringGuts.grow(_:)(28);
  v0._uint64_t countAndFlagsBits = 0x676E696461656828;
  v0._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v0);
  _print_unlocked<A, B>(_:_:)();
  v1._uint64_t countAndFlagsBits = 0x746176656C65202CLL;
  v1._object = (void *)0xED0000203A6E6F69;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0;
}

uint64_t sub_100142B80()
{
  return sub_100142A4C();
}

uint64_t sub_100142B88()
{
  uint64_t v1 = 0x617470656363612ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x646F6F672ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6375727473626F2ELL;
  }
}

uint64_t sub_100142BF0()
{
  return 0x72676F72506E692ELL;
}

unint64_t sub_100142C10(char a1)
{
  unint64_t result = 0x654D74726174732ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73654D747865742ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100142D0C()
{
  return sub_100142C10(*v0);
}

uint64_t sub_100142D14()
{
  uint64_t v1 = 0x73654D747865742ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F697461636F6C2ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x654D74726174732ELL;
  }
}

uint64_t sub_100142D90()
{
  uint64_t result = 0x676E6F43746F6E2ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746867696C2ELL;
      break;
    case 2:
      uint64_t result = 0x74617265646F6D2ELL;
      break;
    case 3:
      uint64_t result = 0x6572657665732ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100142E2C(char a1)
{
  unint64_t result = 0x7463656E6E6F632ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6E6E6F43746F6E2ELL;
      break;
    case 3:
      unint64_t result = 0x69636E797365722ELL;
      break;
    case 4:
      unint64_t result = 0x656E6E6F6365722ELL;
      break;
    case 5:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x656369767265732ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100142F74()
{
  return sub_100142E2C(*v0);
}

unint64_t sub_100142F7C()
{
  unint64_t result = 0x736F507065656B2ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x66654C6E7275742ELL;
      break;
    case 2:
      unint64_t result = 0x6769526E7275742ELL;
      break;
    case 3:
      unint64_t result = 0x6F72416E7275742ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100143048(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = 0x287265746E6563;
    unint64_t v3 = 0xE700000000000000;
  }
  else
  {
    uint64_t v2 = 678457204;
    unint64_t v3 = 0xE400000000000000;
  }
  String.append(_:)(*(Swift::String *)&v2);
  Double.write<A>(to:)();
  v4._uint64_t countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0;
}

uint64_t sub_1001430EC()
{
  return sub_100143048(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1001430F8(double a1, double a2, double a3, double a4)
{
  _StringGuts.grow(_:)(56);
  v8._uint64_t countAndFlagsBits = 0x6165724165666173;
  v8._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v8);
  if (round(a1 * 100.0) / 100.0 == a1)
  {
    uint64_t v9 = Double.description.getter();
    unint64_t v11 = v10;
  }
  else
  {
    v12._uint64_t countAndFlagsBits = 126;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    Double.write<A>(to:)();
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  unint64_t v13 = v11;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v14._object = (void *)0xEC000000203A6576;
  v14._uint64_t countAndFlagsBits = 0x697463616E69202CLL;
  String.append(_:)(v14);
  if (round(a2 * 100.0) / 100.0 == a2)
  {
    uint64_t v15 = Double.description.getter();
    unint64_t v17 = v16;
  }
  else
  {
    v18._uint64_t countAndFlagsBits = 126;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    Double.write<A>(to:)();
    uint64_t v15 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  unint64_t v19 = v17;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0x63656E6E6F63202CLL;
  v20._object = (void *)0xEE00203A676E6974;
  String.append(_:)(v20);
  if (round(a3 * 100.0) / 100.0 == a3)
  {
    uint64_t v21 = Double.description.getter();
    unint64_t v23 = v22;
  }
  else
  {
    v24._uint64_t countAndFlagsBits = 126;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    Double.write<A>(to:)();
    uint64_t v21 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  unint64_t v25 = v23;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 0x656C706D6F63202CLL;
  v26._object = (void *)0xEC000000203A6574;
  String.append(_:)(v26);
  if (round(a4 * 100.0) / 100.0 == a4)
  {
    uint64_t v27 = Double.description.getter();
    unint64_t v29 = v28;
  }
  else
  {
    v30._uint64_t countAndFlagsBits = 126;
    v30._object = (void *)0xE100000000000000;
    String.append(_:)(v30);
    Double.write<A>(to:)();
    uint64_t v27 = 0;
    unint64_t v29 = 0xE000000000000000;
  }
  unint64_t v31 = v29;
  String.append(_:)(*(Swift::String *)&v27);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1001433DC()
{
  return sub_1001430F8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1001433E8()
{
  sub_1001437A8(v0, (uint64_t)v9);
  if (v10)
  {
    uint64_t v8 = 0x657263536C6C7566;
    uint64_t v1 = sub_1001430F8(v9[0], v9[1], v9[2], v9[3]);
  }
  else
  {
    uint64_t v8 = 0x2872656E6E6162;
    if (v9[0] == round(v9[0] * 100.0) / 100.0)
    {
      uint64_t v1 = Double.description.getter();
      unint64_t v4 = v3;
    }
    else
    {
      v5._uint64_t countAndFlagsBits = 126;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      Double.write<A>(to:)();
      uint64_t v1 = 0;
      unint64_t v4 = 0xE000000000000000;
    }
    unint64_t v2 = v4;
  }
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v8;
}

uint64_t sub_100143504()
{
  sub_1001437A8(v0, (uint64_t)v2);
  return sub_1001433E8();
}

uint64_t sub_10014353C(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1 == 2)
  {
    if (!a2) {
      return 4144465;
    }
    uint64_t v15 = 15697;
    if (a4)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void **)(a2 + 24);
      sub_10009049C(a2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8._uint64_t countAndFlagsBits = v6;
      v8._object = v7;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._uint64_t countAndFlagsBits = 43;
      v9._object = (void *)0xE100000000000000;
      String.append(_:)(v9);
      v10._uint64_t countAndFlagsBits = a3;
      v10._object = a4;
      String.append(_:)(v10);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 16);
      unint64_t v13 = *(void **)(a2 + 24);
      sub_10009049C(a2);
      swift_bridgeObjectRetain();
      v14._uint64_t countAndFlagsBits = v12;
      v14._object = v13;
      String.append(_:)(v14);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = 0;
    _print_unlocked<A, B>(_:_:)();
  }
  return v15;
}

uint64_t sub_100143698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001436FC(uint64_t a1)
{
  return a1;
}

unint64_t sub_100143728()
{
  unint64_t result = qword_100388B40;
  if (!qword_100388B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388B40);
  }
  return result;
}

uint64_t sub_10014377C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001437A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for BuiltInSelectRoadsideProviderContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for BuiltInSelectRoadsideProviderContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BuiltInSelectRoadsideProviderContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for BuiltInSelectRoadsideProviderContentView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for BuiltInSelectRoadsideProviderContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltInSelectRoadsideProviderContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInSelectRoadsideProviderContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInSelectRoadsideProviderContentView()
{
  return &type metadata for BuiltInSelectRoadsideProviderContentView;
}

uint64_t sub_100143B88()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100143BA4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_1001BF784(0, v1, 0);
  __n128 result = (void *)sub_1000D738C(v2);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  uint64_t v23 = v2 + 80;
  int64_t v24 = v1;
  int v25 = v4;
  uint64_t v26 = v2 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v27 = v6;
    uint64_t v11 = *(void *)(v2 + 56) + 40 * v5;
    uint64_t v12 = *(void *)(v11 + 16);
    uint64_t v30 = *(void *)(v11 + 8);
    uint64_t v31 = *(void *)v11;
    char v28 = *(unsigned char *)(v11 + 25);
    char v29 = *(unsigned char *)(v11 + 24);
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v14 = v2;
    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v15 = _swiftEmptyArrayStorage[3];
    swift_bridgeObjectRetain();
    __n128 result = (void *)swift_bridgeObjectRetain();
    if (v16 >= v15 >> 1) {
      __n128 result = (void *)sub_1001BF784(v15 > 1, v16 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    unint64_t v17 = &_swiftEmptyArrayStorage[5 * v16];
    v17[4] = v31;
    v17[5] = v30;
    void v17[6] = v12;
    *((unsigned char *)v17 + 56) = v29;
    *((unsigned char *)v17 + 57) = v28;
    v17[8] = v13;
    int64_t v8 = 1 << *(unsigned char *)(v14 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = v26;
    uint64_t v18 = *(void *)(v26 + 8 * v10);
    if ((v18 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    uint64_t v2 = v14;
    int v4 = v25;
    if (*(_DWORD *)(v14 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v5 & 0x3F));
    if (v19)
    {
      int64_t v8 = __clz(__rbit64(v19)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v24;
    }
    else
    {
      unint64_t v20 = v10 + 1;
      unint64_t v21 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v24;
      if (v10 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v10)
          {
            unint64_t v22 = *(void *)(v23 + 8 * v10++);
            if (v22)
            {
              unint64_t v20 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v27 + 1;
    uint64_t v5 = v8;
    if (v27 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_100143E04(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001D6E34(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100146108(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100143E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004010(&qword_100388B48);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100388B50);
  __chkstk_darwin(v6);
  int64_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void **)(v1 + 32);
  if (v9)
  {
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    sub_100008F88(v9 + 6, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 24))(v17, v10, v11);
    *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    uint64_t v12 = sub_100004010(&qword_100388B58);
    sub_100144078(v1, v17, (uint64_t)&v5[*(int *)(v12 + 44)]);
    char v13 = static Edge.Set.bottom.getter();
    sub_10000D2A0((uint64_t)v5, (uint64_t)v8, &qword_100388B48);
    uint64_t v14 = &v8[*(int *)(v6 + 36)];
    *uint64_t v14 = v13;
    *(_OWORD *)(v14 + 8) = 0u;
    *(_OWORD *)(v14 + 24) = 0u;
    v14[40] = 1;
    sub_10000950C((uint64_t)v5, &qword_100388B48);
    sub_10000D544((uint64_t)v8, a1, &qword_100388B50);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v17);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100145FA4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100144078@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  long long v116 = a2;
  uint64_t v121 = a3;
  uint64_t v122 = sub_100004010(&qword_100388B60);
  __chkstk_darwin(v122);
  long long v114 = &v98[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004010(&qword_100388B68);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  long long v112 = &v98[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  long long v113 = (uint64_t *)&v98[-v8];
  uint64_t v9 = sub_100004010(&qword_100388B70);
  __chkstk_darwin(v9);
  long long v120 = &v98[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v111 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v12 = &v98[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = sub_100004010(&qword_10037F118);
  uint64_t v13 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  unint64_t v15 = &v98[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100004010(&qword_10037F120);
  uint64_t v17 = __chkstk_darwin(v16);
  unint64_t v19 = &v98[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v23 = &v98[-v22];
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v119 = v20;
    if (*(unsigned char *)(v24 + 250))
    {
      uint64_t v25 = v21;
      ProgressView<>.init<>()();
      CircularProgressViewStyle.init()();
      uint64_t v26 = sub_100009B18(&qword_10037F210, &qword_10037F118);
      uint64_t v27 = (void *)sub_100145FA4(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
      uint64_t v115 = v9;
      long long v116 = v27;
      uint64_t v28 = v117;
      uint64_t v29 = v118;
      View.progressViewStyle<A>(_:)();
      (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v12, v29);
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v28);
      uint64_t v30 = v119;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(v23, v19, v119);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16))(v120, v23, v30);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v130 = v28;
      *((void *)&v130 + 1) = v29;
      *(void *)&long long v131 = v26;
      *((void *)&v131 + 1) = v116;
      swift_getOpaqueTypeConformance2();
      sub_100009B18(&qword_100388BA8, &qword_100388B60);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v23, v30);
    }
    uint64_t v32 = sub_100144F40();
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)(v24 + 136);
    if (!v34)
    {
      sub_100145840((uint64_t)v129);
      sub_10000D544((uint64_t)v129, (uint64_t)&v130, &qword_100388B78);
LABEL_18:
      uint64_t v84 = v116[3];
      uint64_t v85 = v116[4];
      sub_100008F88(v116, v84);
      double v86 = (*(double (**)(uint64_t, uint64_t))(v85 + 232))(v84, v85);
      uint64_t v87 = static HorizontalAlignment.center.getter();
      uint64_t v88 = (uint64_t)v113;
      *long long v113 = v87;
      *(double *)(v88 + 8) = v86;
      *(unsigned char *)(v88 + 16) = 0;
      sub_100004010(&qword_100388B80);
      *(void *)long long v129 = v33;
      swift_getKeyPath();
      int v89 = (_OWORD *)swift_allocObject();
      long long v90 = *(_OWORD *)(a1 + 48);
      v89[3] = *(_OWORD *)(a1 + 32);
      v89[4] = v90;
      long long v91 = *(_OWORD *)(a1 + 80);
      v89[5] = *(_OWORD *)(a1 + 64);
      v89[6] = v91;
      long long v92 = *(_OWORD *)(a1 + 16);
      v89[1] = *(_OWORD *)a1;
      v89[2] = v92;
      sub_1001458E8(a1);
      sub_100004010(&qword_100388B88);
      sub_100009B18(&qword_100388B90, &qword_100388B88);
      sub_100145970();
      ForEach<>.init(_:id:content:)();
      sub_10000D544((uint64_t)&v130, (uint64_t)v127, &qword_100388B78);
      uint64_t v93 = v112;
      sub_10000D2A0(v88, (uint64_t)v112, &qword_100388B68);
      sub_10000D544((uint64_t)v127, (uint64_t)v128, &qword_100388B78);
      uint64_t v94 = v114;
      sub_10000D544((uint64_t)v128, (uint64_t)v114, &qword_100388B78);
      uint64_t v95 = sub_100004010(&qword_100388BA0);
      sub_10000D2A0((uint64_t)v93, (uint64_t)&v94[*(int *)(v95 + 48)], &qword_100388B68);
      sub_100145BF8((uint64_t)&v130, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1001459C4);
      sub_100145BF8((uint64_t)v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1001459C4);
      sub_10000950C((uint64_t)v93, &qword_100388B68);
      sub_10000D544((uint64_t)v127, (uint64_t)v129, &qword_100388B78);
      sub_100145BF8((uint64_t)v129, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100145C94);
      sub_10000D2A0((uint64_t)v94, (uint64_t)v120, &qword_100388B60);
      swift_storeEnumTagMultiPayload();
      uint64_t v96 = sub_100009B18(&qword_10037F210, &qword_10037F118);
      uint64_t v97 = sub_100145FA4(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
      v126[0] = v117;
      v126[1] = v118;
      v126[2] = v96;
      v126[3] = v97;
      swift_getOpaqueTypeConformance2();
      sub_100009B18(&qword_100388BA8, &qword_100388B60);
      _ConditionalContent<>.init(storage:)();
      sub_100145BF8((uint64_t)&v130, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100145C94);
      sub_10000950C((uint64_t)v94, &qword_100388B60);
      return sub_10000950C(v88, &qword_100388B68);
    }
    uint64_t v115 = v9;
    uint64_t v35 = *(void *)(v24 + 144);
    uint64_t v36 = *(void *)(v24 + 152);
    uint64_t v111 = v32;
    uint64_t v38 = *(void *)(v24 + 120);
    uint64_t v37 = *(void *)(v24 + 128);
    LODWORD(v106) = v35 & 1;
    os_log_type_t v39 = self;
    sub_100075EE4(v38, v37, v34);
    swift_bridgeObjectRetain();
    id v40 = [v39 mainBundle];
    v41._uint64_t countAndFlagsBits = 0xD000000000000017;
    v156._uint64_t countAndFlagsBits = 0xD0000000000000AALL;
    v156._object = (void *)0x80000001002CFE60;
    v41._object = (void *)0x80000001002CFE40;
    v42.value._uint64_t countAndFlagsBits = 0xD000000000000012;
    v42.value._object = (void *)0x80000001002C7760;
    v43._uint64_t countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    Swift::String v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v156);
    uint64_t countAndFlagsBits = v44._countAndFlagsBits;
    object = v44._object;

    uint64_t v45 = swift_allocObject();
    uint64_t v46 = v34;
    uint64_t v47 = v45;
    long long v48 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v45 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v45 + 64) = v48;
    long long v49 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v45 + 80) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v45 + 96) = v49;
    long long v50 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v45 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v45 + 32) = v50;
    *(void *)(v45 + 112) = v38;
    *(void *)(v45 + 120) = v37;
    uint64_t v33 = v111;
    uint64_t v108 = v37;
    uint64_t v110 = v46;
    *(void *)(v45 + 128) = v46;
    *(unsigned char *)(v45 + 136) = v106;
    *(unsigned char *)(v45 + 137) = BYTE1(v35) & 1;
    *(void *)(v45 + 144) = v36;
    sub_1001458E8(a1);
    uint64_t v51 = type metadata accessor for UIMetrics();
    uint64_t v52 = sub_100145FA4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v53 = EnvironmentObject.init()();
    uint64_t v55 = v53;
    uint64_t v56 = v54;
    if (!*(void *)(v33 + 16))
    {
      sub_100145F78(&v130);
      sub_10000D544((uint64_t)&v130, (uint64_t)v126, &qword_100388BB0);
LABEL_17:
      sub_10000D544((uint64_t)v126, (uint64_t)v123, &qword_100388BB0);
      sub_10000D544((uint64_t)v123, (uint64_t)v124, &qword_100388BB0);
      v127[0] = v55;
      v127[1] = v56;
      v127[2] = v108;
      v127[3] = v110;
      v127[4] = countAndFlagsBits;
      v127[5] = object;
      LOBYTE(v127[6]) = 0;
      v127[7] = sub_100145ED0;
      v127[8] = v47;
      sub_10000D544((uint64_t)v124, (uint64_t)&v127[9], &qword_100388BB0);
      memcpy(v128, v127, 0x151uLL);
      sub_10000D544((uint64_t)v123, (uint64_t)v125, &qword_100388BB0);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100145EEC((uint64_t)v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000336C0);
      sub_100145EEC((uint64_t)v125, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100033998);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      memcpy(v129, v128, sizeof(v129));
      ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v129);
      sub_10000D544((uint64_t)v129, (uint64_t)&v130, &qword_100388B78);
      goto LABEL_18;
    }
    uint64_t v100 = v52;
    UIContentSizeCategory v102 = (UIContentSizeCategory)v51;
    uint64_t v105 = v54;
    uint64_t v106 = v53;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v57 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v59 = v58;
    char v61 = v60 & 1;
    uint64_t v62 = v116[3];
    uint64_t v63 = v116[4];
    sub_100008F88(v116, v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 160))(v62, v63);
    uint64_t v103 = Text.font(_:)();
    uint64_t v104 = v64;
    uint64_t v66 = v65;
    int v101 = v67;
    swift_release();
    sub_100033364(v57, v59, v61);
    swift_bridgeObjectRelease();
    uint64_t v68 = *(void *)(a1 + 32);
    if (v68)
    {
      id v69 = *(id *)(v68 + 112);
      char v70 = static UIContentSizeCategory.>= infix(_:_:)();

      BOOL v99 = (v70 & 1) == 0;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v100 = v68;
      id v72 = *(id *)(v68 + 112);
      static Alignment.center.getter();
      char v73 = static UIContentSizeCategory.>= infix(_:_:)();
      UIContentSizeCategory v102 = UIContentSizeCategoryAccessibilityExtraLarge;
      if (v73 & 1) != 0 && (static Alignment.center.getter(), (static Alignment.== infix(_:_:)()))
      {
        uint64_t v74 = v66;
        static Alignment.leading.getter();
      }
      else
      {
        uint64_t v74 = v66;
      }

      uint64_t v75 = v103;
      uint64_t v150 = v103;
      uint64_t v151 = v74;
      uint64_t v76 = v74;
      char v77 = v101 & 1;
      char v152 = v101 & 1;
      uint64_t v153 = v104;
      uint64_t v154 = KeyPath;
      BOOL v155 = v99;
      sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v129, 0.0, 1, 0.0, 1);
      sub_100033364(v75, v76, v77);
      swift_release();
      swift_bridgeObjectRelease();
      id v78 = *(id *)(v100 + 112);
      char v79 = static UIContentSizeCategory.>= infix(_:_:)();

      if (v79) {
        double v80 = 1.0;
      }
      else {
        double v80 = 0.5;
      }
      uint64_t v81 = swift_getKeyPath();
      char v82 = static Edge.Set.top.getter();
      LOBYTE(v127[0]) = 1;
      char v83 = static Edge.Set.top.getter();
      v128[0] = 1;
      long long v136 = *(_OWORD *)&v129[96];
      long long v137 = *(_OWORD *)&v129[112];
      long long v138 = *(_OWORD *)&v129[128];
      long long v139 = *(_OWORD *)&v129[144];
      long long v132 = *(_OWORD *)&v129[32];
      long long v133 = *(_OWORD *)&v129[48];
      long long v134 = *(_OWORD *)&v129[64];
      long long v135 = *(_OWORD *)&v129[80];
      long long v130 = *(_OWORD *)v129;
      long long v131 = *(_OWORD *)&v129[16];
      uint64_t v140 = v81;
      double v141 = v80;
      char v142 = v82;
      long long v143 = 0u;
      long long v144 = 0u;
      char v145 = v127[0];
      char v146 = v83;
      long long v147 = 0u;
      long long v148 = 0u;
      char v149 = 1;
      ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(&v130);
      sub_10000D544((uint64_t)&v130, (uint64_t)v126, &qword_100388BB0);
      uint64_t v33 = v111;
      uint64_t v56 = v105;
      uint64_t v55 = v106;
      goto LABEL_17;
    }
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_100145FA4(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    EnvironmentObject.error()();
    __break(1u);
  }
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100144F40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    sub_10000D544(v1 + 120, (uint64_t)v7, &qword_100382448);
    swift_beginAccess();
    if (*(void *)(v1 + 112)) {
      unint64_t v2 = *(void *)(v1 + 112);
    }
    else {
      unint64_t v2 = sub_100285F24((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_1001474EC(v7, (void (*)(void, void, void, void, void))sub_100075EE4);
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_100147270(v2, v7);
    swift_bridgeObjectRelease();
    sub_1001474EC(v7, (void (*)(void, void, void, void, void))sub_100075E64);
    uint64_t v4 = sub_100143BA4(v3);
    swift_release();
    uint64_t v6 = v4;
    swift_bridgeObjectRetain();
    sub_100143E04((uint64_t *)&v6);
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_100145FA4(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    EnvironmentObject.error()();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001450BC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  if (a2)
  {
    uint64_t v9 = self;
    swift_bridgeObjectRetain();
    id v10 = [v9 mainBundle];
    unint64_t v11 = 0xD000000000000017;
    unint64_t v12 = 0xD0000000000000AALL;
    unint64_t v27 = 0x80000001002CFE60;
    uint64_t v13 = "Continue Active Request";
  }
  else
  {
    char v14 = *(unsigned char *)(a1 + 24);
    unint64_t v15 = self;
    swift_bridgeObjectRetain();
    id v10 = [v15 mainBundle];
    if (v14)
    {
      unint64_t v11 = 0xD000000000000018;
      unint64_t v12 = 0xD0000000000000A9;
      unint64_t v27 = 0x80000001002D0110;
      uint64_t v13 = "No Subscription Required";
    }
    else
    {
      unint64_t v11 = 0xD000000000000010;
      unint64_t v12 = 0xD0000000000000AALL;
      unint64_t v27 = 0x80000001002D0040;
      uint64_t v13 = "Subscribers Only";
    }
  }
  unint64_t v16 = (unint64_t)(v13 - 32) | 0x8000000000000000;
  v17.value._object = (void *)0x80000001002C7760;
  v17.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v11, v17, (NSBundle)v10, v18, *(Swift::String *)&v12);

  sub_10000D544(a1 + 32, (uint64_t)v28, &qword_100382450);
  uint64_t v20 = swift_allocObject();
  long long v21 = v4[3];
  *(_OWORD *)(v20 + 48) = v4[2];
  *(_OWORD *)(v20 + 64) = v21;
  long long v22 = v4[5];
  *(_OWORD *)(v20 + 80) = v4[4];
  *(_OWORD *)(v20 + 96) = v22;
  long long v23 = v4[1];
  *(_OWORD *)(v20 + 16) = *v4;
  *(_OWORD *)(v20 + 32) = v23;
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + 112) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 128) = v24;
  *(void *)(v20 + 144) = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1001458E8((uint64_t)v4);
  sub_10003E68C((uint64_t)v28);
  type metadata accessor for UIMetrics();
  sub_100145FA4((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v26;
  *(void *)(a3 + 16) = v8;
  *(void *)(a3 + 24) = v7;
  *(Swift::String *)(a3 + 32) = v19;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = sub_1001475CC;
  *(void *)(a3 + 64) = v20;
  return result;
}

__n128 sub_100145310@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v3;
  uint64_t v15 = *(void *)(a1 + 32);
  sub_1001450BC((uint64_t)v14, 0, (uint64_t)v9);
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  char v6 = v12;
  __n128 result = v13;
  long long v8 = v9[1];
  *(_OWORD *)a2 = v9[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 48) = v6;
  *(__n128 *)(a2 + 56) = result;
  return result;
}

uint64_t sub_10014537C(_OWORD *a1, uint64_t a2)
{
  v11[1] = a1[5];
  sub_100004010(&qword_10037ED78);
  uint64_t result = State.wrappedValue.getter();
  if ((v11[0] & 1) == 0)
  {
    LOBYTE(v11[0]) = 1;
    State.wrappedValue.setter();
    if (*(void *)a1)
    {
      v11[0] = *(_OWORD *)(a2 + 8);
      sub_10000D544(a2 + 32, (uint64_t)v10, &qword_100382450);
      uint64_t v5 = swift_allocObject();
      long long v6 = a1[3];
      *(_OWORD *)(v5 + 48) = a1[2];
      *(_OWORD *)(v5 + 64) = v6;
      long long v7 = a1[5];
      *(_OWORD *)(v5 + 80) = a1[4];
      *(_OWORD *)(v5 + 96) = v7;
      long long v8 = a1[1];
      *(_OWORD *)(v5 + 16) = *a1;
      *(_OWORD *)(v5 + 32) = v8;
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v5 + 112) = *(_OWORD *)a2;
      *(_OWORD *)(v5 + 128) = v9;
      *(void *)(v5 + 144) = *(void *)(a2 + 32);
      swift_retain();
      sub_1001458E8((uint64_t)a1);
      sub_100039BF8((uint64_t)v11);
      sub_10003E68C((uint64_t)v10);
      PassthroughSubject.send(_:)();
      swift_release();
      return swift_release();
    }
    else
    {
      type metadata accessor for AppEvents();
      sub_100145FA4((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100145524(__int16 a1, uint64_t a2, NSObject **a3)
{
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9B08);
  sub_1001458E8(a2);
  sub_1001458E8(a2);
  long long v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(void *)&long long v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v10 = sub_1000C8E54();
    sub_1001B3178(v10, v11, (uint64_t *)&v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100146004(a2);
    sub_100146004(a2);
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v12 = String.init<A>(describing:)();
    sub_1001B3178(v12, v13, (uint64_t *)&v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}s] selectRoadsideProviderRequested response: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100146004(a2);
    sub_100146004(a2);
  }

  long long v17 = *(_OWORD *)(a2 + 80);
  sub_100004010(&qword_10037ED78);
  uint64_t result = State.wrappedValue.setter();
  if ((a1 & 0x101) == 1)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v15 = *a3;
      swift_retain();
      sub_10006E3D4(v15);
      uint64_t v16 = swift_release();
      return (*(uint64_t (**)(uint64_t))(a2 + 64))(v16);
    }
    else
    {
      type metadata accessor for RoadsideAssistanceModel();
      sub_100145FA4(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001457FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100143E70(a1);
}

double sub_100145840(uint64_t a1)
{
  *(unsigned char *)(a1 + 336) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_100145878()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

double sub_1001458E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_100145310(a1, a2).n128_u64[0];
  return result;
}

uint64_t sub_1001458E8(uint64_t a1)
{
  return a1;
}

unint64_t sub_100145970()
{
  unint64_t result = qword_100388B98;
  if (!qword_100388B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388B98);
  }
  return result;
}

void sub_1001459C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  if (a4)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000336C0(a10, a11, a12, a13);
  }
}

uint64_t sub_100145BF8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v10 = *(unsigned char *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328),
    v10);
  return a1;
}

void sub_100145C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_100033998(a10, a11, a12, a13);
  }
}

uint64_t sub_100145ED0()
{
  return sub_10014537C((_OWORD *)(v0 + 16), v0 + 112);
}

uint64_t sub_100145EEC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v5 = *(unsigned char *)(a1 + 264);
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    *(void *)(a1 + 256),
    v5);
  return a1;
}

double sub_100145F78(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 249) = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100145FA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100145FF0(__int16 a1)
{
  return sub_100145524(a1 & 0x101, v1 + 16, (NSObject **)(v1 + 112));
}

uint64_t sub_100146004(uint64_t a1)
{
  return a1;
}

uint64_t sub_100146090()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

Swift::Int sub_100146108(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_151;
    }
    if (v3) {
      return sub_10014685C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_159;
  }
  Swift::Int v115 = result;
  uint64_t v119 = v1;
  long long v112 = a1;
  if (v3 < 2)
  {
    long long v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
      uint64_t v103 = v11;
      long long v114 = v8;
      if (v12 >= 2)
      {
        uint64_t v104 = *v112;
        do
        {
          unint64_t v105 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_146;
          }
          if (!v104) {
            goto LABEL_158;
          }
          uint64_t v106 = v103;
          uint64_t v107 = *(void *)&v103[16 * v105 + 32];
          uint64_t v108 = *(void *)&v103[16 * v12 + 24];
          sub_10014695C((char *)(v104 + 40 * v107), (char *)(v104 + 40 * *(void *)&v103[16 * v12 + 16]), v104 + 40 * v108, __dst);
          if (v119) {
            break;
          }
          if (v108 < v107) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v106 = sub_1001D6E20((uint64_t)v106);
          }
          if (v105 >= *((void *)v106 + 2)) {
            goto LABEL_148;
          }
          long long v109 = &v106[16 * v105 + 32];
          *(void *)long long v109 = v107;
          *((void *)v109 + 1) = v108;
          unint64_t v110 = *((void *)v106 + 2);
          if (v12 > v110) {
            goto LABEL_149;
          }
          memmove(&v106[16 * v12 + 16], &v106[16 * v12 + 32], 16 * (v110 - v12));
          uint64_t v103 = v106;
          *((void *)v106 + 2) = v110 - 1;
          unint64_t v12 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v114[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v114 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    long long v114 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v113 = *a1 + 16;
  uint64_t v111 = *a1 + 32;
  unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v116 = v3;
  uint64_t v117 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = v10 + 40 * v9;
      uint64_t v15 = *(void *)(v14 + 8);
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t v17 = v10 + 40 * v13;
      if (*(void *)(v17 + 8) == v15 && *(void *)(v17 + 16) == v16)
      {
        Swift::Int v20 = v13 + 2;
        if (v13 + 2 >= v3) {
          goto LABEL_37;
        }
        int v19 = 0;
      }
      else
      {
        int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        Swift::Int v20 = v13 + 2;
        if (v13 + 2 >= v3)
        {
LABEL_33:
          if (v19)
          {
LABEL_44:
            Swift::Int v9 = v20;
            goto LABEL_45;
          }
          goto LABEL_36;
        }
      }
      long long v21 = (void *)(v113 + 40 * v20);
      do
      {
        uint64_t v23 = v10 + 40 * v9;
        if (*(void *)(v23 + 8) == *(v21 - 1) && *(void *)(v23 + 16) == *v21)
        {
          if (v19) {
            goto LABEL_44;
          }
        }
        else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
        {
          goto LABEL_33;
        }
        Swift::Int v22 = v20 + 1;
        v21 += 5;
        Swift::Int v9 = v20;
        Swift::Int v20 = v22;
      }
      while (v22 < v3);
      Swift::Int v20 = v22;
      if (v19) {
        goto LABEL_44;
      }
LABEL_36:
      if (v20 < v13) {
        goto LABEL_152;
      }
LABEL_37:
      if (v13 < v20)
      {
        uint64_t v25 = 40 * v20;
        uint64_t v26 = 40 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        while (1)
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_157;
            }
            uint64_t v29 = v10 + v26;
            uint64_t v30 = *(void *)(v10 + v26 + 16);
            uint64_t v31 = v10 + v25;
            char v32 = *(unsigned char *)(v10 + v26 + 24);
            char v33 = *(unsigned char *)(v10 + v26 + 25);
            uint64_t v34 = *(void *)(v10 + v26 + 32);
            long long v35 = *(_OWORD *)(v10 + v26);
            uint64_t v36 = *(void *)(v10 + v25 - 8);
            long long v37 = *(_OWORD *)(v10 + v25 - 24);
            *(_OWORD *)uint64_t v29 = *(_OWORD *)(v10 + v25 - 40);
            *(_OWORD *)(v29 + 16) = v37;
            *(void *)(v29 + 32) = v36;
            *(_OWORD *)(v31 - 40) = v35;
            *(void *)(v31 - 24) = v30;
            *(unsigned char *)(v31 - 16) = v32;
            *(unsigned char *)(v31 - 15) = v33;
            *(void *)(v31 - 8) = v34;
          }
          ++v28;
          v25 -= 40;
          v26 += 40;
          if (v28 >= v27) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_44;
    }
LABEL_45:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_150;
      }
      if (v9 - v13 < v115) {
        break;
      }
    }
LABEL_66:
    if (v9 < v13) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_1001D6A48(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v54 = *((void *)v11 + 2);
    unint64_t v53 = *((void *)v11 + 3);
    unint64_t v12 = v54 + 1;
    if (v54 >= v53 >> 1) {
      unint64_t v11 = sub_1001D6A48((char *)(v53 > 1), v54 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v55 = v11 + 32;
    uint64_t v56 = &v11[16 * v54 + 32];
    *(void *)uint64_t v56 = v13;
    *((void *)v56 + 1) = v9;
    if (v54)
    {
      uint64_t v10 = v117;
      while (1)
      {
        unint64_t v57 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v62 = &v55[16 * v12];
          uint64_t v63 = *((void *)v62 - 8);
          uint64_t v64 = *((void *)v62 - 7);
          BOOL v68 = __OFSUB__(v64, v63);
          uint64_t v65 = v64 - v63;
          if (v68) {
            goto LABEL_134;
          }
          uint64_t v67 = *((void *)v62 - 6);
          uint64_t v66 = *((void *)v62 - 5);
          BOOL v68 = __OFSUB__(v66, v67);
          uint64_t v60 = v66 - v67;
          char v61 = v68;
          if (v68) {
            goto LABEL_135;
          }
          unint64_t v69 = v12 - 2;
          char v70 = &v55[16 * v12 - 32];
          uint64_t v72 = *(void *)v70;
          uint64_t v71 = *((void *)v70 + 1);
          BOOL v68 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          if (v68) {
            goto LABEL_137;
          }
          BOOL v68 = __OFADD__(v60, v73);
          uint64_t v74 = v60 + v73;
          if (v68) {
            goto LABEL_140;
          }
          if (v74 >= v65)
          {
            long long v92 = &v55[16 * v57];
            uint64_t v94 = *(void *)v92;
            uint64_t v93 = *((void *)v92 + 1);
            BOOL v68 = __OFSUB__(v93, v94);
            uint64_t v95 = v93 - v94;
            if (v68) {
              goto LABEL_144;
            }
            BOOL v85 = v60 < v95;
            goto LABEL_104;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v86 = *((void *)v11 + 4);
            uint64_t v87 = *((void *)v11 + 5);
            BOOL v68 = __OFSUB__(v87, v86);
            uint64_t v79 = v87 - v86;
            char v80 = v68;
            goto LABEL_98;
          }
          uint64_t v59 = *((void *)v11 + 4);
          uint64_t v58 = *((void *)v11 + 5);
          BOOL v68 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          char v61 = v68;
        }
        if (v61) {
          goto LABEL_136;
        }
        unint64_t v69 = v12 - 2;
        uint64_t v75 = &v55[16 * v12 - 32];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v78 = __OFSUB__(v76, v77);
        uint64_t v79 = v76 - v77;
        char v80 = v78;
        if (v78) {
          goto LABEL_139;
        }
        uint64_t v81 = &v55[16 * v57];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v68 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v68) {
          goto LABEL_142;
        }
        if (__OFADD__(v79, v84)) {
          goto LABEL_143;
        }
        if (v79 + v84 >= v60)
        {
          BOOL v85 = v60 < v84;
LABEL_104:
          if (v85) {
            unint64_t v57 = v69;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v80) {
          goto LABEL_138;
        }
        uint64_t v88 = &v55[16 * v57];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v68 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v68) {
          goto LABEL_141;
        }
        if (v91 < v79) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v96 = v57 - 1;
        if (v57 - 1 >= v12)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_156;
        }
        uint64_t v97 = v10;
        char v98 = &v55[16 * v96];
        uint64_t v99 = *(void *)v98;
        uint64_t v100 = &v55[16 * v57];
        uint64_t v101 = *((void *)v100 + 1);
        sub_10014695C((char *)(v97 + 40 * *(void *)v98), (char *)(v97 + 40 * *(void *)v100), v97 + 40 * v101, __dst);
        if (v119) {
          goto LABEL_114;
        }
        if (v101 < v99) {
          goto LABEL_131;
        }
        if (v57 > *((void *)v11 + 2)) {
          goto LABEL_132;
        }
        *(void *)char v98 = v99;
        *(void *)&v55[16 * v96 + 8] = v101;
        unint64_t v102 = *((void *)v11 + 2);
        if (v57 >= v102) {
          goto LABEL_133;
        }
        unint64_t v12 = v102 - 1;
        memmove(&v55[16 * v57], v100 + 16, 16 * (v102 - 1 - v57));
        *((void *)v11 + 2) = v102 - 1;
        BOOL v85 = v102 > 2;
        uint64_t v10 = v117;
        if (!v85) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v117;
LABEL_15:
    Swift::Int v3 = v116;
    if (v9 >= v116)
    {
      long long v8 = v114;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v13, v115)) {
    goto LABEL_153;
  }
  if (v13 + v115 >= v3) {
    Swift::Int v38 = v3;
  }
  else {
    Swift::Int v38 = v13 + v115;
  }
  if (v38 >= v13)
  {
    if (v9 != v38)
    {
      uint64_t v39 = v111 + 40 * v9;
      do
      {
        uint64_t v40 = v10 + 40 * v9;
        uint64_t v41 = *(void *)(v40 + 8);
        uint64_t v42 = *(void *)(v40 + 16);
        Swift::Int v43 = v13;
        uint64_t v44 = v39;
        do
        {
          BOOL v45 = *(void *)(v44 - 64) == v41 && *(void *)(v44 - 56) == v42;
          if (!v45 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          if (!v10) {
            goto LABEL_155;
          }
          uint64_t v46 = v44 - 32;
          uint64_t v47 = (_OWORD *)(v44 - 72);
          uint64_t v48 = *(void *)(v44 - 40);
          *(void *)(v44 - 40) = *(void *)v44;
          v44 -= 40;
          uint64_t v49 = *(void *)(v44 + 8);
          uint64_t v41 = *(void *)(v44 + 16);
          uint64_t v42 = *(void *)(v44 + 24);
          char v50 = *(unsigned char *)(v44 + 32);
          char v51 = *(unsigned char *)(v44 + 33);
          long long v52 = v47[1];
          *(_OWORD *)uint64_t v46 = *v47;
          *(_OWORD *)(v46 + 16) = v52;
          *(void *)(v46 + 32) = v48;
          *(void *)(v44 - 32) = v49;
          *(void *)(v44 - 24) = v41;
          *(void *)(v44 - 16) = v42;
          *(unsigned char *)(v44 - 8) = v50;
          *(unsigned char *)(v44 - 7) = v51;
          ++v43;
        }
        while (v9 != v43);
        ++v9;
        v39 += 40;
      }
      while (v9 != v38);
      Swift::Int v9 = v38;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10014685C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 40 * a3 + 32;
LABEL_5:
    uint64_t v9 = v7 + 40 * v4;
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
    uint64_t v12 = v6;
    uint64_t v13 = v8;
    while (1)
    {
      Swift::Int result = *(void *)(v13 - 64);
      if (result != v10 || *(void *)(v13 - 56) != v11)
      {
        Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if (result)
        {
LABEL_4:
          ++v4;
          v8 += 40;
          if (v4 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      if (!v7) {
        break;
      }
      uint64_t v15 = v13 - 32;
      uint64_t v16 = (_OWORD *)(v13 - 72);
      uint64_t v17 = *(void *)(v13 - 40);
      *(void *)(v13 - 40) = *(void *)v13;
      v13 -= 40;
      uint64_t v18 = *(void *)(v13 + 8);
      uint64_t v10 = *(void *)(v13 + 16);
      uint64_t v11 = *(void *)(v13 + 24);
      char v19 = *(unsigned char *)(v13 + 32);
      char v20 = *(unsigned char *)(v13 + 33);
      long long v21 = v16[1];
      *(_OWORD *)uint64_t v15 = *v16;
      *(_OWORD *)(v15 + 16) = v21;
      *(void *)(v15 + 32) = v17;
      *(void *)(v13 - 32) = v18;
      *(void *)(v13 - 24) = v10;
      *(void *)(v13 - 16) = v11;
      *(unsigned char *)(v13 - 8) = v19;
      *(unsigned char *)(v13 - 7) = v20;
      if (v4 == ++v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10014695C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      char v19 = &v4[40 * v11];
      uint64_t v29 = v19;
      uint64_t v31 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v20 = a3 - 40;
        do
        {
          long long v21 = (char *)(v20 + 40);
          BOOL v22 = *((void *)v6 - 4) == *((void *)v19 - 4) && *((void *)v6 - 3) == *((void *)v19 - 3);
          if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v6 - 40;
            if (v21 != v6 || v20 >= (unint64_t)v6)
            {
              long long v26 = *(_OWORD *)v25;
              long long v27 = *(_OWORD *)(v6 - 24);
              *(void *)(v20 + 32) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v20 = v26;
              *(_OWORD *)(v20 + 16) = v27;
            }
            uint64_t v31 = v6 - 40;
            if (v25 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v29 = v19 - 40;
            if (v21 < v19 || v20 >= (unint64_t)v19 || v21 != v19)
            {
              long long v23 = *(_OWORD *)(v19 - 40);
              long long v24 = *(_OWORD *)(v19 - 24);
              *(void *)(v20 + 32) = *((void *)v19 - 1);
              *(_OWORD *)unint64_t v20 = v23;
              *(_OWORD *)(v20 + 16) = v24;
            }
            uint64_t v25 = v6;
            v19 -= 40;
            if (v6 <= v7) {
              break;
            }
          }
          v20 -= 40;
          uint64_t v6 = v25;
        }
        while (v19 > v4);
      }
LABEL_48:
      sub_1001D6D54((void **)&v31, &v30, &v29);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    uint64_t v12 = &v4[40 * v9];
    uint64_t v29 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      uint64_t v13 = v4;
      while (1)
      {
        BOOL v14 = *((void *)v13 + 1) == *((void *)v6 + 1) && *((void *)v13 + 2) == *((void *)v6 + 2);
        if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v16 = v6 + 40;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v4 = v13 + 40;
          uint64_t v15 = v13;
          uint64_t v16 = v6;
          if (v7 == v13)
          {
            v13 += 40;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v13 += 40;
          }
        }
        long long v17 = *(_OWORD *)v15;
        long long v18 = *((_OWORD *)v15 + 1);
        *((void *)v7 + 4) = *((void *)v15 + 4);
        *(_OWORD *)uint64_t v7 = v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_22:
        v7 += 40;
        if (v13 < v12)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v30 = v4;
        uint64_t v31 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100146C38(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100004010((uint64_t *)&unk_100393070);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v38 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v39 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v37) {
        return v9;
      }
      unint64_t v16 = v36[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v37) {
          return v9;
        }
        unint64_t v16 = v36[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v37) {
            return v9;
          }
          unint64_t v16 = v36[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v37) {
              return v9;
            }
            unint64_t v16 = v36[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v37) {
                  return v9;
                }
                unint64_t v16 = v36[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v20 = *(void *)(v4 + 56) + 40 * v14;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    char v24 = *(unsigned char *)(v20 + 24);
    char v40 = *(unsigned char *)(v20 + 25);
    uint64_t v25 = *(void *)(v20 + 32);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v26 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(void *)(*(void *)(v9 + 48) + 8 * v29) = v19;
    uint64_t v34 = *(void *)(v9 + 56) + 40 * v29;
    *(void *)uint64_t v34 = v22;
    *(void *)(v34 + 8) = v21;
    *(void *)(v34 + 16) = v23;
    *(unsigned char *)(v34 + 24) = v24;
    *(unsigned char *)(v34 + 25) = v40;
    *(void *)(v34 + 32) = v25;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v38;
    uint64_t v11 = v39;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100146EFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_10000D544(a4, (uint64_t)v45, &qword_100382448);
  uint64_t v36 = 0;
  int64_t v6 = 0;
  uint64_t v42 = v45[1];
  uint64_t v43 = v45[0];
  unint64_t v40 = v45[3];
  uint64_t v41 = v45[2];
  uint64_t v49 = a3;
  uint64_t v9 = *(void *)(a3 + 64);
  uint64_t v8 = a3 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v39 = v46;
  uint64_t v37 = v8;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v34 = v46 + 7;
LABEL_5:
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v6 << 6);
LABEL_18:
    uint64_t v18 = *(void *)(v49 + 56) + 40 * v14;
    uint64_t v20 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    int v22 = *(unsigned __int8 *)(v18 + 24);
    unsigned int v23 = *(unsigned __int8 *)(v18 + 25);
    char v24 = *(void **)(v18 + 32);
    uint64_t result = sub_10000D544(a4, (uint64_t)v47, &qword_100382448);
    if (!v48)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100075E64(v20, v19, v21);
      uint64_t result = sub_100075E64(v43, v42, v41);
      goto LABEL_54;
    }
    if (v20 == v43)
    {
      if (v19 == v42 && v41 == v21)
      {
        uint64_t v26 = v39;
        if ((v40 ^ v22) & 1) != 0 || (((v40 >> 8) & 1 ^ v23)) {
          goto LABEL_54;
        }
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          goto LABEL_54;
        }
        uint64_t v26 = v39;
        if (((v40 ^ v22) & 1) != 0 || ((v40 >> 8) & 1) != v23) {
          goto LABEL_54;
        }
      }
      if (v24)
      {
        if (!v26) {
          goto LABEL_54;
        }
        uint64_t v27 = v24[2];
        if (v27 != v26[2]) {
          goto LABEL_54;
        }
        if (v27 && v24 != v26)
        {
          uint64_t result = v24[4];
          if (result != v26[4] || v24[5] != v26[5])
          {
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0) {
              goto LABEL_54;
            }
          }
          uint64_t v29 = v27 - 1;
          if (v29)
          {
            char v30 = v24 + 7;
            unint64_t v31 = v34;
            while (1)
            {
              uint64_t result = *(v30 - 1);
              if (result != *(v31 - 1) || *v30 != *v31)
              {
                uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
                if ((result & 1) == 0) {
                  goto LABEL_54;
                }
              }
              v31 += 2;
              v30 += 2;
              if (!--v29) {
                goto LABEL_5;
              }
            }
          }
        }
      }
      else if (v26)
      {
        goto LABEL_54;
      }
    }
    else
    {
LABEL_54:
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v36++, 1);
      if (v15)
      {
        __break(1u);
        return sub_100146C38(a1, a2, v36, v49);
      }
    }
  }
  BOOL v15 = __OFADD__(v6++, 1);
  if (v15)
  {
    __break(1u);
    goto LABEL_59;
  }
  if (v6 >= v38) {
    return sub_100146C38(a1, a2, v36, v49);
  }
  unint64_t v16 = *(void *)(v37 + 8 * v6);
  if (v16)
  {
LABEL_17:
    unint64_t v12 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_18;
  }
  int64_t v17 = v6 + 1;
  if (v6 + 1 >= v38) {
    return sub_100146C38(a1, a2, v36, v49);
  }
  unint64_t v16 = *(void *)(v37 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v6 + 2;
  if (v6 + 2 >= v38) {
    return sub_100146C38(a1, a2, v36, v49);
  }
  unint64_t v16 = *(void *)(v37 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v6 + 3;
  if (v6 + 3 >= v38) {
    return sub_100146C38(a1, a2, v36, v49);
  }
  unint64_t v16 = *(void *)(v37 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v6 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v38) {
      return sub_100146C38(a1, a2, v36, v49);
    }
    unint64_t v16 = *(void *)(v37 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_100147270(uint64_t a1, void *a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
  uint64_t isStackAllocationSafe = (uint64_t)sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
    uint64_t v10 = sub_100146EFC((unint64_t *)((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, (uint64_t)a2);
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    if (v2)
    {
      swift_willThrow();
      uint64_t v10 = (uint64_t)sub_100075E64;
    }
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075E64);
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
    uint64_t v10 = sub_100146EFC((unint64_t *)v11, v7, a1, (uint64_t)a2);
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    swift_slowDealloc();
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_1001474EC(a2, (void (*)(void, void, void, void, void))sub_100075E64);
  }
  return v10;
}

void *sub_1001474EC(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unint64_t sub_10014752C()
{
  unint64_t result = qword_100388BB8;
  if (!qword_100388BB8)
  {
    sub_1000094C4(&qword_100388B50);
    sub_100009B18((unint64_t *)&unk_100388BC0, &qword_100388B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388BB8);
  }
  return result;
}

uint64_t sub_1001475D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (void *)((char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *char v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_monitor;
  if (*(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_monitor))
  {
    if (qword_10037DE28 == -1)
    {
LABEL_4:
      uint64_t v8 = type metadata accessor for Logger();
      sub_10000FD84(v8, (uint64_t)qword_1003A9B50);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v9, v10))
      {
LABEL_7:
        uint64_t v13 = 0;
        goto LABEL_8;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      unint64_t v12 = "Already started";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v12, v11, 2u);
      swift_slowDealloc();
      goto LABEL_7;
    }
LABEL_27:
    swift_once();
    goto LABEL_4;
  }
  id v15 = [objc_allocWithZone((Class)CTStewieStateMonitor) initWithDelegate:v1 queue:*(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_queue)];
  unint64_t v16 = *(void **)(v1 + v7);
  *(void *)(v1 + v7) = v15;

  int64_t v17 = *(void **)(v1 + v7);
  if (!v17)
  {
    if (qword_10037DE28 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000FD84(v29, (uint64_t)qword_1003A9B50);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v9, v10)) {
      goto LABEL_7;
    }
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    unint64_t v12 = "monitor must be allocated prior to start";
    goto LABEL_6;
  }
  uint64_t v18 = v17;
  if ([v18 start])
  {
    id v19 = [v18 getState];
    if (qword_10037DE28 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000FD84(v20, (uint64_t)qword_1003A9B50);
    uint64_t v9 = v19;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      unsigned int v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v38 = v36;
      *(_DWORD *)unsigned int v23 = 136446210;
      v34[1] = v23 + 4;
      long long v35 = v23;
      char v24 = v9;
      id v25 = [v24 description];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      uint64_t v37 = sub_1001B3178(v26, v28, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Initial state: %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**))(v1 + OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_handler))(v9);

    uint64_t v13 = 1;
  }
  else
  {
    if (qword_10037DE28 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000FD84(v30, (uint64_t)qword_1003A9B50);
    unint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to start monitor", v33, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = 0;
    uint64_t v9 = v18;
  }
LABEL_8:

  return v13;
}

id sub_100147B50(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v35 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  os_log_type_t v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  *(void *)&v2[OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_monitor] = 0;
  uint64_t v7 = self;
  uint64_t v8 = v2;
  id v9 = [v7 mainBundle];
  id v10 = [v9 bundleIdentifier];

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v13 = 0x80000001002C5A40;
    uint64_t v11 = 0xD000000000000012;
  }
  sub_10000FDBC();
  v40[0] = v11;
  v40[1] = v13;
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = 0xD000000000000013;
  v14._object = (void *)0x80000001002D0230;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v40[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v34);
  *(void *)&v8[OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_queue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v15 = &v8[OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_handler];
  uint64_t v16 = v37;
  *(void *)id v15 = v35;
  *((void *)v15 + 1) = v16;
  swift_retain();

  v39.receiver = v8;
  v39.super_class = ObjectType;
  id v17 = [super init];
  uint64_t v18 = qword_10037DD80;
  id v19 = v17;
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000FD84(v20, (uint64_t)qword_1003A9958);
  id v21 = v19;
  os_log_type_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    char v24 = (uint8_t *)swift_slowAlloc();
    v40[0] = swift_slowAlloc();
    *(_DWORD *)char v24 = 136446210;
    ObjectType = (objc_class *)(v24 + 4);
    id v25 = v21;
    id v26 = [v25 description];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    uint64_t v38 = sub_1001B3178(v27, v29, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%{public}s] init", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {

    swift_release();
  }
  return v21;
}

id sub_100148060()
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  id v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v15 = ObjectType;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    Swift::String v14 = v6 + 4;
    id v7 = v3;
    id v8 = [v7 description];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    uint64_t v12 = v9;
    ObjectType = v15;
    sub_1001B3178(v12, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%{public}s] deinit", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v17.receiver = v3;
  v17.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1001482EC(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v43 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (void *)((char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = v1;
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_queue);
  *unint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v14)
  {
    if (qword_10037DE28 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  unint64_t v40 = v6;
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9B50);
  id v16 = a1;
  objc_super v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    aBlock[0] = v39;
    *(_DWORD *)id v19 = 136446210;
    v37[1] = v19 + 4;
    uint64_t v38 = v19;
    id v20 = v16;
    uint64_t v21 = v3;
    id v22 = [v20 description];
    uint64_t v23 = v4;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    uint64_t v3 = v21;
    uint64_t v27 = v24;
    uint64_t v4 = v23;
    uint64_t v45 = sub_1001B3178(v27, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "stateChanged: %{public}s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10000FDBC();
  unint64_t v28 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v30 = *(void *)(v41 + OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_handler);
  uint64_t v29 = *(void *)(v41 + OBJC_IVAR____TtC8SOSBuddy23StewieStateMonitorAgent_handler + 8);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v30;
  v31[3] = v29;
  v31[4] = v16;
  aBlock[4] = (uint64_t)sub_10014896C;
  aBlock[5] = (uint64_t)v31;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100207A1C;
  aBlock[3] = (uint64_t)&unk_100359398;
  os_log_type_t v32 = _Block_copy(aBlock);
  id v33 = v16;
  swift_retain();
  swift_release();
  uint64_t v34 = v43;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v35 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v35, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v34, v42);
}

uint64_t type metadata accessor for StewieStateMonitorAgent()
{
  return self;
}

uint64_t sub_10014892C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10014896C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_10014899C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001489AC()
{
  return swift_release();
}

uint64_t sub_1001489B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010((uint64_t *)&unk_100393B30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)type metadata accessor for LockScreenSource());
  swift_retain();
  *(void *)(v1 + 32) = [v9 init];
  uint64_t v24 = v8;
  uint64_t v25 = v6;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v10 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v10 = _swiftEmptySetSingleton;
  }
  *(void *)(v1 + 40) = v10;
  *(unsigned char *)(v1 + 48) = 2;
  swift_release();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v1 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v1 + 24) = PassthroughSubject.init()();
  uint64_t v11 = qword_10037DD80;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9958);
  swift_retain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v5;
    v26[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    id v27 = (id)v1;
    swift_retain();
    uint64_t v17 = String.init<A>(describing:)();
    id v27 = (id)sub_1001B3178(v17, v18, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%{public}s] init", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v23;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  v26[0] = *(void *)(*(void *)(v1 + 32) + OBJC_IVAR____TtC8SOSBuddy16LockScreenSource_lockedStateDidChange);
  sub_10000FDBC();
  swift_retain();
  id v27 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v19 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
  sub_100004010(&qword_100385860);
  sub_100009B18((unint64_t *)&unk_100393B40, &qword_100385860);
  sub_100028428();
  id v20 = v24;
  Publisher.receive<A>(on:options:)();
  sub_100028480((uint64_t)v4);

  swift_release();
  sub_100009B18(&qword_100388D30, (uint64_t *)&unk_100393B30);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100148EEC(unsigned __int8 *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = *(unsigned __int8 *)(a2 + 48);
  if v4 == 2 || ((v3 ^ v4))
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(a2 + 48) = v3;
  return sub_10014921C(v4);
}

uint64_t sub_100148F8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100148FBC()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1001491C4()
{
  sub_100148FBC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LockScreenModel()
{
  return self;
}

uint64_t sub_10014921C(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + 48);
  if (v2 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v2))
  {
    return result;
  }
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9958);
  swift_retain_n();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "screenLocked changed from: %{public}s to: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  return Subject<>.send()();
}

uint64_t sub_1001494A8(unsigned __int8 *a1)
{
  return sub_100148EEC(a1, v1);
}

void *initializeWithCopy for ShowMessagesButtonView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ShowMessagesButtonView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShowMessagesButtonView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShowMessagesButtonView()
{
  return &type metadata for ShowMessagesButtonView;
}

uint64_t sub_1001495B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001495D4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v60 = a2;
  uint64_t v76 = a4;
  uint64_t v72 = type metadata accessor for KeyboardShortcut();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  char v70 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for ButtonBorderShape();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for BorderedButtonStyle();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  unint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100388D38);
  uint64_t v56 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_100388D40);
  uint64_t v12 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  os_log_type_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004010(&qword_100388D48);
  __chkstk_darwin(v57);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004010(&qword_100388D50);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  unint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004010(&qword_100388D58);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_100388D60);
  __chkstk_darwin(v74);
  uint64_t v75 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_100388D68);
  __chkstk_darwin(v21 - 8);
  uint64_t v73 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v23 = a1[9];
    uint64_t v24 = a1[10];
    sub_100008F88(a1 + 6, v23);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 32))(v77, v23, v24);
    sub_10014A0C4();
    swift_retain();
    Button.init(action:label:)();
    BorderedButtonStyle.init()();
    sub_100009B18(&qword_100388D78, &qword_100388D38);
    sub_10014B568((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    uint64_t v25 = v59;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v25);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v9);
    unint64_t v26 = v67;
    static ButtonBorderShape.capsule.getter();
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v28 = (uint64_t *)&v16[*(int *)(v57 + 36)];
    uint64_t v29 = sub_100004010(&qword_100381038);
    uint64_t v30 = v68;
    uint64_t v31 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))((char *)v28 + *(int *)(v29 + 28), v26, v69);
    *unint64_t v28 = KeyPath;
    uint64_t v32 = v63;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v63);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v31);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v32);
    id v33 = v70;
    static KeyboardShortcut.defaultAction.getter();
    sub_10014B1A8();
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v33, v72);
    sub_10000950C((uint64_t)v16, &qword_100388D48);
    uint64_t v34 = static Color.green.getter();
    uint64_t v35 = swift_getKeyPath();
    *(void *)&long long v79 = v34;
    swift_retain();
    uint64_t v36 = AnyShapeStyle.init<A>(_:)();
    uint64_t v37 = v65;
    uint64_t v38 = (uint64_t)v62;
    uint64_t v39 = v66;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v18, v66);
    swift_release();
    unint64_t v40 = (uint64_t *)(v38 + *(int *)(v64 + 36));
    *unint64_t v40 = v35;
    v40[1] = v36;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v39);
    double v41 = *(double *)(*sub_100008F88(v77, v78) + 216);
    double v42 = *(double *)(*sub_100008F88(v77, v78) + 216);
    static Alignment.center.getter();
    if (v41 > v42)
    {
      static os_log_type_t.fault.getter();
      uint64_t v43 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v44 = v75;
    sub_10000D2A0(v38, v75, &qword_100388D58);
    uint64_t v45 = (_OWORD *)(v44 + *(int *)(v74 + 36));
    long long v46 = v84;
    void v45[4] = v83;
    v45[5] = v46;
    v45[6] = v85;
    long long v47 = v80;
    *uint64_t v45 = v79;
    v45[1] = v47;
    long long v48 = v82;
    v45[2] = v81;
    v45[3] = v48;
    sub_10000950C(v38, &qword_100388D58);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v49 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    sub_10014B2F8();
    uint64_t v54 = (uint64_t)v73;
    View.accessibility(label:)();
    sub_100033364(v49, v51, v53);
    swift_bridgeObjectRelease();
    sub_10000950C(v44, &qword_100388D60);
    sub_10000D544(v54, v76, &qword_100388D68);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v77);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10014B568((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014A048@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_10014B568((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10014A0B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001495D4(*(void **)v1, *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10014A0C4()
{
  unint64_t result = qword_100388D70;
  if (!qword_100388D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388D70);
  }
  return result;
}

uint64_t sub_10014A118@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_100388DA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100388DA8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100388DB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v13 = a1[9];
    uint64_t v14 = a1[10];
    sub_100008F88(a1 + 6, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 32))(v21, v13, v14);
    *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
    *((void *)v6 + 1) = 0;
    v6[16] = 1;
    uint64_t v15 = sub_100004010(&qword_100388DB8);
    sub_10014A3F4((uint64_t)a1, &v6[*(int *)(v15 + 44)]);
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v6, (uint64_t)v9, &qword_100388DA0);
    uint64_t v16 = &v9[*(int *)(v7 + 36)];
    long long v17 = v27;
    *((_OWORD *)v16 + 4) = v26;
    *((_OWORD *)v16 + 5) = v17;
    *((_OWORD *)v16 + 6) = v28;
    long long v18 = v23;
    *(_OWORD *)uint64_t v16 = v22;
    *((_OWORD *)v16 + 1) = v18;
    long long v19 = v25;
    *((_OWORD *)v16 + 2) = v24;
    *((_OWORD *)v16 + 3) = v19;
    sub_10000950C((uint64_t)v6, &qword_100388DA0);
    sub_10014B4B0();
    View.accessibility(hidden:)();
    sub_10000950C((uint64_t)v9, &qword_100388DA8);
    sub_10000D544((uint64_t)v12, a2, &qword_100388DB0);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v21);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10014B568((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014A3F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v110 = a2;
  uint64_t v99 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v99);
  Swift::Int v116 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100004010(&qword_100388DD0);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v100 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004010(&qword_100388DD8);
  __chkstk_darwin(v98);
  uint64_t v104 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100004010(&qword_100388DE0);
  __chkstk_darwin(v101);
  uint64_t v107 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100004010(&qword_100388DE8);
  uint64_t v7 = __chkstk_darwin(v106);
  uint64_t v109 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v105 = (uint64_t)&v93 - v10;
  __chkstk_darwin(v9);
  uint64_t v108 = (uint64_t)&v93 - v11;
  uint64_t v12 = type metadata accessor for Font.Leading();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004010(&qword_1003828F8);
  __chkstk_darwin(v94);
  uint64_t v16 = (uint64_t *)((char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for Image.Scale();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004010(&qword_1003828E8);
  __chkstk_darwin(v21);
  long long v23 = (uint64_t *)((char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = sub_100004010(&qword_1003828D0);
  __chkstk_darwin(v96);
  long long v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004010(&qword_100388DF0);
  uint64_t v111 = *(void *)(v26 - 8);
  uint64_t v112 = v26;
  __chkstk_darwin(v26);
  uint64_t v95 = (uint64_t)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004010(&qword_100388DF8);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v97 = (uint64_t)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v118 = (uint64_t)&v93 - v31;
  if (!a1) {
    goto LABEL_11;
  }
  uint64_t v117 = a1;
  id v32 = *(id *)(a1 + 112);
  UIContentSizeCategory v115 = UIContentSizeCategoryAccessibilityExtraLarge;
  char v33 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v33)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v118, 1, 1, v112);
    uint64_t v34 = enum case for Font.Leading.tight(_:);
    uint64_t v36 = v113;
    uint64_t v35 = v114;
  }
  else
  {
    uint64_t v37 = Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Image.Scale.medium(_:), v17);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))((char *)v16 + *(int *)(v94 + 28), v20, v17);
    *uint64_t v16 = KeyPath;
    sub_10000D2A0((uint64_t)v16, (uint64_t)v23 + *(int *)(v21 + 36), &qword_1003828F8);
    *long long v23 = v37;
    swift_retain();
    sub_10000950C((uint64_t)v16, &qword_1003828F8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    swift_release();
    static Font.title3.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v34 = enum case for Font.Leading.tight(_:);
    uint64_t v36 = v113;
    uint64_t v35 = v114;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v14, enum case for Font.Leading.tight(_:), v114);
    uint64_t v39 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
    uint64_t v40 = swift_getKeyPath();
    sub_10000D2A0((uint64_t)v23, (uint64_t)v25, &qword_1003828E8);
    double v41 = (uint64_t *)&v25[*(int *)(v96 + 36)];
    *double v41 = v40;
    v41[1] = v39;
    sub_10000950C((uint64_t)v23, &qword_1003828E8);
    uint64_t v42 = static Color.green.getter();
    uint64_t v43 = v95;
    sub_10000D2A0((uint64_t)v25, v95, &qword_1003828D0);
    uint64_t v44 = v112;
    *(void *)(v43 + *(int *)(v112 + 36)) = v42;
    sub_10000950C((uint64_t)v25, &qword_1003828D0);
    uint64_t v45 = v118;
    sub_10000D544(v43, v118, &qword_100388DF0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v45, 0, 1, v44);
  }
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v46 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v48 = v47;
  char v50 = v49 & 1;
  static Font.title3.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v14, v34, v35);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
  uint64_t v51 = Text.font(_:)();
  uint64_t v53 = v52;
  char v55 = v54;
  swift_release();
  char v56 = v55 & 1;
  sub_100033364(v46, v48, v50);
  swift_bridgeObjectRelease();
  static Color.green.getter();
  uint64_t v57 = Text.foregroundColor(_:)();
  uint64_t v59 = v58;
  char v61 = v60;
  uint64_t v63 = v62;
  swift_release();
  sub_100033364(v51, v53, v56);
  swift_bridgeObjectRelease();
  uint64_t v64 = v117;
  id v65 = *(id *)(v117 + 112);
  char v66 = static UIContentSizeCategory.>= infix(_:_:)();

  uint64_t v67 = swift_getKeyPath();
  *(void *)&long long v119 = v57;
  *((void *)&v119 + 1) = v59;
  LOBYTE(v120) = v61 & 1;
  *((void *)&v120 + 1) = v63;
  *(void *)&long long v121 = v67;
  *((void *)&v121 + 1) = (v66 & 1) == 0;
  char v122 = v66 & 1;
  uint64_t v68 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v69 = type metadata accessor for DynamicTypeSize();
  uint64_t v70 = (uint64_t)v116;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 104))(v116, v68, v69);
  sub_10014B568(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
LABEL_11:
    type metadata accessor for UIMetrics();
    sub_10014B568((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  sub_100004010(&qword_1003887A0);
  sub_10013A764();
  sub_100009B18(&qword_10037F030, &qword_10037F010);
  uint64_t v71 = v100;
  View.dynamicTypeSize<A>(_:)();
  sub_10000950C(v70, &qword_10037F010);
  sub_100033364(v119, *((uint64_t *)&v119 + 1), v120);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = v102;
  uint64_t v74 = (uint64_t)v104;
  uint64_t v75 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v104, v71, v103);
  uint64_t v76 = v74 + *(int *)(v98 + 36);
  *(void *)uint64_t v76 = v72;
  *(unsigned char *)(v76 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v75);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v77 = v107;
  sub_10000D2A0(v74, v107, &qword_100388DD8);
  uint64_t v78 = (_OWORD *)(v77 + *(int *)(v101 + 36));
  long long v79 = v120;
  *uint64_t v78 = v119;
  v78[1] = v79;
  v78[2] = v121;
  sub_10000950C(v74, &qword_100388DD8);
  id v80 = *(id *)(v64 + 112);
  LOBYTE(v74) = static UIContentSizeCategory.>= infix(_:_:)();

  if (v74) {
    double v81 = 1.0;
  }
  else {
    double v81 = 0.5;
  }
  uint64_t v82 = swift_getKeyPath();
  uint64_t v83 = v105;
  sub_10000D2A0(v77, v105, &qword_100388DE0);
  uint64_t v84 = v83 + *(int *)(v106 + 36);
  *(void *)uint64_t v84 = v82;
  *(double *)(v84 + 8) = v81;
  sub_10000950C(v77, &qword_100388DE0);
  uint64_t v85 = v108;
  sub_10000D544(v83, v108, &qword_100388DE8);
  uint64_t v86 = v118;
  uint64_t v87 = v97;
  sub_10000D2A0(v118, v97, &qword_100388DF8);
  uint64_t v88 = v109;
  sub_10000D2A0(v85, v109, &qword_100388DE8);
  uint64_t v89 = v110;
  *unint64_t v110 = 0;
  *((unsigned char *)v89 + 8) = 1;
  uint64_t v90 = (int *)sub_100004010(&qword_100388E00);
  sub_10000D2A0(v87, (uint64_t)v89 + v90[12], &qword_100388DF8);
  sub_10000D2A0(v88, (uint64_t)v89 + v90[16], &qword_100388DE8);
  uint64_t v91 = (char *)v89 + v90[20];
  *(void *)uint64_t v91 = 0;
  v91[8] = 1;
  sub_10000950C(v85, &qword_100388DE8);
  sub_10000950C(v86, &qword_100388DF8);
  sub_10000950C(v88, &qword_100388DE8);
  return sub_10000950C(v87, &qword_100388DF8);
}

uint64_t sub_10014B198@<X0>(uint64_t a1@<X8>)
{
  return sub_10014A118(*v1, a1);
}

unint64_t sub_10014B1A8()
{
  unint64_t result = qword_100388D80;
  if (!qword_100388D80)
  {
    sub_1000094C4(&qword_100388D48);
    sub_1000094C4(&qword_100388D38);
    type metadata accessor for BorderedButtonStyle();
    sub_100009B18(&qword_100388D78, &qword_100388D38);
    sub_10014B568((unint64_t *)&qword_100381E40, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388D80);
  }
  return result;
}

unint64_t sub_10014B2F8()
{
  unint64_t result = qword_100388D88;
  if (!qword_100388D88)
  {
    sub_1000094C4(&qword_100388D60);
    sub_10014B374();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388D88);
  }
  return result;
}

unint64_t sub_10014B374()
{
  unint64_t result = qword_100388D90;
  if (!qword_100388D90)
  {
    sub_1000094C4(&qword_100388D58);
    sub_1000094C4(&qword_100388D48);
    sub_10014B1A8();
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100380F50, &qword_100380F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388D90);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowMessagesButtonLabelView()
{
  return &type metadata for ShowMessagesButtonLabelView;
}

uint64_t sub_10014B458()
{
  return sub_10014B5FC(&qword_100388D98, &qword_100388D68, (void (*)(void))sub_10014B2F8);
}

uint64_t sub_10014B494()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10014B4B0()
{
  unint64_t result = qword_100388DC0;
  if (!qword_100388DC0)
  {
    sub_1000094C4(&qword_100388DA8);
    sub_100009B18(&qword_100388DC8, &qword_100388DA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388DC0);
  }
  return result;
}

uint64_t sub_10014B568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10014B5C0()
{
  return sub_10014B5FC(&qword_100388E08, &qword_100388DB0, (void (*)(void))sub_10014B4B0);
}

uint64_t sub_10014B5FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    sub_10014B568(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for BuiltInEnterRoadsidePhoneNumberContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for BuiltInEnterRoadsidePhoneNumberContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BuiltInEnterRoadsidePhoneNumberContentView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[9];
  a1[8] = a2[8];
  a1[9] = v4;
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BuiltInEnterRoadsidePhoneNumberContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltInEnterRoadsidePhoneNumberContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInEnterRoadsidePhoneNumberContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltInEnterRoadsidePhoneNumberContentView()
{
  return &type metadata for BuiltInEnterRoadsidePhoneNumberContentView;
}

uint64_t sub_10014BB24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014BB40@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (_OWORD *)v1;
  uint64_t v4 = *(void **)(v1 + 32);
  if (v4)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    sub_100008F88(v4 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v41, v5, v6);
    uint64_t v7 = v42;
    uint64_t v8 = v43;
    sub_100008F88(v41, v42);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 408))(v7, v8);
    uint64_t v32 = static HorizontalAlignment.center.getter();
    uint64_t v10 = *(void *)(v1 + 56);
    long long v38 = *(_OWORD *)(v1 + 120);
    uint64_t v39 = *(void *)(v1 + 136);
    sub_100004010(&qword_100380950);
    State.projectedValue.getter();
    uint64_t v11 = (_OWORD *)swift_allocObject();
    long long v12 = *(_OWORD *)(v1 + 112);
    v11[7] = *(_OWORD *)(v1 + 96);
    v11[8] = v12;
    v11[9] = *(_OWORD *)(v1 + 128);
    long long v13 = *(_OWORD *)(v1 + 48);
    v11[3] = *(_OWORD *)(v1 + 32);
    v11[4] = v13;
    long long v14 = *(_OWORD *)(v1 + 80);
    v11[5] = *(_OWORD *)(v1 + 64);
    v11[6] = v14;
    long long v15 = *(_OWORD *)(v1 + 16);
    v11[1] = *(_OWORD *)v1;
    _OWORD v11[2] = v15;
    sub_100039C24(v1);
    uint64_t v16 = sub_10014C098(v10, v33, v35, v36, v37, (uint64_t)sub_10014D5B4, (uint64_t)v11);
    uint64_t v31 = v17;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v34 = *(_OWORD *)(v1 + 80);
    sub_100004010(&qword_100380910);
    FocusState.projectedValue.getter();
    type metadata accessor for UIMetrics();
    sub_10014DD14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v22 = EnvironmentObject.init()();
    uint64_t v24 = v23;
    long long v25 = (_OWORD *)swift_allocObject();
    long long v26 = v2[7];
    v25[7] = v2[6];
    v25[8] = v26;
    v25[9] = v2[8];
    long long v27 = v2[3];
    v25[3] = v2[2];
    v25[4] = v27;
    long long v28 = v2[5];
    v25[5] = v2[4];
    v25[6] = v28;
    long long v29 = v2[1];
    v25[1] = *v2;
    v25[2] = v29;
    *(void *)a1 = v32;
    *(double *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 17) = v34;
    *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v34 + 3);
    *(void *)(a1 + 24) = v22;
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v31;
    *(void *)(a1 + 56) = v19;
    *(void *)(a1 + 64) = v21;
    *(_OWORD *)(a1 + 72) = xmmword_1002BC3B0;
    *(void *)(a1 + 88) = 20048;
    *(void *)(a1 + 96) = 0xE200000000000000;
    *(_OWORD *)(a1 + 104) = v38;
    *(void *)(a1 + 120) = v39;
    *(void *)(a1 + 128) = v40;
    *(void *)(a1 + 136) = sub_10014D5C0;
    *(void *)(a1 + 144) = v25;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    sub_100039C24((uint64_t)v2);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v41);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10014DD14((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_10014BE8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v3
    && ((uint64_t v4 = *(void *)(a1 + 56), *(void *)(v3 + 16) == *(void *)(v4 + 16))
      ? (BOOL v5 = *(void *)(v3 + 24) == *(void *)(v4 + 24))
      : (BOOL v5 = 0),
        v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    (*(void (**)(void))(a1 + 64))();
  }
  else
  {
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9B08);
    sub_100039C24(a1);
    sub_100039C24(a1);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      double v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)double v9 = 136446210;
      uint64_t v10 = sub_1000C8E54();
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100039CE8(a1);
      sub_100039CE8(a1);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%{public}s] BuiltInSelectRoadsidePhoneNumberContentView: return tapped in the free form text when it is not a current question anymore", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100039CE8(a1);
      sub_100039CE8(a1);
    }
  }
}

uint64_t sub_10014C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  os_log_type_t v8 = v7;
  type metadata accessor for MainActor();
  swift_retain();
  sub_100039C24((uint64_t)v7);
  uint64_t v14 = static MainActor.shared.getter();
  uint64_t v15 = swift_allocObject();
  long long v16 = v7[4];
  *(_OWORD *)(v15 + 120) = v7[5];
  long long v17 = v7[7];
  *(_OWORD *)(v15 + 136) = v7[6];
  *(_OWORD *)(v15 + 152) = v17;
  *(_OWORD *)(v15 + 168) = v7[8];
  long long v18 = *v7;
  *(_OWORD *)(v15 + 56) = v7[1];
  long long v19 = v7[3];
  *(_OWORD *)(v15 + 72) = v7[2];
  *(_OWORD *)(v15 + 88) = v19;
  *(_OWORD *)(v15 + 104) = v16;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  *(void *)(v15 + 32) = a1;
  *(_OWORD *)(v15 + 40) = v18;
  swift_retain();
  sub_100039C24((uint64_t)v7);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v20 = static MainActor.shared.getter();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = &protocol witness table for MainActor;
  long long v22 = v8[7];
  *(_OWORD *)(v21 + 128) = v8[6];
  *(_OWORD *)(v21 + 144) = v22;
  *(_OWORD *)(v21 + 160) = v8[8];
  long long v23 = v8[3];
  *(_OWORD *)(v21 + 64) = v8[2];
  *(_OWORD *)(v21 + 80) = v23;
  long long v24 = v8[5];
  *(_OWORD *)(v21 + 96) = v8[4];
  *(_OWORD *)(v21 + 112) = v24;
  long long v25 = v8[1];
  *(_OWORD *)(v21 + 32) = *v8;
  *(_OWORD *)(v21 + 48) = v25;
  *(void *)(v21 + 176) = a1;
  *(void *)(v21 + 184) = a2;
  *(void *)(v21 + 192) = a3;
  *(void *)(v21 + 200) = a4;
  *(void *)(v21 + 208) = a5;
  *(void *)(v21 + 216) = a6;
  *(void *)(v21 + 224) = a7;
  Binding.init(get:set:)();
  return v29;
}

uint64_t sub_10014C254()
{
  return Character.isNumber.getter() & 1;
}

void sub_10014C280(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 != 7
    && (uint64_t v5 = *(void *)(a2 + 48), swift_beginAccess(), v6 = *(void *)(v5 + 64), *(void *)(v6 + 16))
    && (uint64_t v7 = sub_1001BEB10(v4), (v8 & 1) != 0)
    && (sub_1000A30C0(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v13), swift_dynamicCast()))
  {
    uint64_t v9 = v11;
    unint64_t v10 = v12;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  *a3 = v9;
  a3[1] = v10;
}

void sub_10014C338(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t (*a8)(uint64_t a1), void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v112 = *(void *)(v17 - 8);
  uint64_t v113 = v17;
  __chkstk_darwin(v17);
  unint64_t v110 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for DispatchQoS();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v108 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  unint64_t v21 = a1[1];
  uint64_t v22 = *(void *)(a4 + 48);
  swift_beginAccess();
  uint64_t v23 = *(void *)(v22 + 136);
  if (!v23
    || (*(void *)(v23 + 16) == *(void *)(a5 + 16)
      ? (BOOL v24 = *(void *)(v23 + 24) == *(void *)(a5 + 24))
      : (BOOL v24 = 0),
        !v24 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000FD84(v25, (uint64_t)qword_1003A9958);
    long long v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      long long v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Phone number: Updating value when it is not a current question anymore", v28, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v106 = v22;
  uint64_t v107 = a5;
  aBlock = a6;
  uint64_t v117 = a7;
  uint64_t v118 = a8;
  long long v119 = a9;
  swift_bridgeObjectRetain();
  sub_100004010(&qword_1003809D0);
  Binding.wrappedValue.getter();
  if (v123)
  {
    if (v20 == v122 && v123 == v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v105) = 1;
    }
    else
    {
      LODWORD(v105) = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    LODWORD(v105) = 0;
  }
  aBlock = a6;
  uint64_t v117 = a7;
  uint64_t v118 = a8;
  long long v119 = a9;
  uint64_t v122 = v20;
  unint64_t v123 = v21;
  swift_bridgeObjectRetain();
  Binding.wrappedValue.setter();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000FD84(v29, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 134349056;
    if ((v21 & 0x1000000000000000) != 0)
    {
      uint64_t v33 = (void *)String.UTF8View._foreignCount()();
    }
    else if ((v21 & 0x2000000000000000) != 0)
    {
      uint64_t v33 = (void *)(HIBYTE(v21) & 0xF);
    }
    else
    {
      uint64_t v33 = (void *)(v20 & 0xFFFFFFFFFFFFLL);
    }
    aBlock = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Phone number: Text length == %{public}ld", v32, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v34 = v107;
  uint64_t v36 = sub_10014D86C();
  unint64_t v37 = v35;
  uint64_t v122 = v36;
  unint64_t v123 = v35;
  if ((v20 != v36 || v21 != v35) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v38 = qword_10037DE10;
    swift_bridgeObjectRetain();
    if (v38 == -1) {
      goto LABEL_32;
    }
    goto LABEL_79;
  }
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v55 = 0xE000000000000000;
    uint64_t v114 = 0;
    unint64_t v115 = 0xE000000000000000;
    uint64_t v56 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v56 = v36 & 0xFFFFFFFFFFFFLL;
    }
    aBlock = (void *)v36;
    uint64_t v117 = v37;
    uint64_t v118 = 0;
    long long v119 = (void *)v56;
    swift_bridgeObjectRetain();
    Swift::String_optional v57 = String.Iterator.next()();
    object = v57.value._object;
    if (v57.value._object)
    {
      uint64_t countAndFlagsBits = v57.value._countAndFlagsBits;
      do
      {
        if ((countAndFlagsBits != 10 || object != (void *)0xE100000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          v61._uint64_t countAndFlagsBits = countAndFlagsBits;
          v61._object = object;
          String.append(_:)(v61);
        }
        swift_bridgeObjectRelease();
        Swift::String_optional v60 = String.Iterator.next()();
        uint64_t countAndFlagsBits = v60.value._countAndFlagsBits;
        object = v60.value._object;
      }
      while (v60.value._object);
      object = (void *)v114;
      unint64_t v55 = v115;
    }
    swift_bridgeObjectRelease();
    aBlock = object;
    uint64_t v117 = v55;
    uint64_t v62 = String.init<A>(_:)();
    if (v36 == v62 && v37 == v63)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v65 = v62;
      unint64_t v66 = v63;
      char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v67)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_10037DE10 != -1) {
          swift_once();
        }
        sub_10000FD84(v29, (uint64_t)qword_1003A9B08);
        sub_100039C24(a4);
        sub_100039C24(a4);
        uint64_t v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          aBlock = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v70 = 136446210;
          uint64_t v104 = v29;
          uint64_t v71 = sub_1000C8E54();
          uint64_t v114 = sub_1001B3178(v71, v72, (uint64_t *)&aBlock);
          uint64_t v29 = v104;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100039CE8(a4);
          sub_100039CE8(a4);
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%{public}s] Phone number: Return symbol entered", v70, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v34 = v107;
          swift_slowDealloc();
        }
        else
        {
          sub_100039CE8(a4);
          sub_100039CE8(a4);
        }

        if ((v105 & 1) == 0)
        {
          sub_10000FDBC();
          uint64_t v105 = static OS_dispatch_queue.main.getter();
          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = a10;
          *(void *)(v73 + 24) = a11;
          long long v120 = sub_100034078;
          long long v121 = (_OWORD *)v73;
          aBlock = _NSConcreteStackBlock;
          uint64_t v117 = 1107296256;
          uint64_t v118 = sub_100207A1C;
          long long v119 = &unk_100359670;
          uint64_t v74 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          uint64_t v75 = v108;
          static DispatchQoS.unspecified.getter();
          aBlock = _swiftEmptyArrayStorage;
          sub_10014DD14((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100004010((uint64_t *)&unk_10037FF80);
          uint64_t v76 = v29;
          sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
          uint64_t v77 = v110;
          uint64_t v78 = v113;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          long long v79 = (void *)v105;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          id v80 = v74;
          uint64_t v34 = v107;
          _Block_release(v80);

          uint64_t v81 = v78;
          uint64_t v29 = v76;
          (*(void (**)(char *, uint64_t))(v112 + 8))(v77, v81);
          (*(void (**)(char *, uint64_t))(v109 + 8))(v75, v111);
        }
        uint64_t v122 = v65;
        unint64_t v123 = v66;
      }
    }
    uint64_t v82 = v122;
    unint64_t v83 = v123;
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_10012C67C(v82, v83);
    uint64_t v86 = v85;
    swift_bridgeObjectRelease();
    if (v86)
    {
      if (v84 == 43 && v86 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_66:
        uint64_t v36 = 16;
        goto LABEL_68;
      }
      char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v87) {
        goto LABEL_66;
      }
    }
    uint64_t v36 = 15;
LABEL_68:
    swift_bridgeObjectRetain();
    uint64_t v88 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v36 >= v88) {
      goto LABEL_76;
    }
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    sub_10000FD84(v29, (uint64_t)qword_1003A9B08);
    sub_100039C24(a4);
    sub_100039C24(a4);
    uint64_t v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v91 = 136446210;
      uint64_t v92 = sub_1000C8E54();
      uint64_t v114 = sub_1001B3178(v92, v93, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100039CE8(a4);
      sub_100039CE8(a4);
      _os_log_impl((void *)&_mh_execute_header, v89, v90, "[%{public}s] Phone number: Entered text is over the limit", v91, 0xCu);
      swift_arrayDestroy();
      unint64_t v37 = v107;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v37 = v34;
      sub_100039CE8(a4);
      sub_100039CE8(a4);
    }

    sub_10000FDBC();
    uint64_t v94 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v95 = (_OWORD *)swift_allocObject();
    long long v96 = *(_OWORD *)(a4 + 112);
    v95[7] = *(_OWORD *)(a4 + 96);
    v95[8] = v96;
    v95[9] = *(_OWORD *)(a4 + 128);
    long long v97 = *(_OWORD *)(a4 + 48);
    v95[3] = *(_OWORD *)(a4 + 32);
    v95[4] = v97;
    long long v98 = *(_OWORD *)(a4 + 80);
    v95[5] = *(_OWORD *)(a4 + 64);
    v95[6] = v98;
    long long v99 = *(_OWORD *)(a4 + 16);
    v95[1] = *(_OWORD *)a4;
    v95[2] = v99;
    long long v120 = sub_10014DCF4;
    long long v121 = v95;
    aBlock = _NSConcreteStackBlock;
    uint64_t v117 = 1107296256;
    uint64_t v118 = sub_100207A1C;
    long long v119 = &unk_1003596C0;
    uint64_t v100 = _Block_copy(&aBlock);
    sub_100039C24(a4);
    swift_release();
    uint64_t v101 = v108;
    static DispatchQoS.unspecified.getter();
    aBlock = _swiftEmptyArrayStorage;
    sub_10014DD14((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v29 = (uint64_t)v110;
    uint64_t v102 = v113;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v100);

    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v29, v102);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v101, v111);
    swift_bridgeObjectRetain();
    uint64_t v103 = String.count.getter();
    swift_bridgeObjectRelease();
    if (!__OFSUB__(v103, v36)) {
      break;
    }
    __break(1u);
LABEL_79:
    swift_once();
LABEL_32:
    sub_10000FD84(v29, (uint64_t)qword_1003A9B08);
    sub_100039C24(a4);
    sub_100039C24(a4);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v104 = v29;
    if (v41)
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446210;
      uint64_t v43 = sub_1000C8E54();
      uint64_t v114 = sub_1001B3178(v43, v44, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100039CE8(a4);
      sub_100039CE8(a4);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%{public}s] Phone number: Disallowed character entered", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100039CE8(a4);
      sub_100039CE8(a4);
    }

    sub_10000FDBC();
    uint64_t v45 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v46 = (_OWORD *)swift_allocObject();
    long long v47 = *(_OWORD *)(a4 + 112);
    v46[7] = *(_OWORD *)(a4 + 96);
    v46[8] = v47;
    v46[9] = *(_OWORD *)(a4 + 128);
    long long v48 = *(_OWORD *)(a4 + 48);
    v46[3] = *(_OWORD *)(a4 + 32);
    v46[4] = v48;
    long long v49 = *(_OWORD *)(a4 + 80);
    v46[5] = *(_OWORD *)(a4 + 64);
    v46[6] = v49;
    long long v50 = *(_OWORD *)(a4 + 16);
    v46[1] = *(_OWORD *)a4;
    v46[2] = v50;
    long long v120 = sub_10014DBF8;
    long long v121 = v46;
    aBlock = _NSConcreteStackBlock;
    uint64_t v117 = 1107296256;
    uint64_t v118 = sub_100207A1C;
    long long v119 = &unk_100359620;
    uint64_t v51 = _Block_copy(&aBlock);
    sub_100039C24(a4);
    swift_release();
    uint64_t v52 = v108;
    static DispatchQoS.unspecified.getter();
    aBlock = _swiftEmptyArrayStorage;
    sub_10014DD14((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v53 = v110;
    uint64_t v54 = v113;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v51);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v53, v54);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v52, v111);
    uint64_t v29 = v104;
    uint64_t v34 = v107;
  }
  sub_10014D4AC(v103 - v36);
  uint64_t v82 = v122;
  unint64_t v83 = v123;
  uint64_t v34 = v37;
LABEL_76:
  long long v119 = &type metadata for String;
  aBlock = (void *)v82;
  uint64_t v117 = v83;
  sub_1000CF5E8(v34, (uint64_t)&aBlock);
  sub_100059550((uint64_t)&aBlock);
}

uint64_t sub_10014D404(void *a1)
{
  if (*a1)
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_10014DD14((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014D4AC(uint64_t result)
{
  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v2 = v1[1];
      if ((v2 & 0x2000000000000000) != 0) {
        uint64_t v3 = HIBYTE(v2) & 0xF;
      }
      else {
        uint64_t v3 = *v1 & 0xFFFFFFFFFFFFLL;
      }
      unint64_t v4 = String.index(_:offsetBy:limitedBy:)();
      if (v5) {
        goto LABEL_14;
      }
      if (4 * v3 >= v4 >> 14)
      {
        return String.removeSubrange(_:)();
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return String.removeSubrange(_:)();
  }
  return result;
}

uint64_t sub_10014D55C@<X0>(uint64_t a1@<X8>)
{
  return sub_10014BB40(a1);
}

void sub_10014D5B4()
{
  sub_10014BE8C(v0 + 16);
}

uint64_t sub_10014D5C0()
{
  return FocusState.wrappedValue.setter();
}

uint64_t sub_10014D61C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 184, 7);
}

void sub_10014D6B4(void *a1@<X8>)
{
  sub_10014C280(*(void *)(v1 + 32), v1 + 40, a1);
}

uint64_t sub_10014D6C4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 232, 7);
}

void sub_10014D77C(uint64_t *a1)
{
  sub_10014C338(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32, *(void *)(v1 + 176), *(void **)(v1 + 184), *(void *)(v1 + 192), *(uint64_t (**)(uint64_t))(v1 + 200), *(void **)(v1 + 208), *(void *)(v1 + 216), *(void *)(v1 + 224));
}

unint64_t sub_10014D7BC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

uint64_t sub_10014D86C()
{
  swift_bridgeObjectRetain();
  Swift::String_optional v0 = String.Iterator.next()();
  object = v0.value._object;
  if (v0.value._object)
  {
    uint64_t countAndFlagsBits = v0.value._countAndFlagsBits;
    do
    {
      swift_bridgeObjectRetain_n();
      Swift::String_optional v5 = String.Iterator.next()();
      if (!v5.value._object)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3._uint64_t countAndFlagsBits = countAndFlagsBits;
        v3._object = object;
        String.append(_:)(v3);
        goto LABEL_4;
      }
      uint64_t v6 = v5.value._countAndFlagsBits;
      uint64_t v7 = v5.value._object;
      while ((Character.isNumber.getter() & 1) != 0 || v6 == 43 && v7 == (void *)0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_8:
        Swift::String_optional v8 = String.Iterator.next()();
        uint64_t v6 = v8.value._countAndFlagsBits;
        uint64_t v7 = v8.value._object;
        if (!v8.value._object) {
          goto LABEL_3;
        }
      }
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_8;
      }
      swift_bridgeObjectRelease_n();
LABEL_4:
      swift_bridgeObjectRelease();
      Swift::String_optional v4 = String.Iterator.next()();
      uint64_t countAndFlagsBits = v4.value._countAndFlagsBits;
      object = v4.value._object;
    }
    while (v4.value._object);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = String.init<A>(_:)();
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v11) & 0xF;
  }
  else {
    uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10012C67C(v12, v13);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (v17)
    {
      if (v15 == 43 && v17 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        sub_10014D7BC(1uLL, v12, v13);
        swift_bridgeObjectRelease();
        Substring.filter(_:)();
        swift_bridgeObjectRelease();
        v19._uint64_t countAndFlagsBits = String.init<A>(_:)();
        String.append(_:)(v19);
        swift_bridgeObjectRelease();
        return 43;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_23;
      }
    }
    Swift::String_optional v20 = String.Iterator.next()();
    unint64_t v21 = v20.value._object;
    if (v20.value._object)
    {
      uint64_t v22 = v20.value._countAndFlagsBits;
      do
      {
        if (Character.isNumber.getter())
        {
          v24._uint64_t countAndFlagsBits = v22;
          v24._object = v21;
          String.append(_:)(v24);
        }
        swift_bridgeObjectRelease();
        Swift::String_optional v23 = String.Iterator.next()();
        uint64_t v22 = v23.value._countAndFlagsBits;
        unint64_t v21 = v23.value._object;
      }
      while (v23.value._object);
    }
    swift_bridgeObjectRelease();
    return String.init<A>(_:)();
  }
  return v12;
}

uint64_t sub_10014DBF8()
{
  return sub_10014D404((void *)(v0 + 16));
}

uint64_t sub_10014DC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014DC28()
{
  return swift_release();
}

uint64_t sub_10014DC30()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014DC6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10014DCF4()
{
  return sub_10014D404((void *)(v0 + 16));
}

uint64_t sub_10014DD14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10014DD60()
{
  unint64_t result = qword_100388E10;
  if (!qword_100388E10)
  {
    sub_1000094C4(&qword_100388E18);
    sub_100009B18(&qword_100388E20, &qword_100388E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100388E10);
  }
  return result;
}

id sub_10014DE10()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    Swift::String_optional v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)Swift::String_optional v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v11 = (objc_class *)type metadata accessor for MedicalIDAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for MedicalIDAgent()
{
  return self;
}

uint64_t (*sub_10014E0F0())()
{
  return j__swift_endAccess;
}

uint64_t sub_10014E14C(uint64_t a1)
{
  uint64_t v3 = sub_100004010(&qword_1003891D0);
  __chkstk_darwin(v3 - 8);
  Swift::String_optional v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentLinkState;
  swift_beginAccess();
  sub_1001567D4(a1, v6);
  swift_endAccess();
  uint64_t v7 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  swift_beginAccess();
  sub_10000D2A0(v7, (uint64_t)v5, &qword_1003891D0);
  uint64_t v8 = _s8SOSBuddy4DataVMa_2(0);
  unint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v5, 1, v8);
  uint64_t result = sub_10000950C((uint64_t)v5, &qword_1003891D0);
  if (v10 != 1)
  {
    swift_beginAccess();
    uint64_t result = v9((unsigned char *)v7, 1, v8);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_10014E2E0(a1);
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_10014E2E0(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100380788);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v41 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  int v10 = (char *)&v41 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LinkState(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  Swift::String_optional v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v41 - v21;
  sub_10000D2A0(a1, (uint64_t)v15, (uint64_t *)&unk_100383910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_10000950C((uint64_t)v15, (uint64_t *)&unk_100383910);
  }
  sub_1001566AC((uint64_t)v15, (uint64_t)v22, type metadata accessor for LinkState);
  int v24 = v22[1];
  sub_100156714((uint64_t)v22, (uint64_t)v20, type metadata accessor for LinkState);
  if (v24 != 2)
  {
    sub_1001565E8((uint64_t)v20, type metadata accessor for LinkState);
    uint64_t v27 = v42;
    goto LABEL_8;
  }
  int v25 = v20[2];
  sub_1001565E8((uint64_t)v20, type metadata accessor for LinkState);
  BOOL v26 = v25 == 2;
  uint64_t v27 = v42;
  if (!v26)
  {
LABEL_8:
    uint64_t v28 = v27 + *(int *)(_s8SOSBuddy4DataVMa_2(0) + 32);
    sub_10000D2A0(v28, (uint64_t)v12, &qword_100380788);
    uint64_t v29 = type metadata accessor for DispatchTime();
    uint64_t v30 = *(void *)(v29 - 8);
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v12, 1, v29);
    sub_10000950C((uint64_t)v12, &qword_100380788);
    if (v31 == 1)
    {
      static DispatchTime.now()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v10, 0, 1, v29);
      sub_100156648((uint64_t)v10, v28, &qword_100380788);
    }
  }
  if (v22[1])
  {
    uint64_t v32 = v27 + *(int *)(_s8SOSBuddy4DataVMa_2(0) + 36);
    sub_10000D2A0(v32, (uint64_t)v7, &qword_100380788);
    uint64_t v33 = type metadata accessor for DispatchTime();
    uint64_t v34 = *(void *)(v33 - 8);
    int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v33);
    sub_10000950C((uint64_t)v7, &qword_100380788);
    if (v35 == 1)
    {
      static DispatchTime.now()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
      sub_100156648((uint64_t)v10, v32, &qword_100380788);
    }
  }
  if ((v22[2] & 1) == 0) {
    return sub_1001565E8((uint64_t)v22, type metadata accessor for LinkState);
  }
  uint64_t v36 = v27 + *(int *)(_s8SOSBuddy4DataVMa_2(0) + 40);
  uint64_t v37 = v41;
  sub_10000D2A0(v36, v41, &qword_100380788);
  uint64_t v38 = type metadata accessor for DispatchTime();
  uint64_t v39 = *(void *)(v38 - 8);
  int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
  sub_10000950C(v37, &qword_100380788);
  if (v40 != 1) {
    return sub_1001565E8((uint64_t)v22, type metadata accessor for LinkState);
  }
  static DispatchTime.now()();
  sub_1001565E8((uint64_t)v22, type metadata accessor for LinkState);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v10, 0, 1, v38);
  return sub_100156648((uint64_t)v10, v36, &qword_100380788);
}

uint64_t sub_10014E86C(uint64_t a1)
{
  uint64_t v3 = sub_100004010(&qword_100380788);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  int v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_100004010(&qword_1003891D0);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentSuggestedActions;
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentSuggestedActions) = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  swift_beginAccess();
  sub_10000D2A0(v12, (uint64_t)v10, &qword_1003891D0);
  uint64_t v13 = _s8SOSBuddy4DataVMa_2(0);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  int v15 = v14(v10, 1, v13);
  uint64_t result = sub_10000950C((uint64_t)v10, &qword_1003891D0);
  if (v15 != 1)
  {
    uint64_t v17 = *(void *)(v1 + v11);
    swift_beginAccess();
    uint64_t result = v14((char *)v12, 1, v13);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      if (sub_100078E0C(0, v17))
      {
        uint64_t v18 = v12 + *(int *)(v13 + 28);
        sub_10000D2A0(v18, (uint64_t)v7, &qword_100380788);
        uint64_t v19 = type metadata accessor for DispatchTime();
        uint64_t v20 = *(void *)(v19 - 8);
        int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19);
        swift_bridgeObjectRetain();
        sub_10000950C((uint64_t)v7, &qword_100380788);
        if (v21 == 1)
        {
          uint64_t v22 = (uint64_t)v24;
          static DispatchTime.now()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v19);
          sub_100156648(v22, v18, &qword_100380788);
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unsigned char *sub_10014EB5C(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100389078);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EmergencyData(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v26 - v10;
  uint64_t v12 = sub_100004010(&qword_1003891D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s8SOSBuddy4DataVMa_2(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D544(a1, (uint64_t)v27, &qword_1003826B8);
  if (!*((void *)&v27[0] + 1)) {
    goto LABEL_3;
  }
  v29[3] = v27[3];
  v29[4] = v27[4];
  uint64_t v30 = v28;
  v29[0] = v27[0];
  v29[1] = v27[1];
  v29[2] = v27[2];
  sub_1000207A0(v29, &v31);
  uint64_t result = sub_1000207A0(&v31, v32);
  if (v32[0] != 5)
  {
LABEL_3:
    uint64_t v20 = v26[0] + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
    swift_beginAccess();
    sub_10000D2A0(v20, (uint64_t)v14, &qword_1003891D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      return (unsigned char *)sub_10000950C((uint64_t)v14, &qword_1003891D0);
    }
    else
    {
      sub_1001566AC((uint64_t)v14, (uint64_t)v18, _s8SOSBuddy4DataVMa_2);
      sub_10000D2A0((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v4, &qword_100389078);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_10000950C((uint64_t)v4, &qword_100389078);
      }
      else
      {
        sub_1001566AC((uint64_t)v4, (uint64_t)v11, type metadata accessor for EmergencyData);
        if (qword_10037DD78 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10000FD84(v21, (uint64_t)qword_1003A9940);
        sub_100156714((uint64_t)v11, (uint64_t)v9, type metadata accessor for EmergencyData);
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v22, v23))
        {
          int v24 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)int v24 = 134349056;
          uint64_t v25 = *v9;
          sub_1001565E8((uint64_t)v9, type metadata accessor for EmergencyData);
          v26[1] = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Emergency conversation ID %{public}llu was not committed, considering start message not ACKed and dropped, finalizing session start event.", v24, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          sub_1001565E8((uint64_t)v9, type metadata accessor for EmergencyData);
        }

        sub_1001565E8((uint64_t)v11, type metadata accessor for EmergencyData);
      }
      sub_100151A2C();
      return (unsigned char *)sub_1001565E8((uint64_t)v18, _s8SOSBuddy4DataVMa_2);
    }
  }
  return result;
}

uint64_t sub_10014F054(uint64_t a1)
{
  uint64_t v3 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v3 - 8);
  char v67 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100380788);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v64 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v66 = (uint64_t)&v63 - v8;
  uint64_t v9 = (int *)_s8SOSBuddy4DataVMa_2(0);
  uint64_t v10 = *((void *)v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EmergencyData(0);
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v69 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v76 = (uint64_t)&v63 - v16;
  uint64_t v17 = sub_100004010(&qword_1003891D0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v70 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v68 = (uint64_t)&v63 - v21;
  __chkstk_darwin(v20);
  os_log_type_t v23 = (char *)&v63 - v22;
  uint64_t v24 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  swift_beginAccess();
  uint64_t v75 = v24;
  sub_10000D2A0(v24, (uint64_t)v23, &qword_1003891D0);
  uint64_t v73 = v10;
  uint64_t v77 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  uint64_t v78 = v10 + 48;
  LODWORD(v24) = v77(v23, 1, v9);
  sub_10000950C((uint64_t)v23, &qword_1003891D0);
  uint64_t v74 = v1;
  if (v24 == 1)
  {
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000FD84(v25, (uint64_t)qword_1003A9940);
    sub_1000E4904(a1);
    sub_1000E4904(a1);
    BOOL v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446210;
      uint64_t v65 = v28 + 4;
      long long v29 = *(_OWORD *)(a1 + 16);
      long long v79 = *(_OWORD *)a1;
      long long v80 = v29;
      __int16 v81 = *(_WORD *)(a1 + 32);
      uint64_t v30 = String.init<A>(describing:)();
      *(void *)&long long v79 = sub_1001B3178(v30, v31, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000E4930(a1);
      sub_1000E4930(a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Tracking session start for %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_10:
      swift_slowDealloc();
      goto LABEL_12;
    }
  }
  else
  {
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10000FD84(v32, (uint64_t)qword_1003A9940);
    sub_1000E4904(a1);
    sub_1000E4904(a1);
    BOOL v26 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      uint64_t v65 = v34 + 4;
      long long v35 = *(_OWORD *)(a1 + 16);
      long long v79 = *(_OWORD *)a1;
      long long v80 = v35;
      __int16 v81 = *(_WORD *)(a1 + 32);
      uint64_t v36 = String.init<A>(describing:)();
      *(void *)&long long v79 = sub_1001B3178(v36, v37, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000E4930(a1);
      sub_1000E4930(a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v33, "Resetting tracking session start for %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_10;
    }
  }
  sub_1000E4930(a1);
  sub_1000E4930(a1);
LABEL_12:

  char v38 = *(unsigned char *)a1;
  uint64_t v39 = *(void *)(a1 + 8);
  char v83 = *(unsigned char *)(a1 + 34);
  uint64_t v40 = v72;
  uint64_t v41 = v76;
  uint64_t v42 = v76 + *(int *)(v72 + 28);
  uint64_t v43 = type metadata accessor for DispatchTime();
  uint64_t v65 = *(uint8_t **)(v43 - 8);
  unint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v65 + 7);
  v44(v42, 1, 1, v43);
  *(void *)uint64_t v41 = v39;
  *(unsigned char *)(v41 + 8) = v38;
  *(unsigned char *)(v41 + 9) = v83;
  *(unsigned char *)(v41 + *(int *)(v40 + 32)) = 0;
  uint64_t v45 = v69;
  sub_100156714(v41, v69, type metadata accessor for EmergencyData);
  uint64_t v46 = (uint64_t)&v12[v9[5]];
  long long v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
  v47(v46, 1, 1, v40);
  v12[v9[6]] = 1;
  v44((uint64_t)&v12[v9[7]], 1, 1, v43);
  v44((uint64_t)&v12[v9[8]], 1, 1, v43);
  v44((uint64_t)&v12[v9[9]], 1, 1, v43);
  v44((uint64_t)&v12[v9[10]], 1, 1, v43);
  long long v48 = &v12[v9[11]];
  *((void *)v48 + 4) = 0;
  *(_OWORD *)long long v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  v48[40] = 1;
  static DispatchTime.now()();
  sub_10000950C(v46, &qword_100389078);
  sub_1001566AC(v45, v46, type metadata accessor for EmergencyData);
  v47(v46, 0, 1, v40);
  uint64_t v49 = v68;
  sub_1001566AC((uint64_t)v12, v68, _s8SOSBuddy4DataVMa_2);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v73 + 56))(v49, 0, 1, v9);
  uint64_t v50 = v49;
  uint64_t v51 = v70;
  sub_10000D544(v50, v70, &qword_1003891D0);
  uint64_t v52 = v75;
  swift_beginAccess();
  sub_100156648(v51, v52, &qword_1003891D0);
  uint64_t v53 = v74;
  uint64_t v54 = *(void *)(v74 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentSuggestedActions);
  uint64_t result = v77((char *)v52, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (sub_100078E0C(0, v54))
    {
      uint64_t v56 = v52 + v9[7];
      uint64_t v57 = v66;
      sub_10000D2A0(v56, v66, &qword_100380788);
      int v58 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v65 + 6))(v57, 1, v43);
      swift_bridgeObjectRetain();
      uint64_t v59 = v57;
      uint64_t v52 = v75;
      sub_10000950C(v59, &qword_100380788);
      uint64_t v60 = (uint64_t)v67;
      if (v58 == 1)
      {
        uint64_t v61 = (uint64_t)v64;
        static DispatchTime.now()();
        v44(v61, 0, 1, v43);
        sub_100156648(v61, v56, &qword_100380788);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = (uint64_t)v67;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v62 = v53 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentLinkState;
    swift_beginAccess();
    sub_10000D2A0(v62, v60, (uint64_t *)&unk_100383910);
    swift_beginAccess();
    uint64_t result = v77((char *)v52, 1, v9);
    if (result != 1)
    {
      sub_10014E2E0(v60);
      sub_10000950C(v60, (uint64_t *)&unk_100383910);
      swift_endAccess();
      return sub_1001565E8(v76, type metadata accessor for EmergencyData);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10014FAE0(uint64_t a1)
{
  uint64_t v3 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v3 - 8);
  uint64_t v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100380788);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v63 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v65 = (uint64_t)&v63 - v8;
  uint64_t v9 = (int *)_s8SOSBuddy4DataVMa_2(0);
  uint64_t v10 = *((void *)v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EmergencyData(0);
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v68 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v74 = (uint64_t)&v63 - v16;
  uint64_t v17 = sub_100004010(&qword_1003891D0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v69 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v67 = (uint64_t)&v63 - v21;
  __chkstk_darwin(v20);
  os_log_type_t v23 = (char *)&v63 - v22;
  uint64_t v72 = v1;
  uint64_t v24 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  uint64_t v73 = v24;
  swift_beginAccess();
  sub_10000D2A0(v24, (uint64_t)v23, &qword_1003891D0);
  uint64_t v71 = v10;
  uint64_t v75 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  uint64_t v76 = v10 + 48;
  LODWORD(v10) = v75(v23, 1, v9);
  sub_10000950C((uint64_t)v23, &qword_1003891D0);
  if (v10 == 1)
  {
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000FD84(v25, (uint64_t)qword_1003A9940);
    sub_10015677C(a1);
    sub_10015677C(a1);
    BOOL v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      v79[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446210;
      uint64_t v64 = v28 + 4;
      long long v29 = *(_OWORD *)(a1 + 16);
      long long v77 = *(_OWORD *)a1;
      v78[0] = v29;
      *(_OWORD *)((char *)v78 + 10) = *(_OWORD *)(a1 + 26);
      uint64_t v30 = String.init<A>(describing:)();
      *(void *)&long long v77 = sub_1001B3178(v30, v31, v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001567A8(a1);
      sub_1001567A8(a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Tracking session start for %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_10:
      swift_slowDealloc();
      goto LABEL_12;
    }
  }
  else
  {
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10000FD84(v32, (uint64_t)qword_1003A9940);
    sub_10015677C(a1);
    sub_10015677C(a1);
    BOOL v26 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      v79[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      uint64_t v64 = v34 + 4;
      long long v35 = *(_OWORD *)(a1 + 16);
      long long v77 = *(_OWORD *)a1;
      v78[0] = v35;
      *(_OWORD *)((char *)v78 + 10) = *(_OWORD *)(a1 + 26);
      uint64_t v36 = String.init<A>(describing:)();
      *(void *)&long long v77 = sub_1001B3178(v36, v37, v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001567A8(a1);
      sub_1001567A8(a1);
      _os_log_impl((void *)&_mh_execute_header, v26, v33, "Resetting tracking session start for %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_10;
    }
  }
  sub_1001567A8(a1);
  sub_1001567A8(a1);
LABEL_12:

  uint64_t v38 = *(void *)a1;
  char v80 = *(unsigned char *)(a1 + 42);
  uint64_t v39 = *(int *)(v13 + 28);
  uint64_t v40 = v13;
  uint64_t v41 = v74;
  uint64_t v42 = v74 + v39;
  uint64_t v43 = type metadata accessor for DispatchTime();
  uint64_t v64 = *(uint8_t **)(v43 - 8);
  unint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v64 + 7);
  v44(v42, 1, 1, v43);
  *(void *)uint64_t v41 = v38;
  *(unsigned char *)(v41 + 8) = 4;
  *(unsigned char *)(v41 + 9) = v80;
  *(unsigned char *)(v41 + *(int *)(v40 + 32)) = 0;
  uint64_t v45 = v68;
  sub_100156714(v41, v68, type metadata accessor for EmergencyData);
  uint64_t v46 = (uint64_t)&v12[v9[5]];
  long long v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56);
  v47(v46, 1, 1, v40);
  v12[v9[6]] = 1;
  v44((uint64_t)&v12[v9[7]], 1, 1, v43);
  v44((uint64_t)&v12[v9[8]], 1, 1, v43);
  v44((uint64_t)&v12[v9[9]], 1, 1, v43);
  v44((uint64_t)&v12[v9[10]], 1, 1, v43);
  long long v48 = &v12[v9[11]];
  *((void *)v48 + 4) = 0;
  *(_OWORD *)long long v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  v48[40] = 1;
  static DispatchTime.now()();
  sub_10000950C(v46, &qword_100389078);
  sub_1001566AC(v45, v46, type metadata accessor for EmergencyData);
  v47(v46, 0, 1, v40);
  uint64_t v49 = v67;
  sub_1001566AC((uint64_t)v12, v67, _s8SOSBuddy4DataVMa_2);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v71 + 56))(v49, 0, 1, v9);
  uint64_t v50 = v49;
  uint64_t v51 = v69;
  sub_10000D544(v50, v69, &qword_1003891D0);
  uint64_t v52 = v73;
  swift_beginAccess();
  sub_100156648(v51, v52, &qword_1003891D0);
  uint64_t v53 = v72;
  uint64_t v54 = *(void *)(v72 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentSuggestedActions);
  uint64_t result = v75((char *)v52, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (sub_100078E0C(0, v54))
    {
      uint64_t v56 = v52 + v9[7];
      uint64_t v57 = v65;
      sub_10000D2A0(v56, v65, &qword_100380788);
      int v58 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v64 + 6))(v57, 1, v43);
      swift_bridgeObjectRetain();
      uint64_t v59 = v57;
      uint64_t v52 = v73;
      sub_10000950C(v59, &qword_100380788);
      uint64_t v60 = (uint64_t)v66;
      if (v58 == 1)
      {
        uint64_t v61 = (uint64_t)v63;
        static DispatchTime.now()();
        v44(v61, 0, 1, v43);
        sub_100156648(v61, v56, &qword_100380788);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = (uint64_t)v66;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v62 = v53 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentLinkState;
    swift_beginAccess();
    sub_10000D2A0(v62, v60, (uint64_t *)&unk_100383910);
    swift_beginAccess();
    uint64_t result = v75((char *)v52, 1, v9);
    if (result != 1)
    {
      sub_10014E2E0(v60);
      sub_10000950C(v60, (uint64_t *)&unk_100383910);
      swift_endAccess();
      return sub_1001565E8(v74, type metadata accessor for EmergencyData);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100150568(int a1, uint64_t a2)
{
  uint64_t v78 = a2;
  int v75 = a1;
  uint64_t v3 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v3 - 8);
  uint64_t v76 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_100380788);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v73 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v74 = (uint64_t)&v72 - v8;
  uint64_t v9 = sub_100004010(&qword_100389078);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_1003891D0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v82 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v72 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v72 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v72 - v21;
  uint64_t v81 = v2;
  uint64_t v23 = v2 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  swift_beginAccess();
  sub_10000D2A0(v23, (uint64_t)v22, &qword_1003891D0);
  uint64_t v24 = (int *)_s8SOSBuddy4DataVMa_2(0);
  uint64_t v79 = *((void *)v24 - 1);
  uint64_t v25 = v79 + 48;
  BOOL v26 = *(uint64_t (**)(char *, uint64_t, int *))(v79 + 48);
  int v27 = v26(v22, 1, v24);
  sub_10000950C((uint64_t)v22, &qword_1003891D0);
  char v83 = (uint64_t (*)(uint64_t, uint64_t))v26;
  uint64_t v80 = v25;
  uint64_t v77 = v23;
  if (v27 != 1)
  {
    sub_10000D2A0(v23, (uint64_t)v20, &qword_1003891D0);
    uint64_t result = v26(v20, 1, v24);
    if (result == 1) {
      goto LABEL_27;
    }
    sub_10000D2A0((uint64_t)&v20[v24[5]], (uint64_t)v11, &qword_100389078);
    uint64_t v38 = type metadata accessor for EmergencyData(0);
    int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v11, 1, v38);
    sub_10000950C((uint64_t)v11, &qword_100389078);
    sub_1001565E8((uint64_t)v20, _s8SOSBuddy4DataVMa_2);
    if (v39 == 1)
    {
      uint64_t v40 = v78;
      if (qword_10037DD78 != -1) {
        swift_once();
      }
      uint64_t v41 = type metadata accessor for Logger();
      sub_10000FD84(v41, (uint64_t)qword_1003A9940);
      swift_retain_n();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 136446210;
        v84[0] = v42;
        LOBYTE(v85) = v75 & 1;
        uint64_t v86 = v40;
        swift_retain();
        uint64_t v43 = String.init<A>(describing:)();
        uint64_t v85 = sub_1001B3178(v43, v44, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v36 = "Resetting tracking FindMy start for %{public}s";
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v45 = v78;
      if (qword_10037DD78 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      sub_10000FD84(v46, (uint64_t)qword_1003A9940);
      swift_retain_n();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 136446210;
        v84[0] = v47;
        LOBYTE(v85) = v75 & 1;
        uint64_t v86 = v45;
        swift_retain();
        uint64_t v48 = String.init<A>(describing:)();
        uint64_t v85 = sub_1001B3178(v48, v49, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v36 = "Session is already in progress, ignoring FindMy start for %{public}s";
        goto LABEL_16;
      }
    }
LABEL_17:

    swift_release_n();
    goto LABEL_18;
  }
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000FD84(v28, (uint64_t)qword_1003A9940);
  uint64_t v29 = v78;
  swift_retain_n();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v30, v31)) {
    goto LABEL_17;
  }
  uint64_t v32 = (uint8_t *)swift_slowAlloc();
  uint64_t v33 = swift_slowAlloc();
  *(_DWORD *)uint64_t v32 = 136446210;
  v84[0] = v33;
  LOBYTE(v85) = v75 & 1;
  uint64_t v86 = v29;
  swift_retain();
  uint64_t v34 = String.init<A>(describing:)();
  uint64_t v85 = sub_1001B3178(v34, v35, v84);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v36 = "Tracking FindMy start for %{public}s";
LABEL_16:
  _os_log_impl((void *)&_mh_execute_header, v30, v31, v36, v32, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_18:
  uint64_t v50 = &v17[v24[5]];
  uint64_t v51 = type metadata accessor for EmergencyData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);
  uint64_t v52 = v24[6];
  uint64_t v53 = &v17[v24[7]];
  uint64_t v54 = type metadata accessor for DispatchTime();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  v56(v53, 1, 1, v54);
  v56(&v17[v24[8]], 1, 1, v54);
  v56(&v17[v24[9]], 1, 1, v54);
  v56(&v17[v24[10]], 1, 1, v54);
  uint64_t v57 = &v17[v24[11]];
  *((void *)v57 + 4) = 0;
  *(_OWORD *)uint64_t v57 = 0u;
  *((_OWORD *)v57 + 1) = 0u;
  v57[40] = 1;
  static DispatchTime.now()();
  v17[v52] = 0;
  (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v17, 0, 1, v24);
  uint64_t v58 = v82;
  sub_10000D544((uint64_t)v17, v82, &qword_1003891D0);
  uint64_t v59 = v77;
  swift_beginAccess();
  sub_100156648(v58, v59, &qword_1003891D0);
  uint64_t v60 = v81;
  uint64_t v61 = *(void *)(v81 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentSuggestedActions);
  uint64_t v62 = (uint64_t)v24;
  uint64_t v63 = v59;
  uint64_t v82 = v62;
  uint64_t result = v83(v59, 1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (sub_100078E0C(0, v61))
    {
      uint64_t v64 = *(int *)(v82 + 28);
      uint64_t v65 = v59 + v64;
      uint64_t v66 = v74;
      sub_10000D2A0(v63 + v64, v74, &qword_100380788);
      int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v66, 1, v54);
      swift_bridgeObjectRetain();
      sub_10000950C(v66, &qword_100380788);
      if (v67 == 1)
      {
        uint64_t v68 = (uint64_t)v73;
        static DispatchTime.now()();
        v56((char *)v68, 0, 1, v54);
        sub_100156648(v68, v65, &qword_100380788);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v69 = v60 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentLinkState;
    swift_beginAccess();
    uint64_t v70 = v69;
    uint64_t v71 = v76;
    sub_10000D2A0(v70, v76, (uint64_t *)&unk_100383910);
    swift_beginAccess();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v83)(v63, 1, v82);
    if (result != 1)
    {
      sub_10014E2E0(v71);
      sub_10000950C(v71, (uint64_t *)&unk_100383910);
      return swift_endAccess();
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100150FFC(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = sub_100004010(&qword_1003891D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v42 - v5;
  uint64_t v7 = sub_100004010(&qword_100389078);
  __chkstk_darwin(v7 - 8);
  uint64_t v50 = ((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = type metadata accessor for EmergencyData(0);
  uint64_t v9 = *(void *)(v49 - 8);
  uint64_t v10 = __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v46 = v1;
  uint64_t v15 = v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  swift_beginAccess();
  sub_10000D2A0(v15, (uint64_t)v6, &qword_1003891D0);
  uint64_t v16 = _s8SOSBuddy4DataVMa_2(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v18)(v6, 1, v16))
  {
    sub_10000950C((uint64_t)v6, &qword_1003891D0);
    uint64_t v19 = v50;
    (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v50, 1, 1, v49);
    return sub_10000950C((uint64_t)v19, &qword_100389078);
  }
  uint64_t v43 = (uint64_t *)v12;
  unint64_t v44 = v18;
  uint64_t v20 = v17;
  uint64_t v45 = v14;
  uint64_t v19 = v50;
  sub_10000D2A0((uint64_t)&v6[*(int *)(v16 + 20)], (uint64_t)v50, &qword_100389078);
  sub_10000950C((uint64_t)v6, &qword_1003891D0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v21 = v9 + 48;
  uint64_t v22 = v23;
  uint64_t v24 = v49;
  if (v23((uint64_t)v19, 1, v49) == 1) {
    return sub_10000950C((uint64_t)v19, &qword_100389078);
  }
  BOOL v26 = v45;
  sub_1001566AC((uint64_t)v19, (uint64_t)v45, type metadata accessor for EmergencyData);
  sub_100078CAC(v48, (uint64_t)&v52);
  if ((v54 & 0x80000000) == 0)
  {
    uint64_t v27 = v53;
    uint64_t v28 = v44;
    if ((v53 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_21;
  }
  v54 &= ~0x80u;
  uint64_t v27 = v52;
  uint64_t v28 = v44;
  if (v52 < 0) {
    goto LABEL_20;
  }
LABEL_7:
  if (v27 != *v26)
  {
    uint64_t v50 = v27;
    if (qword_10037DD78 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000FD84(v37, (uint64_t)qword_1003A9940);
    uint64_t v28 = v43;
    sub_100156714((uint64_t)v26, (uint64_t)v43, type metadata accessor for EmergencyData);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 134349312;
      uint64_t v40 = *v28;
      sub_1001565E8((uint64_t)v28, type metadata accessor for EmergencyData);
      uint64_t v51 = v40;
      BOOL v26 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 12) = 2050;
      uint64_t v51 = (uint64_t)v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v19, v38, "Conversation ID for the pending start session %{public}llu does not match the current one %{public}llu, resetting.", (uint8_t *)v39, 0x16u);
      swift_slowDealloc();
LABEL_22:
      uint64_t v41 = (uint64_t)v47;

      sub_1001565E8((uint64_t)v26, type metadata accessor for EmergencyData);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v41, 1, 1, v16);
      swift_beginAccess();
      sub_100156648(v41, v15, &qword_1003891D0);
      return swift_endAccess();
    }
LABEL_21:
    sub_1001565E8((uint64_t)v28, type metadata accessor for EmergencyData);
    goto LABEL_22;
  }
  uint64_t v29 = v27;
  uint64_t v50 = v21;
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000FD84(v30, (uint64_t)qword_1003A9940);
  os_log_type_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = v16;
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 134349056;
    uint64_t v51 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Conversation ID %{public}llu is committed, considering start message ACKed, finalizing session start event.", v34, 0xCu);
    uint64_t v16 = v33;
    swift_slowDealloc();
  }

  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(v15, 1, v16);
  uint64_t v35 = (uint64_t)v45;
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v36 = v15 + *(int *)(v16 + 20);
    uint64_t result = v22(v36, 1, v24);
    if (result != 1)
    {
      *(unsigned char *)(v36 + *(int *)(v24 + 32)) = 1;
      sub_100151A2C();
      return sub_1001565E8(v35, type metadata accessor for EmergencyData);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001516DC(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    if (*(unsigned char *)(v4 + v3 + 31) == 4)
    {
      uint64_t v5 = sub_10014E0F0();
      uint64_t v7 = v6;
      uint64_t v8 = _s8SOSBuddy4DataVMa_2(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8)) {
        sub_1001517AC();
      }
      return ((uint64_t (*)(unsigned char *, void))v5)(v9, 0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001517AC()
{
  uint64_t v1 = sub_100004010(&qword_100380788);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = sub_100004010(&qword_100389078);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v0 + *(int *)(_s8SOSBuddy4DataVMa_2(0) + 20);
  sub_10000D2A0(v10, (uint64_t)v9, &qword_100389078);
  uint64_t v11 = type metadata accessor for EmergencyData(0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  int v13 = v12(v9, 1, v11);
  uint64_t result = sub_10000950C((uint64_t)v9, &qword_100389078);
  if (v13 != 1)
  {
    uint64_t result = v12((char *)v10, 1, v11);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_10000D2A0(v10 + *(int *)(v11 + 28), (uint64_t)v6, &qword_100380788);
      uint64_t v15 = type metadata accessor for DispatchTime();
      uint64_t v16 = *(void *)(v15 - 8);
      int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15);
      uint64_t result = sub_10000950C((uint64_t)v6, &qword_100380788);
      if (v17 != 1) {
        return result;
      }
      static DispatchTime.now()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v4, 0, 1, v15);
      uint64_t result = v12((char *)v10, 1, v11);
      if (result != 1) {
        return sub_100156648((uint64_t)v4, v10 + *(int *)(v11 + 28), &qword_100380788);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100151A2C()
{
  uint64_t v1 = sub_100004010(&qword_100389078);
  __chkstk_darwin(v1 - 8);
  uint64_t v47 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for EmergencyData(0);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  uint64_t v41 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004010(&qword_1003891D0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  unint64_t v44 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v40 = (uint64_t)&v40 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v40 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  int v17 = (char *)&v40 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = v0;
  uint64_t v21 = v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data;
  swift_beginAccess();
  sub_10000D2A0(v21, (uint64_t)v19, &qword_1003891D0);
  uint64_t v22 = (int *)_s8SOSBuddy4DataVMa_2(0);
  uint64_t v43 = *((void *)v22 - 1);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, int *))(v43 + 48);
  int v24 = v23(v19, 1, v22);
  uint64_t result = sub_10000950C((uint64_t)v19, &qword_1003891D0);
  if (v24 != 1)
  {
    uint64_t result = v23((char *)v21, 1, v22);
    if (result == 1)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    char v26 = *(unsigned char *)(v20 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentTarget + 40);
    uint64_t v27 = *(void *)(v20 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentTarget + 32);
    uint64_t v28 = v21 + v22[11];
    long long v29 = *(_OWORD *)(v20 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentTarget + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)(v20 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentTarget);
    *(_OWORD *)(v28 + 16) = v29;
    *(void *)(v28 + 32) = v27;
    *(unsigned char *)(v28 + 40) = v26;
    sub_10000D2A0(v21, (uint64_t)v17, &qword_1003891D0);
    int v30 = v23(v17, 1, v22);
    uint64_t v31 = v47;
    if (v30)
    {
      sub_10000950C((uint64_t)v17, &qword_1003891D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v31, 1, 1, v46);
LABEL_6:
      sub_10000950C(v31, &qword_100389078);
      sub_10000D2A0(v21, (uint64_t)v12, &qword_1003891D0);
      if (v23(v12, 1, v22))
      {
        sub_10000950C((uint64_t)v12, &qword_1003891D0);
LABEL_18:
        uint64_t v39 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, int *))(v43 + 56))(v44, 1, 1, v22);
        swift_beginAccess();
        sub_100156648(v39, v21, &qword_1003891D0);
        return swift_endAccess();
      }
      char v32 = v12[v22[6]];
      sub_10000950C((uint64_t)v12, &qword_1003891D0);
      if (v32) {
        goto LABEL_18;
      }
      uint64_t v33 = v40;
      sub_10000D2A0(v21, v40, &qword_1003891D0);
      uint64_t result = v23((char *)v33, 1, v22);
      if (result != 1)
      {
        unint64_t v34 = sub_100152050();
        sub_1001565E8(v33, _s8SOSBuddy4DataVMa_2);
        sub_1001B6D38(4, v34);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      goto LABEL_21;
    }
    sub_10000D2A0((uint64_t)&v17[v22[5]], v47, &qword_100389078);
    sub_10000950C((uint64_t)v17, &qword_1003891D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v46) == 1) {
      goto LABEL_6;
    }
    uint64_t v35 = v41;
    sub_1001566AC(v31, v41, type metadata accessor for EmergencyData);
    if (*(unsigned char *)(v35 + 9))
    {
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v37 = (uint64_t)v42;
      if ((v36 & 1) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = (uint64_t)v42;
    }
    sub_10000D2A0(v21, v37, &qword_1003891D0);
    uint64_t result = v23((char *)v37, 1, v22);
    if (result == 1)
    {
LABEL_22:
      __break(1u);
      return result;
    }
    unint64_t v38 = sub_100152050();
    sub_1001565E8(v37, _s8SOSBuddy4DataVMa_2);
    sub_1001B6D38(4, v38);
    swift_bridgeObjectRelease();
LABEL_17:
    sub_1001565E8(v35, type metadata accessor for EmergencyData);
    goto LABEL_18;
  }
  return result;
}

unint64_t sub_100152050()
{
  uint64_t v125 = type metadata accessor for DispatchTime();
  uint64_t v121 = *(void *)(v125 - 8);
  uint64_t v1 = __chkstk_darwin(v125);
  uint64_t v103 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v104 = (char *)&v102 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v106 = (char *)&v102 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v112 = (char *)&v102 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  long long v119 = (char *)&v102 - v10;
  __chkstk_darwin(v9);
  Swift::Int v116 = (char *)&v102 - v11;
  uint64_t v12 = sub_100004010(&qword_100380788);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v105 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v113 = (uint64_t)&v102 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v114 = (uint64_t)&v102 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v117 = (uint64_t)&v102 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v118 = (uint64_t)&v102 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v124 = (uint64_t)&v102 - v24;
  __chkstk_darwin(v23);
  char v26 = (char *)&v102 - v25;
  uint64_t v27 = sub_100004010(&qword_100389078);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v110 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v102 - v30;
  uint64_t v32 = type metadata accessor for EmergencyData(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  char v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  unint64_t v38 = (char *)&v102 - v37;
  uint64_t v39 = (int *)_s8SOSBuddy4DataVMa_2(0);
  uint64_t v107 = v0 + v39[5];
  sub_10000D2A0(v107, (uint64_t)v31, &qword_100389078);
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, char *))(v33 + 48);
  uint64_t v122 = v32;
  uint64_t v109 = v33 + 48;
  uint64_t v108 = v40;
  unsigned int v41 = v40((uint64_t)v31, 1, (char *)v32);
  long long v120 = v36;
  if (v41 == 1)
  {
    sub_10000950C((uint64_t)v31, &qword_100389078);
  }
  else
  {
    sub_1001566AC((uint64_t)v31, (uint64_t)v38, type metadata accessor for EmergencyData);
    sub_1001565E8((uint64_t)v38, type metadata accessor for EmergencyData);
  }
  sub_100004010(&qword_1003826A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3F10;
  *(void *)(inited + 32) = 0x707954746E657665;
  *(void *)(inited + 40) = 0xE900000000000065;
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v43;
  *(void *)(inited + 56) = 0x6767697254777473;
  *(void *)(inited + 64) = 0xEA00000000007265;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v44;
  *(void *)(inited + 80) = 0x74617453636E7973;
  *(void *)(inited + 88) = 0xEA00000000007375;
  uint64_t v115 = v0 + v39[9];
  sub_10000D2A0(v115, (uint64_t)v26, &qword_100380788);
  uint64_t v45 = v121;
  uint64_t v47 = v121 + 48;
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
  uint64_t v48 = v125;
  v46(v26, 1, v125);
  sub_10000950C((uint64_t)v26, &qword_100380788);
  *(NSNumber *)(inited + 96) = Bool._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0x7574617453676572;
  *(void *)(inited + 112) = 0xE900000000000073;
  uint64_t v111 = v0 + v39[10];
  uint64_t v49 = v124;
  sub_10000D2A0(v111, v124, &qword_100380788);
  v46((char *)v49, 1, v48);
  sub_10000950C(v49, &qword_100380788);
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  unint64_t v50 = sub_100283ACC(inited);
  uint64_t v51 = v118;
  sub_10000D2A0(v0 + v39[7], v118, &qword_100380788);
  unint64_t v123 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
  uint64_t v124 = v47;
  unsigned int v52 = v46((char *)v51, 1, v48);
  uint64_t v53 = v0;
  if (v52 == 1)
  {
    sub_10000950C(v51, &qword_100380788);
    uint64_t v54 = v45;
    uint64_t v55 = (uint64_t)v120;
    uint64_t v56 = v48;
    uint64_t v57 = v123;
    uint64_t v58 = v119;
    goto LABEL_11;
  }
  (*(void (**)(void))(v45 + 32))();
  unint64_t v59 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v60 = DispatchTime.uptimeNanoseconds.getter();
  uint64_t v54 = v45;
  uint64_t v55 = (uint64_t)v120;
  uint64_t v58 = v119;
  if (v60 >= v59) {
    goto LABEL_9;
  }
  unint64_t v61 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v62 = DispatchTime.uptimeNanoseconds.getter();
  uint64_t v57 = v123;
  if (v61 < v62)
  {
    __break(1u);
LABEL_9:
    uint64_t v57 = v123;
  }
  Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v126 = v50;
  sub_1002699E8((uint64_t)isa, 0xD000000000000011, 0x80000001002D0450, isUniquelyReferenced_nonNull_native);
  unint64_t v50 = v126;
  swift_bridgeObjectRelease();
  uint64_t v56 = v125;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v116, v125);
LABEL_11:
  uint64_t v65 = v117;
  sub_10000D2A0(v53 + v39[8], v117, &qword_100380788);
  if (v57(v65, 1, v56) == 1)
  {
    sub_10000950C(v65, &qword_100380788);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v58, v65, v56);
    unint64_t v66 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() < v66)
    {
      unint64_t v67 = DispatchTime.uptimeNanoseconds.getter();
      if (v67 < DispatchTime.uptimeNanoseconds.getter()) {
        __break(1u);
      }
    }
    Class v68 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v126 = v50;
    sub_1002699E8((uint64_t)v68, 0xD000000000000012, 0x80000001002D0430, v69);
    unint64_t v50 = v126;
    swift_bridgeObjectRelease();
    uint64_t v56 = v125;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v58, v125);
  }
  uint64_t v70 = v114;
  sub_10000D2A0(v115, v114, &qword_100380788);
  if (v57(v70, 1, v56) == 1)
  {
    sub_10000950C(v70, &qword_100380788);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v112, v70, v56);
    unint64_t v71 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() < v71)
    {
      unint64_t v72 = DispatchTime.uptimeNanoseconds.getter();
      if (v72 < DispatchTime.uptimeNanoseconds.getter()) {
        __break(1u);
      }
    }
    Class v73 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v126 = v50;
    sub_1002699E8((uint64_t)v73, 0x4379636E6574616CLL, 0xEC0000004D706D61, v74);
    unint64_t v50 = v126;
    swift_bridgeObjectRelease();
    uint64_t v56 = v125;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v112, v125);
  }
  int v75 = (char *)v122;
  uint64_t v76 = v113;
  sub_10000D2A0(v111, v113, &qword_100380788);
  if (v57(v76, 1, v56) == 1)
  {
    sub_10000950C(v76, &qword_100380788);
  }
  else
  {
    uint64_t v77 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v106, v76, v56);
    unint64_t v78 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() < v78)
    {
      unint64_t v79 = DispatchTime.uptimeNanoseconds.getter();
      if (v79 < DispatchTime.uptimeNanoseconds.getter()) {
        __break(1u);
      }
    }
    Class v80 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v126 = v50;
    sub_1002699E8((uint64_t)v80, 0x5279636E6574616CLL, 0xEB000000004D6765, v81);
    unint64_t v50 = v126;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v77, v125);
  }
  uint64_t v82 = v110;
  sub_10000D2A0(v107, v110, &qword_100389078);
  if (v108(v82, 1, v75) == 1)
  {
    char v83 = &qword_100389078;
LABEL_43:
    sub_10000950C(v82, v83);
    goto LABEL_49;
  }
  sub_1001566AC(v82, v55, type metadata accessor for EmergencyData);
  if (*(unsigned char *)(v55 + 9))
  {
    char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v84 & 1) == 0) {
      goto LABEL_48;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v85 = *((int *)v75 + 8);
  Class v86 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v126 = v50;
  sub_1002699E8((uint64_t)v86, 0x74617453766E6F63, 0xEA00000000007375, v87);
  unint64_t v50 = v126;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v55 + v85) == 1)
  {
    int v75 = v104;
    static DispatchTime.now()();
    unint64_t v88 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() >= v88
      || (unint64_t v89 = DispatchTime.uptimeNanoseconds.getter(), v89 >= DispatchTime.uptimeNanoseconds.getter()))
    {
      uint64_t v91 = v75;
      int v75 = (char *)v122;
      uint64_t v90 = v125;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v91, v125);
      Class v92 = UInt64._bridgeToObjectiveC()().super.super.isa;
      char v93 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v126 = v50;
      sub_1002699E8((uint64_t)v92, 0xD000000000000010, 0x80000001002D0410, v93);
      unint64_t v50 = v126;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    __break(1u);
  }
  uint64_t v90 = v125;
LABEL_41:
  uint64_t v82 = v105;
  sub_10000D2A0(v55 + *((int *)v75 + 7), v105, &qword_100380788);
  if (v123(v82, 1, v90) == 1)
  {
    sub_1001565E8(v55, type metadata accessor for EmergencyData);
    char v83 = &qword_100380788;
    goto LABEL_43;
  }
  uint64_t v94 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v103, v82, v90);
  unint64_t v95 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() < v95)
  {
    unint64_t v96 = DispatchTime.uptimeNanoseconds.getter();
    if (v96 < DispatchTime.uptimeNanoseconds.getter()) {
      __break(1u);
    }
  }
  Class v97 = UInt64._bridgeToObjectiveC()().super.super.isa;
  char v98 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v126 = v50;
  sub_1002699E8((uint64_t)v97, 0xD000000000000011, 0x80000001002D03F0, v98);
  unint64_t v50 = v126;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v94, v125);
LABEL_48:
  sub_1001565E8(v55, type metadata accessor for EmergencyData);
LABEL_49:
  if ((*(unsigned char *)(v53 + v39[11] + 40) & 1) == 0)
  {
    Class v99 = Int64._bridgeToObjectiveC()().super.super.isa;
    char v100 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v126 = v50;
    sub_1002699E8((uint64_t)v99, 0x6449746173, 0xE500000000000000, v100);
    unint64_t v50 = v126;
    swift_bridgeObjectRelease();
  }
  return v50;
}

uint64_t sub_100153094()
{
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_data, &qword_1003891D0);
  swift_bridgeObjectRelease();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentLinkState, (uint64_t *)&unk_100383910);

  return swift_deallocClassInstance();
}

uint64_t sub_100153130()
{
  return type metadata accessor for AnalyticsSessionStart(0);
}

uint64_t type metadata accessor for AnalyticsSessionStart(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_100388EC8);
}

void sub_100153158()
{
  sub_1001532A0(319, (unint64_t *)&unk_100388ED8, (void (*)(uint64_t))_s8SOSBuddy4DataVMa_2);
  if (v0 <= 0x3F)
  {
    sub_1001532A0(319, &qword_1003880C8, (void (*)(uint64_t))type metadata accessor for LinkState);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t _s8SOSBuddy4DataVMa_2(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_1003890D8);
}

void sub_1001532A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_1001532F4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DispatchTime();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v46 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
    v46(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for EmergencyData(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100004010(&qword_100389078);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      unsigned char v10[8] = v11[8];
      v10[9] = v11[9];
      uint64_t v17 = *(int *)(v12 + 28);
      __dst = &v10[v17];
      uint64_t v18 = v8;
      uint64_t v19 = &v11[v17];
      uint64_t v43 = v18;
      NSString v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v44(&v11[v17], 1, v7))
      {
        uint64_t v20 = sub_100004010(&qword_100380788);
        memcpy(__dst, v19, *(void *)(*(void *)(v20 - 8) + 64));
        uint64_t v8 = v43;
      }
      else
      {
        v46(__dst, v19, v7);
        uint64_t v8 = v43;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v7);
      }
      v10[*(int *)(v12 + 32)] = v11[*(int *)(v12 + 32)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      uint64_t v15 = v44;
    }
    uint64_t v21 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = v15;
    if (v15((char *)a2 + v21, 1, v7))
    {
      uint64_t v25 = sub_100004010(&qword_100380788);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v46(v22, v23, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
    }
    uint64_t v26 = a3[8];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    if (v24((char *)a2 + v26, 1, v7))
    {
      uint64_t v29 = sub_100004010(&qword_100380788);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v46(v27, v28, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v27, 0, 1, v7);
    }
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if (v24((char *)a2 + v30, 1, v7))
    {
      uint64_t v33 = sub_100004010(&qword_100380788);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v46(v31, v32, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v31, 0, 1, v7);
    }
    uint64_t v34 = a3[10];
    uint64_t v35 = (char *)a1 + v34;
    char v36 = (char *)a2 + v34;
    if (v24((char *)a2 + v34, 1, v7))
    {
      uint64_t v37 = sub_100004010(&qword_100380788);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      v46(v35, v36, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v7);
    }
    uint64_t v38 = a3[11];
    uint64_t v39 = (_OWORD *)((char *)a1 + v38);
    uint64_t v40 = (_OWORD *)((char *)a2 + v38);
    long long v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    *(_OWORD *)((char *)v39 + 25) = *(_OWORD *)((char *)v40 + 25);
  }
  return a1;
}

uint64_t type metadata accessor for EmergencyData(uint64_t a1)
{
  return sub_1000497F4(a1, qword_100389188);
}

uint64_t sub_100153838(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for EmergencyData(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  }
  else
  {
    uint64_t v9 = v6 + *(int *)(v7 + 28);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v8(v9, 1, v4)) {
      v15(v9, v4);
    }
  }
  uint64_t v10 = a1 + a2[7];
  if (!v8(v10, 1, v4)) {
    v15(v10, v4);
  }
  uint64_t v11 = a1 + a2[8];
  if (!v8(v11, 1, v4)) {
    v15(v11, v4);
  }
  uint64_t v12 = a1 + a2[9];
  if (!v8(v12, 1, v4)) {
    v15(v12, v4);
  }
  uint64_t v13 = a1 + a2[10];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v13, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v4);
  }
  return result;
}

uint64_t sub_100153A84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  NSString v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v44(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for EmergencyData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100004010(&qword_100389078);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    v9[9] = v10[9];
    uint64_t v15 = *(int *)(v11 + 28);
    __dst = &v9[v15];
    uint64_t v16 = v7;
    uint64_t v17 = &v10[v15];
    uint64_t v41 = v16;
    uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (v42((uint64_t)&v10[v15], 1, v6))
    {
      uint64_t v18 = sub_100004010(&qword_100380788);
      memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v7 = v41;
    }
    else
    {
      v44((uint64_t)__dst, (uint64_t)v17, v6);
      uint64_t v7 = v41;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v6);
    }
    v9[*(int *)(v11 + 32)] = v10[*(int *)(v11 + 32)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    uint64_t v14 = v42;
  }
  uint64_t v19 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = v14;
  if (v14(a2 + v19, 1, v6))
  {
    uint64_t v23 = sub_100004010(&qword_100380788);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v20, (uint64_t)v21, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  if (v22(a2 + v24, 1, v6))
  {
    uint64_t v27 = sub_100004010(&qword_100380788);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v25, (uint64_t)v26, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v22(a2 + v28, 1, v6))
  {
    uint64_t v31 = sub_100004010(&qword_100380788);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v29, (uint64_t)v30, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v22(a2 + v32, 1, v6))
  {
    uint64_t v35 = sub_100004010(&qword_100380788);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v33, (uint64_t)v34, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  uint64_t v36 = a3[11];
  uint64_t v37 = (_OWORD *)(a1 + v36);
  uint64_t v38 = (_OWORD *)(a2 + v36);
  long long v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  *(_OWORD *)((char *)v37 + 25) = *(_OWORD *)((char *)v38 + 25);
  return a1;
}

uint64_t sub_100153F58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v63 = *(void *)(v6 - 8);
  unint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 24);
  v61(a1, a2, v6);
  unint64_t v62 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for EmergencyData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      v8[8] = v9[8];
      v8[9] = v9[9];
      uint64_t v15 = *(int *)(v10 + 28);
      __dst = &v8[v15];
      uint64_t v16 = &v9[v15];
      uint64_t v17 = v62;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v63 + 48))(&v9[v15], 1, v6))
      {
        uint64_t v18 = sub_100004010(&qword_100380788);
        memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 16))(__dst, v16, v6);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v63 + 56))(__dst, 0, 1, v6);
      }
      v8[*(int *)(v10 + 32)] = v9[*(int *)(v10 + 32)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v19 = sub_100004010(&qword_100389078);
    memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
    uint64_t v17 = v62;
LABEL_13:
    uint64_t v26 = v63;
    goto LABEL_14;
  }
  if (v14)
  {
    sub_1001565E8((uint64_t)v8, type metadata accessor for EmergencyData);
    goto LABEL_7;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  v8[8] = v9[8];
  v8[9] = v9[9];
  uint64_t v20 = *(int *)(v10 + 28);
  uint64_t v21 = &v9[v20];
  uint64_t v22 = *(uint64_t (**)(void))(v63 + 48);
  unint64_t v59 = &v8[v20];
  int v23 = v22();
  int v24 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v22)(v21, 1, v6);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = sub_100004010(&qword_100380788);
      memcpy(v59, v21, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_47:
      uint64_t v17 = v62;
      uint64_t v26 = v63;
      goto LABEL_48;
    }
    uint64_t v26 = v63;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 16))(v59, v21, v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v63 + 56))(v59, 0, 1, v6);
    uint64_t v17 = v62;
  }
  else
  {
    if (!v24)
    {
      v61((uint64_t)v59, (uint64_t)v21, v6);
      goto LABEL_47;
    }
    uint64_t v26 = v63;
    (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v59, v6);
    uint64_t v58 = sub_100004010(&qword_100380788);
    memcpy(v59, v21, *(void *)(*(void *)(v58 - 8) + 64));
    uint64_t v17 = v62;
  }
LABEL_48:
  v8[*(int *)(v10 + 32)] = v9[*(int *)(v10 + 32)];
LABEL_14:
  *(unsigned char *)(a1 + v17[6]) = *(unsigned char *)(a2 + v17[6]);
  uint64_t v27 = v17[7];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  int v31 = v30(a1 + v27, 1, v6);
  int v32 = v30((uint64_t)v29, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v28, v29, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v6);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v28, v6);
LABEL_19:
    uint64_t v33 = sub_100004010(&qword_100380788);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_20;
  }
  v61((uint64_t)v28, (uint64_t)v29, v6);
LABEL_20:
  uint64_t v34 = v17[8];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  int v37 = v30(a1 + v34, 1, v6);
  int v38 = v30((uint64_t)v36, 1, v6);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v35, v36, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v35, 0, 1, v6);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v35, v6);
LABEL_25:
    uint64_t v39 = sub_100004010(&qword_100380788);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_26;
  }
  v61((uint64_t)v35, (uint64_t)v36, v6);
LABEL_26:
  uint64_t v40 = v17[9];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  int v43 = v30(a1 + v40, 1, v6);
  int v44 = v30((uint64_t)v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v41, v42, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v41, 0, 1, v6);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v41, v6);
LABEL_31:
    uint64_t v45 = sub_100004010(&qword_100380788);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_32;
  }
  v61((uint64_t)v41, (uint64_t)v42, v6);
LABEL_32:
  uint64_t v46 = v17[10];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (const void *)(a2 + v46);
  int v49 = v30(a1 + v46, 1, v6);
  int v50 = v30((uint64_t)v48, 1, v6);
  if (!v49)
  {
    if (!v50)
    {
      v61((uint64_t)v47, (uint64_t)v48, v6);
      goto LABEL_38;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v47, v6);
    goto LABEL_37;
  }
  if (v50)
  {
LABEL_37:
    uint64_t v51 = sub_100004010(&qword_100380788);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_38;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v47, v48, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v47, 0, 1, v6);
LABEL_38:
  uint64_t v52 = v17[11];
  uint64_t v53 = (_OWORD *)(a1 + v52);
  uint64_t v54 = (long long *)(a2 + v52);
  long long v55 = *v54;
  long long v56 = v54[1];
  *(_OWORD *)((char *)v53 + 25) = *(long long *)((char *)v54 + 25);
  *uint64_t v53 = v55;
  v53[1] = v56;
  return a1;
}

uint64_t sub_100154778(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  int v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v44(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for EmergencyData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100004010(&qword_100389078);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    int v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    v9[9] = v10[9];
    uint64_t v15 = *(int *)(v11 + 28);
    __dst = &v9[v15];
    uint64_t v16 = v7;
    uint64_t v17 = &v10[v15];
    uint64_t v41 = v16;
    uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (v42((uint64_t)&v10[v15], 1, v6))
    {
      uint64_t v18 = sub_100004010(&qword_100380788);
      memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v7 = v41;
    }
    else
    {
      v44((uint64_t)__dst, (uint64_t)v17, v6);
      uint64_t v7 = v41;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v6);
    }
    v9[*(int *)(v11 + 32)] = v10[*(int *)(v11 + 32)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    int v14 = v42;
  }
  uint64_t v19 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = v14;
  if (v14(a2 + v19, 1, v6))
  {
    uint64_t v23 = sub_100004010(&qword_100380788);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v20, (uint64_t)v21, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  if (v22(a2 + v24, 1, v6))
  {
    uint64_t v27 = sub_100004010(&qword_100380788);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v25, (uint64_t)v26, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  if (v22(a2 + v28, 1, v6))
  {
    uint64_t v31 = sub_100004010(&qword_100380788);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v29, (uint64_t)v30, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v22(a2 + v32, 1, v6))
  {
    uint64_t v35 = sub_100004010(&qword_100380788);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v33, (uint64_t)v34, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  uint64_t v36 = a3[11];
  int v37 = (_OWORD *)(a1 + v36);
  int v38 = (_OWORD *)(a2 + v36);
  long long v39 = v38[1];
  *int v37 = *v38;
  v37[1] = v39;
  *(_OWORD *)((char *)v37 + 25) = *(_OWORD *)((char *)v38 + 25);
  return a1;
}

uint64_t sub_100154C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v62 = *(void *)(v6 - 8);
  unint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 40);
  v60(a1, a2, v6);
  unint64_t v61 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for EmergencyData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      v8[8] = v9[8];
      v8[9] = v9[9];
      uint64_t v15 = *(int *)(v10 + 28);
      __dst = &v8[v15];
      uint64_t v16 = &v9[v15];
      uint64_t v17 = v61;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v62 + 48))(&v9[v15], 1, v6))
      {
        uint64_t v18 = sub_100004010(&qword_100380788);
        memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v62 + 32))(__dst, v16, v6);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v62 + 56))(__dst, 0, 1, v6);
      }
      v8[*(int *)(v10 + 32)] = v9[*(int *)(v10 + 32)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v19 = sub_100004010(&qword_100389078);
    memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
    uint64_t v17 = v61;
LABEL_13:
    uint64_t v26 = v62;
    goto LABEL_14;
  }
  if (v14)
  {
    sub_1001565E8((uint64_t)v8, type metadata accessor for EmergencyData);
    goto LABEL_7;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  v8[8] = v9[8];
  v8[9] = v9[9];
  uint64_t v20 = *(int *)(v10 + 28);
  uint64_t v21 = &v9[v20];
  uint64_t v22 = *(uint64_t (**)(void))(v62 + 48);
  uint64_t v58 = &v8[v20];
  int v23 = v22();
  int v24 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v22)(v21, 1, v6);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = sub_100004010(&qword_100380788);
      memcpy(v58, v21, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_47:
      uint64_t v17 = v61;
      uint64_t v26 = v62;
      goto LABEL_48;
    }
    uint64_t v26 = v62;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v62 + 32))(v58, v21, v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v62 + 56))(v58, 0, 1, v6);
    uint64_t v17 = v61;
  }
  else
  {
    if (!v24)
    {
      v60((uint64_t)v58, (uint64_t)v21, v6);
      goto LABEL_47;
    }
    uint64_t v26 = v62;
    (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v58, v6);
    uint64_t v57 = sub_100004010(&qword_100380788);
    memcpy(v58, v21, *(void *)(*(void *)(v57 - 8) + 64));
    uint64_t v17 = v61;
  }
LABEL_48:
  v8[*(int *)(v10 + 32)] = v9[*(int *)(v10 + 32)];
LABEL_14:
  uint64_t v27 = v17[7];
  *(unsigned char *)(a1 + v17[6]) = *(unsigned char *)(a2 + v17[6]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  int v31 = v30(a1 + v27, 1, v6);
  int v32 = v30((uint64_t)v29, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v28, v29, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v6);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v28, v6);
LABEL_19:
    uint64_t v33 = sub_100004010(&qword_100380788);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_20;
  }
  v60((uint64_t)v28, (uint64_t)v29, v6);
LABEL_20:
  uint64_t v34 = v17[8];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  int v37 = v30(a1 + v34, 1, v6);
  int v38 = v30((uint64_t)v36, 1, v6);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v35, v36, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v35, 0, 1, v6);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v35, v6);
LABEL_25:
    uint64_t v39 = sub_100004010(&qword_100380788);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_26;
  }
  v60((uint64_t)v35, (uint64_t)v36, v6);
LABEL_26:
  uint64_t v40 = v17[9];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  int v43 = v30(a1 + v40, 1, v6);
  int v44 = v30((uint64_t)v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v41, v42, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v41, 0, 1, v6);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v41, v6);
LABEL_31:
    uint64_t v45 = sub_100004010(&qword_100380788);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_32;
  }
  v60((uint64_t)v41, (uint64_t)v42, v6);
LABEL_32:
  uint64_t v46 = v17[10];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (const void *)(a2 + v46);
  int v49 = v30(a1 + v46, 1, v6);
  int v50 = v30((uint64_t)v48, 1, v6);
  if (!v49)
  {
    if (!v50)
    {
      v60((uint64_t)v47, (uint64_t)v48, v6);
      goto LABEL_38;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v47, v6);
    goto LABEL_37;
  }
  if (v50)
  {
LABEL_37:
    uint64_t v51 = sub_100004010(&qword_100380788);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_38;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v47, v48, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v47, 0, 1, v6);
LABEL_38:
  uint64_t v52 = v17[11];
  uint64_t v53 = (_OWORD *)(a1 + v52);
  uint64_t v54 = (_OWORD *)(a2 + v52);
  long long v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  *(_OWORD *)((char *)v53 + 25) = *(_OWORD *)((char *)v54 + 25);
  return a1;
}

uint64_t sub_100155468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015547C);
}

uint64_t sub_10015547C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004010(&qword_100389078);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_100004010(&qword_100380788);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 28);

  return v15(v17, a2, v16);
}

uint64_t sub_1001555D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001555E4);
}

uint64_t sub_1001555E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100004010(&qword_100389078);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_100004010(&qword_100380788);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 28);

  return v17(v19, a2, a2, v18);
}

void sub_100155744()
{
  type metadata accessor for DispatchTime();
  if (v0 <= 0x3F)
  {
    sub_1001532A0(319, (unint64_t *)&unk_1003890E8, (void (*)(uint64_t))type metadata accessor for EmergencyData);
    if (v1 <= 0x3F)
    {
      sub_1001532A0(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_10015589C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for DispatchTime();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100004010(&qword_100380788);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 32)) = *((unsigned char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t sub_100155A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_100155B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_100155C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_100155DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_100155F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100004010(&qword_100380788);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 32)) = *(unsigned char *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1001560C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001560DC);
}

uint64_t sub_1001560DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100004010(&qword_100380788);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100156188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015619C);
}

uint64_t sub_10015619C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 9) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_100004010(&qword_100380788);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100156244()
{
  sub_1001532A0(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100156310(uint64_t a1)
{
  return sub_10000D544(a1, *v1 + OBJC_IVAR____TtC8SOSBuddy21AnalyticsSessionStart_currentTarget, &qword_100382698);
}

uint64_t sub_100156340(uint64_t a1)
{
  return sub_10014E14C(a1);
}

uint64_t sub_100156364(uint64_t a1)
{
  return sub_10014E86C(a1);
}

unsigned char *sub_100156388(uint64_t a1)
{
  return sub_10014EB5C(a1);
}

uint64_t sub_1001563AC(uint64_t a1)
{
  sub_100156554(a1, (uint64_t)v7);
  sub_100156554(a1, (uint64_t)&v8);
  unint64_t v2 = v14 >> 62;
  if (v14 >> 62)
  {
    uint64_t v3 = v14 & 0x3FFFFFFFFFFFFFFFLL;
    v14 &= 0x3FFFFFFFFFFFFFFFuLL;
    if (v2 == 1)
    {
      int v4 = v8;
      uint64_t v5 = v9;
      swift_retain();
      sub_100150568(v4, v5);
    }
    else
    {
      uint64_t v15 = v8;
      LOBYTE(v16) = v9;
      uint64_t v17 = v10;
      LOBYTE(v18) = v11;
      uint64_t v19 = v12;
      LODWORD(v20) = v13;
      uint64_t v21 = v3;
      swift_retain();
      sub_10014FAE0((uint64_t)&v15);
    }
  }
  else
  {
    v14 &= 0x3FFFFFFFFFFFFFFFuLL;
    LOBYTE(v15) = v8;
    uint64_t v16 = v9;
    LOBYTE(v17) = v10;
    uint64_t v18 = v11;
    LODWORD(v19) = v12;
    uint64_t v20 = v13;
    swift_retain();
    sub_10014F054((uint64_t)&v15);
  }
  return sub_1001565B0(a1);
}

uint64_t sub_10015650C(uint64_t a1)
{
  return sub_1001516DC(a1);
}

uint64_t sub_100156530(uint64_t a1)
{
  return sub_100150FFC(a1);
}

uint64_t sub_100156554(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001565B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001565E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100156648(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004010(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001566AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100156714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10015677C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001567A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001567D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010((uint64_t *)&unk_100383910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for FindMyData()
{
  return &type metadata for FindMyData;
}

uint64_t sub_10015684C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddy18ThrottledExecution__interval;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100156A1C(v0 + OBJC_IVAR____TtC8SOSBuddy18ThrottledExecution__lastRun);

  return swift_deallocClassInstance();
}

uint64_t sub_1001568FC()
{
  return type metadata accessor for ThrottledExecution();
}

uint64_t type metadata accessor for ThrottledExecution()
{
  uint64_t result = qword_100389210;
  if (!qword_100389210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100156950()
{
  type metadata accessor for DispatchTimeInterval();
  if (v0 <= 0x3F)
  {
    sub_10002D190();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100156A1C(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100380788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100156A7C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010((uint64_t *)&unk_100393B30);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100385860);
  swift_allocObject();
  swift_retain();
  v0[4] = PassthroughSubject.init()();
  sub_100004010(&qword_100389478);
  swift_allocObject();
  v0[5] = PassthroughSubject.init()();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  v0[6] = PassthroughSubject.init()();
  v0[7] = (uint64_t)[objc_allocWithZone((Class)type metadata accessor for ApplicationActiveStateSource()) init];
  v25[4] = v10;
  uint64_t v26 = v5;
  v25[2] = v2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v11 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v11 = _swiftEmptySetSingleton;
  }
  v0[8] = (uint64_t)v11;
  v25[3] = v0 + 8;
  type metadata accessor for PreventSuspension();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v12[2] = 0xD000000000000011;
  void v12[3] = 0x80000001002D0650;
  v12[4] = 0;
  v0[9] = (uint64_t)v12;
  *((unsigned char *)v0 + 80) = 2;
  id v13 = [self sharedApplication];
  id v14 = [v13 applicationState];

  *((unsigned char *)v1 + 81) = v14 == 0;
  swift_release();
  swift_allocObject();
  v1[2] = PassthroughSubject.init()();
  swift_allocObject();
  v1[3] = PassthroughSubject.init()();
  uint64_t v15 = qword_10037DD80;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000FD84(v16, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446210;
    v25[1] = v19 + 4;
    id v28 = v1;
    swift_retain();
    uint64_t v20 = String.init<A>(describing:)();
    id v28 = (id)sub_1001B3178(v20, v21, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%{public}s] init", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v22 = (uint64_t)v26;
  v27[0] = *(void *)(v1[7] + OBJC_IVAR____TtC8SOSBuddy28ApplicationActiveStateSource_appForegroundDidChange);
  sub_10000FDBC();
  swift_retain();
  id v28 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v23 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  sub_100009B18((unint64_t *)&unk_100393B40, &qword_100385860);
  sub_100028428();
  Publisher.receive<A>(on:options:)();
  sub_100028480(v22);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100009B18(&qword_100388D30, (uint64_t *)&unk_100393B30);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001570A8(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(unsigned __int8 *)(result + 81);
    if (v1 != v4)
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(unsigned char *)(v3 + 81) = v1;
    sub_10015776C(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_100157174()
{
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1001571C4()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1001573EC()
{
  sub_1001571C4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppPropertiesModel()
{
  return self;
}

uint64_t sub_100157444(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 80);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v3))
  {
    return result;
  }
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "mainSceneIsForeground changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
  LOBYTE(v15) = *(unsigned char *)(v2 + 80);
  uint64_t result = PassthroughSubject.send(_:)();
  uint64_t v12 = *(void **)(v2 + 72);
  if (*(unsigned char *)(v2 + 80))
  {
    if (v12[4]) {
      return result;
    }
    uint64_t v13 = v12[2];
    unint64_t v14 = v12[3];
    type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    v12[4] = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, v13, v14);
    swift_release();
  }
  else
  {
    v12[4] = 0;
  }
  return swift_release();
}

uint64_t sub_10015776C(uint64_t result)
{
  if (*(unsigned char *)(v1 + 81) != (result & 1))
  {
    uint64_t v2 = v1;
    char v3 = result;
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9958);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446466;
      if (v3) {
        uint64_t v8 = 1702195828;
      }
      else {
        uint64_t v8 = 0x65736C6166;
      }
      if (v3) {
        unint64_t v9 = 0xE400000000000000;
      }
      else {
        unint64_t v9 = 0xE500000000000000;
      }
      sub_1001B3178(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      if (*(unsigned char *)(v2 + 81)) {
        uint64_t v10 = 1702195828;
      }
      else {
        uint64_t v10 = 0x65736C6166;
      }
      if (*(unsigned char *)(v2 + 81)) {
        unint64_t v11 = 0xE400000000000000;
      }
      else {
        unint64_t v11 = 0xE500000000000000;
      }
      sub_1001B3178(v10, v11, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "appIsForeground changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    LOBYTE(v12) = *(unsigned char *)(v2 + 81);
    return PassthroughSubject.send(_:)();
  }
  return result;
}

void sub_100157A04(uint64_t a1, uint64_t a2)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "bringForegroundWith()", v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  sub_100004010((uint64_t *)&unk_1003815F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B31C0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v11;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = 1;
  sub_100283284(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setFrontBoardOptions:isa];

  [v8 setSensitive:1];
  id v13 = [self defaultWorkspace];
  if (v13)
  {
    unint64_t v14 = v13;
    id v15 = [self mainBundle];
    id v16 = [v15 bundleIdentifier];

    if (v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = v18;
    v19[3] = a1;
    v19[4] = a2;
    v22[4] = sub_100158A7C;
    v22[5] = v19;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_1001580D0;
    v22[3] = &unk_100359870;
    uint64_t v20 = _Block_copy(v22);
    id v21 = v8;
    swift_retain();
    swift_release();
    [v14 openApplicationWithBundleIdentifier:v17 configuration:v21 completionHandler:v20];
    _Block_release(v20);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100157D9C(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a1)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9958);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "bringForegroundWith()) succeeded", v9, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
      swift_release();
    }
  }
  else
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000FD84(v11, (uint64_t)qword_1003A9958);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 136446210;
      uint64_t v19 = a2;
      swift_errorRetain();
      sub_100004010(&qword_100385630);
      uint64_t v15 = String.init<A>(describing:)();
      uint64_t v19 = sub_1001B3178(v15, v16, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "bringForegroundWith() failed: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return a4(a1 & 1);
}

void sub_1001580D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100158148()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "bringForeground: success - %{BOOL,public}d", v2, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100158284(uint64_t result)
{
  if (*(unsigned __int8 *)(v1 + 41) != result)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000FD84(v2, (uint64_t)qword_1003A9958);
    swift_retain_n();
    char v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446466;
      uint64_t v6 = String.init<A>(describing:)();
      sub_1001B3178(v6, v7, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2082;
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "App stage changed from: %{public}s to: %{public}s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_1001584E4(uint64_t result)
{
  uint64_t v2 = v1;
  int v3 = *(unsigned __int8 *)(v1 + 42);
  if (v3 == 2)
  {
    if (result == 2) {
      return result;
    }
  }
  else if result != 2 && ((((result & 1) == 0) ^ v3))
  {
    return result;
  }
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = String.init<A>(describing:)();
    sub_1001B3178(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "guidanceUIRequired changed from: %{public}s to: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
  Subject<>.send()();
  LOBYTE(v12) = *(unsigned char *)(v2 + 42);
  return PassthroughSubject.send(_:)();
}

uint64_t sub_100158784()
{
  sub_100004010(&qword_100389478);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 32) = PassthroughSubject.init()();
  *(_WORD *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 42) = 2;
  swift_release();
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  return v0;
}

uint64_t sub_100158834()
{
  return swift_release();
}

uint64_t sub_10015883C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppRuntimeStateModel()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AppRuntimeStateModel.Stage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100158974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppRuntimeStateModel.Stage()
{
  return &type metadata for AppRuntimeStateModel.Stage;
}

unint64_t sub_1001589B0()
{
  unint64_t result = qword_100389470;
  if (!qword_100389470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389470);
  }
  return result;
}

uint64_t sub_100158A04()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100158A3C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100158A7C(char a1, uint64_t a2)
{
  return sub_100157D9C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

uint64_t sub_100158A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100158A98()
{
  return swift_release();
}

uint64_t sub_100158AA0(unsigned __int8 *a1)
{
  return sub_1001570A8(a1);
}

uint64_t destroy for RoadsideAssistanceQuestionnaireView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for RoadsideAssistanceQuestionnaireView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RoadsideAssistanceQuestionnaireView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RoadsideAssistanceQuestionnaireView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoadsideAssistanceQuestionnaireView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoadsideAssistanceQuestionnaireView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceQuestionnaireView()
{
  return &type metadata for RoadsideAssistanceQuestionnaireView;
}

uint64_t sub_100158E04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100158E20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_100389480);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100389488);
  uint64_t v91 = *(void *)(v7 - 8);
  uint64_t v92 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100004010(&qword_100389490);
  __chkstk_darwin(v90);
  unint64_t v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004010(&qword_100389498);
  __chkstk_darwin(v93);
  uint64_t v94 = (uint64_t)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_1003894A0);
  uint64_t v96 = *(void *)(v13 - 8);
  uint64_t v97 = v13;
  __chkstk_darwin(v13);
  unint64_t v95 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_1003894A8);
  __chkstk_darwin(v15);
  NSString v17 = (char *)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004010(&qword_1003894B0);
  uint64_t v19 = __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v23 = *(void *)(v2 + 32);
  if (!v23)
  {
    type metadata accessor for RoadsideAssistanceModel();
    char v74 = &qword_100380D48;
    int v75 = type metadata accessor for RoadsideAssistanceModel;
LABEL_9:
    sub_10015B704(v74, (void (*)(uint64_t))v75);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v24 = *(void *)(v23 + 104);
  if (v24)
  {
    unint64_t v78 = v11;
    uint64_t v79 = v23;
    uint64_t v81 = v22;
    uint64_t v82 = v17;
    char v83 = (char *)v77 - v20;
    uint64_t v84 = v21;
    uint64_t v85 = v15;
    uint64_t v86 = v18;
    uint64_t v87 = v4;
    unint64_t v88 = v6;
    uint64_t v89 = a1;
    long long v103 = *(_OWORD *)(v2 + 64);
    v102[0] = *(_OWORD *)(v2 + 64);
    swift_retain();
    v77[1] = sub_100004010(&qword_1003894C8);
    State.projectedValue.getter();
    *(void *)&v102[0] = *(void *)v98;
    *(_OWORD *)((char *)v102 + 8) = *(_OWORD *)&v98[8];
    sub_100004010(&qword_1003894D0);
    sub_100004010(&qword_1003894D8);
    sub_100009B18(&qword_1003894E0, &qword_1003894D0);
    sub_100009B18(&qword_1003894E8, &qword_1003894D0);
    sub_100009B18(&qword_1003894F0, &qword_1003894D0);
    unint64_t v25 = sub_10015B0E4();
    uint64_t v26 = v24;
    unint64_t v27 = sub_10015B138();
    *(void *)char v98 = &type metadata for QuestionnairePageView;
    *(void *)&v98[8] = &type metadata for QuestionnaireNavigationPage;
    *(void *)&v98[16] = &type metadata for QuestionnairePageView;
    unint64_t v99 = v25;
    unint64_t v100 = v27;
    unint64_t v101 = v25;
    swift_getOpaqueTypeConformance2();
    uint64_t v80 = v26;
    NavigationStack.init<>(path:root:)();
    id v28 = *(void **)(v2 + 48);
    if (v28)
    {
      uint64_t v29 = v28[9];
      uint64_t v30 = v28[10];
      sub_100008F88(v28 + 6, v29);
      (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(v30 + 24))(v98, v29, v30);
      uint64_t v31 = v99;
      unint64_t v32 = v100;
      sub_100008F88(v98, v99);
      uint64_t v33 = (*(uint64_t (**)(uint64_t, unint64_t))(v32 + 568))(v31, v32);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v36 = v91;
      uint64_t v35 = v92;
      uint64_t v37 = (uint64_t)v78;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v78, v9, v92);
      int v38 = (uint64_t *)(v37 + *(int *)(v90 + 36));
      *int v38 = KeyPath;
      v38[1] = v33;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v35);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v98);
      uint64_t v39 = (id (*)())swift_allocObject();
      long long v40 = *(_OWORD *)(v2 + 48);
      *((_OWORD *)v39 + 3) = *(_OWORD *)(v2 + 32);
      *((_OWORD *)v39 + 4) = v40;
      long long v41 = *(_OWORD *)(v2 + 80);
      *((_OWORD *)v39 + 5) = *(_OWORD *)(v2 + 64);
      *((_OWORD *)v39 + 6) = v41;
      long long v42 = *(_OWORD *)(v2 + 16);
      *((_OWORD *)v39 + 1) = *(_OWORD *)v2;
      *((_OWORD *)v39 + 2) = v42;
      uint64_t v43 = v94;
      sub_10015B248(v37, v94);
      int v44 = (id (**)())(v43 + *(int *)(v93 + 36));
      *int v44 = sub_10015B240;
      v44[1] = v39;
      v44[2] = 0;
      v44[3] = 0;
      sub_10015B2B0(v2);
      sub_10000950C(v37, &qword_100389490);
      *(_OWORD *)char v98 = v103;
      State.wrappedValue.getter();
      uint64_t v45 = (_OWORD *)swift_allocObject();
      long long v46 = *(_OWORD *)(v2 + 48);
      v45[3] = *(_OWORD *)(v2 + 32);
      void v45[4] = v46;
      long long v47 = *(_OWORD *)(v2 + 80);
      v45[5] = *(_OWORD *)(v2 + 64);
      v45[6] = v47;
      long long v48 = *(_OWORD *)(v2 + 16);
      v45[1] = *(_OWORD *)v2;
      v45[2] = v48;
      sub_10015B2B0(v2);
      sub_10015B344();
      sub_10015B484();
      int v49 = v95;
      View.onChange<A>(of:initial:_:)();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10000950C(v43, &qword_100389498);
      uint64_t v50 = *(void *)(v79 + 32);
      uint64_t v51 = (_OWORD *)swift_allocObject();
      long long v52 = *(_OWORD *)(v2 + 48);
      v51[3] = *(_OWORD *)(v2 + 32);
      v51[4] = v52;
      long long v53 = *(_OWORD *)(v2 + 80);
      v51[5] = *(_OWORD *)(v2 + 64);
      void v51[6] = v53;
      long long v54 = *(_OWORD *)(v2 + 16);
      v51[1] = *(_OWORD *)v2;
      v51[2] = v54;
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = sub_10015B4FC;
      *(void *)(v55 + 24) = v51;
      uint64_t v57 = v96;
      uint64_t v56 = v97;
      uint64_t v58 = (uint64_t)v82;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v82, v49, v97);
      uint64_t v59 = v85;
      *(void *)(v58 + *(int *)(v85 + 52)) = v50;
      unint64_t v60 = (uint64_t (**)(uint64_t))(v58 + *(int *)(v59 + 56));
      *unint64_t v60 = sub_100028520;
      v60[1] = (uint64_t (*)(uint64_t))v55;
      sub_10015B2B0(v2);
      unint64_t v61 = *(void (**)(char *, uint64_t))(v57 + 8);
      swift_retain();
      v61(v49, v56);
      v102[0] = *(_OWORD *)(v2 + 80);
      sub_100004010(&qword_10037ED78);
      State.projectedValue.getter();
      uint64_t v62 = (_OWORD *)swift_allocObject();
      long long v63 = *(_OWORD *)(v2 + 48);
      v62[3] = *(_OWORD *)(v2 + 32);
      v62[4] = v63;
      long long v64 = *(_OWORD *)(v2 + 80);
      v62[5] = *(_OWORD *)(v2 + 64);
      v62[6] = v64;
      long long v65 = *(_OWORD *)(v2 + 16);
      v62[1] = *(_OWORD *)v2;
      v62[2] = v65;
      sub_10015B2B0(v2);
      uint64_t v66 = sub_100009B18(&qword_1003894B8, &qword_1003894A8);
      unint64_t v76 = sub_1000C591C();
      uint64_t v67 = v81;
      View.fullScreenCover<A>(isPresented:onDismiss:content:)();
      swift_release();
      swift_release();
      swift_release();
      sub_10000950C(v58, &qword_1003894A8);
      uint64_t v68 = v84;
      char v69 = v83;
      uint64_t v70 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v83, v67, v86);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v88, v69, v70);
      swift_storeEnumTagMultiPayload();
      *(void *)char v98 = v59;
      *(void *)&v98[8] = &type metadata for BusinessOnboardingView;
      *(void *)&v98[16] = v66;
      unint64_t v99 = v76;
      swift_getOpaqueTypeConformance2();
      sub_10015B088();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    }
    type metadata accessor for UIMetrics();
    char v74 = (unint64_t *)&qword_10037EFF0;
    int v75 = type metadata accessor for UIMetrics;
    goto LABEL_9;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = sub_100009B18(&qword_1003894B8, &qword_1003894A8);
  unint64_t v73 = sub_1000C591C();
  *(void *)char v98 = v15;
  *(void *)&v98[8] = &type metadata for BusinessOnboardingView;
  *(void *)&v98[16] = v72;
  unint64_t v99 = v73;
  swift_getOpaqueTypeConformance2();
  sub_10015B088();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100159950()
{
  sub_1000C8FD4((uint64_t)&v2);
  uint64_t v0 = v3;
  sub_1000F6B04((uint64_t)&v3, (uint64_t)v4);
  swift_retain();
  sub_1000F6B6C(v4);
  type metadata accessor for UIMetrics();
  sub_10015B704((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  EnvironmentObject.init()();
  sub_10015B0E4();
  sub_10015B138();
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  sub_1000F6B9C(v4);
  swift_release();
  swift_release();
  return sub_1000904E0(v0);
}

uint64_t sub_100159AA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  swift_retain();
  sub_10009049C(v5);
  type metadata accessor for UIMetrics();
  sub_10015B704((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

id sub_100159B4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    if (*(void *)(v1 + 104))
    {
      swift_retain();
      sub_1000C9064();
      swift_release();
    }
    sub_100004010(&qword_1003894C8);
    State.wrappedValue.setter();
    return sub_100159C2C();
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_10015B704(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    id result = (id)EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

id sub_100159C2C()
{
  sub_100004010(&qword_10037ED78);
  id result = (id)State.wrappedValue.getter();
  if (v6) {
    return result;
  }
  uint64_t v2 = *(void *)(v0 + 32);
  if (!v2)
  {
LABEL_10:
    type metadata accessor for RoadsideAssistanceModel();
    sub_10015B704(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    id result = (id)EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(v2 + 104);
  if (!v3) {
    return result;
  }
  id result = (id)swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 144);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(unsigned char *)(v5 + v4 + 31) == 2)
  {
    id result = [self shouldShowBusinessOnboarding];
    if (result) {
      return (id)State.wrappedValue.setter();
    }
  }
  return result;
}

void sub_100159D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = (uint64_t *)type metadata accessor for Logger();
  uint64_t v7 = *(v6 - 1);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v82 - v12;
  uint64_t v14 = *(uint64_t **)(*(void *)a2 + 16);
  if ((unint64_t)v14 >= *(void *)(*(void *)a1 + 16)) {
    return;
  }
  uint64_t v15 = *(void *)(a3 + 32);
  if (v15)
  {
    uint64_t v16 = *(void *)(v15 + 104);
    uint64_t v93 = v10;
    *(void *)&long long v92 = v11;
    if (v16)
    {
      swift_retain();
      NSString v17 = sub_1000C9064();
      swift_release();
    }
    else
    {
      NSString v17 = _swiftEmptyArrayStorage;
    }
    unint64_t v18 = v17[2];
    uint64_t v19 = v17;
    uint64_t v20 = v18 - (void)v14;
    if (v18 > (unint64_t)v14)
    {
      uint64_t v89 = v19;
      uint64_t v84 = (uint64_t *)v18;
      if (qword_10037DE10 != -1) {
        goto LABEL_56;
      }
      while (1)
      {
        uint64_t v21 = sub_10000FD84((uint64_t)v6, (uint64_t)qword_1003A9B08);
        uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t *))(v7 + 16);
        uint64_t v94 = (char *)v21;
        uint64_t v87 = v22;
        uint64_t v88 = v7 + 16;
        ((void (*)(char *))v22)(v13);
        sub_10015B2B0(a3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10015B2B0(a3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v23 = Logger.logObject.getter();
        LODWORD(v90) = static os_log_type_t.default.getter();
        BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v90);
        uint64_t v95 = a3;
        uint64_t v91 = v15;
        if (v24)
        {
          os_log_t v83 = v23;
          uint64_t v85 = v7;
          uint64_t v25 = swift_slowAlloc();
          uint64_t v82 = swift_slowAlloc();
          uint64_t v96 = v82;
          *(_DWORD *)uint64_t v25 = 136446723;
          uint64_t v26 = *(void *)(v15 + 104);
          uint64_t v86 = v6;
          if (v26)
          {
            swift_retain();
            uint64_t v27 = sub_1000C8E54();
            unint64_t v29 = v28;
            swift_release();
          }
          else
          {
            unint64_t v29 = 0xE100000000000000;
            uint64_t v27 = 63;
          }
          uint64_t v98 = sub_1001B3178(v27, v29, &v96);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v31 = v95;
          sub_10015B678(v95);
          sub_10015B678(v31);
          *(_WORD *)(v25 + 12) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v32 = Array.description.getter();
          unint64_t v34 = v33;
          swift_bridgeObjectRelease();
          uint64_t v98 = sub_1001B3178(v32, v34, &v96);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 22) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v35 = Array.description.getter();
          unint64_t v37 = v36;
          swift_bridgeObjectRelease();
          uint64_t v98 = sub_1001B3178(v35, v37, &v96);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v38 = v83;
          _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v90, "[%{public}s] Path reduced from %{private}s to %{private}s", (uint8_t *)v25, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          a3 = v95;
          swift_slowDealloc();

          uint64_t v7 = v85;
          char v6 = v86;
          uint64_t v30 = *(void (**)(char *, uint64_t *))(v85 + 8);
          v30(v13, v86);
          uint64_t v15 = v91;
        }
        else
        {
          sub_10015B678(a3);
          sub_10015B678(a3);

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v30 = *(void (**)(char *, uint64_t *))(v7 + 8);
          v30(v13, v6);
        }
        uint64_t v39 = *(void *)(a3 + 16);
        uint64_t v13 = v94;
        if (!v39)
        {
          type metadata accessor for AppRuntimeStateModel();
          uint64_t v80 = &qword_100380B58;
          uint64_t v81 = type metadata accessor for AppRuntimeStateModel;
          goto LABEL_60;
        }
        uint64_t v90 = (void (*)(uint64_t, uint64_t *))v30;
        int v40 = *(unsigned __int8 *)(v39 + 41);
        swift_bridgeObjectRelease();
        if (v40 != 8)
        {
          uint64_t v47 = v93;
          v87(v93, v13, v6);
          sub_10015B2B0(a3);
          sub_10015B2B0(a3);
          sub_10015B2B0(a3);
          sub_10015B2B0(a3);
          long long v48 = Logger.logObject.getter();
          int v49 = v6;
          os_log_type_t v50 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v48, v50))
          {
            uint64_t v85 = v7;
            uint64_t v51 = swift_slowAlloc();
            uint64_t v96 = swift_slowAlloc();
            *(_DWORD *)uint64_t v51 = 136446466;
            if (*(void *)(v15 + 104))
            {
              swift_retain();
              uint64_t v52 = sub_1000C8E54();
              unint64_t v54 = v53;
              swift_release();
            }
            else
            {
              unint64_t v54 = 0xE100000000000000;
              uint64_t v52 = 63;
            }
            uint64_t v98 = sub_1001B3178(v52, v54, &v96);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v77 = v95;
            sub_10015B678(v95);
            sub_10015B678(v77);
            *(_WORD *)(v51 + 12) = 2082;
            LOBYTE(v98) = *(unsigned char *)(v39 + 41);
            uint64_t v78 = String.init<A>(describing:)();
            uint64_t v98 = sub_1001B3178(v78, v79, &v96);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10015B678(v77);
            sub_10015B678(v77);
            _os_log_impl((void *)&_mh_execute_header, v48, v50, "[%{public}s] RoadsideAssistanceQuestionnaireView: requesting going back on %{public}s stage", (uint8_t *)v51, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v56 = v93;
          }
          else
          {
            sub_10015B678(a3);
            sub_10015B678(a3);
            sub_10015B678(a3);
            sub_10015B678(a3);

            uint64_t v56 = v47;
          }
          v90(v56, v49);
          return;
        }
        uint64_t v41 = v92;
        v87(v92, v13, v6);
        sub_10015B2B0(a3);
        sub_10015B2B0(a3);
        long long v42 = Logger.logObject.getter();
        uint64_t v7 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, (os_log_type_t)v7))
        {
          uint64_t v86 = v6;
          uint64_t v43 = swift_slowAlloc();
          uint64_t v96 = swift_slowAlloc();
          *(_DWORD *)uint64_t v43 = 136446466;
          if (*(void *)(v15 + 104))
          {
            swift_retain();
            uint64_t v44 = sub_1000C8E54();
            unint64_t v46 = v45;
            swift_release();
          }
          else
          {
            unint64_t v46 = 0xE100000000000000;
            uint64_t v44 = 63;
          }
          uint64_t v98 = sub_1001B3178(v44, v46, &v96);
          char v6 = &v99;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v57 = v95;
          sub_10015B678(v95);
          sub_10015B678(v57);
          *(_WORD *)(v43 + 12) = 2050;
          uint64_t v98 = v20;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v7, "[%{public}s] Going back %{public}ld page(s)", (uint8_t *)v43, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          a3 = v57;
          swift_slowDealloc();

          v90(v92, v86);
          uint64_t v15 = v91;
          uint64_t v13 = v94;
        }
        else
        {
          sub_10015B678(a3);
          sub_10015B678(a3);

          v90(v41, v6);
        }
        if (v20 < 0)
        {
          __break(1u);
          goto LABEL_58;
        }
        if (v84 == v14) {
          return;
        }
        uint64_t v14 = &qword_100393AA0;
        *(void *)&long long v55 = 136446210;
        long long v92 = v55;
        uint64_t v90 = (void (*)(uint64_t, uint64_t *))((char *)&type metadata for Any + 8);
        while (1)
        {
          uint64_t v58 = *(void *)(v15 + 104);
          if (v58) {
            break;
          }
LABEL_33:
          if (!--v20) {
            return;
          }
        }
        uint64_t v59 = *(void *)(v58 + 32);
        BOOL v60 = __CFADD__(v59, 1);
        uint64_t v61 = v59 + 1;
        if (!v60) {
          break;
        }
        __break(1u);
LABEL_56:
        swift_once();
      }
      *(void *)(v58 + 32) = v61;
      swift_retain();
      uint64_t v7 = sub_1000CD31C();
      uint64_t v62 = *(void *)(v58 + 32);
      if (!v62 || (uint64_t v63 = v62 - 1, (*(void *)(v58 + 32) = v63) == 0))
      {
        if (*(unsigned char *)(v58 + 40))
        {
          *(unsigned char *)(v58 + 40) = 0;
          char v6 = (uint64_t *)sub_100004010(&qword_100393AA0);
          sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
          Subject<>.send()();
        }
        if (*(unsigned char *)(v58 + 41) == 1)
        {
          *(unsigned char *)(v58 + 41) = 0;
          char v6 = (uint64_t *)sub_100004010(&qword_100393AA0);
          sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
          Subject<>.send()();
        }
      }
      swift_release();
      if ((v7 & 1) == 0)
      {
        sub_10015B2B0(a3);
        sub_10015B2B0(a3);
        long long v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = swift_slowAlloc();
          uint64_t v7 = swift_slowAlloc();
          uint64_t v98 = v7;
          *(_DWORD *)uint64_t v66 = v92;
          char v6 = *(uint64_t **)(v15 + 104);
          if (v6)
          {
            if (*(unsigned char *)(v6[33] + 32)) {
              uint64_t v67 = 82;
            }
            else {
              uint64_t v67 = 69;
            }
            uint64_t v96 = v67;
            unint64_t v97 = 0xE100000000000000;
            swift_bridgeObjectRetain();
            v68._uint64_t countAndFlagsBits = 46;
            v68._object = (void *)0xE100000000000000;
            String.append(_:)(v68);
            uint64_t v93 = v7;
            uint64_t v69 = v96;
            unint64_t v70 = v97;
            swift_retain();
            swift_bridgeObjectRelease();
            uint64_t v96 = v6[34];
            uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
            unint64_t v73 = v72;
            uint64_t v96 = v69;
            unint64_t v97 = v70;
            uint64_t v7 = v93;
            swift_bridgeObjectRetain();
            v74._uint64_t countAndFlagsBits = v71;
            a3 = v95;
            v74._object = v73;
            String.append(_:)(v74);
            swift_release();
            uint64_t v13 = v94;
            swift_bridgeObjectRelease();
            uint64_t v15 = v91;
            swift_bridgeObjectRelease();
            uint64_t v75 = v96;
            unint64_t v76 = v97;
          }
          else
          {
            unint64_t v76 = 0xE100000000000000;
            uint64_t v75 = 63;
          }
          *(void *)(v66 + 4) = sub_1001B3178(v75, v76, &v98);
          swift_bridgeObjectRelease();
          sub_10015B678(a3);
          sub_10015B678(a3);
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "[%{public}s] Failed trying to go back", (uint8_t *)v66, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v14 = &qword_100393AA0;
        }
        else
        {
          sub_10015B678(a3);
          sub_10015B678(a3);
        }
      }
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_58:
    type metadata accessor for RoadsideAssistanceModel();
    uint64_t v80 = &qword_100380D48;
    uint64_t v81 = type metadata accessor for RoadsideAssistanceModel;
LABEL_60:
    sub_10015B704(v80, (void (*)(uint64_t))v81);
    EnvironmentObject.error()();
    __break(1u);
  }
}

void sub_10015A9D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccessibilityNotification.ScreenChanged();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6)
  {
    if (*(void *)(v6 + 104))
    {
      swift_retain();
      uint64_t v7 = sub_1000C9064();
      swift_release();
      long long v38 = *(_OWORD *)(a1 + 64);
      v36[0] = *(_OWORD *)(a1 + 64);
      sub_100004010(&qword_1003894C8);
      State.wrappedValue.getter();
      char v8 = sub_1002326EC((uint64_t)v7, (uint64_t)v37);
      swift_bridgeObjectRelease();
      if (v8)
      {
        swift_bridgeObjectRelease();
        if (qword_10037DE10 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        sub_10000FD84(v9, (uint64_t)qword_1003A9B08);
        sub_10015B2B0(a1);
        sub_10015B2B0(a1);
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(void *)&v36[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 136446210;
          if (*(void *)(v6 + 104))
          {
            swift_retain();
            uint64_t v13 = sub_1000C8E54();
            unint64_t v15 = v14;
            swift_release();
          }
          else
          {
            unint64_t v15 = 0xE100000000000000;
            uint64_t v13 = 63;
          }
          unint64_t v37 = (void *)sub_1001B3178(v13, v15, (uint64_t *)v36);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10015B678(a1);
          sub_10015B678(a1);
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%{public}s] Questionnaire path has not changed", v12, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10015B678(a1);
          sub_10015B678(a1);
        }
      }
      else
      {
        if (qword_10037DE10 != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        sub_10000FD84(v16, (uint64_t)qword_1003A9B08);
        sub_10015B2B0(a1);
        sub_10015B2B0(a1);
        sub_10015B2B0(a1);
        swift_bridgeObjectRetain();
        sub_10015B2B0(a1);
        swift_bridgeObjectRetain();
        NSString v17 = Logger.logObject.getter();
        int v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, (os_log_type_t)v18))
        {
          os_log_t v34 = v17;
          uint64_t v35 = v3;
          uint64_t v19 = swift_slowAlloc();
          uint64_t v32 = swift_slowAlloc();
          unint64_t v37 = (void *)v32;
          *(_DWORD *)uint64_t v19 = 136446723;
          uint64_t v20 = *(void *)(v6 + 104);
          int v33 = v18;
          if (v20)
          {
            swift_retain();
            uint64_t v21 = sub_1000C8E54();
            unint64_t v23 = v22;
            swift_release();
          }
          else
          {
            unint64_t v23 = 0xE100000000000000;
            uint64_t v21 = 63;
          }
          *(void *)&v36[0] = sub_1001B3178(v21, v23, (uint64_t *)&v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10015B678(a1);
          sub_10015B678(a1);
          *(_WORD *)(v19 + 12) = 2081;
          v36[0] = v38;
          State.wrappedValue.getter();
          uint64_t v24 = Array.description.getter();
          unint64_t v26 = v25;
          swift_bridgeObjectRelease();
          *(void *)&v36[0] = sub_1001B3178(v24, v26, (uint64_t *)&v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10015B678(a1);
          sub_10015B678(a1);
          *(_WORD *)(v19 + 22) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v27 = Array.description.getter();
          unint64_t v29 = v28;
          swift_bridgeObjectRelease();
          *(void *)&v36[0] = sub_1001B3178(v27, v29, (uint64_t *)&v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v30 = v34;
          _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v33, "[%{public}s] Questionnaire path changed from %{private}s to %{private}s", (uint8_t *)v19, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v3 = v35;
        }
        else
        {
          sub_10015B678(a1);
          sub_10015B678(a1);
          sub_10015B678(a1);
          sub_10015B678(a1);

          swift_bridgeObjectRelease_n();
        }
        v36[0] = v38;
        unint64_t v37 = v7;
        State.wrappedValue.setter();
        sub_100159C2C();
        memset(v36, 0, sizeof(v36));
        AccessibilityNotification.ScreenChanged.init(_:)();
        _AccessibilityNotifications.post()();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
    }
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_10015B704(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_10015B044@<X0>(uint64_t a1@<X8>)
{
  return sub_100158E20(a1);
}

unint64_t sub_10015B088()
{
  unint64_t result = qword_1003894C0;
  if (!qword_1003894C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003894C0);
  }
  return result;
}

uint64_t sub_10015B0DC()
{
  return sub_100159950();
}

unint64_t sub_10015B0E4()
{
  unint64_t result = qword_1003894F8;
  if (!qword_1003894F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003894F8);
  }
  return result;
}

unint64_t sub_10015B138()
{
  unint64_t result = qword_100389500;
  if (!qword_100389500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389500);
  }
  return result;
}

uint64_t sub_10015B18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10015B1B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10015B1E4()
{
  return EnvironmentValues.accentColor.setter();
}

uint64_t sub_10015B210()
{
  return EnvironmentValues.accentColor.setter();
}

id sub_10015B240()
{
  return sub_100159B4C(v0 + 16);
}

uint64_t sub_10015B248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100389490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015B2B0(uint64_t a1)
{
  return a1;
}

void sub_10015B33C(uint64_t a1, uint64_t a2)
{
  sub_100159D54(a1, a2, v2 + 16);
}

unint64_t sub_10015B344()
{
  unint64_t result = qword_100389508;
  if (!qword_100389508)
  {
    sub_1000094C4(&qword_100389498);
    sub_10015B3C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389508);
  }
  return result;
}

unint64_t sub_10015B3C0()
{
  unint64_t result = qword_100389510;
  if (!qword_100389510)
  {
    sub_1000094C4(&qword_100389490);
    sub_100009B18(&qword_100389518, &qword_100389488);
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389510);
  }
  return result;
}

unint64_t sub_10015B484()
{
  unint64_t result = qword_100389520;
  if (!qword_100389520)
  {
    sub_1000094C4(&qword_1003894D0);
    sub_100090448();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389520);
  }
  return result;
}

void sub_10015B4FC()
{
  sub_10015A9D8(v0 + 16);
}

uint64_t sub_10015B504()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015B540@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v3 = (uint64_t (*)())swift_allocObject();
  long long v4 = v1[4];
  *((_OWORD *)v3 + 3) = v1[3];
  *((_OWORD *)v3 + 4) = v4;
  long long v5 = v1[6];
  *((_OWORD *)v3 + 5) = v1[5];
  *((_OWORD *)v3 + 6) = v5;
  long long v6 = v1[2];
  *((_OWORD *)v3 + 1) = v1[1];
  *((_OWORD *)v3 + 2) = v6;
  *a1 = sub_10015B62C;
  a1[1] = v3;

  return sub_10015B2B0((uint64_t)(v1 + 1));
}

uint64_t sub_10015B5C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10015B62C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10015B678(uint64_t a1)
{
  return a1;
}

uint64_t sub_10015B704(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10015B75C()
{
  unint64_t result = qword_100389528;
  if (!qword_100389528)
  {
    sub_1000094C4(&qword_100389530);
    sub_1000094C4(&qword_1003894A8);
    sub_100009B18(&qword_1003894B8, &qword_1003894A8);
    sub_1000C591C();
    swift_getOpaqueTypeConformance2();
    sub_10015B088();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389528);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionHeaderView()
{
  return &type metadata for QuestionHeaderView;
}

uint64_t sub_10015B85C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10015B878@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 2)
  {
    type metadata accessor for UIMetrics();
    sub_100092DDC();
    swift_retain();
    EnvironmentObject.init()();
  }
  else
  {
    sub_10015B9F8();
    sub_10015BA4C();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
  }
  sub_100004010(&qword_100389538);
  sub_10015B9BC();
  sub_10015BAA0();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = v6;
  return result;
}

double sub_10015B9B4@<D0>(uint64_t a1@<X8>)
{
  return sub_10015B878(*v1, a1);
}

uint64_t sub_10015B9BC()
{
  return sub_10015BC58(&qword_100389540, &qword_100389538, (void (*)(void))sub_10015B9F8, (void (*)(void))sub_10015BA4C);
}

unint64_t sub_10015B9F8()
{
  unint64_t result = qword_100389548;
  if (!qword_100389548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389548);
  }
  return result;
}

unint64_t sub_10015BA4C()
{
  unint64_t result = qword_100389550;
  if (!qword_100389550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389550);
  }
  return result;
}

unint64_t sub_10015BAA0()
{
  unint64_t result = qword_100389558;
  if (!qword_100389558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389558);
  }
  return result;
}

void *sub_10015BAF8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FreeFormQuestionHeaderView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FreeFormQuestionHeaderView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FreeFormQuestionHeaderView()
{
  return &type metadata for FreeFormQuestionHeaderView;
}

ValueMetadata *type metadata accessor for DefaultQuestionHeaderView()
{
  return &type metadata for DefaultQuestionHeaderView;
}

uint64_t sub_10015BC08()
{
  return sub_10015BC58(&qword_100389560, &qword_100389568, (void (*)(void))sub_10015B9BC, (void (*)(void))sub_10015BAA0);
}

uint64_t sub_10015BC58(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015BCE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015BCFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v5 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t v6 = *(void *)(v3 + 96);
  type metadata accessor for UIMetrics();
  sub_100092DDC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = EnvironmentObject.init()();
  *a1 = result;
  a1[1] = v9;
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = v7;
  a1[5] = v6;
  return result;
}

uint64_t sub_10015BD7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v2 = sub_100004010(&qword_1003895D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004010(&qword_1003895D8);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004010(&qword_1003895E0);
  __chkstk_darwin(v48);
  char v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004010(&qword_1003895E8);
  uint64_t v9 = __chkstk_darwin(v49);
  os_log_type_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = *v1;
  if (*v1)
  {
    uint64_t v15 = *(void *)(v14 + 72);
    uint64_t v16 = *(void *)(v14 + 80);
    sub_100008F88((void *)(v14 + 48), v15);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 24))(v51, v15, v16);
    *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
    *((void *)v4 + 1) = 0;
    v4[16] = 0;
    uint64_t v17 = sub_100004010(&qword_1003895F0);
    sub_10015C2B0(v1, v51, (uint64_t)&v4[*(int *)(v17 + 44)]);
    id v18 = *(id *)(v14 + 112);
    LOBYTE(v15) = static UIContentSizeCategory.>= infix(_:_:)();

    double v19 = 0.0;
    if ((v15 & 1) == 0)
    {
      uint64_t v20 = v52;
      uint64_t v21 = v53;
      sub_100008F88(v51, v52);
      double v19 = (*(double (**)(uint64_t, uint64_t))(v21 + 120))(v20, v21);
    }
    id v22 = *(id *)(v14 + 112);
    char v23 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v23)
    {
      double v24 = INFINITY;
    }
    else
    {
      uint64_t v25 = v52;
      uint64_t v26 = v53;
      sub_100008F88(v51, v52);
      double v24 = (*(double (**)(uint64_t, uint64_t))(v26 + 120))(v25, v26);
    }
    static Alignment.center.getter();
    if (v19 > v24)
    {
      static os_log_type_t.fault.getter();
      uint64_t v27 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v4, (uint64_t)v6, &qword_1003895D0);
    unint64_t v28 = &v6[*(int *)(v47 + 36)];
    long long v29 = v59;
    *((_OWORD *)v28 + 4) = v58;
    *((_OWORD *)v28 + 5) = v29;
    *((_OWORD *)v28 + 6) = v60;
    long long v30 = v55;
    *(_OWORD *)unint64_t v28 = v54;
    *((_OWORD *)v28 + 1) = v30;
    long long v31 = v57;
    *((_OWORD *)v28 + 2) = v56;
    *((_OWORD *)v28 + 3) = v31;
    sub_10000950C((uint64_t)v4, &qword_1003895D0);
    char v32 = static Edge.Set.top.getter();
    uint64_t v33 = v52;
    uint64_t v34 = v53;
    sub_100008F88(v51, v52);
    (*(void (**)(uint64_t, uint64_t))(v34 + 128))(v33, v34);
    EdgeInsets.init(_all:)();
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    sub_10000D2A0((uint64_t)v6, (uint64_t)v8, &qword_1003895D8);
    uint64_t v43 = &v8[*(int *)(v48 + 36)];
    *uint64_t v43 = v32;
    *((void *)v43 + 1) = v36;
    *((void *)v43 + 2) = v38;
    *((void *)v43 + 3) = v40;
    *((void *)v43 + 4) = v42;
    v43[40] = 0;
    sub_10000950C((uint64_t)v6, &qword_1003895D8);
    char v44 = static Edge.Set.bottom.getter();
    sub_10000D2A0((uint64_t)v8, (uint64_t)v11, &qword_1003895E0);
    unint64_t v45 = &v11[*(int *)(v49 + 36)];
    *unint64_t v45 = v44;
    *(_OWORD *)(v45 + 8) = 0u;
    *(_OWORD *)(v45 + 24) = 0u;
    v45[40] = 1;
    sub_10000950C((uint64_t)v8, &qword_1003895E0);
    sub_10000D544((uint64_t)v11, (uint64_t)v13, &qword_1003895E8);
    sub_10000D544((uint64_t)v13, v50, &qword_1003895E8);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v51);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100092DDC();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015C2B0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v5 = type metadata accessor for AccessibilityTraits();
  uint64_t v77 = *(void *)(v5 - 8);
  uint64_t v78 = v5;
  __chkstk_darwin(v5);
  uint64_t v75 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100385968);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v81 = (uint64_t)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v76 = (char *)v70 - v11;
  __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)v70 - v12;
  uint64_t v13 = a1[3];
  *(void *)&long long v94 = a1[2];
  *((void *)&v94 + 1) = v13;
  unint64_t v14 = sub_100033310();
  swift_bridgeObjectRetain();
  v70[1] = v14;
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  LOBYTE(v14) = v18 & 1;
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  uint64_t v71 = a2;
  sub_100008F88(a2, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 152))(v19, v20);
  uint64_t v73 = Text.font(_:)();
  uint64_t v74 = v21;
  uint64_t v23 = v22;
  int v72 = v24;
  swift_release();
  sub_100033364(v15, v17, v14);
  swift_bridgeObjectRelease();
  unint64_t v79 = a1;
  uint64_t v25 = *a1;
  if (*a1)
  {
    id v26 = *(id *)(v25 + 112);
    char v27 = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v28 = (v27 & 1) == 0;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v82 = v25;
    id v30 = *(id *)(v25 + 112);
    static Alignment.center.getter();
    UIContentSizeCategory v84 = UIContentSizeCategoryAccessibilityExtraLarge;
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v31 = v73;
    uint64_t v113 = v73;
    uint64_t v114 = v23;
    char v32 = v72 & 1;
    char v115 = v72 & 1;
    uint64_t v116 = v74;
    uint64_t v117 = KeyPath;
    BOOL v118 = v28;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v106, 0.0, 1, 0.0, 1);
    sub_100033364(v31, v23, v32);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v33 = v82;
    id v34 = *(id *)(v82 + 112);
    char v35 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v35) {
      double v36 = 1.0;
    }
    else {
      double v36 = 0.5;
    }
    uint64_t v37 = swift_getKeyPath();
    long long v100 = v106[6];
    long long v101 = v106[7];
    long long v102 = v106[8];
    long long v103 = v106[9];
    long long v96 = v106[2];
    long long v97 = v106[3];
    long long v98 = v106[4];
    long long v99 = v106[5];
    long long v94 = v106[0];
    long long v95 = v106[1];
    *(void *)&long long v104 = v37;
    *((double *)&v104 + 1) = v36;
    uint64_t v38 = v75;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100385988);
    sub_1000C57C0();
    uint64_t v39 = (uint64_t)v76;
    View.accessibility(addTraits:)();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v38, v78);
    v105[8] = v102;
    v105[9] = v103;
    v105[10] = v104;
    v105[4] = v98;
    v105[5] = v99;
    v105[7] = v101;
    v105[6] = v100;
    v105[0] = v94;
    v105[1] = v95;
    v105[3] = v97;
    v105[2] = v96;
    sub_100043A24((uint64_t)v105);
    sub_10000D544(v39, v83, &qword_100385968);
    unint64_t v40 = v79[5];
    uint64_t v41 = HIBYTE(v40) & 0xF;
    if ((v40 & 0x2000000000000000) == 0) {
      uint64_t v41 = v79[4] & 0xFFFFFFFFFFFFLL;
    }
    if (v41)
    {
      *(void *)&long long v94 = v79[4];
      *((void *)&v94 + 1) = v40;
      swift_bridgeObjectRetain();
      uint64_t v42 = v33;
      uint64_t v43 = Text.init<A>(_:)();
      uint64_t v45 = v44;
      char v47 = v46 & 1;
      uint64_t v48 = v71[3];
      uint64_t v49 = v71[4];
      sub_100008F88(v71, v48);
      (*(void (**)(uint64_t, uint64_t))(v49 + 160))(v48, v49);
      uint64_t v50 = Text.font(_:)();
      uint64_t v52 = v51;
      LODWORD(v78) = v53;
      unint64_t v79 = v54;
      swift_release();
      sub_100033364(v43, v45, v47);
      swift_bridgeObjectRelease();
      id v55 = *(id *)(v42 + 112);
      LOBYTE(v45) = static UIContentSizeCategory.>= infix(_:_:)();

      BOOL v56 = (v45 & 1) == 0;
      uint64_t v57 = swift_getKeyPath();
      id v58 = *(id *)(v42 + 112);
      static Alignment.center.getter();
      if (static UIContentSizeCategory.>= infix(_:_:)())
      {
        static Alignment.center.getter();
        if (static Alignment.== infix(_:_:)()) {
          static Alignment.leading.getter();
        }
      }

      uint64_t v107 = v50;
      uint64_t v108 = v52;
      char v59 = v78 & 1;
      char v109 = v78 & 1;
      uint64_t v110 = v79;
      uint64_t v111 = v57;
      BOOL v112 = v56;
      sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v86, 0.0, 1, 0.0, 1);
      sub_100033364(v50, v52, v59);
      swift_release();
      swift_bridgeObjectRelease();
      id v60 = *(id *)(v82 + 112);
      char v61 = static UIContentSizeCategory.>= infix(_:_:)();

      if (v61) {
        double v62 = 1.0;
      }
      else {
        double v62 = 0.5;
      }
      uint64_t v63 = swift_getKeyPath();
      char v64 = static Edge.Set.top.getter();
      v85[0] = 1;
      v87[6] = v86[6];
      v87[7] = v86[7];
      v87[8] = v86[8];
      v87[9] = v86[9];
      v87[2] = v86[2];
      v87[3] = v86[3];
      v87[4] = v86[4];
      v87[5] = v86[5];
      v87[0] = v86[0];
      v87[1] = v86[1];
      uint64_t v88 = v63;
      double v89 = v62;
      char v90 = v64;
      long long v91 = 0u;
      long long v92 = 0u;
      char v93 = 1;
      ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v87);
    }
    else
    {
      sub_10015D55C(v87);
    }
    sub_10000D544((uint64_t)v87, (uint64_t)&v94, &qword_1003895F8);
    uint64_t v65 = v83;
    uint64_t v66 = v81;
    sub_10000D2A0(v83, v81, &qword_100385968);
    sub_10000D544((uint64_t)&v94, (uint64_t)v85, &qword_1003895F8);
    uint64_t v67 = v80;
    sub_10000D2A0(v66, v80, &qword_100385968);
    uint64_t v68 = v67 + *(int *)(sub_100004010(&qword_100389600) + 48);
    sub_10000D544((uint64_t)v85, (uint64_t)v86, &qword_1003895F8);
    sub_10000D544((uint64_t)v86, v68, &qword_1003895F8);
    sub_10015D4D8((uint64_t)v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000336C0);
    sub_10000950C(v65, &qword_100385968);
    sub_10000D544((uint64_t)v85, (uint64_t)v87, &qword_1003895F8);
    sub_10015D4D8((uint64_t)v87, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100033998);
    return sub_10000950C(v66, &qword_100385968);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100092DDC();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015CAE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10015BD7C(a1);
}

uint64_t sub_10015CB24@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100389570);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100389578);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v12 = a1[9];
    uint64_t v13 = a1[10];
    sub_100008F88(a1 + 6, v12);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 24))(v27, v12, v13);
    *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v14 = sub_100004010(&qword_100389580);
    sub_10015CE2C(a2, v27, (uint64_t)&v8[*(int *)(v14 + 44)]);
    uint64_t v15 = v28;
    uint64_t v16 = v29;
    sub_100008F88(v27, v28);
    double v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 144))(v15, v16) * 0.5;
    uint64_t v18 = v28;
    uint64_t v19 = v29;
    sub_100008F88(v27, v28);
    double v20 = (*(double (**)(uint64_t, uint64_t))(v19 + 144))(v18, v19);
    static Alignment.center.getter();
    if (v17 > v20)
    {
      static os_log_type_t.fault.getter();
      uint64_t v21 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v8, (uint64_t)v11, &qword_100389570);
    uint64_t v22 = &v11[*(int *)(v9 + 36)];
    long long v23 = v35;
    *((_OWORD *)v22 + 4) = v34;
    *((_OWORD *)v22 + 5) = v23;
    *((_OWORD *)v22 + 6) = v36;
    long long v24 = v31;
    *(_OWORD *)uint64_t v22 = v30;
    *((_OWORD *)v22 + 1) = v24;
    long long v25 = v33;
    *((_OWORD *)v22 + 2) = v32;
    *((_OWORD *)v22 + 3) = v25;
    sub_10000950C((uint64_t)v8, &qword_100389570);
    sub_10000D544((uint64_t)v11, a3, &qword_100389578);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v27);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100092DDC();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015CE2C@<X0>(uint64_t a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v33 = type metadata accessor for AccessibilityTraits();
  uint64_t v32 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  sub_100008F88(a2, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 152))(v14, v15);
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  int v30 = v19;
  uint64_t v31 = v20;
  swift_release();
  sub_100033364(v9, v11, v13);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v21 = v49;
  char v22 = v50;
  uint64_t v23 = v51;
  LOBYTE(v9) = v52;
  uint64_t v24 = v53;
  uint64_t v25 = v54;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = swift_getKeyPath();
  uint64_t v35 = v16;
  uint64_t v36 = v18;
  char v37 = v30 & 1;
  uint64_t v38 = v31;
  uint64_t v39 = v21;
  char v40 = v22;
  uint64_t v41 = v23;
  char v42 = v9;
  uint64_t v43 = v24;
  uint64_t v44 = v25;
  uint64_t v45 = KeyPath;
  char v46 = 1;
  uint64_t v47 = v27;
  uint64_t v48 = 0x3FE0000000000000;
  static AccessibilityTraits.isHeader.getter();
  sub_100004010(&qword_100389588);
  sub_10015D118();
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
  sub_100033364(v35, v36, v37);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10015D0E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CB24(*(void **)v1, *(void *)(v1 + 16), a1);
}

uint64_t sub_10015D0EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10015D118()
{
  unint64_t result = qword_100389590;
  if (!qword_100389590)
  {
    sub_1000094C4(&qword_100389588);
    sub_10015D1B8();
    sub_100009B18(&qword_100381990, &qword_100381998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389590);
  }
  return result;
}

unint64_t sub_10015D1B8()
{
  unint64_t result = qword_100389598;
  if (!qword_100389598)
  {
    sub_1000094C4(&qword_1003895A0);
    sub_10015D258();
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389598);
  }
  return result;
}

unint64_t sub_10015D258()
{
  unint64_t result = qword_1003895A8;
  if (!qword_1003895A8)
  {
    sub_1000094C4(&qword_1003895B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003895A8);
  }
  return result;
}

uint64_t initializeWithCopy for DefaultQuestionnaireHeaderView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DefaultQuestionnaireHeaderView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DefaultQuestionnaireHeaderView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DefaultQuestionnaireHeaderView()
{
  return &type metadata for DefaultQuestionnaireHeaderView;
}

unint64_t sub_10015D430()
{
  unint64_t result = qword_1003895B8;
  if (!qword_1003895B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003895B8);
  }
  return result;
}

uint64_t sub_10015D484()
{
  return sub_10015D6E0(&qword_1003895C0, &qword_100389578, &qword_1003895C8, &qword_100389570);
}

uint64_t sub_10015D4BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015D4D8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 216);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    v4);
  return a1;
}

double sub_10015D55C(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_10015D584()
{
  return sub_10015D5C8(&qword_100389608, &qword_1003895E8, (void (*)(void))sub_10015D644);
}

uint64_t sub_10015D5C8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10015D644()
{
  unint64_t result = qword_100389610;
  if (!qword_100389610)
  {
    sub_1000094C4(&qword_1003895E0);
    sub_10015D6E0(&qword_100389618, &qword_1003895D8, &qword_100389620, &qword_1003895D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389610);
  }
  return result;
}

uint64_t sub_10015D6E0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    sub_100009B18(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ConnectionAssistantEarthRenderer.__allocating_init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ConnectionAssistantEarthRenderer.init(device:buffers:renderPipelines:)(a1, a2, a3);
  return v6;
}

void *ConnectionAssistantEarthRenderer.init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  type metadata accessor for ConnectionAssistantRendererEarthOutline();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_WORD *)(v5 + 104) = 1;
  *(void *)(v5 + 16) = a1;
  v3[7] = v5;
  swift_unknownObjectRetain_n();
  swift_retain();
  swift_retain();
  id v6 = [a1 newBufferWithLength:192 options:1];
  if (v6
    && (swift_unknownObjectRelease(),
        v3[4] = v6,
        (id v7 = [(id)swift_unknownObjectRetain() newBufferWithLength:176 options:1]) != 0))
  {
    id v8 = v7;
    swift_unknownObjectRelease();
    v3[5] = v8;
    id v9 = [a1 newBufferWithLength:48 options:1];
    if (v9)
    {
      id v10 = v9;
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      v3[6] = v10;
      return v3;
    }
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_release();
    int v11 = 1;
  }
  else
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    int v11 = 0;
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (v6) {
    swift_unknownObjectRelease();
  }
  if (v11) {
    swift_unknownObjectRelease();
  }
  swift_release();
  type metadata accessor for ConnectionAssistantEarthRenderer();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t ConnectionAssistantEarthRenderer.deinit()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t ConnectionAssistantEarthRenderer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

id sub_10015DA9C(float32x4_t *a1, uint64_t a2, void *a3, double a4, double a5)
{
  id v6 = v5;
  ConnectionAssistantEarth.project(camera:)((float32x4_t *)a2, (uint64_t)v93, a5);
  id result = (id)sub_10015E1C0((uint64_t)v93, (uint64_t)v94);
  if ((v98 & 1) == 0)
  {
    long long v82 = v94[2];
    long long v84 = v94[1];
    long long v77 = v94[0];
    long long v80 = v94[3];
    uint64_t v74 = v95;
    uint64_t v72 = v96;
    int v70 = v97;
    int v11 = (void *)v5[7];
    uint64_t v12 = *(void *)a2;
    uint64_t v13 = *(void *)(a2 + 8);
    double v14 = *(double *)(a2 + 16);
    ConnectionAssistantRendererEarthOutline.loadTexturesIfNecessary(in:)(*(void *)a2, v13, v14);
    float v16 = a1[4].f32[1];
    float v15 = a1[4].f32[2];
    float32x4_t v89 = *(float32x4_t *)(a2 + 208);
    float32x4_t v91 = *(float32x4_t *)(a2 + 192);
    float32x4_t v85 = *(float32x4_t *)(a2 + 240);
    float32x4_t v87 = *(float32x4_t *)(a2 + 224);
    *(double *)v17.i64 = ConnectionAssistantEarth.model.getter();
    float v21 = v16 * v15;
    v99.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v91, v17.f32[0]), v89, *(float32x2_t *)v17.f32, 1), v87, v17, 2), v85, v17, 3);
    v99.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v91, v18.f32[0]), v89, *(float32x2_t *)v18.f32, 1), v87, v18, 2), v85, v18, 3);
    v99.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v91, v19.f32[0]), v89, *(float32x2_t *)v19.f32, 1), v87, v19, 2), v85, v19, 3);
    v99.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v91, v20.f32[0]), v89, *(float32x2_t *)v20.f32, 1), v87, v20, 2), v85, v20, 3);
    simd_float4x4 v100 = __invert_f4(v99);
    v100.columns[0].i32[3] = 0;
    v100.columns[1].i32[3] = 0;
    simd_float4 v64 = v100.columns[1];
    simd_float4 v67 = v100.columns[0];
    v100.columns[2].i32[3] = 0;
    v100.columns[3].i32[3] = 0;
    simd_float4 v59 = v100.columns[3];
    simd_float4 v61 = v100.columns[2];
    float v22 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(v12, v13, v14);
    float v23 = v14;
    int v24 = *(_DWORD *)(a2 + 32);
    int v25 = a1[4].i32[3];
    id v26 = (void *)v5[4];
    uint64_t v27 = (float *)[(id)swift_unknownObjectRetain() contents];
    id v28 = v26;
    *(_OWORD *)uint64_t v27 = v84;
    *((_OWORD *)v27 + 1) = v82;
    *((_OWORD *)v27 + 2) = v80;
    *((simd_float4 *)v27 + 3) = v67;
    *((simd_float4 *)v27 + 4) = v64;
    *((simd_float4 *)v27 + 5) = v61;
    *((simd_float4 *)v27 + 6) = v59;
    float v83 = v22;
    v27[28] = v22;
    v27[29] = v23;
    float v81 = v14;
    *((_DWORD *)v27 + 30) = v24;
    *((_DWORD *)v27 + 31) = v25;
    *((_OWORD *)v27 + 8) = v77;
    v27[36] = v16;
    v27[37] = v16 * v16;
    *((void *)v27 + 19) = v74;
    *((void *)v27 + 20) = v72;
    *((_DWORD *)v27 + 42) = v70;
    v27[43] = v16 * 0.6;
    v27[44] = v16;
    v27[45] = v21;
    uint64_t v29 = v6[3];
    uint64_t v30 = sub_100285024(1);
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v75 = v13;
      uint64_t v78 = v12;
      NSString v32 = String._bridgeToObjectiveC()();
      [a3 setLabel:v32];

      [a3 setRenderPipelineState:v31];
      uint64_t v33 = v6[2];
      [a3 setVertexBuffer:*(void *)(v33 + 24) offset:0 atIndex:0];
      [a3 setVertexBuffer:*(void *)(v33 + 32) offset:0 atIndex:1];
      [a3 setFragmentBuffer:v28 offset:0 atIndex:0];
      swift_beginAccess();
      uint64_t v34 = v11[7];
      if (v34)
      {
        uint64_t v35 = v11[8];
        uint64_t v36 = v11[9];
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        [a3 setFragmentTexture:v34 atIndex:0];
        [a3 setFragmentTexture:v35 atIndex:1];
        [a3 setFragmentTexture:v36 atIndex:2];
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      [a3 drawPrimitives:4 vertexStart:0 vertexCount:4 *(_OWORD *)&v59];
      swift_unknownObjectRelease();
      uint64_t v12 = v78;
      uint64_t v13 = v75;
    }
    swift_beginAccess();
    __int32 v37 = *(_DWORD *)(v29 + 108);
    long long v79 = *(_OWORD *)(v29 + 128);
    float32x4_t v60 = *(float32x4_t *)(a2 + 320);
    float32x4_t v62 = *(float32x4_t *)(a2 + 336);
    float32x4_t v65 = *(float32x4_t *)(a2 + 352);
    float32x4_t v68 = *(float32x4_t *)(a2 + 368);
    *(double *)v38.i64 = ConnectionAssistantEarth.model.getter();
    float32x4_t v73 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v60, v39.f32[0]), v62, *(float32x2_t *)v39.f32, 1), v65, v39, 2), v68, v39, 3);
    float32x4_t v76 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v60, v38.f32[0]), v62, *(float32x2_t *)v38.f32, 1), v65, v38, 2), v68, v38, 3);
    float32x4_t v71 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v60, v43.f32[0]), v62, *(float32x2_t *)v43.f32, 1), v65, v43, 2), v68, v43, 3);
    float32x4_t v69 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v60, v40.f32[0]), v62, *(float32x2_t *)v40.f32, 1), v65, v40, 2), v68, v40, 3);
    uint64_t v41 = (void *)v6[5];
    float v42 = 1.0;
    v43.i32[0] = 1.0;
    if (v12)
    {
      v43.i32[0] = 1.0;
      if (v13)
      {
        float v44 = (float)v12 / (float)v13;
        float v42 = fminf(v44, 1.0);
        v43.f32[0] = fmaxf(v44, 1.0);
      }
    }
    v43.f32[1] = 1.0 / v42;
    float32x4_t v45 = v91;
    v45.i32[3] = 0;
    float32x4_t v92 = v45;
    float32x4_t v46 = v89;
    v46.i32[3] = 0;
    float32x4_t v90 = v46;
    float32x4_t v47 = v87;
    v47.i32[3] = 0;
    float32x4_t v88 = v47;
    float32x4_t v48 = v85;
    v48.i32[3] = 0;
    float32x4_t v86 = v48;
    uint64_t v63 = v43.i64[0];
    float32x4_t v66 = *a1;
    uint64_t v49 = (float32x4_t *)[(id)swift_unknownObjectRetain() contents];
    id v50 = v41;
    v49->i64[0] = v63;
    v49->f32[2] = v83;
    v49->f32[3] = v81;
    v49[1] = v76;
    v49[2] = v73;
    v49[3] = v71;
    v49[4] = v69;
    v49[5] = v92;
    v49[6] = v90;
    v49[7] = v88;
    v49[8] = v86;
    v49[9] = v66;
    v49[10].f32[0] = v16;
    v49[10].i32[1] = v37;
    uint64_t v51 = (void *)v6[6];
    char v52 = (float *)[(id)swift_unknownObjectRetain() contents];
    id v53 = v51;
    *char v52 = v83;
    v52[1] = v81;
    *((_DWORD *)v52 + 2) = v24;
    *((_OWORD *)v52 + 1) = v79;
    *((_DWORD *)v52 + 8) = v37;
    *((_DWORD *)v52 + 9) = v25;
    id result = (id)sub_100285024(3);
    if (result)
    {
      id v54 = result;
      swift_beginAccess();
      uint64_t v55 = v11[4];
      if (v55)
      {
        uint64_t v57 = v11[5];
        uint64_t v56 = v11[6];
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        NSString v58 = String._bridgeToObjectiveC()();
        [a3 setLabel:v58];

        [a3 setRenderPipelineState:v54];
        [a3 setVertexBuffer:v50 offset:0 atIndex:0];
        [a3 setVertexBuffer:v55 offset:0 atIndex:1];
        [a3 setVertexBuffer:v56 offset:0 atIndex:2];
        id result = [a3 setFragmentBuffer:v53 offset:0 atIndex:0];
        if ((unsigned __int128)(v57 * (__int128)6) >> 64 != (6 * v57) >> 63)
        {
          __break(1u);
          return result;
        }
        [a3 drawPrimitives:3 vertexStart:0 vertexCount:];
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_10015E178(float32x4_t *a1, uint64_t a2, void *a3, double a4, double a5)
{
  return sub_10015DA9C(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for ConnectionAssistantEarthRenderer()
{
  return self;
}

uint64_t sub_10015E1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100381888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015E228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v23[0] = a2;
  v23[1] = a5;
  uint64_t v8 = type metadata accessor for VStack();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v11 = (char *)v23 - v10;
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  float v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  float32x4_t v18 = (char *)v23 - v17;
  v23[4] = a3;
  v23[5] = a4;
  v23[6] = a1;
  v23[7] = v23[0];
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  static Edge.Set.all.getter();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23[8] = WitnessTable;
  v23[9] = &protocol witness table for _PaddingLayout;
  uint64_t v20 = swift_getWitnessTable();
  sub_1000A7320(v16, v12, v20);
  float v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v12);
  sub_1000A7320(v18, v12, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v12);
}

uint64_t sub_10015E4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))__chkstk_darwin(v7);
  uint64_t v12 = (char *)&v15 - v11;
  v10();
  sub_1000A7320(v9, a3, a4);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, a3);
  sub_1000A7320(v12, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, a3);
}

uint64_t sub_10015E5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10015E228(*v2, v2[1], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10015E600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v26 = a8;
  uint64_t v27 = a4;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v28 = a9;
  type metadata accessor for VStack();
  sub_1000094C4(&qword_1003897F0);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100380ED8);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_10037F1E8);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_1003897F8);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_1003809C8);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for VStack();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  float32x4_t v19 = (char *)&v23 - v18;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v32 = v26;
  uint64_t v33 = a1;
  uint64_t v34 = v24;
  uint64_t v35 = v25;
  uint64_t v36 = v27;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000A7320(v17, v13, WitnessTable);
  float v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, v13);
  sub_1000A7320(v19, v13, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v13);
}

uint64_t sub_10015E8FC@<X0>(uint64_t (*a1)(void, void)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v108 = a8;
  uint64_t v109 = a4;
  uint64_t v105 = a6;
  uint64_t v106 = a3;
  float v81 = a1;
  uint64_t v82 = a2;
  uint64_t v104 = a9;
  uint64_t v90 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  float32x4_t v85 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000094C4(&qword_10037F1E8);
  uint64_t v87 = type metadata accessor for ModifiedContent();
  uint64_t v93 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  float v83 = (char *)&v75 - v12;
  sub_1000094C4(&qword_1003897F8);
  uint64_t v88 = type metadata accessor for ModifiedContent();
  uint64_t v95 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  long long v84 = (char *)&v75 - v13;
  sub_1000094C4(&qword_1003809C8);
  uint64_t v91 = type metadata accessor for ModifiedContent();
  uint64_t v99 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  float32x4_t v86 = (char *)&v75 - v14;
  uint64_t v96 = type metadata accessor for ModifiedContent();
  uint64_t v100 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  float32x4_t v89 = (char *)&v75 - v15;
  uint64_t v97 = type metadata accessor for ModifiedContent();
  uint64_t v102 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  float32x4_t v92 = (char *)&v75 - v16;
  uint64_t v101 = type metadata accessor for ModifiedContent();
  uint64_t v103 = *(void *)(v101 - 8);
  uint64_t v17 = __chkstk_darwin(v101);
  long long v94 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v98 = (char *)&v75 - v19;
  uint64_t v20 = type metadata accessor for Material();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v79 = v20;
  uint64_t v80 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for VStack();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v75 - v26;
  sub_1000094C4(&qword_1003897F0);
  uint64_t v28 = type metadata accessor for ModifiedContent();
  uint64_t v78 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v75 - v29;
  sub_1000094C4(&qword_100380ED8);
  uint64_t v77 = type metadata accessor for ModifiedContent();
  uint64_t v107 = *(void *)(v77 - 8);
  uint64_t v31 = __chkstk_darwin(v77);
  uint64_t v33 = (char *)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v110 = (char *)&v75 - v34;
  uint64_t v111 = a5;
  uint64_t v112 = v105;
  uint64_t v113 = a7;
  uint64_t v114 = v108;
  char v115 = v81;
  uint64_t v116 = v82;
  uint64_t v117 = v106;
  uint64_t v118 = v109;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  static Material.ultraThin.getter();
  static Edge.Set.all.getter();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = v79;
  View.background<A>(_:ignoresSafeAreaEdges:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v23, v36);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v37 = sub_100009B18(&qword_100389800, &qword_1003897F0);
  v122[16] = WitnessTable;
  v122[17] = v37;
  uint64_t v38 = swift_getWitnessTable();
  View.cornerRadius(_:antialiased:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v30, v28);
  uint64_t v39 = sub_100009B18(&qword_100380F20, &qword_100380ED8);
  v122[14] = v38;
  v122[15] = v39;
  uint64_t v40 = v77;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v41 = v33;
  sub_1000A7320(v33, v40, v80);
  float v81 = *(uint64_t (**)(void, void))(v107 + 8);
  uint64_t v82 = v107 + 8;
  uint64_t v42 = v81(v33, v40);
  float32x4_t v43 = v85;
  v106(v42);
  static Font.footnote.getter();
  float v44 = v83;
  uint64_t v45 = v105;
  uint64_t v46 = v108;
  View.font(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v43, v45);
  LODWORD(v122[0]) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v47 = sub_100009B18(&qword_10037F1E0, &qword_10037F1E8);
  v122[12] = v46;
  v122[13] = v47;
  uint64_t v48 = v87;
  uint64_t v49 = swift_getWitnessTable();
  id v50 = v84;
  View.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v44, v48);
  uint64_t v51 = sub_100009B18(&qword_100389808, &qword_1003897F8);
  v122[10] = v49;
  v122[11] = v51;
  uint64_t v52 = v88;
  uint64_t v53 = swift_getWitnessTable();
  id v54 = v86;
  View.multilineTextAlignment(_:)();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v52);
  static Alignment.leading.getter();
  uint64_t v55 = sub_100009B18(&qword_1003809C0, &qword_1003809C8);
  v122[8] = v53;
  v122[9] = v55;
  uint64_t v73 = v91;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v56 = v89;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v54, v73);
  static Edge.Set.top.getter();
  v122[6] = v74;
  v122[7] = &protocol witness table for _FlexFrameLayout;
  uint64_t v57 = v96;
  uint64_t v58 = swift_getWitnessTable();
  simd_float4 v59 = v92;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v56, v57);
  static Edge.Set.leading.getter();
  v122[4] = v58;
  v122[5] = &protocol witness table for _PaddingLayout;
  uint64_t v60 = v97;
  uint64_t v61 = swift_getWitnessTable();
  float32x4_t v62 = v94;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v59, v60);
  v122[2] = v61;
  v122[3] = &protocol witness table for _PaddingLayout;
  uint64_t v63 = v101;
  uint64_t v64 = swift_getWitnessTable();
  float32x4_t v65 = v98;
  sub_1000A7320(v62, v63, v64);
  uint64_t v66 = v103;
  simd_float4 v67 = *(void (**)(char *, uint64_t))(v103 + 8);
  v67(v62, v63);
  float32x4_t v68 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  float32x4_t v76 = v41;
  v68(v41, v110, v40);
  v122[0] = v41;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v62, v65, v63);
  v122[1] = v62;
  v121[0] = v40;
  v121[1] = v63;
  uint64_t v69 = v40;
  uint64_t v119 = v80;
  uint64_t v120 = v64;
  sub_1000A754C((uint64_t)v122, 2uLL, (uint64_t)v121);
  v67(v65, v63);
  uint64_t v70 = v40;
  float32x4_t v71 = (uint64_t (*)(char *, uint64_t))v81;
  v81(v110, v70);
  v67(v62, v63);
  return v71(v76, v69);
}

uint64_t sub_10015F564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void (*)(void))__chkstk_darwin(v10);
  uint64_t v15 = (char *)&v18 - v14;
  v13();
  sub_1000A7320(v12, a5, a7);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, a5);
  sub_1000A7320(v15, a5, a7);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, a5);
}

uint64_t sub_10015F698@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10015E600(*v2, v2[1], v2[2], v2[3], a1[2], a1[3], a1[4], a1[5], a2);
}

uint64_t sub_10015F6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10015F6B8()
{
  swift_release();

  return swift_release();
}

uint64_t sub_10015F6F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10015F740(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10015F7A0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantConeRenderer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantConeRenderer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExplorerFloatingContentSection()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ExplorerFloatingContent()
{
  return sub_100006BAC();
}

uint64_t sub_10015F8A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015F8E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015F928()
{
  return sub_10015E4BC(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_10015F934()
{
  return sub_10015F964((uint64_t (*)(void, void, void, void, void, void, void, void))sub_10015E8FC);
}

uint64_t sub_10015F94C()
{
  return sub_10015F964((uint64_t (*)(void, void, void, void, void, void, void, void))sub_10015F564);
}

uint64_t sub_10015F964(uint64_t (*a1)(void, void, void, void, void, void, void, void))
{
  return a1(v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10015F980()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015FA14()
{
  type metadata accessor for VStack();
  sub_1000094C4(&qword_1003897F0);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_100380ED8);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_10037F1E8);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_1003897F8);
  type metadata accessor for ModifiedContent();
  sub_1000094C4(&qword_1003809C8);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();

  return swift_getWitnessTable();
}

__n128 ConnectionAssistantArrow.init(curveRadius:startAngle:endAngle:color:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>)
{
  sub_1001601C0(a1, (uint64_t)v9, a3, a4, a5);

  long long v7 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v7;
  *(_DWORD *)(a2 + 64) = v10;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t ConnectionAssistantArrow.project(center:camera:)(float32x2_t *a1, float32x4_t a2)
{
  float v15 = *(float *)(v2 + 12);
  float32x2_t v16 = *(float32x2_t *)a2.f32;
  float v3 = a1[15].f32[0];
  float v4 = a2.f32[2];
  float32x2_t v5 = a1[14];
  *(float32x2_t *)a2.f32 = vadd_f32(*(float32x2_t *)a2.f32, vmul_n_f32(v5, v15));
  a2.f32[2] = a2.f32[2] + (float)(v3 * v15);
  a2.i32[3] = 0;
  ConnectionAssistantCamera.projectUV(point:)(a2);
  uint64_t v7 = v6;
  unsigned __int8 v9 = v8;
  float v10 = v15 + *(float *)(v2 + 8);
  float v11 = v3 * v10;
  *(float32x2_t *)v12.f32 = vadd_f32(v16, vmul_n_f32(v5, v10));
  v12.f32[2] = v4 + v11;
  v12.i32[3] = 0;
  ConnectionAssistantCamera.projectUV(point:)(v12);
  if ((v9 | v13)) {
    return 0;
  }
  return v7;
}

float32x2_t ConnectionAssistantArrow.boundingBox(pointSize:projection:)(float a1, float32x2_t a2, float a3)
{
  float v6 = *(float *)(v3 + 16);
  float v7 = *(float *)(v3 + 20);
  float v8 = (float)(v6 + v7) * 0.5;
  float v9 = fminf(fmaxf((float)(roundf(v8 / 3.1416) * 3.1416) + 6.2832, v6), v7);
  float v10 = fminf(fmaxf((float)(roundf((float)(v8 + -1.5708) / 3.1416) * 3.1416) + 1.5708, v6), v7);
  float v11 = v6 + 1.5708;
  __float2 v12 = __sincosf_stret(v6);
  __float2 v13 = __sincosf_stret(v11);
  float32x2_t v14 = vsub_f32(vadd_f32(vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v12.__sinval), LODWORD(v12.__cosval)), a3), a2), vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v13.__sinval), LODWORD(v13.__cosval)), COERCE_FLOAT(*(void *)(v3 + 24))));
  float v22 = cosf(v9);
  float32x2_t v15 = vadd_f32(vmul_n_f32((float32x2_t)__PAIR64__(COERCE_UNSIGNED_INT(sinf(v10)), LODWORD(v22)), a3), a2);
  __float2 v16 = __sincosf_stret(v7);
  __float2 v17 = __sincosf_stret(v7 + -1.5708);
  float32x2_t v18 = vsub_f32(vadd_f32(vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v16.__sinval), LODWORD(v16.__cosval)), a3), a2), vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v17.__sinval), LODWORD(v17.__cosval)), COERCE_FLOAT(*(void *)(v3 + 28))));
  float32x2_t v19 = vminnm_f32(v14, vminnm_f32(v15, v18));
  int32x2_t v20 = (int32x2_t)vmaxnm_f32(v15, v18);
  v20.i32[0] = *(_DWORD *)(v3 + 36);
  if (*(float *)v20.i32 <= *(float *)(v3 + 40)) {
    v20.i32[0] = *(_DWORD *)(v3 + 40);
  }
  *(float *)v20.i32 = (float)((float)(*(float *)v20.i32 * a1) + (float)((float)(*(float *)v3 * 0.5) * a1))
                    + (float)((float)(*(float *)(v3 + 4) * a1) * 2.8);
  return vsub_f32(v19, (float32x2_t)vdup_lane_s32(v20, 0));
}

float ConnectionAssistantSatellite.radius.getter()
{
  return *(float *)v0;
}

void ConnectionAssistantSatellite.radius.setter(float a1)
{
  float *v1 = a1;
}

float ConnectionAssistantSatellite.angle.getter()
{
  return *(float *)(v0 + 4);
}

void ConnectionAssistantSatellite.angle.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*ConnectionAssistantSatellite.angle.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantSatellite.pointHeight.getter()
{
  return *(float *)(v0 + 8);
}

void ConnectionAssistantSatellite.pointHeight.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*ConnectionAssistantSatellite.pointHeight.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantArrow.centerRadius.getter()
{
  return *(float *)(v0 + 12);
}

void ConnectionAssistantArrow.centerRadius.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*ConnectionAssistantArrow.centerRadius.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantArrow.startAngle.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

void ConnectionAssistantArrow.endAngle.setter(float a1)
{
  *(float *)(v1 + 20) = a1;
}

uint64_t (*ConnectionAssistantArrow.endAngle.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantArrow.startExtensionLength.setter(float a1)
{
  *(float *)(v1 + 24) = a1;
}

uint64_t (*ConnectionAssistantArrow.startExtensionLength.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantArrow.endExtensionLength.setter(float a1)
{
  *(float *)(v1 + 28) = a1;
}

uint64_t (*ConnectionAssistantArrow.endExtensionLength.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantArrow.leftTipPointLength.setter(float a1)
{
  *(float *)(v1 + 36) = a1;
}

void ConnectionAssistantArrow.rightTipPointLength.setter(float a1)
{
  *(float *)(v1 + 40) = a1;
}

uint64_t (*ConnectionAssistantArrow.rightTipPointLength.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantArrow.color.setter(__n128 a1)
{
  v1[3] = a1;
}

void ConnectionAssistantArrow.opacity.setter(float a1)
{
  *(float *)(v1 + 64) = a1;
}

uint64_t (*ConnectionAssistantArrow.opacity.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

void ConnectionAssistantArrow.Projection.center.setter(double a1)
{
  double *v1 = a1;
}

float ConnectionAssistantRendererProjection.Circle.radius.getter(double a1, float a2)
{
  return a2;
}

BOOL sub_10016001C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  void v7[3] = v2;
  int v8 = *(_DWORD *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  _OWORD v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  int v10 = *(_DWORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s8SOSBuddy24ConnectionAssistantArrowV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9);
}

BOOL _s8SOSBuddy24ConnectionAssistantArrowV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2
    || *(float *)(a1 + 4) != *(float *)(a2 + 4)
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(float *)(a1 + 12) != *(float *)(a2 + 12)
    || *(float *)(a1 + 16) != *(float *)(a2 + 16)
    || *(float *)(a1 + 20) != *(float *)(a2 + 20)
    || *(float *)(a1 + 24) != *(float *)(a2 + 24)
    || *(float *)(a1 + 28) != *(float *)(a2 + 28)
    || *(float *)(a1 + 32) != *(float *)(a2 + 32)
    || *(float *)(a1 + 36) != *(float *)(a2 + 36)
    || *(float *)(a1 + 40) != *(float *)(a2 + 40))
  {
    return 0;
  }
  uint64_t v2 = 0;
  long long v3 = *(_OWORD *)(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 48);
  while (1)
  {
    long long v10 = v3;
    float v8 = *(float *)((unint64_t)&v10 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    long long v11 = v4;
    float v9 = *(float *)((unint64_t)&v11 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
    BOOL v5 = v8 == v9;
    if (v2 == 3) {
      break;
    }
    while (1)
    {
      ++v2;
      if (v5) {
        break;
      }
      BOOL v5 = 0;
      uint64_t v6 = 0;
      if (v2 == 3) {
        return v6;
      }
    }
  }
  return v8 == v9 && *(float *)(a1 + 64) == *(float *)(a2 + 64);
}

id sub_1001601C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>)
{
  float v7 = a4 + 1.5708;
  float v8 = a5 + 1.5708;
  float64_t v14 = 0.0;
  float64_t v15 = 0.0;
  float64_t v12 = 0.0;
  float64_t v13 = 0.0;
  id result = [a1 getRed:&v15 green:&v14 blue:&v13 alpha:&v12];
  v10.f64[0] = v15;
  v11.f64[0] = v13;
  v10.f64[1] = v14;
  v11.f64[1] = v12;
  *(void *)a2 = 0x4180000040400000;
  *(float *)(a2 + 8) = a3;
  *(_DWORD *)(a2 + 12) = 0;
  *(float *)(a2 + 16) = v7;
  *(float *)(a2 + 20) = v8;
  *(_OWORD *)(a2 + 24) = xmmword_1002BCAB0;
  *(_DWORD *)(a2 + 40) = 0;
  *(float32x4_t *)(a2 + 48) = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v10), v11);
  *(_DWORD *)(a2 + 64) = 1065353216;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantArrow()
{
  return &type metadata for ConnectionAssistantArrow;
}

uint64_t initializeBufferWithCopyOfBuffer for ConnectionAssistantRendererProjection.Circle(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)id result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantArrow.Projection()
{
  return &type metadata for ConnectionAssistantArrow.Projection;
}

uint64_t initializeWithCopy for BuiltInNotifyContactsConsentFooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BuiltInNotifyContactsConsentFooterView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BuiltInNotifyContactsConsentFooterView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for BuiltInNotifyContactsConsentFooterView()
{
  return &type metadata for BuiltInNotifyContactsConsentFooterView;
}

uint64_t sub_100160488()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001604A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  if (*(void *)v1)
  {
    uint64_t v4 = v2[9];
    uint64_t v5 = v2[10];
    sub_100008F88(v2 + 6, v4);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 24))(v47, v4, v5);
    uint64_t v6 = v2[9];
    uint64_t v7 = v2[10];
    sub_100008F88(v2 + 6, v6);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 24))(v43, v6, v7);
    uint64_t v8 = v44;
    uint64_t v9 = v45;
    sub_100008F88(v43, v44);
    double v32 = (*(double (**)(uint64_t, uint64_t))(v9 + 232))(v8, v9);
    uint64_t v10 = static HorizontalAlignment.center.getter();
    sub_1001606E0(v1, (uint64_t *)&v33);
    uint64_t v11 = v34;
    uint64_t v12 = v35;
    uint64_t v13 = v36;
    long long v30 = v33;
    long long v31 = v38;
    uint64_t v14 = v39;
    uint64_t v16 = v40;
    uint64_t v15 = v41;
    long long v28 = v37;
    long long v29 = v42;
    char v46 = 0;
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v43);
    uint64_t v17 = v48;
    uint64_t v18 = v49;
    sub_100008F88(v47, v48);
    double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 320))(v17, v18);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    char v26 = static Edge.Set.all.getter();
    LOBYTE(v33) = 0;
    *(void *)a1 = v10;
    *(double *)(a1 + 8) = v32;
    *(unsigned char *)(a1 + 16) = 0;
    *(_OWORD *)(a1 + 24) = v30;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v13;
    *(_OWORD *)(a1 + 64) = v28;
    *(_OWORD *)(a1 + 80) = v31;
    *(void *)(a1 + 96) = v14;
    *(void *)(a1 + 104) = v16;
    *(void *)(a1 + 112) = v15;
    *(_OWORD *)(a1 + 120) = v29;
    *(unsigned char *)(a1 + 136) = v26;
    *(double *)(a1 + 144) = v19;
    *(void *)(a1 + 152) = v21;
    *(void *)(a1 + 160) = v23;
    *(void *)(a1 + 168) = v25;
    *(unsigned char *)(a1 + 176) = v33;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v47);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100161494((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001606E0@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v28._object = (void *)0x80000001002D0720;
  v6._uint64_t countAndFlagsBits = 0x796669746F4ELL;
  v6._object = (void *)0xE600000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v28._uint64_t countAndFlagsBits = 0xD00000000000005CLL;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v28);

  type metadata accessor for OptionPresentation();
  uint64_t v9 = (Swift::String *)swift_allocObject();
  v9[1] = v8;
  v9[3]._uint64_t countAndFlagsBits = 0;
  v9[3]._object = 0;
  v9[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v9[2]._uint64_t countAndFlagsBits = 0;
  v9[2]._object = 0;
  long long v10 = *a1;
  long long v26 = a1[1];
  long long v27 = v10;
  uint64_t v11 = swift_allocObject();
  long long v12 = a1[1];
  *(_OWORD *)(v11 + 16) = *a1;
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)(v11 + 48) = a1[2];
  *(void *)(v11 + 64) = *((void *)a1 + 6);
  sub_10004ED30((uint64_t)&v27);
  sub_10004ED30((uint64_t)&v26);
  type metadata accessor for UIMetrics();
  sub_100161494((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_retain();
  swift_retain();
  uint64_t v13 = EnvironmentObject.init()();
  uint64_t v24 = v14;
  uint64_t v25 = v13;
  id v15 = [v4 mainBundle];
  v29._uint64_t countAndFlagsBits = 0xD000000000000062;
  v29._object = (void *)0x80000001002D0780;
  v16._uint64_t countAndFlagsBits = 0x20749980E26E6F44;
  v16._object = (void *)0xAE00796669746F4ELL;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v29);

  double v19 = (Swift::String *)swift_allocObject();
  v19[1] = v18;
  v19[3]._uint64_t countAndFlagsBits = 0;
  v19[3]._object = 0;
  v19[4]._uint64_t countAndFlagsBits = static Color.clear.getter();
  v19[2]._uint64_t countAndFlagsBits = 0;
  v19[2]._object = 0;
  uint64_t v20 = swift_allocObject();
  long long v21 = a1[1];
  *(_OWORD *)(v20 + 16) = *a1;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = a1[2];
  *(void *)(v20 + 64) = *((void *)a1 + 6);
  sub_10004ED30((uint64_t)&v27);
  sub_10004ED30((uint64_t)&v26);
  swift_retain();
  swift_retain();
  uint64_t result = EnvironmentObject.init()();
  *a2 = v25;
  a2[1] = v24;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = (uint64_t)v9;
  a2[5] = (uint64_t)sub_100161440;
  a2[6] = v11;
  a2[7] = result;
  a2[8] = v23;
  a2[10] = 0;
  a2[11] = 0;
  a2[9] = (uint64_t)v19;
  a2[12] = (uint64_t)sub_10016146C;
  a2[13] = v20;
  return result;
}

uint64_t sub_1001609C4(int a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10000FD84(v3, (uint64_t)qword_1003A9B08);
  Swift::String v8 = *(void (**)(char *))(v4 + 16);
  uint64_t v42 = v7;
  v8(v6);
  long long v46 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  v38[1] = *((void *)v1 + 3);
  long long v10 = (void *)*((void *)v1 + 4);
  float32x4_t v43 = (uint64_t (*)(uint64_t))*((void *)v1 + 5);
  uint64_t v11 = *((void *)v1 + 6);
  sub_10004ED30((uint64_t)&v46);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004ED30((uint64_t)&v46);
  swift_retain();
  swift_retain();
  swift_retain();
  long long v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v12, v13))
  {
    sub_10004F584((uint64_t)&v46);
    swift_release();
    swift_release();
    swift_release();
    sub_10004F584((uint64_t)&v46);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v9) {
      goto LABEL_7;
    }
LABEL_17:
    type metadata accessor for QuestionnaireState();
    sub_100161494(&qword_10037F008, (void (*)(uint64_t))type metadata accessor for QuestionnaireState);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v39 = v3;
  int v40 = a1;
  uint64_t v41 = v11;
  uint64_t v14 = swift_slowAlloc();
  v38[0] = swift_slowAlloc();
  v45[0] = v38[0];
  *(_DWORD *)uint64_t v14 = 136446467;
  if (!v9)
  {
    sub_10004F584((uint64_t)&v46);
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  swift_retain();
  uint64_t v15 = sub_1000C8E54();
  unint64_t v17 = v16;
  swift_release();
  uint64_t v44 = sub_1001B3178(v15, v17, v45);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_10004F584((uint64_t)&v46);
  swift_release();
  swift_release();
  swift_release();
  sub_10004F584((uint64_t)&v46);
  swift_release();
  swift_release();
  swift_release();
  *(_WORD *)(v14 + 12) = 1025;
  LOBYTE(a1) = v40;
  LODWORD(v44) = v40 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%{public}s] QuestionnaireBodyView: notify contacts: %{BOOL,private}d", (uint8_t *)v14, 0x12u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v39);
LABEL_7:
  v45[3] = (uint64_t)&type metadata for Bool;
  LOBYTE(v45[0]) = a1 & 1;
  swift_retain();
  BOOL v18 = sub_1000CF5E8((uint64_t)v10, (uint64_t)v45);
  swift_release();
  sub_100059550((uint64_t)v45);
  if (!v18)
  {
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    double v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v45[0] = v41;
      *(_DWORD *)uint64_t v21 = 136446467;
      swift_retain();
      uint64_t v22 = sub_1000C8E54();
      unint64_t v24 = v23;
      swift_release();
      uint64_t v44 = sub_1001B3178(v22, v24, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v21 + 12) = 2081;
      uint64_t v25 = v10[2];
      unint64_t v26 = v10[3];
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1001B3178(v25, v26, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%{public}s] QuestionnaireBodyView: failed to update data for %{private}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);

      swift_release();
      swift_release();
      swift_release();
    }
  }
  swift_retain();
  char v27 = sub_1000CA784(v10, 0, 4);
  uint64_t v28 = swift_release();
  if ((v27 & 1) == 0)
  {
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004ED30((uint64_t)&v46);
    swift_retain();
    swift_retain();
    swift_retain();
    Swift::String v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v45[0] = v42;
      *(_DWORD *)uint64_t v31 = 136446467;
      swift_retain();
      uint64_t v32 = sub_1000C8E54();
      unint64_t v34 = v33;
      swift_release();
      uint64_t v44 = sub_1001B3178(v32, v34, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v31 + 12) = 2081;
      uint64_t v35 = v10[2];
      unint64_t v36 = v10[3];
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1001B3178(v35, v36, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%{public}s] QuestionnaireBodyView: failed to record answer for %{private}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);
      swift_release();
      swift_release();
      swift_release();
      sub_10004F584((uint64_t)&v46);

      swift_release();
      swift_release();
      uint64_t v28 = swift_release();
    }
  }
  return v43(v28);
}

uint64_t sub_1001613F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001604A4(a1);
}

uint64_t sub_100161440()
{
  return sub_1001609C4(1);
}

uint64_t sub_10016146C()
{
  return sub_1001609C4(0);
}

uint64_t sub_100161494(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001614EC()
{
  unint64_t result = qword_100389810;
  if (!qword_100389810)
  {
    sub_1000094C4(&qword_100389818);
    sub_100161568();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389810);
  }
  return result;
}

unint64_t sub_100161568()
{
  unint64_t result = qword_100389820;
  if (!qword_100389820)
  {
    sub_1000094C4(&qword_100389828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389820);
  }
  return result;
}

uint64_t destroy for TryOutConnectionDemoView()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s8SOSBuddy24TryOutConnectionDemoViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TryOutConnectionDemoView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TryOutConnectionDemoView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TryOutConnectionDemoView()
{
  return &type metadata for TryOutConnectionDemoView;
}

uint64_t sub_1001616EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100161708()
{
  return swift_release();
}

uint64_t sub_10016193C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (*a1 == 0xD000000000000024 && a1[1] == 0x80000001002D07F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    type metadata accessor for AppEvents();
    sub_100161DFC((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t v3 = EnvironmentObject.init()();
    uint64_t v5 = v4;
    type metadata accessor for ConnectionModel(0);
    sub_100161DFC(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
    uint64_t v6 = EnvironmentObject.init()();
    uint64_t v8 = v7;
    type metadata accessor for EmergencyModel();
    sub_100161DFC(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
    uint64_t v9 = EnvironmentObject.init()();
    uint64_t v11 = v10;
    type metadata accessor for UIMetrics();
    sub_100161DFC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.init()();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t result = 0;
    uint64_t v13 = 0;
    uint64_t v3 = 1;
  }
  *a2 = v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v8;
  a2[4] = v9;
  a2[5] = v11;
  a2[6] = result;
  a2[7] = v13;
  return result;
}

uint64_t sub_100161B2C()
{
  return NavigationStack.init<>(path:root:)();
}

uint64_t sub_100161CD8()
{
  return sub_100161708();
}

unint64_t sub_100161CE0()
{
  unint64_t result = qword_100389840;
  if (!qword_100389840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389840);
  }
  return result;
}

unint64_t sub_100161D34()
{
  unint64_t result = qword_100389848;
  if (!qword_100389848)
  {
    sub_1000094C4(&qword_100389838);
    sub_100161DA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389848);
  }
  return result;
}

unint64_t sub_100161DA8()
{
  unint64_t result = qword_100389850;
  if (!qword_100389850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389850);
  }
  return result;
}

uint64_t sub_100161DFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100161E44()
{
  return sub_100009B18(&qword_100389858, &qword_100389860);
}

uint64_t destroy for ActiveTransitionAlertView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActiveTransitionAlertView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ActiveTransitionAlertView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActiveTransitionAlertView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActiveTransitionAlertView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActiveTransitionAlertView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveTransitionAlertView()
{
  return &type metadata for ActiveTransitionAlertView;
}

uint64_t sub_100162190()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_1001621B0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  type metadata accessor for UIMetrics();
  sub_100163DBC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v10 = EnvironmentObject.init()();
  uint64_t v12 = v11;
  type metadata accessor for CGSize(0);
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  __n128 result = v20;
  *(void *)a8 = v10;
  *(void *)(a8 + 8) = v12;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = a3;
  *(void *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = a5;
  *(void *)(a8 + 56) = a6;
  *(unsigned char *)(a8 + 64) = a7;
  *(_DWORD *)(a8 + 65) = v20.n128_u32[0];
  *(_DWORD *)(a8 + 68) = *(unsigned __int32 *)((char *)v20.n128_u32 + 3);
  *(__n128 *)(a8 + 72) = v20;
  *(void *)(a8 + 88) = v21;
  *(unsigned char *)(a8 + 96) = v20.n128_u8[0];
  *(_DWORD *)(a8 + 100) = 0;
  *(_DWORD *)(a8 + 97) = 0;
  *(void *)(a8 + 104) = v20.n128_u64[1];
  *(__n128 *)(a8 + 112) = v20;
  *(void *)(a8 + 128) = v21;
  *(__n128 *)(a8 + 136) = v20;
  *(void *)(a8 + 152) = v21;
  *(__n128 *)(a8 + 160) = v20;
  *(void *)(a8 + 176) = v21;
  return result;
}

uint64_t sub_100162374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    sub_100008F88(v4 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v24, v5, v6);
    sub_1000090FC((uint64_t)v24, (uint64_t)v23);
    uint64_t v7 = swift_allocObject();
    long long v8 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v7 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v7 + 64) = v8;
    *(_OWORD *)(v7 + 80) = *(_OWORD *)(v2 + 64);
    *(void *)(v7 + 96) = *(void *)(v2 + 80);
    long long v9 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v7 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v7 + 32) = v9;
    sub_100009164(v23, v7 + 104);
    sub_1000090FC((uint64_t)v24, (uint64_t)v22);
    uint64_t v10 = swift_allocObject();
    sub_100009164(v22, v10 + 16);
    long long v11 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v10 + 104) = v11;
    *(_OWORD *)(v10 + 120) = *(_OWORD *)(v2 + 64);
    *(void *)(v10 + 136) = *(void *)(v2 + 80);
    long long v12 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v10 + 56) = *(_OWORD *)v2;
    *(_OWORD *)(v10 + 72) = v12;
    sub_100163CE0(v2);
    sub_100163CE0(v2);
    sub_1001621B0((uint64_t)ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, (uint64_t)sub_100163C60, v7, (uint64_t)sub_100163CD4, v10, 1, (uint64_t)v25);
    uint64_t result = _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v24);
    long long v14 = v25[9];
    long long v15 = v25[10];
    long long v16 = v25[7];
    *(_OWORD *)(a1 + 128) = v25[8];
    *(_OWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 160) = v15;
    long long v17 = v25[5];
    long long v18 = v25[6];
    long long v19 = v25[3];
    *(_OWORD *)(a1 + 64) = v25[4];
    *(_OWORD *)(a1 + 80) = v17;
    *(_OWORD *)(a1 + 96) = v18;
    *(_OWORD *)(a1 + 112) = v16;
    long long v20 = v25[1];
    long long v21 = v25[2];
    *(_OWORD *)a1 = v25[0];
    *(_OWORD *)(a1 + 16) = v20;
    *(void *)(a1 + 176) = v26;
    *(_OWORD *)(a1 + 32) = v21;
    *(_OWORD *)(a1 + 48) = v19;
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100163DBC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10016258C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v5 = sub_100004010(&qword_1003898B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_1003898B8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004010(&qword_1003898C0);
  __chkstk_darwin(v63);
  long long v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004010(&qword_1003898C8);
  __chkstk_darwin(v64);
  long long v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v15 = sub_100004010(&qword_1003898D0);
  sub_100162AB8(a1, a2, (uint64_t)&v7[*(int *)(v15 + 44)]);
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    id v17 = *(id *)(v16 + 112);
    char v18 = static UIContentSizeCategory.>= infix(_:_:)();

    double v19 = 0.0;
    if ((v18 & 1) == 0)
    {
      float32x4_t v62 = v10;
      long long v20 = v12;
      long long v21 = v14;
      uint64_t v22 = v8;
      uint64_t v23 = a2[3];
      uint64_t v24 = a2[4];
      sub_100008F88(a2, v23);
      uint64_t v25 = *(double (**)(uint64_t, uint64_t))(v24 + 120);
      uint64_t v26 = v24;
      uint64_t v8 = v22;
      long long v14 = v21;
      long long v12 = v20;
      uint64_t v10 = v62;
      double v19 = v25(v23, v26);
    }
    id v27 = *(id *)(v16 + 112);
    char v28 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v28)
    {
      double v29 = INFINITY;
    }
    else
    {
      uint64_t v30 = a2[3];
      uint64_t v31 = a2[4];
      sub_100008F88(a2, v30);
      double v29 = (*(double (**)(uint64_t, uint64_t))(v31 + 120))(v30, v31);
    }
    static Alignment.center.getter();
    if (v19 > v29)
    {
      static os_log_type_t.fault.getter();
      uint64_t v32 = v8;
      unint64_t v33 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();

      uint64_t v8 = v32;
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10000D2A0((uint64_t)v7, (uint64_t)v10, &qword_1003898B0);
    unint64_t v34 = &v10[*(int *)(v8 + 36)];
    long long v35 = v71;
    *((_OWORD *)v34 + 4) = v70;
    *((_OWORD *)v34 + 5) = v35;
    *((_OWORD *)v34 + 6) = v72;
    long long v36 = v67;
    *(_OWORD *)unint64_t v34 = v66;
    *((_OWORD *)v34 + 1) = v36;
    long long v37 = v69;
    *((_OWORD *)v34 + 2) = v68;
    *((_OWORD *)v34 + 3) = v37;
    sub_10000950C((uint64_t)v7, &qword_1003898B0);
    char v38 = static Edge.Set.top.getter();
    uint64_t v39 = a2[3];
    uint64_t v40 = a2[4];
    sub_100008F88(a2, v39);
    (*(void (**)(uint64_t, uint64_t))(v40 + 128))(v39, v40);
    EdgeInsets.init(_all:)();
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    sub_10000D2A0((uint64_t)v10, (uint64_t)v12, &qword_1003898B8);
    uint64_t v49 = &v12[*(int *)(v63 + 36)];
    *uint64_t v49 = v38;
    *((void *)v49 + 1) = v42;
    *((void *)v49 + 2) = v44;
    *((void *)v49 + 3) = v46;
    *((void *)v49 + 4) = v48;
    v49[40] = 0;
    sub_10000950C((uint64_t)v10, &qword_1003898B8);
    uint64_t v50 = a2[3];
    uint64_t v51 = a2[4];
    sub_100008F88(a2, v50);
    double v52 = (*(double (**)(uint64_t, uint64_t))(v51 + 24))(v50, v51);
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    LOBYTE(v50) = static Edge.Set.all.getter();
    sub_10000D2A0((uint64_t)v12, (uint64_t)v14, &qword_1003898C0);
    simd_float4 v59 = &v14[*(int *)(v64 + 36)];
    *simd_float4 v59 = v50;
    *((double *)v59 + 1) = v52;
    *((void *)v59 + 2) = v54;
    *((void *)v59 + 3) = v56;
    *((void *)v59 + 4) = v58;
    v59[40] = 0;
    sub_10000950C((uint64_t)v12, &qword_1003898C0);
    return sub_10000D544((uint64_t)v14, v65, &qword_1003898C8);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100163DBC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100162AB8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v112 = a3;
  uint64_t v107 = type metadata accessor for AccessibilityTraits();
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v102 = &v99[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100004010(&qword_1003898D8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v111 = &v99[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v106 = &v99[-v10];
  __chkstk_darwin(v9);
  uint64_t v113 = &v99[-v11];
  uint64_t v12 = a1;
  uint64_t v109 = a1;
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(v12 + 72);
  *(void *)&long long v103 = *(void *)(v12 + 64);
  *((void *)&v103 + 1) = v15;
  *(void *)&v134[0] = v13;
  *((void *)&v134[0] + 1) = v14;
  unint64_t v16 = sub_100033310();
  swift_bridgeObjectRetain();
  unint64_t v104 = v16;
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = a2[3];
  uint64_t v23 = a2[4];
  sub_100008F88(a2, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 64))(v22, v23);
  uint64_t v24 = Text.font(_:)();
  uint64_t v26 = v25;
  char v28 = v27;
  UIContentSizeCategory v108 = v29;
  swift_release();
  sub_100033364(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v30 = a2[3];
  uint64_t v31 = a2[4];
  uint64_t v110 = a2;
  sub_100008F88(a2, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 56))(v30, v31);
  uint64_t v32 = Text.foregroundColor(_:)();
  uint64_t v34 = v33;
  int v100 = v35;
  uint64_t v101 = v36;
  swift_release();
  sub_100033364(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v109 + 16);
  if (v37)
  {
    id v38 = *(id *)(v37 + 112);
    char v39 = static UIContentSizeCategory.>= infix(_:_:)();

    BOOL v40 = (v39 & 1) == 0;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v109 = v37;
    id v42 = *(id *)(v37 + 112);
    static Alignment.center.getter();
    UIContentSizeCategory v108 = UIContentSizeCategoryAccessibilityExtraLarge;
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v145 = v32;
    uint64_t v146 = v34;
    char v43 = v100 & 1;
    char v147 = v100 & 1;
    uint64_t v148 = v101;
    __int16 v149 = 256;
    uint64_t v150 = KeyPath;
    BOOL v151 = v40;
    sub_1001674E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v136, 0.0, 1, 0.0, 1);
    sub_100033364(v32, v34, v43);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v44 = v110;
    uint64_t v45 = v110[3];
    uint64_t v46 = v110[4];
    sub_100008F88(v110, v45);
    double v47 = (*(double (**)(uint64_t, uint64_t))(v46 + 48))(v45, v46);
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    char v54 = static Edge.Set.all.getter();
    char v132 = 0;
    long long v126 = v136[8];
    long long v127 = v136[9];
    *(void *)&long long v128 = v137;
    long long v122 = v136[4];
    long long v123 = v136[5];
    long long v124 = v136[6];
    long long v125 = v136[7];
    long long v118 = v136[0];
    long long v119 = v136[1];
    long long v120 = v136[2];
    long long v121 = v136[3];
    BYTE8(v128) = v54;
    *(_DWORD *)((char *)&v128 + 9) = *(_DWORD *)v133;
    HIDWORD(v128) = *(_DWORD *)&v133[3];
    *(double *)&long long v129 = v47;
    *((void *)&v129 + 1) = v49;
    *(void *)&long long v130 = v51;
    *((void *)&v130 + 1) = v53;
    char v131 = 0;
    uint64_t v55 = v102;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_1003898E0);
    sub_100163E48(&qword_1003898E8, &qword_1003898E0, (void (*)(void))sub_100163E18);
    uint64_t v56 = (uint64_t)v106;
    View.accessibility(addTraits:)();
    (*(void (**)(unsigned char *, uint64_t))(v105 + 8))(v55, v107);
    v134[10] = v128;
    v134[11] = v129;
    v134[12] = v130;
    char v135 = v131;
    v134[6] = v124;
    v134[7] = v125;
    v134[8] = v126;
    v134[9] = v127;
    v134[2] = v120;
    v134[3] = v121;
    v134[4] = v122;
    v134[5] = v123;
    v134[0] = v118;
    v134[1] = v119;
    sub_10016402C((uint64_t)v134);
    sub_10000D544(v56, (uint64_t)v113, &qword_1003898D8);
    long long v118 = v103;
    swift_bridgeObjectRetain();
    uint64_t v57 = Text.init<A>(_:)();
    uint64_t v59 = v58;
    char v61 = v60 & 1;
    uint64_t v62 = v44[3];
    uint64_t v63 = v44[4];
    sub_100008F88(v44, v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 88))(v62, v63);
    uint64_t v64 = Text.font(_:)();
    uint64_t v66 = v65;
    char v68 = v67;
    uint64_t v107 = v69;
    swift_release();
    sub_100033364(v57, v59, v61);
    swift_bridgeObjectRelease();
    uint64_t v70 = v44[3];
    uint64_t v71 = v44[4];
    sub_100008F88(v44, v70);
    (*(void (**)(uint64_t, uint64_t))(v71 + 56))(v70, v71);
    uint64_t v72 = Text.foregroundColor(_:)();
    uint64_t v74 = v73;
    LODWORD(v110) = v75;
    uint64_t v77 = v76;
    swift_release();
    sub_100033364(v64, v66, v68 & 1);
    swift_bridgeObjectRelease();
    uint64_t v78 = v109;
    id v79 = *(id *)(v109 + 112);
    char v80 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v81 = swift_getKeyPath();
    id v82 = *(id *)(v78 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    char v83 = v110 & 1;
    uint64_t v138 = v72;
    uint64_t v139 = v74;
    char v140 = v110 & 1;
    uint64_t v141 = v77;
    __int16 v142 = 256;
    uint64_t v143 = v81;
    BOOL v144 = (v80 & 1) == 0;
    sub_1001674E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v118, 0.0, 1, 0.0, 1);
    sub_100033364(v72, v74, v83);
    swift_release();
    swift_bridgeObjectRelease();
    long long v84 = v113;
    float32x4_t v85 = v111;
    sub_10000D2A0((uint64_t)v113, (uint64_t)v111, &qword_1003898D8);
    uint64_t v86 = v112;
    sub_10000D2A0((uint64_t)v85, v112, &qword_1003898D8);
    uint64_t v87 = *(int *)(sub_100004010(&qword_100389920) + 48);
    long long v88 = v127;
    v114[8] = v126;
    v114[9] = v127;
    long long v89 = v122;
    long long v90 = v123;
    v114[4] = v122;
    v114[5] = v123;
    long long v92 = v124;
    long long v91 = v125;
    v114[6] = v124;
    v114[7] = v125;
    long long v93 = v118;
    long long v94 = v119;
    v114[0] = v118;
    v114[1] = v119;
    long long v96 = v120;
    long long v95 = v121;
    v114[2] = v120;
    v114[3] = v121;
    uint64_t v97 = v86 + v87;
    *(_OWORD *)(v97 + 128) = v126;
    *(_OWORD *)(v97 + 144) = v88;
    *(_OWORD *)(v97 + 64) = v89;
    *(_OWORD *)(v97 + 80) = v90;
    *(_OWORD *)(v97 + 96) = v92;
    *(_OWORD *)(v97 + 112) = v91;
    *(_OWORD *)uint64_t v97 = v93;
    *(_OWORD *)(v97 + 16) = v94;
    uint64_t v115 = v128;
    *(void *)(v97 + 160) = v128;
    *(_OWORD *)(v97 + 32) = v96;
    *(_OWORD *)(v97 + 48) = v95;
    sub_100163FD8((uint64_t)v114);
    sub_10000950C((uint64_t)v84, &qword_1003898D8);
    v116[8] = v126;
    v116[9] = v127;
    uint64_t v117 = v128;
    v116[4] = v122;
    v116[5] = v123;
    v116[6] = v124;
    v116[7] = v125;
    v116[0] = v118;
    v116[1] = v119;
    v116[2] = v120;
    _OWORD v116[3] = v121;
    sub_10016402C((uint64_t)v116);
    return sub_10000950C((uint64_t)v85, &qword_1003898D8);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100163DBC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001633E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v5 = sub_100004010(&qword_100389868);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (double *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004010(&qword_100389870);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100389878);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_100008F88(a1, v16);
  double v18 = (*(double (**)(uint64_t, uint64_t))(v17 + 232))(v16, v17);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  v7[1] = v18;
  *((unsigned char *)v7 + 16) = 0;
  uint64_t v19 = sub_100004010(&qword_100389880);
  sub_1001636EC(a2, (char *)v7 + *(int *)(v19 + 44));
  LOBYTE(v16) = static Edge.Set.top.getter();
  sub_10000D2A0((uint64_t)v7, (uint64_t)v11, &qword_100389868);
  char v20 = &v11[*(int *)(v9 + 44)];
  *char v20 = v16;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  v20[40] = 1;
  sub_10000950C((uint64_t)v7, &qword_100389868);
  LOBYTE(v16) = static Edge.Set.bottom.getter();
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  sub_100008F88(a1, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 112))(v21, v22);
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_10000D2A0((uint64_t)v11, (uint64_t)v15, &qword_100389870);
  uint64_t v31 = &v15[*(int *)(v13 + 44)];
  *uint64_t v31 = v16;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10000950C((uint64_t)v11, &qword_100389870);
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  sub_100008F88(a1, v32);
  double v34 = (*(double (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  LOBYTE(v32) = static Edge.Set.all.getter();
  uint64_t v41 = v45;
  sub_10000D2A0((uint64_t)v15, v45, &qword_100389878);
  uint64_t v42 = v41 + *(int *)(sub_100004010(&qword_100389888) + 36);
  *(unsigned char *)uint64_t v42 = v32;
  *(double *)(v42 + 8) = v34;
  *(void *)(v42 + 16) = v36;
  *(void *)(v42 + 24) = v38;
  *(void *)(v42 + 32) = v40;
  *(unsigned char *)(v42 + 40) = 0;
  return sub_10000950C((uint64_t)v15, &qword_100389878);
}

uint64_t sub_1001636EC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_100004010(&qword_100389890);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v33 = *(void *)(a1 + 80);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100389898);
  sub_100009B18(&qword_1003898A0, &qword_100389898);
  sub_100145970();
  ForEach<>.init(_:id:content:)();
  id v9 = [self mainBundle];
  v34._object = (void *)0x80000001002D0820;
  v10._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v10._object = (void *)0xE600000000000000;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v34);
  object = v12._object;
  uint64_t countAndFlagsBits = v12._countAndFlagsBits;

  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v13 + 96) = *(void *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 32) = v15;
  sub_100163CE0(a1);
  type metadata accessor for UIMetrics();
  sub_100163DBC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v16 = EnvironmentObject.init()();
  uint64_t v18 = v17;
  uint64_t v19 = v4;
  char v20 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v21 = v31;
  uint64_t v22 = v8;
  v20(v31, v8, v3);
  uint64_t v23 = v32;
  v20(v32, v21, v3);
  uint64_t v24 = &v23[*(int *)(sub_100004010(&qword_1003898A8) + 48)];
  *(void *)uint64_t v24 = v16;
  *((void *)v24 + 1) = v18;
  uint64_t v25 = object;
  *((void *)v24 + 2) = countAndFlagsBits;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = 0;
  *((void *)v24 + 5) = 0xE000000000000000;
  v24[48] = 0;
  *((void *)v24 + 7) = sub_100163DB4;
  *((void *)v24 + 8) = v13;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v26(v22, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v26)(v21, v3);
}

uint64_t sub_100163A68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  type metadata accessor for UIMetrics();
  sub_100163DBC((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = EnvironmentObject.init()();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0xE000000000000000;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v5;
  return result;
}

uint64_t sub_100163B0C(void *a1)
{
  if (*a1)
  {
    uint64_t v1 = a1[4];
    unint64_t v2 = a1[5];
    swift_retain();
    sub_1001C92CC(v1, v2);
    return swift_release();
  }
  else
  {
    type metadata accessor for TransitionAlertModel();
    sub_100163DBC((unint64_t *)&unk_100380B60, (void (*)(uint64_t))type metadata accessor for TransitionAlertModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100163BAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100162374(a1);
}

uint64_t sub_100163BF8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 104);

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100163C60@<X0>(uint64_t a1@<X8>)
{
  return sub_10016258C(v1 + 16, (void *)(v1 + 104), a1);
}

uint64_t sub_100163C6C()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100163CD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001633E4((void *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_100163CE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100163D54()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100163DB4()
{
  return sub_100163B0C((void *)(v0 + 16));
}

uint64_t sub_100163DBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100163E18()
{
  return sub_100163E48(&qword_1003898F0, &qword_1003898F8, (void (*)(void))sub_100163EC4);
}

uint64_t sub_100163E48(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100163EC4()
{
  unint64_t result = qword_100389900;
  if (!qword_100389900)
  {
    sub_1000094C4(&qword_100389908);
    sub_100163F64();
    sub_100009B18(&qword_1003809C0, &qword_1003809C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389900);
  }
  return result;
}

unint64_t sub_100163F64()
{
  unint64_t result = qword_100389910;
  if (!qword_100389910)
  {
    sub_1000094C4(&qword_100389918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389910);
  }
  return result;
}

uint64_t sub_100163FD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016402C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100164080()
{
  return sub_100009B18(&qword_100389928, &qword_100389930);
}

uint64_t sub_1001640BC()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)NSUserDefaults) init];
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = 0xD000000000000010;
  *(void *)(v0 + 40) = 0x80000001002D0870;
  *(unsigned char *)(v0 + 48) = 2;
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = 0xD000000000000012;
  *(void *)(v0 + 72) = 0x80000001002D05F0;
  *(unsigned char *)(v0 + 80) = 2;
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = 0xD000000000000021;
  *(void *)(v0 + 104) = 0x80000001002D0890;
  *(unsigned char *)(v0 + 112) = 2;
  uint64_t v3 = qword_10037DD80;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    type metadata accessor for SOSBuddyPersistence();
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] init", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_100164310()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for SOSBuddyPersistence();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }

  uint64_t v8 = *(void **)(v1 + 24);
  swift_bridgeObjectRelease();

  uint64_t v9 = *(void **)(v1 + 56);
  swift_bridgeObjectRelease();

  unint64_t v10 = *(void **)(v1 + 88);
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_100164510()
{
  sub_100164310();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SOSBuddyPersistence()
{
  return self;
}

uint64_t sub_100164568()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_100164610(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 24) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  uint64_t v12 = (char *)*a2;
  *a1 = *a2;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    a1 = (void **)&v12[(v8 & 0xF8 ^ 0x1F8) & (v8 + 16)];
    swift_retain();
  }
  else
  {
    long long v15 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *long long v15 = *v16;
    v15[1] = v16[1];
    uint64_t v17 = (void *)(((unint64_t)v15 + v8 + 16) & ~v8);
    uint64_t v18 = (const void *)(((unint64_t)v16 + v8 + 16) & ~v8);
    uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    char v20 = v12;
    swift_bridgeObjectRetain();
    if (v19(v18, 1, v4))
    {
      memcpy(v17, v18, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v17, v18, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1001647B0(id *a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)a1 + 15;

  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v5;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

void **sub_10016488C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (void *)(((unint64_t)v5 + v9 + 16) & ~v9);
  int v11 = (const void *)(((unint64_t)v6 + v9 + 16) & ~v9);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  id v13 = v4;
  swift_bridgeObjectRetain();
  if (v12(v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v14 = *(void *)(v8 + 64);
    }
    else {
      size_t v14 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
  }
  return a1;
}

void **sub_1001649D8(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  uint64_t v5 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  unint64_t v8 = (unint64_t)a1 + 15;
  id v9 = v5;

  unint64_t v10 = (void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFF8;
  *unint64_t v10 = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  v10[1] = *(void *)((v6 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  long long v15 = (void *)(((unint64_t)v10 + v14 + 16) & ~v14);
  uint64_t v16 = (void *)((v14 + 16 + v11) & ~v14);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v11) = v17(v15, 1, v12);
  int v18 = v17(v16, 1, v12);
  if (v11)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v15, v16, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
      return a1;
    }
    int v19 = *(_DWORD *)(v13 + 84);
    size_t v20 = *(void *)(v13 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v15, v16, v12);
      return a1;
    }
    uint64_t v22 = *(void (**)(void *, uint64_t))(v13 + 8);
    uint64_t v21 = v13 + 8;
    v22(v15, v12);
    int v19 = *(_DWORD *)(v21 + 76);
    size_t v20 = *(void *)(v21 + 56);
  }
  if (v19) {
    size_t v23 = v20;
  }
  else {
    size_t v23 = v20 + 1;
  }
  memcpy(v15, v16, v23);
  return a1;
}

void *sub_100164B90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  id v9 = (void *)(((unint64_t)v4 + v8 + 16) & ~v8);
  unint64_t v10 = (const void *)(((unint64_t)v5 + v8 + 16) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void **sub_100164CC0(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  uint64_t v6 = *a1;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;

  v7 &= 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v5 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v7 + 8) = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)((v11 + 16 + v7) & ~v11);
  uint64_t v13 = (void *)((v11 + 16 + v8) & ~v11);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v8) = v14(v12, 1, v9);
  int v15 = v14(v13, 1, v9);
  if (v8)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v12, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      return a1;
    }
    int v16 = *(_DWORD *)(v10 + 84);
    size_t v17 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v12, v13, v9);
      return a1;
    }
    int v19 = *(void (**)(void *, uint64_t))(v10 + 8);
    uint64_t v18 = v10 + 8;
    v19(v12, v9);
    int v16 = *(_DWORD *)(v18 + 76);
    size_t v17 = *(void *)(v18 + 56);
  }
  if (v16) {
    size_t v20 = v17;
  }
  else {
    size_t v20 = v17 + 1;
  }
  memcpy(v12, v13, v20);
  return a1;
}

uint64_t sub_100164E6C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 24) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v8
                                                                     + 16) & ~v8);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v17 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v17) = -1;
        }
        return (v17 + 1);
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_100165050(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 24) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x100165364);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if ((v9 & 0x80000000) != 0)
        {
          uint64_t v21 = (unsigned char *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v25 = a2 + 1;
            uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v27 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11;
            v26(v27, v25);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(v21, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)uint64_t v21 = v23;
                  break;
                case 3:
                  *(_WORD *)uint64_t v21 = v23;
                  v21[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v21 = v23;
                  break;
                default:
                  *uint64_t v21 = v23;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v20 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v20 = a2 - 1;
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StoredValue()
{
  return sub_100006BAC();
}

id ConnectionAssistantRenderer.Buffers.Buffer.init(device:)(void *a1, uint64_t a2)
{
  id v2 = [a1 newBufferWithLength:*(void *)(*(void *)(a2 - 8) + 64) options:1];
  if (!v2)
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return v2;
}

uint64_t *ConnectionAssistantRenderer.Buffers.texCoords.unsafeMutableAddressor()
{
  if (qword_10037DE50 != -1) {
    swift_once();
  }
  return &static ConnectionAssistantRenderer.Buffers.texCoords;
}

uint64_t ConnectionAssistantRenderer.Buffers.Buffer.contents.setter(uint64_t a1, void *a2, uint64_t a3)
{
  swift_unknownObjectRetain();
  id v6 = [a2 contents];
  id v7 = a2;
  int v8 = *(uint64_t (**)(id, uint64_t, uint64_t))(*(void *)(a3 - 8) + 40);

  return v8(v6, a1, a3);
}

uint64_t ConnectionAssistantRenderer.Buffers.rectVerticesBuffer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ConnectionAssistantRenderer.Buffers.Buffer.contents.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = [(id)swift_unknownObjectRetain() contents];
  id v7 = a1;
  int v8 = *(uint64_t (**)(uint64_t, id, uint64_t))(*(void *)(a2 - 8) + 16);

  return v8(a3, v6, a2);
}

void (*ConnectionAssistantRenderer.Buffers.Buffer.contents.modify(void *a1, void *a2, uint64_t a3))(uint64_t *a1, char a2)
{
  id v6 = malloc(0x28uLL);
  *a1 = v6;
  *id v6 = a2;
  v6[1] = a3;
  uint64_t v7 = *(void *)(a3 - 8);
  v6[2] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v6[3] = malloc(v8);
  unsigned int v9 = malloc(v8);
  v6[4] = v9;
  ConnectionAssistantRenderer.Buffers.Buffer.contents.getter(a2, a3, (uint64_t)v9);
  return sub_100165694;
}

void sub_100165694(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void **)(*a1 + 24);
  uint64_t v4 = *(void **)(*a1 + 32);
  if (a2)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    uint64_t v6 = *(void *)(v2 + 16);
    uint64_t v7 = *(void **)v2;
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*a1 + 24), v4, v5);
    ConnectionAssistantRenderer.Buffers.Buffer.contents.setter((uint64_t)v3, v7, v5);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    ConnectionAssistantRenderer.Buffers.Buffer.contents.setter(*(void *)(*a1 + 32), *(void **)v2, *(void *)(v2 + 8));
  }
  free(v4);
  free(v3);

  free((void *)v2);
}

uint64_t ConnectionAssistantRenderer.Buffers.vertexUniformsBuffer.getter()
{
  return swift_unknownObjectRetain();
}

double sub_100165758()
{
  static ConnectionAssistantRenderer.Buffers.texCoords = 0;
  qword_1003A9BC0 = 1065353216;
  qword_1003A9BC8 = 0x3F80000000000000;
  __asm { FMOV            V0.2S, #1.0 }
  qword_1003A9BD0 = *(void *)&result;
  return result;
}

double static ConnectionAssistantRenderer.Buffers.texCoords.getter()
{
  if (qword_10037DE50 != -1) {
    swift_once();
  }
  return *(double *)&static ConnectionAssistantRenderer.Buffers.texCoords;
}

uint64_t ConnectionAssistantRenderer.Buffers.__allocating_init(device:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ConnectionAssistantRenderer.Buffers.init(device:)(a1);
  return v2;
}

void *ConnectionAssistantRenderer.Buffers.init(device:)(id a1)
{
  v1[2] = 4;
  if (qword_10037DE50 != -1) {
    swift_once();
  }
  __asm { FMOV            V0.2S, #-1.0 }
  v13[0] = _D0;
  v13[1] = qword_1003A9BC8;
  v13[2] = 0xBF8000003F800000;
  v13[3] = qword_1003A9BD0;
  v13[4] = 0x3F800000BF800000;
  v13[5] = static ConnectionAssistantRenderer.Buffers.texCoords;
  __asm { FMOV            V0.2S, #1.0 }
  v13[6] = _D0;
  v13[7] = qword_1003A9BC0;
  id v9 = [a1 newBufferWithBytes:v13 length:64 options:1];
  if (!v9)
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
LABEL_8:
    swift_unknownObjectRelease();
    type metadata accessor for ConnectionAssistantRenderer.Buffers();
    swift_deallocPartialClassInstance();
    return v1;
  }
  v1[3] = v9;
  id v10 = [a1 newBufferWithLength:80 options:1];
  if (!v10)
  {
    sub_100023B64();
    swift_allocError();
    swift_willThrow();
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  id v11 = v10;
  swift_unknownObjectRelease();
  v1[4] = v11;
  return v1;
}

uint64_t type metadata accessor for ConnectionAssistantRenderer.Buffers()
{
  return self;
}

uint64_t ConnectionAssistantRenderer.Buffers.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ConnectionAssistantRenderer.Buffers.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_100165A40()
{
  unint64_t result = qword_100389AB8;
  if (!qword_100389AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389AB8);
  }
  return result;
}

unsigned char *_s7BuffersC5ErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100165B30);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRenderer.Buffers.Error()
{
  return &type metadata for ConnectionAssistantRenderer.Buffers.Error;
}

uint64_t type metadata accessor for ConnectionAssistantRenderer.Buffers.Buffer()
{
  return sub_100006BAC();
}

ValueMetadata *type metadata accessor for ConnectionAssistantLockScreenView()
{
  return &type metadata for ConnectionAssistantLockScreenView;
}

uint64_t sub_100165B90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100165BAC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_100169C98((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_100169CF4((uint64_t)v39);
  sub_10003E68C((uint64_t)&v38);
  return sub_10004ED30((uint64_t)&v34);
}

double sub_100165D88@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100380A10, &qword_100380A18).n128_u64[0];
  return result;
}

uint64_t sub_100165DE4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v25 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_retain();
}

uint64_t sub_100165FA0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_100033724(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100166194@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  *a9 = *v13;
  a9[1] = v24;
  *(_OWORD *)((char *)a9 + 27) = *(_OWORD *)((char *)v13 + 27);
  a9[7] = v30;
  a9[8] = v31;
  a9[9] = v32;
  a9[3] = v26;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;

  return sub_100065070((uint64_t)v13);
}

uint64_t sub_10016634C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v24;
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  long long v25 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v25;
  long long v26 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  *(_OWORD *)(a9 + 200) = v32;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 152) = v29;
  *(_OWORD *)(a9 + 168) = v30;
  *(unsigned char *)(a9 + 144) = *(unsigned char *)(v13 + 144);
  *(_OWORD *)(a9 + 184) = v31;

  return sub_100169E1C(v13);
}

uint64_t sub_100166530@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 176);
  *(_OWORD *)(a9 + 160) = *(_OWORD *)(v13 + 160);
  *(_OWORD *)(a9 + 176) = v24;
  long long v25 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v25;
  long long v26 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v26;
  long long v27 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v27;
  long long v28 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v28;
  long long v29 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 248) = v34;
  *(_OWORD *)(a9 + 264) = v35;
  *(_OWORD *)(a9 + 280) = v36;
  *(_OWORD *)(a9 + 296) = v37;
  *(_OWORD *)(a9 + 200) = v31;
  *(_OWORD *)(a9 + 216) = v32;
  *(unsigned char *)(a9 + 192) = *(unsigned char *)(v13 + 192);
  *(_OWORD *)(a9 + 232) = v33;

  return sub_100169D28(v13);
}

uint64_t sub_10016671C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18)
{
  __int16 v19 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    __int16 v19 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = a17;
  *(unsigned char *)(a9 + 16) = v19 & 1;
  *(unsigned char *)(a9 + 17) = HIBYTE(v19) & 1;
  *(_OWORD *)(a9 + 56) = v32;

  return swift_retain();
}

double sub_100166904@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100382098, &qword_1003820A0).n128_u64[0];
  return result;
}

__n128 sub_100166960@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  __int16 v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    __int16 v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10000D2A0(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(sub_100004010(v19) + 36));
  v29[4] = v35;
  _OWORD v29[5] = v36;
  v29[6] = v37;
  *long long v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_100166B30@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1003821D8, &qword_1003821E0).n128_u64[0];
  return result;
}

double sub_100166B8C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12, char a13, double a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a13) {
    a12 = a7;
  }
  if (a15) {
    a14 = a12;
  }
  if (a7 > a12 || a12 > a14)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v29 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(double *)a9 = a10;
  *(double *)(a9 + 16) = a11;
  *(_OWORD *)(a9 + 72) = v34;
  *(_OWORD *)(a9 + 88) = v35;
  *(_OWORD *)(a9 + 104) = v36;
  *(_OWORD *)(a9 + 120) = v37;
  double result = *(double *)&v31;
  *(_OWORD *)(a9 + 24) = v31;
  *(void *)(a9 + 8) = a18;
  *(_OWORD *)(a9 + 40) = v32;
  *(_OWORD *)(a9 + 56) = v33;
  return result;
}

uint64_t sub_100166D4C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  BOOL v14 = v13;
  uint64_t v15 = a9;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v24 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v15 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  memcpy((void *)v15, v14, 0x412uLL);
  *(_OWORD *)(v15 + 1112) = v31;
  *(_OWORD *)(v15 + 1128) = v32;
  *(_OWORD *)(v15 + 1144) = v33;
  *(_OWORD *)(v15 + 1048) = v27;
  *(_OWORD *)(v15 + 1064) = v28;
  *(_OWORD *)(v15 + 1080) = v29;
  *(_OWORD *)(v15 + 1096) = v30;

  return sub_1000DDAAC((uint64_t)v14);
}

double sub_100166F10@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100387A18, &qword_100387A20).n128_u64[0];
  return result;
}

uint64_t sub_100166F6C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  BOOL v14 = v13;
  uint64_t v15 = a9;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v24 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v15 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  memcpy((void *)v15, v14, 0x191uLL);
  *(_OWORD *)(v15 + 472) = v31;
  *(_OWORD *)(v15 + 488) = v32;
  *(_OWORD *)(v15 + 504) = v33;
  *(_OWORD *)(v15 + 408) = v27;
  *(_OWORD *)(v15 + 424) = v28;
  *(_OWORD *)(v15 + 440) = v29;
  *(_OWORD *)(v15 + 456) = v30;

  return sub_10016A14C((uint64_t)v14);
}

uint64_t sub_100167130@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(unsigned char *)(a9 + 64) = *(unsigned char *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;

  return sub_100169DC0(v13);
}

__n128 sub_1001672FC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_100004010(&qword_100388718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  long long v25 = (_OWORD *)(a9 + *(int *)(sub_100004010(&qword_100388720) + 36));
  v25[4] = v31;
  void v25[5] = v32;
  v25[6] = v33;
  *long long v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_1001674E8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 104) = v29;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 56) = v26;
  *(_OWORD *)(a9 + 72) = v27;
  *(unsigned char *)(a9 + 48) = *(unsigned char *)(v13 + 48);
  *(_OWORD *)(a9 + 88) = v28;

  return sub_100163FD8(v13);
}

uint64_t sub_1001676B4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  BOOL v14 = v13;
  uint64_t v15 = a9;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v24 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v15 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  memcpy((void *)v15, v14, 0x231uLL);
  *(_OWORD *)(v15 + 632) = v31;
  *(_OWORD *)(v15 + 648) = v32;
  *(_OWORD *)(v15 + 664) = v33;
  *(_OWORD *)(v15 + 568) = v27;
  *(_OWORD *)(v15 + 584) = v28;
  *(_OWORD *)(v15 + 600) = v29;
  *(_OWORD *)(v15 + 616) = v30;
  return sub_10016961C((uint64_t)v14);
}

uint64_t sub_10016786C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  memcpy(a9, v13, 0x359uLL);
  a9[58] = v29;
  a9[59] = v30;
  a9[60] = v31;
  a9[54] = v25;
  a9[55] = v26;
  a9[56] = v27;
  a9[57] = v28;

  return sub_100169F94((uint64_t)v13);
}

uint64_t sub_100167A28@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  BOOL v14 = v13;
  uint64_t v15 = a9;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v24 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v15 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  memcpy((void *)v15, v14, 0x1D1uLL);
  *(_OWORD *)(v15 + 536) = v31;
  *(_OWORD *)(v15 + 552) = v32;
  *(_OWORD *)(v15 + 568) = v33;
  *(_OWORD *)(v15 + 472) = v27;
  *(_OWORD *)(v15 + 488) = v28;
  *(_OWORD *)(v15 + 504) = v29;
  *(_OWORD *)(v15 + 520) = v30;

  return sub_10016A0A0((uint64_t)v14);
}

uint64_t sub_100167BEC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(void *)(a9 + 80) = *(void *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;
  return sub_100169EB4(v13);
}

uint64_t sub_100167DB4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v24;
  long long v25 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v25;
  long long v26 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  *(_OWORD *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 200) = v33;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 232) = v35;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 152) = v30;
  *(unsigned char *)(a9 + 128) = *(unsigned char *)(v13 + 128);
  *(_OWORD *)(a9 + 168) = v31;
  return sub_100169EB4(v13);
}

double sub_100167F84@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C38, &qword_100389C40).n128_u64[0];
  return result;
}

double sub_100167FE0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C48, &qword_100389C50).n128_u64[0];
  return result;
}

__n128 sub_10016803C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  __n128 result = *(__n128 *)(v13 + 64);
  long long v26 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 128) = v30;
  *(_OWORD *)(a9 + 144) = v31;
  *(_OWORD *)(a9 + 160) = v32;
  *(_OWORD *)(a9 + 176) = v33;
  *(__n128 *)(a9 + 64) = result;
  *(_OWORD *)(a9 + 80) = v27;
  *(_OWORD *)(a9 + 96) = v28;
  *(_OWORD *)(a9 + 112) = v29;
  return result;
}

uint64_t sub_1001681E4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v27 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = a17 & 1;
  *(unsigned char *)(a9 + 9) = a18 & 1;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;

  return swift_retain();
}

double sub_1001683B0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C08, &qword_100389C10).n128_u64[0];
  return result;
}

double sub_10016840C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C18, &qword_100389C20).n128_u64[0];
  return result;
}

double sub_100168468@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C28, &qword_100389C30).n128_u64[0];
  return result;
}

uint64_t sub_1001684C4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[5];
  a9[4] = v13[4];
  a9[5] = v24;
  long long v25 = v13[6];
  long long v26 = v13[1];
  *a9 = *v13;
  a9[1] = v26;
  long long v27 = v13[3];
  a9[2] = v13[2];
  a9[3] = v27;
  a9[6] = v25;
  a9[7] = v29;
  a9[8] = v30;
  a9[9] = v31;
  a9[12] = v34;
  a9[13] = v35;
  a9[10] = v32;
  a9[11] = v33;

  return sub_100169F24((uint64_t)v13);
}

double sub_100168688@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C68, &qword_100389C70).n128_u64[0];
  return result;
}

double sub_1001686E4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100166960(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100389C58, &qword_100389C60).n128_u64[0];
  return result;
}

uint64_t sub_100168740@<X0>(void *a1@<X8>)
{
  long long v36 = a1;
  uint64_t v37 = type metadata accessor for Font.Leading();
  uint64_t v2 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  unsigned int v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v1;
  uint64_t v5 = *(void **)(v1 + 32);
  if (v5)
  {
    uint64_t v6 = v5[9];
    uint64_t v7 = v5[10];
    sub_100008F88(v5 + 6, v6);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v47, v6, v7);
    id v8 = [self mainBundle];
    v49._object = (void *)0x80000001002D0930;
    v9._uint64_t countAndFlagsBits = 0x6E6E6F4320534F53;
    v9._object = (void *)0xEE006E6F69746365;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v49._uint64_t countAndFlagsBits = 0xD000000000000057;
    Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v49);

    *(Swift::String *)uint64_t v46 = v11;
    sub_100033310();
    uint64_t v12 = Text.init<A>(_:)();
    uint64_t v14 = v13;
    char v16 = v15 & 1;
    static Font.footnote.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v17 = v37;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v37);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
    uint64_t v18 = Text.font(_:)();
    uint64_t v20 = v19;
    char v22 = v21;
    swift_release();
    char v23 = v22 & 1;
    sub_100033364(v12, v14, v16);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v24 = Text.foregroundColor(_:)();
    uint64_t v26 = v25;
    LOBYTE(v14) = v27;
    uint64_t v37 = v28;
    swift_release();
    sub_100033364(v18, v20, v23);
    swift_bridgeObjectRelease();
    uint64_t v29 = static Alignment.center.getter();
    uint64_t v31 = v30;
    sub_100168BC0(v38, (uint64_t)v40);
    memcpy(v48, v40, sizeof(v48));
    v47[5] = v29;
    v47[6] = v31;
    static Alignment.center.getter();
    sub_1001676B4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v39, 0.0, 1, 120.0, 0);
    sub_10016949C((uint64_t)v40);
    memcpy(v41, v39, 0x2A8uLL);
    char v45 = 1;
    char v43 = v14 & 1;
    v41[680] = 1;
    long long v33 = v36;
    uint64_t v32 = v37;
    *long long v36 = 0;
    *((unsigned char *)v33 + 8) = 1;
    *(_DWORD *)((char *)v33 + 9) = *(_DWORD *)v44;
    *((_DWORD *)v33 + 3) = *(_DWORD *)&v44[3];
    v33[2] = v24;
    v33[3] = v26;
    *((unsigned char *)v33 + 32) = v14 & 1;
    *((_DWORD *)v33 + 9) = *(_DWORD *)&v42[3];
    *(_DWORD *)((char *)v33 + 33) = *(_DWORD *)v42;
    v33[5] = v32;
    memcpy(v33 + 6, v39, 0x2A8uLL);
    v33[91] = 0;
    *((unsigned char *)v33 + 736) = 1;
    memcpy(v46, v39, sizeof(v46));
    sub_100033724(v24, v26, v14 & 1);
    swift_bridgeObjectRetain();
    sub_10016961C((uint64_t)v41);
    sub_10016955C((uint64_t)v46);
    sub_100033364(v24, v26, v14 & 1);
    swift_bridgeObjectRelease();
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v47);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_1000AD55C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100168BC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char v4 = static Edge.Set.leading.getter();
  char v5 = static Edge.Set.trailing.getter();
  uint64_t v6 = static VerticalAlignment.center.getter();
  sub_100168D70(a1, (uint64_t)v10);
  __src[312] = 1;
  memcpy(&__src[7], v10, 0x131uLL);
  LOBYTE(a1) = static Edge.Set.leading.getter();
  char v12 = 1;
  char v7 = static Edge.Set.trailing.getter();
  char v8 = v12;
  char v13 = 1;
  v14[0] = v6;
  v14[1] = 0;
  LOBYTE(v14[2]) = 1;
  memcpy((char *)&v14[2] + 1, __src, 0x138uLL);
  LOBYTE(v14[42]) = a1;
  memset(&v14[43], 0, 32);
  LOBYTE(v14[47]) = v12;
  LOBYTE(v14[48]) = v7;
  memset(&v14[49], 0, 32);
  LOBYTE(v14[53]) = 1;
  v15[440] = 1;
  v15[432] = 1;
  memcpy(&v15[7], v14, 0x1A9uLL);
  *(void *)a2 = 0x403E000000000000;
  *(void *)(a2 + 8) = 16;
  *(void *)(a2 + 16) = 0x3FF0000000000000;
  *(unsigned char *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(unsigned char *)(a2 + 64) = 1;
  *(unsigned char *)(a2 + 72) = v5;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(unsigned char *)(a2 + 112) = 1;
  memcpy((void *)(a2 + 113), v15, 0x1B0uLL);
  v16[0] = v6;
  v16[1] = 0;
  char v17 = 1;
  memcpy(v18, __src, 0x138uLL);
  v18[319] = a1;
  long long v19 = 0u;
  long long v20 = 0u;
  char v21 = v8;
  char v22 = v7;
  long long v23 = 0u;
  long long v24 = 0u;
  char v25 = 1;
  sub_1001696DC((uint64_t)v14);
  return sub_10016979C((uint64_t)v16);
}

uint64_t sub_100168D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ConnectionClosedModel(0);
  sub_1000AD55C(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  uint64_t v39 = EnvironmentObject.init()();
  uint64_t v40 = v4;
  type metadata accessor for ConnectivityModel();
  sub_1000AD55C(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t v38 = EnvironmentObject.init()();
  uint64_t v30 = v5;
  type metadata accessor for GuidanceModel(0);
  sub_1000AD55C(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  uint64_t v37 = EnvironmentObject.init()();
  uint64_t v29 = v6;
  type metadata accessor for OrientationModel();
  sub_1000AD55C(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  uint64_t v35 = EnvironmentObject.init()();
  uint64_t v36 = v7;
  type metadata accessor for StewieModel();
  sub_1000AD55C(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v33 = EnvironmentObject.init()();
  uint64_t v34 = v8;
  type metadata accessor for UIMetrics();
  sub_1000AD55C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v31 = EnvironmentObject.init()();
  uint64_t v32 = v9;
  uint64_t v10 = static HorizontalAlignment.leading.getter();
  sub_100169118(a1, (uint64_t)&v54);
  uint64_t v11 = v54;
  char v12 = v56;
  uint64_t v13 = v57;
  uint64_t v27 = v55;
  uint64_t v28 = v58;
  char v14 = v59;
  uint64_t v15 = v60;
  LOBYTE(a1) = v61;
  char v16 = static Edge.Set.top.getter();
  char v17 = static Edge.Set.trailing.getter();
  long long v41 = (unint64_t)v10;
  LOBYTE(v42) = 1;
  *((void *)&v42 + 1) = v11;
  *(void *)&long long v43 = v27;
  BYTE8(v43) = v12;
  *(void *)&long long v44 = v13;
  *((void *)&v44 + 1) = v28;
  LOBYTE(v45) = v14;
  *((void *)&v45 + 1) = v15;
  LOBYTE(v46) = a1;
  BYTE8(v46) = v16;
  long long v47 = 0u;
  long long v48 = 0u;
  LOBYTE(v49) = 1;
  BYTE8(v49) = v17;
  long long v50 = 0u;
  long long v51 = 0u;
  char v52 = 1;
  long long v18 = v42;
  long long v19 = v44;
  *(_OWORD *)(a2 + 144) = v43;
  *(_OWORD *)(a2 + 160) = v19;
  *(_OWORD *)(a2 + 112) = (unint64_t)v10;
  *(_OWORD *)(a2 + 128) = v18;
  long long v20 = v45;
  long long v21 = v46;
  long long v22 = v48;
  *(_OWORD *)(a2 + 208) = v47;
  *(_OWORD *)(a2 + 224) = v22;
  *(_OWORD *)(a2 + 176) = v20;
  *(_OWORD *)(a2 + 192) = v21;
  long long v23 = v49;
  long long v24 = v50;
  long long v25 = v51;
  *(unsigned char *)(a2 + 288) = 1;
  *(_OWORD *)(a2 + 256) = v24;
  *(_OWORD *)(a2 + 272) = v25;
  *(_OWORD *)(a2 + 240) = v23;
  char v53 = 1;
  *(void *)a2 = v39;
  *(void *)(a2 + 8) = v40;
  *(void *)(a2 + 16) = v38;
  *(void *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v37;
  *(void *)(a2 + 40) = v29;
  *(void *)(a2 + 48) = v35;
  *(void *)(a2 + 56) = v36;
  *(void *)(a2 + 64) = v33;
  *(void *)(a2 + 72) = v34;
  *(void *)(a2 + 80) = v31;
  *(void *)(a2 + 88) = v32;
  *(unsigned char *)(a2 + 96) = 2;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 296) = 0;
  *(unsigned char *)(a2 + 304) = 1;
  uint64_t v54 = v10;
  uint64_t v55 = 0;
  char v56 = 1;
  uint64_t v57 = v11;
  uint64_t v58 = v27;
  char v59 = v12;
  uint64_t v60 = v13;
  uint64_t v61 = v28;
  char v62 = v14;
  uint64_t v63 = v15;
  char v64 = a1;
  char v65 = v16;
  long long v66 = 0u;
  long long v67 = 0u;
  char v68 = 1;
  char v69 = v17;
  long long v70 = 0u;
  long long v71 = 0u;
  char v72 = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10016985C((uint64_t)&v41);
  sub_1001698AC((uint64_t)&v54);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100169118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_100389BF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  if (*(void *)a1)
  {
    uint64_t v9 = inited;
    uint64_t v10 = *(void *)(*(void *)a1 + 48);
    if (v10)
    {
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0xE000000000000000;
    }
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v12;
    uint64_t v13 = sub_100169950(v9, 5.0);
    uint64_t v15 = v14;
    swift_setDeallocating();
    sub_100004010(&qword_100380920);
    swift_arrayDestroy();
    void v34[2] = v13;
    v34[3] = v15;
    sub_100033310();
    uint64_t v16 = Text.init<A>(_:)();
    uint64_t v18 = v17;
    LOBYTE(v15) = v19 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v20 = Text.font(_:)();
    uint64_t v22 = v21;
    char v24 = v23;
    swift_release();
    char v25 = v24 & 1;
    sub_100033364(v16, v18, v15);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v26 = Text.foregroundColor(_:)();
    uint64_t v28 = v27;
    LOBYTE(v15) = v29;
    uint64_t v31 = v30;
    swift_release();
    sub_100033364(v20, v22, v25);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)a2 = v26;
    *(void *)(a2 + 8) = v28;
    *(unsigned char *)(a2 + 16) = v15 & 1;
    *(void *)(a2 + 24) = v31;
    *(void *)(a2 + 32) = KeyPath;
    *(unsigned char *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 56) = 1;
    sub_100033724(v26, v28, v15 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100033364(v26, v28, v15 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for GuidanceMessagesModel();
    sub_1000AD55C(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100169460@<X0>(void *a1@<X8>)
{
  return sub_100168740(a1);
}

uint64_t sub_10016949C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 280);
  uint64_t v3 = *(void *)(a1 + 288);
  char v4 = *(unsigned char *)(a1 + 296);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10016955C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v3 = *(void *)(a1 + 304);
  char v4 = *(unsigned char *)(a1 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10016961C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v3 = *(void *)(a1 + 304);
  char v4 = *(unsigned char *)(a1 + 312);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1001696DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10016979C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10016985C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001698AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001698FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100169928()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100169950(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_20;
    }
LABEL_28:
    swift_release();
    return 0;
  }
  uint64_t v28 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v5;
  uint64_t v30 = v4;
  swift_bridgeObjectRetain();
  uint64_t v9 = (unint64_t *)(a1 + 40);
  uint64_t v10 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v12 = *(v9 - 1);
    unint64_t v11 = *v9;
    uint64_t v13 = v12 & 0xFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain_n();
    if (v11) {
      unint64_t v14 = v11;
    }
    else {
      unint64_t v14 = 0xE000000000000000;
    }
    if (!v11) {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
    if ((v14 & 0x2000000000000000) != 0) {
      uint64_t v15 = HIBYTE(v14) & 0xF;
    }
    else {
      uint64_t v15 = v13;
    }
    if (v15)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001BF684(0, v10[2] + 1, 1);
        uint64_t v10 = v31;
      }
      unint64_t v18 = v10[2];
      unint64_t v17 = v10[3];
      if (v18 >= v17 >> 1)
      {
        sub_1001BF684(v17 > 1, v18 + 1, 1);
        uint64_t v10 = v31;
      }
      v10[2] = v18 + 1;
      char v19 = &v10[2 * v18];
      v19[4] = v12;
      v19[5] = v11;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v9 += 2;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  uint64_t v5 = v29;
  uint64_t v4 = v30;
  uint64_t v7 = v28;
  if (!v10[2]) {
    goto LABEL_28;
  }
LABEL_20:
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v21 = v20;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  double v23 = floor(v21 / a2);
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v23 <= -1.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v23 >= 1.84467441e19)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v24 = v10[2];
  if (!v24)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  char v25 = &v10[2 * ((unint64_t)v23 % v24)];
  uint64_t v27 = v25[4];
  uint64_t v26 = v25[5];
  swift_bridgeObjectRetain();
  swift_release();
  if (v26) {
    return v27;
  }
  else {
    return 0;
  }
}

uint64_t sub_100169BE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100169C10()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t sub_100169C3C()
{
  unint64_t result = qword_100389BF8;
  if (!qword_100389BF8)
  {
    sub_1000094C4(&qword_100389C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389BF8);
  }
  return result;
}

uint64_t sub_100169C98(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100169CF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100169D28(uint64_t a1)
{
  return a1;
}

uint64_t sub_100169DC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100169E1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100169EB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100169F24(uint64_t a1)
{
  return a1;
}

uint64_t sub_100169F94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 328);
  uint64_t v3 = *(void *)(a1 + 336);
  char v4 = *(unsigned char *)(a1 + 344);
  sub_100033724(*(void *)(a1 + 208), *(void *)(a1 + 216), *(unsigned char *)(a1 + 224));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10016A0A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v3 = *(void *)(a1 + 312);
  char v4 = *(unsigned char *)(a1 + 320);
  sub_100033724(*(void *)(a1 + 184), *(void *)(a1 + 192), *(unsigned char *)(a1 + 200));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10016A14C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  sub_100033724(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

id sub_10016A238()
{
  *(void *)&v0[OBJC_IVAR____TtC8SOSBuddy22LockScreenContentAgent__assertion] = 0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for LockScreenContentAgent();
  [super init];
  uint64_t v2 = qword_10037DD80;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  id v5 = v3;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    id v9 = v5;
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_1001B3178(v11, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] init", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v5;
}

id sub_10016A46C()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A9958);
  id v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    id v6 = v2;
    id v7 = [v6 description];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_1001B3178(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for LockScreenContentAgent();
  v14.receiver = v2;
  v14.super_class = v11;
  return [super dealloc];
}

uint64_t type metadata accessor for LockScreenContentAgent()
{
  return self;
}

Swift::Int sub_10016A6BC()
{
  return Hasher._finalize()();
}

Swift::Int sub_10016A740()
{
  return Hasher._finalize()();
}

uint64_t sub_10016A7C0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016A8E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10016AA20()
{
  return Hasher._finalize()();
}

Swift::Int sub_10016AA9C()
{
  return Hasher._finalize()();
}

unint64_t RequestCommandReason.rawValue.getter(char a1)
{
  unint64_t result = 0x636E656772656D45;
  switch(a1)
  {
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x6564697364616F52;
      break;
    case 6:
      unint64_t result = 0x6E6967617373654DLL;
      break;
    case 7:
      unint64_t result = 0x6567617373654D49;
      break;
    case 8:
      unint64_t result = 0x736D53746153;
      break;
    case 9:
      unint64_t result = 0x794D646E6946;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10016AC60(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = RequestCommandReason.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == RequestCommandReason.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10016ACEC()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  RequestCommandReason.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10016AD50()
{
  RequestCommandReason.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016ADA4()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  RequestCommandReason.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10016AE04@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8SOSBuddy20RequestCommandReasonO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10016AE34@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = RequestCommandReason.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t RequestCommandEntryPoint.rawValue.getter(char a1)
{
  uint64_t result = 1819042115;
  switch(a1)
  {
    case 1:
      uint64_t result = 1954047316;
      break;
    case 2:
      uint64_t result = 0x657465446C6C6146;
      break;
    case 3:
      uint64_t result = 0x617070614BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10016AEEC(unsigned __int8 *a1, char *a2)
{
  return sub_10028A8FC(*a1, *a2);
}

Swift::Int sub_10016AEF8()
{
  return Hasher._finalize()();
}

uint64_t sub_10016AFC8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016B080()
{
  return Hasher._finalize()();
}

unint64_t sub_10016B14C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8SOSBuddy24RequestCommandEntryPointO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10016B17C(uint64_t a1@<X8>)
{
  uint64_t v2 = 1819042115;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1954047316;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "FallDetection");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x617070614BLL;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
  }
}

SOSBuddy::RequestCommandFromService_optional __swiftcall RequestCommandFromService.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &off_100349F00;
  return (SOSBuddy::RequestCommandFromService_optional)sub_10016B874(rawValue, v1);
}

uint64_t RequestCommandFromService.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6564697364616F52;
  }
  else {
    return 0x636E656772656D45;
  }
}

uint64_t sub_10016B254(char *a1, char *a2)
{
  return sub_10028A850(*a1, *a2);
}

Swift::Int sub_10016B260()
{
  return Hasher._finalize()();
}

uint64_t sub_10016B2E8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016B35C()
{
  return Hasher._finalize()();
}

uint64_t sub_10016B3E0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100349F00;
  return sub_10016B98C(v2, a1, a2);
}

void sub_10016B3EC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x636E656772656D45;
  if (*v1) {
    uint64_t v2 = 0x6564697364616F52;
  }
  unint64_t v3 = 0xE900000000000079;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

SOSBuddy::RequestCommandAction_optional __swiftcall RequestCommandAction.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &off_100349EB0;
  return (SOSBuddy::RequestCommandAction_optional)sub_10016B874(rawValue, v1);
}

unint64_t RequestCommandAction.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_10016B474(char *a1, char *a2)
{
  return sub_10028ABEC(*a1, *a2);
}

Swift::Int sub_10016B480()
{
  return sub_10016A6BC();
}

uint64_t sub_10016B488()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016B4F8()
{
  return sub_10016AA9C();
}

uint64_t sub_10016B500@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100349EB0;
  return sub_10016B98C(v2, a1, a2);
}

void sub_10016B50C(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000011;
  if (*v1) {
    unint64_t v2 = 0xD000000000000012;
  }
  unint64_t v3 = 0x80000001002C55F0;
  if (!*v1) {
    unint64_t v3 = 0x80000001002C55D0;
  }
  *a1 = v2;
  a1[1] = v3;
}

BOOL ExitCommandReason.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &off_10034B810;
  return sub_10016BA30(a1, v1);
}

uint64_t ExitCommandReason.rawValue.getter()
{
  return 0x7571655272657355;
}

Swift::Int sub_10016B57C()
{
  return sub_10016BAB4();
}

uint64_t sub_10016B5A0()
{
  return String.hash(into:)();
}

Swift::Int sub_10016B5C4()
{
  return sub_10016BB44();
}

uint64_t sub_10016B5E8@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  v2._rawValue = &off_10034B848;
  return sub_10016BB9C(v2, a1, a2);
}

void sub_10016B5F4(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

SOSBuddy::OpenCommandRequester_optional __swiftcall OpenCommandRequester.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &off_100349F88;
  return (SOSBuddy::OpenCommandRequester_optional)sub_10016B874(rawValue, v1);
}

uint64_t OpenCommandRequester.rawValue.getter(char a1)
{
  if (a1) {
    return 0x73676E6974746553;
  }
  else {
    return 0x436C6F72746E6F43;
  }
}

uint64_t sub_10016B66C(char *a1, char *a2)
{
  return sub_10028AC94(*a1, *a2);
}

Swift::Int sub_10016B678()
{
  return Hasher._finalize()();
}

uint64_t sub_10016B708()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016B784()
{
  return Hasher._finalize()();
}

uint64_t sub_10016B810@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100349F88;
  return sub_10016B98C(v2, a1, a2);
}

void sub_10016B81C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x436C6F72746E6F43;
  if (*v1) {
    uint64_t v2 = 0x73676E6974746553;
  }
  unint64_t v3 = 0xED00007265746E65;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

SOSBuddy::AlertCommandKind_optional __swiftcall AlertCommandKind.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &off_100349FD8;
  return (SOSBuddy::AlertCommandKind_optional)sub_10016B874(rawValue, v1);
}

uint64_t sub_10016B874(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

unint64_t AlertCommandKind.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_10016B8F8(char *a1, char *a2)
{
  return sub_10028AD48(*a1, *a2);
}

Swift::Int sub_10016B904()
{
  return sub_10016A740();
}

uint64_t sub_10016B90C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10016B978()
{
  return sub_10016AA20();
}

uint64_t sub_10016B980@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_100349FD8;
  return sub_10016B98C(v2, a1, a2);
}

uint64_t sub_10016B98C@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, char *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = 2;
  }
  if (!v4) {
    char v6 = 0;
  }
  *a3 = v6;
  return result;
}

void sub_10016B9E8(void *a1@<X8>)
{
  unint64_t v2 = 0x80000001002C5630;
  if (*v1) {
    unint64_t v2 = 0x80000001002C5650;
  }
  *a1 = 0xD000000000000013;
  a1[1] = v2;
}

BOOL OfferCommandKind.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &off_10034B880;
  return sub_10016BA30(a1, v1);
}

BOOL sub_10016BA30(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

uint64_t OfferCommandKind.rawValue.getter()
{
  return 0x4D6469724766666FLL;
}

Swift::Int sub_10016BA94()
{
  return sub_10016BAB4();
}

Swift::Int sub_10016BAB4()
{
  return Hasher._finalize()();
}

uint64_t sub_10016BB04()
{
  return String.hash(into:)();
}

Swift::Int sub_10016BB24()
{
  return sub_10016BB44();
}

Swift::Int sub_10016BB44()
{
  return Hasher._finalize()();
}

uint64_t sub_10016BB90@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  v2._rawValue = &off_10034B8B8;
  return sub_10016BB9C(v2, a1, a2);
}

uint64_t sub_10016BB9C@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, BOOL *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 != 0;
  return result;
}

void sub_10016BBEC(void *a1@<X8>)
{
  *a1 = 0x4D6469724766666FLL;
  a1[1] = 0xEB0000000065646FLL;
}

uint64_t sub_10016BC10(int a1, void *a2)
{
  LODWORD(v96) = a1;
  uint64_t v3 = sub_100004010(&qword_100389E28);
  __chkstk_darwin(v3 - 8);
  Swift::Int v5 = (char *)v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v98 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v8 = (char *)v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  int v100 = (char *)v91 - v15;
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)v91 - v16;
  id v18 = [a2 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = URL.scheme.getter();
  uint64_t v21 = v20;
  double v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v22 = v10 + 8;
  unint64_t v24 = v17;
  uint64_t v25 = v9;
  uint64_t v101 = v23;
  v23(v24, v9);
  if (!v21
    || (uint64_t v103 = v19,
        uint64_t v104 = v21,
        v102[0] = 0xD000000000000010,
        v102[1] = 0x80000001002D0C20,
        sub_100033310(),
        uint64_t v26 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)(),
        swift_bridgeObjectRelease(),
        v26))
  {
    uint64_t v98 = v9;
    uint64_t v99 = v22;
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000FD84(v27, (uint64_t)qword_1003A9958);
    id v28 = a2;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v29, v30))
    {

      goto LABEL_10;
    }
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    v102[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446210;
    id v32 = [v28 URL];
    uint64_t v33 = v100;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v34 = URL.scheme.getter();
    uint64_t v36 = v35;
    v101(v33, v98);
    uint64_t v103 = v34;
    uint64_t v104 = v36;
    sub_100004010(&qword_100380920);
    uint64_t v37 = String.init<A>(describing:)();
    uint64_t v103 = sub_1001B3178(v37, v38, v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unexpected URL scheme: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_7;
  }
  id v41 = [a2 URL];
  long long v42 = v100;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  v101(v42, v25);
  uint64_t v43 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v43 == 2047)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    sub_10000FD84(v44, (uint64_t)qword_1003A9958);
    long long v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      long long v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Deeplink is too long, it might have been cut off", v47, 2u);
      swift_slowDealloc();
    }
  }
  id v48 = [a2 URL];
  long long v49 = v100;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URLComponents.init(url:resolvingAgainstBaseURL:)();
  v101(v49, v25);
  uint64_t v50 = v98;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v5, 1, v6) == 1)
  {
    sub_10000950C((uint64_t)v5, &qword_100389E28);
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_10000FD84(v51, (uint64_t)qword_1003A9958);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v29, v52)) {
      goto LABEL_8;
    }
    char v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v52, "Failed to parse URL components", v53, 2u);
LABEL_7:
    swift_slowDealloc();
LABEL_8:

LABEL_10:
    char v39 = 0;
    return v39 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v8, v5, v6);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for Logger();
  uint64_t v55 = sub_10000FD84(v54, (uint64_t)qword_1003A9958);
  id v56 = a2;
  long long v95 = (uint8_t *)v55;
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  int v59 = v58;
  if (os_log_type_enabled(v57, v58))
  {
    int v94 = v59;
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    uint64_t v103 = v93;
    uint64_t v99 = v22;
    *(_DWORD *)uint64_t v60 = 136446210;
    v91[1] = v60 + 4;
    long long v92 = v60;
    id v61 = [v56 URL];
    char v62 = v100;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100173174();
    uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v65 = v64;
    long long v66 = v62;
    long long v67 = v101;
    v101(v66, v25);
    v102[0] = sub_1001B3178(v63, v65, &v103);
    uint64_t v22 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v94, "handleURLContext(%{public}s)", v92, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    long long v67 = v101;
  }
  id v68 = [v56 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v69 = URL.host.getter();
  long long v71 = v70;
  v67(v13, v25);
  if (v71) {
    v72._uint64_t countAndFlagsBits = v69;
  }
  else {
    v72._uint64_t countAndFlagsBits = 0;
  }
  if (v71) {
    v72._object = v71;
  }
  else {
    v72._object = (void *)0xE000000000000000;
  }
  switch(sub_100171EC0(v72))
  {
    case 1u:
      uint64_t v75 = URLComponents.queryItems.getter();
      char v74 = sub_100172CF0(v75);
      goto LABEL_40;
    case 2u:
      uint64_t v76 = URLComponents.queryItems.getter();
      sub_1001717C0(v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v8, v6);
      char v39 = 1;
      return v39 & 1;
    case 3u:
      uint64_t v77 = URLComponents.queryItems.getter();
      char v74 = sub_10016FB28(v77);
      goto LABEL_40;
    case 4u:
      uint64_t v78 = URLComponents.queryItems.getter();
      char v74 = sub_1001708B0(v78);
      goto LABEL_40;
    case 5u:
      uint64_t v99 = v22;
      uint64_t v79 = v25;
      id v80 = v56;
      uint64_t v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v81, v82))
      {
        char v83 = (uint8_t *)swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        v102[0] = v97;
        long long v96 = v83;
        *(_DWORD *)char v83 = 136446210;
        long long v95 = v83 + 4;
        id v84 = [v80 URL];
        float32x4_t v85 = v100;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v86 = URL.host.getter();
        uint64_t v88 = v87;
        v101(v85, v79);
        uint64_t v103 = v86;
        uint64_t v104 = v88;
        sub_100004010(&qword_100380920);
        uint64_t v89 = String.init<A>(describing:)();
        uint64_t v103 = sub_1001B3178(v89, v90, v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Unsupported command: %{public}s", v96, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v98 + 8))(v8, v6);
      goto LABEL_10;
    default:
      uint64_t v73 = URLComponents.queryItems.getter();
      char v74 = sub_10016C7F4(v96, v73);
LABEL_40:
      char v39 = v74;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v8, v6);
      break;
  }
  return v39 & 1;
}

uint64_t sub_10016C7F4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  unint64_t v90 = (char *)v81 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v81 - v11;
  uint64_t v13 = sub_100004010(&qword_100389E18);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  id v84 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  char v83 = (char *)v81 - v17;
  __chkstk_darwin(v16);
  long long v91 = (char *)v81 - v18;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  int v19 = a1;
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = sub_10000FD84(v20, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v88 = v21;
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v92 = v4;
  uint64_t v89 = v8;
  int v85 = v19;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    LOBYTE(v93) = v19;
    sub_100004010((uint64_t *)&unk_10038EBC0);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v93 = sub_1001B3178(v26, v27, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    uint64_t v93 = a2;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v93 = sub_1001B3178(v28, v29, &v94);
    uint64_t v4 = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "handleRequest(wasActive = %{public}s, items = %{public}s)", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!a2) {
      goto LABEL_24;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a2)
    {
LABEL_24:
      uint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v50, v51))
      {
        os_log_type_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v52 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "request command: reason is missing", v52, 2u);
        swift_slowDealloc();
      }

      char v53 = 0;
      return v53 & 1;
    }
  }
  uint64_t v30 = *(void *)(a2 + 16);
  uint64_t v86 = v5;
  uint64_t v87 = a2;
  if (v30)
  {
    uint64_t v32 = v5 + 16;
    uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v33 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v34 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v35 = *(void *)(v32 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v31(v12, v33, v4);
      if (URLQueryItem.name.getter() == 0x6E6F73616572 && v36 == 0xE600000000000000) {
        break;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v37) {
        goto LABEL_17;
      }
      uint64_t v4 = v92;
      (*v34)(v12, v92);
      v33 += v35;
      if (!--v30) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v38 = v86;
    uint64_t v40 = (uint64_t)v91;
    uint64_t v4 = v92;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v91, v12, v92);
    char v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
    v39(v40, 0, 1, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v38 = v86;
    char v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56);
    uint64_t v40 = (uint64_t)v91;
    v39((uint64_t)v91, 1, 1, v4);
  }
  uint64_t v41 = v87;
  swift_bridgeObjectRelease();
  long long v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v42(v40, 1, v4) == 1)
  {
    sub_10000950C(v40, &qword_100389E18);
    goto LABEL_24;
  }
  os_log_type_t v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v42;
  uint64_t v43 = URLQueryItem.value.getter();
  long long v45 = v44;
  long long v91 = *(char **)(v38 + 8);
  ((void (*)(uint64_t, uint64_t))v91)(v40, v4);
  if (!v45) {
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v95._uint64_t countAndFlagsBits = v43;
  v95._object = v45;
  unint64_t v46 = _s8SOSBuddy20RequestCommandReasonO8rawValueACSgSS_tcfC_0(v95);
  v81[1] = v38 + 48;
  if (v46 == 10)
  {
    swift_bridgeObjectRetain();
    long long v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      long long v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)long long v49 = 136446210;
      uint64_t v88 = (uint64_t)(v49 + 4);
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1001B3178(v43, (unint64_t)v45, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "request command: reason '%{public}s' is not supported", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v88 = 9;
    uint64_t v4 = v92;
    uint64_t v38 = v86;
  }
  else
  {
    uint64_t v88 = v46;
    swift_bridgeObjectRelease();
  }
  uint64_t v55 = *(void *)(v41 + 16);
  id v56 = v90;
  v81[0] = v39;
  if (v55)
  {
    int v59 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
    uint64_t v57 = v38 + 16;
    os_log_type_t v58 = v59;
    unint64_t v60 = v41 + ((*(unsigned __int8 *)(v57 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 64));
    uint64_t v61 = *(void *)(v57 + 56);
    swift_bridgeObjectRetain();
    uint64_t v62 = v55;
    while (1)
    {
      v58(v56, v60, v4);
      if (URLQueryItem.name.getter() == 0x68636E75616C6572 && v63 == 0xE800000000000000) {
        break;
      }
      char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v64) {
        goto LABEL_40;
      }
      id v56 = v90;
      uint64_t v4 = v92;
      ((void (*)(char *, uint64_t))v91)(v90, v92);
      v60 += v61;
      if (!--v62)
      {
        uint64_t v65 = 1;
        uint64_t v38 = v86;
        uint64_t v41 = v87;
        uint64_t v66 = (uint64_t)v83;
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t v38 = v86;
    uint64_t v66 = (uint64_t)v83;
    uint64_t v4 = v92;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v83, v90, v92);
    uint64_t v65 = 0;
    uint64_t v41 = v87;
LABEL_41:
    char v39 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v65 = 1;
    uint64_t v66 = (uint64_t)v83;
  }
  unint64_t v90 = (char *)(v38 + 56);
  v39(v66, v65, 1, v4);
  swift_bridgeObjectRelease();
  long long v67 = v82;
  int v68 = v82(v66, 1, v4);
  sub_10000950C(v66, &qword_100389E18);
  if (v55)
  {
    LODWORD(v83) = v68;
    uint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
    unint64_t v70 = v41 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    uint64_t v71 = *(void *)(v38 + 72);
    swift_bridgeObjectRetain();
    Swift::String v72 = v89;
    while (1)
    {
      v69(v72, v70, v4);
      if (URLQueryItem.name.getter() == 0x654468636E75616CLL && v73 == 0xEA00000000006F6DLL) {
        break;
      }
      char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v74) {
        goto LABEL_51;
      }
      Swift::String v72 = v89;
      uint64_t v4 = v92;
      ((void (*)(char *, uint64_t))v91)(v89, v92);
      v70 += v71;
      if (!--v55)
      {
        uint64_t v75 = 1;
        uint64_t v41 = v87;
        uint64_t v76 = (uint64_t)v84;
        goto LABEL_52;
      }
    }
    swift_bridgeObjectRelease();
LABEL_51:
    uint64_t v76 = (uint64_t)v84;
    uint64_t v4 = v92;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v84, v89, v92);
    uint64_t v75 = 0;
    uint64_t v41 = v87;
LABEL_52:
    char v39 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81[0];
    long long v67 = v82;
    int v68 = (int)v83;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v75 = 1;
    uint64_t v76 = (uint64_t)v84;
  }
  v39(v76, v75, 1, v4);
  swift_bridgeObjectRelease();
  int v77 = v67(v76, 1, v4);
  sub_10000950C(v76, &qword_100389E18);
  if (v77 == 1)
  {
    BOOL v79 = v68 == 1 || v85 == 2;
    char v80 = v79 | v85;
    switch((char)v88)
    {
      case 5:
        char v53 = sub_10016E880(v80 & 1, v41);
        break;
      case 6:
      case 7:
      case 8:
        sub_10017128C();
        goto LABEL_66;
      case 9:
        sub_100171420();
        goto LABEL_66;
      default:
        char v53 = sub_10016D320(v88, v80 & 1, v41);
        break;
    }
  }
  else
  {
    sub_1001715B0(byte_1002BD6AA[(char)v88]);
LABEL_66:
    char v53 = 1;
  }
  return v53 & 1;
}

uint64_t sub_10016D320(char a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for URLQueryItem();
  uint64_t v147 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v143 = (char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v146 = (char *)&v135 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  __int16 v149 = (char *)&v135 - v14;
  __chkstk_darwin(v13);
  uint64_t v148 = (char *)&v135 - v15;
  uint64_t v16 = sub_100004010(&qword_100389E18);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  char v140 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v135 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v145 = (char *)&v135 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v135 - v24;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v27 = sub_10000FD84(v26, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v150 = v8;
  uint64_t v141 = v4;
  __int16 v142 = v21;
  int v139 = a2;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v151 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 67240706;
    LODWORD(v160) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 8) = 2082;
    char v32 = a1;
    LOBYTE(v160) = a1;
    uint64_t v33 = String.init<A>(describing:)();
    BOOL v144 = v25;
    uint64_t v160 = sub_1001B3178(v33, v34, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 18) = 2082;
    uint64_t v160 = a3;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v35 = String.init<A>(describing:)();
    uint64_t v160 = sub_1001B3178(v35, v36, &v151);
    uint64_t v8 = v150;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v144;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "handleEmergencyRequest(bringForeground = %{BOOL,public}d, reason = %{public}s, items = %{public}s)", (uint8_t *)v31, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v32 = a1;
  }
  int v37 = 0;
  switch(v32)
  {
    case 1:
      goto LABEL_20;
    case 2:
      int v37 = 1;
      goto LABEL_20;
    case 3:
      int v37 = 2;
      goto LABEL_20;
    case 4:
      int v37 = 3;
      goto LABEL_20;
    case 5:
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v38, v39)) {
        goto LABEL_55;
      }
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446210;
      char v60 = 5;
      goto LABEL_32;
    case 6:
    case 7:
    case 8:
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v38, v39)) {
        goto LABEL_55;
      }
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446210;
      LOBYTE(v160) = v32;
      goto LABEL_33;
    case 9:
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v38, v39)) {
        goto LABEL_55;
      }
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446210;
      char v60 = 9;
LABEL_32:
      LOBYTE(v160) = v60;
LABEL_33:
      uint64_t v61 = String.init<A>(describing:)();
      uint64_t v160 = sub_1001B3178(v61, v62, &v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v63 = "request command: handleEmergencyRequest called for non-emergency reason %{public}s";
      goto LABEL_34;
    default:
      if (!a3) {
        goto LABEL_71;
      }
      uint64_t v41 = *(void *)(a3 + 16);
      if (!v41)
      {
        swift_bridgeObjectRetain();
        uint64_t v50 = 1;
        goto LABEL_60;
      }
      BOOL v144 = v25;
      long long v42 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 16);
      unint64_t v43 = a3 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
      uint64_t v44 = a3;
      long long v45 = (void (**)(char *, uint64_t))(v147 + 8);
      uint64_t v46 = *(void *)(v147 + 72);
      uint64_t v138 = v44;
      swift_bridgeObjectRetain();
      long long v47 = v148;
      while (1)
      {
        v42(v47, v43, v8);
        if (URLQueryItem.name.getter() == 0x696F507972746E65 && v48 == 0xEA0000000000746ELL) {
          break;
        }
        char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v49) {
          goto LABEL_64;
        }
        long long v47 = v148;
        uint64_t v8 = v150;
        (*v45)(v148, v150);
        v43 += v46;
        if (!--v41)
        {
          uint64_t v50 = 1;
          a3 = v138;
          uint64_t v25 = v144;
LABEL_60:
          uint64_t v89 = v147;
          goto LABEL_65;
        }
      }
      swift_bridgeObjectRelease();
LABEL_64:
      uint64_t v89 = v147;
      uint64_t v25 = v144;
      uint64_t v8 = v150;
      (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v144, v148, v150);
      uint64_t v50 = 0;
      a3 = v138;
LABEL_65:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v25, v50, 1, v8);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v25, 1, v8) == 1)
      {
        sub_10000950C((uint64_t)v25, &qword_100389E18);
LABEL_71:
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v38, v83)) {
          goto LABEL_55;
        }
        id v84 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v84 = 0;
        int v85 = "request command: entryPoint is missing";
        goto LABEL_53;
      }
      uint64_t v90 = URLQueryItem.value.getter();
      uint64_t v92 = v91;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v25, v8);
      if (!v92) {
        goto LABEL_71;
      }
      swift_bridgeObjectRetain();
      v161._uint64_t countAndFlagsBits = v90;
      v161._object = v92;
      int v93 = _s8SOSBuddy24RequestCommandEntryPointO8rawValueACSgSS_tcfC_0(v161);
      if (v93 == 4)
      {
        swift_bridgeObjectRetain();
        uint64_t v148 = (char *)v27;
        uint64_t v94 = Logger.logObject.getter();
        os_log_type_t v95 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v94, v95))
        {
          long long v96 = (uint8_t *)swift_slowAlloc();
          uint64_t v151 = swift_slowAlloc();
          *(_DWORD *)long long v96 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v160 = sub_1001B3178(v90, (unint64_t)v92, &v151);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "request command: entryPoint '%{public}s' is not supported, defaulting to call", v96, 0xCu);
          swift_arrayDestroy();
          uint64_t v8 = v150;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        int v37 = 0;
        uint64_t v27 = (uint64_t)v148;
      }
      else
      {
        int v37 = v93;
        swift_bridgeObjectRelease();
      }
LABEL_20:
      LODWORD(v144) = v37;
      if (!a3) {
        goto LABEL_51;
      }
      uint64_t v148 = (char *)v27;
      uint64_t v51 = *(void *)(a3 + 16);
      uint64_t v138 = a3;
      if (v51)
      {
        uint64_t v52 = v147;
        char v53 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 16);
        unint64_t v54 = a3 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
        uint64_t v55 = (void (**)(char *, uint64_t))(v147 + 8);
        uint64_t v56 = *(void *)(v147 + 72);
        swift_bridgeObjectRetain();
        uint64_t v57 = v149;
        while (1)
        {
          v53(v57, v54, v8);
          if (URLQueryItem.name.getter() == 0x61737265766E6F63 && v58 == 0xEE0064496E6F6974) {
            break;
          }
          char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v59) {
            goto LABEL_39;
          }
          uint64_t v57 = v149;
          uint64_t v8 = v150;
          (*v55)(v149, v150);
          v54 += v56;
          if (!--v51) {
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRelease();
LABEL_39:
        uint64_t v65 = (uint64_t)v145;
        uint64_t v8 = v150;
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v145, v149, v150);
        char v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
        v64(v65, 0, 1, v8);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = v147;
LABEL_37:
        char v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
        uint64_t v65 = (uint64_t)v145;
        v64((uint64_t)v145, 1, 1, v8);
      }
      swift_bridgeObjectRelease();
      uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      if (v66(v65, 1, v8) == 1)
      {
        sub_10000950C(v65, &qword_100389E18);
LABEL_51:
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v38, v83))
        {
LABEL_55:

          return 0;
        }
        id v84 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v84 = 0;
        int v85 = "request command: conversationId is missing";
        goto LABEL_53;
      }
      uint64_t v67 = URLQueryItem.value.getter();
      uint64_t v69 = v68;
      __int16 v149 = *(char **)(v52 + 8);
      ((void (*)(uint64_t, uint64_t))v149)(v65, v8);
      if (!v69) {
        goto LABEL_51;
      }
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1001B7C10(v67, v69);
      if (v71)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v160 = swift_slowAlloc();
          *(_DWORD *)uint64_t v40 = 136446210;
          uint64_t v151 = v67;
          uint64_t v152 = v69;
          swift_bridgeObjectRetain();
          sub_100004010(&qword_100380920);
          uint64_t v87 = String.init<A>(describing:)();
          uint64_t v151 = sub_1001B3178(v87, v88, &v160);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v63 = "request command: conversationId '%{public}s' is invalid, uint expected";
LABEL_34:
          _os_log_impl((void *)&_mh_execute_header, v38, v39, v63, v40, 0xCu);
          swift_arrayDestroy();
          goto LABEL_35;
        }
LABEL_61:

        swift_bridgeObjectRelease_n();
        return 0;
      }
      uint64_t v145 = (char *)v66;
      uint64_t v136 = v70;
      swift_bridgeObjectRelease();
      uint64_t v72 = *(void *)(v138 + 16);
      uint64_t v135 = v72;
      if (v72)
      {
        uint64_t v137 = v64;
        uint64_t v73 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 16);
        unint64_t v74 = v138 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
        uint64_t v75 = *(void *)(v147 + 72);
        swift_bridgeObjectRetain();
        uint64_t v76 = v72;
        int v77 = v146;
        while (1)
        {
          v73(v77, v74, v8);
          if (URLQueryItem.name.getter() == 0x6E6F69746361 && v78 == 0xE600000000000000) {
            break;
          }
          char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v79) {
            goto LABEL_75;
          }
          int v77 = v146;
          uint64_t v8 = v150;
          ((void (*)(char *, uint64_t))v149)(v146, v150);
          v74 += v75;
          if (!--v76)
          {
            uint64_t v80 = 1;
            char v64 = v137;
            uint64_t v81 = v147;
            uint64_t v82 = (uint64_t)v142;
            goto LABEL_76;
          }
        }
        swift_bridgeObjectRelease();
LABEL_75:
        uint64_t v81 = v147;
        uint64_t v82 = (uint64_t)v142;
        uint64_t v8 = v150;
        (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v142, v146, v150);
        uint64_t v80 = 0;
        char v64 = v137;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v80 = 1;
        uint64_t v81 = v147;
        uint64_t v82 = (uint64_t)v142;
      }
LABEL_76:
      uint64_t v97 = (char *)(v81 + 56);
      v64(v82, v80, 1, v8);
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v145)(v82, 1, v8) == 1)
      {
        sub_10000950C(v82, &qword_100389E18);
LABEL_82:
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v38, v83)) {
          goto LABEL_55;
        }
        id v84 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v84 = 0;
        int v85 = "request command: action is missing";
LABEL_53:
        _os_log_impl((void *)&_mh_execute_header, v38, v83, v85, v84, 2u);
        goto LABEL_54;
      }
      uint64_t v98 = URLQueryItem.value.getter();
      uint64_t v99 = v8;
      uint64_t v100 = v98;
      uint64_t v102 = v101;
      ((void (*)(uint64_t, uint64_t))v149)(v82, v99);
      if (!v102) {
        goto LABEL_82;
      }
      swift_bridgeObjectRetain();
      v103._uint64_t countAndFlagsBits = v100;
      v103._object = v102;
      Swift::Int v104 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349EB0, v103);
      swift_bridgeObjectRelease();
      if (v104)
      {
        if (v104 == 1)
        {
          uint64_t v137 = v64;
          int v105 = 1;
          goto LABEL_87;
        }
        swift_bridgeObjectRetain();
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v116 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v38, v116))
        {
          uint64_t v117 = (uint8_t *)swift_slowAlloc();
          uint64_t v151 = swift_slowAlloc();
          *(_DWORD *)uint64_t v117 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v160 = sub_1001B3178(v100, (unint64_t)v102, &v151);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v38, v116, "request command: action '%{public}s' is not supported", v117, 0xCu);
          swift_arrayDestroy();
LABEL_35:
          swift_slowDealloc();
LABEL_54:
          swift_slowDealloc();
          goto LABEL_55;
        }
        goto LABEL_61;
      }
      uint64_t v137 = v64;
      int v105 = 0;
LABEL_87:
      swift_bridgeObjectRelease();
      uint64_t v106 = v150;
      uint64_t v107 = v143;
      uint64_t v108 = v135;
      if (v135)
      {
        uint64_t v146 = v97;
        LODWORD(v148) = v105;
        uint64_t v109 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 16);
        unint64_t v110 = v138 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
        uint64_t v111 = *(void *)(v147 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v109(v107, v110, v106);
          if (URLQueryItem.name.getter() == 0x767265536D6F7266 && v112 == 0xEB00000000656369) {
            break;
          }
          char v113 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v113) {
            goto LABEL_99;
          }
          uint64_t v107 = v143;
          uint64_t v106 = v150;
          ((void (*)(char *, uint64_t))v149)(v143, v150);
          v110 += v111;
          if (!--v108)
          {
            uint64_t v114 = 1;
            uint64_t v115 = (uint64_t)v140;
            goto LABEL_100;
          }
        }
        swift_bridgeObjectRelease();
LABEL_99:
        uint64_t v115 = (uint64_t)v140;
        uint64_t v106 = v150;
        (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v140, v143, v150);
        uint64_t v114 = 0;
LABEL_100:
        int v105 = (int)v148;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v114 = 1;
        uint64_t v115 = (uint64_t)v140;
      }
      v137(v115, v114, 1, v106);
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v145)(v115, 1, v106) != 1)
      {
        uint64_t v121 = URLQueryItem.value.getter();
        uint64_t v122 = v106;
        uint64_t v123 = v121;
        uint64_t v124 = v115;
        long long v126 = v125;
        ((void (*)(uint64_t, uint64_t))v149)(v124, v122);
        char v120 = v139;
        if (v126)
        {
          swift_bridgeObjectRetain();
          v127._uint64_t countAndFlagsBits = v123;
          v127._object = v126;
          Swift::Int v128 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349F00, v127);
          swift_bridgeObjectRelease();
          if (v128 == 1)
          {
            swift_bridgeObjectRelease();
            char v119 = 0;
            uint64_t v118 = 8;
            goto LABEL_112;
          }
          if (!v128)
          {
            swift_bridgeObjectRelease();
            char v119 = 0;
            uint64_t v118 = 1;
            goto LABEL_112;
          }
          swift_bridgeObjectRetain();
          long long v129 = Logger.logObject.getter();
          os_log_type_t v130 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v129, v130))
          {
            char v131 = (uint8_t *)swift_slowAlloc();
            uint64_t v151 = swift_slowAlloc();
            *(_DWORD *)char v131 = 136446210;
            swift_bridgeObjectRetain();
            uint64_t v160 = sub_1001B3178(v123, (unint64_t)v126, &v151);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v129, v130, "request command: fromService '%{public}s' is not supported", v131, 0xCu);
            char v119 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v118 = 0;
            goto LABEL_112;
          }

          swift_bridgeObjectRelease_n();
        }
        uint64_t v118 = 0;
        char v119 = 1;
        goto LABEL_112;
      }
      sub_10000950C(v115, &qword_100389E18);
      uint64_t v118 = 0;
      char v119 = 1;
      char v120 = v139;
LABEL_112:
      if (v105) {
        char v132 = 1;
      }
      else {
        char v132 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      char v133 = (char)v144;
      if (v144 >= 2u)
      {
        char v120 = 0;
        char v133 = (char)v144;
      }
      type metadata accessor for PreventSuspensionAssertion();
      swift_allocObject();
      uint64_t v134 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD00000000000001BLL, 0x80000001002D0C00);
      LOBYTE(v151) = v133;
      uint64_t v152 = v136;
      char v153 = v132 & 1;
      uint64_t v154 = v118;
      char v155 = v119;
      char v156 = 2;
      char v157 = v105;
      char v158 = v120 & 1;
      uint64_t v159 = v134;
      PassthroughSubject.send(_:)();
      swift_release();
      return 1;
  }
}

uint64_t sub_10016E880(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v133 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v125 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v138 = (char *)&v125 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v125 - v13;
  uint64_t v15 = sub_100004010(&qword_100389E18);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  os_log_type_t v130 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  char v131 = (char *)&v125 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  char v132 = (char *)&v125 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (void (*)(uint64_t, uint64_t))((char *)&v125 - v22);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = sub_10000FD84(v24, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v139 = v25;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v140 = v4;
  uint64_t v134 = (uint64_t)v10;
  uint64_t v137 = v23;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v141 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 67240450;
    LODWORD(v151) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 8) = 2082;
    uint64_t v151 = a2;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v151 = sub_1001B3178(v30, v31, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v140;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "handleRoadsideAssistanceRequest(bringForeground = %{BOOL,public}d, items = %{public}s)", (uint8_t *)v29, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!a2) {
      goto LABEL_29;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a2)
    {
LABEL_29:
      unint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v62, v63))
      {
LABEL_33:

        return 0;
      }
      char v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v64 = 0;
      uint64_t v65 = "request command: conversationId is missing";
      goto LABEL_31;
    }
  }
  uint64_t v32 = *(void *)(a2 + 16);
  uint64_t v135 = v5;
  uint64_t v136 = a2;
  if (v32)
  {
    uint64_t v33 = a2;
    unint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v35 = v33 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    unint64_t v36 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v37 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v34(v14, v35, v4);
      if (URLQueryItem.name.getter() == 0x61737265766E6F63 && v38 == 0xEE0064496E6F6974) {
        break;
      }
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v39) {
        goto LABEL_17;
      }
      uint64_t v4 = v140;
      (*v36)(v14, v140);
      v35 += v37;
      if (!--v32) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v40 = v135;
    uint64_t v42 = (uint64_t)v137;
    uint64_t v4 = v140;
    (*(void (**)(void (*)(uint64_t, uint64_t), char *, uint64_t))(v135 + 32))(v137, v14, v140);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v41(v42, 0, 1, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v40 = v135;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
    uint64_t v42 = (uint64_t)v137;
    v41((uint64_t)v137, 1, 1, v4);
  }
  uint64_t v43 = v136;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  if (v44(v42, 1, v4) == 1)
  {
    sub_10000950C(v42, &qword_100389E18);
    goto LABEL_29;
  }
  uint64_t v45 = URLQueryItem.value.getter();
  uint64_t v46 = v42;
  uint64_t v47 = v45;
  uint64_t v49 = v48;
  uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v137(v46, v4);
  if (!v49) {
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1001B7C10(v47, v49);
  if (v51)
  {
    swift_bridgeObjectRetain();
    unint64_t v62 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v62, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 136446210;
      uint64_t v141 = v47;
      uint64_t v142 = v49;
      swift_bridgeObjectRetain();
      sub_100004010(&qword_100380920);
      uint64_t v70 = String.init<A>(describing:)();
      uint64_t v141 = sub_1001B3178(v70, v71, &v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v72 = "request command: conversationId '%{public}s' is invalid, uint expected";
LABEL_38:
      _os_log_impl((void *)&_mh_execute_header, v62, v68, v72, v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_32;
    }
    goto LABEL_39;
  }
  uint64_t v126 = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v43 + 16);
  uint64_t v127 = v52;
  if (v52)
  {
    Swift::Int v128 = v44;
    long long v129 = v41;
    uint64_t v53 = v43;
    unint64_t v54 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    unint64_t v55 = v53 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    uint64_t v56 = *(void *)(v40 + 72);
    swift_bridgeObjectRetain();
    uint64_t v57 = v52;
    uint64_t v58 = v138;
    while (1)
    {
      v54(v58, v55, v4);
      if (URLQueryItem.name.getter() == 0x6E6F69746361 && v59 == 0xE600000000000000) {
        break;
      }
      char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v60) {
        goto LABEL_44;
      }
      uint64_t v58 = v138;
      uint64_t v4 = v140;
      v137((uint64_t)v138, v140);
      v55 += v56;
      if (!--v57)
      {
        uint64_t v61 = 1;
        uint64_t v40 = v135;
        uint64_t v43 = v136;
        uint64_t v41 = v129;
        uint64_t v44 = v128;
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease();
LABEL_44:
    uint64_t v40 = v135;
    uint64_t v73 = (uint64_t)v132;
    uint64_t v4 = v140;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v132, v138, v140);
    uint64_t v61 = 0;
    uint64_t v43 = v136;
    uint64_t v41 = v129;
    uint64_t v44 = v128;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = 1;
LABEL_42:
    uint64_t v73 = (uint64_t)v132;
  }
  v41(v73, v61, 1, v4);
  swift_bridgeObjectRelease();
  if (v44(v73, 1, v4) == 1)
  {
    sub_10000950C(v73, &qword_100389E18);
LABEL_51:
    unint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v62, v63)) {
      goto LABEL_33;
    }
    char v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v64 = 0;
    uint64_t v65 = "request command: action is missing";
LABEL_31:
    _os_log_impl((void *)&_mh_execute_header, v62, v63, v65, v64, 2u);
LABEL_32:
    swift_slowDealloc();
    goto LABEL_33;
  }
  uint64_t v74 = URLQueryItem.value.getter();
  uint64_t v75 = v4;
  int v77 = v76;
  v137(v73, v75);
  if (!v77) {
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  v78._uint64_t countAndFlagsBits = v74;
  v78._object = v77;
  Swift::Int v79 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349EB0, v78);
  swift_bridgeObjectRelease();
  if (v79)
  {
    if (v79 != 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v92 = Logger.logObject.getter();
      os_log_type_t v93 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = (uint8_t *)swift_slowAlloc();
        uint64_t v141 = swift_slowAlloc();
        *(_DWORD *)uint64_t v94 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v151 = sub_1001B3178(v74, (unint64_t)v77, &v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "request command: action '%{public}s' is not supported", v94, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return 0;
      }

      goto LABEL_40;
    }
    LODWORD(v132) = 1;
  }
  else
  {
    LODWORD(v132) = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v80 = v134;
  uint64_t v81 = v127;
  uint64_t v138 = (char *)(v40 + 56);
  long long v129 = v41;
  Swift::Int v128 = v44;
  if (v127)
  {
    uint64_t v82 = *(void (**)(uint64_t, unint64_t, uint64_t))(v40 + 16);
    unint64_t v83 = v43 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    uint64_t v84 = *(void *)(v40 + 72);
    swift_bridgeObjectRetain();
    uint64_t v85 = v81;
    uint64_t v86 = v140;
    while (1)
    {
      v82(v80, v83, v86);
      if (URLQueryItem.name.getter() == 0x72656469766F7270 && v87 == 0xEA00000000006449) {
        break;
      }
      char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v88) {
        goto LABEL_66;
      }
      uint64_t v80 = v134;
      uint64_t v86 = v140;
      v137(v134, v140);
      v83 += v84;
      if (!--v85)
      {
        uint64_t v89 = 1;
        uint64_t v90 = v86;
        uint64_t v40 = v135;
        uint64_t v43 = v136;
        uint64_t v91 = (uint64_t)v131;
        goto LABEL_67;
      }
    }
    swift_bridgeObjectRelease();
LABEL_66:
    uint64_t v40 = v135;
    uint64_t v91 = (uint64_t)v131;
    uint64_t v90 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v131, v134, v140);
    uint64_t v89 = 0;
    uint64_t v43 = v136;
LABEL_67:
    uint64_t v41 = v129;
    uint64_t v44 = v128;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = 1;
    uint64_t v90 = v140;
    uint64_t v91 = (uint64_t)v131;
  }
  v41(v91, v89, 1, v90);
  swift_bridgeObjectRelease();
  if (v44(v91, 1, v90) == 1)
  {
    sub_10000950C(v91, &qword_100389E18);
    uint64_t v134 = 0;
    LODWORD(v131) = 1;
    uint64_t v95 = v127;
    goto LABEL_74;
  }
  uint64_t v96 = v40;
  uint64_t v97 = v43;
  uint64_t v98 = URLQueryItem.value.getter();
  unint64_t v100 = v99;
  v137(v91, v90);
  if (v100)
  {
    swift_bridgeObjectRetain();
    uint64_t v134 = sub_1001B7C10(v98, v100);
    uint64_t v95 = v127;
    if ((v101 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      LODWORD(v131) = 0;
      uint64_t v43 = v97;
      uint64_t v40 = v96;
      goto LABEL_74;
    }
    swift_bridgeObjectRetain();
    unint64_t v62 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v62, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      uint64_t v141 = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v151 = sub_1001B3178(v98, v100, &v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v72 = "request command: providerId '%{public}s' is invalid, uint expected";
      goto LABEL_38;
    }
LABEL_39:

LABEL_40:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v134 = 0;
  LODWORD(v131) = 1;
  uint64_t v43 = v97;
  uint64_t v40 = v96;
  uint64_t v95 = v127;
LABEL_74:
  if (v95)
  {
    uint64_t v102 = v95;
    uint64_t v103 = v90;
    Swift::Int v104 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    unint64_t v105 = v43 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    uint64_t v106 = *(void *)(v40 + 72);
    swift_bridgeObjectRetain();
    uint64_t v107 = v133;
    while (1)
    {
      v104(v107, v105, v103);
      if (URLQueryItem.name.getter() == 0x767265536D6F7266 && v108 == 0xEB00000000656369) {
        break;
      }
      char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v109) {
        goto LABEL_83;
      }
      uint64_t v107 = v133;
      uint64_t v103 = v140;
      v137((uint64_t)v133, v140);
      v105 += v106;
      if (!--v102)
      {
        uint64_t v110 = 1;
        uint64_t v90 = v103;
        uint64_t v111 = (uint64_t)v130;
        goto LABEL_84;
      }
    }
    swift_bridgeObjectRelease();
LABEL_83:
    uint64_t v111 = (uint64_t)v130;
    uint64_t v90 = v140;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v130, v133, v140);
    uint64_t v110 = 0;
LABEL_84:
    uint64_t v41 = v129;
    uint64_t v44 = v128;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v110 = 1;
    uint64_t v111 = (uint64_t)v130;
  }
  v41(v111, v110, 1, v90);
  swift_bridgeObjectRelease();
  if (v44(v111, 1, v90) == 1)
  {
    sub_10000950C(v111, &qword_100389E18);
LABEL_91:
    uint64_t v119 = 0;
    char v118 = 1;
    char v117 = (char)v132;
    goto LABEL_92;
  }
  uint64_t v112 = URLQueryItem.value.getter();
  uint64_t v114 = v113;
  v137(v111, v90);
  if (!v114) {
    goto LABEL_91;
  }
  swift_bridgeObjectRetain();
  v115._uint64_t countAndFlagsBits = v112;
  v115._object = v114;
  Swift::Int v116 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349F00, v115);
  swift_bridgeObjectRelease();
  char v117 = (char)v132;
  if (v116 == 1)
  {
    swift_bridgeObjectRelease();
    char v118 = 0;
    uint64_t v119 = 8;
  }
  else if (v116)
  {
    swift_bridgeObjectRetain();
    uint64_t v122 = Logger.logObject.getter();
    os_log_type_t v123 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = (uint8_t *)swift_slowAlloc();
      uint64_t v141 = swift_slowAlloc();
      *(_DWORD *)uint64_t v124 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v151 = sub_1001B3178(v112, (unint64_t)v114, &v141);
      char v117 = (char)v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v122, v123, "request command: fromService '%{public}s' is not supported", v124, 0xCu);
      char v118 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v119 = 0;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v119 = 0;
      char v118 = 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v118 = 0;
    uint64_t v119 = 1;
  }
LABEL_92:
  uint64_t v66 = 1;
  if (v117) {
    char v120 = 1;
  }
  else {
    char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  uint64_t v121 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000024, 0x80000001002D0BD0);
  uint64_t v141 = v126;
  LOBYTE(v142) = v120 & 1;
  uint64_t v143 = v134;
  char v144 = (char)v131;
  uint64_t v145 = v119;
  char v146 = v118;
  char v147 = 2;
  char v148 = v117;
  char v149 = 1;
  uint64_t v150 = v121;
  PassthroughSubject.send(_:)();
  swift_release();
  return v66;
}

uint64_t sub_10016FB28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v93[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v4);
  unint64_t v105 = &v93[-v8];
  __chkstk_darwin(v7);
  uint64_t v10 = &v93[-v9];
  uint64_t v11 = sub_100004010(&qword_100389E18);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v99 = &v93[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v100 = &v93[-v15];
  __chkstk_darwin(v14);
  Swift::Int v104 = (void (*)(uint64_t, uint64_t))&v93[-v16];
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_10000FD84(v17, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v103 = v18;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v106 = v3;
  uint64_t v107 = v2;
  uint64_t v102 = v6;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v115 = a1;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v115 = sub_1001B3178(v23, v24, &v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v107;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "handleAlert(%{public}s)", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v106;
    swift_slowDealloc();

    if (!a1) {
      goto LABEL_24;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a1) {
      goto LABEL_24;
    }
  }
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v101 = a1;
  if (v25)
  {
    uint64_t v26 = a1;
    uint64_t v29 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v27 = v3 + 16;
    BOOL v28 = v29;
    unint64_t v30 = v26 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
    uint64_t v31 = *(void *)(v27 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v28(v10, v30, v2);
      if (URLQueryItem.name.getter() == 0x6E694B7472656C61 && v32 == 0xE900000000000064) {
        break;
      }
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v33) {
        goto LABEL_17;
      }
      uint64_t v2 = v107;
      (*(void (**)(unsigned char *, uint64_t))(v27 - 8))(v10, v107);
      v30 += v31;
      if (!--v25) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v34 = v106;
    uint64_t v2 = v107;
    uint64_t v36 = (uint64_t)v104;
    (*(void (**)(void (*)(uint64_t, uint64_t), unsigned char *, uint64_t))(v106 + 32))(v104, v10, v107);
    unint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
    v35(v36, 0, 1, v2);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v34 = v106;
    unint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
    uint64_t v36 = (uint64_t)v104;
    v35((uint64_t)v104, 1, 1, v2);
  }
  uint64_t v37 = v101;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v38(v36, 1, v2) == 1)
  {
    sub_10000950C(v36, &qword_100389E18);
    goto LABEL_24;
  }
  uint64_t v39 = URLQueryItem.value.getter();
  uint64_t v41 = v40;
  Swift::Int v104 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v104(v36, v2);
  if (v41)
  {
    swift_bridgeObjectRetain();
    v42._uint64_t countAndFlagsBits = v39;
    v42._object = v41;
    Swift::Int v43 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349FD8, v42);
    swift_bridgeObjectRelease();
    if (v43)
    {
      if (v43 != 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          uint64_t v108 = swift_slowAlloc();
          *(_DWORD *)uint64_t v61 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v115 = sub_1001B3178(v39, (unint64_t)v41, &v108);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "alert command: alertKind '%{public}s' is not supported", v61, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return 0;
        }

        goto LABEL_75;
      }
      uint64_t v97 = v38;
      int v94 = 1;
    }
    else
    {
      uint64_t v97 = v38;
      int v94 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(v37 + 16);
    uint64_t v50 = v105;
    uint64_t v95 = v34 + 48;
    uint64_t v96 = v35;
    if (v49)
    {
      char v51 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v34 + 16);
      unint64_t v52 = v37 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v53 = *(void *)(v34 + 72);
      swift_bridgeObjectRetain();
      unint64_t v98 = 0x80000001002D0B70;
      uint64_t v54 = v49;
      while (1)
      {
        v51(v50, v52, v2);
        if (URLQueryItem.name.getter() == 0xD000000000000013 && v55 == v98) {
          break;
        }
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v56) {
          goto LABEL_43;
        }
        uint64_t v50 = v105;
        uint64_t v2 = v107;
        v104((uint64_t)v105, v107);
        v52 += v53;
        if (!--v54)
        {
          uint64_t v57 = 1;
          uint64_t v58 = (uint64_t)v100;
          uint64_t v37 = v101;
          uint64_t v34 = v106;
          goto LABEL_44;
        }
      }
      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t v34 = v106;
      uint64_t v58 = (uint64_t)v100;
      uint64_t v2 = v107;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v100, v105, v107);
      uint64_t v57 = 0;
      uint64_t v37 = v101;
LABEL_44:
      unint64_t v35 = v96;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = 1;
      uint64_t v58 = (uint64_t)v100;
    }
    unint64_t v105 = (unsigned char *)(v34 + 56);
    v35(v58, v57, 1, v2);
    swift_bridgeObjectRelease();
    if (v97(v58, 1, v2) == 1)
    {
      sub_10000950C(v58, &qword_100389E18);
      unint64_t v62 = 0;
      LODWORD(v100) = 1;
LABEL_51:
      if (v49)
      {
        unint64_t v98 = v62;
        uint64_t v70 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v34 + 16);
        unint64_t v71 = v37 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
        uint64_t v72 = *(void *)(v34 + 72);
        swift_bridgeObjectRetain();
        uint64_t v73 = v102;
        while (1)
        {
          v70(v73, v71, v2);
          if (URLQueryItem.name.getter() == 0xD000000000000013 && v74 == 0x80000001002D0B90) {
            break;
          }
          char v75 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v75) {
            goto LABEL_60;
          }
          uint64_t v73 = v102;
          uint64_t v2 = v107;
          v104((uint64_t)v102, v107);
          v71 += v72;
          if (!--v49)
          {
            uint64_t v76 = 1;
            uint64_t v77 = (uint64_t)v99;
            goto LABEL_61;
          }
        }
        swift_bridgeObjectRelease();
LABEL_60:
        uint64_t v2 = v107;
        uint64_t v77 = (uint64_t)v99;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v99, v102, v107);
        uint64_t v76 = 0;
LABEL_61:
        unint64_t v35 = v96;
        unint64_t v62 = v98;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v76 = 1;
        uint64_t v77 = (uint64_t)v99;
      }
      v35(v77, v76, 1, v2);
      swift_bridgeObjectRelease();
      if (v97(v77, 1, v2) == 1)
      {
        sub_10000950C(v77, &qword_100389E18);
LABEL_67:
        uint64_t v82 = 0;
        char v84 = 1;
        goto LABEL_68;
      }
      uint64_t v78 = URLQueryItem.value.getter();
      uint64_t v79 = v2;
      uint64_t v81 = v80;
      v104(v77, v79);
      if (!v81) {
        goto LABEL_67;
      }
      uint64_t v82 = sub_1001B7C10(v78, v81);
      if ((v83 & 1) == 0)
      {
        char v84 = 0;
LABEL_68:
        type metadata accessor for PreventSuspensionAssertion();
        swift_allocObject();
        uint64_t v85 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000017, 0x80000001002D0BB0);
        LOBYTE(v108) = v94;
        unint64_t v109 = v62;
        char v110 = (char)v100;
        uint64_t v111 = v82;
        char v112 = v84;
        uint64_t v47 = 1;
        char v113 = 1;
        uint64_t v114 = v85;
        PassthroughSubject.send(_:)();
        swift_release();
        return v47;
      }
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v88 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v44, v88)) {
        goto LABEL_27;
      }
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136446210;
      uint64_t v115 = v90;
      uint64_t v108 = v82;
      LOBYTE(v109) = 1;
      sub_100004010(&qword_100382420);
      uint64_t v91 = String.init<A>(describing:)();
      uint64_t v108 = sub_1001B3178(v91, v92, &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v88, "alert command: resumableProviderId '%{public}s' is invalid, uint expected", v89, 0xCu);
      swift_arrayDestroy();
LABEL_73:
      swift_slowDealloc();
      goto LABEL_26;
    }
    uint64_t v63 = URLQueryItem.value.getter();
    uint64_t v64 = v2;
    unint64_t v66 = v65;
    v104(v58, v64);
    if (!v66)
    {
      unint64_t v62 = 0;
      LODWORD(v100) = 1;
      uint64_t v2 = v107;
      goto LABEL_51;
    }
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1001B7C10(v63, v66);
    if ((v68 & 1) == 0)
    {
      uint64_t v69 = v67;
      swift_bridgeObjectRelease();
      LODWORD(v100) = 0;
      uint64_t v2 = v107;
      unint64_t v62 = v69;
      goto LABEL_51;
    }
    swift_bridgeObjectRetain();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v115 = sub_1001B3178(v63, v66, &v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v44, v86, "alert command: requestedProviderId '%{public}s' is invalid, uint expected", v87, 0xCu);
      swift_arrayDestroy();
      goto LABEL_73;
    }

LABEL_75:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_24:
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "alert command: alertKind is missing", v46, 2u);
LABEL_26:
    swift_slowDealloc();
  }
LABEL_27:

  return 0;
}

uint64_t sub_1001708B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v65 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v58 - v6;
  uint64_t v8 = sub_100004010(&qword_100389E18);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v62 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v66 = (char *)&v58 - v11;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_10000FD84(v12, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v67 = v13;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v16 + 4);
    uint64_t v69 = a1;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v69 = sub_1001B3178(v17, v18, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "handleOffer(%{public}s)", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!a1) {
      goto LABEL_24;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a1)
    {
LABEL_24:
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        Swift::Int v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::Int v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "offer command: offerKind is missing", v43, 2u);
        swift_slowDealloc();
      }

      return 0;
    }
  }
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v63 = v3;
  uint64_t v64 = a1;
  if (v19)
  {
    uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v21 = v3 + 16;
    os_log_type_t v20 = v22;
    unint64_t v23 = a1 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v24 = *(void *)(v21 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v20(v7, v23, v2);
      if (URLQueryItem.name.getter() == 0x6E694B726566666FLL && v25 == 0xE900000000000064) {
        break;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v21 - 8))(v7, v2);
      v23 += v24;
      if (!--v19) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v27 = v63;
    uint64_t v29 = (uint64_t)v66;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v66, v7, v2);
    BOOL v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
    v28(v29, 0, 1, v2);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v27 = v63;
    BOOL v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
    uint64_t v29 = (uint64_t)v66;
    v28((uint64_t)v66, 1, 1, v2);
  }
  uint64_t v30 = v64;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v31(v29, 1, v2) == 1)
  {
    sub_10000950C(v29, &qword_100389E18);
    goto LABEL_24;
  }
  uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
  uint64_t v32 = URLQueryItem.value.getter();
  uint64_t v34 = v33;
  unint64_t v35 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v35(v29, v2);
  if (!v34) {
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v36._uint64_t countAndFlagsBits = v32;
  v36._object = v34;
  Swift::Int v37 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10034A028, v36);
  swift_bridgeObjectRelease();
  if (v37)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1001B3178(v32, (unint64_t)v34, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "offer command: offerKind '%{public}s' is not supported", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  uint64_t v60 = v32;
  uint64_t v45 = *(void *)(v30 + 16);
  if (v45)
  {
    uint64_t v58 = v28;
    uint64_t v59 = v34;
    unint64_t v66 = *(char **)(v27 + 16);
    unint64_t v46 = v30 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    uint64_t v47 = *(void *)(v27 + 72);
    swift_bridgeObjectRetain();
    uint64_t v48 = v65;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v66)(v48, v46, v2);
      if (URLQueryItem.name.getter() == 0x66664F7473726966 && v49 == 0xEA00000000007265) {
        break;
      }
      char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v50) {
        goto LABEL_38;
      }
      uint64_t v48 = v65;
      v35((uint64_t)v65, v2);
      v46 += v47;
      if (!--v45)
      {
        uint64_t v51 = 1;
        uint64_t v52 = (uint64_t)v62;
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRelease();
LABEL_38:
    uint64_t v52 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v65, v2);
    uint64_t v51 = 0;
LABEL_39:
    BOOL v28 = v58;
    uint64_t v34 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = 1;
    uint64_t v52 = (uint64_t)v62;
  }
  v28(v52, v51, 1, v2);
  swift_bridgeObjectRelease();
  int v53 = v61(v52, 1, v2);
  sub_10000950C(v52, &qword_100389E18);
  swift_bridgeObjectRetain();
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1001B3178(v60, (unint64_t)v34, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v56 + 12) = 1026;
    LODWORD(v69) = v53 != 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "offer command: offerKind: '%{public}s', first offer: '%{BOOL,public}d'", (uint8_t *)v56, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  uint64_t v57 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000017, 0x80000001002D0B50);
  LOBYTE(v68[0]) = v53 != 1;
  v68[1] = v57;
  PassthroughSubject.send(_:)();
  swift_release();
  return 1;
}

uint64_t sub_10017128C()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  Swift::OpaquePointer v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "handleMessagingRequest(bringForeground = %{BOOL,public}d)", v3, 8u);
    swift_slowDealloc();
  }

  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD00000000000001BLL, 0x80000001002D0B30);
  PassthroughSubject.send(_:)();
  swift_release();
  return 1;
}

uint64_t sub_100171420()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  Swift::OpaquePointer v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "handleFindMyRequest(bringForeground = %{BOOL,public}d)", v3, 8u);
    swift_slowDealloc();
  }

  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000018, 0x80000001002D0B10);
  PassthroughSubject.send(_:)();
  swift_release();
  return 1;
}

uint64_t sub_1001715B0(char a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "handleTryOut(stewieAppId = %{public}s)", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  uint64_t v8 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD00000000000001DLL, 0x80000001002D0AF0);
  LOBYTE(v10[0]) = a1;
  BYTE1(v10[0]) = 1;
  v10[1] = v8;
  PassthroughSubject.send(_:)();
  swift_release();
  return 1;
}

uint64_t sub_1001717C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_100389E18);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v40 = v10;
  if (v14)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v42 = v2;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v43 = a1;
    v44[0] = v17;
    uint64_t v41 = v5;
    *(_DWORD *)uint64_t v16 = 136446210;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v43 = sub_1001B3178(v18, v19, v44);
    uint64_t v5 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "handleOpen(%{public}s)", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v42;
    swift_slowDealloc();

    if (!a1) {
      goto LABEL_21;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a1) {
      goto LABEL_21;
    }
  }
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v41 = v5;
    uint64_t v42 = v2;
    unint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v22 = v5 + 16;
    uint64_t v21 = v23;
    unint64_t v24 = a1 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
    uint64_t v25 = *(void *)(v22 + 56);
    v39[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v7, v24, v4);
      if (URLQueryItem.name.getter() == 0x6574736575716572 && v26 == 0xE900000000000072) {
        break;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v22 - 8))(v7, v4);
      v24 += v25;
      if (!--v20)
      {
        uint64_t v28 = 1;
        uint64_t v5 = v41;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v29 = (uint64_t)v40;
    uint64_t v5 = v41;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v7, v4);
    uint64_t v28 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = 1;
LABEL_15:
    uint64_t v29 = (uint64_t)v40;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v29, v28, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v29, 1, v4) == 1)
  {
    sub_10000950C(v29, &qword_100389E18);
  }
  else
  {
    uint64_t v30 = URLQueryItem.value.getter();
    uint64_t v32 = v31;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v30 = 0;
  uint64_t v32 = (void *)0xE000000000000000;
LABEL_22:
  v33._uint64_t countAndFlagsBits = v30;
  v33._object = v32;
  Swift::Int v34 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349F88, v33);
  swift_bridgeObjectRelease();
  if (v34 == 1) {
    char v35 = 1;
  }
  else {
    char v35 = 2;
  }
  if (v34) {
    char v36 = v35;
  }
  else {
    char v36 = 0;
  }
  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  uint64_t v37 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0x69737365636F7250, 0xEF6E65704F20676ELL);
  LOBYTE(v44[0]) = 1;
  BYTE1(v44[0]) = v36;
  v44[1] = v37;
  PassthroughSubject.send(_:)();
  swift_release();
  return 1;
}

uint64_t sub_100171CF0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100171D48()
{
  sub_100171CF0();

  return swift_deallocClassInstance();
}

void *sub_100171D7C()
{
  sub_100004010(&qword_100389E38);
  swift_allocObject();
  v0[2] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E40);
  swift_allocObject();
  v0[3] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E48);
  swift_allocObject();
  v0[4] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E50);
  swift_allocObject();
  v0[5] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E58);
  swift_allocObject();
  v0[6] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E60);
  swift_allocObject();
  v0[7] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E68);
  swift_allocObject();
  v0[8] = PassthroughSubject.init()();
  sub_100004010(&qword_100389E70);
  swift_allocObject();
  v0[9] = PassthroughSubject.init()();
  return v0;
}

unint64_t sub_100171EC0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349C88, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t _s8SOSBuddy20RequestCommandReasonO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349D20, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

unint64_t _s8SOSBuddy24RequestCommandEntryPointO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349E30, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_100171FA8()
{
  unint64_t result = qword_100389CA8;
  if (!qword_100389CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CA8);
  }
  return result;
}

unint64_t sub_100172000()
{
  unint64_t result = qword_100389CB0;
  if (!qword_100389CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CB0);
  }
  return result;
}

unint64_t sub_100172058()
{
  unint64_t result = qword_100389CB8;
  if (!qword_100389CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CB8);
  }
  return result;
}

unint64_t sub_1001720B0()
{
  unint64_t result = qword_100389CC0;
  if (!qword_100389CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CC0);
  }
  return result;
}

unint64_t sub_100172108()
{
  unint64_t result = qword_100389CC8;
  if (!qword_100389CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CC8);
  }
  return result;
}

unint64_t sub_100172160()
{
  unint64_t result = qword_100389CD0;
  if (!qword_100389CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CD0);
  }
  return result;
}

unint64_t sub_1001721B8()
{
  unint64_t result = qword_100389CD8;
  if (!qword_100389CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CD8);
  }
  return result;
}

unint64_t sub_100172210()
{
  unint64_t result = qword_100389CE0;
  if (!qword_100389CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389CE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RequestCommandReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100172330);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestCommandReason()
{
  return &type metadata for RequestCommandReason;
}

unsigned char *storeEnumTagSinglePayload for RequestCommandEntryPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100172434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestCommandEntryPoint()
{
  return &type metadata for RequestCommandEntryPoint;
}

ValueMetadata *type metadata accessor for RequestCommandFromService()
{
  return &type metadata for RequestCommandFromService;
}

ValueMetadata *type metadata accessor for RequestCommandAction()
{
  return &type metadata for RequestCommandAction;
}

ValueMetadata *type metadata accessor for ExitCommandReason()
{
  return &type metadata for ExitCommandReason;
}

ValueMetadata *type metadata accessor for OpenCommandRequester()
{
  return &type metadata for OpenCommandRequester;
}

unsigned char *_s8SOSBuddy20RequestCommandActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100172580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertCommandKind()
{
  return &type metadata for AlertCommandKind;
}

unsigned char *_s8SOSBuddy16OfferCommandKindOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100172654);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferCommandKind()
{
  return &type metadata for OfferCommandKind;
}

uint64_t type metadata accessor for DeepLinkHandler()
{
  return self;
}

uint64_t assignWithCopy for DeepLinkHandler.OfferTryOutRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkHandler.OfferTryOutRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.OpenCommandContext()
{
  return &type metadata for DeepLinkHandler.OpenCommandContext;
}

uint64_t _s8SOSBuddy15DeepLinkHandlerC25OfferTryOutRequestContextVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.OfferTryOutRequestContext()
{
  return &type metadata for DeepLinkHandler.OfferTryOutRequestContext;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.FindMyRequestContext()
{
  return &type metadata for DeepLinkHandler.FindMyRequestContext;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.MessagingRequestContext()
{
  return &type metadata for DeepLinkHandler.MessagingRequestContext;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.OfferRequestContext()
{
  return &type metadata for DeepLinkHandler.OfferRequestContext;
}

uint64_t destroy for DeepLinkHandler.AlertRequestContext()
{
  return swift_release();
}

uint64_t initializeWithCopy for DeepLinkHandler.AlertRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkHandler.AlertRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkHandler.AlertRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.AlertRequestContext()
{
  return &type metadata for DeepLinkHandler.AlertRequestContext;
}

uint64_t destroy for DeepLinkHandler.RoadsideAssistanceRequestContext()
{
  return swift_release();
}

uint64_t initializeWithCopy for DeepLinkHandler.RoadsideAssistanceRequestContext(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkHandler.RoadsideAssistanceRequestContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkHandler.RoadsideAssistanceRequestContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkHandler.RoadsideAssistanceRequestContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkHandler.RoadsideAssistanceRequestContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.RoadsideAssistanceRequestContext()
{
  return &type metadata for DeepLinkHandler.RoadsideAssistanceRequestContext;
}

uint64_t initializeWithCopy for DeepLinkHandler.EmergencyRequestContext(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkHandler.EmergencyRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkHandler.EmergencyRequestContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpeningMessagesButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpeningMessagesButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkHandler.EmergencyRequestContext()
{
  return &type metadata for DeepLinkHandler.EmergencyRequestContext;
}

BOOL sub_100172CF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100389E18);
  __chkstk_darwin(v6 - 8);
  uint64_t v32 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v34 = a1;
    uint64_t v35 = v12;
    uint64_t v33 = v3;
    *(_DWORD *)uint64_t v11 = 136446210;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100389E20);
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v34 = sub_1001B3178(v13, v14, &v35);
    uint64_t v3 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "handleExit(%{public}s)", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!a1) {
      goto LABEL_21;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!a1)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      char v27 = (void *)0xE000000000000000;
      goto LABEL_22;
    }
  }
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v33 = v3;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v16 = v3 + 16;
    uint64_t v17 = v18;
    unint64_t v19 = a1 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v20 = *(void *)(v16 + 56);
    v31[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      v17(v5, v19, v2);
      if (URLQueryItem.name.getter() == 0x6E6F73616572 && v21 == 0xE600000000000000) {
        break;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v16 - 8))(v5, v2);
      v19 += v20;
      if (!--v15)
      {
        uint64_t v23 = 1;
        uint64_t v3 = v33;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v24 = (uint64_t)v32;
    uint64_t v3 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v5, v2);
    uint64_t v23 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = 1;
LABEL_15:
    uint64_t v24 = (uint64_t)v32;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v24, v23, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v24, 1, v2) == 1)
  {
    sub_10000950C(v24, &qword_100389E18);
    goto LABEL_21;
  }
  uint64_t v25 = URLQueryItem.value.getter();
  char v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v2);
  if (!v27) {
    goto LABEL_21;
  }
LABEL_22:
  v28._uint64_t countAndFlagsBits = v25;
  v28._object = v27;
  Swift::Int v29 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100349F50, v28);
  swift_bridgeObjectRelease();
  return v29 == 0;
}

unint64_t sub_100173174()
{
  unint64_t result = qword_100389E30;
  if (!qword_100389E30)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100389E30);
  }
  return result;
}

uint64_t sub_1001731D8(uint64_t a1)
{
  uint64_t v3 = sub_100004010(&qword_100380788);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(void *)(a1 + 96);
  char v10 = *(unsigned char *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 48);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = v11;
  *(_OWORD *)(v1 + 72) = v12;
  *(_OWORD *)(v1 + 88) = v13;
  *(void *)(v1 + 104) = v9;
  *(unsigned char *)(v1 + 112) = v10;
  static DispatchTime.now()();
  uint64_t v14 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  sub_100174024((uint64_t)v8, (uint64_t)v6);
  uint64_t v15 = v1 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentDeviceOrientationAt;
  swift_beginAccess();
  sub_10002D2A8((uint64_t)v6, v15);
  swift_endAccess();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentIsStationary) = 0;
  sub_100173338();
  return sub_1001739C0();
}

void sub_100173338()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 112)) {
    return;
  }
  int v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentTargetInGreenZone);
  if (v6 == 2) {
    return;
  }
  int v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentIsStationary);
  if (v7 == 2) {
    return;
  }
  double v8 = *(double *)(v0 + 40);
  uint64_t v9 = OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_lastDataSent;
  char v10 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_lastDataSent);
  if (v10)
  {
    id v11 = v10;
    if ((v6 ^ [v11 targetLocked]))
    {
    }
    else
    {
      unsigned int v12 = [v11 isDeviceStationary];

      if (((v7 ^ v12) & 1) == 0) {
        return;
      }
    }
  }
  if (*(unsigned char *)(v1 + 24))
  {
    if (qword_10037DDA8 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000FD84(v13, (uint64_t)qword_1003A99D0);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Device orientation data changed, reporting", v16, 2u);
      swift_slowDealloc();
    }

    id v17 = [objc_allocWithZone((Class)CTStewieDeviceOrientationData) init];
    static Date.now.getter();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    [v17 setTimestamp:isa];

    [v17 setTargetLocked:v6 & 1];
    [v17 setIsDeviceStationary:v7 & 1];
    double v19 = v8 * 57.2957795;
    if ((~COERCE__INT64(v8 * 57.2957795) & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 >= 9.22337204e18)
        {
          __break(1u);
        }
        else
        {
          [v17 setX:(uint64_t)v19];
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            uint64_t v21 = (void *)Strong;
            sub_100275904(v17);
          }
          char v22 = *(void **)(v1 + v9);
          *(void *)(v1 + v9) = v17;
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  if (qword_10037DDA8 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000FD84(v23, (uint64_t)qword_1003A99D0);
  os_log_t v28 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v24, "Device orientation data changed, but tracking is off, reporting skipped", v25, 2u);
    swift_slowDealloc();
  }
  os_log_t v26 = v28;
}

uint64_t sub_100173738()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v19 - v10;
  *(void *)(v1 + 32) = 0;
  uint64_t result = swift_release();
  if (*(unsigned char *)(v1 + 112)) {
    return result;
  }
  uint64_t v13 = v1 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentDeviceOrientationAt;
  swift_beginAccess();
  sub_100173EF0(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_100156A1C((uint64_t)v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  static DispatchTime.now()();
  unint64_t v14 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v14) {
    goto LABEL_7;
  }
  unint64_t v15 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v16 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v17 = v15 - v16;
  if (v15 < v16)
  {
    __break(1u);
LABEL_7:
    unint64_t v17 = 0;
  }
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  if (v17 > 0xDF84757FFLL)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentIsStationary) = 1;
  }
  else
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentIsStationary) = 0;
    sub_1001739C0(60000 - v17 / 0xF4240);
  }
  sub_100173338();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v5);
}

uint64_t sub_1001739C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_1003838E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    if (!*(void *)(v1 + 32))
    {
      id v11 = [self mainRunLoop];
      uint64_t v12 = type metadata accessor for NSRunLoop.SchedulerOptions();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
      type metadata accessor for NSTimer.TimerPublisher();
      swift_allocObject();
      uint64_t v13 = NSDefaultRunLoopMode;
      uint64_t v17 = NSTimer.TimerPublisher.init(interval:tolerance:runLoop:mode:options:)();
      sub_10008810C();
      uint64_t v14 = ConnectablePublisher.autoconnect()();
      swift_release();
      uint64_t v17 = v14;
      swift_allocObject();
      swift_weakInit();
      sub_100004010(&qword_100383900);
      sub_1000881A4();
      uint64_t v15 = Publisher<>.sink(receiveValue:)();
      swift_release();
      swift_release();
      *(void *)(v1 + 32) = v15;
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100173CAC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100173738();
    return swift_release();
  }
  return result;
}

uint64_t sub_100173D04()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  sub_100156A1C(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentDeviceOrientationAt);

  return swift_deallocClassInstance();
}

uint64_t sub_100173D88()
{
  return type metadata accessor for DeviceOrientationTracker();
}

uint64_t type metadata accessor for DeviceOrientationTracker()
{
  uint64_t result = qword_100389EC8;
  if (!qword_100389EC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100173DDC()
{
  sub_10002D190();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100173EB0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100173EE8()
{
  return sub_100173CAC();
}

uint64_t sub_100173EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100380788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100173F58()
{
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v0 + 24) = 1;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(unsigned char *)(v0 + 112) = 1;
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentDeviceOrientationAt;
  uint64_t v2 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentTargetInGreenZone) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentIsStationary) = 2;
  *(void *)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_kMsOfNoMovementToConsiderStationary) = 60000;
  *(void *)(v0 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_lastDataSent) = 0;
  return v0;
}

uint64_t sub_100174024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_100380788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BuiltInSwitchToEmergencyFooterView()
{
  return &type metadata for BuiltInSwitchToEmergencyFooterView;
}

uint64_t sub_10017409C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001740B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    if (a1[8]
      && (uint64_t v3 = a1[15], (sub_100078E0C(0, a1[11]) & 1) != 0)
      && ((v3 & 0xFF00) != 0x200 ? (BOOL v4 = (v3 & 0x100) == 0) : (BOOL v4 = 1), !v4))
    {
      type metadata accessor for AppEvents();
      sub_10017433C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      uint64_t v5 = EnvironmentObject.init()();
      uint64_t v7 = v6;
      type metadata accessor for UIMetrics();
      sub_10017433C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      v10[0] = v5;
      v10[1] = v7;
      uint64_t v10[2] = EnvironmentObject.init()();
      v10[3] = v8;
      char v11 = static Edge.Set.top.getter();
      long long v12 = 0u;
      long long v13 = 0u;
      char v14 = 1;
      char v15 = static Edge.Set.bottom.getter();
      long long v16 = 0u;
      long long v17 = 0u;
      char v18 = 1;
      ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter(v10);
    }
    else
    {
      sub_1001742A4((uint64_t)v10);
    }
    sub_1001742D4((uint64_t)v10, (uint64_t)v19);
    return sub_1001742D4((uint64_t)v19, a2);
  }
  else
  {
    type metadata accessor for StewieModel();
    sub_10017433C(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10017429C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001740B8(*v1, a1);
}

double sub_1001742A4(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_1001742D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038A090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017433C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100174388()
{
  unint64_t result = qword_10038A098;
  if (!qword_10038A098)
  {
    sub_1000094C4(&qword_10038A090);
    sub_100174448(&qword_10038A0A0, &qword_10038A0A8, (void (*)(void))sub_100174420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A098);
  }
  return result;
}

uint64_t sub_100174420()
{
  return sub_100174448(&qword_10038A0B0, &qword_10038A0B8, (void (*)(void))sub_1001744C8);
}

uint64_t sub_100174448(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001744C8()
{
  unint64_t result = qword_10038A0C0;
  if (!qword_10038A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A0C0);
  }
  return result;
}

uint64_t sub_10017451C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100004010(&qword_10038A1F8);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    long long v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1000A30C0(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    void v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10004A864(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_10004A864(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_10004A864(v36, v37);
    sub_10004A864(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_10004A864(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_100075DBC();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001748E4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100004010(&qword_1003930D0);
    uint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v31[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    *(void *)&v30[0] = v15;
    id v16 = *(id *)&v31[0];
    swift_bridgeObjectRetain();
    sub_100004010(&qword_10038A220);
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    sub_10004A864((_OWORD *)((char *)v31 + 8), v29);
    sub_10004A864(v29, v31);
    sub_10004A864(v31, v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << v2[32];
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v17;
    uint64_t result = (uint64_t)sub_10004A864(v30, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_100075DBC();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100174C8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100174D38()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  __chkstk_darwin(v2);
  char v22 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_100004010(&qword_10038A228);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  uint64_t v6 = v0 + OBJC_IVAR____TtC8SOSBuddy13MessagesAgent__lastTransmissionProgress;
  uint64_t v7 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  id v8 = [self mainBundle];
  id v9 = [v8 bundleIdentifier];

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v12 = 0x80000001002C5A40;
    uint64_t v10 = 0xD000000000000012;
  }
  sub_10000FDBC();
  v26[0] = v10;
  v26[1] = v12;
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = 0x746E6567616D692ELL;
  v13._object = (void *)0xE800000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v26[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10017C0E4((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v24);
  *(void *)(v1 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000FD84(v14, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = v1;
    v26[0] = v18;
    *(_DWORD *)uint64_t v17 = 136446210;
    type metadata accessor for MessagesAgent();
    swift_retain();
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v25 = sub_1001B3178(v19, v20, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%{public}s] init", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_10017520C()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for MessagesAgent();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();

  sub_10000950C(v1 + OBJC_IVAR____TtC8SOSBuddy13MessagesAgent__lastTransmissionProgress, &qword_10037F158);
  return v1;
}

uint64_t sub_100175400()
{
  sub_10017520C();

  return swift_deallocClassInstance();
}

uint64_t sub_100175458()
{
  return type metadata accessor for MessagesAgent();
}

uint64_t type metadata accessor for MessagesAgent()
{
  uint64_t result = qword_10038A0F8;
  if (!qword_10038A0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001754AC()
{
  sub_1001784CC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100175558()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9AA8);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "MessagesAgent stop", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v1 + OBJC_IVAR____TtC8SOSBuddy13MessagesAgent__lastTransmissionProgress;
  swift_beginAccess();
  sub_10017C07C((uint64_t)v4, v10);
  return swift_endAccess();
}

void sub_100175700()
{
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9AA8);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136446466;
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100383AE8);
    uint64_t v3 = String.init<A>(describing:)();
    sub_1001B3178(v3, v4, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v2 + 12) = 2082;
    swift_errorRetain();
    sub_100004010(&qword_100385630);
    uint64_t v5 = String.init<A>(describing:)();
    sub_1001B3178(v5, v6, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Opening Messages result: %{public}s, %{public}s", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_10017597C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v135 = a4;
  uint64_t v136 = a1;
  uint64_t v137 = a2;
  uint64_t v134 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  char v131 = &v124[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v132 = type metadata accessor for DispatchQoS();
  uint64_t v130 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  long long v129 = &v124[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100004010(&qword_100382428);
  __chkstk_darwin(v7 - 8);
  uint64_t v127 = &v124[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v138 = type metadata accessor for Locale.Language();
  uint64_t v9 = *(void *)(v138 - 8);
  uint64_t v10 = __chkstk_darwin(v138);
  uint64_t v12 = &v124[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v124[-v13];
  uint64_t v15 = sub_100004010(&qword_10038A200);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = &v124[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10037DDF0 != -1) {
    goto LABEL_54;
  }
  while (1)
  {
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v19 = sub_10000FD84(v18, (uint64_t)qword_1003A9AA8);
    swift_retain();
    uint64_t v128 = v19;
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      char v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v22 = 134349056;
      *(void *)&long long v141 = v136;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "startEmergencyThread - conversationId:%{public}llu", v22, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    uint64_t v23 = a3;
    LODWORD(v139) = v137 & 0x100;
    long long v151 = xmmword_1002BD800;
    uint64_t v140 = a3;
    if (a3)
    {
      swift_retain();
      Locale.language.getter();
      Locale.Language.languageCode.getter();
      uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
      v24(v14, v138);
      uint64_t v25 = type metadata accessor for Locale.LanguageCode();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48))(v17, 1, v25) == 1)
      {
        sub_10000950C((uint64_t)v17, &qword_10038A200);
        uint64_t v27 = 0;
        int64_t v28 = 0;
      }
      else
      {
        uint64_t v30 = Locale.LanguageCode.identifier.getter();
        int64_t v28 = v31;
        (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v17, v25);
        uint64_t v27 = v30;
      }
      Locale.language.getter();
      uint64_t v32 = (uint64_t)v127;
      Locale.Language.region.getter();
      v24(v12, v138);
      uint64_t v33 = type metadata accessor for Locale.Region();
      uint64_t v34 = *(void *)(v33 - 8);
      int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33);
      uint64_t v36 = v140;
      if (v35 == 1)
      {
        sub_10000950C(v32, &qword_100382428);
        uint64_t v37 = 0;
        uint64_t v38 = 0;
      }
      else
      {
        uint64_t v37 = Locale.Region.identifier.getter();
        uint64_t v38 = v39;
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      }
      swift_beginAccess();
      sub_1000090FC(v36 + 80, (uint64_t)v148);
      uint64_t v40 = *(void *)(v36 + 264);
      unint64_t v41 = *(void *)(v40 + 88);
      char v42 = *(unsigned char *)(v40 + 32);
      sub_1000A311C(v36 + 48, (uint64_t)&v141);
      uint64_t v43 = sub_10025B4A8(v41, v42, v27, v28, v37, v38, v148, (unint64_t)&v141);
      uint64_t v44 = v27;
      uint64_t v45 = 0;
      uint64_t v46 = v43;
      uint64_t v47 = v37;
      unint64_t v49 = v48;
      uint64_t v135 = v47;
      uint64_t v138 = v44;
      sub_1000A3178((uint64_t)&v141);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v148);
      sub_10000FD70(v151, *((unint64_t *)&v151 + 1));
      *(void *)&long long v151 = v46;
      *((void *)&v151 + 1) = v49;
      sub_10000F1F0(v46, v49);
      sub_10000F1F0(v46, v49);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      int v52 = v51;
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v53 = swift_slowAlloc();
        int v125 = v52;
        uint64_t v54 = v53;
        uint64_t v126 = swift_slowAlloc();
        *(void *)&v148[0] = v126;
        *(_DWORD *)uint64_t v54 = 136381187;
        *(void *)&long long v141 = v46;
        *((void *)&v141 + 1) = v49;
        sub_10000F1F0(v46, v49);
        sub_100004010(&qword_10038A210);
        uint64_t v127 = 0;
        uint64_t v55 = String.init<A>(describing:)();
        *(void *)&long long v141 = sub_1001B3178(v55, v56, (uint64_t *)v148);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000F294(v46, v49);
        sub_10000F294(v46, v49);
        *(_WORD *)(v54 + 12) = 2082;
        *(void *)&long long v141 = v138;
        *((void *)&v141 + 1) = v28;
        swift_bridgeObjectRetain();
        sub_100004010(&qword_100380920);
        uint64_t v57 = String.init<A>(describing:)();
        *(void *)&long long v141 = sub_1001B3178(v57, v58, (uint64_t *)v148);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 22) = 2082;
        uint64_t v45 = v127;
        *(void *)&long long v141 = v135;
        *((void *)&v141 + 1) = v38;
        swift_bridgeObjectRetain();
        uint64_t v59 = String.init<A>(describing:)();
        *(void *)&long long v141 = sub_1001B3178(v59, v60, (uint64_t *)v148);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v125, "startEmergencyThread - serializedQuestionnaire: %{private}s for language: %{public}s, country: %{public}s", (uint8_t *)v54, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10000F294(v46, v49);
        sub_10000F294(v46, v49);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v23 = v140;
      uint64_t v61 = *(void *)(v140 + 64);
      if (*(void *)(v61 + 16))
      {
        uint64_t v62 = sub_1001BEB10(0);
        int v63 = 2;
        if (v64)
        {
          sub_1000A30C0(*(void *)(v61 + 56) + 32 * v62, (uint64_t)&v141);
          if (swift_dynamicCast()) {
            int v63 = LOBYTE(v148[0]);
          }
          else {
            int v63 = 2;
          }
        }
      }
      else
      {
        int v63 = 2;
      }
      unint64_t v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.default.getter();
      BOOL v67 = os_log_type_enabled(v65, v66);
      uint64_t v127 = v45;
      if (v67)
      {
        char v68 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v141 = swift_slowAlloc();
        *(_DWORD *)char v68 = 136380675;
        LOBYTE(v148[0]) = v63;
        sub_100004010((uint64_t *)&unk_10038EBC0);
        uint64_t v69 = String.init<A>(describing:)();
        *(void *)&v148[0] = sub_1001B3178(v69, v70, (uint64_t *)&v141);
        uint64_t v23 = v140;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "startEmergencyThread - recorded notifyEmergencyContacts: %{private}s", v68, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      swift_release();
      unsigned int v29 = v139;
      uint64_t v135 = 1;
      if (v139 && v63 != 2)
      {
        uint64_t v71 = 3;
        if (!v63) {
          uint64_t v71 = 1;
        }
        uint64_t v135 = v71;
      }
    }
    else
    {
      uint64_t v127 = 0;
      uint64_t v135 = 1;
      unsigned int v29 = v139;
    }
    unint64_t v72 = sub_100283284((uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v75 = v74;
    uint64_t v143 = (uint64_t)&type metadata for Int;
    *(void *)&long long v141 = 1;
    sub_10004A864(&v141, v148);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v150 = v72;
    sub_10026943C(v148, v73, v75, isUniquelyReferenced_nonNull_native);
    unint64_t v77 = v150;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v80 = v79;
    uint64_t v143 = (uint64_t)&type metadata for UInt64;
    *(void *)&long long v141 = v136;
    sub_10004A864(&v141, v148);
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v150 = v77;
    sub_10026943C(v148, v78, v80, v81);
    unint64_t v82 = v150;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v85 = v84;
    unint64_t v86 = sub_10017AA9C(v137, v29 != 0, v23);
    uint64_t v143 = sub_100004010(&qword_10038A208);
    *(void *)&long long v141 = v86;
    sub_10004A864(&v141, v148);
    char v87 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v150 = v82;
    sub_10026943C(v148, v83, v85, v87);
    unint64_t v88 = v150;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v89 = *((void *)&v151 + 1);
    if (*((void *)&v151 + 1) >> 60 != 15)
    {
      uint64_t v90 = v151;
      uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v93 = v92;
      uint64_t v143 = (uint64_t)&type metadata for Data;
      *(void *)&long long v141 = v90;
      *((void *)&v141 + 1) = v89;
      sub_10004A864(&v141, v148);
      sub_10000F1F0(v90, v89);
      sub_10000F1F0(v90, v89);
      char v94 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v149 = v88;
      sub_10026943C(v148, v91, v93, v94);
      unint64_t v88 = v149;
      unsigned int v29 = v139;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000FD70(v90, v89);
    }
    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v97 = v96;
    uint64_t v143 = (uint64_t)&type metadata for Int;
    *(void *)&long long v141 = v135;
    sub_10004A864(&v141, v148);
    char v98 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v149 = v88;
    sub_10026943C(v148, v95, v97, v98);
    unint64_t v99 = v149;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v102 = v101;
    uint64_t v143 = (uint64_t)&type metadata for Bool;
    uint64_t v128 = v29 >> 8;
    LOBYTE(v141) = BYTE1(v29);
    sub_10004A864(&v141, v148);
    char v103 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v149 = v99;
    sub_10026943C(v148, v100, v102, v103);
    unint64_t v104 = v149;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v105 = swift_allocObject();
    *(void *)(v105 + 16) = v104;
    char v144 = sub_10017C050;
    BOOL v145 = v105;
    *(void *)&long long v141 = _NSConcreteStackBlock;
    *((void *)&v141 + 1) = 1107296256;
    uint64_t v142 = sub_100207A1C;
    uint64_t v143 = (uint64_t)&unk_10035AC80;
    uint64_t v106 = _Block_copy(&v141);
    uint64_t v107 = v129;
    static DispatchQoS.unspecified.getter();
    *(void *)&v148[0] = &_swiftEmptyArrayStorage;
    sub_10017C0E4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v108 = v131;
    uint64_t v109 = v134;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v106);
    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v108, v109);
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v132);
    swift_release();
    if (!v23)
    {
      uint64_t v17 = 0;
      uint64_t v12 = 0;
      uint64_t v121 = 0;
      uint64_t v122 = v128;
      goto LABEL_52;
    }
    uint64_t v133 = *(void *)(*(void *)(v23 + 264) + 88);
    char v110 = sub_1000D3AF8();
    uint64_t v138 = v110[2];
    if (!v138) {
      break;
    }
    uint64_t v134 = (uint64_t)(v110 + 4);
    uint64_t v139 = *(void *)(v23 + 264);
    uint64_t v132 = (uint64_t)v110;
    swift_bridgeObjectRetain();
    a3 = 0;
    while (1)
    {
      uint64_t v111 = *(void *)(v139 + 104);
      if (!*(void *)(v111 + 16)) {
        goto LABEL_36;
      }
      char v112 = (uint64_t *)(v134 + 88 * a3);
      uint64_t v17 = (unsigned char *)v112[4];
      uint64_t v12 = (unsigned char *)v112[5];
      uint64_t v14 = (unsigned char *)v112[7];
      uint64_t v113 = *v112;
      uint64_t v9 = v112[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v114 = sub_1001BEC58(v113, v9);
      if (v115) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_35:
      uint64_t v23 = v140;
LABEL_36:
      if (++a3 == v138)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v17 = 0;
        uint64_t v12 = 0;
        goto LABEL_51;
      }
    }
    uint64_t v116 = *(void *)(*(void *)(v111 + 56) + 8 * v114);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v117 = *(void *)(v116 + 104);
    uint64_t v118 = *(void *)(v117 + 16);
    if (!v118) {
      goto LABEL_46;
    }
    if ((*(unsigned char *)(v117 + 32) & 1) == 0)
    {
LABEL_48:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v140;
      goto LABEL_51;
    }
    if (v118 == 1)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_35;
    }
    uint64_t v119 = 33;
    while (1)
    {
      uint64_t v120 = v119 - 31;
      if (__OFADD__(v119 - 32, 1)) {
        break;
      }
      if ((*(unsigned char *)(v117 + v119) & 1) == 0) {
        goto LABEL_48;
      }
      ++v119;
      if (v120 == v118) {
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_54:
    swift_once();
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = 0;
  uint64_t v12 = 0;
LABEL_51:
  uint64_t v122 = v128;
  uint64_t v121 = (void (*)())v133;
LABEL_52:
  *(void *)&long long v141 = v136;
  *((void *)&v141 + 1) = v122;
  uint64_t v142 = (uint64_t (*)(uint64_t))v135;
  uint64_t v143 = v137;
  char v144 = v121;
  BOOL v145 = v23 == 0;
  char v146 = v17;
  char v147 = v12;
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  return sub_10000FD70(v151, *((unint64_t *)&v151 + 1));
}

uint64_t sub_100176C3C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (qword_10037DDF0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9AA8);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "openEmergencyThread", v15, 2u);
    swift_slowDealloc();
  }

  aBlock[4] = sub_100177050;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10035AC30;
  uint64_t v16 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_10017C0E4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, void))(v4 + 8))(v6, v18[0]);
}

void sub_100177050()
{
  sub_100004010((uint64_t *)&unk_1003815F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = 1;
  unint64_t v2 = sub_100283284(inited);
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9AA8);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136380675;
    swift_bridgeObjectRetain();
    uint64_t v7 = Dictionary.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_1001B3178(v7, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "openEmergencyThread - sending dictionary - %{private}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v10 = [objc_allocWithZone((Class)IMStewieChat) init];
  sub_10017451C(v2);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 openStewieChatWithContext:isa];

  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "openEmergencyThread - sent", v14, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100177374(uint64_t a1, uint64_t a2, int a3)
{
  int v35 = a3;
  uint64_t v34 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TransmissionProgress(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v12 - 8);
  os_log_type_t v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100004010(&qword_100388168);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v3;
  uint64_t v19 = v3 + OBJC_IVAR____TtC8SOSBuddy13MessagesAgent__lastTransmissionProgress;
  swift_beginAccess();
  uint64_t v20 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_10000D2A0(v19, (uint64_t)v18, &qword_10037F158);
  sub_10000D2A0(a1, v20, &qword_10037F158);
  os_log_type_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v21((uint64_t)v18, 1, v8) == 1)
  {
    if (v21(v20, 1, v8) == 1) {
      return sub_10000950C((uint64_t)v18, &qword_10037F158);
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v18, (uint64_t)v14, &qword_10037F158);
    if (v21(v20, 1, v8) != 1)
    {
      sub_10000CF90(v20, (uint64_t)v11);
      char v23 = sub_100127A64(v14, v11);
      sub_10013A26C((uint64_t)v11);
      sub_10013A26C((uint64_t)v14);
      uint64_t result = sub_10000950C((uint64_t)v18, &qword_10037F158);
      if (v23) {
        return result;
      }
      goto LABEL_8;
    }
    sub_10013A26C((uint64_t)v14);
  }
  sub_10000950C((uint64_t)v18, &qword_100388168);
LABEL_8:
  uint64_t v24 = a1;
  uint64_t v25 = sub_100177DE8(a1);
  if ((v26 & 1) == 0)
  {
    uint64_t v27 = v25;
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = v34;
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = v29;
    *(unsigned char *)(v28 + 32) = v35 & 1;
    aBlock[4] = sub_10017C044;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100207A1C;
    aBlock[3] = &unk_10035AC08;
    uint64_t v30 = _Block_copy(aBlock);
    uint64_t v31 = v36;
    static DispatchQoS.unspecified.getter();
    uint64_t v43 = _swiftEmptyArrayStorage;
    sub_10017C0E4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v32 = v38;
    uint64_t v33 = v41;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v39);
    swift_release();
  }
  swift_beginAccess();
  sub_10017BFCC(v24, v19);
  return swift_endAccess();
}

uint64_t sub_1001778CC(uint64_t a1, uint64_t a2, char a3)
{
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9AA8);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    type metadata accessor for CTStewieServiceType(0);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)&v33[0] = sub_1001B3178(v10, v11, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "notifyAboutLocationUpdate - %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100004010((uint64_t *)&unk_1003815F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B3350;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = a1;
  unint64_t v14 = sub_100283284(inited);
  unint64_t v37 = v14;
  if (a1 != 8)
  {
LABEL_8:
    if (!*(void *)(v14 + 16)) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_9;
  }
  if ((a3 & 1) == 0)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
    int v35 = &type metadata for UInt64;
    v34[0] = a2;
    sub_10004A864(v34, v33);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = v14;
    unint64_t v37 = 0x8000000000000000;
    sub_10026943C(v33, v15, v17, isUniquelyReferenced_nonNull_native);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v14 = v37;
    goto LABEL_8;
  }
  unint64_t v31 = sub_100283284((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v37 = v31;
  swift_bridgeObjectRelease();
  if (!*(void *)(v31 + 16)) {
    return swift_bridgeObjectRelease();
  }
LABEL_9:
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v21 = 136380675;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v22 = Dictionary.description.getter();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1001B3178(v22, v24, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "notifyAboutLocationUpdate - sending dictionary - %{private}s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v25 = [objc_allocWithZone((Class)IMStewieChat) init];
  swift_beginAccess();
  uint64_t v26 = swift_bridgeObjectRetain();
  sub_10017451C(v26);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 locationUpdateDelivered:isa];

  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "notifyAboutLocationUpdate - sent", v30, 2u);
    swift_slowDealloc();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100177DE8(uint64_t a1)
{
  uint64_t v63 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  __chkstk_darwin(v2);
  unint64_t v56 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_100380418);
  __chkstk_darwin(v4 - 8);
  uint64_t v57 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_100388158);
  __chkstk_darwin(v6);
  uint64_t v58 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10037F158);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v55 - v12;
  unint64_t v14 = (int *)type metadata accessor for TransmissionProgress(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v62 = (uint64_t)&v55 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v55 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  id v25 = (char *)&v55 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v55 - v26;
  uint64_t v28 = v1 + OBJC_IVAR____TtC8SOSBuddy13MessagesAgent__lastTransmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v28, (uint64_t)v13, &qword_10037F158);
  os_log_type_t v29 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  if (v29(v13, 1, v14) != 1)
  {
    sub_10000CF90((uint64_t)v13, (uint64_t)v27);
    uint64_t v32 = v14[8];
    int v33 = v27[v32];
    uint64_t v34 = 1;
    switch(v27[v32])
    {
      case 2:
        goto LABEL_9;
      case 6:
        uint64_t v34 = 8;
LABEL_9:
        if (*(void *)&v27[v14[7]] != 100) {
          goto LABEL_5;
        }
        sub_10000D2A0(v63, (uint64_t)v11, &qword_10037F158);
        if (v29(v11, 1, v14) == 1)
        {
          sub_10013A26C((uint64_t)v27);
          uint64_t v36 = &qword_10037F158;
          uint64_t v37 = (uint64_t)v11;
          goto LABEL_12;
        }
        sub_10000CF90((uint64_t)v11, (uint64_t)v25);
        int v38 = v25[v14[8]];
        if (v38 == 7)
        {
          sub_10017BF68((uint64_t)v25, (uint64_t)v22);
        }
        else
        {
          sub_10017BF68((uint64_t)v25, (uint64_t)v22);
          if (v38 == v33)
          {
            uint64_t v39 = *(void *)&v22[v14[7]];
            sub_10013A26C((uint64_t)v22);
            uint64_t v40 = v62;
            sub_10017BF68((uint64_t)v25, v62);
            uint64_t v41 = v61;
            sub_10017BF68((uint64_t)v27, v61);
            if (v39 == 100)
            {
              uint64_t v42 = v14[5];
              uint64_t v43 = v40 + v42;
              uint64_t v44 = v41 + v42;
              uint64_t v45 = v58;
              uint64_t v46 = v58 + *(int *)(v6 + 48);
              uint64_t v47 = v41;
              sub_10000D2A0(v43, v58, &qword_100380418);
              sub_10000D2A0(v44, v46, &qword_100380418);
              uint64_t v49 = v59;
              uint64_t v48 = v60;
              char v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
              if (v50(v45, 1, v60) == 1)
              {
                sub_10013A26C(v47);
                sub_10013A26C(v62);
                sub_10013A26C((uint64_t)v25);
                sub_10013A26C((uint64_t)v27);
                if (v50(v46, 1, v48) == 1)
                {
                  uint64_t v30 = &qword_100380418;
                  uint64_t v31 = v45;
                  goto LABEL_3;
                }
              }
              else
              {
                uint64_t v51 = v57;
                sub_10000D2A0(v45, v57, &qword_100380418);
                if (v50(v46, 1, v48) != 1)
                {
                  int v52 = v56;
                  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v56, v46, v48);
                  sub_10017C0E4(&qword_100386BF0, (void (*)(uint64_t))&type metadata accessor for Date);
                  char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
                  uint64_t v54 = *(void (**)(char *, uint64_t))(v49 + 8);
                  v54(v52, v48);
                  sub_10013A26C(v61);
                  sub_10013A26C(v62);
                  sub_10013A26C((uint64_t)v25);
                  sub_10013A26C((uint64_t)v27);
                  v54((char *)v51, v48);
                  sub_10000950C(v45, &qword_100380418);
                  if ((v53 & 1) == 0) {
                    return v34;
                  }
                  return 0;
                }
                sub_10013A26C(v61);
                sub_10013A26C(v62);
                sub_10013A26C((uint64_t)v25);
                sub_10013A26C((uint64_t)v27);
                (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v48);
              }
              uint64_t v36 = &qword_100388158;
              uint64_t v37 = v45;
LABEL_12:
              sub_10000950C(v37, v36);
              return v34;
            }
LABEL_21:
            sub_10013A26C(v41);
            sub_10013A26C(v40);
            sub_10013A26C((uint64_t)v25);
            sub_10013A26C((uint64_t)v27);
            return v34;
          }
        }
        sub_10013A26C((uint64_t)v22);
        uint64_t v40 = v62;
        sub_10017BF68((uint64_t)v25, v62);
        uint64_t v41 = v61;
        sub_10017BF68((uint64_t)v27, v61);
        goto LABEL_21;
      default:
LABEL_5:
        sub_10013A26C((uint64_t)v27);
        return 0;
    }
  }
  uint64_t v30 = &qword_10037F158;
  uint64_t v31 = (uint64_t)v13;
LABEL_3:
  sub_10000950C(v31, v30);
  return 0;
}

void sub_1001784CC()
{
  if (!qword_100387F60)
  {
    type metadata accessor for TransmissionProgress(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100387F60);
    }
  }
}

uint64_t destroy for MessagesAgent.StartMessageSentEvent()
{
  return sub_10007809C();
}

void *initializeWithCopy for MessagesAgent.StartMessageSentEvent(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_10007800C();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return a1;
}

void *assignWithCopy for MessagesAgent.StartMessageSentEvent(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  sub_10007800C();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  sub_10007809C();
  return a1;
}

_OWORD *assignWithTake for MessagesAgent.StartMessageSentEvent(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_10007809C();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesAgent.StartMessageSentEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 25);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for MessagesAgent.StartMessageSentEvent(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = (unint64_t)-a2 << 8;
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10017875C(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_100178768(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_100178778(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = *(unsigned __int8 *)(result + 24) | (unint64_t)(a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MessagesAgent.StartMessageSentEvent()
{
  return &type metadata for MessagesAgent.StartMessageSentEvent;
}

uint64_t sub_100178798(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v153 = a2;
  char v157 = a4;
  uint64_t v155 = a1;
  uint64_t v154 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v152 = *(uint64_t (**)(uint64_t))(v154 - 8);
  __chkstk_darwin(v154);
  unint64_t v150 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for DispatchQoS();
  uint64_t v149 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  char v148 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_100382428);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for Locale.Language();
  uint64_t v10 = *(void *)(v156 - 8);
  uint64_t v11 = __chkstk_darwin(v156);
  uint64_t v13 = (void (*)())((char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v143 - v14;
  uint64_t v16 = sub_100004010(&qword_10038A200);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DDF0 != -1) {
    goto LABEL_74;
  }
  while (1)
  {
    uint64_t v19 = type metadata accessor for Logger();
    uint64_t v20 = sub_10000FD84(v19, (uint64_t)qword_1003A9AA8);
    swift_retain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v158 = a3;
    uint64_t v147 = v20;
    if (v23)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134349056;
      a3 = v158;
      *(void *)&long long v159 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "startRoadsideAssistanceThread - conversationId:%{public}llu", v24, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    long long v174 = xmmword_1002BD800;
    long long v173 = 0uLL;
    if (a3)
    {
      swift_retain();
      Locale.language.getter();
      Locale.Language.languageCode.getter();
      id v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v15, v156);
      uint64_t v26 = type metadata accessor for Locale.LanguageCode();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) == 1)
      {
        sub_10000950C((uint64_t)v18, &qword_10038A200);
        uint64_t v146 = 0;
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v146 = Locale.LanguageCode.identifier.getter();
        uint64_t v28 = v30;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v26);
      }
      Locale.language.getter();
      Locale.Language.region.getter();
      v25((char *)v13, v156);
      uint64_t v31 = type metadata accessor for Locale.Region();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v31) == 1)
      {
        sub_10000950C((uint64_t)v9, &qword_100382428);
        uint64_t v33 = 0;
        uint64_t v34 = 0;
      }
      else
      {
        uint64_t v33 = Locale.Region.identifier.getter();
        uint64_t v34 = v35;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
      }
      uint64_t v36 = v158;
      swift_beginAccess();
      sub_1000090FC(v36 + 80, (uint64_t)&v166);
      uint64_t v37 = *(void *)(v36 + 264);
      unint64_t v38 = *(void *)(v37 + 88);
      char v39 = *(unsigned char *)(v37 + 32);
      sub_1000A311C(v36 + 48, (uint64_t)&v159);
      char v40 = v39;
      uint64_t v41 = v146;
      uint64_t v42 = v34;
      uint64_t v43 = sub_10025B4A8(v38, v40, v146, v28, v33, v34, &v166, (unint64_t)&v159);
      unint64_t v45 = v44;
      uint64_t v145 = 0;
      sub_1000A3178((uint64_t)&v159);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v166);
      sub_10000FD70(v174, *((unint64_t *)&v174 + 1));
      *(void *)&long long v174 = v43;
      *((void *)&v174 + 1) = v45;
      sub_10000F1F0(v43, v45);
      sub_10000F1F0(v43, v45);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.default.getter();
      char v157 = v46;
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        char v144 = v42;
        uint64_t v49 = v48;
        uint64_t v156 = swift_slowAlloc();
        *(void *)&long long v166 = v156;
        *(_DWORD *)uint64_t v49 = 136381187;
        *(void *)&long long v159 = v43;
        *((void *)&v159 + 1) = v45;
        sub_10000F1F0(v43, v45);
        sub_100004010(&qword_10038A210);
        uint64_t v50 = String.init<A>(describing:)();
        *(void *)&long long v159 = sub_1001B3178(v50, v51, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000F294(v43, v45);
        sub_10000F294(v43, v45);
        *(_WORD *)(v49 + 12) = 2082;
        *(void *)&long long v159 = v41;
        *((void *)&v159 + 1) = v28;
        swift_bridgeObjectRetain();
        sub_100004010(&qword_100380920);
        uint64_t v52 = String.init<A>(describing:)();
        *(void *)&long long v159 = sub_1001B3178(v52, v53, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 2082;
        *(void *)&long long v159 = v33;
        *((void *)&v159 + 1) = v144;
        swift_bridgeObjectRetain();
        uint64_t v54 = String.init<A>(describing:)();
        *(void *)&long long v159 = sub_1001B3178(v54, v55, (uint64_t *)&v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v56 = v157;
        _os_log_impl((void *)&_mh_execute_header, v157, v47, "startRoadsideAssistanceThread - serializedQuestionnaire: %{private}s for language: %{public}s, country: %{public}s", (uint8_t *)v49, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10000F294(v43, v45);
        sub_10000F294(v43, v45);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v29 = v153;
      a3 = v158;
      uint64_t v57 = *(void *)(v158 + 64);
      if (*(void *)(v57 + 16)
        && (uint64_t v58 = sub_1001BEB10(5), (v59 & 1) != 0)
        && (sub_1000A30C0(*(void *)(v57 + 56) + 32 * v58, (uint64_t)&v159), (swift_dynamicCast() & 1) != 0))
      {
        unint64_t v61 = *((void *)&v166 + 1);
        uint64_t v60 = v166;
      }
      else
      {
        uint64_t v62 = *(void *)(a3 + 64);
        if (*(void *)(v62 + 16)
          && (uint64_t v63 = sub_1001BEB10(6), (v64 & 1) != 0)
          && (sub_1000A30C0(*(void *)(v62 + 56) + 32 * v63, (uint64_t)&v159), swift_dynamicCast()))
        {
          unint64_t v61 = *((void *)&v166 + 1);
          uint64_t v60 = v166;
        }
        else
        {
          unint64_t v61 = 0;
          uint64_t v60 = 0;
          long long v166 = 0uLL;
        }
      }
      swift_bridgeObjectRelease();
      *(void *)&long long v173 = v60;
      *((void *)&v173 + 1) = v61;
      if (v61)
      {
        unint64_t v65 = 0xE000000000000000;
        unint64_t v171 = 0;
        unint64_t v172 = 0xE000000000000000;
        uint64_t v66 = HIBYTE(v61) & 0xF;
        if ((v61 & 0x2000000000000000) == 0) {
          uint64_t v66 = v60 & 0xFFFFFFFFFFFFLL;
        }
        *(void *)&long long v159 = v60;
        *((void *)&v159 + 1) = v61;
        uint64_t v160 = 0;
        Swift::String v161 = (void *)v66;
        swift_bridgeObjectRetain();
        Swift::String_optional v67 = String.Iterator.next()();
        if (v67.value._object)
        {
          uint64_t countAndFlagsBits = v67.value._countAndFlagsBits;
          unint64_t object = (unint64_t)v67.value._object;
          do
          {
            uint64_t v72 = HIBYTE(object) & 0xF;
            *(void *)&long long v166 = countAndFlagsBits;
            *((void *)&v166 + 1) = object;
            if ((object & 0x2000000000000000) == 0) {
              uint64_t v72 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
            }
            uint64_t v167 = 0;
            uint64_t v168 = v72;
            swift_bridgeObjectRetain();
            do
            {
              if (!(unint64_t)String.Iterator.next()().value._object)
              {
                swift_bridgeObjectRelease();
                v70._uint64_t countAndFlagsBits = countAndFlagsBits;
                v70._unint64_t object = (void *)object;
                String.append(_:)(v70);
                goto LABEL_30;
              }
              char v73 = Character.isNumber.getter();
              swift_bridgeObjectRelease();
            }
            while ((v73 & 1) != 0);
            swift_bridgeObjectRelease();
LABEL_30:
            swift_bridgeObjectRelease();
            Swift::String_optional v71 = String.Iterator.next()();
            uint64_t countAndFlagsBits = v71.value._countAndFlagsBits;
            unint64_t object = (unint64_t)v71.value._object;
          }
          while (v71.value._object);
          unint64_t v74 = v171;
          unint64_t v65 = v172;
        }
        else
        {
          unint64_t v74 = 0;
        }
        swift_bridgeObjectRelease();
        *(void *)&long long v159 = v74;
        *((void *)&v159 + 1) = v65;
        uint64_t v75 = String.init<A>(_:)();
        unint64_t v77 = v76;
        swift_bridgeObjectRelease();
        *(void *)&long long v173 = v75;
        *((void *)&v173 + 1) = v77;
        uint64_t v78 = HIBYTE(v77) & 0xF;
        if ((v77 & 0x2000000000000000) == 0) {
          uint64_t v78 = v75 & 0xFFFFFFFFFFFFLL;
        }
        if (!v78)
        {
          swift_bridgeObjectRelease();
          long long v173 = 0uLL;
        }
      }
      uint64_t v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v79, v80))
      {
        char v81 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v166 = swift_slowAlloc();
        *(_DWORD *)char v81 = 136380675;
        swift_beginAccess();
        long long v159 = v173;
        swift_bridgeObjectRetain();
        sub_100004010(&qword_100380920);
        uint64_t v82 = String.init<A>(describing:)();
        *(void *)&long long v159 = sub_1001B3178(v82, v83, (uint64_t *)&v166);
        a3 = v158;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "startRoadsideAssistanceThread - recorded phone number: %{private}s", v81, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      swift_release();
    }
    else
    {
      uint64_t v145 = 0;
      uint64_t v29 = v153;
    }
    unint64_t v84 = sub_100283284((uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v86;
    Swift::String v161 = &type metadata for Int;
    *(void *)&long long v159 = 8;
    sub_10004A864(&v159, &v166);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v171 = v84;
    sub_10026943C(&v166, v85, v87, isUniquelyReferenced_nonNull_native);
    unint64_t v89 = v171;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v92 = v91;
    Swift::String v161 = &type metadata for UInt64;
    *(void *)&long long v159 = v29;
    sub_10004A864(&v159, &v166);
    char v93 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v171 = v89;
    sub_10026943C(&v166, v90, v92, v93);
    unint64_t v94 = v171;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v97 = v96;
    Swift::String v161 = &type metadata for Bool;
    LOBYTE(v159) = 0;
    sub_10004A864(&v159, &v166);
    char v98 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v171 = v94;
    sub_10026943C(&v166, v95, v97, v98);
    unint64_t v99 = v171;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v102 = v101;
    Swift::String v161 = &type metadata for UInt64;
    *(void *)&long long v159 = v155;
    sub_10004A864(&v159, &v166);
    char v103 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v171 = v99;
    sub_10026943C(&v166, v100, v102, v103);
    unint64_t v104 = v171;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v107 = v106;
    unint64_t v108 = sub_10017B6E0(a3);
    Swift::String v161 = (void *)sub_100004010(&qword_10038A208);
    *(void *)&long long v159 = v108;
    sub_10004A864(&v159, &v166);
    char v109 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v171 = v104;
    sub_10026943C(&v166, v105, v107, v109);
    unint64_t v110 = v171;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v111 = *((void *)&v174 + 1);
    if (*((void *)&v174 + 1) >> 60 != 15)
    {
      uint64_t v112 = v174;
      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v115 = v114;
      Swift::String v161 = &type metadata for Data;
      *(void *)&long long v159 = v112;
      *((void *)&v159 + 1) = v111;
      sub_10004A864(&v159, &v166);
      sub_10000F1F0(v112, v111);
      sub_10000F1F0(v112, v111);
      char v116 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v170 = v110;
      sub_10026943C(&v166, v113, v115, v116);
      unint64_t v110 = v170;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000FD70(v112, v111);
    }
    swift_beginAccess();
    uint64_t v117 = *((void *)&v173 + 1);
    uint64_t v118 = v29;
    if (*((void *)&v173 + 1))
    {
      uint64_t v119 = v173;
      uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v122 = v121;
      Swift::String v161 = &type metadata for String;
      *(void *)&long long v159 = v119;
      *((void *)&v159 + 1) = v117;
      sub_10004A864(&v159, &v166);
      swift_bridgeObjectRetain();
      char v123 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v169 = v110;
      sub_10026943C(&v166, v120, v122, v123);
      unint64_t v110 = v169;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v124 = swift_allocObject();
    *(void *)(v124 + 16) = v110;
    uint64_t v162 = sub_10017BF3C;
    int v163 = (char *)v124;
    *(void *)&long long v159 = _NSConcreteStackBlock;
    *((void *)&v159 + 1) = 1107296256;
    uint64_t v160 = sub_100207A1C;
    Swift::String v161 = &unk_10035ABB8;
    int v125 = _Block_copy(&v159);
    uint64_t v126 = v148;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long v166 = &_swiftEmptyArrayStorage;
    sub_10017C0E4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v127 = v150;
    uint64_t v128 = v154;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v125);
    (*((void (**)(char *, uint64_t))v152 + 1))(v127, v128);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v126, v151);
    swift_release();
    if (!a3)
    {
      uint64_t v13 = 0;
      uint64_t v18 = 0;
      long long v129 = 0;
      goto LABEL_71;
    }
    long long v129 = *(uint64_t (**)(uint64_t))(*(void *)(a3 + 264) + 88);
    uint64_t v130 = sub_1000D3AF8();
    uint64_t v156 = v130[2];
    if (!v156) {
      break;
    }
    uint64_t v151 = (uint64_t)v130;
    uint64_t v152 = v129;
    uint64_t v154 = (uint64_t)(v130 + 4);
    char v157 = *(NSObject **)(a3 + 264);
    swift_bridgeObjectRetain();
    uint64_t v131 = 0;
    while (1)
    {
      Class isa = v157[13].isa;
      if (!*((void *)isa + 2)) {
        goto LABEL_55;
      }
      uint64_t v133 = (uint64_t *)(v154 + 88 * v131);
      uint64_t v9 = (char *)v133[3];
      uint64_t v13 = (void (*)())v133[4];
      uint64_t v18 = (char *)v133[5];
      uint64_t v10 = v133[7];
      a3 = v133[10];
      uint64_t v134 = *v133;
      uint64_t v15 = (char *)v133[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v135 = sub_1001BEC58(v134, (uint64_t)v15);
      if (v136) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_54:
      a3 = v158;
LABEL_55:
      if (++v131 == v156)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v13 = 0;
        uint64_t v18 = 0;
        uint64_t v118 = v153;
        goto LABEL_70;
      }
    }
    uint64_t v137 = *(void *)(*((void *)isa + 7) + 8 * v135);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v138 = *(void *)(v137 + 104);
    uint64_t v139 = *(void *)(v138 + 16);
    if (!v139) {
      goto LABEL_65;
    }
    if (*(unsigned char *)(v138 + 32) == 1)
    {
LABEL_67:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v118 = v153;
      a3 = v158;
LABEL_70:
      long long v129 = v152;
      goto LABEL_71;
    }
    if (v139 == 1)
    {
LABEL_65:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_54;
    }
    uint64_t v140 = 33;
    while (1)
    {
      uint64_t v141 = v140 - 31;
      if (__OFADD__(v140 - 32, 1)) {
        break;
      }
      if (*(unsigned char *)(v138 + v140) == 1) {
        goto LABEL_67;
      }
      ++v140;
      if (v141 == v139) {
        goto LABEL_65;
      }
    }
    __break(1u);
LABEL_74:
    swift_once();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
  uint64_t v18 = 0;
LABEL_71:
  *(void *)&long long v159 = v155;
  *((void *)&v159 + 1) = v118;
  uint64_t v160 = v129;
  Swift::String v161 = (void *)((a3 == 0) | 0x8000000000000000);
  uint64_t v162 = v13;
  int v163 = v18;
  uint64_t v164 = 0;
  uint64_t v165 = 0;
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  sub_10000FD70(v174, *((unint64_t *)&v174 + 1));
  return swift_bridgeObjectRelease();
}

void sub_100179C4C(uint64_t a1, const char *a2, const char *a3)
{
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9AA8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136380675;
    swift_bridgeObjectRetain();
    uint64_t v10 = a3;
    uint64_t v11 = Dictionary.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = v11;
    a3 = v10;
    sub_1001B3178(v14, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v15 = [objc_allocWithZone((Class)IMStewieChat) init];
  sub_10017451C(a1);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v15 sendQuestionnaire:isa];

  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, a3, v19, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100179F20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  os_log_type_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *unint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    if (qword_10037DDF0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000FD84(v14, (uint64_t)qword_1003A9AA8);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134217984;
    aBlock[0] = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "openRoadsideAssistanceThread for %llu", v17, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  aBlock[4] = sub_10017A6E0;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10035AB40;
  uint64_t v19 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  BOOL v23 = _swiftEmptyArrayStorage;
  sub_10017C0E4((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  return swift_release();
}

void sub_10017A384(uint64_t a1)
{
  sub_100004010((uint64_t *)&unk_1003815F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B31C0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = 8;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v4;
  *(void *)(inited + 120) = &type metadata for UInt64;
  *(void *)(inited + 96) = a1;
  unint64_t v5 = sub_100283284(inited);
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9AA8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136380675;
    swift_bridgeObjectRetain();
    uint64_t v10 = Dictionary.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1001B3178(v10, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "openRoadsideAssistanceThread - sending dictionary - %{private}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v13 = [objc_allocWithZone((Class)IMStewieChat) init];
  sub_10017451C(v5);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v13 openStewieChatWithContext:isa];

  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "openRoadsideAssistanceThread - sent", v17, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10017A6D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10017A6E0()
{
  sub_10017A384(*(void *)(v0 + 16));
}

uint64_t sub_10017A6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10017A6F8()
{
  return swift_release();
}

void sub_10017A700()
{
  uint64_t v0 = sub_100004010(&qword_100380420);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)aBlock - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9AA8);
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "openMessages", v10, 2u);
    swift_slowDealloc();
  }

  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10000950C((uint64_t)v2, &qword_100380420);
    unint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to form Messages URL", v13, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    id v14 = [self defaultWorkspace];
    if (v14)
    {
      os_log_type_t v16 = v14;
      URL._bridgeToObjectiveC()(v15);
      uint64_t v18 = v17;
      id v19 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
      aBlock[4] = sub_100175700;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100174C8C;
      aBlock[3] = &unk_10035AB68;
      uint64_t v20 = _Block_copy(aBlock);
      [v16 openURL:v18 configuration:v19 completionHandler:v20];
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_10017AA9C(char a1, char a2, uint64_t a3)
{
  unint64_t v5 = 0xD000000000000010;
  uint64_t v6 = (void *)a3;
  os_log_type_t v8 = &type metadata for String;
  switch(a1)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 4:
LABEL_9:
      if (!v6)
      {
        if (qword_10037DDF0 != -1) {
          swift_once();
        }
        uint64_t v31 = type metadata accessor for Logger();
        sub_10000FD84(v31, (uint64_t)qword_1003A9AA8);
        uint64_t v32 = Logger.logObject.getter();
        os_log_type_t v33 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          v97._unint64_t countAndFlagsBits = swift_slowAlloc();
          *(_DWORD *)uint64_t v34 = 136446210;
          sub_100004010(&qword_10038A218);
          uint64_t v35 = String.init<A>(describing:)();
          *(void *)&v96[0] = sub_1001B3178(v35, v36, &v97._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Questionnaire state is not defined for reason: %{public}s", v34, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

LABEL_45:
        id v19 = &_swiftEmptyArrayStorage;
        os_log_type_t v16 = (void *)sub_100283284((uint64_t)&_swiftEmptyArrayStorage);
        unint64_t v94 = (void *)0xE000000000000000;
        uint64_t v95 = 0;
        if ((a2 & 1) == 0) {
          goto LABEL_46;
        }
        goto LABEL_39;
      }
      swift_retain();
      os_log_type_t v16 = v6;
      uint64_t v17 = sub_1000D3AF8();
      uint64_t v92 = v17[2];
      if (!v92)
      {
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_45;
      }
      unint64_t object = (void *)v6[33];
      id v19 = v17 + 4;
      uint64_t v20 = swift_bridgeObjectRetain();
      unint64_t countAndFlagsBits = 0;
      uint64_t v90 = v20;
      do
      {
        if (countAndFlagsBits >= *(void *)(v20 + 16))
        {
          __break(1u);
          goto LABEL_54;
        }
        os_log_type_t v16 = (void *)object[13];
        if (v16[2])
        {
          uint64_t v22 = &v19[11 * countAndFlagsBits];
          unint64_t v5 = v22[3];
          BOOL v23 = (void *)v22[7];
          uint64_t v95 = v22[6];
          uint64_t v3 = (void *)v22[10];
          os_log_type_t v8 = (void *)v22[5];
          uint64_t v24 = *v22;
          uint64_t v4 = v22[1];
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v25 = sub_1001BEC58(v24, v4);
          if (v26)
          {
            unint64_t v94 = v23;
            os_log_type_t v16 = *(void **)(v16[7] + 8 * v25);
            swift_retain();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v27 = v16[13];
            uint64_t v28 = *(void *)(v27 + 16);
            if (v28)
            {
              if ((*(unsigned char *)(v27 + 32) & 1) == 0) {
                goto LABEL_50;
              }
              if (v28 != 1)
              {
                if (*(unsigned char *)(v27 + 33) != 1)
                {
LABEL_50:
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_52;
                }
                if (v28 != 2)
                {
                  uint64_t v29 = 34;
                  while (1)
                  {
                    uint64_t v30 = v29 - 31;
                    if (__OFADD__(v29 - 32, 1)) {
                      break;
                    }
                    if (*(unsigned char *)(v27 + v29) != 1) {
                      goto LABEL_50;
                    }
                    ++v29;
                    if (v30 == v28) {
                      goto LABEL_27;
                    }
                  }
LABEL_54:
                  __break(1u);
                  goto LABEL_55;
                }
              }
            }
LABEL_27:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease_n();
          }
          unint64_t v5 = 0xD000000000000010;
          uint64_t v20 = v90;
        }
        ++countAndFlagsBits;
      }
      while (countAndFlagsBits != v92);
      swift_bridgeObjectRelease_n();
      swift_release();
      unint64_t v94 = (void *)0xE000000000000000;
      uint64_t v95 = 0;
LABEL_52:
      p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
LABEL_36:
      unint64_t v93 = sub_100283284((uint64_t)&_swiftEmptyArrayStorage);
      char v39 = self;
      id v40 = [v39 p_base_prots[209]];
      v99._unint64_t object = (void *)0x80000001002D0F40;
      v41._unint64_t countAndFlagsBits = 0xD000000000000017;
      v41._unint64_t object = (void *)0x80000001002D0F20;
      v42._unint64_t countAndFlagsBits = 0;
      v42._unint64_t object = (void *)0xE000000000000000;
      v99._unint64_t countAndFlagsBits = 0xD000000000000073;
      Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v99);

      id v19 = sub_1001B1A30(0, 1, 1, &_swiftEmptyArrayStorage);
      unint64_t v45 = v19[2];
      unint64_t v44 = v19[3];
      if (v45 >= v44 >> 1) {
        id v19 = sub_1001B1A30((void *)(v44 > 1), v45 + 1, 1, v19);
      }
      v19[2] = v45 + 1;
      *(Swift::String *)&v19[2 * v45 + 4] = v43;
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v48 = v47;
      id v49 = [v39 mainBundle];
      v100._unint64_t object = (void *)0x80000001002D0F40;
      v50._unint64_t countAndFlagsBits = 0xD000000000000017;
      v50._unint64_t object = (void *)0x80000001002D0F20;
      v51._unint64_t countAndFlagsBits = 0;
      v51._unint64_t object = (void *)0xE000000000000000;
      v100._unint64_t countAndFlagsBits = 0xD000000000000073;
      Swift::String v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v100);

      os_log_type_t v8 = &type metadata for String;
      char v98 = &type metadata for String;
      Swift::String v97 = v52;
      sub_10004A864(&v97, v96);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10026943C(v96, v46, v48, isUniquelyReferenced_nonNull_native);
      os_log_type_t v16 = (void *)v93;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a2)
      {
LABEL_39:
        uint64_t v54 = self;
        id v55 = [v54 mainBundle];
        v101._unint64_t countAndFlagsBits = 0xD00000000000006ALL;
        v101._unint64_t object = (void *)0x80000001002D0EB0;
        v56._unint64_t countAndFlagsBits = 0x206C61636964654DLL;
        v56._unint64_t object = (void *)0xEA00000000004449;
        v57._unint64_t countAndFlagsBits = 0;
        v57._unint64_t object = (void *)0xE000000000000000;
        Swift::String v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v101);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v19 = sub_1001B1A30(0, v19[2] + 1, 1, v19);
        }
        unint64_t v60 = v19[2];
        unint64_t v59 = v19[3];
        if (v60 >= v59 >> 1) {
          id v19 = sub_1001B1A30((void *)(v59 > 1), v60 + 1, 1, v19);
        }
        v19[2] = v60 + 1;
        *(Swift::String *)&v19[2 * v60 + 4] = v58;
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;
        id v64 = [v54 mainBundle];
        v102._unint64_t countAndFlagsBits = 0xD00000000000006ALL;
        v102._unint64_t object = (void *)0x80000001002D0EB0;
        v65._unint64_t countAndFlagsBits = 0x206C61636964654DLL;
        v65._unint64_t object = (void *)0xEA00000000004449;
        v66._unint64_t countAndFlagsBits = 0;
        v66._unint64_t object = (void *)0xE000000000000000;
        Swift::String v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v102);

        char v98 = &type metadata for String;
        Swift::String v97 = v67;
        sub_10004A864(&v97, v96);
        char v68 = swift_isUniquelyReferenced_nonNull_native();
        sub_10026943C(v96, v61, v63, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_46:
      uint64_t v3 = self;
      id v69 = [v3 mainBundle];
      v103._unint64_t countAndFlagsBits = 0xD000000000000070;
      uint64_t v4 = (uint64_t)"Current Location";
      v103._unint64_t object = (void *)0x80000001002D0DC0;
      unint64_t v5 = (unint64_t)"_lastTransmissionProgress";
      v70._unint64_t object = (void *)0x80000001002D0DA0;
      v70._unint64_t countAndFlagsBits = 0xD000000000000010;
      v71._unint64_t countAndFlagsBits = 0;
      v71._unint64_t object = (void *)0xE000000000000000;
      Swift::String v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(v70, (Swift::String_optional)0, (NSBundle)v69, v71, v103);
      unint64_t countAndFlagsBits = v72._countAndFlagsBits;
      unint64_t object = v72._object;

      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_47;
      }
LABEL_55:
      id v19 = sub_1001B1A30(0, v19[2] + 1, 1, v19);
LABEL_47:
      unint64_t v74 = v19[2];
      unint64_t v73 = v19[3];
      if (v74 >= v73 >> 1) {
        id v19 = sub_1001B1A30((void *)(v73 > 1), v74 + 1, 1, v19);
      }
      v19[2] = v74 + 1;
      uint64_t v75 = &v19[2 * v74];
      void v75[4] = countAndFlagsBits;
      v75[5] = object;
      uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v78 = v77;
      id v79 = [v3 mainBundle];
      v104._unint64_t countAndFlagsBits = 0xD000000000000070;
      v104._unint64_t object = (void *)(v4 | 0x8000000000000000);
      v80._unint64_t object = (void *)(v5 | 0x8000000000000000);
      v80._unint64_t countAndFlagsBits = 0xD000000000000010;
      v81._unint64_t countAndFlagsBits = 0;
      v81._unint64_t object = (void *)0xE000000000000000;
      Swift::String v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v104);

      char v98 = v8;
      Swift::String v97 = v82;
      sub_10004A864(&v97, v96);
      char v83 = swift_isUniquelyReferenced_nonNull_native();
      sub_10026943C(v96, v76, v78, v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100004010((uint64_t *)&unk_1003815F8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1002B3F10;
      *(void *)(inited + 32) = 0x795474726F706572;
      *(void *)(inited + 40) = 0xEA00000000006570;
      *(void *)(inited + 72) = v8;
      *(void *)(inited + 48) = v95;
      *(void *)(inited + 56) = v94;
      *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 88) = v85;
      *(void *)(inited + 120) = v8;
      *(void *)(inited + 96) = v95;
      *(void *)(inited + 104) = v94;
      *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 136) = v86;
      *(void *)(inited + 168) = sub_100004010(&qword_100380040);
      *(void *)(inited + 144) = v19;
      *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 184) = v87;
      *(void *)(inited + 216) = sub_100004010(&qword_10038A208);
      *(void *)(inited + 192) = v16;
      swift_bridgeObjectRetain();
      return sub_100283284(inited);
    default:
      uint64_t v4 = a3;
      uint64_t v3 = (void *)0xED00006E6F697463;
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_4:
        p_base_prots = &SessionEnvironmentFactory.base_prots;
        id v11 = [self mainBundle];
        unint64_t v12 = 0xD00000000000004ELL;
        unint64_t v89 = 0x80000001002D0FC0;
        uint64_t v13 = 0x746544206C6C6146;
        unint64_t v14 = 0xEE006E6F69746365;
      }
      else
      {
        uint64_t v6 = (void *)v4;
        switch(a1)
        {
          case 1:
            uint64_t v3 = (void *)0xE400000000000000;
            goto LABEL_8;
          case 2:
            goto LABEL_8;
          case 3:
            swift_bridgeObjectRelease();
            goto LABEL_34;
          default:
            uint64_t v3 = (void *)0xE400000000000000;
LABEL_8:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v15 & 1) == 0) {
              goto LABEL_9;
            }
LABEL_34:
            p_base_prots = &SessionEnvironmentFactory.base_prots;
            id v11 = [self mainBundle];
            unint64_t v12 = 0xD00000000000004ELL;
            unint64_t v89 = 0x80000001002D0FC0;
            uint64_t v13 = 0x6544206873617243;
            unint64_t v14 = 0xEF6E6F6974636574;
            break;
        }
      }
      v37._unint64_t countAndFlagsBits = 0;
      v37._unint64_t object = (void *)0xE000000000000000;
      Swift::String v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, (Swift::String_optional)0, (NSBundle)v11, v37, *(Swift::String *)&v12);
      unint64_t v94 = v38._object;
      uint64_t v95 = v38._countAndFlagsBits;

      goto LABEL_36;
  }
}

unint64_t sub_10017B6E0(uint64_t a1)
{
  uint64_t v1 = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
  uint64_t v2 = (const char *)&type metadata for String;
  if (!a1)
  {
    if (qword_10037DDF0 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000FD84(v22, (uint64_t)qword_1003A9AA8);
    BOOL v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Questionnaire state is not defined for roadside report", v25, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = &_swiftEmptyArrayStorage;
    unint64_t v17 = sub_100283284((uint64_t)&_swiftEmptyArrayStorage);
    uint64_t comment_8 = 0;
    unint64_t v71 = 0xE000000000000000;
    p_base_prots = (__objc2_prot_list **)(&SessionEnvironmentFactory + 40);
    goto LABEL_37;
  }
  uint64_t v3 = a1;
  swift_retain_n();
  uint64_t v4 = sub_1000D3AF8();
  uint64_t v2 = (const char *)v4[2];
  if (!v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t comment_8 = 0;
    unint64_t v16 = 0xE000000000000000;
    uint64_t v2 = (const char *)&type metadata for String;
LABEL_25:
    swift_beginAccess();
    uint64_t v27 = *(void *)(v3 + 64);
    unint64_t v71 = v16;
    if (*(void *)(v27 + 16)
      && (uint64_t v28 = sub_1001BEB10(5), (v29 & 1) != 0)
      && (sub_1000A30C0(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v73), swift_dynamicCast()))
    {
      unint64_t v30 = *((void *)&v72[0] + 1);
      uint64_t v31 = *(void *)&v72[0] & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v31 = 0;
      unint64_t v30 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
    swift_release();
    if ((v30 & 0x2000000000000000) != 0) {
      uint64_t v31 = HIBYTE(v30) & 0xF;
    }
    uint64_t v10 = &_swiftEmptyArrayStorage;
    unint64_t v17 = sub_100283284((uint64_t)&_swiftEmptyArrayStorage);
    if (v31)
    {
      uint64_t v32 = self;
      id v33 = [v32 (SEL)v1[209]];
      v75._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
      v75._unint64_t object = (void *)0x80000001002D0E40;
      v34._uint64_t countAndFlagsBits = 0x754E20656E6F6850;
      v34._unint64_t object = (void *)0xEC0000007265626DLL;
      v35.value._uint64_t countAndFlagsBits = 0xD000000000000012;
      v35.value._unint64_t object = (void *)0x80000001002C7760;
      v36._uint64_t countAndFlagsBits = 0;
      v36._unint64_t object = (void *)0xE000000000000000;
      Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v75);

      uint64_t v10 = sub_1001B1A30(0, 1, 1, &_swiftEmptyArrayStorage);
      unint64_t v39 = v10[2];
      unint64_t v38 = v10[3];
      if (v39 >= v38 >> 1) {
        uint64_t v10 = sub_1001B1A30((void *)(v38 > 1), v39 + 1, 1, v10);
      }
      uint64_t v10[2] = v39 + 1;
      *(Swift::String *)&v10[2 * v39 + 4] = v37;
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;
      p_base_prots = &SessionEnvironmentFactory.base_prots;
      id v42 = [v32 mainBundle];
      v76._unint64_t object = (void *)0x80000001002D0E40;
      v43._uint64_t countAndFlagsBits = 0x754E20656E6F6850;
      v43._unint64_t object = (void *)0xEC0000007265626DLL;
      v44.value._uint64_t countAndFlagsBits = 0xD000000000000012;
      v44.value._unint64_t object = (void *)0x80000001002C7760;
      v45._uint64_t countAndFlagsBits = 0;
      v45._unint64_t object = (void *)0xE000000000000000;
      v76._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
      Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v76);

      uint64_t v2 = (const char *)&type metadata for String;
      unint64_t v74 = (const char *)&type metadata for String;
      Swift::String v73 = v46;
      sub_10004A864(&v73, v72);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10026943C(v72, v68, v41, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      p_base_prots = v1;
    }
LABEL_37:
    unint64_t v5 = (char *)self;
    id v48 = [v5 p_base_prots[209]];
    v77._uint64_t countAndFlagsBits = 0xD000000000000070;
    unint64_t v6 = (unint64_t)"Current Location";
    v77._unint64_t object = (void *)0x80000001002D0DC0;
    unint64_t v11 = (unint64_t)"_lastTransmissionProgress";
    v49._unint64_t object = (void *)0x80000001002D0DA0;
    v49._uint64_t countAndFlagsBits = 0xD000000000000010;
    v50._uint64_t countAndFlagsBits = 0;
    v50._unint64_t object = (void *)0xE000000000000000;
    Swift::String v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v77);
    uint64_t countAndFlagsBits = v51._countAndFlagsBits;
    unint64_t object = v51._object;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
  unint64_t v5 = (char *)(v4 + 4);
  uint64_t comment = v3;
  unint64_t v71 = *(void *)(v3 + 264);
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(v71 + 104);
    if (!*(void *)(v7 + 16)) {
      goto LABEL_5;
    }
    os_log_type_t v8 = (uint64_t *)&v5[88 * v6];
    unint64_t object = (void *)v8[3];
    uint64_t v10 = (void *)v8[7];
    uint64_t comment_8 = v8[6];
    unint64_t v11 = v8[10];
    uint64_t v13 = *v8;
    uint64_t countAndFlagsBits = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1001BEC58(v13, countAndFlagsBits);
    if (v15) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_5:
    if ((const char *)++v6 == v2)
    {
      uint64_t v3 = comment;
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t comment_8 = 0;
      unint64_t v16 = 0xE000000000000000;
      goto LABEL_24;
    }
  }
  unint64_t v16 = (unint64_t)v10;
  unint64_t v17 = *(void *)(*(void *)(v7 + 56) + 8 * v14);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 104);
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(v18 + 32) == 1)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = comment;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v2 = (const char *)&type metadata for String;
    uint64_t v1 = &SessionEnvironmentFactory.base_prots;
    goto LABEL_25;
  }
  if (v19 == 1)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_5;
  }
  uint64_t v20 = 33;
  while (1)
  {
    uint64_t v21 = v20 - 31;
    if (__OFADD__(v20 - 32, 1)) {
      break;
    }
    if (*(unsigned char *)(v18 + v20) == 1) {
      goto LABEL_21;
    }
    ++v20;
    if (v21 == v19) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_42:
  uint64_t v10 = sub_1001B1A30(0, v10[2] + 1, 1, v10);
LABEL_38:
  unint64_t v53 = v10[2];
  unint64_t v52 = v10[3];
  if (v53 >= v52 >> 1) {
    uint64_t v10 = sub_1001B1A30((void *)(v52 > 1), v53 + 1, 1, v10);
  }
  uint64_t v10[2] = v53 + 1;
  uint64_t v54 = &v10[2 * v53];
  v54[4] = countAndFlagsBits;
  v54[5] = object;
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v56;
  id v58 = [v5 mainBundle];
  v78._uint64_t countAndFlagsBits = 0xD000000000000070;
  v78._unint64_t object = (void *)(v6 | 0x8000000000000000);
  v59._unint64_t object = (void *)(v11 | 0x8000000000000000);
  v59._uint64_t countAndFlagsBits = 0xD000000000000010;
  v60._uint64_t countAndFlagsBits = 0;
  v60._unint64_t object = (void *)0xE000000000000000;
  Swift::String v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v78);

  unint64_t v74 = v2;
  Swift::String v73 = v61;
  sub_10004A864(&v73, v72);
  char v62 = swift_isUniquelyReferenced_nonNull_native();
  sub_10026943C(v72, v55, v57, v62);
  unint64_t v63 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100004010((uint64_t *)&unk_1003815F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002B4DF0;
  *(void *)(inited + 32) = 0x795474726F706572;
  *(void *)(inited + 40) = 0xEA00000000006570;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 48) = comment_8;
  *(void *)(inited + 56) = v71;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v65;
  *(void *)(inited + 120) = sub_100004010(&qword_100380040);
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v66;
  *(void *)(inited + 168) = sub_100004010(&qword_10038A208);
  *(void *)(inited + 144) = v63;
  return sub_100283284(inited);
}

uint64_t sub_10017BF04()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10017BF3C()
{
  sub_100179C4C(*(void *)(v0 + 16), "startRoadsideAssistanceThread - sending dictionary - %{private}s", "startRoadsideAssistanceThread - sent");
}

uint64_t sub_10017BF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017BFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037F158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017C034()
{
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10017C044()
{
  return sub_1001778CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_10017C050()
{
  sub_100179C4C(*(void *)(v0 + 16), "startEmergencyThread - sending emergency dictionary - %{private}s", "startEmergencyThread - sent");
}

uint64_t sub_10017C07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10037F158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017C0E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MessagesAgent.RoadsideStartMessageSent()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesAgent.RoadsideStartMessageSent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesAgent.RoadsideStartMessageSent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagesAgent.RoadsideStartMessageSent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesAgent.RoadsideStartMessageSent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesAgent.RoadsideStartMessageSent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesAgent.RoadsideStartMessageSent()
{
  return &type metadata for MessagesAgent.RoadsideStartMessageSent;
}

uint64_t destroy for PreferredBannerLayout()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessagesAgent.EmergencyStartMessageSent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesAgent.EmergencyStartMessageSent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagesAgent.EmergencyStartMessageSent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesAgent.EmergencyStartMessageSent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesAgent.EmergencyStartMessageSent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesAgent.EmergencyStartMessageSent()
{
  return &type metadata for MessagesAgent.EmergencyStartMessageSent;
}

uint64_t sub_10017C658()
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000FD84(v1, (uint64_t)qword_1003A99A0);
  uint64_t v2 = v0;
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136446210;
    [v2 frame];
    type metadata accessor for CGRect(0);
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SizeReaderView frame: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_type_t v8 = *(void (**)(id, double, double))&v2[OBJC_IVAR____TtC8SOSBuddy16SizeReaderUIView__onSizeChanged];
  swift_retain();
  id v9 = [v2 frame];
  v8(v9, v10, v11);
  return swift_release();
}

id sub_10017C890()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SizeReaderUIView();
  return [super dealloc];
}

uint64_t type metadata accessor for SizeReaderUIView()
{
  return self;
}

id sub_10017C8FC()
{
  double v1 = *v0;
  double v2 = v0[1];
  uint64_t v4 = *((void *)v0 + 2);
  uint64_t v3 = *((void *)v0 + 3);
  unint64_t v5 = (objc_class *)type metadata accessor for SizeReaderUIView();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  unint64_t v7 = &v6[OBJC_IVAR____TtC8SOSBuddy16SizeReaderUIView__onSizeChanged];
  *(void *)unint64_t v7 = v4;
  *((void *)v7 + 1) = v3;
  v10.receiver = v6;
  v10.super_class = v5;
  swift_retain();
  id v8 = [super initWithFrame:0.0, 0.0, v1, v2];
  [v8 setAutoresizingMask:16];
  return v8;
}

uint64_t sub_10017C9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10017CBB8();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10017CA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10017CBB8();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10017CA68()
{
}

uint64_t destroy for SizeReaderView()
{
  return swift_release();
}

uint64_t initializeWithCopy for SizeReaderView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for SizeReaderView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a2[3];
  a1[2] = a2[2];
  a1[3] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SizeReaderView(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SizeReaderView()
{
  return &type metadata for SizeReaderView;
}

unint64_t sub_10017CB64()
{
  unint64_t result = qword_10038A260;
  if (!qword_10038A260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A260);
  }
  return result;
}

unint64_t sub_10017CBB8()
{
  unint64_t result = qword_10038A268;
  if (!qword_10038A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A268);
  }
  return result;
}

uint64_t initializeWithCopy for TryOutConnectionToolbarView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TryOutConnectionToolbarView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TryOutConnectionToolbarView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TryOutConnectionToolbarView()
{
  return &type metadata for TryOutConnectionToolbarView;
}

uint64_t sub_10017CD34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017CD50()
{
  uint64_t result = sub_1000AB188();
  qword_1003A9BD8 = result;
  return result;
}

uint64_t sub_10017CD74(uint64_t a1)
{
  __chkstk_darwin(a1);
  uint64_t v2 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = static VerticalAlignment.center.getter();
  sub_10017D09C(v1);
  v25[752] = 0;
  memcpy(&v25[7], v24, 0x2E8uLL);
  char v6 = static Edge.Set.leading.getter();
  char v26 = 1;
  char v7 = static Edge.Set.trailing.getter();
  char v27 = 1;
  v14[124] = v5;
  v14[125] = 0;
  char v15 = 0;
  memcpy(v16, v25, 0x2EFuLL);
  v16[751] = v6;
  long long v17 = 0u;
  long long v18 = 0u;
  char v19 = v26;
  char v20 = v7;
  long long v21 = 0u;
  long long v22 = 0u;
  char v23 = 1;
  static Alignment.center.getter();
  sub_10016786C(0.0, 1, 0.0, 1, INFINITY, 0, 56.0, 0, v28, 0.0, 1, 0.0, 1);
  sub_10017E1D0((uint64_t)v24);
  if (qword_10037DE58 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1003A9BD8;
  swift_retain();
  char v9 = static Edge.Set.all.getter();
  memcpy(v14, v28, 0x3D0uLL);
  v14[122] = v8;
  LOBYTE(v14[123]) = v9;
  uint64_t v10 = enum case for DynamicTypeSize.xLarge(_:);
  uint64_t v11 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v4, v10, v11);
  sub_10017EA28(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100004010(&qword_10038A270);
    sub_10017E2E0();
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    View.dynamicTypeSize<A>(_:)();
    sub_10010DE08((uint64_t)v4);
    memcpy(v29, v14, 0x3D9uLL);
    return sub_10017E4F8((uint64_t)v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10017D09C(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  long long v21 = v2;
  uint64_t v3 = static VerticalAlignment.center.getter();
  sub_10017D53C(v1, (uint64_t)__src);
  v30[448] = 0;
  memcpy(&v30[7], __src, 0x1B9uLL);
  uint64_t v25 = v3;
  uint64_t v26 = 0;
  char v27 = 0;
  memcpy(v28, v30, sizeof(v28));
  static Alignment.center.getter();
  sub_100167A28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v31, 0.0, 1, 0.0, 1);
  sub_10017E614((uint64_t)__src);
  uint64_t v20 = static HorizontalAlignment.center.getter();
  if (qword_10037DE58 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1003A9BD8;
  type metadata accessor for AppEvents();
  sub_10017EA28((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  swift_retain();
  uint64_t v4 = EnvironmentObject.init()();
  uint64_t v6 = v5;
  uint64_t v15 = v5;
  type metadata accessor for TryOutModel();
  sub_10017EA28(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  uint64_t v7 = EnvironmentObject.init()();
  uint64_t v9 = v8;
  uint64_t v16 = v8;
  v69[0] = 0;
  State.init(wrappedValue:)();
  char v10 = v47[0];
  uint64_t v18 = v47[1];
  char v17 = static Edge.Set.leading.getter();
  long long v11 = *(_OWORD *)(v1 + 16);
  long long v24 = *(_OWORD *)v1;
  char v35 = 0;
  v31[584] = 1;
  *(_DWORD *)Swift::String v50 = *(_DWORD *)v34;
  *(_DWORD *)uint64_t v57 = *(_DWORD *)v33;
  *(_DWORD *)&v50[3] = *(_DWORD *)&v34[3];
  *(_DWORD *)&v57[3] = *(_DWORD *)&v33[3];
  *(_DWORD *)Swift::String v60 = *(_DWORD *)v32;
  *(_DWORD *)&v60[3] = *(_DWORD *)&v32[3];
  long long v22 = v11;
  uint64_t v23 = *(void *)(v1 + 32);
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(void *)(v12 + 48) = *(void *)(v1 + 32);
  *(_DWORD *)id v64 = *(_DWORD *)v36;
  *(_DWORD *)&v64[3] = *(_DWORD *)&v36[3];
  memcpy(__dst, v31, sizeof(__dst));
  long long v38 = (unint64_t)v20;
  LOBYTE(v39) = 0;
  *(_DWORD *)((char *)&v39 + 1) = *(_DWORD *)v34;
  DWORD1(v39) = *(_DWORD *)&v34[3];
  *((void *)&v39 + 1) = v4;
  *(void *)&long long v40 = v6;
  *((void *)&v40 + 1) = v7;
  *(void *)&long long v41 = v9;
  *((void *)&v41 + 1) = v19;
  LOBYTE(v42) = v10;
  *(_DWORD *)((char *)&v42 + 1) = *(_DWORD *)v33;
  DWORD1(v42) = *(_DWORD *)&v33[3];
  *((void *)&v42 + 1) = v18;
  v43[0] = v17;
  *(_DWORD *)&v43[4] = *(_DWORD *)&v32[3];
  *(_DWORD *)&v43[1] = *(_DWORD *)v32;
  memset(&v43[8], 0, 32);
  v43[40] = 1;
  *(_DWORD *)&v43[41] = *(_DWORD *)v36;
  *(_DWORD *)&v43[44] = *(_DWORD *)&v36[3];
  Swift::String_optional v44 = sub_100037330;
  uint64_t v45 = 0;
  *(void *)&long long v46 = sub_10017E700;
  *((void *)&v46 + 1) = v12;
  memcpy(v47, v31, 0x248uLL);
  *(_OWORD *)&v47[85] = *(_OWORD *)&v43[16];
  *(_OWORD *)&v47[87] = *(_OWORD *)&v43[32];
  *(_OWORD *)&v47[89] = (unint64_t)sub_100037330;
  *(_OWORD *)&v47[91] = v46;
  *(_OWORD *)&v47[77] = v40;
  *(_OWORD *)&v47[79] = v41;
  *(_OWORD *)&v47[81] = v42;
  *(_OWORD *)&v47[83] = *(_OWORD *)v43;
  *(_OWORD *)&v47[73] = (unint64_t)v20;
  *(_OWORD *)&v47[75] = v39;
  memcpy(v21, v47, 0x2E8uLL);
  v48[0] = v20;
  v48[1] = 0;
  char v49 = 0;
  uint64_t v51 = v4;
  uint64_t v52 = v15;
  uint64_t v53 = v7;
  uint64_t v54 = v16;
  uint64_t v55 = v19;
  char v56 = v10;
  uint64_t v58 = v18;
  char v59 = v17;
  long long v61 = 0u;
  long long v62 = 0u;
  char v63 = 1;
  uint64_t v65 = sub_100037330;
  uint64_t v66 = 0;
  Swift::String v67 = sub_10017E700;
  uint64_t v68 = v12;
  sub_10016A0A0((uint64_t)__dst);
  sub_10017E708((uint64_t)&v38);
  sub_10004ED30((uint64_t)&v24);
  sub_10017E780((uint64_t)&v22);
  sub_10017E7AC((uint64_t)v48);
  memcpy(v69, v31, 0x248uLL);
  return sub_10017E824((uint64_t)v69);
}

uint64_t sub_10017D53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v37 = *(_OWORD *)(a1 + 16);
  *(void *)long long v38 = *(void *)(a1 + 32);
  sub_100004010(&qword_100383D50);
  State.wrappedValue.getter();
  static Alignment.center.getter();
  if (__src[0] < 0.0)
  {
    static os_log_type_t.fault.getter();
    uint64_t v4 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  char v22 = v61;
  uint64_t v29 = v62;
  uint64_t v30 = v60;
  uint64_t v28 = v64;
  uint64_t v27 = v66;
  char v5 = v69;
  uint64_t v25 = v70;
  uint64_t v26 = v68;
  char v6 = v71;
  uint64_t v23 = v73;
  uint64_t v24 = v72;
  char v21 = v63;
  char v20 = v65;
  char v19 = v67;
  uint64_t v7 = static HorizontalAlignment.center.getter();
  sub_10017D930((uint64_t *)a1, (uint64_t)v31);
  *(_OWORD *)&v33[183] = v31[11];
  *(_OWORD *)&v33[199] = v31[12];
  *(_OWORD *)&v33[215] = v32[0];
  *(_OWORD *)&v33[225] = *(_OWORD *)((char *)v32 + 10);
  *(_OWORD *)&v33[119] = v31[7];
  *(_OWORD *)&v33[135] = v31[8];
  *(_OWORD *)&v33[151] = v31[9];
  *(_OWORD *)&v33[167] = v31[10];
  *(_OWORD *)&v33[55] = v31[3];
  *(_OWORD *)&v33[71] = v31[4];
  *(_OWORD *)&v33[87] = v31[5];
  *(_OWORD *)&v33[103] = v31[6];
  *(_OWORD *)&unsigned char v33[7] = v31[0];
  *(_OWORD *)&v33[23] = v31[1];
  char v34 = 1;
  *(_OWORD *)&v33[39] = v31[2];
  char v8 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  *(_OWORD *)((char *)&__src[26] + 1) = *(_OWORD *)&v33[192];
  *(_OWORD *)((char *)&__src[28] + 1) = *(_OWORD *)&v33[208];
  *(_OWORD *)((char *)&__src[30] + 1) = *(_OWORD *)&v33[224];
  *(_OWORD *)((char *)&__src[18] + 1) = *(_OWORD *)&v33[128];
  *(_OWORD *)((char *)&__src[20] + 1) = *(_OWORD *)&v33[144];
  *(_OWORD *)((char *)&__src[22] + 1) = *(_OWORD *)&v33[160];
  *(_OWORD *)((char *)&__src[24] + 1) = *(_OWORD *)&v33[176];
  *(_OWORD *)((char *)&__src[10] + 1) = *(_OWORD *)&v33[64];
  *(_OWORD *)((char *)&__src[12] + 1) = *(_OWORD *)&v33[80];
  *(_OWORD *)((char *)&__src[14] + 1) = *(_OWORD *)&v33[96];
  *(_OWORD *)((char *)&__src[16] + 1) = *(_OWORD *)&v33[112];
  *(_OWORD *)((char *)&__src[2] + 1) = *(_OWORD *)v33;
  *(_OWORD *)((char *)&__src[4] + 1) = *(_OWORD *)&v33[16];
  *(_OWORD *)((char *)&__src[6] + 1) = *(_OWORD *)&v33[32];
  char v35 = 0;
  *(void *)&__src[0] = v7;
  __src[1] = 0.0;
  LOBYTE(__src[2]) = 1;
  BYTE1(__src[32]) = v33[240];
  *(_OWORD *)((char *)&__src[8] + 1) = *(_OWORD *)&v33[48];
  LOBYTE(__src[33]) = v8;
  __src[34] = v9;
  __src[35] = v11;
  __src[36] = v13;
  __src[37] = v15;
  LOBYTE(__src[38]) = 0;
  memcpy((void *)(a2 + 136), __src, 0x131uLL);
  long long v50 = *(_OWORD *)&v33[192];
  long long v51 = *(_OWORD *)&v33[208];
  long long v52 = *(_OWORD *)&v33[224];
  long long v46 = *(_OWORD *)&v33[128];
  long long v47 = *(_OWORD *)&v33[144];
  long long v48 = *(_OWORD *)&v33[160];
  long long v49 = *(_OWORD *)&v33[176];
  long long v42 = *(_OWORD *)&v33[64];
  long long v43 = *(_OWORD *)&v33[80];
  long long v44 = *(_OWORD *)&v33[96];
  long long v45 = *(_OWORD *)&v33[112];
  *(_OWORD *)&v38[1] = *(_OWORD *)v33;
  long long v39 = *(_OWORD *)&v33[16];
  long long v17 = *(_OWORD *)&v33[48];
  long long v40 = *(_OWORD *)&v33[32];
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v30;
  *(unsigned char *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v29;
  *(unsigned char *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v28;
  *(unsigned char *)(a2 + 56) = v20;
  *(void *)(a2 + 64) = v27;
  *(unsigned char *)(a2 + 72) = v19;
  *(void *)(a2 + 80) = v26;
  *(unsigned char *)(a2 + 88) = v5;
  *(void *)(a2 + 96) = v25;
  *(unsigned char *)(a2 + 104) = v6;
  *(void *)(a2 + 112) = v24;
  *(void *)(a2 + 120) = v23;
  *(void *)(a2 + 128) = 0xBFF0000000000000;
  long long v37 = (unint64_t)v7;
  v38[0] = 1;
  char v53 = v33[240];
  long long v41 = v17;
  char v54 = v8;
  double v55 = v10;
  double v56 = v12;
  double v57 = v14;
  double v58 = v16;
  char v59 = 0;
  sub_10017E8D0((uint64_t)__src);
  return sub_10017E97C((uint64_t)&v37);
}

uint64_t sub_10017D930@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v71._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v71._unint64_t object = (void *)0x80000001002CB6D0;
  v6._unint64_t object = (void *)0x80000001002CB6B0;
  v6._uint64_t countAndFlagsBits = 0xD000000000000012;
  v7._uint64_t countAndFlagsBits = 0;
  v7._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v71);

  sub_100033310();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.headline.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v13 = Text.font(_:)();
  uint64_t v59 = v14;
  uint64_t v60 = v13;
  char v56 = v15;
  uint64_t v17 = v16;
  swift_release();
  sub_100033364(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v18 = *a1;
  if (*a1)
  {
    id v19 = *(id *)(v18 + 112);
    char v54 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v21 = *(id *)(v18 + 112);
    static Alignment.center.getter();
    uint64_t v58 = KeyPath;
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    _FrameLayout.init(width:height:alignment:)();
    id v22 = *(id *)(v18 + 112);
    char v51 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v55 = swift_getKeyPath();
    id v23 = [v4 mainBundle];
    v24._uint64_t countAndFlagsBits = 0xD000000000000028;
    v72._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v72._unint64_t object = (void *)0x80000001002D1150;
    v24._unint64_t object = (void *)0x80000001002D1120;
    v25._uint64_t countAndFlagsBits = 0;
    v25._unint64_t object = (void *)0xE000000000000000;
    Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v72);

    uint64_t v27 = Text.init<A>(_:)();
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    static Font.caption.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v32 = Text.font(_:)();
    uint64_t v52 = v33;
    uint64_t v53 = v32;
    char v49 = v34;
    uint64_t v36 = v35;
    swift_release();
    sub_100033364(v27, v29, v31);
    swift_bridgeObjectRelease();
    id v37 = *(id *)(v18 + 112);
    char v38 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t v39 = swift_getKeyPath();
    id v40 = *(id *)(v18 + 112);
    static Alignment.center.getter();
    uint64_t v50 = v39;
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    char v41 = v49 & 1;
    char v42 = v56 & 1;
    BOOL v57 = (v38 & 1) == 0;
    double v43 = 0.5;
    if (v51) {
      double v44 = 1.0;
    }
    else {
      double v44 = 0.5;
    }
    _FrameLayout.init(width:height:alignment:)();
    id v45 = *(id *)(v18 + 112);
    char v46 = static UIContentSizeCategory.>= infix(_:_:)();

    if (v46) {
      double v43 = 1.0;
    }
    uint64_t v47 = swift_getKeyPath();
    *(void *)a2 = v60;
    *(void *)(a2 + 8) = v59;
    *(unsigned char *)(a2 + 16) = v42;
    *(void *)(a2 + 24) = v17;
    *(void *)(a2 + 32) = v58;
    *(unsigned char *)(a2 + 40) = (v54 & 1) == 0;
    *(void *)(a2 + 48) = v61;
    *(unsigned char *)(a2 + 56) = v62;
    *(void *)(a2 + 64) = v63;
    *(unsigned char *)(a2 + 72) = v64;
    *(void *)(a2 + 80) = v65;
    *(void *)(a2 + 88) = v66;
    *(void *)(a2 + 96) = v55;
    *(double *)(a2 + 104) = v44;
    *(_WORD *)(a2 + 112) = 256;
    *(void *)(a2 + 120) = v53;
    *(void *)(a2 + 128) = v52;
    *(unsigned char *)(a2 + 136) = v41;
    *(void *)(a2 + 144) = v36;
    *(void *)(a2 + 152) = v50;
    *(unsigned char *)(a2 + 160) = v57;
    *(void *)(a2 + 168) = v26._countAndFlagsBits;
    *(unsigned char *)(a2 + 176) = v26._object;
    *(void *)(a2 + 184) = v67;
    *(unsigned char *)(a2 + 192) = v68;
    *(void *)(a2 + 200) = v69;
    *(void *)(a2 + 208) = v70;
    *(void *)(a2 + 216) = v47;
    *(double *)(a2 + 224) = v43;
    *(_WORD *)(a2 + 232) = 256;
    sub_100033724(v60, v59, v42);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100033724(v53, v52, v41);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100033364(v53, v52, v41);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100033364(v60, v59, v42);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10017EA28((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10017DFC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (qword_10037DE38 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9B80);
  Swift::String v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    *(void *)&long long v13 = v3;
    *((void *)&v13 + 1) = v4;
    type metadata accessor for CGSize(0);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)&long long v13 = sub_1001B3178(v9, v10, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "End button size changed: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  long long v13 = *(_OWORD *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 32);
  v12[0] = v3;
  v12[1] = v4;
  sub_100004010(&qword_100383D50);
  return State.wrappedValue.setter();
}

uint64_t sub_10017E194(uint64_t a1)
{
  return sub_10017CD74(a1);
}

uint64_t sub_10017E1D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v3 = *(void *)(a1 + 312);
  char v4 = *(unsigned char *)(a1 + 320);
  sub_100033364(*(void *)(a1 + 184), *(void *)(a1 + 192), *(unsigned char *)(a1 + 200));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_10017E2E0()
{
  unint64_t result = qword_10038A278;
  if (!qword_10038A278)
  {
    sub_1000094C4(&qword_10038A270);
    sub_10017E3DC(&qword_10038A280, &qword_10038A288, (void (*)(void))sub_10017E3AC);
    sub_100009B18(&qword_100387AF0, &qword_100387AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A278);
  }
  return result;
}

uint64_t sub_10017E3AC()
{
  return sub_10017E3DC(&qword_10038A290, &qword_10038A298, (void (*)(void))sub_10017E458);
}

uint64_t sub_10017E3DC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10017E458()
{
  unint64_t result = qword_10038A2A0;
  if (!qword_10038A2A0)
  {
    sub_1000094C4(&qword_10038A2A8);
    sub_100009B18(&qword_10038A2B0, &qword_10038A2B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A2A0);
  }
  return result;
}

uint64_t sub_10017E4F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 328);
  uint64_t v3 = *(void *)(a1 + 336);
  char v4 = *(unsigned char *)(a1 + 344);
  sub_100033364(*(void *)(a1 + 208), *(void *)(a1 + 216), *(unsigned char *)(a1 + 224));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10017E614(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 280);
  uint64_t v3 = *(void *)(a1 + 288);
  char v4 = *(unsigned char *)(a1 + 296);
  sub_100033364(*(void *)(a1 + 160), *(void *)(a1 + 168), *(unsigned char *)(a1 + 176));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10017E6C0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10017E700(uint64_t *a1)
{
  return sub_10017DFC4(a1, v1 + 16);
}

uint64_t sub_10017E708(uint64_t a1)
{
  return a1;
}

uint64_t sub_10017E780(uint64_t a1)
{
  return a1;
}

uint64_t sub_10017E7AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10017E824(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v3 = *(void *)(a1 + 312);
  char v4 = *(unsigned char *)(a1 + 320);
  sub_100033364(*(void *)(a1 + 184), *(void *)(a1 + 192), *(unsigned char *)(a1 + 200));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10017E8D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  char v4 = *(unsigned char *)(a1 + 160);
  sub_100033724(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100033724(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10017E97C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  char v4 = *(unsigned char *)(a1 + 160);
  sub_100033364(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100033364(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10017EA28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10017EA80()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ConnectionAssitantBannerView()
{
  return &type metadata for ConnectionAssitantBannerView;
}

uint64_t sub_10017EB34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017EB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CABannerView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004010(&qword_10037F0C8);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v15 = a1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
    swift_beginAccess();
    sub_10000D2A0(v15, (uint64_t)v10, &qword_10037F0C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_10000950C((uint64_t)v10, &qword_10037F0C8);
      uint64_t v16 = 1;
    }
    else
    {
      sub_10017EF58((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
      sub_100181188((uint64_t)v14, (uint64_t)v7 + *(int *)(v4 + 24), (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
      type metadata accessor for AppEvents();
      sub_10017EF10((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
      *os_log_type_t v7 = EnvironmentObject.init()();
      v7[1] = v17;
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      v7[2] = EnvironmentObject.init()();
      void v7[3] = v18;
      sub_100188A14((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
      sub_10017EF58((uint64_t)v7, a2, type metadata accessor for CABannerView);
      uint64_t v16 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v16, 1, v4);
  }
  else
  {
    type metadata accessor for BannerAppearanceModel();
    sub_10017EF10(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10017EEE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10017EB50(*v1, a1);
}

uint64_t type metadata accessor for CABannerView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038A318);
}

uint64_t sub_10017EF10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10017EF58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_10017EFC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v11 = type metadata accessor for ConnectionClosed(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100004010(&qword_100380418);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(void *)&v8[*(int *)(v11 + 24)] = *(void *)&v9[*(int *)(v11 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return v5;
}

uint64_t sub_10017F1D4(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v6 = v4 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10017F2F0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v7 = *v8;
    uint64_t v10 = type metadata accessor for ConnectionClosed(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = &v7[v11];
    uint64_t v13 = &v8[v11];
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100004010(&qword_100380418);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

void *sub_10017F4B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100188A14((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *sub_10017F6BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v7;
    uint64_t v9 = type metadata accessor for ConnectionClosed(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = &v6[v10];
    uint64_t v12 = &v7[v10];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100004010(&qword_100380418);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(void *)&v6[*(int *)(v9 + 24)] = *(void *)&v7[*(int *)(v9 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_10017F860(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_100188A14((uint64_t)a1 + v7, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v10 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v11 = type metadata accessor for ConnectionClosed(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100004010(&qword_100380418);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(void *)&v8[*(int *)(v11 + 24)] = *(void *)&v9[*(int *)(v11 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10017FA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017FA64);
}

uint64_t sub_10017FA64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10017FB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017FB34);
}

void *sub_10017FB34(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10017FBDC()
{
  uint64_t result = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10017FC78()
{
  unint64_t result = qword_10038A358;
  if (!qword_10038A358)
  {
    sub_1000094C4(&qword_10038A360);
    sub_10017EF10(&qword_10038A368, (void (*)(uint64_t))type metadata accessor for CABannerView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A358);
  }
  return result;
}

uint64_t sub_10017FD1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017FD38@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CABannerView(0);
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for AppEvents();
  sub_10017EF10((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  *a1 = EnvironmentObject.init()();
  a1[1] = v2;
  type metadata accessor for UIMetrics();
  sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t result = EnvironmentObject.init()();
  a1[2] = result;
  a1[3] = v4;
  return result;
}

uint64_t sub_10017FE20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v2 = sub_100004010(&qword_10038A370);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038A378);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(v1 + 16);
  if (v9)
  {
    uint64_t v10 = v9[9];
    uint64_t v11 = v9[10];
    sub_100008F88(v9 + 6, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v17, v10, v11);
    uint64_t v12 = static Axis.Set.vertical.getter();
    __chkstk_darwin(v12);
    *(&v14 - 2) = v1;
    *(&v14 - 1) = (uint64_t)v17;
    sub_100004010(&qword_10038A380);
    sub_100181048();
    ScrollView.init(_:showsIndicators:content:)();
    sub_100009B18(&qword_10038A3C0, &qword_10038A370);
    View.scrollDisabled(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v16, v8, v15);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v17);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001800F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CABannerView(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_100004010(&qword_10038A3A8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_10038A398);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.center.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v16 = sub_100004010(&qword_10038A3C8);
  sub_100180378(a1, (uint64_t)&v11[*(int *)(v16 + 44)]);
  sub_10000D2A0((uint64_t)v11, (uint64_t)v15, &qword_10038A3A8);
  *(_WORD *)&v15[*(int *)(v13 + 44)] = 256;
  sub_10000950C((uint64_t)v11, &qword_10038A3A8);
  uint64_t v17 = sub_100008F88(a2, a2[3]);
  uint64_t v18 = *(void *)(*v17 + 16);
  uint64_t v19 = *(void *)(*v17 + 24);
  sub_100181188(a1, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CABannerView);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  sub_10017EF58((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for CABannerView);
  uint64_t v22 = static Alignment.center.getter();
  uint64_t v24 = v23;
  sub_10000D2A0((uint64_t)v15, a3, &qword_10038A398);
  Swift::String v25 = (void *)(a3 + *(int *)(sub_100004010(&qword_10038A380) + 36));
  *Swift::String v25 = v18;
  v25[1] = v19;
  v25[2] = sub_10018136C;
  v25[3] = v21;
  v25[4] = v22;
  void v25[5] = v24;
  return sub_10000950C((uint64_t)v15, &qword_10038A398);
}

uint64_t sub_100180378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100004010(&qword_10038A3D0);
  __chkstk_darwin(v3);
  int v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10038A3D8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + *(int *)(type metadata accessor for CABannerView(0) + 24);
  swift_storeEnumTagMultiPayload();
  char v13 = sub_1001E5BCC(v12, (uint64_t)v11);
  sub_100188A14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  if (v13)
  {
    type metadata accessor for ConnectivityModel();
    sub_10017EF10(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
    uint64_t v14 = EnvironmentObject.init()();
    uint64_t v46 = v15;
    uint64_t v47 = v14;
    type metadata accessor for GeoLocationModel();
    sub_10017EF10(&qword_100385440, (void (*)(uint64_t))type metadata accessor for GeoLocationModel);
    uint64_t v16 = EnvironmentObject.init()();
    uint64_t v44 = v17;
    uint64_t v45 = v16;
    type metadata accessor for GuidanceMessagesModel();
    sub_10017EF10(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
    uint64_t v18 = EnvironmentObject.init()();
    uint64_t v42 = v19;
    uint64_t v43 = v18;
    type metadata accessor for GuidanceModel(0);
    sub_10017EF10(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
    uint64_t v20 = EnvironmentObject.init()();
    uint64_t v40 = v21;
    uint64_t v41 = v20;
    type metadata accessor for PartnerModel();
    sub_10017EF10(&qword_100380DA8, (void (*)(uint64_t))type metadata accessor for PartnerModel);
    uint64_t v22 = EnvironmentObject.init()();
    uint64_t v24 = v23;
    type metadata accessor for StewieModel();
    sub_10017EF10(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
    uint64_t v25 = EnvironmentObject.init()();
    uint64_t v39 = v3;
    uint64_t v27 = v26;
    type metadata accessor for TimeZoneModel();
    sub_10017EF10(&qword_100385448, (void (*)(uint64_t))type metadata accessor for TimeZoneModel);
    uint64_t v28 = EnvironmentObject.init()();
    uint64_t v30 = v29;
    type metadata accessor for TryOutModel();
    sub_10017EF10(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
    uint64_t v31 = EnvironmentObject.init()();
    uint64_t v32 = v46;
    *(void *)uint64_t v8 = v47;
    *((void *)v8 + 1) = v32;
    uint64_t v33 = v44;
    *((void *)v8 + 2) = v45;
    *((void *)v8 + 3) = v33;
    uint64_t v34 = v42;
    *((void *)v8 + 4) = v43;
    *((void *)v8 + 5) = v34;
    uint64_t v35 = v40;
    *((void *)v8 + 6) = v41;
    *((void *)v8 + 7) = v35;
    *((void *)v8 + 8) = v22;
    *((void *)v8 + 9) = v24;
    *((void *)v8 + 10) = v25;
    *((void *)v8 + 11) = v27;
    *((void *)v8 + 12) = v28;
    *((void *)v8 + 13) = v30;
    *((void *)v8 + 14) = v31;
    *((void *)v8 + 15) = v36;
    *((_OWORD *)v8 + 8) = 0u;
    *((_OWORD *)v8 + 9) = 0u;
    swift_storeEnumTagMultiPayload();
    sub_1001889A0();
    sub_100009B18(&qword_10038A3F0, &qword_10038A3D0);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    *(void *)int v5 = static VerticalAlignment.top.getter();
    *((void *)v5 + 1) = 0;
    v5[16] = 0;
    uint64_t v38 = sub_100004010(&qword_10038A3E0);
    sub_10018087C(a1, (uint64_t)&v5[*(int *)(v38 + 44)]);
    sub_10000D2A0((uint64_t)v5, (uint64_t)v8, &qword_10038A3D0);
    swift_storeEnumTagMultiPayload();
    sub_1001889A0();
    sub_100009B18(&qword_10038A3F0, &qword_10038A3D0);
    _ConditionalContent<>.init(storage:)();
    return sub_10000950C((uint64_t)v5, &qword_10038A3D0);
  }
}

uint64_t sub_10018087C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_10038A3F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038A400);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v27 - v12;
  uint64_t v14 = type metadata accessor for CABannerStaticContentLeadingView(0);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v27 - v19);
  uint64_t v21 = type metadata accessor for CABannerView(0);
  sub_100181188(a1 + *(int *)(v21 + 24), (uint64_t)v20 + *(int *)(v15 + 28), (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  type metadata accessor for UIMetrics();
  sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  *uint64_t v20 = EnvironmentObject.init()();
  v20[1] = v22;
  *(void *)uint64_t v6 = static VerticalAlignment.top.getter();
  *((void *)v6 + 1) = 0x4020000000000000;
  v6[16] = 0;
  uint64_t v23 = sub_100004010(&qword_10038A408);
  sub_100180B9C(a1, (uint64_t)&v6[*(int *)(v23 + 44)]);
  LOBYTE(v15) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v6, (uint64_t)v11, &qword_10038A3F8);
  uint64_t v24 = &v11[*(int *)(v8 + 44)];
  *uint64_t v24 = v15;
  *(_OWORD *)(v24 + 8) = xmmword_1002BDA70;
  *(_OWORD *)(v24 + 24) = xmmword_1002BDA80;
  v24[40] = 0;
  sub_10000950C((uint64_t)v6, &qword_10038A3F8);
  sub_10000D544((uint64_t)v11, (uint64_t)v13, &qword_10038A400);
  sub_100181188((uint64_t)v20, (uint64_t)v18, type metadata accessor for CABannerStaticContentLeadingView);
  sub_10000D2A0((uint64_t)v13, (uint64_t)v11, &qword_10038A400);
  sub_100181188((uint64_t)v18, a2, type metadata accessor for CABannerStaticContentLeadingView);
  uint64_t v25 = sub_100004010(&qword_10038A410);
  sub_10000D2A0((uint64_t)v11, a2 + *(int *)(v25 + 48), &qword_10038A400);
  sub_10000950C((uint64_t)v13, &qword_10038A400);
  sub_100188A14((uint64_t)v20, type metadata accessor for CABannerStaticContentLeadingView);
  sub_10000950C((uint64_t)v11, &qword_10038A400);
  return sub_100188A14((uint64_t)v18, type metadata accessor for CABannerStaticContentLeadingView);
}

uint64_t sub_100180B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CABannerStaticContentTrailingView(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_100004010(&qword_10038A418);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = static HorizontalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v16 = (uint64_t)&v15[*(int *)(sub_100004010(&qword_10038A420) + 44)];
  uint64_t v17 = a1 + *(int *)(type metadata accessor for CABannerView(0) + 24);
  sub_100181188(v17, v16, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  sub_100181188(v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  sub_10000D2A0((uint64_t)v15, (uint64_t)v13, &qword_10038A418);
  sub_100181188((uint64_t)v9, (uint64_t)v7, type metadata accessor for CABannerStaticContentTrailingView);
  sub_10000D2A0((uint64_t)v13, a2, &qword_10038A418);
  uint64_t v18 = sub_100004010(&qword_10038A428);
  sub_100181188((uint64_t)v7, a2 + *(int *)(v18 + 48), type metadata accessor for CABannerStaticContentTrailingView);
  sub_100188A14((uint64_t)v9, type metadata accessor for CABannerStaticContentTrailingView);
  sub_10000950C((uint64_t)v15, &qword_10038A418);
  sub_100188A14((uint64_t)v7, type metadata accessor for CABannerStaticContentTrailingView);
  return sub_10000950C((uint64_t)v13, &qword_10038A418);
}

uint64_t sub_100180DC0(void *a1, double a2, double a3)
{
  if (qword_10037DD98 != -1) {
    swift_once();
  }
  double v6 = ceil(a3);
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A99A0);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v17 = *(void *)&a2;
    double v18 = a3;
    type metadata accessor for CGSize(0);
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v17 = sub_1001B3178(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    uint64_t v17 = *(void *)&a2;
    double v18 = v6;
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v17 = sub_1001B3178(v13, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Banner content changed, size: %{public}s, reporting: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (*a1)
  {
    uint64_t v17 = *(void *)&a2;
    double v18 = v6;
    swift_retain();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_10017EF10((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100181040@<X0>(uint64_t a1@<X8>)
{
  return sub_1001800F0(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_100181048()
{
  unint64_t result = qword_10038A388;
  if (!qword_10038A388)
  {
    sub_1000094C4(&qword_10038A380);
    sub_1001810E8();
    sub_100009B18(&qword_10038A3B0, &qword_10038A3B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A388);
  }
  return result;
}

unint64_t sub_1001810E8()
{
  unint64_t result = qword_10038A390;
  if (!qword_10038A390)
  {
    sub_1000094C4(&qword_10038A398);
    sub_100009B18(&qword_10038A3A0, &qword_10038A3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A390);
  }
  return result;
}

uint64_t sub_100181188(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001811F0()
{
  uint64_t v1 = (int *)(type metadata accessor for CABannerView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[8];
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = v5 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10018136C(double a1, double a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CABannerView(0) - 8);
  uint64_t v6 = (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_100180DC0(v6, a1, a2);
}

uint64_t sub_1001813E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v137 = a1;
  uint64_t v135 = sub_100004010(&qword_10038A680);
  __chkstk_darwin(v135);
  char v136 = (uint64_t *)((char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_100004010(&qword_100389C28);
  __chkstk_darwin(v3 - 8);
  uint64_t v120 = (uint64_t *)((char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = sub_100004010(&qword_10038A688);
  __chkstk_darwin(v119);
  uint64_t v122 = (uint64_t)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_100004010(&qword_10038A690);
  uint64_t v6 = __chkstk_darwin(v127);
  uint64_t v121 = (uint64_t)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v123 = (uint64_t)&v114 - v8;
  uint64_t v129 = sub_100004010(&qword_10038A698);
  __chkstk_darwin(v129);
  uint64_t v132 = (_OWORD *)((char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = sub_100004010(&qword_10038A6A0);
  __chkstk_darwin(v125);
  uint64_t v126 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100004010(&qword_10038A6A8);
  __chkstk_darwin(v131);
  uint64_t v128 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100389C18);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100004010(&qword_10038A6B0);
  __chkstk_darwin(v115);
  uint64_t v117 = (uint64_t)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100004010(&qword_10038A6B8);
  uint64_t v16 = __chkstk_darwin(v124);
  uint64_t v116 = (uint64_t)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)&v114 - v18;
  uint64_t v19 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100004010(&qword_10038A6C0);
  __chkstk_darwin(v134);
  uint64_t v130 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004010(&qword_10038A6C8);
  __chkstk_darwin(v23 - 8);
  uint64_t v133 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v1;
  uint64_t v26 = *v1;
  if (!*v1)
  {
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x1001822B4);
  }
  uint64_t v27 = *(void *)(v26 + 72);
  uint64_t v28 = *(void *)(v26 + 80);
  sub_100008F88((void *)(v26 + 48), v27);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v160, v27, v28);
  id v29 = *(id *)(v26 + 112);
  char v30 = static UIContentSizeCategory.>= infix(_:_:)();

  if (v30)
  {
    uint64_t v31 = static HorizontalAlignment.center.getter();
    char v32 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v33 = v136;
    *char v136 = v31;
    v33[1] = 0;
    *((unsigned char *)v33 + 16) = 1;
    *((unsigned char *)v33 + 24) = v32;
    v33[4] = v34;
    v33[5] = v35;
    v33[6] = v36;
    unsigned char v33[7] = v37;
    *((unsigned char *)v33 + 64) = 0;
    swift_storeEnumTagMultiPayload();
    sub_100004010(&qword_1003869D0);
    sub_10018A890();
    sub_1000F0BD4();
    uint64_t v38 = (uint64_t)v133;
    _ConditionalContent<>.init(storage:)();
    uint64_t v39 = v137;
  }
  else
  {
    uint64_t v40 = type metadata accessor for CABannerStaticContentLeadingView(0);
    sub_100181188((uint64_t)v25 + *(int *)(v40 + 20), (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_100188A14((uint64_t)v21, type metadata accessor for ConnectionClosed);
        goto LABEL_7;
      case 2u:
      case 4u:
LABEL_7:
        type metadata accessor for ConnectionClosedModel(0);
        sub_10017EF10(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
        uint64_t v64 = EnvironmentObject.init()();
        uint64_t v128 = v65;
        type metadata accessor for ConnectivityModel();
        sub_10017EF10(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
        uint64_t v66 = EnvironmentObject.init()();
        uint64_t v126 = v67;
        type metadata accessor for GuidanceModel(0);
        sub_10017EF10(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
        uint64_t v68 = EnvironmentObject.init()();
        uint64_t v125 = v69;
        type metadata accessor for OrientationModel();
        sub_10017EF10(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
        uint64_t v70 = EnvironmentObject.init()();
        uint64_t v72 = v71;
        type metadata accessor for StewieModel();
        sub_10017EF10(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
        uint64_t v73 = EnvironmentObject.init()();
        uint64_t v75 = v74;
        type metadata accessor for UIMetrics();
        sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
        uint64_t v76 = EnvironmentObject.init()();
        uint64_t v78 = v77;
        char v79 = static Edge.Set.all.getter();
        char v138 = 0;
        uint64_t v127 = v64;
        v151[0] = v64;
        v151[1] = v128;
        v151[2] = v66;
        v151[3] = v126;
        v151[4] = v68;
        v151[5] = v125;
        v151[6] = v70;
        v151[7] = v72;
        v151[8] = v73;
        v151[9] = v75;
        v151[10] = v76;
        v151[11] = v78;
        char v152 = 2;
        *(_DWORD *)&v153[3] = *(_DWORD *)&v140[3];
        *(_DWORD *)uint64_t v153 = *(_DWORD *)v140;
        uint64_t v154 = 0;
        char v155 = v79;
        *(_DWORD *)&v156[3] = *(_DWORD *)&v139[3];
        *(_DWORD *)uint64_t v156 = *(_DWORD *)v139;
        __asm { FMOV            V0.2D, #16.0 }
        long long v157 = _Q0;
        long long v158 = _Q0;
        char v159 = 0;
        sub_10018A8CC((uint64_t)v151);
        sub_10000D544((uint64_t)v151, (uint64_t)v141, &qword_10038A6D0);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_100004010(&qword_10038A6D8);
        sub_10018A524();
        _ConditionalContent<>.init(storage:)();
        long long v81 = v149;
        Swift::String v82 = v132;
        v132[6] = v148;
        v82[7] = v81;
        v82[8] = v150[0];
        *(_OWORD *)((char *)v82 + 138) = *(_OWORD *)((char *)v150 + 10);
        long long v83 = v145;
        v82[2] = v144;
        uint64_t v82[3] = v83;
        long long v84 = v147;
        v82[4] = v146;
        v82[5] = v84;
        long long v85 = v143;
        *Swift::String v82 = v142;
        v82[1] = v85;
        swift_storeEnumTagMultiPayload();
        sub_100004010(&qword_10038A6E8);
        sub_10018A5A0();
        sub_10018A814();
        uint64_t v86 = (uint64_t)v130;
        _ConditionalContent<>.init(storage:)();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_11;
      case 3u:
        uint64_t v92 = static HorizontalAlignment.leading.getter();
        uint64_t v93 = (uint64_t)v120;
        *uint64_t v120 = v92;
        *(void *)(v93 + 8) = 0;
        *(unsigned char *)(v93 + 16) = 0;
        uint64_t v94 = v93 + *(int *)(sub_100004010(&qword_10038A738) + 44);
        uint64_t v95 = *(void *)(v26 + 72);
        uint64_t v96 = *(void *)(v26 + 80);
        sub_100008F88((void *)(v26 + 48), v95);
        (*(void (**)(uint64_t, uint64_t))(v96 + 40))(v95, v96);
        uint64_t v97 = static Font.largeTitle.getter();
        sub_1000814FC(v97, v94);
        swift_release();
        char v98 = static Edge.Set.all.getter();
        uint64_t v99 = v122;
        sub_10000D2A0(v93, v122, &qword_100389C28);
        uint64_t v100 = v99 + *(int *)(v119 + 36);
        *(unsigned char *)uint64_t v100 = v98;
        __asm { FMOV            V0.2D, #16.0 }
        *(_OWORD *)(v100 + 8) = _Q0;
        *(_OWORD *)(v100 + 24) = _Q0;
        *(unsigned char *)(v100 + 40) = 0;
        sub_10000950C(v93, &qword_100389C28);
        char v102 = static Edge.Set.top.getter();
        EdgeInsets.init(_all:)();
        uint64_t v104 = v103;
        uint64_t v106 = v105;
        uint64_t v108 = v107;
        uint64_t v110 = v109;
        uint64_t v111 = v121;
        sub_10000D2A0(v99, v121, &qword_10038A688);
        uint64_t v112 = v111 + *(int *)(v127 + 36);
        *(unsigned char *)uint64_t v112 = v102;
        *(void *)(v112 + 8) = v104;
        *(void *)(v112 + 16) = v106;
        *(void *)(v112 + 24) = v108;
        *(void *)(v112 + 32) = v110;
        *(unsigned char *)(v112 + 40) = 0;
        sub_10000950C(v99, &qword_10038A688);
        uint64_t v61 = &qword_10038A690;
        uint64_t v62 = v123;
        sub_10000D544(v111, v123, &qword_10038A690);
        sub_10000D2A0(v62, v126, &qword_10038A690);
        swift_storeEnumTagMultiPayload();
        sub_10018A5DC();
        sub_10018A6F8();
        uint64_t v63 = (uint64_t)v128;
        goto LABEL_10;
      case 5u:
        sub_10018A518((uint64_t)v151);
        sub_10000D544((uint64_t)v151, (uint64_t)v141, &qword_10038A6D0);
        sub_100004010(&qword_10038A6D8);
        sub_10018A524();
        _ConditionalContent<>.init(storage:)();
        long long v87 = v149;
        unint64_t v88 = v132;
        v132[6] = v148;
        v88[7] = v87;
        v88[8] = v150[0];
        *(_OWORD *)((char *)v88 + 138) = *(_OWORD *)((char *)v150 + 10);
        long long v89 = v145;
        v88[2] = v144;
        v88[3] = v89;
        long long v90 = v147;
        v88[4] = v146;
        v88[5] = v90;
        long long v91 = v143;
        *unint64_t v88 = v142;
        v88[1] = v91;
        swift_storeEnumTagMultiPayload();
        sub_100004010(&qword_10038A6E8);
        sub_10018A5A0();
        sub_10018A814();
        uint64_t v86 = (uint64_t)v130;
        _ConditionalContent<>.init(storage:)();
        goto LABEL_11;
      default:
        *(void *)unint64_t v14 = static HorizontalAlignment.center.getter();
        *((void *)v14 + 1) = 0;
        v14[16] = 0;
        uint64_t v41 = sub_100004010(&qword_10038A740);
        sub_1001822CC((uint64_t)&v14[*(int *)(v41 + 44)]);
        char v42 = static Edge.Set.all.getter();
        uint64_t v43 = v117;
        sub_10000D2A0((uint64_t)v14, v117, &qword_100389C18);
        uint64_t v44 = v43 + *(int *)(v115 + 36);
        *(unsigned char *)uint64_t v44 = v42;
        __asm { FMOV            V0.2D, #16.0 }
        *(_OWORD *)(v44 + 8) = _Q0;
        *(_OWORD *)(v44 + 24) = _Q0;
        *(unsigned char *)(v44 + 40) = 0;
        sub_10000950C((uint64_t)v14, &qword_100389C18);
        char v50 = static Edge.Set.top.getter();
        EdgeInsets.init(_all:)();
        uint64_t v52 = v51;
        uint64_t v54 = v53;
        uint64_t v56 = v55;
        uint64_t v58 = v57;
        uint64_t v59 = v116;
        sub_10000D2A0(v43, v116, &qword_10038A6B0);
        uint64_t v60 = v59 + *(int *)(v124 + 36);
        *(unsigned char *)uint64_t v60 = v50;
        *(void *)(v60 + 8) = v52;
        *(void *)(v60 + 16) = v54;
        *(void *)(v60 + 24) = v56;
        *(void *)(v60 + 32) = v58;
        *(unsigned char *)(v60 + 40) = 0;
        sub_10000950C(v43, &qword_10038A6B0);
        uint64_t v61 = &qword_10038A6B8;
        uint64_t v62 = v118;
        sub_10000D544(v59, v118, &qword_10038A6B8);
        sub_10000D2A0(v62, v126, &qword_10038A6B8);
        swift_storeEnumTagMultiPayload();
        sub_10018A5DC();
        sub_10018A6F8();
        uint64_t v63 = (uint64_t)v128;
LABEL_10:
        _ConditionalContent<>.init(storage:)();
        sub_10000D2A0(v63, (uint64_t)v132, &qword_10038A6A8);
        swift_storeEnumTagMultiPayload();
        sub_100004010(&qword_10038A6E8);
        sub_10018A5A0();
        sub_10018A814();
        uint64_t v86 = (uint64_t)v130;
        _ConditionalContent<>.init(storage:)();
        sub_10000950C(v63, &qword_10038A6A8);
        sub_10000950C(v62, v61);
LABEL_11:
        uint64_t v39 = v137;
        uint64_t v38 = (uint64_t)v133;
        sub_10000D2A0(v86, (uint64_t)v136, &qword_10038A6C0);
        swift_storeEnumTagMultiPayload();
        sub_100004010(&qword_1003869D0);
        sub_10018A890();
        sub_1000F0BD4();
        _ConditionalContent<>.init(storage:)();
        sub_10000950C(v86, &qword_10038A6C0);
        break;
    }
  }
  sub_10000D544(v38, v39, &qword_10038A6C8);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v160);
}

uint64_t sub_1001822CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v1 = type metadata accessor for Image.Scale();
  uint64_t v49 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  __chkstk_darwin(v1);
  uint64_t v48 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SymbolVariants();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004010(&qword_1003831D0);
  uint64_t v45 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100004010(&qword_100386E98);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_100386EA0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004010(&qword_10038A748);
  __chkstk_darwin(v42);
  unint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038A750);
  __chkstk_darwin(v15 - 8);
  uint64_t v47 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = Image.init(_internalSystemName:)();
  uint64_t v18 = static Font.largeTitle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v17;
  unint64_t v53 = KeyPath;
  uint64_t v54 = v18;
  static SymbolVariants.circle.getter();
  uint64_t v20 = sub_100004010(&qword_10037F1D8);
  unint64_t v21 = sub_10000C9A4();
  View.symbolVariant(_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  swift_release();
  swift_release();
  swift_release();
  static SymbolVariants.fill.getter();
  uint64_t v52 = v20;
  unint64_t v53 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v40;
  uint64_t v24 = v43;
  View.symbolVariant(_:)();
  v22(v6, v3);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v24);
  uint64_t v25 = static Color.white.getter();
  uint64_t v26 = static Color.red.getter();
  uint64_t v27 = v44;
  uint64_t v28 = (uint64_t)v41;
  uint64_t v29 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v23, v46);
  char v30 = (uint64_t *)(v28 + *(int *)(v11 + 44));
  *char v30 = v25;
  v30[1] = v26;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v29);
  char v32 = v48;
  uint64_t v31 = v49;
  uint64_t v33 = v50;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for Image.Scale.large(_:), v50);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (uint64_t *)&v14[*(int *)(v42 + 36)];
  uint64_t v36 = sub_100004010(&qword_1003828F8);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v35 + *(int *)(v36 + 28), v32, v33);
  *uint64_t v35 = v34;
  sub_10000D2A0(v28, (uint64_t)v14, &qword_100386EA0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  sub_10000950C(v28, &qword_100386EA0);
  sub_10018A904();
  uint64_t v37 = (uint64_t)v47;
  View.accessibility(hidden:)();
  sub_10000950C((uint64_t)v14, &qword_10038A748);
  return sub_10000D544(v37, v51, &qword_10038A750);
}

uint64_t sub_100182888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for CABannerConnectionClosedView(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for ConnectionClosed(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004010(&qword_10038A600);
  __chkstk_darwin(v48);
  uint64_t v50 = (_OWORD *)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_100004010(&qword_10038A608);
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_10038A610);
  __chkstk_darwin(v12);
  unint64_t v14 = (uint64_t *)((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_100004010(&qword_10038A618);
  __chkstk_darwin(v46);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004010(&qword_10038A620);
  __chkstk_darwin(v49);
  uint64_t v47 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v18);
  uint64_t v20 = (unsigned __int8 *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100181188(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10017EF58((uint64_t)v20, (uint64_t)v8, type metadata accessor for ConnectionClosed);
      sub_100181188((uint64_t)v8, (uint64_t)v5 + *(int *)(v3 + 20), type metadata accessor for ConnectionClosed);
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *uint64_t v5 = EnvironmentObject.init()();
      v5[1] = v24;
      sub_100181188((uint64_t)v5, (uint64_t)v14, type metadata accessor for CABannerConnectionClosedView);
      swift_storeEnumTagMultiPayload();
      sub_10018A364();
      sub_10017EF10(&qword_10038A650, (void (*)(uint64_t))type metadata accessor for CABannerConnectionClosedView);
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)v16, (uint64_t)v11, &qword_10038A618);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A660);
      sub_10018A2B8();
      sub_10018A3B8();
      uint64_t v25 = (uint64_t)v47;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)v16, &qword_10038A618);
      sub_10000D2A0(v25, (uint64_t)v50, &qword_10038A620);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A630);
      sub_10018A230(&qword_10038A638, &qword_10038A620, (void (*)(void))sub_10018A2B8, (void (*)(void))sub_10018A3B8);
      sub_10018A49C();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v25, &qword_10038A620);
      sub_100188A14((uint64_t)v5, type metadata accessor for CABannerConnectionClosedView);
      return sub_100188A14((uint64_t)v8, type metadata accessor for ConnectionClosed);
    case 2u:
      unsigned __int8 v26 = *v20;
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *(void *)&long long v52 = EnvironmentObject.init()();
      *((void *)&v52 + 1) = v27;
      LOWORD(v53) = v26;
      goto LABEL_6;
    case 3u:
      unsigned __int8 v28 = *v20;
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *(void *)&long long v52 = EnvironmentObject.init()();
      *((void *)&v52 + 1) = v29;
      LOBYTE(v53) = v28;
      BYTE1(v53) = 1;
LABEL_6:
      sub_10018A3F4();
      sub_10018A448();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      char v30 = v56;
      char v31 = BYTE1(v56);
      *(_OWORD *)uint64_t v11 = v55;
      v11[16] = v30;
      v11[17] = v31;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A660);
      sub_10018A2B8();
      sub_10018A3B8();
      uint64_t v32 = (uint64_t)v47;
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0(v32, (uint64_t)v50, &qword_10038A620);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A630);
      sub_10018A230(&qword_10038A638, &qword_10038A620, (void (*)(void))sub_10018A2B8, (void (*)(void))sub_10018A3B8);
      sub_10018A49C();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v32, &qword_10038A620);
      goto LABEL_8;
    case 4u:
      type metadata accessor for ConnectivityModel();
      sub_10017EF10(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
      uint64_t v33 = EnvironmentObject.init()();
      uint64_t v35 = v34;
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v36 = EnvironmentObject.init()();
      *(void *)&long long v52 = v33;
      *((void *)&v52 + 1) = v35;
      *(void *)&long long v53 = v36;
      *((void *)&v53 + 1) = v37;
      char v54 = 0;
      sub_10018A1DC();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      char v38 = v57;
      long long v39 = v56;
      uint64_t v40 = v50;
      *uint64_t v50 = v55;
      v40[1] = v39;
      *((unsigned char *)v40 + 32) = v38;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A630);
      sub_10018A230(&qword_10038A638, &qword_10038A620, (void (*)(void))sub_10018A2B8, (void (*)(void))sub_10018A3B8);
      sub_10018A49C();
      _ConditionalContent<>.init(storage:)();
      swift_release();
LABEL_8:
      uint64_t result = swift_release();
      break;
    case 5u:
      long long v52 = 0u;
      long long v53 = 0u;
      char v54 = 1;
      sub_10018A1DC();
      _ConditionalContent<>.init(storage:)();
      char v41 = v57;
      long long v42 = v56;
      uint64_t v43 = v50;
      *uint64_t v50 = v55;
      v43[1] = v42;
      *((unsigned char *)v43 + 32) = v41;
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A630);
      sub_10018A230(&qword_10038A638, &qword_10038A620, (void (*)(void))sub_10018A2B8, (void (*)(void))sub_10018A3B8);
      sub_10018A49C();
      uint64_t result = _ConditionalContent<>.init(storage:)();
      break;
    default:
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      *unint64_t v14 = EnvironmentObject.init()();
      v14[1] = v21;
      swift_storeEnumTagMultiPayload();
      sub_10018A364();
      sub_10017EF10(&qword_10038A650, (void (*)(uint64_t))type metadata accessor for CABannerConnectionClosedView);
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_10000D2A0((uint64_t)v16, (uint64_t)v11, &qword_10038A618);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A660);
      sub_10018A2B8();
      sub_10018A3B8();
      uint64_t v22 = (uint64_t)v47;
      _ConditionalContent<>.init(storage:)();
      sub_10000950C((uint64_t)v16, &qword_10038A618);
      sub_10000D2A0(v22, (uint64_t)v50, &qword_10038A620);
      swift_storeEnumTagMultiPayload();
      sub_100004010(&qword_10038A630);
      sub_10018A230(&qword_10038A638, &qword_10038A620, (void (*)(void))sub_10018A2B8, (void (*)(void))sub_10018A3B8);
      sub_10018A49C();
      _ConditionalContent<>.init(storage:)();
      sub_10000950C(v22, &qword_10038A620);
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_10018346C()
{
  uint64_t v1 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_10038A5E8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_100004010(&qword_10038A5F0);
  sub_100182888(v0, (uint64_t)&v6[*(int *)(v7 + 44)]);
  uint64_t v8 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v3, v8, v9);
  sub_10017EF10(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100009B18(&qword_10038A5F8, &qword_10038A5E8);
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    View.dynamicTypeSize<A>(_:)();
    sub_10000950C((uint64_t)v3, &qword_10037F010);
    return sub_10000950C((uint64_t)v6, &qword_10038A5E8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001836A4@<X0>(void *a1@<X8>)
{
  long long v90 = a1;
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v91 = v1;
  uint64_t v6 = (void *)*v1;
  if (!*v1) {
    goto LABEL_5;
  }
  uint64_t v7 = v6[9];
  uint64_t v8 = v6[10];
  sub_100008F88(v6 + 6, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v141, v7, v8);
  id v9 = [self mainBundle];
  v172._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v172._unint64_t object = (void *)0x80000001002CEAB0;
  v10._unint64_t object = (void *)0x80000001002CEA90;
  v10._uint64_t countAndFlagsBits = 0xD000000000000010;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v172);

  v119[0] = v12;
  unint64_t v86 = sub_100033310();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v18 = *(void (**)(void))(v3 + 104);
  unsigned int v84 = enum case for Font.Leading.tight(_:);
  uint64_t v85 = v3 + 104;
  long long v83 = (void (*)(char *, void, uint64_t))v18;
  v18(v5);
  Font.leading(_:)();
  swift_release();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  long long v87 = v5;
  uint64_t v88 = v3 + 8;
  uint64_t v89 = v2;
  Swift::String v82 = v19;
  v19(v5, v2);
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v81 = v25;
  swift_release();
  sub_100033364(v13, v15, v17);
  swift_bridgeObjectRelease();
  unsigned __int8 v26 = (void *)*v91;
  if (!*v91) {
    goto LABEL_5;
  }
  char v27 = v24 & 1;
  uint64_t v28 = v26[9];
  uint64_t v29 = v26[10];
  sub_100008F88(v26 + 6, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 80))(v28, v29);
  uint64_t v30 = Text.foregroundColor(_:)();
  uint64_t v32 = v31;
  uint64_t v80 = v33;
  LOBYTE(v28) = v34 & 1;
  sub_100033364(v20, v22, v27);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v161 = v30;
  uint64_t v162 = v32;
  char v163 = v28;
  uint64_t v164 = v80;
  uint64_t v165 = KeyPath;
  uint64_t v166 = 2;
  char v167 = 0;
  uint64_t v168 = v36;
  char v169 = 0;
  uint64_t v170 = v37;
  uint64_t v171 = 0x3FE0000000000000;
  static Alignment.leading.getter();
  sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v139, 0.0, 1, 0.0, 1);
  sub_100033364(v30, v32, v28);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v135 = v139[9];
  long long v136 = v139[10];
  long long v137 = v139[11];
  uint64_t v138 = v140;
  long long v131 = v139[5];
  long long v132 = v139[6];
  long long v133 = v139[7];
  long long v134 = v139[8];
  long long v127 = v139[1];
  long long v128 = v139[2];
  long long v129 = v139[3];
  long long v130 = v139[4];
  long long v126 = v139[0];
  char v38 = (void *)*v91;
  if (*v91)
  {
    uint64_t v39 = v38[9];
    uint64_t v40 = v38[10];
    sub_100008F88(v38 + 6, v39);
    uint64_t v41 = type metadata accessor for CABannerConnectionClosedView(0);
    *(void *)&v119[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 120))((uint64_t)v91 + *(int *)(v41 + 20), v39, v40);
    *((void *)&v119[0] + 1) = v42;
    uint64_t v43 = Text.init<A>(_:)();
    uint64_t v45 = v44;
    LODWORD(v91) = v46 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v47 = v87;
    uint64_t v48 = v89;
    v83(v87, v84, v89);
    Font.leading(_:)();
    swift_release();
    v82(v47, v48);
    LOBYTE(v48) = (_BYTE)v91;
    uint64_t v49 = Text.font(_:)();
    long long v87 = v50;
    uint64_t v88 = v51;
    char v53 = v52;
    swift_release();
    char v54 = v53 & 1;
    sub_100033364(v43, v45, v48);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v55 = (uint64_t)v87;
    long long v91 = (void *)Text.foregroundColor(_:)();
    uint64_t v57 = v56;
    char v59 = v58;
    uint64_t v89 = v60;
    swift_release();
    v59 &= 1u;
    sub_100033364(v49, v55, v54);
    swift_bridgeObjectRelease();
    uint64_t v61 = swift_getKeyPath();
    uint64_t v62 = swift_getKeyPath();
    uint64_t v63 = swift_getKeyPath();
    LOBYTE(v45) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    char v98 = v59;
    char v96 = 0;
    char v92 = 0;
    v141[5] = v91;
    v141[6] = v57;
    char v142 = v59;
    *(_DWORD *)long long v143 = *(_DWORD *)v97;
    *(_DWORD *)&v143[3] = *(_DWORD *)&v97[3];
    uint64_t v144 = v89;
    uint64_t v145 = v61;
    uint64_t v146 = 3;
    char v147 = 0;
    *(_DWORD *)&v148[3] = *(_DWORD *)&v95[3];
    *(_DWORD *)long long v148 = *(_DWORD *)v95;
    uint64_t v149 = v62;
    char v150 = 0;
    *(_DWORD *)&v151[3] = *(_DWORD *)&v94[3];
    *(_DWORD *)uint64_t v151 = *(_DWORD *)v94;
    uint64_t v152 = v63;
    uint64_t v153 = 0x3FE0000000000000;
    char v154 = v45;
    *(_DWORD *)&v155[3] = *(_DWORD *)&v93[3];
    *(_DWORD *)char v155 = *(_DWORD *)v93;
    uint64_t v156 = v64;
    uint64_t v157 = v65;
    uint64_t v158 = v66;
    uint64_t v159 = v67;
    char v160 = 0;
    static Alignment.leading.getter();
    sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v124, 0.0, 1, 0.0, 1);
    sub_100033364((uint64_t)v91, v57, v59);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v112 = v124[13];
    long long v113 = v124[14];
    uint64_t v114 = v125;
    long long v108 = v124[9];
    long long v109 = v124[10];
    long long v110 = v124[11];
    long long v111 = v124[12];
    long long v104 = v124[5];
    long long v105 = v124[6];
    long long v106 = v124[7];
    long long v107 = v124[8];
    long long v99 = v124[0];
    long long v100 = v124[1];
    long long v101 = v124[2];
    long long v102 = v124[3];
    long long v103 = v124[4];
    type metadata accessor for ConnectionModel(0);
    sub_10017EF10(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
    uint64_t v68 = EnvironmentObject.init()();
    uint64_t v70 = v69;
    type metadata accessor for ConnectivityModel();
    sub_10017EF10(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
    uint64_t v71 = EnvironmentObject.init()();
    uint64_t v73 = v72;
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v74 = EnvironmentObject.init()();
    uint64_t v76 = v75;
    v115[10] = v136;
    v115[11] = v137;
    v115[6] = v132;
    v115[7] = v133;
    v115[8] = v134;
    v115[9] = v135;
    v115[2] = v128;
    v115[3] = v129;
    v115[4] = v130;
    v115[5] = v131;
    v115[0] = v126;
    v115[1] = v127;
    v117[12] = v111;
    v117[13] = v112;
    v117[14] = v113;
    v117[8] = v107;
    v117[9] = v108;
    _OWORD v117[10] = v109;
    v117[11] = v110;
    v117[4] = v103;
    v117[5] = v104;
    v117[6] = v105;
    v117[7] = v106;
    v117[0] = v99;
    v117[1] = v100;
    v117[2] = v101;
    v117[3] = v102;
    v119[10] = v136;
    v119[11] = v137;
    v119[6] = v132;
    v119[7] = v133;
    v119[8] = v134;
    v119[9] = v135;
    v119[2] = v128;
    v119[3] = v129;
    v119[4] = v130;
    v119[5] = v131;
    v119[0] = v126;
    v119[1] = v127;
    *(_OWORD *)((char *)&v119[24] + 8) = v111;
    *(_OWORD *)((char *)&v119[25] + 8) = v112;
    *(_OWORD *)((char *)&v119[26] + 8) = v113;
    *(_OWORD *)((char *)&v119[20] + 8) = v107;
    *(_OWORD *)((char *)&v119[21] + 8) = v108;
    *(_OWORD *)((char *)&v119[22] + 8) = v109;
    *(_OWORD *)((char *)&v119[23] + 8) = v110;
    *(_OWORD *)((char *)&v119[16] + 8) = v103;
    *(_OWORD *)((char *)&v119[17] + 8) = v104;
    *(_OWORD *)((char *)&v119[18] + 8) = v105;
    *(_OWORD *)((char *)&v119[19] + 8) = v106;
    *(_OWORD *)((char *)&v119[12] + 8) = v99;
    *(_OWORD *)((char *)&v119[13] + 8) = v100;
    *(_OWORD *)((char *)&v119[14] + 8) = v101;
    uint64_t v116 = v138;
    uint64_t v118 = v114;
    *(void *)&v119[12] = v138;
    *((void *)&v119[27] + 1) = v114;
    *(_OWORD *)((char *)&v119[15] + 8) = v102;
    uint64_t v77 = v90;
    memcpy(v90, v119, 0x1C0uLL);
    v77[56] = v68;
    v77[57] = v70;
    v77[58] = v71;
    v77[59] = v73;
    v77[60] = v74;
    v77[61] = v76;
    sub_100169EB4((uint64_t)v115);
    sub_100169EB4((uint64_t)v117);
    v120[12] = v111;
    v120[13] = v112;
    v120[14] = v113;
    v120[8] = v107;
    v120[9] = v108;
    v120[10] = v109;
    v120[11] = v110;
    v120[4] = v103;
    v120[5] = v104;
    uint64_t v121 = v114;
    v120[6] = v105;
    v120[7] = v106;
    v120[0] = v99;
    v120[1] = v100;
    v120[2] = v101;
    v120[3] = v102;
    sub_10018BF94((uint64_t)v120);
    v122[10] = v136;
    v122[11] = v137;
    uint64_t v123 = v138;
    v122[6] = v132;
    v122[7] = v133;
    v122[8] = v134;
    v122[9] = v135;
    v122[2] = v128;
    v122[3] = v129;
    v122[4] = v130;
    v122[5] = v131;
    v122[0] = v126;
    v122[1] = v127;
    sub_10018BF94((uint64_t)v122);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v141);
  }
  else
  {
LABEL_5:
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001841DC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, void *a3@<X8>)
{
  unsigned int v85 = a2;
  unint64_t v86 = a3;
  uint64_t v88 = type metadata accessor for Font.Leading();
  uint64_t v4 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v6 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = (void *)(a1 + 48);
    uint64_t v89 = (void *)(a1 + 48);
    uint64_t v8 = a1;
    uint64_t v87 = a1;
    uint64_t v9 = *(void *)(a1 + 72);
    uint64_t v10 = *(void *)(v8 + 80);
    sub_100008F88(v7, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v135, v9, v10);
    id v11 = [self mainBundle];
    v166._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
    v166._unint64_t object = (void *)0x80000001002CEAB0;
    v12._unint64_t object = (void *)0x80000001002CEA90;
    v12._uint64_t countAndFlagsBits = 0xD000000000000010;
    v13._uint64_t countAndFlagsBits = 0;
    v13._unint64_t object = (void *)0xE000000000000000;
    Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v166);

    v130[0] = v14;
    unint64_t v84 = sub_100033310();
    uint64_t v15 = Text.init<A>(_:)();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    static Font.footnote.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    unsigned int v81 = enum case for Font.Leading.tight(_:);
    uint64_t v20 = *(void (**)(void))(v4 + 104);
    uint64_t v82 = v4 + 104;
    long long v83 = (void (*)(void, void, uint64_t))v20;
    uint64_t v21 = v88;
    v20(v6);
    Font.leading(_:)();
    v79[0] = v6;
    swift_release();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v79[1] = v4 + 8;
    uint64_t v80 = v22;
    v22((uint64_t)v6, v21);
    uint64_t v23 = Text.font(_:)();
    uint64_t v25 = v24;
    char v27 = v26;
    swift_release();
    char v28 = v27 & 1;
    sub_100033364(v15, v17, v19);
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void *)(v87 + 72);
    uint64_t v30 = *(void *)(v87 + 80);
    sub_100008F88(v89, v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 80))(v29, v30);
    uint64_t v31 = Text.foregroundColor(_:)();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    LOBYTE(v29) = v36 & 1;
    sub_100033364(v23, v25, v28);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v38 = swift_getKeyPath();
    uint64_t v39 = swift_getKeyPath();
    uint64_t v155 = v31;
    uint64_t v156 = v33;
    char v157 = v29;
    uint64_t v158 = v35;
    uint64_t v159 = KeyPath;
    uint64_t v160 = 2;
    char v161 = 0;
    uint64_t v162 = v38;
    char v163 = 0;
    uint64_t v164 = v39;
    uint64_t v165 = 0x3FE0000000000000;
    static Alignment.leading.getter();
    sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v130, 0.0, 1, 0.0, 1);
    sub_100033364(v31, v33, v29);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v116 = v130[10];
    long long v117 = v130[11];
    uint64_t v118 = *(void *)&v130[12];
    long long v112 = v130[6];
    long long v113 = v130[7];
    long long v114 = v130[8];
    long long v115 = v130[9];
    long long v108 = v130[2];
    long long v109 = v130[3];
    long long v110 = v130[4];
    long long v111 = v130[5];
    long long v106 = v130[0];
    long long v107 = v130[1];
    uint64_t v40 = *(void *)(v87 + 72);
    uint64_t v41 = *(void *)(v87 + 80);
    sub_100008F88(v89, v40);
    *(void *)&v130[0] = (*(uint64_t (**)(void, uint64_t, uint64_t))(v41 + 136))(v85, v40, v41);
    *((void *)&v130[0] + 1) = v42;
    uint64_t v43 = Text.init<A>(_:)();
    uint64_t v45 = v44;
    LOBYTE(v31) = v46 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v47 = v79[0];
    uint64_t v48 = v88;
    v83(v79[0], v81, v88);
    Font.leading(_:)();
    swift_release();
    v80(v47, v48);
    uint64_t v49 = Text.font(_:)();
    uint64_t v51 = v50;
    LOBYTE(v35) = v52;
    swift_release();
    LOBYTE(v23) = v35 & 1;
    sub_100033364(v43, v45, v31);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v53 = Text.foregroundColor(_:)();
    uint64_t v55 = v54;
    LOBYTE(v31) = v56;
    uint64_t v89 = v57;
    swift_release();
    LOBYTE(v35) = v31 & 1;
    sub_100033364(v49, v51, v23);
    swift_bridgeObjectRelease();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = swift_getKeyPath();
    uint64_t v60 = swift_getKeyPath();
    LOBYTE(v21) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    char v125 = v35;
    char v123 = 0;
    char v119 = 0;
    v135[5] = v53;
    v135[6] = v55;
    char v136 = v35;
    *(_DWORD *)long long v137 = *(_DWORD *)v124;
    *(_DWORD *)&v137[3] = *(_DWORD *)&v124[3];
    uint64_t v138 = v89;
    uint64_t v139 = v58;
    uint64_t v140 = 3;
    char v141 = 0;
    *(_DWORD *)&v142[3] = *(_DWORD *)&v122[3];
    *(_DWORD *)char v142 = *(_DWORD *)v122;
    uint64_t v143 = v59;
    char v144 = 0;
    *(_DWORD *)&v145[3] = *(_DWORD *)&v121[3];
    *(_DWORD *)uint64_t v145 = *(_DWORD *)v121;
    uint64_t v146 = v60;
    uint64_t v147 = 0x3FE0000000000000;
    char v148 = v21;
    *(_DWORD *)&v149[3] = *(_DWORD *)&v120[3];
    *(_DWORD *)uint64_t v149 = *(_DWORD *)v120;
    uint64_t v150 = v61;
    uint64_t v151 = v62;
    uint64_t v152 = v63;
    uint64_t v153 = v64;
    char v154 = 0;
    static Alignment.leading.getter();
    sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v130, 0.0, 1, 0.0, 1);
    sub_100033364(v53, v55, v35);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v102 = v130[12];
    long long v103 = v130[13];
    long long v104 = v130[14];
    long long v98 = v130[8];
    long long v99 = v130[9];
    long long v100 = v130[10];
    long long v101 = v130[11];
    long long v94 = v130[4];
    long long v95 = v130[5];
    long long v96 = v130[6];
    long long v97 = v130[7];
    long long v90 = v130[0];
    long long v91 = v130[1];
    long long v92 = v130[2];
    long long v93 = v130[3];
    v126[10] = v116;
    v126[11] = v117;
    v126[6] = v112;
    v126[7] = v113;
    v126[8] = v114;
    v126[9] = v115;
    v126[2] = v108;
    v126[3] = v109;
    v126[4] = v110;
    v126[5] = v111;
    v126[0] = v106;
    v126[1] = v107;
    v128[12] = v130[12];
    v128[13] = v130[13];
    v128[14] = v130[14];
    long long v65 = v130[8];
    long long v66 = v130[9];
    v128[8] = v130[8];
    v128[9] = v130[9];
    long long v67 = v130[10];
    long long v68 = v130[11];
    v128[10] = v130[10];
    v128[11] = v130[11];
    long long v69 = v130[4];
    long long v70 = v130[5];
    v128[4] = v130[4];
    v128[5] = v130[5];
    long long v72 = v130[6];
    long long v71 = v130[7];
    v128[6] = v130[6];
    v128[7] = v130[7];
    long long v74 = v130[0];
    long long v73 = v130[1];
    v128[0] = v130[0];
    v128[1] = v130[1];
    long long v75 = v130[2];
    long long v76 = v130[3];
    v128[2] = v130[2];
    v128[3] = v130[3];
    v130[10] = v116;
    v130[11] = v117;
    v130[6] = v112;
    v130[7] = v113;
    v130[9] = v115;
    v130[8] = v114;
    v130[2] = v108;
    v130[3] = v109;
    v130[5] = v111;
    v130[4] = v110;
    v130[1] = v107;
    v130[0] = v106;
    *(_OWORD *)((char *)&v130[24] + 8) = v130[12];
    *(_OWORD *)((char *)&v130[25] + 8) = v130[13];
    *(_OWORD *)((char *)&v130[26] + 8) = v130[14];
    *(_OWORD *)((char *)&v130[20] + 8) = v65;
    *(_OWORD *)((char *)&v130[21] + 8) = v66;
    *(_OWORD *)((char *)&v130[22] + 8) = v67;
    *(_OWORD *)((char *)&v130[23] + 8) = v68;
    *(_OWORD *)((char *)&v130[16] + 8) = v69;
    *(_OWORD *)((char *)&v130[17] + 8) = v70;
    *(_OWORD *)((char *)&v130[18] + 8) = v72;
    *(_OWORD *)((char *)&v130[19] + 8) = v71;
    uint64_t v77 = *(void *)&v130[15];
    *(_OWORD *)((char *)&v130[12] + 8) = v74;
    *(_OWORD *)((char *)&v130[13] + 8) = v73;
    *(_OWORD *)((char *)&v130[14] + 8) = v75;
    uint64_t v105 = v77;
    uint64_t v127 = v118;
    uint64_t v129 = v77;
    *(void *)&v130[12] = v118;
    *((void *)&v130[27] + 1) = v77;
    *(_OWORD *)((char *)&v130[15] + 8) = v76;
    memcpy(v86, v130, 0x1C0uLL);
    v131[12] = v102;
    v131[13] = v103;
    v131[14] = v104;
    uint64_t v132 = v105;
    v131[8] = v98;
    v131[9] = v99;
    v131[10] = v100;
    v131[11] = v101;
    v131[4] = v94;
    v131[5] = v95;
    v131[6] = v96;
    v131[7] = v97;
    v131[0] = v90;
    v131[1] = v91;
    v131[2] = v92;
    v131[3] = v93;
    sub_100169EB4((uint64_t)v126);
    sub_100169EB4((uint64_t)v128);
    sub_10018BF94((uint64_t)v131);
    v133[10] = v116;
    v133[11] = v117;
    uint64_t v134 = v118;
    v133[6] = v112;
    unsigned char v133[7] = v113;
    v133[9] = v115;
    v133[8] = v114;
    v133[2] = v108;
    v133[3] = v109;
    v133[5] = v111;
    v133[4] = v110;
    v133[1] = v107;
    v133[0] = v106;
    sub_10018BF94((uint64_t)v133);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v135);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100184C10@<X0>(void *a1@<X8>)
{
  return sub_1001841DC(*(void *)v1, *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_100184C1C@<X0>(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v48 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v8 = a1 + 6;
    uint64_t v9 = a1[9];
    uint64_t v10 = a1[10];
    sub_100008F88(a1 + 6, v9);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v77, v9, v10);
    uint64_t v12 = a1[9];
    uint64_t v11 = a1[10];
    sub_100008F88(v8, v12);
    *(void *)&long long v61 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v11 + 168))(a2 & 1, v12, v11);
    *((void *)&v61 + 1) = v13;
    sub_100033310();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v19 = v48;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v48);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
    uint64_t v20 = Text.font(_:)();
    uint64_t v22 = v21;
    char v24 = v23;
    swift_release();
    LOBYTE(v12) = v24 & 1;
    sub_100033364(v14, v16, v18);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v25 = Text.foregroundColor(_:)();
    uint64_t v48 = v25;
    uint64_t v27 = v26;
    LOBYTE(v16) = v28;
    uint64_t v30 = v29;
    swift_release();
    LOBYTE(v14) = v16 & 1;
    sub_100033364(v20, v22, v12);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = swift_getKeyPath();
    LOBYTE(v19) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    char v60 = v14;
    char v58 = 0;
    char v54 = 0;
    v77[5] = v25;
    v77[6] = v27;
    char v78 = v14;
    *(_DWORD *)uint64_t v79 = *(_DWORD *)v59;
    *(_DWORD *)&uint64_t v79[3] = *(_DWORD *)&v59[3];
    uint64_t v80 = v30;
    uint64_t v81 = KeyPath;
    uint64_t v82 = 3;
    char v83 = 0;
    *(_DWORD *)&uint64_t v84[3] = *(_DWORD *)&v57[3];
    *(_DWORD *)unint64_t v84 = *(_DWORD *)v57;
    uint64_t v85 = v32;
    char v86 = 0;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v56[3];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v56;
    uint64_t v88 = v33;
    uint64_t v89 = 0x3FE0000000000000;
    char v90 = v19;
    *(_DWORD *)&v91[3] = *(_DWORD *)&v55[3];
    *(_DWORD *)long long v91 = *(_DWORD *)v55;
    uint64_t v92 = v34;
    uint64_t v93 = v35;
    uint64_t v94 = v36;
    uint64_t v95 = v37;
    char v96 = 0;
    static Alignment.leading.getter();
    sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v49, 0.0, 1, 0.0, 1);
    sub_100033364(v48, v27, v14);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v73 = v50;
    long long v74 = v51;
    long long v75 = v52;
    uint64_t v76 = v53;
    long long v69 = v49[8];
    long long v70 = v49[9];
    long long v71 = v49[10];
    long long v72 = v49[11];
    long long v65 = v49[4];
    long long v66 = v49[5];
    long long v67 = v49[6];
    long long v68 = v49[7];
    long long v61 = v49[0];
    long long v62 = v49[1];
    long long v63 = v49[2];
    long long v64 = v49[3];
    long long v38 = v51;
    uint64_t v39 = v47;
    *(_OWORD *)(v47 + 192) = v50;
    *(_OWORD *)(v39 + 208) = v38;
    *(_OWORD *)(v39 + 224) = v75;
    *(void *)(v39 + 240) = v76;
    long long v40 = v70;
    *(_OWORD *)(v39 + 128) = v69;
    *(_OWORD *)(v39 + 144) = v40;
    long long v41 = v72;
    *(_OWORD *)(v39 + 160) = v71;
    *(_OWORD *)(v39 + 176) = v41;
    long long v42 = v66;
    *(_OWORD *)(v39 + 64) = v65;
    *(_OWORD *)(v39 + 80) = v42;
    long long v43 = v68;
    *(_OWORD *)(v39 + 96) = v67;
    *(_OWORD *)(v39 + 112) = v43;
    long long v44 = v62;
    *(_OWORD *)uint64_t v39 = v61;
    *(_OWORD *)(v39 + 16) = v44;
    long long v45 = v64;
    *(_OWORD *)(v39 + 32) = v63;
    *(_OWORD *)(v39 + 48) = v45;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v77);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001850EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100184C1C(*(void **)v1, *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1001850F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v48 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v6 = a1 + 6;
    uint64_t v8 = a1[9];
    uint64_t v7 = a1[10];
    sub_100008F88(v6, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v77, v8, v7);
    id v9 = [self mainBundle];
    v97._uint64_t countAndFlagsBits = 0xD000000000000067;
    v97._unint64_t object = (void *)0x80000001002C7AB0;
    v10._unint64_t object = (void *)0x80000001002C7A80;
    v10._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    v11._uint64_t countAndFlagsBits = 0;
    v11._unint64_t object = (void *)0xE000000000000000;
    Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v97);

    Swift::String v61 = v12;
    sub_100033310();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    static Font.body.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v18 = v48;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v48);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
    uint64_t v19 = Text.font(_:)();
    uint64_t v21 = v20;
    char v23 = v22;
    swift_release();
    char v24 = v23 & 1;
    sub_100033364(v13, v15, v17);
    swift_bridgeObjectRelease();
    static Color.white.getter();
    uint64_t v25 = Text.foregroundColor(_:)();
    uint64_t v48 = v25;
    uint64_t v27 = v26;
    LOBYTE(v15) = v28;
    uint64_t v30 = v29;
    swift_release();
    LOBYTE(v13) = v15 & 1;
    sub_100033364(v19, v21, v24);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = swift_getKeyPath();
    LOBYTE(v18) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    char v60 = v13;
    char v58 = 0;
    char v54 = 0;
    v77[5] = v25;
    v77[6] = v27;
    char v78 = v13;
    *(_DWORD *)uint64_t v79 = *(_DWORD *)v59;
    *(_DWORD *)&uint64_t v79[3] = *(_DWORD *)&v59[3];
    uint64_t v80 = v30;
    uint64_t v81 = KeyPath;
    uint64_t v82 = 3;
    char v83 = 0;
    *(_DWORD *)&uint64_t v84[3] = *(_DWORD *)&v57[3];
    *(_DWORD *)unint64_t v84 = *(_DWORD *)v57;
    uint64_t v85 = v32;
    char v86 = 0;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v56[3];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v56;
    uint64_t v88 = v33;
    uint64_t v89 = 0x3FE0000000000000;
    char v90 = v18;
    *(_DWORD *)&v91[3] = *(_DWORD *)&v55[3];
    *(_DWORD *)long long v91 = *(_DWORD *)v55;
    uint64_t v92 = v34;
    uint64_t v93 = v35;
    uint64_t v94 = v36;
    uint64_t v95 = v37;
    char v96 = 0;
    static Alignment.leading.getter();
    sub_100167DB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v49, 0.0, 1, 0.0, 1);
    sub_100033364(v48, v27, v13);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v73 = v50;
    long long v74 = v51;
    long long v75 = v52;
    uint64_t v76 = v53;
    long long v69 = v49[8];
    long long v70 = v49[9];
    long long v71 = v49[10];
    long long v72 = v49[11];
    long long v65 = v49[4];
    long long v66 = v49[5];
    long long v67 = v49[6];
    long long v68 = v49[7];
    Swift::String v61 = (Swift::String)v49[0];
    long long v62 = v49[1];
    long long v63 = v49[2];
    long long v64 = v49[3];
    long long v38 = v51;
    uint64_t v39 = v47;
    *(_OWORD *)(v47 + 192) = v50;
    *(_OWORD *)(v39 + 208) = v38;
    *(_OWORD *)(v39 + 224) = v75;
    *(void *)(v39 + 240) = v76;
    long long v40 = v70;
    *(_OWORD *)(v39 + 128) = v69;
    *(_OWORD *)(v39 + 144) = v40;
    long long v41 = v72;
    *(_OWORD *)(v39 + 160) = v71;
    *(_OWORD *)(v39 + 176) = v41;
    long long v42 = v66;
    *(_OWORD *)(v39 + 64) = v65;
    *(_OWORD *)(v39 + 80) = v42;
    long long v43 = v68;
    *(_OWORD *)(v39 + 96) = v67;
    *(_OWORD *)(v39 + 112) = v43;
    long long v44 = v62;
    *(Swift::String *)uint64_t v39 = v61;
    *(_OWORD *)(v39 + 16) = v44;
    long long v45 = v64;
    *(_OWORD *)(v39 + 32) = v63;
    *(_OWORD *)(v39 + 48) = v45;
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v77);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100185610@<X0>(uint64_t a1@<X8>)
{
  return sub_1001850F8(*v1, a1);
}

uint64_t sub_100185618@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Font.Leading();
  uint64_t v7 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v74 = v8;
    uint64_t v75 = v7;
    uint64_t v11 = a2[9];
    uint64_t v12 = a2[10];
    long long v73 = a2;
    uint64_t v76 = a2 + 6;
    sub_100008F88(a2 + 6, v11);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v96, v11, v12);
    if (a1)
    {
      swift_retain();
      uint64_t v13 = sub_10020D834();
      uint64_t v15 = v14;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&v94[0] = v13;
      *((void *)&v94[0] + 1) = v15;
      sub_100033310();
      uint64_t v71 = Text.init<A>(_:)();
      uint64_t v72 = v16;
      uint64_t v18 = v17;
      char v20 = v19 & 1;
      static Font.footnote.getter();
      static Font.Weight.medium.getter();
      Font.weight(_:)();
      swift_release();
      uint64_t v22 = v74;
      uint64_t v21 = v75;
      (*(void (**)(char *, void, uint64_t))(v74 + 104))(v10, enum case for Font.Leading.tight(_:), v75);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
      uint64_t v23 = v71;
      uint64_t v74 = Text.font(_:)();
      uint64_t v75 = v24;
      uint64_t v70 = v25;
      LOBYTE(v22) = v26;
      swift_release();
      LOBYTE(v21) = v22 & 1;
      sub_100033364(v23, v18, v20);
      swift_bridgeObjectRelease();
      uint64_t v27 = v73[9];
      uint64_t v28 = v73[10];
      sub_100008F88(v76, v27);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 96);
      uint64_t v30 = swift_retain();
      v29(v30, v27, v28);
      swift_release();
      uint64_t v31 = v74;
      uint64_t v32 = v70;
      uint64_t v76 = (void *)Text.foregroundColor(_:)();
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      LOBYTE(v27) = v37 & 1;
      sub_100033364(v31, v32, v21);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v39 = swift_getKeyPath();
      uint64_t v40 = swift_getKeyPath();
      long long v41 = v76;
      v96[5] = v76;
      v96[6] = v34;
      char v97 = v27;
      uint64_t v98 = v36;
      uint64_t v99 = KeyPath;
      uint64_t v100 = 2;
      char v101 = 0;
      uint64_t v102 = v39;
      char v103 = 0;
      uint64_t v104 = v40;
      uint64_t v105 = 0x3FE0000000000000;
      static Alignment.leading.getter();
      sub_100167BEC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v94, 0.0, 1, 0.0, 1);
      sub_100033364((uint64_t)v41, v34, v27);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      long long v87 = v94[10];
      long long v88 = v94[11];
      uint64_t v89 = v95;
      long long v83 = v94[6];
      long long v84 = v94[7];
      long long v85 = v94[8];
      long long v86 = v94[9];
      long long v79 = v94[2];
      long long v80 = v94[3];
      long long v81 = v94[4];
      long long v82 = v94[5];
      long long v77 = v94[0];
      long long v78 = v94[1];
      type metadata accessor for GuidanceMessagesModel();
      sub_10017EF10(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
      long long v42 = (void *)EnvironmentObject.init()();
      uint64_t v75 = v43;
      uint64_t v76 = v42;
      type metadata accessor for UIMetrics();
      sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
      uint64_t v44 = EnvironmentObject.init()();
      uint64_t v46 = v45;
      type metadata accessor for ConnectionModel(0);
      sub_10017EF10(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
      uint64_t v47 = EnvironmentObject.init()();
      uint64_t v49 = v48;
      type metadata accessor for ConnectivityModel();
      sub_10017EF10(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
      uint64_t v50 = EnvironmentObject.init()();
      uint64_t v52 = v51;
      uint64_t v53 = EnvironmentObject.init()();
      long long v54 = v88;
      v90[10] = v87;
      v90[11] = v88;
      long long v55 = v83;
      long long v56 = v84;
      v90[6] = v83;
      v90[7] = v84;
      long long v58 = v85;
      long long v57 = v86;
      v90[8] = v85;
      v90[9] = v86;
      long long v59 = v79;
      long long v60 = v80;
      v90[2] = v79;
      v90[3] = v80;
      long long v62 = v81;
      long long v61 = v82;
      v90[4] = v81;
      v90[5] = v82;
      long long v64 = v77;
      long long v63 = v78;
      v90[0] = v77;
      v90[1] = v78;
      *(_OWORD *)(a3 + 160) = v87;
      *(_OWORD *)(a3 + 176) = v54;
      *(_OWORD *)(a3 + 96) = v55;
      *(_OWORD *)(a3 + 112) = v56;
      *(_OWORD *)(a3 + 128) = v58;
      *(_OWORD *)(a3 + 144) = v57;
      *(_OWORD *)(a3 + 32) = v59;
      *(_OWORD *)(a3 + 48) = v60;
      *(_OWORD *)(a3 + 64) = v62;
      *(_OWORD *)(a3 + 80) = v61;
      uint64_t v65 = v89;
      uint64_t v91 = v89;
      *(_OWORD *)a3 = v64;
      *(_OWORD *)(a3 + 16) = v63;
      long long v66 = v76;
      *(void *)(a3 + 192) = v65;
      *(void *)(a3 + 200) = v66;
      *(void *)(a3 + 208) = v75;
      *(void *)(a3 + 216) = v44;
      *(void *)(a3 + 224) = v46;
      *(void *)(a3 + 232) = v47;
      *(void *)(a3 + 240) = v49;
      *(void *)(a3 + 248) = v50;
      *(void *)(a3 + 256) = v52;
      *(void *)(a3 + 264) = v53;
      *(void *)(a3 + 272) = v67;
      sub_100169EB4((uint64_t)v90);
      v92[10] = v87;
      v92[11] = v88;
      uint64_t v93 = v89;
      v92[6] = v83;
      v92[7] = v84;
      v92[8] = v85;
      v92[9] = v86;
      v92[2] = v79;
      v92[3] = v80;
      v92[4] = v81;
      v92[5] = v82;
      v92[0] = v77;
      v92[1] = v78;
      sub_10018BF94((uint64_t)v92);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v96);
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for ConnectivityModel();
  sub_10017EF10(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100185CBC@<X0>(uint64_t a1@<X8>)
{
  return sub_100185618(*(void *)v1, *(void **)(v1 + 16), a1);
}

uint64_t sub_100185CC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v62 = a1;
  uint64_t v3 = sub_100004010(&qword_10038A8C8);
  __chkstk_darwin(v3 - 8);
  long long v56 = (uint64_t *)((char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_100004010(&qword_10038A8D0);
  __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10038A8D8);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  uint64_t v53 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_10038A8E0);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v57 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TransmissionProgress(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004010(&qword_10038A8E8);
  __chkstk_darwin(v17 - 8);
  char v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = (void *)v1[4];
  if (v20)
  {
    uint64_t v21 = (uint64_t)(v20 + 6);
    uint64_t v22 = v20[9];
    uint64_t v23 = v20[10];
    sub_100008F88(v20 + 6, v22);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 8))(v66, v22, v23);
    if (*v1)
    {
      swift_retain();
      sub_10020CBFC((uint64_t)v12);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_10000950C((uint64_t)v12, &qword_10037F158);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v19, 1, 1, v61);
LABEL_12:
        sub_10000D544((uint64_t)v19, v62, &qword_10038A8E8);
        return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v66);
      }
      sub_10017EF58((uint64_t)v12, (uint64_t)v16, type metadata accessor for TransmissionProgress);
      sub_1000090FC(v21, (uint64_t)v63);
      uint64_t v24 = v64;
      uint64_t v25 = v65;
      sub_100008F88(v63, v64);
      uint64_t v26 = v1[2];
      if (v26)
      {
        uint64_t v27 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v25 + 112))(v16, *(unsigned __int8 *)(*(void *)(v26 + 48) + 120), v24, v25);
        unint64_t v29 = v28;
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v63);
        uint64_t v30 = HIBYTE(v29) & 0xF;
        if ((v29 & 0x2000000000000000) == 0) {
          uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
        }
        if (v30)
        {
          uint64_t v31 = static HorizontalAlignment.leading.getter();
          uint64_t v32 = (uint64_t)v56;
          *long long v56 = v31;
          *(void *)(v32 + 8) = 0;
          *(unsigned char *)(v32 + 16) = 0;
          uint64_t v33 = sub_100004010(&qword_10038A8F0);
          sub_10018637C(v2, (uint64_t)v16, v66, v27, v29, v32 + *(int *)(v33 + 44));
          swift_bridgeObjectRelease();
          char v34 = static Edge.Set.top.getter();
          EdgeInsets.init(_all:)();
          uint64_t v36 = v35;
          uint64_t v38 = v37;
          uint64_t v40 = v39;
          uint64_t v42 = v41;
          uint64_t v43 = v55;
          sub_10000D2A0(v32, v55, &qword_10038A8C8);
          uint64_t v44 = v43 + *(int *)(v54 + 36);
          *(unsigned char *)uint64_t v44 = v34;
          *(void *)(v44 + 8) = v36;
          *(void *)(v44 + 16) = v38;
          *(void *)(v44 + 24) = v40;
          *(void *)(v44 + 32) = v42;
          *(unsigned char *)(v44 + 40) = 0;
          sub_10000950C(v32, &qword_10038A8C8);
          uint64_t v45 = v53;
          sub_10000D2A0(v43, v53, &qword_10038A8D0);
          uint64_t v46 = v59;
          *(_WORD *)(v45 + *(int *)(v59 + 36)) = 256;
          sub_10000950C(v43, &qword_10038A8D0);
          uint64_t v47 = v57;
          sub_10000D544(v45, v57, &qword_10038A8D8);
          uint64_t v48 = 0;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = 1;
          uint64_t v46 = v59;
          uint64_t v47 = v57;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v47, v48, 1, v46);
        sub_10000D544(v47, (uint64_t)v19, &qword_10038A8E0);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v19, 0, 1, v61);
        sub_100188A14((uint64_t)v16, type metadata accessor for TransmissionProgress);
        goto LABEL_12;
      }
      type metadata accessor for ConnectivityModel();
      uint64_t v50 = &qword_10037F0F0;
      uint64_t v51 = (void (*)(uint64_t))type metadata accessor for ConnectivityModel;
    }
    else
    {
      type metadata accessor for ConnectionModel(0);
      uint64_t v50 = &qword_10037F100;
      uint64_t v51 = (void (*)(uint64_t))type metadata accessor for ConnectionModel;
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    uint64_t v50 = (unint64_t *)&qword_10037EFF0;
    uint64_t v51 = (void (*)(uint64_t))type metadata accessor for UIMetrics;
  }
  sub_10017EF10(v50, v51);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10018637C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double v196 = *(double *)&a4;
  uint64_t v197 = a5;
  uint64_t v186 = a2;
  uint64_t v193 = sub_100004010(&qword_10038A8F8);
  __chkstk_darwin(v193);
  char v190 = &v176[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100004010(&qword_10037F118);
  uint64_t v187 = *(void *)(v10 - 8);
  uint64_t v188 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = &v176[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_100004010(&qword_100388718);
  uint64_t v189 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v176[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100004010(&qword_100388720);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  long long v194 = &v176[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  long long v195 = &v176[-v19];
  uint64_t v198 = sub_100004010(&qword_10038A900);
  __chkstk_darwin(v198);
  uint64_t v21 = (uint64_t *)&v176[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v191 = sub_100004010(&qword_10038A908);
  __chkstk_darwin(v191);
  uint64_t v23 = &v176[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v199 = sub_100004010(&qword_10038A910);
  __chkstk_darwin(v199);
  long long v192 = &v176[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = type metadata accessor for Font.Leading();
  uint64_t v26 = __chkstk_darwin(v25);
  unint64_t v29 = &v176[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
    type metadata accessor for ConnectivityModel();
    long long v174 = &qword_10037F0F0;
    __int16 v175 = type metadata accessor for ConnectivityModel;
    goto LABEL_9;
  }
  int v32 = 1 << *(unsigned char *)(*(void *)(v31 + 48) + 120);
  long long v200 = v21;
  uint64_t v201 = a6;
  if ((v32 & 0x1D8) != 0)
  {
    double v225 = v196;
    uint64_t v226 = v197;
    uint64_t v33 = v26;
    uint64_t v34 = v27;
    uint64_t v35 = v29;
    sub_100033310();
    swift_bridgeObjectRetain();
    double v196 = COERCE_DOUBLE(Text.init<A>(_:)());
    uint64_t v197 = v36;
    uint64_t v38 = v37;
    char v40 = v39 & 1;
    static Font.footnote.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    (*(void (**)(unsigned char *, void, uint64_t))(v34 + 104))(v35, enum case for Font.Leading.tight(_:), v33);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v35, v33);
    uint64_t v41 = *(void *)&v196;
    LOBYTE(v33) = v40;
    uint64_t v42 = Text.font(_:)();
    uint64_t v44 = v43;
    char v46 = v45;
    long long v194 = v47;
    swift_release();
    char v48 = v46 & 1;
    sub_100033364(v41, v38, v33);
    swift_bridgeObjectRelease();
    id v49 = [self secondaryLabelColor];
    Color.init(_:)();
    uint64_t v50 = Text.foregroundColor(_:)();
    uint64_t v52 = v51;
    LOBYTE(v41) = v53;
    uint64_t v197 = v54;
    swift_release();
    LOBYTE(v34) = v41 & 1;
    sub_100033364(v42, v44, v48);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = swift_getKeyPath();
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    double v58 = v225;
    char v59 = v226;
    uint64_t v60 = v227;
    char v61 = v228;
    LOBYTE(v207[0]) = v34;
    LOBYTE(v205[0]) = 0;
    LOBYTE(v204[0]) = v226;
    LOBYTE(v203[0]) = v228;
    long long v195 = v52;
    double v196 = *(double *)&v50;
    *(void *)uint64_t v23 = v50;
    *((void *)v23 + 1) = v52;
    v23[16] = v34;
    *(_DWORD *)(v23 + 17) = v214;
    *((_DWORD *)v23 + 5) = *(_DWORD *)((char *)&v214 + 3);
    *((void *)v23 + 3) = v197;
    *((void *)v23 + 4) = KeyPath;
    *((void *)v23 + 5) = 1;
    v23[48] = 0;
    int v62 = v254;
    *((_DWORD *)v23 + 13) = *(_DWORD *)((char *)&v254 + 3);
    *(_DWORD *)(v23 + 49) = v62;
    *((void *)v23 + 7) = v56;
    v23[64] = 0;
    int v63 = *(_DWORD *)v213;
    *((_DWORD *)v23 + 17) = *(_DWORD *)&v213[3];
    *(_DWORD *)(v23 + 65) = v63;
    *((void *)v23 + 9) = v57;
    *((void *)v23 + 10) = 0x3FE0000000000000;
    *((double *)v23 + 11) = v58;
    v23[96] = v59;
    LODWORD(v58) = *(_DWORD *)v211;
    *((_DWORD *)v23 + 25) = *(_DWORD *)&v211[3];
    *(_DWORD *)(v23 + 97) = LODWORD(v58);
    *((void *)v23 + 13) = v60;
    v23[112] = v61;
    LODWORD(v58) = *(_DWORD *)v209;
    *((_DWORD *)v23 + 29) = *(_DWORD *)&v209[3];
    *(_DWORD *)(v23 + 113) = LODWORD(v58);
    *(_OWORD *)(v23 + 120) = v229;
    *((_WORD *)v23 + 68) = 256;
    swift_storeEnumTagMultiPayload();
    sub_100033724(v50, (uint64_t)v52, v34);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100004010(&qword_10038A920);
    sub_100009B18(&qword_10038A928, &qword_10038A8F8);
    sub_10018C004();
    uint64_t v64 = (uint64_t)v192;
    _ConditionalContent<>.init(storage:)();
    sub_10000D2A0(v64, (uint64_t)v200, &qword_10038A910);
    swift_storeEnumTagMultiPayload();
    sub_10018C0FC();
    _ConditionalContent<>.init(storage:)();
    sub_10000950C(v64, &qword_10038A910);
    sub_100033364(*(uint64_t *)&v196, (uint64_t)v195, v34);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else if ((v32 & 0x203) != 0)
  {
    uint64_t v184 = v29;
    uint64_t v185 = v26;
    uint64_t v183 = v27;
    double v225 = (double)*(uint64_t *)(v186 + *(int *)(type metadata accessor for TransmissionProgress(0) + 28));
    LOBYTE(v226) = 0;
    *(void *)&long long v214 = 0x4059000000000000;
    sub_10013A2C8();
    ProgressView.init<A>(value:total:)();
    uint64_t v66 = a3[3];
    uint64_t v67 = a3[4];
    long long v68 = sub_100008F88(a3, v66);
    uint64_t v228 = v66;
    *(void *)&long long v229 = *(void *)(v67 + 8);
    uint64_t v69 = sub_10013A31C((uint64_t *)&v225);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v69, v68, v66);
    sub_100009B18(&qword_10037F210, &qword_10037F118);
    sub_10013A380();
    uint64_t v70 = v188;
    View.progressViewStyle<A>(_:)();
    sub_10013A3D4((uint64_t)&v225);
    (*(void (**)(unsigned char *, uint64_t))(v187 + 8))(v12, v70);
    uint64_t v72 = a3[3];
    uint64_t v71 = a3[4];
    sub_100008F88(a3, v72);
    double v73 = (*(double (**)(uint64_t))(*(void *)(v71 + 8) + 8))(v72);
    static Alignment.center.getter();
    uint64_t v74 = v194;
    __n128 v75 = sub_1001672FC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v194, 0.0, 1, v73, 0);
    (*(void (**)(unsigned char *, uint64_t, __n128))(v189 + 8))(v15, v13, v75);
    sub_10000D544((uint64_t)v74, (uint64_t)v195, &qword_100388720);
    double v225 = v196;
    uint64_t v226 = v197;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v76 = Text.init<A>(_:)();
    uint64_t v78 = v77;
    uint64_t v197 = v79;
    LOBYTE(v67) = v80 & 1;
    static Font.footnote.getter();
    static Font.Weight.medium.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v81 = v183;
    long long v82 = v184;
    uint64_t v83 = v185;
    (*(void (**)(unsigned char *, void, uint64_t))(v183 + 104))(v184, enum case for Font.Leading.tight(_:), v185);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v82, v83);
    uint64_t v84 = v78;
    uint64_t v85 = Text.font(_:)();
    uint64_t v87 = v86;
    LOBYTE(v83) = v88;
    uint64_t v187 = v89;
    swift_release();
    sub_100033364(v76, v84, v67);
    swift_bridgeObjectRelease();
    id v90 = [self secondaryLabelColor];
    Color.init(_:)();
    uint64_t v91 = Text.foregroundColor(_:)();
    double v196 = *(double *)&v92;
    uint64_t v197 = v91;
    LOBYTE(v67) = v93;
    uint64_t v188 = v94;
    swift_release();
    LODWORD(v189) = v67 & 1;
    sub_100033364(v85, v87, v83 & 1);
    swift_bridgeObjectRelease();
    uint64_t v187 = swift_getKeyPath();
    uint64_t v186 = swift_getKeyPath();
    uint64_t v185 = swift_getKeyPath();
    LODWORD(v184) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    uint64_t v100 = v99;
    uint64_t v102 = v101;
    char v208 = v67 & 1;
    unsigned __int8 v206 = 0;
    unsigned __int8 v202 = 0;
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    LOBYTE(v85) = v255;
    uint64_t v182 = v256;
    uint64_t v183 = v254;
    uint64_t v180 = v259;
    uint64_t v181 = v258;
    LOBYTE(v87) = v208;
    int v177 = v257;
    int v178 = v206;
    int v179 = v202;
    char v212 = v255;
    unsigned __int8 v210 = v257;
    char v103 = v194;
    sub_10000D2A0((uint64_t)v195, (uint64_t)v194, &qword_100388720);
    uint64_t v104 = (uint64_t)v103;
    uint64_t v105 = v190;
    sub_10000D2A0(v104, (uint64_t)v190, &qword_100388720);
    uint64_t v106 = *(int *)(sub_100004010(&qword_10038A918) + 48);
    *(_DWORD *)((char *)&v215 + 1) = v207[0];
    DWORD1(v215) = *(_DWORD *)((char *)v207 + 3);
    *(_DWORD *)((char *)&v217 + 1) = v205[0];
    DWORD1(v217) = *(_DWORD *)((char *)v205 + 3);
    DWORD1(v218) = *(_DWORD *)((char *)v204 + 3);
    int v107 = v204[0];
    *(_DWORD *)((char *)&v218 + 1) = v204[0];
    HIDWORD(v219) = *(_DWORD *)((char *)v203 + 3);
    LODWORD(v67) = v203[0];
    *(_DWORD *)((char *)&v219 + 9) = v203[0];
    DWORD1(v222) = *(_DWORD *)&v213[3];
    LODWORD(v76) = *(_DWORD *)v213;
    *(_DWORD *)((char *)&v222 + 1) = *(_DWORD *)v213;
    int v108 = *(_DWORD *)v211;
    *(_DWORD *)((char *)&v223 + 1) = *(_DWORD *)v211;
    DWORD1(v223) = *(_DWORD *)&v211[3];
    int v109 = *(_DWORD *)v209;
    *(_DWORD *)((char *)v224 + 1) = *(_DWORD *)v209;
    DWORD1(v224[0]) = *(_DWORD *)&v209[3];
    long long v110 = &v105[v106];
    uint64_t v112 = *(void *)&v196;
    uint64_t v111 = v197;
    *(void *)&long long v214 = v197;
    *((double *)&v214 + 1) = v196;
    char v113 = v87;
    LOBYTE(v215) = v87;
    uint64_t v114 = v187;
    uint64_t v115 = v188;
    *((void *)&v215 + 1) = v188;
    *(void *)&long long v216 = v187;
    *((void *)&v216 + 1) = 1;
    char v116 = v178;
    LOBYTE(v217) = v178;
    uint64_t v118 = v185;
    uint64_t v117 = v186;
    *((void *)&v217 + 1) = v186;
    LOBYTE(v218) = 0;
    *(_DWORD *)((char *)&v227 + 1) = v207[0];
    *((void *)&v218 + 1) = v185;
    *(void *)&long long v219 = 0x3FE0000000000000;
    char v119 = (char)v184;
    BYTE8(v219) = (_BYTE)v184;
    *(void *)&long long v220 = v96;
    *((void *)&v220 + 1) = v98;
    *(void *)&long long v221 = v100;
    *((void *)&v221 + 1) = v102;
    char v120 = v179;
    LOBYTE(v222) = v179;
    uint64_t v121 = v182;
    uint64_t v122 = v183;
    *((void *)&v222 + 1) = v183;
    LOBYTE(v223) = v85;
    *((void *)&v223 + 1) = v182;
    char v123 = v177;
    LOBYTE(v224[0]) = v177;
    uint64_t v125 = v180;
    uint64_t v124 = v181;
    *((void *)&v224[0] + 1) = v181;
    *(void *)&v224[1] = v180;
    *(_DWORD *)v231 = v205[0];
    WORD4(v224[1]) = 256;
    long long v126 = v214;
    long long v127 = v215;
    long long v128 = v217;
    long long v129 = v218;
    v110[2] = v216;
    _OWORD v110[3] = v128;
    *long long v110 = v126;
    v110[1] = v127;
    long long v130 = v219;
    long long v131 = v221;
    long long v132 = v222;
    v110[6] = v220;
    v110[7] = v131;
    v110[4] = v129;
    v110[5] = v130;
    long long v133 = v223;
    long long v134 = v224[0];
    *(_OWORD *)((char *)v110 + 170) = *(_OWORD *)((char *)v224 + 10);
    v110[9] = v133;
    v110[10] = v134;
    v110[8] = v132;
    LOBYTE(v227) = v113;
    HIDWORD(v227) = *(_DWORD *)((char *)v207 + 3);
    *((void *)&v229 + 1) = 1;
    double v225 = *(double *)&v111;
    uint64_t v226 = v112;
    uint64_t v228 = v115;
    *(void *)&long long v229 = v114;
    char v230 = v116;
    *(_DWORD *)&v231[3] = *(_DWORD *)((char *)v205 + 3);
    uint64_t v232 = v117;
    char v233 = 0;
    *(_DWORD *)&v234[3] = *(_DWORD *)((char *)v204 + 3);
    *(_DWORD *)v234 = v107;
    uint64_t v235 = v118;
    uint64_t v236 = 0x3FE0000000000000;
    char v237 = v119;
    *(_DWORD *)&v238[3] = *(_DWORD *)((char *)v203 + 3);
    *(_DWORD *)v238 = v67;
    uint64_t v239 = v96;
    uint64_t v240 = v98;
    uint64_t v241 = v100;
    uint64_t v242 = v102;
    char v243 = v120;
    *(_DWORD *)v244 = v76;
    *(_DWORD *)&v244[3] = *(_DWORD *)&v213[3];
    uint64_t v245 = v122;
    char v246 = v85;
    *(_DWORD *)v247 = v108;
    *(_DWORD *)&v247[3] = *(_DWORD *)&v211[3];
    uint64_t v248 = v121;
    char v249 = v123;
    *(_DWORD *)v250 = v109;
    *(_DWORD *)&v250[3] = *(_DWORD *)&v209[3];
    uint64_t v251 = v124;
    uint64_t v252 = v125;
    __int16 v253 = 256;
    sub_100033724(v111, v112, v189);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100169EB4((uint64_t)&v214);
    sub_10018BF94((uint64_t)&v225);
    sub_10000950C((uint64_t)v194, &qword_100388720);
    long long v135 = v190;
    sub_10000D2A0((uint64_t)v190, (uint64_t)v23, &qword_10038A8F8);
    swift_storeEnumTagMultiPayload();
    sub_100004010(&qword_10038A920);
    sub_100009B18(&qword_10038A928, &qword_10038A8F8);
    sub_10018C004();
    uint64_t v136 = (uint64_t)v192;
    _ConditionalContent<>.init(storage:)();
    sub_10000950C((uint64_t)v135, &qword_10038A8F8);
    sub_10000D2A0(v136, (uint64_t)v200, &qword_10038A910);
    swift_storeEnumTagMultiPayload();
    sub_10018C0FC();
    _ConditionalContent<>.init(storage:)();
    sub_10000950C(v136, &qword_10038A910);
    sub_100033364(v197, *(uint64_t *)&v196, v189);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_10000950C((uint64_t)v195, &qword_100388720);
  }
  else
  {
    double v225 = v196;
    uint64_t v226 = v197;
    sub_100033310();
    swift_bridgeObjectRetain();
    uint64_t v137 = Text.init<A>(_:)();
    uint64_t v139 = v138;
    char v141 = v140 & 1;
    uint64_t v143 = a3[3];
    uint64_t v142 = a3[4];
    sub_100008F88(a3, v143);
    (*(void (**)(uint64_t))(*(void *)(v142 + 8) + 32))(v143);
    uint64_t v144 = Text.font(_:)();
    double v196 = *(double *)&v145;
    uint64_t v197 = v146;
    char v148 = v147;
    swift_release();
    sub_100033364(v137, v139, v141);
    swift_bridgeObjectRelease();
    uint64_t v149 = *(void **)(v30 + 32);
    if (!v149)
    {
      while (1)
      {
        type metadata accessor for UIMetrics();
        long long v174 = (unint64_t *)&qword_10037EFF0;
        __int16 v175 = type metadata accessor for UIMetrics;
LABEL_9:
        sub_10017EF10(v174, (void (*)(uint64_t))v175);
        EnvironmentObject.error()();
        __break(1u);
      }
    }
    char v150 = v148 & 1;
    uint64_t v151 = v149[9];
    uint64_t v152 = v149[10];
    sub_100008F88(v149 + 6, v151);
    uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 96);
    uint64_t v154 = swift_retain();
    v153(v154, v151, v152);
    swift_release();
    uint64_t v155 = *(void *)&v196;
    uint64_t v156 = Text.foregroundColor(_:)();
    uint64_t v158 = v157;
    char v160 = v159;
    uint64_t v162 = v161;
    sub_100033364(v144, v155, v150);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v163 = swift_getKeyPath();
    uint64_t v164 = swift_getKeyPath();
    uint64_t v165 = swift_getKeyPath();
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    double v166 = v225;
    char v167 = v226;
    uint64_t v168 = v227;
    char v169 = v228;
    char v170 = v160 & 1;
    LOBYTE(v207[0]) = v160 & 1;
    LOBYTE(v205[0]) = 0;
    LOBYTE(v204[0]) = v226;
    LOBYTE(v203[0]) = v228;
    uint64_t v171 = v200;
    *long long v200 = v156;
    v171[1] = v158;
    *((unsigned char *)v171 + 16) = v170;
    *(_DWORD *)((char *)v171 + 17) = v214;
    *((_DWORD *)v171 + 5) = *(_DWORD *)((char *)&v214 + 3);
    v171[3] = v162;
    v171[4] = v163;
    v171[5] = 1;
    *((unsigned char *)v171 + 48) = 0;
    int v172 = v254;
    *((_DWORD *)v171 + 13) = *(_DWORD *)((char *)&v254 + 3);
    *(_DWORD *)((char *)v171 + 49) = v172;
    v171[7] = v164;
    *((unsigned char *)v171 + 64) = 0;
    int v173 = *(_DWORD *)v213;
    *((_DWORD *)v171 + 17) = *(_DWORD *)&v213[3];
    *(_DWORD *)((char *)v171 + 65) = v173;
    v171[9] = v165;
    v171[10] = 0x3FE0000000000000;
    *((double *)v171 + 11) = v166;
    *((unsigned char *)v171 + 96) = v167;
    LODWORD(v166) = *(_DWORD *)v211;
    *((_DWORD *)v171 + 25) = *(_DWORD *)&v211[3];
    *(_DWORD *)((char *)v171 + 97) = LODWORD(v166);
    v171[13] = v168;
    *((unsigned char *)v171 + 112) = v169;
    LODWORD(v166) = *(_DWORD *)v209;
    *((_DWORD *)v171 + 29) = *(_DWORD *)&v209[3];
    *(_DWORD *)((char *)v171 + 113) = LODWORD(v166);
    *(_OWORD *)(v171 + 15) = v229;
    *((_WORD *)v171 + 68) = 256;
    swift_storeEnumTagMultiPayload();
    sub_100004010(&qword_10038A920);
    sub_10018C0FC();
    sub_10018C004();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_10018769C@<X0>(uint64_t a1@<X8>)
{
  return sub_100185CC8(a1);
}

double sub_1001876D8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100181188(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
  int v7 = 1 << swift_getEnumCaseMultiPayload();
  if ((v7 & 0x19) != 0)
  {
    type metadata accessor for AppEvents();
    sub_10017EF10((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t v8 = EnvironmentObject.init()();
    uint64_t v10 = v9;
    type metadata accessor for StewieModel();
    sub_10017EF10(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
    uint64_t v11 = EnvironmentObject.init()();
    uint64_t v13 = v12;
    type metadata accessor for UIMetrics();
    sub_10017EF10((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t v14 = EnvironmentObject.init()();
    *(void *)&long long v20 = v8;
    *((void *)&v20 + 1) = v10;
    *(void *)&long long v21 = v11;
    *((void *)&v21 + 1) = v13;
    *(void *)&long long v22 = v14;
    *((void *)&v22 + 1) = v15;
    char v23 = 0;
  }
  else
  {
    if ((v7 & 0x24) == 0) {
      sub_100188A14((uint64_t)v6, type metadata accessor for ConnectionClosed);
    }
    long long v21 = 0u;
    long long v22 = 0u;
    long long v20 = 0u;
    char v23 = 1;
  }
  sub_10018A168();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v24;
  long long v17 = v25;
  long long v18 = v26;
  char v19 = v27;
  *(_OWORD *)a1 = v24;
  *(_OWORD *)(a1 + 16) = v17;
  *(_OWORD *)(a1 + 32) = v18;
  *(unsigned char *)(a1 + 48) = v19;
  return result;
}

uint64_t sub_100187928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (long long *)v1;
  uint64_t v55 = a1;
  uint64_t v53 = type metadata accessor for KeyboardShortcut();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v49 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004010(&qword_10038A808);
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100004010(&qword_10038A810);
  uint64_t v44 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100004010(&qword_10038A818);
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004010(&qword_10038A820);
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  char v46 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004010(&qword_10038A828);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(v1 + 32);
  if (!v16)
  {
    type metadata accessor for UIMetrics();
    uint64_t v38 = (unint64_t *)&qword_10037EFF0;
    char v39 = type metadata accessor for UIMetrics;
LABEL_12:
    sub_10017EF10(v38, (void (*)(uint64_t))v39);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v18 = v16[9];
  uint64_t v17 = v16[10];
  sub_100008F88(v16 + 6, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v60, v18, v17);
  char v19 = *(void **)(v1 + 16);
  if (!v19)
  {
    type metadata accessor for StewieModel();
    uint64_t v38 = &qword_100380DA0;
    char v39 = type metadata accessor for StewieModel;
    goto LABEL_12;
  }
  if (v19[8]
    && (uint64_t v20 = v19[15], (sub_100078E0C(0, v19[11]) & 1) != 0)
    && (v20 & 0xFF00) != 0x200
    && (v20 & 0x100) != 0)
  {
    long long v61 = *v2;
    long long v21 = (_OWORD *)swift_allocObject();
    uint64_t v40 = (uint64_t)&v40;
    long long v22 = v2[1];
    v21[1] = *v2;
    v21[2] = v22;
    v21[3] = v2[2];
    __chkstk_darwin(v21);
    sub_10004ED30((uint64_t)&v61);
    sub_10018B9C8();
    swift_retain();
    swift_retain();
    Button.init(action:label:)();
    BorderlessButtonStyle.init()();
    uint64_t v23 = sub_100009B18(&qword_10038A838, &qword_10038A808);
    uint64_t v24 = sub_10017EF10(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    uint64_t v25 = v42;
    uint64_t v26 = v45;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v26);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v25);
    char v27 = v49;
    static KeyboardShortcut.defaultAction.getter();
    uint64_t v56 = v25;
    uint64_t v57 = v26;
    uint64_t v58 = v23;
    uint64_t v59 = v24;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v29 = v47;
    uint64_t v30 = v48;
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v53);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v30);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v31 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v33 = v32;
    LOBYTE(v24) = v34 & 1;
    uint64_t v56 = v30;
    uint64_t v57 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v35 = (uint64_t)v46;
    uint64_t v36 = v52;
    View.accessibility(label:)();
    sub_100033364(v31, v33, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v36);
    sub_10000D544(v35, (uint64_t)v15, &qword_10038A820);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v54);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v15, 1, 1, v54);
  }
  sub_10000D544((uint64_t)v15, v55, &qword_10038A828);
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v60);
}

uint64_t sub_10018814C(void *a1)
{
  if (*a1)
  {
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    return swift_release();
  }
  else
  {
    type metadata accessor for AppEvents();
    sub_10017EF10((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100188254@<X0>(uint64_t a1@<X8>)
{
  return sub_100187928(a1);
}

uint64_t sub_100188290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v1 = sub_100004010(&qword_1003828F8);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_1003828E8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = sub_100004010(&qword_1003828D0) - 8;
  __chkstk_darwin(v53);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004010(&qword_10038A8B8) - 8;
  uint64_t v15 = __chkstk_darwin(v54);
  uint64_t v56 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v52 = (uint64_t)&v51 - v17;
  uint64_t v18 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.large(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  *uint64_t v4 = KeyPath;
  sub_10000D2A0((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_1003828F8);
  *uint64_t v12 = v18;
  swift_retain();
  sub_10000950C((uint64_t)v4, &qword_1003828F8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  static Font.title.getter();
  static Font.Weight.semibold.getter();
  uint64_t v20 = Font.weight(_:)();
  swift_release();
  uint64_t v21 = swift_getKeyPath();
  sub_10000D2A0((uint64_t)v12, (uint64_t)v14, &qword_1003828E8);
  long long v22 = (uint64_t *)&v14[*(int *)(v53 + 44)];
  *long long v22 = v21;
  v22[1] = v20;
  sub_10000950C((uint64_t)v12, &qword_1003828E8);
  uint64_t v23 = static Color.green.getter();
  uint64_t v24 = static Color.white.getter();
  uint64_t v25 = v56;
  sub_10000D2A0((uint64_t)v14, v56, &qword_1003828D0);
  uint64_t v26 = (uint64_t *)(v25 + *(int *)(v54 + 44));
  *uint64_t v26 = v23;
  v26[1] = v24;
  sub_10000950C((uint64_t)v14, &qword_1003828D0);
  uint64_t v27 = v25;
  uint64_t v28 = v52;
  sub_10000D544(v27, v52, &qword_10038A8B8);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v29 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v31 = v30;
  LOBYTE(v10) = v32 & 1;
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v33 = Text.font(_:)();
  uint64_t v35 = v34;
  LOBYTE(KeyPath) = v36;
  swift_release();
  LOBYTE(v2) = KeyPath & 1;
  sub_100033364(v29, v31, v10);
  swift_bridgeObjectRelease();
  static Color.white.getter();
  uint64_t v37 = Text.foregroundColor(_:)();
  uint64_t v39 = v38;
  LOBYTE(v10) = v40;
  uint64_t v42 = v41;
  swift_release();
  LOBYTE(v10) = v10 & 1;
  sub_100033364(v33, v35, v2);
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v56;
  sub_10000D2A0(v28, v56, &qword_10038A8B8);
  uint64_t v47 = v46;
  uint64_t v48 = v55;
  sub_10000D2A0(v47, v55, &qword_10038A8B8);
  uint64_t v49 = v48 + *(int *)(sub_100004010(&qword_10038A8C0) + 48);
  *(void *)uint64_t v49 = v37;
  *(void *)(v49 + 8) = v39;
  *(unsigned char *)(v49 + 16) = v10;
  *(void *)(v49 + 24) = v42;
  *(void *)(v49 + 32) = v43;
  *(void *)(v49 + 40) = 1;
  *(unsigned char *)(v49 + 48) = 0;
  *(void *)(v49 + 56) = v44;
  *(unsigned char *)(v49 + 64) = 1;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = 0x3FE0000000000000;
  sub_100033724(v37, v39, v10);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000950C(v28, &qword_10038A8B8);
  sub_100033364(v37, v39, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10000950C(v56, &qword_10038A8B8);
}

uint64_t sub_100188868@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_100004010(&qword_10038A8B0);
  return sub_100188290(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1001888B4()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1001888D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.imageScale.setter();
}

unint64_t sub_1001889A0()
{
  unint64_t result = qword_10038A3E8;
  if (!qword_10038A3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A3E8);
  }
  return result;
}

uint64_t type metadata accessor for CABannerStaticContentLeadingView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038A5A8);
}

uint64_t sub_100188A14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CABannerStaticContentTrailingView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038A488);
}

uint64_t sub_100188AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100188AC0);
}

uint64_t sub_100188AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100188AD8);
}

uint64_t *sub_100188AE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for ConnectionAssitantBannerMode.Mode() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = type metadata accessor for ConnectionClosed(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100004010(&qword_100380418);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100188CB4(uint64_t a1)
{
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_100188DB4(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = type metadata accessor for ConnectionClosed(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100004010(&qword_100380418);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    *(void *)&a1[*(int *)(v5 + 24)] = *(void *)&a2[*(int *)(v5 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_100188F44(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_100188A14((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for ConnectionClosed(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100004010(&qword_100380418);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(void *)&a1[*(int *)(v5 + 24)] = *(void *)&a2[*(int *)(v5 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

unsigned char *sub_1001890F8(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v5 = type metadata accessor for ConnectionClosed(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100004010(&qword_100380418);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    *(void *)&a1[*(int *)(v5 + 24)] = *(void *)&a2[*(int *)(v5 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_100189284(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_100188A14((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v5 = type metadata accessor for ConnectionClosed(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100004010(&qword_100380418);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(void *)&a1[*(int *)(v5 + 24)] = *(void *)&a2[*(int *)(v5 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100189434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100189448);
}

uint64_t sub_10018944C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001894B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001894CC);
}

uint64_t sub_1001894D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CABannerVariableContentView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038A518);
}

uint64_t sub_100189560()
{
  uint64_t result = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001895EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return v5;
}

uint64_t sub_1001897F0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for ConnectionAssitantBannerMode.Mode();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v6 = v4 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100189904(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v7;
    uint64_t v9 = type metadata accessor for ConnectionClosed(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = &v6[v10];
    uint64_t v12 = &v7[v10];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100004010(&qword_100380418);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(void *)&v6[*(int *)(v9 + 24)] = *(void *)&v7[*(int *)(v9 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_100189AB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100188A14((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *sub_100189CA0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v5 = *v6;
    uint64_t v8 = type metadata accessor for ConnectionClosed(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &v5[v9];
    uint64_t v11 = &v6[v9];
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100004010(&qword_100380418);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(void *)&v5[*(int *)(v8 + 24)] = *(void *)&v6[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_100189E44(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100188A14((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
    uint64_t v9 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v7 = *v8;
      uint64_t v10 = type metadata accessor for ConnectionClosed(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_100004010(&qword_100380418);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10018A024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018A038);
}

uint64_t sub_10018A038(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B4BC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_10018A050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018A064);
}

void *sub_10018A064(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10018B5A8(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_10018A07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B66C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for ConnectionAssitantBannerMode.Mode);
}

uint64_t sub_10018A094()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018A114()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018A130()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018A14C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10018A168()
{
  unint64_t result = qword_10038A5E0;
  if (!qword_10038A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A5E0);
  }
  return result;
}

uint64_t type metadata accessor for CABannerConnectionClosedView(uint64_t a1)
{
  return sub_1000497F4(a1, qword_10038A7B8);
}

unint64_t sub_10018A1DC()
{
  unint64_t result = qword_10038A628;
  if (!qword_10038A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A628);
  }
  return result;
}

uint64_t sub_10018A230(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10018A2B8()
{
  unint64_t result = qword_10038A640;
  if (!qword_10038A640)
  {
    sub_1000094C4(&qword_10038A618);
    sub_10018A364();
    sub_10017EF10(&qword_10038A650, (void (*)(uint64_t))type metadata accessor for CABannerConnectionClosedView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A640);
  }
  return result;
}

unint64_t sub_10018A364()
{
  unint64_t result = qword_10038A648;
  if (!qword_10038A648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A648);
  }
  return result;
}

uint64_t sub_10018A3B8()
{
  return sub_10018A230(&qword_10038A658, &qword_10038A660, (void (*)(void))sub_10018A3F4, (void (*)(void))sub_10018A448);
}

unint64_t sub_10018A3F4()
{
  unint64_t result = qword_10038A668;
  if (!qword_10038A668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A668);
  }
  return result;
}

unint64_t sub_10018A448()
{
  unint64_t result = qword_10038A670;
  if (!qword_10038A670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A670);
  }
  return result;
}

unint64_t sub_10018A49C()
{
  unint64_t result = qword_10038A678;
  if (!qword_10038A678)
  {
    sub_1000094C4(&qword_10038A630);
    sub_10018A1DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A678);
  }
  return result;
}

uint64_t sub_10018A518(uint64_t result)
{
  *(unsigned char *)(result + 153) = 1;
  return result;
}

unint64_t sub_10018A524()
{
  unint64_t result = qword_10038A6E0;
  if (!qword_10038A6E0)
  {
    sub_1000094C4(&qword_10038A6D8);
    sub_1000F8A40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A6E0);
  }
  return result;
}

uint64_t sub_10018A5A0()
{
  return sub_10018A230(&qword_10038A6F0, &qword_10038A6A8, (void (*)(void))sub_10018A5DC, (void (*)(void))sub_10018A6F8);
}

unint64_t sub_10018A5DC()
{
  unint64_t result = qword_10038A6F8;
  if (!qword_10038A6F8)
  {
    sub_1000094C4(&qword_10038A6B8);
    sub_10018A658();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A6F8);
  }
  return result;
}

unint64_t sub_10018A658()
{
  unint64_t result = qword_10038A700;
  if (!qword_10038A700)
  {
    sub_1000094C4(&qword_10038A6B0);
    sub_100009B18(&qword_10038A708, &qword_100389C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A700);
  }
  return result;
}

unint64_t sub_10018A6F8()
{
  unint64_t result = qword_10038A710;
  if (!qword_10038A710)
  {
    sub_1000094C4(&qword_10038A690);
    sub_10018A774();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A710);
  }
  return result;
}

unint64_t sub_10018A774()
{
  unint64_t result = qword_10038A718;
  if (!qword_10038A718)
  {
    sub_1000094C4(&qword_10038A688);
    sub_100009B18(&qword_10038A720, &qword_100389C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A718);
  }
  return result;
}

unint64_t sub_10018A814()
{
  unint64_t result = qword_10038A728;
  if (!qword_10038A728)
  {
    sub_1000094C4(&qword_10038A6E8);
    sub_10018A524();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A728);
  }
  return result;
}

uint64_t sub_10018A890()
{
  return sub_10018A230(&qword_10038A730, &qword_10038A6C0, (void (*)(void))sub_10018A5A0, (void (*)(void))sub_10018A814);
}

uint64_t sub_10018A8CC(uint64_t result)
{
  *(unsigned char *)(result + 153) = 0;
  return result;
}

uint64_t sub_10018A8DC()
{
  return EnvironmentValues.imageScale.getter();
}

unint64_t sub_10018A904()
{
  unint64_t result = qword_10038A758;
  if (!qword_10038A758)
  {
    sub_1000094C4(&qword_10038A748);
    sub_1000F88C8();
    sub_100009B18(&qword_1003828F0, &qword_1003828F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A758);
  }
  return result;
}

ValueMetadata *type metadata accessor for CABannerPossibleCallTrailingView()
{
  return &type metadata for CABannerPossibleCallTrailingView;
}

ValueMetadata *type metadata accessor for CABannerConnectionActiveView()
{
  return &type metadata for CABannerConnectionActiveView;
}

uint64_t assignWithCopy for CABannerOverInternetView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CABannerOverInternetView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for CABannerOverInternetView()
{
  return &type metadata for CABannerOverInternetView;
}

uint64_t _s8SOSBuddy24CABannerOverInternetViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t getEnumTagSinglePayload for TryOutConnectionAlertButtonsView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TryOutConnectionAlertButtonsView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CABannerStewieUnavailableView()
{
  return &type metadata for CABannerStewieUnavailableView;
}

void *sub_10018AB78(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
    uint64_t v9 = type metadata accessor for ConnectionClosed(0);
    uint64_t v10 = *(int *)(v9 + 20);
    __dst = &v7[v10];
    uint64_t v11 = &v8[v10];
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_retain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100004010(&qword_100380418);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(void *)&v7[*(int *)(v9 + 24)] = *(void *)&v8[*(int *)(v9 + 24)];
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_10018AD38(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ConnectionClosed(0) + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return swift_bridgeObjectRelease();
}

void *sub_10018AE1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *((unsigned char *)a1 + v5) = *((unsigned char *)a2 + v5);
  uint64_t v8 = type metadata accessor for ConnectionClosed(0);
  uint64_t v9 = *(int *)(v8 + 20);
  __dst = &v6[v9];
  uint64_t v10 = &v7[v9];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_retain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100004010(&qword_100380418);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  *(void *)&v6[*(int *)(v8 + 24)] = *(void *)&v7[*(int *)(v8 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10018AF88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
  uint64_t v19 = type metadata accessor for ConnectionClosed(0);
  uint64_t v9 = *(int *)(v19 + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100004010(&qword_100380418);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)&v7[*(int *)(v19 + 24)] = *(void *)&v8[*(int *)(v19 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10018B170(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *((unsigned char *)a1 + v4) = *((unsigned char *)a2 + v4);
  uint64_t v7 = type metadata accessor for ConnectionClosed(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100004010(&qword_100380418);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)&v5[*(int *)(v7 + 24)] = *(void *)&v6[*(int *)(v7 + 24)];
  return a1;
}

void *sub_10018B2B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
  uint64_t v19 = type metadata accessor for ConnectionClosed(0);
  uint64_t v9 = *(int *)(v19 + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100004010(&qword_100380418);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)&v7[*(int *)(v19 + 24)] = *(void *)&v8[*(int *)(v19 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10018B490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018B4A4);
}

uint64_t sub_10018B4A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B4BC(a1, a2, a3, type metadata accessor for ConnectionClosed);
}

uint64_t sub_10018B4BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 2147483646)
  {
    uint64_t v5 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    int v6 = v5 - 1;
    if (v6 < 0) {
      int v6 = -1;
    }
    return (v6 + 1);
  }
  else
  {
    uint64_t v10 = a4(0);
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = (char *)a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10018B57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018B590);
}

void *sub_10018B590(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10018B5A8(a1, a2, a3, a4, type metadata accessor for ConnectionClosed);
}

void *sub_10018B5A8(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  int v6 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v6 + *(int *)(a4 + 20);
    return (void *)v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10018B654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B66C(a1, a2, a3, type metadata accessor for ConnectionClosed);
}

uint64_t sub_10018B66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CABannerQuestionnaireView()
{
  return &type metadata for CABannerQuestionnaireView;
}

unint64_t sub_10018B71C()
{
  unint64_t result = qword_10038A7F0;
  if (!qword_10038A7F0)
  {
    sub_1000094C4(&qword_10038A7F8);
    sub_10018A168();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A7F0);
  }
  return result;
}

uint64_t sub_10018B798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B860()
{
  return sub_10018A230(&qword_10038A800, &qword_10038A6C8, (void (*)(void))sub_10018A890, (void (*)(void))sub_1000F0BD4);
}

uint64_t sub_10018B8B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B8CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B8E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B904()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B920()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B93C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018B958()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10018B9A0()
{
  return sub_10018814C((void *)(v0 + 16));
}

uint64_t sub_10018B9A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000090FC(*(void *)(v1 + 16), a1);
}

unint64_t sub_10018B9C8()
{
  unint64_t result = qword_10038A830;
  if (!qword_10038A830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A830);
  }
  return result;
}

uint64_t initializeWithCopy for CallEmergencyServicesButtonLabelView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for CallEmergencyServicesButtonLabelView(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for CallEmergencyServicesButtonLabelView(uint64_t a1, uint64_t a2)
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CallEmergencyServicesButtonLabelView()
{
  return &type metadata for CallEmergencyServicesButtonLabelView;
}

ValueMetadata *type metadata accessor for CABannerTransmissionProgressView()
{
  return &type metadata for CABannerTransmissionProgressView;
}

ValueMetadata *type metadata accessor for ConnectionAssitantTryOutBannerView()
{
  return &type metadata for ConnectionAssitantTryOutBannerView;
}

uint64_t sub_10018BB24()
{
  return sub_10018C214(&qword_10038A840, &qword_10038A828, (void (*)(void))sub_10018BB60);
}

unint64_t sub_10018BB60()
{
  unint64_t result = qword_10038A848;
  if (!qword_10038A848)
  {
    sub_1000094C4(&qword_10038A820);
    sub_1000094C4(&qword_10038A810);
    sub_1000094C4(&qword_10038A808);
    type metadata accessor for BorderlessButtonStyle();
    sub_100009B18(&qword_10038A838, &qword_10038A808);
    sub_10017EF10(&qword_100381C70, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10017EF10(&qword_10037F200, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A848);
  }
  return result;
}

uint64_t sub_10018BCF0()
{
  return sub_100009B18(&qword_10038A850, &qword_10038A858);
}

unint64_t sub_10018BD30()
{
  unint64_t result = qword_10038A860;
  if (!qword_10038A860)
  {
    sub_1000094C4(&qword_10038A868);
    sub_10018BDAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A860);
  }
  return result;
}

unint64_t sub_10018BDAC()
{
  unint64_t result = qword_10038A870;
  if (!qword_10038A870)
  {
    sub_1000094C4(&qword_10038A878);
    sub_10018BE28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A870);
  }
  return result;
}

unint64_t sub_10018BE28()
{
  unint64_t result = qword_10038A880;
  if (!qword_10038A880)
  {
    sub_1000094C4(&qword_10038A888);
    sub_10013A6C4();
    sub_100009B18(&qword_100381990, &qword_100381998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A880);
  }
  return result;
}

uint64_t sub_10018BEC8()
{
  return sub_100009B18(&qword_10038A890, &qword_10038A898);
}

uint64_t sub_10018BF04()
{
  return sub_100009B18(&qword_10038A8A0, &qword_10038A8A8);
}

uint64_t sub_10018BF40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018BF5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018BF78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018BF94(uint64_t a1)
{
  return a1;
}

unint64_t sub_10018C004()
{
  unint64_t result = qword_10038A930;
  if (!qword_10038A930)
  {
    sub_1000094C4(&qword_10038A920);
    sub_10018C080();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A930);
  }
  return result;
}

unint64_t sub_10018C080()
{
  unint64_t result = qword_10038A938;
  if (!qword_10038A938)
  {
    sub_1000094C4(&qword_10038A940);
    sub_10018BE28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A938);
  }
  return result;
}

unint64_t sub_10018C0FC()
{
  unint64_t result = qword_10038A948;
  if (!qword_10038A948)
  {
    sub_1000094C4(&qword_10038A910);
    sub_100009B18(&qword_10038A928, &qword_10038A8F8);
    sub_10018C004();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A948);
  }
  return result;
}

uint64_t sub_10018C19C()
{
  return sub_100009B18(&qword_10038A950, &qword_10038A958);
}

uint64_t sub_10018C1D8()
{
  return sub_10018C214(&qword_10038A960, &qword_10038A8E8, (void (*)(void))sub_10018C28C);
}

uint64_t sub_10018C214(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10018C28C()
{
  return sub_10018C214(&qword_10038A968, &qword_10038A8E0, (void (*)(void))sub_10018C2B4);
}

unint64_t sub_10018C2B4()
{
  unint64_t result = qword_10038A970;
  if (!qword_10038A970)
  {
    sub_1000094C4(&qword_10038A8D8);
    sub_10018C330();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A970);
  }
  return result;
}

unint64_t sub_10018C330()
{
  unint64_t result = qword_10038A978;
  if (!qword_10038A978)
  {
    sub_1000094C4(&qword_10038A8D0);
    sub_100009B18(&qword_10038A980, &qword_10038A8C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A978);
  }
  return result;
}

uint64_t sub_10018C3D0()
{
  return sub_10017EF10(&qword_10038A368, (void (*)(uint64_t))type metadata accessor for CABannerView);
}

ValueMetadata *type metadata accessor for FallbackStartView()
{
  return &type metadata for FallbackStartView;
}

uint64_t sub_10018C428()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018C444@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v34[1] = a2;
  char v40 = a1;
  uint64_t v43 = a3;
  uint64_t v3 = type metadata accessor for StackNavigationViewStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  __chkstk_darwin(v3);
  int v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038A988);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010(&qword_10038A990);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100004010(&qword_10038A998);
  __chkstk_darwin(v39);
  int v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004010(&qword_10038A9A0);
  uint64_t v16 = sub_1000094C4(&qword_10038A9A8);
  uint64_t v17 = sub_1000094C4(&qword_1003851F8);
  uint64_t v18 = sub_1000094C4(&qword_10038A9B0);
  uint64_t v19 = sub_100009B18(&qword_10038A9B8, &qword_10038A9B0);
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = sub_100009B18(&qword_100385210, &qword_1003851F8);
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  uint64_t v46 = OpaqueTypeConformance2;
  uint64_t v47 = v21;
  swift_getOpaqueTypeConformance2();
  NavigationView.init(content:)();
  StackNavigationViewStyle.init()();
  sub_100009B18(&qword_10038A9C0, &qword_10038A988);
  sub_10018D4F8(&qword_100385220, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
  uint64_t v22 = v35;
  uint64_t v23 = v37;
  View.navigationViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v23);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v22);
  if (v40)
  {
    uint64_t v24 = v40[9];
    uint64_t v25 = v40[10];
    sub_100008F88(v40 + 6, v24);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 24))(&v44, v24, v25);
    uint64_t v26 = v47;
    uint64_t v27 = v48;
    sub_100008F88(&v44, v47);
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 568))(v26, v27);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v31 = v41;
    uint64_t v30 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v15, v13, v42);
    char v32 = (uint64_t *)&v15[*(int *)(v39 + 36)];
    *char v32 = KeyPath;
    v32[1] = v28;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)&v44);
    return sub_10018D430((uint64_t)v15, v43);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_10018D4F8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10018C94C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  uint64_t v36 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  uint64_t v33 = v4;
  __chkstk_darwin(v3);
  int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10037F118);
  uint64_t v31 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004010(&qword_10037F120);
  uint64_t v10 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100004010(&qword_10038A9B0);
  __chkstk_darwin(v30);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038A9A8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  uint64_t v35 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v14 = static HorizontalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v19 = &v14[*(int *)(sub_100004010(&qword_10038A9C8) + 44)];
  ProgressView<>.init<>()();
  CircularProgressViewStyle.init()();
  sub_100009B18(&qword_10037F210, &qword_10037F118);
  sub_10018D4F8(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
  uint64_t v20 = v32;
  View.progressViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v20);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v7);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v12, v29);
  uint64_t v22 = v36;
  uint64_t v21 = v37;
  uint64_t v23 = v38;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v38);
  uint64_t v24 = sub_100009B18(&qword_10038A9B8, &qword_10038A9B0);
  uint64_t v25 = v30;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
  sub_10018D498((uint64_t)v14);
  sub_100004010(&qword_1003851F8);
  uint64_t v40 = v25;
  uint64_t v41 = v24;
  swift_getOpaqueTypeConformance2();
  sub_100009B18(&qword_100385210, &qword_1003851F8);
  uint64_t v26 = v34;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v26);
}

uint64_t sub_10018CE98()
{
  uint64_t v0 = sub_100004010(&qword_100385228);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004010(&qword_100385230);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100004010(&qword_1003818D8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  sub_1000ACC84();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v12 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v2, v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v6, v3);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10018D168@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v18._unint64_t object = (void *)0x80000001002CB670;
  v3._uint64_t countAndFlagsBits = 0x636E656772656D45;
  v3._unint64_t object = (void *)0xED0000534F532079;
  v4._uint64_t countAndFlagsBits = 0;
  v4._unint64_t object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0xD000000000000032;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v18);

  sub_100033310();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.headline.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  sub_100033364(v5, v7, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v12;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v16;
  return result;
}

uint64_t sub_10018D2BC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AppEvents();
  sub_10018D4F8((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v2 = EnvironmentObject.init()();
  uint64_t v4 = v3;
  type metadata accessor for StewieModel();
  sub_10018D4F8(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  uint64_t v5 = EnvironmentObject.init()();
  uint64_t v7 = v6;
  type metadata accessor for UIMetrics();
  sub_10018D4F8((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  uint64_t v8 = EnvironmentObject.init()();
  uint64_t v10 = v9;
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  return result;
}

uint64_t sub_10018D420@<X0>(uint64_t a1@<X8>)
{
  return sub_10018C444(*(void **)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_10018D430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038A998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018D498(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038A9B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018D4F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10018D544()
{
  unint64_t result = qword_10038A9D0;
  if (!qword_10038A9D0)
  {
    sub_1000094C4(&qword_10038A998);
    sub_1000094C4(&qword_10038A988);
    type metadata accessor for StackNavigationViewStyle();
    sub_100009B18(&qword_10038A9C0, &qword_10038A988);
    sub_10018D4F8(&qword_100385220, (void (*)(uint64_t))&type metadata accessor for StackNavigationViewStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_10037F1F0, &qword_10037F1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038A9D0);
  }
  return result;
}

uint64_t sub_10018D68C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  __chkstk_darwin(v2);
  uint64_t v21 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  id v6 = [self mainBundle];
  id v7 = [v6 bundleIdentifier];

  if (v7)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0x80000001002C5A40;
    uint64_t v8 = 0xD000000000000012;
  }
  sub_10000FDBC();
  v25[0] = v8;
  v25[1] = v10;
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = 0x67416863726F542ELL;
  v11._unint64_t object = (void *)0xEB00000000746E65;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v25[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v21, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v23);
  uint64_t v12 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = v12;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9A48);
  swift_retain_n();
  char v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = v1;
    v25[0] = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    type metadata accessor for TorchAgent();
    swift_retain();
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v24 = sub_1001B3178(v18, v19, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%{public}s] init", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

uint64_t sub_10018DB04()
{
  uint64_t v1 = v0;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9A48);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for TorchAgent();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }

  return v1;
}

uint64_t sub_10018DCDC()
{
  sub_10018DB04();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TorchAgent()
{
  return self;
}

uint64_t sub_10018DD34()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDD0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A48);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Stopping TorchAgent", v10, 2u);
    swift_slowDealloc();
  }

  Swift::String v11 = *(NSObject **)(v1 + 16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10018F8F8;
  *(void *)(v12 + 24) = v1;
  aBlock[4] = sub_10005216C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CAB48;
  aBlock[3] = &unk_10035B500;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v13);
  _Block_release(v13);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v11) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10018E000(double a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  os_log_type_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = *(void *)(v1 + 16);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(double *)(v11 + 24) = a1;
  aBlock[4] = sub_10018F8EC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10035B4B0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  swift_release();
  return swift_release();
}

uint64_t sub_10018E2E8(double a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10018E9A0(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10018E350()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + 16);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10018F8E4;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10035B460;
  os_log_type_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_10018E610()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 32);
    char v2 = *(unsigned char *)(result + 40);
    uint64_t result = swift_release();
    if ((v2 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        sub_10018F1CC(v1);
        return swift_release();
      }
    }
  }
  return result;
}

void *sub_10018E6A8()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 16);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  uint64_t v8 = *(void (**)(void *, uint64_t))(v2 + 8);
  uint64_t v7 = (void *)(v2 + 8);
  v8(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *(void **)(v0 + 24);
  os_log_type_t v9 = v7;
  if (!v7)
  {
    id v10 = [self defaultDeviceWithMediaType:AVMediaTypeVideo];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = v10;
      if ([v12 hasTorch])
      {

        uint64_t v13 = *(void **)(v0 + 24);
        *(void *)(v0 + 24) = v11;

        os_log_type_t v9 = *(void **)(v0 + 24);
        id v14 = v9;
        goto LABEL_15;
      }
      if (qword_10037DDD0 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_10000FD84(v18, (uint64_t)qword_1003A9A48);
      unint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "AVCaptureDevice does not support torch functionality", v21, 2u);
        swift_slowDealloc();
      }

LABEL_14:
      os_log_type_t v9 = 0;
      goto LABEL_15;
    }
    if (qword_10037DDD0 == -1)
    {
LABEL_7:
      uint64_t v15 = type metadata accessor for Logger();
      sub_10000FD84(v15, (uint64_t)qword_1003A9A48);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v16, "Failed to create AVCaptureDevice", v17, 2u);
        swift_slowDealloc();
      }
      goto LABEL_14;
    }
LABEL_17:
    swift_once();
    goto LABEL_7;
  }
LABEL_15:
  id v22 = v7;
  return v9;
}

void sub_10018E9A0(double a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  uint64_t v49 = v7;
  __chkstk_darwin(v6);
  uint64_t v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for DispatchTime();
  uint64_t v45 = *(void *)(v50 - 8);
  uint64_t v9 = __chkstk_darwin(v50);
  id v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v41 - v12;
  id v14 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v2 + 16);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, void *))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  unint64_t v19 = sub_10018E6A8();
  if (!v19) {
    return;
  }
  id v14 = v19;
  uint64_t v43 = v5;
  if (qword_10037DDD0 != -1) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000FD84(v20, (uint64_t)qword_1003A9A48);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 134217984;
    aBlock[0] = *(id *)&a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "torchOn for %f seconds", v23, 0xCu);
    swift_slowDealloc();
  }

  aBlock[0] = 0;
  if ([v14 lockForConfiguration:aBlock])
  {
    id v24 = aBlock[0];
    [v14 setTorchMode:1];
    [v14 unlockForConfiguration];
    uint64_t v25 = *(void *)(v2 + 48);
    uint64_t v26 = v25 + 1;
    if (v25 == -1) {
      __break(1u);
    }
    *(void *)(v2 + 48) = v26;
    *(void *)(v2 + 32) = v26;
    *(unsigned char *)(v2 + 40) = 0;
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v42 = v13;
    uint64_t v45 = *(void *)(v45 + 8);
    ((void (*)(char *, uint64_t))v45)(v11, v50);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = v27;
    v28[3] = v26;
    aBlock[4] = sub_10018F8C4;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100207A1C;
    aBlock[3] = &unk_10035B438;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v30 = v47;
    static DispatchQoS.unspecified.getter();
    uint64_t v51 = _swiftEmptyArrayStorage;
    sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v31 = v43;
    uint64_t v32 = v44;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v33 = v42;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v48);
    ((void (*)(char *, uint64_t))v45)(v33, v50);
    swift_release();
    swift_release();
  }
  else
  {
    id v34 = aBlock[0];
    uint64_t v35 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v51 = (void *)v35;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v39 = String.init<A>(describing:)();
      uint64_t v51 = (void *)sub_1001B3178(v39, v40, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to turn torch on: %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10018F16C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10018F1CC(a2);
    return swift_release();
  }
  return result;
}

void sub_10018F1CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + 16);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, void *))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v10 = *(void **)(v2 + 24);
  if (!v10) {
    return;
  }
  uint64_t v11 = qword_10037DDD0;
  uint64_t v4 = v10;
  if (v11 != -1) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9A48);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134217984;
    id v28 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "torchOff with version %llu", v15, 0xCu);
    swift_slowDealloc();
  }

  if ((*(unsigned char *)(v2 + 40) & 1) != 0 || *(void **)(v2 + 32) != a1)
  {
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v19 = 134217984;
      id v28 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Torch version %llu has already expired", v19, 0xCu);
      swift_slowDealloc();
    }
  }
  else
  {
    id v28 = 0;
    if ([v4 lockForConfiguration:&v28])
    {
      id v16 = v28;
      [v4 setTorchMode:0];
      [v4 unlockForConfiguration];

      *(void *)(v2 + 32) = 0;
      *(unsigned char *)(v2 + 40) = 1;
    }
    else
    {
      id v20 = v28;
      uint64_t v21 = _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      os_log_type_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        id v28 = (id)swift_slowAlloc();
        *(_DWORD *)id v24 = 136315138;
        uint64_t v27 = v21;
        swift_errorRetain();
        sub_100004010(&qword_10037FFB0);
        uint64_t v25 = String.init<A>(describing:)();
        uint64_t v27 = sub_1001B3178(v25, v26, (uint64_t *)&v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to turn torch off: %s", v24, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

uint64_t sub_10018F694()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    if (qword_10037DDD0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9A48);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting TorchAgent", v8, 2u);
    swift_slowDealloc();
  }

  return 1;
}

uint64_t sub_10018F854()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018F88C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018F8C4()
{
  return sub_10018F16C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10018F8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10018F8DC()
{
  return swift_release();
}

uint64_t sub_10018F8E4()
{
  return sub_10018E610();
}

uint64_t sub_10018F8EC()
{
  return sub_10018E2E8(*(double *)(v0 + 24));
}

void sub_10018F8F8()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    sub_10018F1CC(*(void **)(v0 + 32));
  }
}

uint64_t sub_10018F90C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_10018F938(char a1)
{
  uint64_t v8 = &_swiftEmptySetSingleton;
  if (a1)
  {
    sub_10012EBDC(&v7, 0);
    if ((a1 & 8) == 0)
    {
LABEL_3:
      if ((a1 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a1 & 8) == 0)
  {
    goto LABEL_3;
  }
  sub_10012EBDC(&v6, 1);
  if ((a1 & 2) == 0)
  {
LABEL_4:
    if ((a1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_11:
    sub_10012EBDC(&v4, 4);
    if ((a1 & 0x30) == 0) {
      return v8;
    }
    goto LABEL_6;
  }
LABEL_10:
  sub_10012EBDC(&v5, 3);
  if ((a1 & 4) != 0) {
    goto LABEL_11;
  }
LABEL_5:
  if ((a1 & 0x30) != 0) {
LABEL_6:
  }
    sub_10012EBDC(&v3, 2);
  return v8;
}

ValueMetadata *type metadata accessor for RoadsideAssistanceIntroductionView()
{
  return &type metadata for RoadsideAssistanceIntroductionView;
}

uint64_t sub_10018FA00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018FA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (long long *)v1;
  char v3 = *(void **)(v1 + 32);
  if (v3)
  {
    uint64_t v5 = v3[9];
    uint64_t v6 = v3[10];
    sub_100008F88(v3 + 6, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 24))(v25, v5, v6);
    uint64_t v7 = static HorizontalAlignment.center.getter();
    long long v8 = v2[1];
    long long v27 = *v2;
    long long v26 = v8;
    sub_1000090FC((uint64_t)v25, (uint64_t)v24);
    id v9 = (_OWORD *)swift_allocObject();
    long long v10 = v2[1];
    v9[1] = *v2;
    _OWORD v9[2] = v10;
    v9[3] = v2[2];
    sub_100009164((long long *)v24, (uint64_t)(v9 + 4));
    sub_1000090FC((uint64_t)v25, (uint64_t)&v21);
    uint64_t v11 = swift_allocObject();
    sub_100009164(&v21, v11 + 16);
    long long v12 = v2[1];
    *(_OWORD *)(v11 + 56) = *v2;
    *(_OWORD *)(v11 + 72) = v12;
    *(_OWORD *)(v11 + 88) = v2[2];
    sub_10004ED30((uint64_t)&v27);
    sub_10004ED30((uint64_t)&v26);
    swift_retain();
    sub_10004ED30((uint64_t)&v27);
    sub_10004ED30((uint64_t)&v26);
    swift_retain();
    sub_1001621AC(v22, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, sub_100192B34, v9, sub_100192B90, v11, 0);
    *(_OWORD *)&v24[135] = v22[8];
    *(_OWORD *)&v24[151] = v22[9];
    *(_OWORD *)&v24[167] = v22[10];
    *(_OWORD *)&v24[71] = v22[4];
    *(_OWORD *)&v24[87] = v22[5];
    *(_OWORD *)&v24[103] = v22[6];
    *(_OWORD *)&v24[119] = v22[7];
    *(_OWORD *)&v24[7] = v22[0];
    *(_OWORD *)&v24[23] = v22[1];
    *(_OWORD *)&v24[39] = v22[2];
    LOBYTE(v21) = 0;
    *(void *)&v24[183] = v23;
    *(_OWORD *)&v24[55] = v22[3];
    uint64_t v13 = (_OWORD *)swift_allocObject();
    long long v14 = v2[1];
    v13[1] = *v2;
    v13[2] = v14;
    v13[3] = v2[2];
    long long v15 = *(_OWORD *)&v24[144];
    *(_OWORD *)(a1 + 145) = *(_OWORD *)&v24[128];
    *(_OWORD *)(a1 + 161) = v15;
    *(_OWORD *)(a1 + 177) = *(_OWORD *)&v24[160];
    *(_OWORD *)(a1 + 192) = *(_OWORD *)&v24[175];
    long long v16 = *(_OWORD *)&v24[80];
    *(_OWORD *)(a1 + 81) = *(_OWORD *)&v24[64];
    *(_OWORD *)(a1 + 97) = v16;
    long long v17 = *(_OWORD *)&v24[112];
    *(_OWORD *)(a1 + 113) = *(_OWORD *)&v24[96];
    *(_OWORD *)(a1 + 129) = v17;
    long long v18 = *(_OWORD *)&v24[16];
    *(_OWORD *)(a1 + 17) = *(_OWORD *)v24;
    *(_OWORD *)(a1 + 33) = v18;
    long long v19 = *(_OWORD *)&v24[48];
    *(_OWORD *)(a1 + 49) = *(_OWORD *)&v24[32];
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 0;
    *(_OWORD *)(a1 + 65) = v19;
    *(void *)(a1 + 208) = sub_100192BA0;
    *(void *)(a1 + 216) = v13;
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
    sub_10004ED30((uint64_t)&v27);
    sub_10004ED30((uint64_t)&v26);
    swift_retain();
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v25);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100193D5C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10018FD60@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_100381F98);
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_100004010(&qword_100381FA0);
  sub_10018FEAC(a1, a2, (uint64_t)&v8[*(int *)(v9 + 44)]);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_100008F88(a2, v10);
  double v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  LOBYTE(a2) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v8, a3, &qword_100381F98);
  uint64_t v19 = a3 + *(int *)(sub_100004010(&qword_100381FA8) + 36);
  *(unsigned char *)uint64_t v19 = (_BYTE)a2;
  *(double *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return sub_10000950C((uint64_t)v8, &qword_100381F98);
}

uint64_t sub_10018FEAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  long long v131 = a2;
  uint64_t v127 = a3;
  uint64_t v4 = sub_100004010(&qword_100381FB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v115 - v8);
  uint64_t v10 = type metadata accessor for AccessibilityTraits();
  uint64_t v122 = *(void *)(v10 - 8);
  uint64_t v123 = v10;
  __chkstk_darwin(v10);
  char v120 = (char *)v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_100381FB8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v121 = (char *)v115 - v17;
  __chkstk_darwin(v16);
  uint64_t v130 = (uint64_t)v115 - v18;
  uint64_t v19 = type metadata accessor for Image.ResizingMode();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v22 = (char *)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004010(&qword_100381FC0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v124 = (uint64_t)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v129 = (uint64_t)v115 - v26;
  uint64_t v27 = *(void *)(a1 + 32);
  if (v27)
  {
    uint64_t v118 = *(void *)(a1 + 32);
    id v28 = *(id *)(v27 + 112);
    UIContentSizeCategory v119 = UIContentSizeCategoryAccessibilityExtraLarge;
    char v29 = static UIContentSizeCategory.>= infix(_:_:)();

    long long v128 = v7;
    uint64_t v125 = v15;
    long long v126 = v9;
    if (v29)
    {
      uint64_t v30 = sub_100004010(&qword_100381FE8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v129, 1, 1, v30);
      uint64_t v31 = v131;
    }
    else
    {
      Image.init(_:bundle:)();
      (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for Image.ResizingMode.stretch(_:), v19);
      uint64_t v32 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      uint64_t v31 = v131;
      uint64_t v33 = v131[3];
      uint64_t v34 = v131[4];
      sub_100008F88(v131, v33);
      double v35 = (*(double (**)(uint64_t, uint64_t))(v34 + 32))(v33, v34);
      uint64_t v36 = static Alignment.center.getter();
      sub_10016671C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v146, 0.0, 1, v35, 0, v36, v37, v32, 0, 1);
      swift_release();
      long long v138 = v152;
      long long v139 = v153;
      *(void *)&long long v140 = v154;
      long long v134 = v148;
      long long v135 = v149;
      long long v136 = v150;
      long long v137 = v151;
      long long v132 = v146;
      long long v133 = v147;
      uint64_t v38 = v31[3];
      uint64_t v39 = v31[4];
      sub_100008F88(v31, v38);
      double v40 = (*(double (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
      uint64_t v42 = v41;
      uint64_t v44 = v43;
      uint64_t v46 = v45;
      char v47 = static Edge.Set.all.getter();
      long long v152 = v138;
      long long v153 = v139;
      *(void *)&long long v154 = v140;
      long long v148 = v134;
      long long v149 = v135;
      long long v150 = v136;
      long long v151 = v137;
      long long v146 = v132;
      long long v147 = v133;
      LOBYTE(v159) = 0;
      BYTE8(v154) = v47;
      *(_DWORD *)((char *)&v154 + 9) = v158[0];
      HIDWORD(v154) = *(_DWORD *)((char *)v158 + 3);
      *(double *)&long long v155 = v40;
      *((void *)&v155 + 1) = v42;
      *(void *)&long long v156 = v44;
      *((void *)&v156 + 1) = v46;
      LOBYTE(v157[0]) = 0;
      sub_100004010(&qword_100381FC8);
      sub_100193BC4(&qword_100381FD0, &qword_100381FC8, (void (*)(void))sub_1000650C0);
      uint64_t v48 = v129;
      View.accessibility(hidden:)();
      sub_10004F584((uint64_t)&v132);
      uint64_t v49 = sub_100004010(&qword_100381FE8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
    }
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v50 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v52 = v51;
    char v54 = v53 & 1;
    uint64_t v55 = v31[3];
    uint64_t v56 = v31[4];
    sub_100008F88(v31, v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 64))(v55, v56);
    uint64_t v57 = Text.font(_:)();
    uint64_t v59 = v58;
    LOBYTE(v56) = v60;
    v115[1] = v61;
    swift_release();
    sub_100033364(v50, v52, v54);
    swift_bridgeObjectRelease();
    uint64_t v62 = v31[3];
    uint64_t v63 = v31[4];
    sub_100008F88(v31, v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 56))(v62, v63);
    uint64_t v117 = Text.foregroundColor(_:)();
    uint64_t v65 = v64;
    int v116 = v66;
    uint64_t v68 = v67;
    swift_release();
    sub_100033364(v57, v59, v56 & 1);
    swift_bridgeObjectRelease();
    uint64_t v69 = v118;
    id v70 = *(id *)(v118 + 112);
    char v71 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v73 = *(id *)(v69 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    char v74 = v116 & 1;
    BOOL v75 = (v71 & 1) == 0;
    uint64_t v76 = v117;
    uint64_t v159 = v117;
    uint64_t v160 = v65;
    char v161 = v116 & 1;
    uint64_t v162 = v68;
    uint64_t v163 = KeyPath;
    BOOL v164 = v75;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v158, 0.0, 1, 0.0, 1);
    sub_100033364(v76, v65, v74);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v77 = v131;
    uint64_t v78 = v131[3];
    uint64_t v79 = v131[4];
    sub_100008F88(v131, v78);
    double v80 = (*(double (**)(uint64_t, uint64_t))(v79 + 48))(v78, v79);
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    char v87 = static Edge.Set.all.getter();
    char v144 = 0;
    long long v138 = v158[6];
    long long v139 = v158[7];
    long long v140 = v158[8];
    long long v141 = v158[9];
    long long v134 = v158[2];
    long long v135 = v158[3];
    long long v136 = v158[4];
    long long v137 = v158[5];
    long long v132 = v158[0];
    long long v133 = v158[1];
    LOBYTE(v142) = v87;
    *(_DWORD *)((char *)&v142 + 1) = *(_DWORD *)v145;
    DWORD1(v142) = *(_DWORD *)&v145[3];
    *((double *)&v142 + 1) = v80;
    *(void *)&v143[0] = v82;
    *((void *)&v143[0] + 1) = v84;
    *(void *)&v143[1] = v86;
    BYTE8(v143[1]) = 0;
    char v88 = v120;
    static AccessibilityTraits.isHeader.getter();
    sub_100004010(&qword_100381FF0);
    sub_100193BC4(&qword_100381FF8, &qword_100381FF0, (void (*)(void))sub_100033574);
    uint64_t v89 = (uint64_t)v121;
    View.accessibility(addTraits:)();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v88, v123);
    long long v156 = v142;
    v157[0] = v143[0];
    *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)((char *)v143 + 9);
    long long v152 = v138;
    long long v153 = v139;
    long long v154 = v140;
    long long v155 = v141;
    long long v148 = v134;
    long long v149 = v135;
    long long v150 = v136;
    long long v151 = v137;
    long long v146 = v132;
    long long v147 = v133;
    sub_1000650F0((uint64_t)&v146);
    sub_10000D544(v89, v130, &qword_100381FB8);
    sub_100004010((uint64_t *)&unk_1003839F0);
    uint64_t v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = xmmword_1002B4DF0;
    uint64_t v91 = self;
    id v92 = [v91 mainBundle];
    v93._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v165._unint64_t object = (void *)0x80000001002CA3E0;
    v93._unint64_t object = (void *)0x80000001002CA3C0;
    v94._uint64_t countAndFlagsBits = 0;
    v94._unint64_t object = (void *)0xE000000000000000;
    v165._uint64_t countAndFlagsBits = 0xD000000000000058;
    Swift::String v95 = NSLocalizedString(_:tableName:bundle:value:comment:)(v93, (Swift::String_optional)0, (NSBundle)v92, v94, v165);

    *(Swift::String *)(v90 + 32) = v95;
    id v96 = [v91 mainBundle];
    v97._uint64_t countAndFlagsBits = 0xD000000000000022;
    v166._unint64_t object = (void *)0x80000001002CA3E0;
    v97._unint64_t object = (void *)0x80000001002CA440;
    v98._uint64_t countAndFlagsBits = 0;
    v98._unint64_t object = (void *)0xE000000000000000;
    v166._uint64_t countAndFlagsBits = 0xD000000000000058;
    Swift::String v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(v97, (Swift::String_optional)0, (NSBundle)v96, v98, v166);

    *(Swift::String *)(v90 + 48) = v99;
    id v100 = [v91 mainBundle];
    v101._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    v167._unint64_t object = (void *)0x80000001002CA3E0;
    v101._unint64_t object = (void *)0x80000001002C7A80;
    v102._uint64_t countAndFlagsBits = 0;
    v102._unint64_t object = (void *)0xE000000000000000;
    v167._uint64_t countAndFlagsBits = 0xD000000000000058;
    Swift::String v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v101, (Swift::String_optional)0, (NSBundle)v100, v102, v167);

    *(Swift::String *)(v90 + 64) = v103;
    uint64_t v104 = static VerticalAlignment.top.getter();
    uint64_t v105 = (uint64_t)v126;
    *long long v126 = v104;
    *(void *)(v105 + 8) = 0;
    *(unsigned char *)(v105 + 16) = 1;
    uint64_t v106 = sub_100004010(&qword_100382000);
    sub_100190BA0(v90, (uint64_t)v77, 10649826, 0xA300000000000000, v105 + *(int *)(v106 + 44));
    swift_bridgeObjectRelease();
    uint64_t v107 = v129;
    uint64_t v108 = v124;
    sub_10000D2A0(v129, v124, &qword_100381FC0);
    uint64_t v109 = v130;
    uint64_t v110 = (uint64_t)v125;
    sub_10000D2A0(v130, (uint64_t)v125, &qword_100381FB8);
    uint64_t v111 = (uint64_t)v128;
    sub_10000D2A0(v105, (uint64_t)v128, &qword_100381FB0);
    uint64_t v112 = v127;
    sub_10000D2A0(v108, v127, &qword_100381FC0);
    uint64_t v113 = sub_100004010(&qword_100382008);
    sub_10000D2A0(v110, v112 + *(int *)(v113 + 48), &qword_100381FB8);
    sub_10000D2A0(v111, v112 + *(int *)(v113 + 64), &qword_100381FB0);
    sub_10000950C(v105, &qword_100381FB0);
    sub_10000950C(v109, &qword_100381FB8);
    sub_10000950C(v107, &qword_100381FC0);
    sub_10000950C(v111, &qword_100381FB0);
    sub_10000950C(v110, &qword_100381FB8);
    return sub_10000950C(v108, &qword_100381FC0);
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100193D5C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100190BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_100004010(&qword_100382010);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v19 - v14;
  *(void *)uint64_t v15 = static HorizontalAlignment.leading.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  sub_100004010(&qword_100382018);
  uint64_t v20 = a1;
  swift_getKeyPath();
  sub_1000090FC(a2, (uint64_t)v19);
  uint64_t v16 = swift_allocObject();
  sub_100009164(v19, v16 + 16);
  *(void *)(v16 + 56) = a3;
  *(void *)(v16 + 64) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100380040);
  sub_100004010(&qword_100382020);
  sub_100009B18(&qword_100381CF8, &qword_100380040);
  sub_100009B18(&qword_100382028, &qword_100382020);
  ForEach<>.init(_:id:content:)();
  sub_10000D2A0((uint64_t)v15, (uint64_t)v13, &qword_100382010);
  sub_10000D2A0((uint64_t)v13, a5, &qword_100382010);
  uint64_t v17 = a5 + *(int *)(sub_100004010(&qword_100382030) + 48);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 0;
  sub_10000950C((uint64_t)v15, &qword_100382010);
  return sub_10000950C((uint64_t)v13, &qword_100382010);
}

uint64_t sub_100190DEC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v8 = sub_100004010(&qword_100382038);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (double *)((char *)&v36 - v12);
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = static VerticalAlignment.firstTextLineCenter.getter();
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  sub_100008F88(a2, v17);
  double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 72))(v17, v18);
  *(void *)uint64_t v13 = v16;
  v13[1] = v19;
  *((unsigned char *)v13 + 16) = 0;
  uint64_t v20 = sub_100004010(&qword_100382040);
  sub_1001911AC(a3, v44, a2, v14, v15, (uint64_t)v13 + *(int *)(v20 + 44));
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  sub_100008F88(a2, v21);
  double v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 80))(v21, v22);
  static Alignment.center.getter();
  if (v23 < 8.0)
  {
    static os_log_type_t.fault.getter();
    uint64_t v24 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v44 = v53;
  uint64_t v43 = v55;
  uint64_t v42 = v57;
  uint64_t v41 = v59;
  uint64_t v40 = v61;
  uint64_t v39 = v63;
  uint64_t v38 = v65;
  uint64_t v37 = v66;
  char v52 = 1;
  char v51 = v54;
  char v50 = v56;
  char v49 = v58;
  char v48 = v60;
  char v47 = v62;
  char v46 = v64;
  uint64_t v36 = v13;
  sub_10000D2A0((uint64_t)v13, (uint64_t)v11, &qword_100382038);
  char v25 = v52;
  char v26 = v51;
  char v27 = v50;
  char v28 = v49;
  char v29 = v48;
  char v30 = v47;
  char v31 = v46;
  uint64_t v32 = v45;
  sub_10000D2A0((uint64_t)v11, v45, &qword_100382038);
  uint64_t v33 = v32 + *(int *)(sub_100004010(&qword_100382048) + 48);
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = v25;
  *(void *)(v33 + 16) = v44;
  *(unsigned char *)(v33 + 24) = v26;
  *(void *)(v33 + 32) = v43;
  *(unsigned char *)(v33 + 40) = v27;
  *(void *)(v33 + 48) = v42;
  *(unsigned char *)(v33 + 56) = v28;
  *(void *)(v33 + 64) = v41;
  *(unsigned char *)(v33 + 72) = v29;
  *(void *)(v33 + 80) = v40;
  *(unsigned char *)(v33 + 88) = v30;
  *(void *)(v33 + 96) = v39;
  *(unsigned char *)(v33 + 104) = v31;
  uint64_t v34 = v37;
  *(void *)(v33 + 112) = v38;
  *(void *)(v33 + 120) = v34;
  sub_10000950C((uint64_t)v36, &qword_100382038);
  return sub_10000950C((uint64_t)v11, &qword_100382038);
}

uint64_t sub_1001911AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v63 = a5;
  uint64_t v65 = a6;
  uint64_t v9 = sub_100004010(&qword_100382050);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v64 = (uint64_t)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (uint64_t)v57 - v12;
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  unint64_t v61 = sub_100033310();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t v18 = a3[3];
  uint64_t v19 = a3[4];
  uint64_t v59 = v18;
  uint64_t v20 = sub_100008F88(a3, v18);
  uint64_t v58 = v19;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 88);
  v57[0] = v20;
  v57[1] = v19 + 88;
  char v60 = v21;
  v21(v18, v19);
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  LOBYTE(v18) = v25;
  swift_release();
  sub_100033364(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[3];
  uint64_t v27 = a3[4];
  sub_100008F88(a3, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
  uint64_t v28 = Text.foregroundColor(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  uint64_t v34 = v33;
  swift_release();
  v32 &= 1u;
  sub_100033364(v22, v24, v18 & 1);
  swift_bridgeObjectRelease();
  uint64_t v67 = v28;
  uint64_t v68 = v30;
  char v69 = v32;
  uint64_t v70 = v34;
  View.accessibility(hidden:)();
  sub_100033364(v28, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t v67 = v62;
  uint64_t v68 = v63;
  swift_bridgeObjectRetain();
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v37 = v36;
  LOBYTE(v30) = v38 & 1;
  v60(v59, v58);
  uint64_t v39 = Text.font(_:)();
  uint64_t v41 = v40;
  LOBYTE(v22) = v42;
  swift_release();
  sub_100033364(v35, v37, v30);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[3];
  uint64_t v44 = a3[4];
  sub_100008F88(a3, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 56))(v43, v44);
  uint64_t v45 = Text.foregroundColor(_:)();
  uint64_t v47 = v46;
  LOBYTE(v30) = v48;
  uint64_t v50 = v49;
  swift_release();
  sub_100033364(v39, v41, v22 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v66;
  uint64_t v53 = v64;
  sub_10000D2A0(v66, v64, &qword_100382050);
  uint64_t v54 = v65;
  sub_10000D2A0(v53, v65, &qword_100382050);
  uint64_t v55 = v54 + *(int *)(sub_100004010(&qword_100382058) + 48);
  *(void *)uint64_t v55 = v45;
  *(void *)(v55 + 8) = v47;
  *(unsigned char *)(v55 + 16) = v30 & 1;
  *(void *)(v55 + 24) = v50;
  *(void *)(v55 + 32) = KeyPath;
  *(_WORD *)(v55 + 40) = 0;
  *(unsigned char *)(v55 + 42) = 1;
  sub_100033724(v45, v47, v30 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10000950C(v52, &qword_100382050);
  sub_100033364(v45, v47, v30 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10000950C(v53, &qword_100382050);
}

uint64_t sub_1001915D4@<X0>(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_10038AB10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_100004010(&qword_10038AB18);
  sub_100191728(a1, a2, &v8[*(int *)(v9 + 44)]);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_100008F88(a1, v10);
  double v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  LOBYTE(a2) = static Edge.Set.all.getter();
  sub_10000D2A0((uint64_t)v8, a3, &qword_10038AB10);
  uint64_t v19 = a3 + *(int *)(sub_100004010(&qword_10038AB20) + 36);
  *(unsigned char *)uint64_t v19 = (_BYTE)a2;
  *(double *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return sub_10000950C((uint64_t)v8, &qword_10038AB10);
}

uint64_t sub_100191728@<X0>(void *a1@<X0>, long long *a2@<X1>, _OWORD *a3@<X8>)
{
  Swift::String v165 = a3;
  Swift::String v166 = a2;
  uint64_t v4 = type metadata accessor for KeyboardShortcut();
  uint64_t v161 = *(void *)(v4 - 8);
  uint64_t v162 = v4;
  __chkstk_darwin(v4);
  uint64_t v160 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ButtonBorderShape();
  uint64_t v158 = *(void *)(v6 - 8);
  uint64_t v159 = v6;
  __chkstk_darwin(v6);
  uint64_t v157 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v147 = *(void *)(v8 - 8);
  uint64_t v148 = v8;
  __chkstk_darwin(v8);
  uint64_t v145 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ControlSize();
  uint64_t v138 = *(void *)(v10 - 8);
  uint64_t v139 = v10;
  __chkstk_darwin(v10);
  long long v135 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004010(&qword_10038AB28);
  uint64_t v133 = *(void *)(v12 - 8);
  uint64_t v134 = v12;
  __chkstk_darwin(v12);
  long long v132 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_100004010(&qword_10038AB30);
  __chkstk_darwin(v136);
  long long v137 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004010(&qword_10038AB38);
  uint64_t v143 = *(void *)(v15 - 8);
  uint64_t v144 = v15;
  __chkstk_darwin(v15);
  long long v140 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100004010(&qword_10038AB40);
  __chkstk_darwin(v141);
  long long v142 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004010(&qword_10038AB48);
  uint64_t v150 = *(void *)(v18 - 8);
  uint64_t v151 = v18;
  __chkstk_darwin(v18);
  long long v149 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100004010(&qword_10038AB50);
  __chkstk_darwin(v146);
  long long v155 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_100004010(&qword_10038AB58);
  __chkstk_darwin(v153);
  uint64_t v156 = (uint64_t)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100004010(&qword_10038AB60);
  uint64_t v22 = __chkstk_darwin(v154);
  uint64_t v164 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v152 = (uint64_t)&v128 - v25;
  __chkstk_darwin(v24);
  uint64_t v163 = (uint64_t)&v128 - v26;
  id v27 = [self mainBundle];
  v219._uint64_t countAndFlagsBits = 0xD000000000000069;
  v219._unint64_t object = (void *)0x80000001002CA250;
  v28._unint64_t object = (void *)0x80000001002CA230;
  v28._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v29._uint64_t countAndFlagsBits = 0;
  v29._unint64_t object = (void *)0xE000000000000000;
  Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v219);

  v181[0] = v30;
  sub_100033310();
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  Swift::String v167 = a1;
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  sub_100008F88(a1, v36);
  (*(void (**)(uint64_t, uint64_t))(v37 + 96))(v36, v37);
  uint64_t v38 = Text.font(_:)();
  uint64_t v40 = v39;
  char v42 = v41;
  swift_release();
  sub_100033364(v31, v33, v35);
  swift_bridgeObjectRelease();
  uint64_t v43 = v167[3];
  uint64_t v44 = v167[4];
  sub_100008F88(v167, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 56))(v43, v44);
  uint64_t v130 = Text.foregroundColor(_:)();
  uint64_t v131 = v45;
  uint64_t v47 = v46;
  int v129 = v48;
  swift_release();
  sub_100033364(v38, v40, v42 & 1);
  swift_bridgeObjectRelease();
  uint64_t v49 = *((void *)v166 + 4);
  if (v49)
  {
    id v50 = *(id *)(v49 + 112);
    char v51 = static UIContentSizeCategory.>= infix(_:_:)();

    uint64_t KeyPath = swift_getKeyPath();
    id v53 = *(id *)(v49 + 112);
    static Alignment.center.getter();
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      static Alignment.center.getter();
      if (static Alignment.== infix(_:_:)()) {
        static Alignment.leading.getter();
      }
    }

    uint64_t v54 = v130;
    uint64_t v213 = v130;
    uint64_t v214 = v47;
    char v55 = v129 & 1;
    char v215 = v129 & 1;
    uint64_t v216 = v131;
    uint64_t v217 = KeyPath;
    BOOL v218 = (v51 & 1) == 0;
    sub_100165BAC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v211, 0.0, 1, 0.0, 1);
    sub_100033364(v54, v47, v55);
    swift_release();
    swift_bridgeObjectRelease();
    long long v207 = v211[6];
    long long v208 = v211[7];
    long long v209 = v211[8];
    long long v210 = v211[9];
    long long v203 = v211[2];
    long long v204 = v211[3];
    long long v205 = v211[4];
    long long v206 = v211[5];
    long long v201 = v211[0];
    long long v202 = v211[1];
    LODWORD(v130) = static Edge.Set.top.getter();
    unsigned __int8 v195 = 1;
    LODWORD(v131) = static Edge.Set.bottom.getter();
    char v56 = v167;
    uint64_t v57 = v167[3];
    uint64_t v58 = v167[4];
    sub_100008F88(v167, v57);
    (*(void (**)(uint64_t, uint64_t))(v58 + 104))(v57, v58);
    EdgeInsets.init(_all:)();
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    v200[0] = *(_DWORD *)v196;
    *(_DWORD *)((char *)v200 + 3) = *(_DWORD *)&v196[3];
    int v129 = v195;
    unsigned __int8 v197 = 0;
    uint64_t v67 = (_OWORD *)swift_allocObject();
    uint64_t v68 = v166;
    long long v69 = *v166;
    long long v70 = v166[1];
    v67[1] = *v166;
    v67[2] = v70;
    v67[3] = v68[2];
    long long v212 = v69;
    uint64_t v72 = *((void *)v68 + 2);
    char v71 = (long long *)*((void *)v68 + 3);
    uint64_t v128 = v72;
    Swift::String v166 = v71;
    swift_retain();
    sub_10004ED30((uint64_t)&v212);
    sub_100193958();
    swift_retain();
    id v73 = v132;
    Button.init(action:label:)();
    uint64_t v75 = v138;
    uint64_t v74 = v139;
    uint64_t v76 = v135;
    (*(void (**)(char *, void, uint64_t))(v138 + 104))(v135, enum case for ControlSize.large(_:), v139);
    uint64_t v77 = swift_getKeyPath();
    uint64_t v78 = (uint64_t)v137;
    uint64_t v79 = (uint64_t *)&v137[*(int *)(v136 + 36)];
    uint64_t v80 = sub_100004010(&qword_10037F228);
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v79 + *(int *)(v80 + 28), v76, v74);
    *uint64_t v79 = v77;
    uint64_t v82 = v133;
    uint64_t v81 = v134;
    (*(void (**)(uint64_t, char *, uint64_t))(v133 + 16))(v78, v73, v134);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v74);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v73, v81);
    uint64_t v83 = v145;
    BorderedProminentButtonStyle.init()();
    sub_1001939B4();
    sub_100193D5C(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    uint64_t v84 = v140;
    uint64_t v85 = v148;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v83, v85);
    sub_10000950C(v78, &qword_10038AB30);
    uint64_t v86 = v157;
    static ButtonBorderShape.roundedRectangle.getter();
    uint64_t v87 = swift_getKeyPath();
    uint64_t v88 = (uint64_t)v142;
    uint64_t v89 = (uint64_t *)&v142[*(int *)(v141 + 36)];
    uint64_t v90 = sub_100004010(&qword_100381038);
    uint64_t v92 = v158;
    uint64_t v91 = v159;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))((char *)v89 + *(int *)(v90 + 28), v86, v159);
    *uint64_t v89 = v87;
    uint64_t v94 = v143;
    uint64_t v93 = v144;
    (*(void (**)(uint64_t, char *, uint64_t))(v143 + 16))(v88, v84, v144);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v86, v91);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v84, v93);
    Swift::String v95 = v160;
    static KeyboardShortcut.defaultAction.getter();
    sub_100193A80();
    id v96 = v149;
    View.keyboardShortcut(_:)();
    (*(void (**)(char *, uint64_t))(v161 + 8))(v95, v162);
    sub_10000950C(v88, &qword_10038AB40);
    uint64_t v97 = v56[3];
    uint64_t v98 = v56[4];
    sub_100008F88(v56, v97);
    uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 296))(v97, v98);
    uint64_t v100 = swift_getKeyPath();
    *(void *)&v181[0] = v99;
    swift_retain();
    uint64_t v101 = AnyShapeStyle.init<A>(_:)();
    uint64_t v103 = v150;
    uint64_t v102 = v151;
    uint64_t v104 = (uint64_t)v155;
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v155, v96, v151);
    swift_release();
    uint64_t v105 = (uint64_t *)(v104 + *(int *)(v146 + 36));
    *uint64_t v105 = v100;
    v105[1] = v101;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v96, v102);
    if (v128)
    {
      char v106 = *(unsigned char *)(v128 + 250);
      uint64_t v107 = swift_getKeyPath();
      uint64_t v108 = swift_allocObject();
      *(unsigned char *)(v108 + 16) = v106;
      uint64_t v109 = v156;
      sub_10000D2A0(v104, v156, &qword_10038AB50);
      uint64_t v110 = (uint64_t *)(v109 + *(int *)(v153 + 36));
      *uint64_t v110 = v107;
      v110[1] = (uint64_t)sub_100080D84;
      v110[2] = v108;
      sub_10000950C(v104, &qword_10038AB50);
      LOBYTE(v107) = static Edge.Set.bottom.getter();
      uint64_t v111 = v152;
      sub_10000D2A0(v109, v152, &qword_10038AB58);
      uint64_t v112 = v111 + *(int *)(v154 + 36);
      *(unsigned char *)uint64_t v112 = v107;
      *(_OWORD *)(v112 + 8) = 0u;
      *(_OWORD *)(v112 + 24) = 0u;
      *(unsigned char *)(v112 + 40) = 1;
      sub_10000950C(v109, &qword_10038AB58);
      uint64_t v113 = v163;
      sub_10000D544(v111, v163, &qword_10038AB60);
      LOBYTE(v111) = v197;
      LODWORD(v167) = v197;
      uint64_t v114 = v164;
      sub_10000D2A0(v113, v164, &qword_10038AB60);
      long long v174 = v207;
      long long v175 = v208;
      long long v176 = v209;
      long long v177 = v210;
      long long v170 = v203;
      long long v171 = v204;
      long long v172 = v205;
      long long v173 = v206;
      long long v168 = v201;
      long long v169 = v202;
      char v115 = v129;
      char v116 = v130;
      LOBYTE(v178[0]) = v130;
      *(_DWORD *)((char *)v178 + 1) = v200[0];
      DWORD1(v178[0]) = *(_DWORD *)((char *)v200 + 3);
      *(_OWORD *)((char *)v178 + 8) = 0u;
      *(_OWORD *)((char *)&v178[1] + 8) = 0u;
      BYTE8(v178[2]) = v129;
      HIDWORD(v178[2]) = *(_DWORD *)&v199[3];
      *(_DWORD *)((char *)&v178[2] + 9) = *(_DWORD *)v199;
      char v117 = v131;
      LOBYTE(v179) = v131;
      *(_DWORD *)((char *)&v179 + 1) = *(_DWORD *)v198;
      DWORD1(v179) = *(_DWORD *)&v198[3];
      *((void *)&v179 + 1) = v60;
      *(void *)&v180[0] = v62;
      *((void *)&v180[0] + 1) = v64;
      *(void *)&v180[1] = v66;
      BYTE8(v180[1]) = v111;
      long long v118 = v204;
      UIContentSizeCategory v119 = v165;
      v165[2] = v203;
      v119[3] = v118;
      long long v120 = v169;
      *UIContentSizeCategory v119 = v168;
      v119[1] = v120;
      long long v121 = v175;
      v119[6] = v174;
      v119[7] = v121;
      long long v122 = v173;
      v119[4] = v172;
      v119[5] = v122;
      long long v123 = v178[1];
      v119[10] = v178[0];
      v119[11] = v123;
      long long v124 = v177;
      v119[8] = v176;
      v119[9] = v124;
      long long v125 = v179;
      v119[12] = v178[2];
      v119[13] = v125;
      *(_OWORD *)((char *)v119 + 233) = *(_OWORD *)((char *)v180 + 9);
      v119[14] = v180[0];
      uint64_t v126 = sub_100004010(&qword_10038AB88);
      sub_10000D2A0(v114, (uint64_t)v119 + *(int *)(v126 + 48), &qword_10038AB60);
      sub_100065070((uint64_t)&v168);
      sub_10000950C(v113, &qword_10038AB60);
      sub_10000950C(v114, &qword_10038AB60);
      v181[6] = v207;
      v181[7] = v208;
      v181[8] = v209;
      v181[9] = v210;
      v181[2] = v203;
      v181[3] = v204;
      v181[4] = v205;
      v181[5] = v206;
      v181[0] = v201;
      v181[1] = v202;
      char v182 = v116;
      *(_DWORD *)uint64_t v183 = v200[0];
      *(_DWORD *)&v183[3] = *(_DWORD *)((char *)v200 + 3);
      long long v184 = 0u;
      long long v185 = 0u;
      char v186 = v115;
      *(_DWORD *)uint64_t v187 = *(_DWORD *)v199;
      *(_DWORD *)&v187[3] = *(_DWORD *)&v199[3];
      char v188 = v117;
      *(_DWORD *)uint64_t v189 = *(_DWORD *)v198;
      *(_DWORD *)&v189[3] = *(_DWORD *)&v198[3];
      uint64_t v190 = v60;
      uint64_t v191 = v62;
      uint64_t v192 = v64;
      uint64_t v193 = v66;
      char v194 = (char)v167;
      return sub_1000650F0((uint64_t)v181);
    }
  }
  else
  {
    type metadata accessor for UIMetrics();
    sub_100193D5C((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for RoadsideAssistanceModel();
  sub_100193D5C(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void *sub_1001927B0(void *result)
{
  uint64_t v1 = result[2];
  if (!v1)
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_100193D5C(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_7;
  }
  if (!*(void *)(v1 + 104)) {
    return result;
  }
  if (!*result)
  {
LABEL_7:
    type metadata accessor for AppEvents();
    sub_100193D5C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    swift_retain();
    uint64_t result = (void *)EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  sub_1000C9FF4();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  return (void *)swift_release();
}

uint64_t sub_100192924@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RoadsideAssistanceModel();
  sub_100193D5C(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  uint64_t result = EnvironmentObject.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_100192994(void *result)
{
  uint64_t v1 = result[2];
  if (!v1)
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_100193D5C(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_7;
  }
  if (!*(void *)(v1 + 104)) {
    return result;
  }
  if (!*result)
  {
LABEL_7:
    type metadata accessor for AppEvents();
    sub_100193D5C((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
    swift_retain();
    uint64_t result = (void *)EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  swift_retain();
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  return (void *)swift_release();
}

uint64_t sub_100192AE4()
{
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 64);

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100192B34@<X0>(uint64_t a1@<X8>)
{
  return sub_10018FD60(v1 + 16, (void *)(v1 + 64), a1);
}

uint64_t sub_100192B40()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100192B90@<X0>(uint64_t a1@<X8>)
{
  return sub_1001915D4((void *)(v1 + 16), (long long *)(v1 + 56), a1);
}

void *sub_100192BA0()
{
  return sub_100192994((void *)(v0 + 16));
}

uint64_t sub_100192BA8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v96 = a1;
  uint64_t v101 = a2;
  uint64_t v88 = type metadata accessor for ControlSize();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004010(&qword_10037F118);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100004010(&qword_10037F120);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004010(&qword_10037F128);
  __chkstk_darwin(v74);
  uint64_t v85 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100004010(&qword_100382080);
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v84 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_100382088);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v100 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v98 = (char *)&v74 - v11;
  uint64_t v90 = sub_100004010(&qword_10037F010);
  __chkstk_darwin(v90);
  uint64_t v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004010(&qword_100382090);
  uint64_t v14 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100004010(&qword_100382098);
  __chkstk_darwin(v89);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004010(&qword_1003820A0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100004010(&qword_1003820A8);
  __chkstk_darwin(v92);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004010(&qword_1003820B0);
  __chkstk_darwin(v94);
  uint64_t v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004010(&qword_1003820B8);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v95 = (uint64_t)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v74 - v30;
  __chkstk_darwin(v29);
  uint64_t v91 = (uint64_t)&v74 - v32;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v102 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v103 = v33;
  char v104 = v34 & 1;
  uint64_t v105 = v35;
  uint64_t v36 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v37 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v13, v36, v37);
  sub_100193D5C(&qword_10037F020, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100009B18(&qword_10037F030, &qword_10037F010);
    View.dynamicTypeSize<A>(_:)();
    sub_10000950C((uint64_t)v13, &qword_10037F010);
    sub_100033364(v102, v103, v104);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v40 = v93;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v93);
    char v41 = &v18[*(int *)(v89 + 36)];
    *(void *)char v41 = KeyPath;
    uint64_t v42 = 1;
    v41[8] = 1;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v40);
    uint64_t v43 = static Alignment.center.getter();
    sub_100166904(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v43, v44);
    sub_10000950C((uint64_t)v18, &qword_100382098);
    sub_10000D2A0((uint64_t)v21, (uint64_t)v23, &qword_1003820A0);
    *(_WORD *)&v23[*(int *)(v92 + 36)] = 256;
    sub_10000950C((uint64_t)v21, &qword_1003820A0);
    char v45 = v96;
    if (v96) {
      double v46 = 0.0;
    }
    else {
      double v46 = 1.0;
    }
    sub_10000D2A0((uint64_t)v23, (uint64_t)v25, &qword_1003820A8);
    *(double *)&v25[*(int *)(v94 + 36)] = v46;
    sub_10000950C((uint64_t)v23, &qword_1003820A8);
    sub_100193BC4(&qword_1003820C0, &qword_1003820B0, (void (*)(void))sub_10006525C);
    View.accessibilityHidden(_:)();
    sub_10000950C((uint64_t)v25, &qword_1003820B0);
    uint64_t v47 = v91;
    sub_10000D544((uint64_t)v31, v91, &qword_1003820B8);
    uint64_t v49 = (uint64_t)v98;
    uint64_t v48 = v99;
    if (v45)
    {
      id v50 = v75;
      ProgressView<>.init<>()();
      char v51 = v78;
      CircularProgressViewStyle.init()();
      sub_100009B18(&qword_10037F210, &qword_10037F118);
      sub_100193D5C(&qword_10037F218, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
      uint64_t v52 = v81;
      uint64_t v53 = v77;
      uint64_t v54 = v80;
      View.progressViewStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v54);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v50, v53);
      uint64_t v55 = v87;
      char v56 = v86;
      uint64_t v57 = v88;
      (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, enum case for ControlSize.small(_:), v88);
      uint64_t v58 = swift_getKeyPath();
      uint64_t v59 = (uint64_t)v85;
      uint64_t v60 = (uint64_t *)&v85[*(int *)(v74 + 36)];
      uint64_t v61 = sub_100004010(&qword_10037F228);
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))((char *)v60 + *(int *)(v61 + 28), v56, v57);
      *uint64_t v60 = v58;
      uint64_t v62 = v82;
      uint64_t v63 = v83;
      (*(void (**)(uint64_t, char *, uint64_t))(v82 + 16))(v59, v52, v83);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v63);
      id v64 = [self labelColor];
      uint64_t v65 = Color.init(uiColor:)();
      uint64_t v66 = swift_getKeyPath();
      uint64_t v102 = v65;
      swift_retain();
      uint64_t v67 = AnyShapeStyle.init<A>(_:)();
      uint64_t v68 = v84;
      sub_10000D2A0(v59, v84, &qword_10037F128);
      swift_release();
      long long v69 = (uint64_t *)(v68 + *(int *)(v48 + 36));
      *long long v69 = v66;
      v69[1] = v67;
      sub_10000950C(v59, &qword_10037F128);
      sub_10000D544(v68, v49, &qword_100382080);
      uint64_t v42 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v49, v42, 1, v48);
    uint64_t v70 = v95;
    sub_10000D2A0(v47, v95, &qword_1003820B8);
    uint64_t v71 = v100;
    sub_10000D2A0(v49, v100, &qword_100382088);
    uint64_t v72 = v101;
    sub_10000D2A0(v70, v101, &qword_1003820B8);
    uint64_t v73 = sub_100004010(&qword_1003820E0);
    sub_10000D2A0(v71, v72 + *(int *)(v73 + 48), &qword_100382088);
    sub_10000950C(v49, &qword_100382088);
    sub_10000950C(v47, &qword_1003820B8);
    sub_10000950C(v71, &qword_100382088);
    return sub_10000950C(v70, &qword_1003820B8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100193898@<X0>(uint64_t *a1@<X8>)
{
  if (*(void *)v1)
  {
    int v3 = *(unsigned __int8 *)(*(void *)v1 + 250);
    *a1 = static Alignment.center.getter();
    a1[1] = v4;
    uint64_t v5 = sub_100004010(&qword_100382078);
    return sub_100192BA8(v3, (uint64_t)a1 + *(int *)(v5 + 44));
  }
  else
  {
    type metadata accessor for RoadsideAssistanceModel();
    sub_100193D5C(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void *sub_100193950()
{
  return sub_1001927B0((void *)(v0 + 16));
}

unint64_t sub_100193958()
{
  unint64_t result = qword_10038AB68;
  if (!qword_10038AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038AB68);
  }
  return result;
}

unint64_t sub_1001939B4()
{
  unint64_t result = qword_10038AB70;
  if (!qword_10038AB70)
  {
    sub_1000094C4(&qword_10038AB30);
    sub_100009B18(&qword_10038AB78, &qword_10038AB28);
    sub_100009B18(&qword_10037F220, &qword_10037F228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038AB70);
  }
  return result;
}

unint64_t sub_100193A80()
{
  unint64_t result = qword_10038AB80;
  if (!qword_10038AB80)
  {
    sub_1000094C4(&qword_10038AB40);
    sub_1000094C4(&qword_10038AB30);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_1001939B4();
    sub_100193D5C(&qword_100381030, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100009B18(&qword_100381048, &qword_100381038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038AB80);
  }
  return result;
}

uint64_t sub_100193BB4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100193BC4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100193C40()
{
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100193C80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100190DEC(a1, v2 + 2, v2[7], v2[8], a2);
}

ValueMetadata *type metadata accessor for RequestAssistanceButtonLabelView()
{
  return &type metadata for RequestAssistanceButtonLabelView;
}

unint64_t sub_100193CA0()
{
  unint64_t result = qword_10038AB90;
  if (!qword_10038AB90)
  {
    sub_1000094C4(&qword_10038AB98);
    sub_100009B18(&qword_10038ABA0, &qword_10038ABA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038AB90);
  }
  return result;
}

uint64_t sub_100193D40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100193D5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Loop(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Loop(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 49) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Loop()
{
  return &type metadata for Loop;
}

void sub_100193E10(char a1, double a2)
{
  if (a1)
  {
    double v3 = *(double *)(v2 + 24);
    if (*(unsigned char *)(v2 + 32)) {
      double v3 = a2;
    }
    *(double *)(v2 + 24) = v3;
    *(unsigned char *)(v2 + 32) = 0;
    long double v4 = *(double *)(v2 + 8);
    if (*(unsigned char *)(v2 + 48)) {
      double v5 = a2 - v3 - *(double *)(v2 + 16);
    }
    else {
      double v5 = a2 - *(double *)(v2 + 40) - v4 * ceil((v3 - *(double *)(v2 + 40)) / v4) - *(double *)(v2 + 16);
    }
    if (v5 < 0.0) {
      double v5 = 0.0;
    }
    fmod(v5, v4);
  }
  else
  {
    *(void *)(v2 + 24) = 0;
    *(unsigned char *)(v2 + 32) = 1;
  }
}

float sub_100193EB4(char a1, double a2)
{
  if (a1)
  {
    double v3 = *(double *)(v2 + 24);
    if (*(unsigned char *)(v2 + 32)) {
      double v3 = a2;
    }
    *(double *)(v2 + 24) = v3;
    *(unsigned char *)(v2 + 32) = 0;
    if (*(unsigned char *)(v2 + 48))
    {
      double v4 = a2 - v3;
      double v5 = *(double *)(v2 + 8);
      double v6 = v4 - *(double *)(v2 + 16);
    }
    else
    {
      double v8 = *(double *)(v2 + 40);
      double v9 = v3 - v8;
      double v5 = *(double *)(v2 + 8);
      double v6 = a2 - v8 - v5 * ceil(v9 / v5) - *(double *)(v2 + 16);
    }
    double v10 = (v6 + v6) * 3.14159265;
    BOOL v11 = v6 < 0.0;
    double v12 = 0.0;
    if (!v11) {
      double v12 = v10;
    }
    return 0.5 - cos(v12 / v5) * 0.5;
  }
  else
  {
    *(void *)(v2 + 24) = 0;
    *(unsigned char *)(v2 + 32) = 1;
    return *(float *)v2;
  }
}

void *sub_100193F6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  __chkstk_darwin(v2);
  uint64_t v21 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  id v6 = [self mainBundle];
  id v7 = [v6 bundleIdentifier];

  if (v7)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0xD000000000000012;
    uint64_t v10 = 0x80000001002C5A40;
  }
  sub_10000FDBC();
  v25[0] = v8;
  v25[1] = v10;
  swift_bridgeObjectRetain();
  v11._unint64_t object = (void *)0x80000001002D1400;
  v11._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v25[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v21, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v23);
  uint64_t v12 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = v12;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9A48);
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = (uint64_t)v1;
    v25[0] = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    type metadata accessor for ToneLibraryAgent();
    swift_retain();
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v24 = sub_1001B3178(v18, v19, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%{public}s] init", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

id *sub_1001943D8()
{
  uint64_t v1 = v0;
  if (qword_10037DDD0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9A48);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for ToneLibraryAgent();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }

  return v1;
}

uint64_t sub_1001945B8()
{
  sub_1001943D8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToneLibraryAgent()
{
  return self;
}

uint64_t sub_100194610()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10037DDD0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9A48);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Stopping ToneLibraryAgent", v10, 2u);
    swift_slowDealloc();
  }

  Swift::String v11 = *(NSObject **)(v1 + 16);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100195E10;
  *(void *)(v12 + 24) = v1;
  aBlock[4] = sub_10005216C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CAB48;
  aBlock[3] = &unk_10035B878;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v13);
  _Block_release(v13);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v11) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001948DC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + 16);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = a1;
  aBlock[4] = sub_100195E04;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10035B828;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_100194BC0(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100194F38(a2 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100194C20()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + 16);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100195DAC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  aBlock[3] = &unk_10035B7D8;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_100194EE0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100195574();
    return swift_release();
  }
  return result;
}

void sub_100194F38(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + 16);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_10037DDD0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000FD84(v10, (uint64_t)qword_1003A9A48);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    LOBYTE(v46) = a1 & 1;
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v46 = sub_1001B3178(v14, v15, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Play %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100195574();
  id v16 = [objc_allocWithZone((Class)TLAlertConfiguration) initWithType:22];
  [v16 setTopic:TLAlertTopicSOSCountdownTick];
  [v16 setMaximumDuration:0.85];
  if (a1) {
    [v16 setToneIdentifier:TLToneIdentifierNone];
  }
  id v17 = [self alertWithConfiguration:v16];
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = [objc_allocWithZone((Class)TLAlertActivationAssertion) initWithAlert:v17];
    uint64_t v20 = *(void **)(v2 + 32);
    *(void *)(v2 + 32) = v19;

    [*(id *)(v2 + 32) acquire];
    sub_100195A04();
    id v21 = v16;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v47 = v45;
      *(_DWORD *)uint64_t v24 = 136315138;
      v43[1] = v24 + 4;
      uint64_t v44 = v24;
      id v25 = v21;
      id v26 = [v25 description];
      id v27 = v21;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v29;

      uint64_t v31 = v28;
      id v21 = v27;
      uint64_t v46 = sub_1001B3178(v31, v30, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Playing alert with configuration: %s", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    char v41 = *(void **)(v2 + 24);
    *(void *)(v2 + 24) = v18;
    id v42 = v18;

    [v42 play];
  }
  else
  {
    id v32 = v16;
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      id v36 = v32;
      id v37 = [v36 description];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      uint64_t v46 = sub_1001B3178(v38, v40, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to create alert with configuration: %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_100195574()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (void *)v2[2];
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  id v9 = (void *)v2[3];
  uint64_t v1 = &unk_10037D000;
  if (!v9) {
    goto LABEL_7;
  }
  uint64_t v10 = qword_10037DDD0;
  uint64_t v6 = v9;
  if (v10 != -1) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000FD84(v11, (uint64_t)qword_1003A9A48);
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Stopping current alert", v14, 2u);
    swift_slowDealloc();
  }

  [v6 stop];
  unint64_t v15 = (void *)v2[3];
  v2[3] = 0;

LABEL_7:
  id v16 = (void *)v2[4];
  if (v16)
  {
    uint64_t v17 = v1[442];
    id v18 = v16;
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000FD84(v19, (uint64_t)qword_1003A9A48);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Releasing alert activation assertion", v22, 2u);
      swift_slowDealloc();
    }

    [v18 relinquish];
    os_log_type_t v23 = (void *)v2[4];
    v2[4] = 0;
  }
}

uint64_t sub_100195844()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000FDBC();
  uint64_t *v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    if (qword_10037DDD0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9A48);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting ToneLibraryAgent", v8, 2u);
    swift_slowDealloc();
  }

  return 1;
}

void sub_100195A04()
{
  id v0 = [self sharedInstance];
  if (!v0) {
    __break(1u);
  }
  uint64_t v1 = v0;
  id v2 = [self mainBundle];
  id v3 = [v2 bundleIdentifier];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = 0;
  unsigned int v5 = [v1 setAttribute:v4 forKey:AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute error:&v15];

  id v6 = v15;
  if (v5)
  {
    id v7 = v6;
  }
  else
  {
    id v8 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10037DDD0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000FD84(v9, (uint64_t)qword_1003A9A48);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      id v15 = (id)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 136446210;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v13 = String.init<A>(describing:)();
      sub_1001B3178(v13, v14, (uint64_t *)&v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error temporarily blessing app for playback initialization: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100195D74()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100195DAC()
{
  return sub_100194EE0();
}

uint64_t sub_100195DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100195DC4()
{
  return swift_release();
}

uint64_t sub_100195DCC()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100195E04()
{
  return sub_100194BC0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100195E14()
{
  return _swift_deallocObject(v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for ToneLibraryAgent.PlayRequest(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100195EF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToneLibraryAgent.PlayRequest()
{
  return &type metadata for ToneLibraryAgent.PlayRequest;
}

unsigned char *storeEnumTagSinglePayload for ToneLibraryAgent.ToneType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100195FC4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToneLibraryAgent.ToneType()
{
  return &type metadata for ToneLibraryAgent.ToneType;
}

unint64_t sub_100196000()
{
  unint64_t result = qword_10038ACC8;
  if (!qword_10038ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038ACC8);
  }
  return result;
}

uint64_t ConnectionAssistantRenderer.__allocating_init(style:device:pixelFormat:)(char a1, void *a2, uint64_t a3)
{
  char v5 = a1 & 1;
  uint64_t v6 = swift_allocObject();
  ConnectionAssistantRenderer.init(style:device:pixelFormat:)(v5, a2, a3);
  return v6;
}

void *ConnectionAssistantRenderer.init(style:device:pixelFormat:)(char a1, void *a2, uint64_t a3)
{
  type metadata accessor for ConnectionAssistantRenderer.Buffers();
  swift_allocObject();
  id v8 = (void *)swift_unknownObjectRetain();
  uint64_t v9 = ConnectionAssistantRenderer.Buffers.init(device:)(v8);
  if (v4)
  {
    swift_unknownObjectRelease();
    type metadata accessor for ConnectionAssistantRenderer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v3[2] = v9;
    uint64_t v10 = qword_10037DF10;
    swift_unknownObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    v27[6] = xmmword_1003A9D00;
    v27[7] = *(_OWORD *)&qword_1003A9D10;
    v27[8] = xmmword_1003A9D20;
    v27[2] = xmmword_1003A9CC0;
    void v27[3] = *(_OWORD *)&dword_1003A9CD0;
    v27[4] = xmmword_1003A9CE0;
    _OWORD v27[5] = xmmword_1003A9CF0;
    v27[0] = static ConnectionAssistantRenderer.RenderPipelines.Constants.default;
    v27[1] = xmmword_1003A9CB0;
    type metadata accessor for ConnectionAssistantRenderer.RenderPipelines();
    swift_allocObject();
    uint64_t v11 = ConnectionAssistantRenderer.RenderPipelines.init(device:constants:pixelFormat:)(a2, (unsigned int *)v27, a3);
    v3[3] = v11;
    uint64_t v12 = v3[2];
    type metadata accessor for ConnectionAssistantStarsRenderer();
    swift_allocObject();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v3[4] = ConnectionAssistantStarsRenderer.init(device:buffers:renderPipelines:)(a2, v12, v11);
    if (a1)
    {
      uint64_t v13 = type metadata accessor for ConnectionAssistantEarthTexturedRenderer();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      unint64_t v14 = ConnectionAssistantEarthTexturedRenderer.init(device:buffers:renderPipelines:)(a2, v12, v11);
      id v15 = &off_100350538;
    }
    else
    {
      uint64_t v13 = type metadata accessor for ConnectionAssistantEarthRenderer();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      unint64_t v14 = ConnectionAssistantEarthRenderer.init(device:buffers:renderPipelines:)(a2, v12, v11);
      id v15 = &off_100359B70;
    }
    uint64_t v25 = v13;
    id v26 = v15;
    *(void *)&long long v24 = v14;
    sub_100009164(&v24, (uint64_t)(v3 + 5));
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v3[10] = sub_100294A98(a2, v12);
    v3[11] = v16;
    v3[12] = v17;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v3[13] = sub_1001FC634(a2, v12, v11);
    v3[14] = v18;
    v3[15] = v19;
    v3[16] = v20;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    v3[17] = sub_10004ABE4(a2, v12);
    v3[18] = v21;
    v3[19] = v22;
    type metadata accessor for ConnectionAssistantSatelliteRenderer();
    swift_allocObject();
    swift_retain();
    swift_retain();
    v3[20] = ConnectionAssistantSatelliteRenderer.init(device:buffers:renderPipelines:)((uint64_t)a2, v12, v11);
  }
  return v3;
}

uint64_t type metadata accessor for ConnectionAssistantRenderer()
{
  return self;
}

void ConnectionAssistantRenderer.render(dt:earth:camera:commandBuffer:renderPassDescriptor:)(float32x4_t *a1, float32x4_t *a2, id a3, void *a4, double a5)
{
  uint64_t v6 = v5;
  char v149 = 1;
  char v148 = 1;
  uint64_t v112 = 2000;
  long long v113 = 0u;
  long long v114 = 0u;
  long long v115 = 0u;
  uint64_t v116 = 0;
  char v117 = 1;
  uint64_t v119 = 0;
  uint64_t v118 = 0;
  char v120 = 1;
  long long v121 = xmmword_1002B61A0;
  float32x4_t v64 = a1[2];
  __n128 v65 = *(__n128 *)a1;
  id v12 = [a3 computeCommandEncoder];
  if (v12)
  {
    uint64_t v13 = v12;
    ConnectionAssistantStarsRenderer.compute(dt:stars:computeCommandEncoder:)((uint64_t)&v112, v12, a5);
    sub_10000D544((uint64_t)&a1[10], (uint64_t)v77, &qword_100387320);
    sub_10000D544((uint64_t)v77, (uint64_t)v122, &qword_100387320);
    if ((v126 & 1) == 0)
    {
      uint64_t v14 = v122[1];
      uint64_t v15 = v122[0];
      float32x4_t v16 = vmulq_f32(v123, v123);
      LODWORD(v17) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).u32[0];
      float32x2_t v18 = vrsqrte_f32((float32x2_t)LODWORD(v17));
      float32x2_t v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)LODWORD(v17), vmul_f32(v18, v18)));
      float32x4_t v58 = vmulq_n_f32(v123, vmul_f32(v19, vrsqrts_f32((float32x2_t)LODWORD(v17), vmul_f32(v19, v19))).f32[0]);
      float32x4_t v61 = v125;
      uint64_t v20 = COERCE_UNSIGNED_INT(atan2f(v124, sqrtf(v17))) | 0x3B03126F00000000;
      __asm { FMOV            V0.4S, #1.0 }
      v26.i64[0] = 0x3F0000003F000000;
      v26.i64[1] = 0x3F0000003F000000;
      LOBYTE(v138) = 0;
      LOBYTE(v127[0]) = 0;
      v104[0] = 100;
      v104[2] = v15;
      v104[3] = v14;
      float32x4_t v105 = v58;
      uint64_t v106 = v20;
      long long v107 = xmmword_1002BA060;
      char v108 = 0;
      float32x4_t v109 = vmlaq_f32(v61, v26, vsubq_f32(_Q0, v61));
      char v110 = 0;
      long long v111 = xmmword_1002BA070;
      ConnectionAssistantStarsRenderer.compute(dt:stars:computeCommandEncoder:)((uint64_t)v104, v13, a5);
    }
    sub_10000D544((uint64_t)&a1[23], (uint64_t)v76, &qword_10037E5B8);
    sub_10000D544((uint64_t)v76, (uint64_t)v127, &qword_10037E5B8);
    if (sub_1000FC340((uint64_t)v127) != 1)
    {
      long long v100 = v127[6];
      long long v101 = v127[7];
      long long v102 = v127[8];
      __int16 v103 = v128;
      long long v96 = v127[2];
      long long v97 = v127[3];
      long long v98 = v127[4];
      long long v99 = v127[5];
      long long v94 = v127[0];
      long long v95 = v127[1];
      ConnectionAssistantSatellite.cone(camera:earth:)(a2, (uint64_t)a1, (uint64_t)v66);
      sub_10000D544((uint64_t)v66, (uint64_t)v67, &qword_100387320);
      if ((v71 & 1) == 0)
      {
        uint64_t v27 = v67[0];
        uint64_t v28 = v67[1];
        float32x4_t v29 = vmulq_f32(v68, v68);
        LODWORD(v30) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v29, 2), vaddq_f32(v29, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.f32, 1))).u32[0];
        float32x2_t v31 = vrsqrte_f32((float32x2_t)LODWORD(v30));
        float32x2_t v32 = vmul_f32(v31, vrsqrts_f32((float32x2_t)LODWORD(v30), vmul_f32(v31, v31)));
        float32x4_t v59 = vmulq_n_f32(v68, vmul_f32(v32, vrsqrts_f32((float32x2_t)LODWORD(v30), vmul_f32(v32, v32))).f32[0]);
        float32x4_t v62 = v70;
        uint64_t v33 = COERCE_UNSIGNED_INT(atan2f(v69, sqrtf(v30))) | 0x3B03126F00000000;
        __asm { FMOV            V0.4S, #1.0 }
        v35.i64[0] = 0x3F0000003F000000;
        v35.i64[1] = 0x3F0000003F000000;
        LOBYTE(v138) = 0;
        v72[0] = 0;
        v86[0] = 100;
        v86[2] = v27;
        v86[3] = v28;
        float32x4_t v87 = v59;
        uint64_t v88 = v33;
        long long v89 = xmmword_1002BA060;
        char v90 = 0;
        float32x4_t v91 = vmlaq_f32(v62, v35, vsubq_f32(_Q0, v62));
        char v92 = 0;
        long long v93 = xmmword_1002BA070;
        ConnectionAssistantStarsRenderer.compute(dt:stars:computeCommandEncoder:)((uint64_t)v86, v13, a5);
      }
    }
    [v13 endEncoding];
    swift_unknownObjectRelease();
  }
  id v36 = [a4 colorAttachments];
  id v37 = [v36 objectAtIndexedSubscript:0];

  if (v37)
  {
    id v38 = [v37 texture];

    if (v38)
    {
      id v39 = [a3 renderCommandEncoderWithDescriptor:a4];
      if (v39)
      {
        unint64_t v40 = v39;
        NSString v41 = String._bridgeToObjectiveC()();
        [v40 setLabel:v41];

        uint64_t v42 = a2->i64[0];
        uint64_t v43 = a2->i64[1];
        double v44 = (double)a2->i64[0];
        double v45 = *(double *)a2[1].i64;
        long long v138 = 0uLL;
        *(double *)&long long v139 = v44;
        *((double *)&v139 + 1) = (double)v43;
        long long v140 = xmmword_1002B7260;
        [v40 setViewport:&v138];
        [v40 setCullMode:0];
        uint64_t v46 = *(void **)(*(void *)(v6 + 16) + 32);
        float v47 = 1.0;
        LODWORD(v48) = 1.0;
        if (v42)
        {
          LODWORD(v48) = 1.0;
          if (v43)
          {
            float v49 = (float)v42 / (float)v43;
            float v47 = fminf(v49, 1.0);
            *(float *)&uint64_t v48 = fmaxf(v49, 1.0);
          }
        }
        *((float *)&v48 + 1) = 1.0 / v47;
        uint64_t v63 = v48;
        float v50 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(v42, v43, v45);
        simd_float4 v57 = matrix_identity_float4x4.columns[1];
        simd_float4 v60 = matrix_identity_float4x4.columns[0];
        simd_float4 v55 = matrix_identity_float4x4.columns[3];
        simd_float4 v56 = matrix_identity_float4x4.columns[2];
        char v51 = (simd_float4 *)[(id)swift_unknownObjectRetain_n() contents];
        id v52 = v46;
        v51->i64[0] = v63;
        v51->f32[2] = v50;
        v51[1] = v60;
        v51[2] = v57;
        void v51[3] = v56;
        v51[4] = v55;
        swift_unknownObjectRelease();
        sub_1000243EC((uint64_t)a2, v40, v65, 1.0);
        uint64_t v53 = *(void *)(v6 + 64);
        uint64_t v54 = *(void *)(v6 + 72);
        sub_100008F88((void *)(v6 + 40), v53);
        (*(void (**)(float32x4_t *, float32x4_t *, void *, uint64_t, uint64_t))(v54 + 8))(a1, a2, v40, v53, v54);
        sub_10000D544((uint64_t)&a1[10], (uint64_t)v75, &qword_100387320);
        sub_10000D544((uint64_t)v75, (uint64_t)v129, &qword_100387320);
        if ((v131 & 1) == 0)
        {
          v84[4] = v129[4];
          v84[5] = v129[5];
          v84[6] = v129[6];
          char v85 = v130;
          v84[0] = v129[0];
          v84[1] = v129[1];
          v84[2] = v129[2];
          uint64_t v84[3] = v129[3];
          ConnectionAssistantConeRenderer.render(cone:parameters:camera:destination:renderCommandEncoder:)((uint64_t)v84, (uint64_t)a2, v38, v40, *(void *)(v6 + 104), *(void *)(v6 + 112), *(void **)(v6 + 120), v65, v64);
        }
        sub_10000D544((uint64_t)&a1[5], (uint64_t)v74, &qword_10037FA80);
        sub_10000D544((uint64_t)v74, (uint64_t)v132, &qword_10037FA80);
        if ((v134 & 1) == 0)
        {
          v82[2] = v132[2];
          uint64_t v82[3] = v132[3];
          int v83 = v133;
          v82[1] = v132[1];
          v82[0] = v132[0];
          ConnectionAssistantLocationDotRenderer.render(dot:parameters:camera:destination:renderCommandEncoder:)((uint64_t)v82, (float32x2_t *)a2, v38, v40, *(void *)(v6 + 80), v65, *(void *)(v6 + 88), *(void **)(v6 + 96));
        }
        sub_10000D544((uint64_t)&a1[18], (uint64_t)v73, &qword_100387328);
        sub_10000D544((uint64_t)v73, (uint64_t)v135, &qword_100387328);
        if ((v137 & 1) == 0)
        {
          v80[2] = v135[2];
          v80[3] = v135[3];
          int v81 = v136;
          v80[1] = v135[1];
          v80[0] = v135[0];
          ConnectionAssistantArrowRenderer.render(arrow:earthCenter:camera:destination:renderCommandEncoder:)((uint64_t)v80, (float32x2_t *)a2, v38, v40, *(void *)(v6 + 136), (float32x4_t)v65, *(void *)(v6 + 144), *(void **)(v6 + 152));
        }
        sub_10000D544((uint64_t)&a1[23], (uint64_t)v72, &qword_10037E5B8);
        sub_10000D544((uint64_t)v72, (uint64_t)&v138, &qword_10037E5B8);
        if (sub_1000FC340((uint64_t)&v138) != 1)
        {
          v78[6] = v144;
          v78[7] = v145;
          v78[8] = v146;
          __int16 v79 = v147;
          _OWORD v78[2] = v140;
          v78[3] = v141;
          v78[4] = v142;
          v78[5] = v143;
          v78[0] = v138;
          v78[1] = v139;
          ConnectionAssistantSatelliteRenderer.render(satellite:earth:camera:destination:renderCommandEncoder:)((uint64_t)v78, (uint64_t)a1, (uint64_t)a2, v38, v40);
        }
        [v40 endEncoding:*(_OWORD *)&v55, *(_OWORD *)&v56, *(_OWORD *)&v57];
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t ConnectionAssistantRenderer.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ConnectionAssistantRenderer.__deallocating_deinit()
{
  ConnectionAssistantRenderer.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_100196EBC()
{
  unint64_t result = qword_10038ACD0;
  if (!qword_10038ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038ACD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConnectionAssistantRenderer.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100196FDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRenderer.Style()
{
  return &type metadata for ConnectionAssistantRenderer.Style;
}

uint64_t sub_100197014(void *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 objectForKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10004A864(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_100004010(&qword_10038D290);
  if (((v9 != 2) & swift_dynamicCast()) != 0) {
    return v9;
  }
  else {
    return a4;
  }
}

void sub_1001970EC(char a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v2 = *(void *)(v1 + 16);
  if (a1 == 2)
  {
    unsigned int v4 = *(void **)v1;
    swift_bridgeObjectRetain();
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 removeObjectForKey:v5];

    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9958);
    swift_bridgeObjectRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)id v8 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001B3178(v3, v2, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "UserDefaults: %{public}s removed", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    long long v9 = *(void **)v1;
    LOBYTE(v19) = a1 & 1;
    swift_bridgeObjectRetain();
    uint64_t v10 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    NSString v11 = String._bridgeToObjectiveC()();
    [v9 setObject:v10 forKey:v11];
    swift_unknownObjectRelease();

    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000FD84(v12, (uint64_t)qword_1003A9958);
    swift_bridgeObjectRetain();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446466;
      swift_bridgeObjectRetain();
      sub_1001B3178(v3, v2, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v16 = String.init<A>(describing:)();
      sub_1001B3178(v16, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "UserDefaults: %{public}s = %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1001974FC(uint64_t a1, uint64_t *a2, const char *a3)
{
  id v39 = a3;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004010(&qword_100380788);
  uint64_t v10 = __chkstk_darwin(v38);
  uint64_t v37 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v41 = (uint64_t)&v36 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = sub_100004010(&qword_10038B3D0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a2;
  uint64_t v42 = v3;
  uint64_t v21 = v3 + v20;
  swift_beginAccess();
  uint64_t v22 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_10000D2A0(v21, (uint64_t)v19, &qword_100380788);
  uint64_t v40 = a1;
  sub_10000D2A0(a1, v22, &qword_100380788);
  os_log_type_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v23((uint64_t)v19, 1, v6) == 1)
  {
    if (v23(v22, 1, v6) == 1)
    {
      sub_10000950C((uint64_t)v19, &qword_100380788);
      return;
    }
  }
  else
  {
    sub_10000D2A0((uint64_t)v19, (uint64_t)v15, &qword_100380788);
    if (v23(v22, 1, v6) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v22, v6);
      sub_1001B5920(&qword_10038B3D8, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
      char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      float32x4_t v35 = *(void (**)(char *, uint64_t))(v7 + 8);
      v35(v9, v6);
      v35(v15, v6);
      sub_10000950C((uint64_t)v19, &qword_100380788);
      if (v34) {
        return;
      }
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  sub_10000950C((uint64_t)v19, &qword_10038B3D0);
LABEL_7:
  if (qword_10037DDB8 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_10000FD84(v24, (uint64_t)qword_1003A9A00);
  uint64_t v25 = v41;
  sub_10000D2A0(v40, v41, &qword_100380788);
  swift_retain_n();
  float32x4_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v44 = v40;
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v29 = v37;
    sub_10000D2A0(v25, v37, &qword_100380788);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v43 = sub_1001B3178(v30, v31, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C(v25, &qword_100380788);
    *(_WORD *)(v28 + 12) = 2082;
    sub_10000D2A0(v21, v29, &qword_100380788);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t v43 = sub_1001B3178(v32, v33, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, v39, (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000950C(v25, &qword_100380788);

    swift_release_n();
  }
}

uint64_t sub_100197A78()
{
  uint64_t v138 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  long long v135 = (char *)&v124 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for DispatchQoS();
  uint64_t v134 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  int v133 = (char *)&v124 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v147 = *(void *)(v2 - 8);
  uint64_t v148 = v2;
  __chkstk_darwin(v2);
  unsigned int v4 = (uint64_t *)((char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  NSString v5 = (ClassDescriptor **)type metadata accessor for DispatchTime();
  uint64_t v132 = (uint64_t)*(v5 - 1);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = ((char *)&v124 - v10);
  uint64_t v12 = __chkstk_darwin(v9);
  char v130 = (char *)&v124 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  char v131 = (char *)&v124 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v124 - v16;
  if (qword_10037DD80 != -1) {
LABEL_50:
  }
    swift_once();
  long long v146 = v4;
  int v129 = v8;
  long long v140 = v11;
  long long v143 = v5;
  long long v139 = (uint64_t *)type metadata accessor for Logger();
  uint64_t v151 = sub_10000FD84((uint64_t)v139, (uint64_t)qword_1003A9958);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "SOSBuddyEnvironment start", v20, 2u);
    swift_slowDealloc();
  }

  long long v141 = (uint8_t *)v17;
  static DispatchTime.now()();
  type metadata accessor for LockScreenViewController();
  uint64_t v21 = v149;
  sub_100095A84((uint64_t)v149);
  uint64_t v22 = v21[27];
  uint64_t v8 = (char *)v21[28];
  long long v145 = v21 + 24;
  uint64_t v11 = sub_100008F88(v21 + 24, v22);
  (*((void (**)(void *, _UNKNOWN **, uint64_t, char *))v8 + 6))(v21, &off_10035BB98, v22, v8);
  uint64_t v142 = v21[36];
  *(void *)(v142 + 112) = &off_10035BBE8;
  swift_unknownObjectWeakAssign();
  uint64_t v23 = v21[33];
  long long v144 = v21 + 30;
  *(void *)(*sub_100008F88(v21 + 30, v23) + 64) = &off_10035BC20;
  swift_unknownObjectWeakAssign();
  uint64_t v17 = 0;
  NSString v5 = &off_100349000;
  *(void *)&long long v24 = 136315650;
  long long v150 = v24;
  do
  {
    if ((unint64_t)v17 >= 3)
    {
      __break(1u);
      goto LABEL_50;
    }
    char v25 = *((unsigned char *)&off_100349C60 + (void)v17 + 32);
    uint64_t v11 = Logger.logObject.getter();
    unsigned int v4 = (uint64_t *)static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, (os_log_type_t)v4))
    {
      uint64_t v8 = (char *)swift_slowAlloc();
      uint64_t v152 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = v150;
      uint64_t v26 = StaticString.description.getter();
      *(void *)(v8 + 4) = sub_1001B3178(v26, v27, &v152);
      swift_bridgeObjectRelease();
      *((_WORD *)v8 + 6) = 2080;
      uint64_t v28 = StaticString.description.getter();
      *(void *)(v8 + 14) = sub_1001B3178(v28, v29, &v152);
      swift_bridgeObjectRelease();
      *((_WORD *)v8 + 11) = 1024;
      uint64_t v154 = &type metadata for UIFeatureFlags;
      unint64_t v155 = sub_1001B6408();
      LOBYTE(aBlock[0]) = v25;
      char v30 = isFeatureEnabled(_:)();
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)aBlock);
      *((_DWORD *)v8 + 6) = v30 & 1;
      _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v4, "Feature flag: (%s-%s) -> %{BOOL}d", (uint8_t *)v8, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    ++v17;
  }
  while (v17 != (char *)3);
  uint64_t v31 = (uint64_t)v149;
  uint64_t v32 = v149[4];
  uint64_t v154 = &type metadata for UIFeatureFlags;
  unint64_t v155 = sub_1001B6408();
  LOBYTE(aBlock[0]) = 1;
  char v33 = isFeatureEnabled(_:)();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)aBlock);
  char v34 = v146;
  if (v33)
  {
    uint64_t v35 = *(void *)(v31 + 296);
    uint64_t v36 = *(void *)(v35 + 64);
    uint64_t v37 = *(void *)(v35 + 72);
    unsigned int v38 = *(unsigned __int8 *)(v35 + 80);
    id v39 = *(id *)(v35 + 56);
    swift_bridgeObjectRetain();
    char v40 = sub_100197014(v39, v36, v37, v38);
    swift_bridgeObjectRelease();

    if (v40 == 2) {
      char v41 = 1;
    }
    else {
      char v41 = v40 & 1;
    }
  }
  else
  {
    char v41 = 0;
  }
  *(unsigned char *)(v32 + 40) = v41;
  uint64_t v42 = v149;
  sub_1001A1F00();
  uint64_t v43 = v42[27];
  uint64_t v44 = v42[28];
  sub_100008F88(v145, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 56))(v43, v44);
  sub_10002B13C();
  sub_100008F88(v144, v42[33]);
  sub_1001E1228();
  double v45 = (void *)v42[17];
  sub_100082E98();
  sub_100141498();
  uint64_t v46 = sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *char v34 = static OS_dispatch_queue.main.getter();
  uint64_t v48 = v147;
  uint64_t v47 = v148;
  float v49 = *(void (**)(uint64_t *))(v147 + 104);
  LODWORD(v150) = enum case for DispatchPredicate.onQueue(_:);
  v49(v34);
  LOBYTE(v43) = _dispatchPreconditionTest(_:)();
  id v52 = *(void (**)(uint64_t *, uint64_t))(v48 + 8);
  uint64_t v50 = v48 + 8;
  uint64_t v51 = (uint64_t)v52;
  v52(v34, v47);
  if ((v43 & 1) == 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v127 = v45;
  uint64_t v53 = v50;
  uint64_t v54 = v42[39];
  __int16 v128 = (void (*)(uint64_t *))v42[19];
  uint64_t v142 = v46;
  uint64_t v55 = static OS_dispatch_queue.main.getter();
  uint64_t v56 = v148;
  *char v34 = v55;
  ((void (*)(uint64_t *, void, uint64_t))v49)(v34, v150, v56);
  char v57 = _dispatchPreconditionTest(_:)();
  uint64_t v147 = v53;
  ((void (*)(uint64_t *, uint64_t))v51)(v34, v56);
  if ((v57 & 1) == 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  float32x4_t v125 = (void (*)(uint64_t *, uint64_t))v51;
  char v126 = v49;
  float v49 = v128;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(v54 + 24) = 1;
  float32x4_t v58 = (void *)v42[6];
  uint64_t v59 = v58[7];
  uint64_t v60 = v58[8];
  swift_retain();
  swift_retain();
  sub_10004AEBC(v59, v60);
  swift_release();
  swift_release();
  char v61 = sub_100256994();
  char v34 = v139;
  uint64_t v51 = (uint64_t)v42;
  if ((v61 & 1) == 0)
  {
    float32x4_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v62, v63))
    {
      float32x4_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)float32x4_t v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed to start ApplicationActiveStateSource", v64, 2u);
      swift_slowDealloc();
    }
  }
  if (sub_10001F1D8()) {
    goto LABEL_25;
  }
  if (qword_10037DE28 != -1) {
    goto LABEL_55;
  }
  while (1)
  {
    sub_10000FD84((uint64_t)v34, (uint64_t)qword_1003A9B50);
    __n128 v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Failed to start source", v67, 2u);
      swift_slowDealloc();
    }

LABEL_25:
    sub_100214024();
    float32x4_t v68 = *(void **)(v51 + 56);
    uint64_t v69 = v58[13];
    uint64_t v70 = *(void *)(v69 + 48);
    uint64_t v71 = *(void *)(v69 + 56);
    swift_bridgeObjectRetain();
    sub_1001B4174(v70, v71, v51, v68);
    swift_bridgeObjectRelease();
    uint64_t v72 = *(void **)(v51 + 88);
    uint64_t v73 = v58[13];
    uint64_t v74 = *(void *)(v73 + 48);
    uint64_t v75 = *(void *)(v73 + 56);
    swift_bridgeObjectRetain();
    sub_1001B42EC(v74, v75, v51, (uint64_t)v49, v51, v72);
    swift_bridgeObjectRelease();
    if ((sub_100069910() & 1) == 0)
    {
      if (qword_10037DDE8 != -1) {
        swift_once();
      }
      sub_10000FD84((uint64_t)v34, (uint64_t)qword_1003A9A90);
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v78 = 0;
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Failed to start source", v78, 2u);
        swift_slowDealloc();
      }
    }
    __int16 v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v79, v80))
    {
      int v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "FindMyAgent start", v81, 2u);
      swift_slowDealloc();
    }

    if (qword_10037DDF0 != -1) {
LABEL_53:
    }
      swift_once();
    float32x4_t v58 = (void *)sub_10000FD84((uint64_t)v34, (uint64_t)qword_1003A9AA8);
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "MessagesAgent start", v84, 2u);
      swift_slowDealloc();
    }

    char v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v85, v86))
    {
      float32x4_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)float32x4_t v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "SettingsAgent start", v87, 2u);
      swift_slowDealloc();
    }

    uint64_t v88 = static OS_dispatch_queue.main.getter();
    long long v89 = v146;
    *long long v146 = v88;
    uint64_t v90 = v148;
    ((void (*)(uint64_t *, void, uint64_t))v126)(v89, v150, v148);
    char v91 = _dispatchPreconditionTest(_:)();
    v125(v89, v90);
    if (v91) {
      break;
    }
    __break(1u);
LABEL_55:
    swift_once();
  }
  sub_10008B414();
  sub_1000251C8();
  sub_10008D974();
  sub_100018D2C();
  sub_100008F88(v144, *(void *)(v51 + 264));
  sub_1001E1B9C();
  uint64_t v92 = *(void *)(v51 + 216);
  uint64_t v93 = *(void *)(v51 + 224);
  sub_100008F88(v145, v92);
  uint64_t v95 = v127[9];
  uint64_t v94 = v127[10];
  sub_100008F88(v127 + 6, v95);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v94 + 8))(aBlock, v95, v94);
  long long v96 = sub_100008F88(aBlock, (uint64_t)v154);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(v93 + 72))(v51, v92, v93, *(double *)(*v96 + 16), *(double *)(*v96 + 24));
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)aBlock);
  uint64_t v97 = *(void *)(v51 + 184);
  long long v98 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v98, v99))
  {
    long long v100 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v100 = 0;
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "TelephonyUtilitiesAgent start", v100, 2u);
    swift_slowDealloc();
  }

  *(void *)(v97 + 24) = 0;
  *(void *)(v97 + 32) = 0;
  swift_bridgeObjectRelease();
  sub_100276B24(1);
  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  uint64_t v101 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000019, 0x80000001002D1B00);
  char v149 = (void *)static OS_dispatch_queue.main.getter();
  long long v102 = v130;
  static DispatchTime.now()();
  __int16 v103 = v131;
  + infix(_:_:)();
  uint64_t v104 = v132;
  *(void *)&long long v150 = *(void *)(v132 + 8);
  ((void (*)(char *, ClassDescriptor **))v150)(v102, v143);
  unint64_t v155 = (unint64_t)sub_1001B645C;
  uint64_t v156 = v101;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  uint64_t v154 = (ValueMetadata *)&unk_10035C408;
  float32x4_t v105 = _Block_copy(aBlock);
  uint64_t v148 = v101;
  swift_retain();
  swift_release();
  uint64_t v106 = v133;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001B5920((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  long long v107 = v135;
  uint64_t v108 = v138;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  float32x4_t v109 = v149;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v105);

  (*(void (**)(char *, uint64_t))(v137 + 8))(v107, v108);
  char v110 = v106;
  long long v111 = (void (*)(char *, ClassDescriptor **))v150;
  (*(void (**)(char *, uint64_t))(v134 + 8))(v110, v136);
  uint64_t v112 = v103;
  long long v113 = v143;
  v111(v112, v143);
  long long v114 = v140;
  long long v115 = v141;
  (*(void (**)(NSObject *, uint8_t *, ClassDescriptor **))(v104 + 16))(v140, v141, v113);
  uint64_t v116 = Logger.logObject.getter();
  os_log_type_t v117 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v116, v117)) {
    goto LABEL_45;
  }
  long long v115 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)long long v115 = 134217984;
  static DispatchTime.now()();
  unint64_t v118 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v118)
  {
    unint64_t v121 = 0;
    goto LABEL_47;
  }
  unint64_t v119 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v120 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v121 = v119 - v120;
  if (v119 >= v120)
  {
LABEL_47:
    unint64_t v122 = v121 / 0xF4240;
    v111(v129, v113);
    v111((char *)v140, v113);
    aBlock[0] = v122;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v116, v117, "SOSBuddyEnvironment started in %llu ms", v115, 0xCu);
    swift_slowDealloc();
    long long v115 = v141;
    goto LABEL_48;
  }
  __break(1u);
LABEL_45:
  v111((char *)v114, v113);
LABEL_48:
  swift_release();

  v111((char *)v115, v113);
  return 1;
}

uint64_t sub_100198CC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (uint64_t *)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v64 - 8);
  uint64_t v7 = __chkstk_darwin(v64);
  char v61 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v69 = (char *)&v61 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v61 - v11;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v67 = v3;
  uint64_t v68 = v2;
  uint64_t v62 = v6;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v70 = sub_10000FD84(v13, (uint64_t)qword_1003A9958);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "SOSBuddyEnvironment stop", v16, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v63 = v12;
  static DispatchTime.now()();
  uint64_t v17 = *(void *)(v1 + 264);
  os_log_type_t v66 = (void *)(v1 + 240);
  *(void *)(*sub_100008F88((void *)(v1 + 240), v17) + 72) = 0;
  swift_release();
  *(void *)(*(void *)(v1 + 288) + 120) = 0;
  swift_release();
  uint64_t v18 = *(void *)(v1 + 216);
  uint64_t v19 = *(void *)(v1 + 224);
  __n128 v65 = (void *)(v1 + 192);
  sub_100008F88((void *)(v1 + 192), v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19);
  swift_beginAccess();
  *(void *)(v1 + 320) = _swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(*(void *)(v1 + 48) + 32);
  if (*(void *)(v20 + 64) && (sub_100078E0C(3, *(void *)(v20 + 88)) & 1) != 0) {
    sub_100274FE8(3, (uint64_t)sub_100275728, 0);
  }
  if (qword_10037DDF0 != -1) {
    swift_once();
  }
  sub_10000FD84(v13, (uint64_t)qword_1003A9AA8);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "TelephonyUtilitiesAgent stop", v23, 2u);
    swift_slowDealloc();
  }

  uint64_t v24 = *(void *)(v1 + 64);
  id v25 = *(id *)(v24 + 32);
  sub_1000BF608();

  *(void *)(v24 + 40) = 0;
  swift_release();
  uint64_t v26 = *(unsigned __int8 *)(v24 + 48);
  if (v26 != 2)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v24 + 48) = 2;
  sub_10001900C(v26);
  uint64_t v27 = *(void *)(v1 + 112);
  id v28 = *(id *)(v27 + 32);
  sub_100017FDC();

  *(void *)(v27 + 40) = 0;
  swift_release();
  sub_1000254FC();
  uint64_t v29 = *(void *)(v1 + 120);
  *(_WORD *)(v29 + 89) = 514;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 91);
  if (v30 != 2)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v29 + 91) = 2;
  sub_100298158(v30);
  sub_100296FE4();
  sub_10002BCD8();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    char v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "SettingsAgent stop", v33, 2u);
    swift_slowDealloc();
  }

  sub_100175558();
  char v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "FindMyAgent stop", v36, 2u);
    swift_slowDealloc();
  }

  sub_100069D58();
  sub_10006B400();
  sub_10028B010();
  sub_1002141F8();
  sub_10001F7A0();
  sub_100256FA8();
  uint64_t v37 = *(void *)(v1 + 216);
  uint64_t v38 = *(void *)(v1 + 224);
  sub_100008F88(v65, v37);
  (*(void (**)(uint64_t, uint64_t))(v38 + 80))(v37, v38);
  sub_100008F88(v66, *(void *)(v1 + 264));
  sub_1001E1EC0();
  uint64_t v39 = *(void *)(v1 + 312);
  os_log_type_t v66 = (void *)sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *NSString v5 = static OS_dispatch_queue.main.getter();
  uint64_t v40 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v41 = v67;
  uint64_t v42 = v68;
  uint64_t v43 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v67 + 104);
  v43(v5, enum case for DispatchPredicate.onQueue(_:), v68);
  char v44 = _dispatchPreconditionTest(_:)();
  double v45 = *(uint64_t (**)(uint64_t *, uint64_t))(v41 + 8);
  uint64_t result = v45(v5, v42);
  if (v44)
  {
    *(unsigned char *)(v39 + 24) = 0;
    *(void *)(v39 + 32) = 0;
    swift_release();
    swift_unknownObjectWeakAssign();
    sub_100276B24(4);
    *NSString v5 = static OS_dispatch_queue.main.getter();
    v43(v5, v40, v42);
    char v47 = _dispatchPreconditionTest(_:)();
    uint64_t result = v45(v5, v42);
    if (v47)
    {
      sub_100141498(result);
      sub_1002048E0();
      type metadata accessor for LockScreenViewController();
      sub_100095A84(0);
      *(_WORD *)(v1 + 336) = 1538;
      swift_beginAccess();
      sub_1001970EC(0);
      swift_endAccess();
      uint64_t v49 = v62;
      uint64_t v48 = v63;
      uint64_t v50 = v69;
      uint64_t v51 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v69, v63, v64);
      id v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 134217984;
        static DispatchTime.now()();
        unint64_t v55 = DispatchTime.uptimeNanoseconds.getter();
        if (DispatchTime.uptimeNanoseconds.getter() >= v55)
        {
          unint64_t v58 = 0;
        }
        else
        {
          unint64_t v56 = DispatchTime.uptimeNanoseconds.getter();
          unint64_t v57 = DispatchTime.uptimeNanoseconds.getter();
          unint64_t v58 = v56 - v57;
          if (v56 < v57)
          {
            __break(1u);
            goto LABEL_26;
          }
        }
        unint64_t v60 = v58;
        uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
        v59(v61, v51);
        v59(v69, v51);
        unint64_t v71 = v60 / 0xF4240;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "SOSBuddyEnvironment stopped in %llu ms", v54, 0xCu);
        swift_slowDealloc();
        goto LABEL_29;
      }
LABEL_26:
      uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
      v59(v50, v51);
LABEL_29:

      return ((uint64_t (*)(char *, uint64_t))v59)(v48, v51);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10019961C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
LABEL_49:
  }
    swift_once();
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_bridgeObjectRetain_n();
  NSString v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v7 = &unk_1002B2000;
  uint64_t v46 = v2;
  if (!os_log_type_enabled(v5, v6))
  {

    swift_bridgeObjectRelease_n();
    if ((a1 & 0xC000000000000001) != 0) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v48 = a1 + 56;
    uint64_t v18 = ~v17;
    uint64_t v19 = -v17;
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v16 = v20 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v14 = v18;
    uint64_t v15 = 0;
    goto LABEL_10;
  }
  uint64_t v8 = (uint8_t *)swift_slowAlloc();
  v52[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v8 = 136446210;
  sub_10001E6FC(0, (unint64_t *)&qword_100380400);
  uint64_t v9 = a1;
  sub_100075D78((unint64_t *)&unk_100380B80, (unint64_t *)&qword_100380400);
  swift_bridgeObjectRetain();
  uint64_t v10 = Set.description.getter();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v10;
  a1 = v9;
  *(void *)&v51[0] = sub_1001B3178(v13, v12, v52);
  uint64_t v7 = (void *)&unk_1002B2000;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  uint64_t v2 = v46;
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleURLContexts: %{public}s]", v8, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if ((v9 & 0xC000000000000001) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  __CocoaSet.makeIterator()();
  sub_10001E6FC(0, (unint64_t *)&qword_100380400);
  sub_100075D78((unint64_t *)&unk_100380B80, (unint64_t *)&qword_100380400);
  Set.Iterator.init(_cocoa:)();
  a1 = v52[0];
  uint64_t v48 = v52[1];
  uint64_t v14 = v52[2];
  uint64_t v15 = v52[3];
  unint64_t v16 = v52[4];
LABEL_10:
  int64_t v47 = (unint64_t)(v14 + 64) >> 6;
  int v45 = v7[209];
  uint64_t v49 = a1;
  while (a1 < 0)
  {
    uint64_t v24 = __CocoaSet.Iterator.next()();
    if (!v24) {
      return sub_100075DBC();
    }
    *(void *)&long long v50 = v24;
    sub_10001E6FC(0, (unint64_t *)&qword_100380400);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v25 = *(id *)&v51[0];
    swift_unknownObjectRelease();
    uint64_t v23 = v15;
    uint64_t v21 = v16;
    if (!v25) {
      return sub_100075DBC();
    }
LABEL_35:
    uint64_t v29 = *(void *)(v2 + 296);
    swift_beginAccess();
    int v30 = *(unsigned __int8 *)(v29 + 48);
    id v31 = *(id *)(v29 + 24);
    swift_bridgeObjectRetain();
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v31 objectForKey:v32];

    if (v33)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10004A864(&v50, v51);
    }
    else
    {
      memset(v51, 0, sizeof(v51));
    }
    sub_100004010(&qword_10038D290);
    if (swift_dynamicCast())
    {
      int v34 = v50;
    }
    else
    {
      int v34 = 2;
      LOBYTE(v50) = 2;
    }
    swift_bridgeObjectRelease();

    if (v34 == 2) {
      int v35 = v30;
    }
    else {
      int v35 = v34;
    }
    if (sub_10016BC10(v35, v25)) {
      goto LABEL_12;
    }
    id v25 = v25;
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v36, v37))
    {

LABEL_12:
      goto LABEL_13;
    }
    uint64_t v38 = swift_slowAlloc();
    *(void *)&v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = v45;
    id v39 = v25;
    id v40 = [v39 description];
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v43 = v42;

    *(void *)(v38 + 4) = sub_1001B3178(v41, v43, (uint64_t *)v51);
    uint64_t v2 = v46;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to handle URL [%{public}s]", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_13:
    uint64_t v15 = v23;
    unint64_t v16 = v21;
    a1 = v49;
  }
  if (v16)
  {
    uint64_t v21 = (v16 - 1) & v16;
    unint64_t v22 = __clz(__rbit64(v16)) | (v15 << 6);
    uint64_t v23 = v15;
    goto LABEL_34;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v26 >= v47) {
    return sub_100075DBC();
  }
  unint64_t v27 = *(void *)(v48 + 8 * v26);
  uint64_t v23 = v15 + 1;
  if (v27) {
    goto LABEL_33;
  }
  uint64_t v23 = v15 + 2;
  if (v15 + 2 >= v47) {
    return sub_100075DBC();
  }
  unint64_t v27 = *(void *)(v48 + 8 * v23);
  if (v27) {
    goto LABEL_33;
  }
  uint64_t v23 = v15 + 3;
  if (v15 + 3 >= v47) {
    return sub_100075DBC();
  }
  unint64_t v27 = *(void *)(v48 + 8 * v23);
  if (v27) {
    goto LABEL_33;
  }
  uint64_t v23 = v15 + 4;
  if (v15 + 4 >= v47) {
    return sub_100075DBC();
  }
  unint64_t v27 = *(void *)(v48 + 8 * v23);
  if (v27)
  {
LABEL_33:
    uint64_t v21 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_34:
    id v25 = *(id *)(*(void *)(a1 + 48) + 8 * v22);
    if (!v25) {
      return sub_100075DBC();
    }
    goto LABEL_35;
  }
  uint64_t v28 = v15 + 5;
  while (v47 != v28)
  {
    unint64_t v27 = *(void *)(v48 + 8 * v28++);
    if (v27)
    {
      uint64_t v23 = v28 - 1;
      goto LABEL_33;
    }
  }
  return sub_100075DBC();
}

uint64_t sub_100199D20(int a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  NSString v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleMainSceneActiveChange: %{BOOL,public}d", v7, 8u);
    swift_slowDealloc();
  }

  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  if v9 == 2 || ((v9 ^ a1))
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v8 + 80) = a1 & 1;
  return sub_100157444(v9);
}

void sub_100199EB0()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "OffTheGrid mode request done", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100199F98(int a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  NSString v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requesting OffTheGrid mode", v7, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for PreventSuspensionAssertion();
  swift_allocObject();
  uint64_t v8 = sub_1000F9434(0xD000000000000011, 0x80000001002C6000, 0xD000000000000021, 0x80000001002D1AD0);
  sub_1000280D0(1, a1, *(void *)(v2 + 128), v8);

  return swift_release();
}

uint64_t sub_10019A0FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - v13;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000FD84(v15, (uint64_t)qword_1003A9958);
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "OffTheGrid mode request done", v18, 2u);
    swift_slowDealloc();
  }

  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v12, v8);
  aBlock[4] = sub_1001B63CC;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  void aBlock[3] = &unk_10035C3E0;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001B5920((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v21 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  return ((uint64_t (*)(char *, uint64_t))v24)(v14, v8);
}

void sub_10019A568(uint64_t a1, void *a2, uint64_t a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, a3);
  swift_retain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = *(void *)(a1 + 16);
    unint64_t v10 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    sub_1001B3178(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Done with '%s'", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_10019A728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a2;
  uint64_t v16 = a1;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B4F0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v18 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B1B0);
  sub_100009B18(&qword_10038B4F8, &qword_10038B1B0);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v17;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = a3;
  sub_100009B18(&qword_10038B500, &qword_10038B4F0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019AA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a2;
  uint64_t v16 = a1;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B4D8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v18 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B1A0);
  sub_100009B18(&qword_10038B4E0, &qword_10038B1A0);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v17;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = a3;
  sub_100009B18(&qword_10038B4E8, &qword_10038B4D8);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019AD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a2;
  uint64_t v16 = a1;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B4C0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v18 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B198);
  sub_100009B18(&qword_10038B4C8, &qword_10038B198);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v17;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = a3;
  sub_100009B18(&qword_10038B4D0, &qword_10038B4C0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019B0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_10038EC60);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18((unint64_t *)&unk_10038EC80, (uint64_t *)&unk_10038EC60);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019B3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B4A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B4A8);
  sub_100009B18(&qword_10038B4B0, &qword_10038B4A8);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B4B8, &qword_10038B4A0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019B714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B480);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100382460);
  sub_100009B18(&qword_10038B488, &qword_100382460);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B490, &qword_10038B480);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019BA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B460);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B468);
  sub_100009B18(&qword_10038B470, &qword_10038B468);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B478, &qword_10038B460);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019BD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B428);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B430);
  sub_100009B18(&qword_10038B438, &qword_10038B430);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B440, &qword_10038B428);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019C0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100393AF0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B418);
  sub_100009B18((unint64_t *)&unk_100393B00, &qword_10038B418);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B420, (uint64_t *)&unk_100393AF0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019C3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B400);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387660);
  sub_100009B18(&qword_10038B408, &qword_100387660);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B410, &qword_10038B400);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019C718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B3E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387668);
  sub_100009B18(&qword_10038B3E8, &qword_100387668);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B3F0, &qword_10038B3E0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019CA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B3B8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387670);
  sub_100009B18(&qword_10038B3C0, &qword_100387670);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B3C8, &qword_10038B3B8);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019CD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B3A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387690);
  sub_100009B18(&qword_10038B3A8, &qword_100387690);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B3B0, &qword_10038B3A0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019D0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B388);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387680);
  sub_100009B18(&qword_10038B390, &qword_100387680);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B398, &qword_10038B388);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019D3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B370);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387688);
  sub_100009B18(&qword_10038B378, &qword_100387688);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B380, &qword_10038B370);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019D71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100393B50);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100387698);
  sub_100009B18(&qword_100393B60, &qword_100387698);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B368, (uint64_t *)&unk_100393B50);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019DA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B350);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100380528);
  sub_100009B18(&qword_10038B358, &qword_100380528);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B360, &qword_10038B350);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019DD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B340);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100383A20);
  sub_100009B18(&qword_10038B348, &qword_100383A20);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18((unint64_t *)&unk_100393C10, &qword_10038B340);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019E0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B328);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(qword_1003807A0);
  sub_100009B18(&qword_10038B330, qword_1003807A0);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B338, &qword_10038B328);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019E3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100393B10);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_1003876A0);
  sub_100009B18((unint64_t *)&unk_100393B20, &qword_1003876A0);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B320, (uint64_t *)&unk_100393B10);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019E720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B308);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E38);
  sub_100009B18(&qword_10038B310, &qword_100389E38);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B318, &qword_10038B308);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019EA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B2F0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E40);
  sub_100009B18(&qword_10038B2F8, &qword_100389E40);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B300, &qword_10038B2F0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019ED88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B2D8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E48);
  sub_100009B18(&qword_10038B2E0, &qword_100389E48);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B2E8, &qword_10038B2D8);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019F0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B2C0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E50);
  sub_100009B18(&qword_10038B2C8, &qword_100389E50);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B2D0, &qword_10038B2C0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019F3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B2A8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E58);
  sub_100009B18(&qword_10038B2B0, &qword_100389E58);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B2B8, &qword_10038B2A8);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019F724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B290);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E60);
  sub_100009B18(&qword_10038B298, &qword_100389E60);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B2A0, &qword_10038B290);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019FA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B278);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E68);
  sub_100009B18(&qword_10038B280, &qword_100389E68);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B288, &qword_10038B278);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10019FD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B260);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389E70);
  sub_100009B18(&qword_10038B268, &qword_100389E70);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B270, &qword_10038B260);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A00C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100393B30);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100385860);
  sub_100009B18((unint64_t *)&unk_100393B40, &qword_100385860);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_100388D30, (uint64_t *)&unk_100393B30);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A03F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B240);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038B248);
  sub_100009B18(&qword_10038B250, &qword_10038B248);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B258, &qword_10038B240);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A0728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B220);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010((uint64_t *)&unk_100393AB0);
  sub_100009B18(&qword_10038B228, (uint64_t *)&unk_100393AB0);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B230, &qword_10038B220);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A0A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010((uint64_t *)&unk_100393AD0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_100389478);
  sub_100009B18((unint64_t *)&unk_100393AE0, &qword_100389478);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B218, (uint64_t *)&unk_100393AD0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A0D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B1F8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_10038A228);
  sub_100009B18(&qword_10038B200, &qword_10038A228);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B208, &qword_10038B1F8);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A10C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v4 = sub_100004010(&qword_1003924A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004010(&qword_10038B1E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  id v20 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100004010(&qword_1003876A8);
  sub_100009B18(&qword_10038B1E8, &qword_1003876A8);
  sub_100075D78((unint64_t *)&qword_100393AC0, (unint64_t *)&qword_100387440);
  Publisher.receive<A>(on:options:)();
  sub_10000950C((uint64_t)v6, &qword_1003924A0);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v15;
  sub_100009B18(&qword_10038B1F0, &qword_10038B1E0);
  swift_retain();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001A13F8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001A146C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_100004010(&qword_100380780);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ConnectionClosed(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(v11 + 112) + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
  swift_beginAccess();
  sub_10000D2A0(v12, (uint64_t)v6, &qword_100380780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000950C((uint64_t)v6, &qword_100380780);
    uint64_t v13 = *(void *)(v11 + 32);
    if (!*(void *)(v13 + 64)) {
      goto LABEL_7;
    }
    int v14 = *(unsigned __int8 *)(v13 + 56);
    if (v14 != 5)
    {
      *a2 = v14;
      uint64_t v15 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
      goto LABEL_11;
    }
    if ((unint64_t)*(unsigned __int8 *)(v13 + 73) << 8 == 512)
    {
      *a2 = (*(void *)(v13 + 120) & 1) == 0;
      uint64_t v15 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    }
    else
    {
LABEL_7:
      char v16 = sub_1001AAF50();
      if (v16 != 2) {
        *a2 = v16;
      }
      uint64_t v15 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    }
  }
  else
  {
    sub_10002D1E8((uint64_t)v6, (uint64_t)v10);
    sub_10002D1E8((uint64_t)v10, (uint64_t)a2);
    uint64_t v15 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
}

uint64_t sub_1001A1714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100380780);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ConnectionClosed(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(*(void *)(a1 + 32) + 40) != 1)
  {
    sub_1001A146C(a2, a3);
    return swift_release();
  }
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(v16 + 112) + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
  swift_beginAccess();
  sub_10000D2A0(v17, (uint64_t)v11, &qword_100380780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000950C((uint64_t)v11, &qword_100380780);
    goto LABEL_9;
  }
  sub_10002D1E8((uint64_t)v11, (uint64_t)v15);
  Swift::Int v19 = sub_10026554C((uint64_t)&off_10034B8F0);
  Swift::Int v20 = *(void *)&v15[*(int *)(v12 + 24)];
  swift_bridgeObjectRetain();
  char v21 = sub_1001A1CAC(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    if (!*v15)
    {
      Swift::Int v38 = sub_10026554C((uint64_t)&off_10034B940);
      char v39 = sub_10020D19C(v20, v38);
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0) {
        goto LABEL_8;
      }
      swift_retain();
      sub_10020CBFC((uint64_t)v8);
      swift_release();
      uint64_t v40 = type metadata accessor for TransmissionProgress(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v8, 1, v40) == 1)
      {
        sub_10000950C((uint64_t)v8, &qword_10037F158);
        goto LABEL_8;
      }
      int v41 = v8[*(int *)(v40 + 32)];
      sub_10000CFFC((uint64_t)v8, type metadata accessor for TransmissionProgress);
      if (v41 != 3) {
        goto LABEL_8;
      }
    }
    sub_10002D1E8((uint64_t)v15, (uint64_t)a3);
    uint64_t v31 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    goto LABEL_36;
  }
LABEL_8:
  sub_10000CFFC((uint64_t)v15, type metadata accessor for ConnectionClosed);
LABEL_9:
  unint64_t v22 = *(void **)(v16 + 32);
  if (!v22[8])
  {
    char v32 = sub_1001AAF50();
    if (v32 == 2)
    {
      sub_10026554C((uint64_t)&off_10034B918);
      goto LABEL_24;
    }
LABEL_35:
    *a3 = v32;
    uint64_t v31 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    goto LABEL_36;
  }
  uint64_t v23 = v22[11];
  uint64_t v24 = v22[15];
  uint64_t v25 = v22[9];
  uint64_t v26 = v22[7];
  int v27 = v26;
  if (v26 != 5 && v26 != 0)
  {
    int v29 = *(unsigned __int8 *)(a1 + 337);
    if (v29 != v27 || (v29 - 7) > 0xFFFFFFFD)
    {
      *a3 = v27;
      uint64_t v31 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
LABEL_36:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a3, 0, 1, v31);
      return swift_release();
    }
  }
  if ((v25 & 0xFF00) == 0x200)
  {
    *a3 = (v24 & 1) == 0;
    uint64_t v31 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
    goto LABEL_36;
  }
  char v32 = sub_1001AAF50();
  if (v32 != 2) {
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  Swift::Int v36 = sub_10026554C((uint64_t)&off_10034B918);
  if (v23)
  {
    char v37 = sub_10020D19C(v23, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37)
    {
LABEL_34:
      uint64_t v31 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
      goto LABEL_36;
    }
    goto LABEL_25;
  }
LABEL_24:
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v33 = *(void *)(v16 + 32);
  if (*(void *)(v33 + 64))
  {
    uint64_t v34 = *(void *)(v33 + 88);
    if (*(void *)(v34 + 16))
    {
      if ((sub_100078E0C(3, v34) & 1) == 0) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v35 = type metadata accessor for ConnectionAssitantBannerMode.Mode();
  (*(void (**)(BOOL *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a3, 1, 1, v35);
  return swift_release();
}

Swift::Int sub_1001A1CAC(Swift::Int result, Swift::Int a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    Swift::Int v5 = result;
  }
  else {
    Swift::Int v5 = a2;
  }
  if (v2 >= v3) {
    Swift::Int v6 = a2;
  }
  else {
    Swift::Int v6 = result;
  }
  Swift::Int v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v24 = (unint64_t)(63 - v8) >> 6;
  Swift::Int v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v4;
      if (!v10) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v14);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v18);
        uint64_t result = Hasher._finalize()();
        uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v20 = result & ~v19;
        if ((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
        {
          uint64_t v21 = *(void *)(v6 + 48);
          if (*(unsigned __int8 *)(v21 + v20) == v18)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v23 = 0;
LABEL_35:
            sub_100075DBC();
            return v23;
          }
          uint64_t v22 = ~v19;
          while (1)
          {
            unint64_t v20 = (v20 + 1) & v22;
            if (((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v21 + v20) == v18) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v12 + 2;
      if (v12 + 2 >= v24) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v12 + 3;
        if (v12 + 3 >= v24) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v4);
        if (!v16)
        {
          int64_t v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v23 = 1;
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v17);
          int64_t v4 = v12 + 4;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1001A1F00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004010(&qword_10038B198);
  uint64_t v132 = *(void *)(v2 - 8);
  uint64_t v133 = v2;
  __chkstk_darwin(v2);
  char v131 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004010(&qword_10038B1A0);
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  __chkstk_darwin(v4);
  __int16 v128 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004010(&qword_10038B1A8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004010(&qword_10038B1B0);
  uint64_t v135 = *(void *)(v10 - 8);
  uint64_t v136 = v10;
  __chkstk_darwin(v10);
  uint64_t v134 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = v0[3];
  uint64_t v143 = *(void *)(v137 + 40);
  swift_retain();
  uint64_t v127 = sub_100004010(&qword_100389478);
  float32x4_t v125 = &protocol conformance descriptor for PassthroughSubject<A, B>;
  sub_100009B18((unint64_t *)&unk_100393AE0, &qword_100389478);
  Publisher.map<A>(_:)();
  swift_release();
  sub_100009B18(&qword_10038B1B8, &qword_10038B1A8);
  uint64_t v12 = Publisher.eraseToAnyPublisher()();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  uint64_t v126 = v1[4];
  uint64_t v142 = *(void *)(v126 + 32);
  uint64_t v143 = v12;
  swift_retain();
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v14 = Publisher.eraseToAnyPublisher()();
  v13(v9, v6);
  uint64_t v15 = v1[6];
  uint64_t v141 = *(void *)(*(void *)(v15 + 32) + 24);
  uint64_t v142 = v14;
  sub_100004010(&qword_100393AA0);
  sub_100009B18((unint64_t *)&qword_10038EC70, &qword_100393AA0);
  uint64_t v141 = Publisher.eraseToAnyPublisher()();
  sub_100004010(&qword_10038B1C0);
  sub_100009B18(&qword_10038B1C8, &qword_10038B1C0);
  uint64_t v16 = (uint64_t)v134;
  Publishers.Merge3.init(_:_:_:)();
  sub_10019A728(v16, (uint64_t)sub_1001A36AC, 0);
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v16, v136);
  uint64_t v143 = *(void *)(v126 + 24);
  uint64_t v17 = Publisher.eraseToAnyPublisher()();
  uint64_t v142 = *(void *)(*(void *)(v15 + 112) + 24);
  uint64_t v143 = v17;
  uint64_t v18 = Publisher.eraseToAnyPublisher()();
  uint64_t v19 = v1[7];
  uint64_t v141 = *(void *)(v19 + 24);
  uint64_t v142 = v18;
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  uint64_t v21 = v1[11];
  uint64_t v140 = *(void *)(v21 + 24);
  uint64_t v141 = v20;
  uint64_t v22 = Publisher.eraseToAnyPublisher()();
  uint64_t v23 = *(void *)(v15 + 32);
  uint64_t v24 = v15;
  uint64_t v127 = v15;
  uint64_t v139 = *(void *)(v23 + 24);
  uint64_t v140 = v22;
  uint64_t v25 = Publisher.eraseToAnyPublisher()();
  uint64_t v134 = (char *)v1[10];
  uint64_t v138 = *((void *)v134 + 3);
  uint64_t v139 = v25;
  uint64_t v138 = Publisher.eraseToAnyPublisher()();
  uint64_t v26 = (uint64_t)v128;
  Publishers.Merge6.init(_:_:_:_:_:_:)();
  sub_10019AA54(v26, (uint64_t)sub_1001A38A4, 0);
  (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v26, v130);
  uint64_t v143 = *(void *)(*(void *)(v24 + 112) + 24);
  uint64_t v27 = Publisher.eraseToAnyPublisher()();
  uint64_t v142 = *(void *)(v19 + 24);
  uint64_t v143 = v27;
  uint64_t v28 = Publisher.eraseToAnyPublisher()();
  uint64_t v141 = *(void *)(v21 + 24);
  uint64_t v142 = v28;
  uint64_t v29 = Publisher.eraseToAnyPublisher()();
  uint64_t v140 = *(void *)(v1[12] + 24);
  uint64_t v141 = v29;
  uint64_t v30 = Publisher.eraseToAnyPublisher()();
  uint64_t v139 = *(void *)(v1[15] + 24);
  uint64_t v140 = v30;
  uint64_t v139 = Publisher.eraseToAnyPublisher()();
  uint64_t v31 = (uint64_t)v131;
  Publishers.Merge5.init(_:_:_:_:_:)();
  sub_10019AD80(v31, (uint64_t)sub_1001A39E8, 0);
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v31, v133);
  uint64_t v135 = v19;
  uint64_t v32 = swift_retain();
  sub_10019B0AC(v32, (uint64_t)sub_1001A3A0C, 0);
  swift_release();
  uint64_t v33 = swift_retain();
  sub_10019B3E0(v33, (uint64_t)sub_1001A3BA8, 0);
  swift_release();
  uint64_t v136 = v21;
  uint64_t v34 = swift_retain();
  sub_10019B0AC(v34, (uint64_t)sub_1001A3D68, 0);
  swift_release();
  uint64_t v35 = swift_retain();
  sub_10019B714(v35, (uint64_t)sub_1001A3DCC, 0);
  swift_release();
  uint64_t v36 = swift_retain();
  sub_10019B0AC(v36, (uint64_t)sub_1001A3F78, 0);
  swift_release();
  uint64_t v37 = swift_retain();
  sub_10019BA48(v37, (uint64_t)sub_1001A4150, 0);
  swift_release();
  uint64_t v38 = v127;
  uint64_t v39 = swift_retain();
  sub_10019BD7C(v39, (uint64_t)sub_1001A4270, 0);
  swift_release();
  uint64_t v40 = *(void *)(*(void *)(v38 + 112) + 48);
  swift_retain();
  swift_retain();
  sub_10019C0B0(v40, (uint64_t)sub_1001B5F10, (uint64_t)v1);
  swift_release();
  swift_release();
  uint64_t v41 = swift_retain();
  sub_10019B0AC(v41, (uint64_t)sub_1001A4DDC, 0);
  swift_release();
  uint64_t v42 = swift_retain();
  sub_10019B0AC(v42, (uint64_t)sub_1001A4EFC, 0);
  swift_release();
  uint64_t v43 = swift_retain();
  sub_10019B0AC(v43, (uint64_t)sub_1001A4F88, 0);
  swift_release();
  uint64_t v44 = swift_retain();
  sub_10019B0AC(v44, (uint64_t)sub_1001A5138, 0);
  swift_release();
  uint64_t v45 = swift_retain();
  sub_10019B0AC(v45, (uint64_t)sub_1001A51E8, 0);
  swift_release();
  uint64_t v46 = swift_retain();
  sub_10019B0AC(v46, (uint64_t)sub_1001A524C, 0);
  swift_release();
  uint64_t v47 = swift_retain();
  sub_10019B0AC(v47, (uint64_t)sub_1001A528C, 0);
  swift_release();
  uint64_t v48 = swift_retain();
  sub_10019C3E4(v48, (uint64_t)sub_1001A5508, 0);
  swift_release();
  uint64_t v49 = swift_retain();
  sub_10019B0AC(v49, (uint64_t)sub_1001A5718, 0);
  swift_release();
  swift_retain();
  uint64_t v50 = swift_retain();
  sub_10019C718(v50, (uint64_t)sub_1001B5F18, (uint64_t)v1);
  swift_release();
  swift_release();
  uint64_t v51 = swift_retain();
  sub_10019C3E4(v51, (uint64_t)sub_1001A5EF8, 0);
  swift_release();
  uint64_t v52 = swift_retain();
  sub_10019B0AC(v52, (uint64_t)sub_1001A6A1C, 0);
  swift_release();
  uint64_t v53 = swift_retain();
  sub_10019B0AC(v53, (uint64_t)sub_1001A6A40, 0);
  swift_release();
  uint64_t v54 = swift_retain();
  sub_10019CA4C(v54, (uint64_t)sub_1001A6A44, 0);
  swift_release();
  uint64_t v55 = swift_retain();
  sub_10019B0AC(v55, (uint64_t)sub_1001A6A4C, 0);
  swift_release();
  uint64_t v56 = swift_retain();
  sub_10019CD80(v56, (uint64_t)sub_1001A6C84, 0);
  swift_release();
  uint64_t v57 = swift_retain();
  sub_10019D0B4(v57, (uint64_t)sub_1001A6CB0, 0);
  swift_release();
  uint64_t v58 = swift_retain();
  sub_10019D0B4(v58, (uint64_t)sub_1001A6E3C, 0);
  swift_release();
  uint64_t v59 = swift_retain();
  sub_10019D3E8(v59, (uint64_t)sub_1001A71E8, 0);
  swift_release();
  uint64_t v60 = swift_retain();
  sub_10019D71C(v60, (uint64_t)sub_1001A72F0, 0);
  swift_release();
  uint64_t v61 = swift_retain();
  sub_10019DA50(v61, (uint64_t)sub_1001A7388, 0);
  swift_release();
  uint64_t v62 = swift_retain();
  sub_10019DD84(v62, (uint64_t)sub_1001A75E4, 0);
  swift_release();
  uint64_t v63 = swift_retain();
  sub_10019B0AC(v63, (uint64_t)sub_1001A777C, 0);
  swift_release();
  uint64_t v64 = swift_retain();
  sub_10019B0AC(v64, (uint64_t)sub_1001A7874, 0);
  swift_release();
  uint64_t v65 = swift_retain();
  sub_10019B0AC(v65, (uint64_t)sub_1001A7898, 0);
  swift_release();
  uint64_t v66 = swift_retain();
  sub_10019E0B8(v66, (uint64_t)sub_1001A78D4, 0);
  swift_release();
  uint64_t v67 = swift_retain();
  sub_10019B0AC(v67, (uint64_t)sub_1001A78D8, 0);
  swift_release();
  uint64_t v68 = swift_retain();
  sub_10019E3EC(v68, (uint64_t)sub_1001A7958, 0);
  swift_release();
  uint64_t v69 = swift_retain();
  sub_10019E3EC(v69, (uint64_t)sub_1001A7A58, 0);
  swift_release();
  uint64_t v70 = swift_retain();
  sub_10019E720(v70, (uint64_t)sub_1001A7B58, 0);
  swift_release();
  uint64_t v71 = swift_retain();
  sub_10019EA54(v71, (uint64_t)sub_1001A7B98, 0);
  swift_release();
  uint64_t v72 = swift_retain();
  sub_10019ED88(v72, (uint64_t)sub_1001A7BE0, 0);
  swift_release();
  uint64_t v73 = swift_retain();
  sub_10019F0BC(v73, (uint64_t)sub_1001A7C20, 0);
  swift_release();
  uint64_t v74 = swift_retain();
  sub_10019F3F0(v74, (uint64_t)sub_1001A7C4C, 0);
  swift_release();
  uint64_t v75 = swift_retain();
  sub_10019F724(v75, (uint64_t)sub_1001A7C78, 0);
  swift_release();
  uint64_t v76 = swift_retain();
  sub_10019FA58(v76, (uint64_t)sub_1001A7CA4, 0);
  swift_release();
  uint64_t v77 = swift_retain();
  sub_10019FD8C(v77, (uint64_t)sub_1001A7CE4, 0);
  swift_release();
  uint64_t v78 = swift_retain();
  sub_10019B0AC(v78, (uint64_t)sub_1001A7D1C, 0);
  swift_release();
  uint64_t v79 = swift_retain();
  sub_10019E0B8(v79, (uint64_t)sub_1001A78D4, 0);
  swift_release();
  uint64_t v80 = v1[27];
  uint64_t v81 = v1[28];
  sub_100008F88(v1 + 24, v80);
  uint64_t v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 32))(v80, v81);
  sub_10019E0B8(v82, (uint64_t)sub_1001A78D4, 0);
  swift_release();
  uint64_t v83 = v1[27];
  uint64_t v84 = v1[28];
  sub_100008F88(v1 + 24, v83);
  uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 40))(v83, v84);
  sub_1001A00C0(v85, (uint64_t)sub_1001A7F9C, 0);
  swift_release();
  uint64_t v86 = v1[27];
  uint64_t v87 = v1[28];
  sub_100008F88(v1 + 24, v86);
  uint64_t v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v86, v87);
  sub_10019B0AC(v88, (uint64_t)sub_1001B6680, 0);
  swift_release();
  uint64_t v89 = v1[27];
  uint64_t v90 = v1[28];
  sub_100008F88(v1 + 24, v89);
  uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 16))(v89, v90);
  sub_1001A03F4(v91, (uint64_t)sub_1001A7FC4, 0);
  swift_release();
  uint64_t v92 = swift_retain();
  sub_1001A0728(v92, (uint64_t)sub_1001A8208, 0);
  swift_release();
  uint64_t v93 = swift_retain();
  sub_10019B0AC(v93, (uint64_t)sub_1001A862C, 0);
  swift_release();
  uint64_t v94 = swift_retain();
  sub_1001A0A5C(v94, (uint64_t)sub_1001A8808, 0);
  swift_release();
  uint64_t v95 = swift_retain();
  sub_10019B0AC(v95, (uint64_t)sub_1001A88E0, 0);
  swift_release();
  uint64_t v96 = swift_retain();
  sub_10019B0AC(v96, (uint64_t)sub_1001A894C, 0);
  swift_release();
  uint64_t v97 = swift_retain();
  sub_10019B0AC(v97, (uint64_t)sub_1001A89BC, 0);
  swift_release();
  uint64_t v98 = swift_retain();
  sub_10019B0AC(v98, (uint64_t)sub_1001A8A04, 0);
  swift_release();
  uint64_t v99 = swift_retain();
  sub_1001A0728(v99, (uint64_t)sub_1001A8A70, 0);
  swift_release();
  uint64_t v100 = swift_retain();
  sub_1001A0D90(v100, (uint64_t)sub_1001A8B4C, 0);
  swift_release();
  uint64_t v101 = swift_retain();
  sub_10019B0AC(v101, (uint64_t)sub_1001A8BF8, 0);
  swift_release();
  uint64_t v102 = swift_retain();
  sub_10019B0AC(v102, (uint64_t)sub_1001A8DD8, 0);
  swift_release();
  uint64_t v103 = swift_retain();
  sub_10019B0AC(v103, (uint64_t)sub_1001A8E60, 0);
  swift_release();
  uint64_t v104 = swift_retain();
  sub_10019B0AC(v104, (uint64_t)sub_1001A8F34, 0);
  swift_release();
  uint64_t v105 = swift_retain();
  sub_10019B0AC(v105, (uint64_t)sub_1001A9008, 0);
  swift_release();
  uint64_t v106 = swift_retain();
  sub_10019B0AC(v106, (uint64_t)sub_1001A90DC, 0);
  swift_release();
  uint64_t v107 = swift_retain();
  sub_10019B0AC(v107, (uint64_t)sub_1001A91B0, 0);
  swift_release();
  uint64_t v108 = swift_retain();
  sub_10019B0AC(v108, (uint64_t)sub_1001A9294, 0);
  swift_release();
  uint64_t v109 = swift_retain();
  sub_1001A0728(v109, (uint64_t)sub_1001A9380, 0);
  swift_release();
  uint64_t v110 = swift_retain();
  sub_10019E720(v110, (uint64_t)sub_1001A950C, 0);
  swift_release();
  uint64_t v111 = swift_retain();
  sub_10019F724(v111, (uint64_t)sub_1001A9620, 0);
  swift_release();
  uint64_t v112 = swift_retain();
  sub_10019B0AC(v112, (uint64_t)sub_1001A96FC, 0);
  swift_release();
  uint64_t v113 = swift_retain();
  sub_10019EA54(v113, (uint64_t)sub_1001A97D4, 0);
  swift_release();
  uint64_t v114 = swift_retain();
  sub_10019B0AC(v114, (uint64_t)sub_1001A98F0, 0);
  swift_release();
  uint64_t v115 = swift_retain();
  sub_10019B0AC(v115, (uint64_t)sub_1001A99C8, 0);
  swift_release();
  uint64_t v116 = swift_retain();
  sub_10019B0AC(v116, (uint64_t)sub_1001A9A88, 0);
  swift_release();
  uint64_t v117 = v1[27];
  uint64_t v118 = v1[28];
  sub_100008F88(v1 + 24, v117);
  uint64_t v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 24))(v117, v118);
  sub_1001A00C0(v119, (uint64_t)sub_1001A9AB8, 0);
  swift_release();
  uint64_t v120 = swift_retain();
  sub_1001A10C4(v120, (uint64_t)sub_1001A9B70, 0);
  swift_release();
  uint64_t v121 = swift_retain();
  sub_10019FD8C(v121, (uint64_t)sub_1001A9C3C, 0);
  swift_release();
  uint64_t v122 = swift_retain();
  sub_10019DD84(v122, (uint64_t)sub_1001A9CA8, 0);
  swift_release();
  uint64_t v123 = swift_retain();
  sub_10019FA58(v123, (uint64_t)sub_1001A9ECC, 0);
  return swift_release();
}

void sub_1001A36AC(void *a1)
{
  uint64_t v2 = *(void *)(a1[6] + 32);
  if (!*(void *)(v2 + 64)) {
    goto LABEL_6;
  }
  if ((sub_100078E0C(0, *(void *)(v2 + 88)) & 1) == 0)
  {
    if (*(void *)(v2 + 64))
    {
      char v3 = sub_100078E0C(1, *(void *)(v2 + 88));
      goto LABEL_7;
    }
LABEL_6:
    char v3 = 0;
    goto LABEL_7;
  }
  char v3 = 1;
LABEL_7:
  if ((*(unsigned char *)(a1[3] + 80) & 1) == 0 || (*(unsigned char *)(a1[4] + 42) & 1) == 0) {
    char v3 = 0;
  }
  uint64_t v4 = self;
  id v5 = [v4 sharedApplication];
  unsigned int v6 = [v5 isIdleTimerDisabled];

  if ((v3 & 1) != v6)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000FD84(v7, (uint64_t)qword_1003A9958);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 67240192;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Do not dim screen = %{BOOL,public}d", v10, 8u);
      swift_slowDealloc();
    }

    id v11 = [v4 sharedApplication];
    [v11 setIdleTimerDisabled:v3 & 1];
  }
}

uint64_t sub_1001A38A4(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10037F0C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v12[-v6];
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = swift_retain();
  sub_1001A1714(v9, a1, v7);
  uint64_t v10 = v8 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
  swift_beginAccess();
  sub_10000D2A0(v10, (uint64_t)v5, &qword_10037F0C8);
  sub_100288F88((uint64_t)v7);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v7, v10, &qword_10037F0C8);
  swift_endAccess();
  sub_100289220((uint64_t)v5);
  sub_10000950C((uint64_t)v7, &qword_10037F0C8);
  return sub_10000950C((uint64_t)v5, &qword_10037F0C8);
}

uint64_t sub_1001A39E8()
{
  return sub_1001AA4AC();
}

uint64_t sub_1001A3A0C(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 56) + 88);
  if (v1)
  {
    uint64_t v2 = (void *)result;
    swift_retain();
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 144);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      if (*(unsigned char *)(v4 + v3 + 31) != 3) {
        return swift_release();
      }
      uint64_t v2 = (void *)v2[12];
      if (qword_10037DD88 == -1)
      {
LABEL_5:
        uint64_t v5 = type metadata accessor for Logger();
        sub_10000FD84(v5, (uint64_t)qword_1003A9970);
        uint64_t v6 = Logger.logObject.getter();
        os_log_type_t v7 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, v7, "cancelAllAlerts", v8, 2u);
          swift_slowDealloc();
        }

        unint64_t v9 = v2[7];
        if (v9)
        {
          uint64_t v10 = v2[6];
          swift_bridgeObjectRetain();
          sub_1001C92CC(v10, v9);
          swift_release();
          return swift_bridgeObjectRelease();
        }
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_5;
  }
  return result;
}

void sub_1001A3BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)a2;
  unsigned int v8 = *(unsigned __int8 *)(a2 + 8);
  int v9 = *(unsigned __int8 *)(a2 + 9);
  uint64_t v10 = *(void *)(a2 + 16);
  static Locale.autoupdatingCurrent.getter();
  if (v9) {
    int v11 = 256;
  }
  else {
    int v11 = 0;
  }
  sub_10017597C(v7, v11 | v8, v10, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000FD84(v12, (uint64_t)qword_1003A9958);
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Forwarded emergency start message request to messagesAgent", v15, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1001A3D68(uint64_t result)
{
  if (*(void *)(*(void *)(result + 88) + 104))
  {
    swift_retain();
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1001A3DCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = ((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  static Locale.autoupdatingCurrent.getter();
  sub_100178798(v7, v8, v9, v6);
  (*(void (**)(NSObject *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000FD84(v10, (uint64_t)qword_1003A9958);
  int v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Forwarded roadside assistance start message request to messagesAgent", v13, 2u);
    swift_slowDealloc();
  }
}

void sub_1001A3F78(uint64_t a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TransitionAlert: emergency requested", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 32);
  if (*(void *)(v6 + 64) && (sub_100078E0C(0, *(void *)(v6 + 80)) & 1) != 0)
  {
    byte_10038ADB8 = 2;
    sub_1002734A4(2, 0x80u, (uint64_t)sub_1001A4140, 0);
  }
  else
  {
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TransitionAlert - Stewie emergency is not allowed, placing a call", v9, 2u);
      swift_slowDealloc();
    }

    sub_100245EDC((uint64_t)sub_1001A414C, 0);
  }
}

void sub_1001A4140(uint64_t a1)
{
}

void sub_1001A4150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  unsigned __int8 v3 = *(unsigned char *)(a2 + 8);
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TransitionAlert: roadside requested", v7, 2u);
    swift_slowDealloc();
  }

  byte_10038ADB8 = 2;
  sub_1002734A4(v2, v3, (uint64_t)sub_1001A4140, 0);
}

uint64_t sub_1001A4270(uint64_t a1, uint64_t a2)
{
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9988);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "targetTracksUpdateRequired", v6, 2u);
    swift_slowDealloc();
  }

  sub_1001B6248(a2, (uint64_t)v9);
  uint64_t v7 = swift_allocObject();
  sub_1001B62A4((uint64_t)v9, v7 + 16);
  sub_100274548((uint64_t)sub_1001B6300, v7);
  return swift_release();
}

uint64_t sub_1001A43B8(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10038B448);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DDA8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A99D0);
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Service plot received", v8, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
    sub_1001229A4((uint64_t)v4);
    uint64_t v9 = type metadata accessor for TargetTracks(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
  }
  else
  {
    uint64_t v10 = type metadata accessor for TargetTracks(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  sub_10020DDEC((uint64_t)v4);
  return sub_10000950C((uint64_t)v4, &qword_10038B448);
}

uint64_t sub_1001A458C(void *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  os_log_type_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)&a2[*(int *)(type metadata accessor for ConnectionClosed(0) + 24)];
  if (sub_100078E0C(0, v20))
  {
    if (*(unsigned char *)(a1[3] + 80) & 1) != 0 && !*a2 && (*(unsigned char *)(a1[7] + 80)) {
      goto LABEL_26;
    }
  }
  else
  {
    if ((sub_100078E0C(1, v20) & 1) == 0)
    {
      if (sub_100078E0C(3, v20))
      {
        uint64_t v22 = a1[15];
        uint64_t v23 = *(unsigned __int16 *)(v22 + 56);
        if ((unsigned __int16)(v23 + 512) < 0x8201u)
        {
          sub_100004010(&qword_100393AA0);
          sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
          Subject<>.send()();
        }
        *(_WORD *)(v22 + 56) = -32767;
        sub_10029727C(v23);
        return sub_1001AA4AC();
      }
      if ((sub_100078E0C(4, v20) & 1) == 0 || (*(unsigned char *)(a1[3] + 80) & 1) == 0) {
        return sub_1001AA4AC();
      }
      swift_retain();
      sub_10020CBFC((uint64_t)v19);
      swift_release();
      uint64_t v24 = type metadata accessor for TransmissionProgress(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v19, 1, v24) == 1)
      {
        sub_10000950C((uint64_t)v19, &qword_10037F158);
      }
      else
      {
        uint64_t v25 = *(void *)&v19[*(int *)(v24 + 28)];
        sub_10000CFFC((uint64_t)v19, type metadata accessor for TransmissionProgress);
        if (v25 == 100)
        {
          if (qword_10037DD80 != -1) {
            swift_once();
          }
          uint64_t v26 = type metadata accessor for Logger();
          sub_10000FD84(v26, (uint64_t)qword_1003A9958);
          uint64_t v27 = Logger.logObject.getter();
          os_log_type_t v28 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "Delay transition to FindMy by 2 seconds", v29, 2u);
            swift_slowDealloc();
          }

          sub_10001E6FC(0, (unint64_t *)&qword_100387440);
          uint64_t v37 = static OS_dispatch_queue.main.getter();
          static DispatchTime.now()();
          + infix(_:_:)();
          uint64_t v30 = *(void (**)(char *, uint64_t))(v43 + 8);
          v43 += 8;
          uint64_t v38 = v30;
          v30(v14, v11);
          uint64_t v31 = swift_allocObject();
          swift_weakInit();
          aBlock[4] = sub_1001B6230;
          aBlock[5] = v31;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100207A1C;
          void aBlock[3] = &unk_10035C250;
          uint64_t v32 = _Block_copy(aBlock);
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_1001B5920((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100004010((uint64_t *)&unk_10037FF80);
          sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
          uint64_t v33 = v42;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v34 = (void *)v37;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v32);

          (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v33);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
          v38(v16, v11);
          return sub_1001AA4AC();
        }
      }
LABEL_26:
      swift_retain();
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
      goto LABEL_27;
    }
    if ((*(unsigned char *)(a1[3] + 80) & 1) != 0 && !*a2)
    {
      uint64_t v21 = a1[11];
      if ((*(unsigned char *)(v21 + 168) & 1) != 0 && (*(unsigned char *)(v21 + 184) & 1) == 0)
      {
        aBlock[0] = *(void *)(v21 + 176);
        swift_retain();
        PassthroughSubject.send(_:)();
LABEL_27:
        swift_release();
      }
    }
  }
  return sub_1001AA4AC();
}

uint64_t sub_1001A4CC8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 24);
    swift_retain();
    swift_release();
    char v2 = *(unsigned char *)(v1 + 80);
    uint64_t result = swift_release();
    if (v2)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        swift_retain();
        swift_release();
        swift_retain();
        swift_release();
        sub_100004010(&qword_100393AA0);
        sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
        Subject<>.send()();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1001A4DDC(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10037F158);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 72);
  sub_100296CA0(*(unsigned char *)(*(void *)(v5 + 56) + 120));
  sub_10028B2B4(*(unsigned char *)(*(void *)(v5 + 56) + 106) & 1);
  uint64_t v6 = *(void *)(a1 + 88);
  sub_10006C4FC(*(unsigned char *)(*(void *)(v5 + 56) + 106) & 1);
  swift_retain();
  sub_10020CBFC((uint64_t)v4);
  swift_release();
  if (*(unsigned char *)(v6 + 248) == 3)
  {
    uint64_t v7 = 0;
    int v8 = 1;
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 208);
    int v8 = *(unsigned char *)(v6 + 216) & 1;
  }
  sub_100177374((uint64_t)v4, v7, v8);
  return sub_10000950C((uint64_t)v4, &qword_10037F158);
}

uint64_t sub_1001A4EFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 56);
  swift_bridgeObjectRetain();
  sub_10028B55C(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v5 + 56);
  swift_bridgeObjectRetain();
  sub_10006C7A4(v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A4F88(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_10037F158);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  int v8 = (char *)&v15 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 72);
  uint64_t v12 = *(void *)(a1 + 120) + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v12, (uint64_t)v10, &qword_10037F158);
  sub_10000D2A0((uint64_t)v10, (uint64_t)v8, &qword_10037F158);
  uint64_t v13 = v11 + OBJC_IVAR____TtC8SOSBuddy15ConnectionModel__simulatedTransmissionProgress;
  swift_beginAccess();
  sub_10000D2A0(v13, (uint64_t)v5, &qword_10037F158);
  swift_retain();
  sub_10021F890((uint64_t)v8);
  swift_beginAccess();
  sub_1001B6344((uint64_t)v8, v13, &qword_10037F158);
  swift_endAccess();
  sub_10021FBB8((uint64_t)v5);
  sub_10000950C((uint64_t)v8, &qword_10037F158);
  sub_10000950C((uint64_t)v5, &qword_10037F158);
  swift_release();
  return sub_10000950C((uint64_t)v10, &qword_10037F158);
}

uint64_t sub_1001A5138(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 120);
  if ((*(_WORD *)(v1 + 56) & 0xC000) == 0)
  {
    sub_100276B24(3);
    uint64_t v2 = *(unsigned __int16 *)(v1 + 56);
    if (v2 != 0x8000)
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(_WORD *)(v1 + 56) = 0x8000;
    return sub_10029727C(v2);
  }
  return result;
}

void sub_1001A51E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 48) + 32);
  if (*(void *)(v1 + 64))
  {
    if (sub_100078E0C(3, *(void *)(v1 + 88))) {
      sub_100274FE8(3, (uint64_t)sub_100275728, 0);
    }
  }
}

void sub_1001A524C()
{
}

uint64_t sub_1001A528C(uint64_t a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "User acked end session screen", v5, 2u);
    swift_slowDealloc();
  }

  sub_100276B24(6);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 32);
  if (*(void *)(v6 + 64)) {
    char v7 = *(unsigned char *)(v6 + 56);
  }
  else {
    char v7 = 5;
  }
  *(unsigned char *)(a1 + 337) = v7;
  swift_retain_n();
  int v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_100004010(&qword_10038B238);
    uint64_t v11 = String.init<A>(describing:)();
    sub_1001B3178(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "lastDismissedReason = %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return sub_1001AA4AC();
}

uint64_t sub_1001A5508(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)char v7 = 136315138;
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "tryOutRequested for %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v11 = *(unsigned __int16 *)(v10 + 56);
  if ((v11 & 0xC000) != 0 || (v3 == v11 ? (BOOL v12 = (v11 & 0x100) == 0) : (BOOL v12 = 1), v12))
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(_WORD *)(v10 + 56) = v3 | 0x100;
  return sub_10029727C(v11);
}

void sub_1001A5718(uint64_t a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "cancelTryOutOfferRequested", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(a1 + 120);
  if ((*(_WORD *)(v6 + 56) & 0xC000) == 0)
  {
    sub_100276B24(3);
    uint64_t v7 = *(unsigned __int16 *)(v6 + 56);
    if (v7 != 0x8000)
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(_WORD *)(v6 + 56) = 0x8000;
    sub_10029727C(v7);
  }
}

uint64_t sub_1001A5880(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a2;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9958);
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    sub_100004010(&qword_10038B3F8);
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "startTryOutConnectionDemoRequested for: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (v2 == 5) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v2;
  }
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(unsigned char *)(v11 + 24) = v2;
  swift_retain();
  sub_1002734A4(v9, 0x40u, (uint64_t)sub_1001B61FC, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_1001A5AAC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (!a1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v11 = *(void *)(result + 120);
    swift_retain();
    swift_release();
    uint64_t v12 = *(unsigned __int16 *)(v11 + 56);
    if (v12 >> 9 <= 0x7E && (v12 & 0xC000) == 0x4000)
    {
      if (*(_WORD *)(v11 + 56) == 5)
      {
        if (a3 == 5) {
          goto LABEL_25;
        }
      }
      else if (a3 != 5 && *(_WORD *)(v11 + 56) == a3)
      {
        goto LABEL_25;
      }
    }
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
LABEL_25:
    *(_WORD *)(v11 + 56) = a3 | 0x4000;
    sub_10029727C(v12);
    return swift_release();
  }
  swift_errorRetain();
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9958);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    swift_errorRetain();
    sub_100004010(&qword_10037FFB0);
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "activateTryOut failed: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return swift_errorRelease();
  }
  uint64_t v14 = *(void *)(Strong + 120);
  swift_retain();
  swift_release();
  id v15 = [self mainBundle];
  v16._uint64_t countAndFlagsBits = 0xD000000000000025;
  v22._unint64_t object = (void *)0x80000001002CB850;
  v16._unint64_t object = (void *)0x80000001002CB9D0;
  v17._uint64_t countAndFlagsBits = 0;
  v17._unint64_t object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0xD000000000000022;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v22);

  uint64_t v20 = *(void *)(v14 + 64);
  uint64_t v19 = *(void **)(v14 + 72);
  if (v19
    && (v20 == v18._countAndFlagsBits && v19 == v18._object || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(Swift::String *)(v14 + 64) = v18;
  swift_bridgeObjectRelease();
  sub_100297680(v20, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  return swift_release();
}

void sub_1001A5EF8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v48 - v13;
  uint64_t v14 = sub_100004010(&qword_100380788);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v58 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v57 = (char *)&v48 - v17;
  uint64_t v59 = (void (*)(char *, uint64_t))*a2;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = sub_10000FD84(v18, (uint64_t)qword_1003A9958);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v48 = v19;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v50 = v5;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v51 = v9;
    aBlock[0] = v24;
    uint64_t v49 = v4;
    *(_DWORD *)uint64_t v23 = 136315138;
    LOBYTE(v6sub_100274FE8(1, (uint64_t)sub_10027571C, 0) = (_BYTE)v59;
    uint64_t v25 = String.init<A>(describing:)();
    uint64_t v60 = sub_1001B3178(v25, v26, aBlock);
    uint64_t v4 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "stewieAppRequested for %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v9 = v51;
    swift_slowDealloc();
    uint64_t v5 = v50;
    swift_slowDealloc();
  }

  switch((unint64_t)v59)
  {
    case 1uLL:
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Requesting roadside assistance", v44, 2u);
        swift_slowDealloc();
      }

      uint64_t v45 = (uint64_t)v57;
      static DispatchTime.now()();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v45, 0, 1, v8);
      uint64_t v46 = a1 + OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastRoadsideRequestInitiatedFromTheAppAt;
      swift_beginAccess();
      uint64_t v47 = (uint64_t)v58;
      sub_10000D2A0(v46, (uint64_t)v58, &qword_100380788);
      swift_beginAccess();
      sub_1001B6344(v45, v46, &qword_100380788);
      swift_endAccess();
      sub_1001974FC(v47, &OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastRoadsideRequestInitiatedFromTheAppAt, "_lastRoadsideRequestInitiatedFromTheAppAt changed from %{public}s to %{public}s");
      sub_10000950C(v45, &qword_100380788);
      sub_10000950C(v47, &qword_100380788);
      uint64_t v40 = sub_1001A6818;
      uint64_t v41 = 1;
      goto LABEL_17;
    case 2uLL:
      sub_10008CF98();
      break;
    case 3uLL:
    case 4uLL:
      sub_10017A700();
      uint64_t v27 = *(void **)(*(void *)(a1 + 48) + 32);
      if (v27[8] && (sub_100078E0C(2, v27[10]) & 1) != 0 && (!v27[8] || (sub_100078E0C(2, v27[11]) & 1) == 0))
      {
        sub_10001E6FC(0, (unint64_t *)&qword_100387440);
        uint64_t v58 = (char *)static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v59 = *(void (**)(char *, uint64_t))(v9 + 8);
        v59(v12, v8);
        uint64_t v28 = swift_allocObject();
        swift_weakInit();
        aBlock[4] = (uint64_t)sub_1001B61B8;
        aBlock[5] = v28;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100207A1C;
        void aBlock[3] = (uint64_t)&unk_10035C188;
        uint64_t v29 = _Block_copy(aBlock);
        swift_release();
        uint64_t v30 = v52;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_1001B5920((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100004010((uint64_t *)&unk_10037FF80);
        sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
        uint64_t v31 = v54;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v32 = v56;
        uint64_t v33 = v58;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v29);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v31, v4);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v55);
        v59(v32, v8);
      }
      break;
    default:
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Requesting emergency", v36, 2u);
        swift_slowDealloc();
      }

      uint64_t v37 = (uint64_t)v57;
      static DispatchTime.now()();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v8);
      uint64_t v38 = a1 + OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastEmergencyRequestInitiatedFromTheAppAt;
      swift_beginAccess();
      uint64_t v39 = (uint64_t)v58;
      sub_10000D2A0(v38, (uint64_t)v58, &qword_100380788);
      swift_beginAccess();
      sub_1001B6344(v37, v38, &qword_100380788);
      swift_endAccess();
      sub_1001974FC(v39, &OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastEmergencyRequestInitiatedFromTheAppAt, "_lastEmergencyRequestInitiatedFromTheAppAt changed from %{public}s to %{public}s");
      sub_10000950C(v37, &qword_100380788);
      sub_10000950C(v39, &qword_100380788);
      uint64_t v40 = sub_1001A680C;
      uint64_t v41 = 0;
LABEL_17:
      sub_1002734A4(v41, 0x80u, (uint64_t)v40, 0);
      break;
  }
}

void sub_1001A680C(uint64_t a1)
{
}

void sub_1001A6818(uint64_t a1)
{
}

void sub_1001A6824()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + 152);
    swift_release();
    sub_1002734A4(5, 0x80u, (uint64_t)sub_1001A68AC, 0);
  }
}

void sub_1001A68AC(uint64_t a1)
{
}

void sub_1001A68B8(uint64_t a1, const char *a2)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9958);
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a2, v5, 8u);
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
}

uint64_t sub_1001A6A1C()
{
  return sub_100176C3C();
}

void sub_1001A6A44(uint64_t a1, char *a2)
{
}

uint64_t sub_1001A6A4C()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "emergencyCallRequested", v3, 2u);
    swift_slowDealloc();
  }

  return sub_100245EDC((uint64_t)sub_1001A414C, 0);
}

void sub_1001A6B48()
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9958);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    os_log_type_t v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v2 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Emergency call request, success: %{BOOL}d", v2, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1001A6C84(uint64_t a1, uint64_t *a2)
{
  return sub_100179F20(*a2);
}

uint64_t sub_1001A6CB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = qword_10037DD80;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "switchFromEmergencyToRoadsideRequested", v9, 2u);
    swift_slowDealloc();
  }

  byte_10038ADB8 = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001B6120;
  *(void *)(v10 + 24) = v4;
  swift_retain();
  sub_1002734A4(3, 0x80u, (uint64_t)sub_1001B618C, v10);
  swift_release();

  return swift_release();
}

uint64_t sub_1001A6E3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = qword_10037DD80;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "switchFromRoadsideToEmergencyRequested", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 32);
  if (*(void *)(v11 + 64) && (sub_100078E0C(0, *(void *)(v11 + 80)) & 1) != 0)
  {
    byte_10038ADB8 = 1;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1001B6120;
    *(void *)(v12 + 24) = v5;
    swift_retain();
    sub_1002734A4(2, 0x80u, (uint64_t)sub_1001B612C, v12);
  }
  else
  {
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "switchFromRoadsideToEmergencyRequested - Stewie emergency is not allowed, placing a call", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1001B6120;
    *(void *)(v16 + 24) = v5;
    swift_retain();
    sub_100245EDC((uint64_t)sub_1001B6124, v16);
  }
  swift_release();

  return swift_release();
}

uint64_t sub_1001A70B0(char a1, uint64_t (*a2)(void))
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Emergency call request, success: %{BOOL}d", v7, 8u);
    swift_slowDealloc();
  }

  return a2(a1 & 1);
}

void sub_1001A71E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000FD84(v5, (uint64_t)qword_1003A9958);
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "selectRoadsideProviderRequested", v8, 2u);
    swift_slowDealloc();
  }

  sub_100273BA8(v2, v3, v4);
}

uint64_t sub_1001A72F0(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  if (*(void *)(*(void *)(result + 56) + 88))
  {
    swift_retain();
    sub_1000C7D1C(v3, v4);
    uint64_t result = swift_release();
  }
  if (*(void *)(*(void *)(v2 + 88) + 104))
  {
    swift_retain();
    sub_1000C7D1C(v3, v4);
    return swift_release();
  }
  return result;
}

void sub_1001A7388(uint64_t a1, char *a2)
{
  char v3 = *a2;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v5, v6))
  {

    swift_release_n();
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_9:
    sub_100276B24(7);
    return;
  }
  uint64_t v13 = a1;
  os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
  uint64_t v14 = swift_slowAlloc();
  *(_DWORD *)os_log_type_t v7 = 136315138;
  uint64_t v8 = String.init<A>(describing:)();
  sub_1001B3178(v8, v9, &v14);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v5, v6, "User acted upon offer: %s", v7, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  a1 = v13;
  swift_slowDealloc();

  if (v3) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Requesting OffTheGrid mode", v12, 2u);
    swift_slowDealloc();
  }

  sub_100025700(1, 2, *(void *)(a1 + 128));
}

void sub_1001A75E4(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  sub_1001B5F20();
  sub_1001B5F74();
  if (BidirectionalCollection<>.starts<A>(with:)())
  {
    if (v2)
    {
      if (v2 == 1)
      {
        sub_100276B24(7);
        return;
      }
      sub_100276B24(8);
      int v3 = 1;
      goto LABEL_11;
    }
    if (BidirectionalCollection<>.starts<A>(with:)())
    {
      int v3 = 0;
LABEL_11:
      sub_100199F98(v3);
      return;
    }
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_100157A04((uint64_t)sub_1001B5E88, v4);
    swift_release_n();
  }
  else if (v2)
  {
    if (v2 == 1) {
      sub_10002A6F0();
    }
    else {
      sub_10002A6E0();
    }
  }
}

void sub_1001A777C(uint64_t a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requesting OffTheGrid mode", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(a1 + 128);

  sub_100025700(1, 2, v6);
}

void sub_1001A7874()
{
}

void sub_1001A7898()
{
}

uint64_t sub_1001A78D8()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_100157A04((uint64_t)sub_1001B5E88, v0);
  return swift_release_n();
}

uint64_t sub_1001A7958(uint64_t result, double *a2)
{
  double v2 = *a2;
  double v3 = a2[1];
  uint64_t v4 = *(void *)(result + 40);
  double v5 = *(double *)(v4 + 32);
  double v6 = *(double *)(v4 + 40);
  if (v5 != *a2 || v6 != v3)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    *(double *)(v4 + 32) = v2;
    *(double *)(v4 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v3;
    sub_1002881F8(v5, v6);
    swift_retain();
    Subject<>.send()();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001A7A58(uint64_t result, double *a2)
{
  double v2 = *a2;
  double v3 = a2[1];
  uint64_t v4 = *(void *)(result + 40);
  double v5 = *(double *)(v4 + 64);
  double v6 = *(double *)(v4 + 72);
  if (v5 != *a2 || v6 != v3)
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
    *(double *)(v4 + 64) = v2;
    *(double *)(v4 + 72) = v3;
    sub_100288698(v5, v6);
    swift_retain();
    Subject<>.send()();
    return swift_release();
  }
  return result;
}

void sub_1001A7B58(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[1];
  v3[0] = *a2;
  v3[1] = v2;
  v3[2] = a2[2];
  sub_1001AAFEC((unsigned __int8 *)v3);
}

void sub_1001A7B98(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  v3[0] = *(_OWORD *)a2;
  v3[1] = v2;
  v3[2] = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  sub_1001AB750((uint64_t)v3);
}

uint64_t sub_1001A7BE0(uint64_t a1, _OWORD *a2)
{
  long long v2 = a2[1];
  v4[0] = *a2;
  v4[1] = v2;
  v4[2] = a2[2];
  return sub_1001ABC84(v4);
}

uint64_t sub_1001A7C20(uint64_t a1, uint64_t a2)
{
  return sub_1001AC06C(*(unsigned char *)a2, *(void *)(a2 + 8));
}

void sub_1001A7C4C(uint64_t a1, uint64_t a2)
{
}

void sub_1001A7C78(uint64_t a1, uint64_t a2)
{
}

void sub_1001A7CA4(uint64_t a1, unsigned __int8 *a2)
{
  if (a2[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  sub_1001AC858(v2 | *a2);
}

void sub_1001A7CE4(uint64_t a1, char *a2)
{
}

void sub_1001A7D1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  sub_100296DE0(*(unsigned char *)(v2 + 48) & 1);
  int v3 = *(unsigned __int8 *)(v2 + 48);
  if (v3)
  {
    sub_1001AA010();
    int v3 = *(unsigned __int8 *)(v2 + 48);
  }
  BOOL v4 = v3 != 2 && (v3 & 1) == 0;
  if (v4 && (*(unsigned char *)(a1 + 336) & 1) != 0)
  {
    *(unsigned char *)(a1 + 336) = 2;
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 32);
    if (*(void *)(v5 + 64) && *(unsigned char *)(v5 + 56) == 5)
    {
      if (qword_10037DD80 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000FD84(v6, (uint64_t)qword_1003A9958);
      os_log_type_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        unint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Executing delayed bringForegroundOnUnlock request", v9, 2u);
        swift_slowDealloc();
      }

      sub_100157A04((uint64_t)sub_100158148, 0);
    }
    else
    {
      if (qword_10037DD80 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10000FD84(v10, (uint64_t)qword_1003A9958);
      oslog = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Ignoring delayed bringForegroundOnUnlock request, Stewie is off already", v12, 2u);
        swift_slowDealloc();
      }
    }
  }
}

void sub_1001A7F5C(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  sub_100008F88((void *)(a1 + 240), *(void *)(a1 + 264));
  sub_1001E2124(v2);
}

void sub_1001A7F9C(uint64_t a1, char *a2)
{
}

void sub_1001A7FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100004010(&qword_10037F0C8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v15 - v7;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9958);
  sub_10000D2A0(a2, (uint64_t)v8, &qword_10037F0C8);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_10000D2A0((uint64_t)v8, (uint64_t)v6, &qword_10037F0C8);
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v15 = sub_1001B3178(v13, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000950C((uint64_t)v8, &qword_10037F0C8);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Banner dismissed by user in mode: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000950C((uint64_t)v8, &qword_10037F0C8);
  }
}

uint64_t sub_1001A8208(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 337) == 6)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 32);
    if (*(void *)(v2 + 64)) {
      char v3 = *(unsigned char *)(v2 + 56);
    }
    else {
      char v3 = 5;
    }
    *(unsigned char *)(a1 + 337) = v3;
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000FD84(v4, (uint64_t)qword_1003A9958);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      sub_100004010(&qword_10038B238);
      uint64_t v8 = String.init<A>(describing:)();
      sub_1001B3178(v8, v9, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Initializing lastDismissedReason with %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 32);
  if ((!*(void *)(v11 + 64) || *(unsigned char *)(v11 + 56) == 5) && *(unsigned __int8 *)(a1 + 337) - 5 >= 2)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000FD84(v12, (uint64_t)qword_1003A9958);
    swift_retain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_100004010(&qword_10038B238);
      uint64_t v16 = String.init<A>(describing:)();
      sub_1001B3178(v16, v17, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Stewie is on, resetting lastDismissedReason (it was %s)", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(a1 + 337) = 5;
    uint64_t v11 = *(void *)(v10 + 32);
  }
  sub_10000D544(v11 + 56, (uint64_t)v19, &qword_1003826B8);
  sub_1000947AC(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
  sub_100296E0C((uint64_t)v19);
  sub_1000947AC(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
  return sub_1001AA4AC();
}

void sub_1001A862C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 104);
  if (*(void *)(v1 + 64))
  {
    uint64_t v3 = *(void *)(v1 + 88);
    if (!*(void *)(v3 + 16))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 32);
      if (!*(void *)(v4 + 64) || (sub_10020D19C(v3, *(void *)(v4 + 88)) & 1) == 0)
      {
        if (qword_10037DE28 != -1) {
          swift_once();
        }
        uint64_t v5 = type metadata accessor for Logger();
        sub_10000FD84(v5, (uint64_t)qword_1003A9B50);
        os_log_type_t v6 = Logger.logObject.getter();
        os_log_type_t v7 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, v7, "Active services changed to 0 on the monitor and are out of sync with caModels", v8, 2u);
          swift_slowDealloc();
        }

        if (qword_10037DD90 != -1) {
          swift_once();
        }
        sub_10000FD84(v5, (uint64_t)qword_1003A9988);
        unint64_t v9 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "fetchConnectionAssistantState", v11, 2u);
          swift_slowDealloc();
        }

        sub_100114548(0, 0);
      }
    }
  }
}

void sub_1001A8808(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  swift_beginAccess();
  sub_1001970EC(v3 & 1);
  swift_endAccess();
  uint64_t v4 = *(void *)(a1 + 120);
  *(unsigned char *)(v4 + 89) = v3;
  sub_100297924();
  if (v3 != 2 && (v3 & 1) == 0)
  {
    if ((*(_WORD *)(v4 + 56) & 0xC000) == 0)
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    sub_1001AA010();
  }
}

uint64_t sub_1001A88E0(uint64_t a1)
{
  sub_10000D544(*(void *)(*(void *)(a1 + 48) + 80) + 48, (uint64_t)v3, &qword_10038B210);
  __int16 v1 = sub_1001AAFE0();
  sub_10028B828((uint64_t)v3, v1);
  return sub_1001AA4AC();
}

uint64_t sub_1001A894C(uint64_t a1)
{
  sub_10000D544(*(void *)(*(void *)(a1 + 48) + 88) + 48, (uint64_t)v3, &qword_100382458);
  __int16 v1 = sub_1001AB510();
  sub_10006C094((uint64_t)v3, v1);
  return sub_1001AA4AC();
}

uint64_t sub_1001A89BC()
{
  uint64_t v0 = swift_retain();
  sub_1001731D8(v0);

  return swift_release();
}

uint64_t sub_1001A8A04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 312);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8SOSBuddy24DeviceOrientationTracker_currentTargetInGreenZone) = sub_100078E0C(0, *(void *)(*(void *)(*(void *)(a1 + 48) + 56) + OBJC_IVAR____TtC8SOSBuddy13GuidanceModel__suggestedActions)) & 1;
  swift_retain();
  sub_100173338();

  return swift_release();
}

uint64_t sub_1001A8A70(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 48) + 32);
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  if (v3) {
    BOOL v4 = v2 == 5;
  }
  else {
    BOOL v4 = 0;
  }
  BOOL v5 = v4 && (v1[9] & 0xFF00) == 256;
  *(unsigned char *)(*(void *)(a1 + 312) + 24) = v5;
  sub_100094728(v2, v3);
  sub_100173338();
  return sub_100093F40(v2, v3);
}

uint64_t sub_1001A8B4C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100078DB0(a2, (uint64_t)v9);
  uint64_t v4 = *(void *)(*(void *)(a1 + 304) + 24);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    os_log_type_t v6 = (void *)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v6[3];
      uint64_t v8 = v6[4];
      sub_100008F88(v6, v7);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 88))(v9, v7, v8);
      v6 += 5;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A8BF8(uint64_t a1)
{
  uint64_t v2 = sub_100004010((uint64_t *)&unk_100383910);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = *(void *)(a1 + 304);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 40);
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_retain();
    return swift_release();
  }
  unint64_t v9 = (void *)(v7 + 32);
  uint64_t v10 = v6 + 48;
  uint64_t v20 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v11 = v9[3];
    uint64_t v12 = v9[4];
    sub_100008F88(v9, v11);
    sub_10000D544(v10, (uint64_t)v21, &qword_100382698);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 8))(v21, v11, v12);
    v9 += 5;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v5 + 24);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    return swift_release();
  }
  uint64_t v15 = (void *)(v13 + 32);
  uint64_t v16 = v20 + OBJC_IVAR____TtC8SOSBuddy11TargetModel_link;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  do
  {
    uint64_t v17 = v15[3];
    uint64_t v18 = v15[4];
    sub_100008F88(v15, v17);
    sub_10000D2A0(v16, (uint64_t)v4, (uint64_t *)&unk_100383910);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v4, v17, v18);
    sub_10000950C((uint64_t)v4, (uint64_t *)&unk_100383910);
    v15 += 5;
    --v14;
  }
  while (v14);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A8DD8(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(result + 48) + 24);
    uint64_t v4 = (void *)(v1 + 32);
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_100008F88(v4, v5);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v3, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1001A8E60(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(result + 48) + 72);
    uint64_t v4 = (void *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_100008F88(v4, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A8F34(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(result + 48) + 96);
    uint64_t v4 = (void *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_100008F88(v4, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v3, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A9008(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(result + 48) + 56);
    uint64_t v4 = (void *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_100008F88(v4, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A90DC(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(result + 48) + 64);
    uint64_t v4 = (void *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_100008F88(v4, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 56))(v3, v5, v6);
      v4 += 5;
      --v2;
    }
    while (v2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A91B0(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 48) + 80);
  if (*(unsigned char *)(v1 + 64))
  {
    uint64_t v2 = *(void *)(v1 + 72);
    uint64_t v3 = *(void *)(v1 + 56);
    uint64_t v4 = *(void *)(result + 304);
    uint64_t v5 = *(unsigned char *)(v1 + 80) & 1;
    v14[0] = *(unsigned __int8 *)(v1 + 48);
    v14[1] = v3;
    void v14[2] = 1;
    v14[3] = v2;
    v14[4] = v5;
    char v15 = 0;
    uint64_t v6 = *(void *)(v4 + 24);
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = v6 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1000090FC(v8, (uint64_t)v11);
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        sub_100008F88(v11, v12);
        (*(void (**)(void *, uint64_t, uint64_t))(v10 + 96))(v14, v9, v10);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v11);
        v8 += 40;
        --v7;
      }
      while (v7);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001A9294(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 48) + 88);
  if (*(unsigned char *)(v1 + 56))
  {
    uint64_t v2 = *(void *)(v1 + 48);
    uint64_t v3 = *(void *)(result + 304);
    char v4 = *(unsigned char *)(v1 + 88);
    uint64_t v5 = *(void *)(v1 + 64);
    uint64_t v6 = *(void *)(v1 + 80);
    uint64_t v7 = *(void *)(v1 + 72) & 1;
    v16[0] = v2;
    v16[1] = 1;
    void v16[2] = v5;
    v16[3] = v7;
    v16[4] = v6;
    char v17 = v4 & 1 | 0x80;
    uint64_t v8 = *(void *)(v3 + 24);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = v8 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1000090FC(v10, (uint64_t)v13);
        uint64_t v11 = v14;
        uint64_t v12 = v15;
        sub_100008F88(v13, v14);
        (*(void (**)(void *, uint64_t, uint64_t))(v12 + 96))(v16, v11, v12);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v13);
        v10 += 40;
        --v9;
      }
      while (v9);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001A9380(uint64_t a1)
{
  uint64_t v2 = sub_100004010(&qword_100380780);
  __chkstk_darwin(v2 - 8);
  char v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void *)(a1 + 304);
  uint64_t v6 = *(void *)(a1 + 48);
  sub_10000D544(*(void *)(v6 + 32) + 56, (uint64_t)v15, &qword_1003826B8);
  uint64_t v7 = *(void *)(v6 + 112) + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
  swift_beginAccess();
  sub_10000D2A0(v7, (uint64_t)v4, &qword_100380780);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (void *)(v8 + 32);
    sub_1000947AC(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100094728);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v11 = v10[3];
      uint64_t v12 = v10[4];
      sub_100008F88(v10, v11);
      (*(void (**)(void *, unsigned char *, uint64_t, uint64_t))(v12 + 64))(v15, v4, v11, v12);
      v10 += 5;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    sub_1000947AC(v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100093F40);
  }
  return sub_10000950C((uint64_t)v4, &qword_100380780);
}

uint64_t sub_1001A950C(uint64_t result, unsigned __int8 *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  uint64_t v3 = a2[16];
  uint64_t v4 = *((void *)a2 + 3);
  uint64_t v5 = *((void *)a2 + 5);
  uint64_t v6 = *(void *)(result + 304);
  uint64_t v7 = 0x10000;
  if (!a2[34]) {
    uint64_t v7 = 0;
  }
  unint64_t v8 = a2[32] | ((unint64_t)a2[33] << 8) | v7;
  uint64_t v9 = 0x1000000;
  if (!a2[35]) {
    uint64_t v9 = 0;
  }
  v15[0] = *a2;
  v15[1] = v2;
  void v15[2] = v3;
  v15[3] = v4;
  v15[4] = v8 | v9;
  v15[5] = v5;
  v15[6] = 0;
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)(v10 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = v12[3];
      uint64_t v14 = v12[4];
      sub_100008F88(v12, v13);
      (*(void (**)(void *, uint64_t, uint64_t))(v14 + 72))(v15, v13, v14);
      v12 += 5;
      --v11;
    }
    while (v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A9620(uint64_t result, unsigned __int8 *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  uint64_t v3 = *(void *)(result + 304);
  v9[0] = *a2;
  v9[1] = v2;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v12 = 0x4000000000000000;
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v6[3];
      uint64_t v8 = v6[4];
      sub_100008F88(v6, v7);
      (*(void (**)(void *, uint64_t, uint64_t))(v8 + 72))(v9, v7, v8);
      v6 += 5;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A96FC(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 56) + 88);
  if (v1)
  {
    uint64_t v2 = *(void *)(*(void *)(result + 304) + 24);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = (void *)(v2 + 32);
      swift_retain();
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v5 = v4[3];
        uint64_t v6 = v4[4];
        sub_100008F88(v4, v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 80))(v1, v5, v6);
        v4 += 5;
        --v3;
      }
      while (v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001A97D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t result = *(void *)(a1 + 304);
  uint64_t v8 = 0x10000;
  if (!*(unsigned char *)(a2 + 42)) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = *(unsigned __int8 *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 41) << 8) | v8;
  uint64_t v10 = 0x1000000;
  if (!*(unsigned char *)(a2 + 43)) {
    uint64_t v10 = 0;
  }
  v16[0] = *(void *)a2;
  v16[1] = v2;
  void v16[2] = v3;
  v16[3] = v4;
  v16[4] = v5;
  void v16[5] = v9 | v10;
  v16[6] = v6 | 0x8000000000000000;
  uint64_t v11 = *(void *)(result + 24);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)(v11 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v14 = v13[3];
      uint64_t v15 = v13[4];
      sub_100008F88(v13, v14);
      (*(void (**)(void *, uint64_t, uint64_t))(v15 + 72))(v16, v14, v15);
      v13 += 5;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A98F0(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 88) + 104);
  if (v1)
  {
    uint64_t v2 = *(void *)(*(void *)(result + 304) + 24);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = (void *)(v2 + 32);
      swift_retain();
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v5 = v4[3];
        uint64_t v6 = v4[4];
        sub_100008F88(v4, v5);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 80))(v1, v5, v6);
        v4 += 5;
        --v3;
      }
      while (v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001A99C8(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    char v3 = *(unsigned char *)(*(void *)(result + 72) + 48);
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000090FC(v4, (uint64_t)v7);
      uint64_t v5 = v8;
      uint64_t v6 = v9;
      sub_100008F88(v7, v8);
      (*(void (**)(void, uint64_t, uint64_t))(v6 + 104))(v3 & 1, v5, v6);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v7);
      v4 += 40;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A9A88()
{
  uint64_t result = sub_1001AD54C();
  if (result) {
    return sub_1001413F4();
  }
  return result;
}

uint64_t sub_1001A9AB8(uint64_t result, unsigned __int8 *a2)
{
  uint64_t v2 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = *a2;
    uint64_t v5 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000090FC(v5, (uint64_t)v8);
      uint64_t v6 = v9;
      uint64_t v7 = v10;
      sub_100008F88(v8, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 120))(v4, v6, v7);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v8);
      v5 += 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A9B70(uint64_t result, _OWORD *a2)
{
  long long v2 = a2[1];
  v8[0] = *a2;
  v8[1] = v2;
  v8[2] = a2[2];
  uint64_t v3 = *(void *)(*(void *)(result + 304) + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = v5[3];
      uint64_t v7 = v5[4];
      sub_100008F88(v5, v6);
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v7 + 128))(v8, v6, v7);
      v5 += 5;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001A9C3C()
{
  unint64_t v0 = sub_10013AAC0();
  sub_1001B6D38(7, v0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A9CA8(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  sub_1001B5F20();
  sub_1001B5F74();
  uint64_t result = BidirectionalCollection<>.starts<A>(with:)();
  if (result)
  {
    if (v2)
    {
      if (v2 == 1) {
        return result;
      }
      sub_100004010(&qword_1003826A8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1002B3350;
      *(void *)(inited + 32) = 0x696F507972746E65;
      *(void *)(inited + 4sub_100157A04((uint64_t)sub_100158148, 0) = 0xEA0000000000746ELL;
    }
    else
    {
      BidirectionalCollection<>.starts<A>(with:)();
      sub_100004010(&qword_1003826A8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1002B3350;
      *(void *)(inited + 32) = 0x696F507972746E65;
      *(void *)(inited + 4sub_100157A04((uint64_t)sub_100158148, 0) = 0xEA0000000000746ELL;
    }
    *(void *)(inited + 48) = String._bridgeToObjectiveC()();
    unint64_t v5 = sub_100283ACC(inited);
    sub_1001B6D38(7, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1001A9ECC(uint64_t a1, unsigned __int8 *a2)
{
  if (*a2 - 1 >= 2)
  {
    sub_100004010(&qword_1003826A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002B3350;
    *(void *)(inited + 32) = 0x696F507972746E65;
    *(void *)(inited + 4sub_100157A04((uint64_t)sub_100158148, 0) = 0xEA0000000000746ELL;
    *(void *)(inited + 48) = String._bridgeToObjectiveC()();
    unint64_t v3 = sub_100283ACC(inited);
    sub_1001B6D38(7, v3);
    swift_bridgeObjectRelease();
  }
}

void sub_1001AA010()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0[6] + 32);
  if (*(void *)(v2 + 64))
  {
    if ((sub_100078E0C(0, *(void *)(v2 + 88)) & 1) != 0 && *(unsigned char *)(v1[4] + 41) == 3)
    {
      uint64_t v3 = v1[7];
      if (*(_WORD *)(v3 + 128) != 3 && (*(_WORD *)(v3 + 128) & 0x100) != 0)
      {
        switch(*(unsigned char *)(v3 + 96))
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_20;
          default:
            char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v7 & 1) == 0) {
              return;
            }
LABEL_20:
            if (*(void *)(v3 + 88)) {
              goto LABEL_21;
            }
            return;
        }
      }
    }
    else if (*(void *)(v2 + 64) {
           && (sub_100078E0C(1, *(void *)(v2 + 88)) & 1) != 0
    }
           && *(unsigned char *)(v1[4] + 41) == 8)
    {
      uint64_t v5 = v1[11];
      BOOL v6 = *(_WORD *)(v5 + 248) == 3 || (*(_WORD *)(v5 + 248) & 0x100) == 0;
      if (!v6 && *(void *)(v5 + 104))
      {
LABEL_21:
        swift_retain();
        char v8 = sub_1000CA380();
        swift_release();
        if (v8) {
          sub_100274FE8(1, (uint64_t)sub_10027571C, 0);
        }
      }
    }
  }
}

void sub_1001AA1C4(char a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "onStatusBarPillTapped: banner presented - %{BOOL}d", v7, 8u);
    swift_slowDealloc();
  }

  switch(sub_1001AA410(v2))
  {
    case 1u:
      if (*(unsigned char *)(*(void *)(v2 + 32) + 41) == 8) {
        goto LABEL_18;
      }
      if ((a1 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v8 = *(void *)(v2 + 88);
      if (*(unsigned char *)(v8 + 248) == 3 || (*(unsigned char *)(v8 + 216) & 1) != 0) {
        goto LABEL_18;
      }
      sub_100179F20(*(void *)(v8 + 208));
      return;
    case 2u:
      if ((a1 & 1) == 0) {
        goto LABEL_18;
      }
      sub_10017A700();
      return;
    case 3u:
    case 5u:
      goto LABEL_18;
    case 4u:
      if ((a1 & 1) == 0) {
        goto LABEL_18;
      }
      swift_retain();
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
      swift_release();
      break;
    default:
      if (*(unsigned char *)(*(void *)(v2 + 32) + 41) == 3 || (a1 & 1) == 0) {
LABEL_18:
      }
        sub_100157A04((uint64_t)sub_100158148, 0);
      else {
        sub_100176C3C();
      }
      break;
  }
}

uint64_t sub_1001AA410(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 48) + 32);
  if (!*(void *)(v1 + 64)) {
    return 5;
  }
  uint64_t v2 = 0;
  if ((sub_100078E0C(0, *(void *)(v1 + 88)) & 1) == 0)
  {
    if (!*(void *)(v1 + 64)) {
      return 5;
    }
    uint64_t v2 = 1;
    if ((sub_100078E0C(1, *(void *)(v1 + 88)) & 1) == 0)
    {
      if (!*(void *)(v1 + 64)) {
        return 5;
      }
      uint64_t v2 = 4;
      if ((sub_100078E0C(4, *(void *)(v1 + 88)) & 1) == 0)
      {
        if (!*(void *)(v1 + 64)) {
          return 5;
        }
        uint64_t v2 = 2;
        if ((sub_100078E0C(2, *(void *)(v1 + 88)) & 1) == 0) {
          return 5;
        }
      }
    }
  }
  return v2;
}

uint64_t sub_1001AA4AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[4];
  uint64_t v3 = *(void *)(v0[6] + 32);
  if (*(void *)(v3 + 64))
  {
    BOOL v4 = 0;
    if (*(unsigned char *)(v3 + 56) == 5 && (unint64_t)*(unsigned __int8 *)(v3 + 73) << 8 == 256) {
      BOOL v4 = sub_1001AAF50() == 2;
    }
  }
  else
  {
    BOOL v4 = 0;
  }
  uint64_t v5 = *(unsigned __int8 *)(v2 + 42);
  if v5 == 2 || ((v4 ^ v5))
  {
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
  }
  *(unsigned char *)(v2 + 42) = v4;
  uint64_t result = sub_1001584E4(v5);
  uint64_t v7 = *(void *)(v3 + 64);
  if (v7)
  {
    uint64_t v18 = *(void *)(v3 + 136);
    uint64_t v19 = *(void *)(v3 + 128);
    uint64_t v8 = *(void *)(v3 + 112);
    uint64_t v10 = *(void *)(v3 + 96);
    uint64_t v9 = *(void *)(v3 + 104);
    uint64_t v11 = *(void *)(v3 + 80);
    uint64_t v12 = *(void *)(v3 + 88);
    uint64_t v21 = *(void *)(v3 + 72);
    uint64_t v22 = *(void *)(v3 + 56);
    uint64_t v20 = *(void *)(v3 + 120);
    v23[0] = v22;
    uint64_t v24 = v7;
    __int16 v25 = v21 & 0xFF01;
    uint64_t v26 = v11;
    uint64_t v27 = v12;
    uint64_t v28 = v10;
    uint64_t v29 = v9;
    uint64_t v30 = v8;
    __int16 v31 = v20;
    uint64_t v32 = v19;
    uint64_t v33 = v18;
    uint64_t v13 = v1[27];
    uint64_t v14 = v1[28];
    sub_100008F88(v1 + 24, v13);
    char v17 = *(void (**)(uint64_t, uint64_t))(v14 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v13, v14);
    unsigned __int8 v15 = sub_1001AA724((uint64_t)v23);
    sub_100093F40(v22, v7);
    uint64_t v16 = *(unsigned __int8 *)(v2 + 41);
    if (v16 != v15)
    {
      sub_100004010(&qword_100393AA0);
      sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
      Subject<>.send()();
    }
    *(unsigned char *)(v2 + 41) = v15;
    return sub_100158284(v16);
  }
  return result;
}

uint64_t sub_1001AA724(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ConnectionClosed(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (unsigned __int8 *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010(&qword_100380780);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v44 - v12;
  sub_1000207A0((unsigned char *)a1, &v46);
  sub_1000207A0(&v46, &v47);
  if (v47 != 5
    || (uint64_t v14 = *(void *)(*(void *)(v2 + 48) + 112)
            + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed,
        swift_beginAccess(),
        sub_10000D2A0(v14, (uint64_t)v13, &qword_100380780),
        LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4),
        sub_10000950C((uint64_t)v13, &qword_100380780),
        v14 != 1))
  {
    if (*(unsigned char *)(*(void *)(v2 + 32) + 40) == 1)
    {
      uint64_t v19 = *(void *)(v2 + 48);
      uint64_t v20 = *(void *)(v19 + 112) + OBJC_IVAR____TtC8SOSBuddy21ConnectionClosedModel__connectionClosed;
      swift_beginAccess();
      sub_10000D2A0(v20, (uint64_t)v11, &qword_100380780);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
      {
        sub_10000950C((uint64_t)v11, &qword_100380780);
        uint64_t v21 = *(void *)(v19 + 32);
        if (*(void *)(v21 + 64))
        {
          int v22 = *(unsigned __int8 *)(v21 + 56);
          if (v22)
          {
            if (v22 != 5)
            {
              int v23 = *(unsigned __int8 *)(v2 + 337);
              uint64_t result = 1;
              if (v23 != v22 || (v23 - 7) > 0xFFFFFFFD) {
                return result;
              }
            }
          }
        }
        goto LABEL_25;
      }
      sub_10002D1E8((uint64_t)v11, (uint64_t)v7);
      Swift::Int v25 = sub_10026554C((uint64_t)&off_10034BAD0);
      Swift::Int v26 = *(void *)&v7[*(int *)(v4 + 24)];
      swift_bridgeObjectRetain();
      char v27 = sub_1001A1CAC(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27)
      {
        sub_10000CFFC((uint64_t)v7, type metadata accessor for ConnectionClosed);
        goto LABEL_25;
      }
      int v28 = *v7;
      sub_10000CFFC((uint64_t)v7, type metadata accessor for ConnectionClosed);
      if (!v28)
      {
LABEL_25:
        if ((*(_WORD *)(*(void *)(v2 + 120) + 56) & 0xC100) != 0) {
          return 6;
        }
        else {
          return 7;
        }
      }
    }
    else
    {
      unsigned int v24 = *(unsigned __int16 *)(*(void *)(v2 + 120) + 56);
      if (v24 >> 9 <= 0x7E)
      {
        if (v24 >= 0x4000) {
          return 1;
        }
        else {
          return 10;
        }
      }
    }
    return 1;
  }
  uint64_t result = *(unsigned __int8 *)(a1 + 17);
  if (!*(unsigned char *)(a1 + 17))
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000FD84(v29, (uint64_t)qword_1003A9958);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v31)) {
      goto LABEL_33;
    }
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    uint64_t v33 = "Inconsistent state: transport == .unknown when status == .on";
    goto LABEL_32;
  }
  if (result != 1) {
    return result;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  if ((sub_100078E0C(0, v16) & 1) == 0)
  {
    if (sub_100078E0C(1, v16))
    {
      if (*(unsigned char *)(*(void *)(v2 + 88) + 248)) {
        BOOL v34 = *(unsigned char *)(*(void *)(v2 + 88) + 248) == 3;
      }
      else {
        BOOL v34 = 1;
      }
      if (v34) {
        return 8;
      }
      else {
        return 5;
      }
    }
    if (sub_100078E0C(4, v16)) {
      return 9;
    }
    if (*(unsigned char *)(*(void *)(v2 + 32) + 40) == 1)
    {
      if (sub_100078E0C(2, v16)) {
        return 6;
      }
      if (sub_100078E0C(3, v16))
      {
        uint64_t v35 = *(void *)(v2 + 120);
        unsigned int v36 = *(unsigned __int16 *)(v35 + 56);
        if (v36 >> 9 <= 0x7E && (v36 & 0xC000) == 0x4000)
        {
          if ((v36 - 1) >= 5u) {
            return 11;
          }
          else {
            return 6;
          }
        }
        else
        {
          if (qword_10037DD80 != -1) {
            swift_once();
          }
          uint64_t v38 = type metadata accessor for Logger();
          sub_10000FD84(v38, (uint64_t)qword_1003A9958);
          swift_retain_n();
          uint64_t v39 = Logger.logObject.getter();
          os_log_type_t v40 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v39, v40))
          {
            uint64_t v41 = (uint8_t *)swift_slowAlloc();
            v44[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v41 = 136315138;
            LOWORD(v45) = *(_WORD *)(v35 + 56);
            sub_100004010(&qword_1003852F0);
            uint64_t v42 = String.init<A>(describing:)();
            uint64_t v45 = sub_1001B3178(v42, v43, v44);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v39, v40, "Inconsistent state: tryOutModel state (%s does not match stewieModel state (.tryOut service is active), falling back to .explorer stage", v41, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          return 6;
        }
      }
    }
    else
    {
      if (sub_100078E0C(3, v16)) {
        return 11;
      }
      if (*(void *)(v16 + 16)) {
        return 5;
      }
    }
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000FD84(v37, (uint64_t)qword_1003A9958);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v31))
    {
LABEL_33:

      return 0;
    }
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    uint64_t v33 = "Inconsistent state: no known active services when status == .on";
LABEL_32:
    _os_log_impl((void *)&_mh_execute_header, v30, v31, v33, v32, 2u);
    swift_slowDealloc();
    goto LABEL_33;
  }
  uint64_t v17 = *(void *)(v2 + 56);
  int v18 = *(unsigned __int8 *)(v17 + 128);
  if (v18 != 3 && *(unsigned char *)(v17 + 128)) {
    return 5;
  }
  if (v18 == 3 || *(unsigned __int8 *)(v17 + 96) >= 2u) {
    return 4;
  }
  else {
    return 3;
  }
}

uint64_t sub_1001AAE98(char a1)
{
  LODWORD(v2) = *(unsigned __int8 *)(v1[4] + 41);
  if ((a1 & 1) == 0)
  {
    if (v2 != 3) {
      return 0;
    }
    uint64_t v3 = *(void *)(v1[7] + 88);
    if (!v3) {
      return 0;
    }
    swift_beginAccess();
    uint64_t v2 = *(void *)(v3 + 144);
    uint64_t v4 = *(void *)(v2 + 16);
    if (v4) {
      return *(unsigned __int8 *)(v4 + v2 + 31) != 4;
    }
    __break(1u);
  }
  if (v2 != 8) {
    return 0;
  }
  uint64_t v5 = *(void *)(v1[11] + 104);
  if (!v5) {
    return 0;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v5 + 144);
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4) {
    return *(unsigned __int8 *)(v4 + v2 + 31) != 4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001AAF50()
{
  if (*(unsigned char *)(*(void *)(v0 + 32) + 41) == 3)
  {
    uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 88);
    if (v1)
    {
      uint64_t result = swift_beginAccess();
      uint64_t v3 = *(void *)(v1 + 144);
      uint64_t v4 = *(void *)(v3 + 16);
      if (!v4)
      {
        __break(1u);
        return result;
      }
      if (*(unsigned char *)(v4 + v3 + 31) != 4) {
        return 0;
      }
    }
  }
  if (sub_1001AAE98(1)) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_1001AAFE0()
{
  return sub_1001AB51C(&OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastEmergencyRequestInitiatedFromTheAppAt);
}

void sub_1001AAFEC(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  sub_1000E4904((uint64_t)a1);
  sub_1000E4904((uint64_t)a1);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v32 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    long long v8 = *((_OWORD *)a1 + 1);
    long long v33 = *(_OWORD *)a1;
    long long v34 = v8;
    long long v35 = *((_OWORD *)a1 + 2);
    sub_1000E4904((uint64_t)a1);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)&long long v33 = sub_1001B3178(v9, v10, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000E4930((uint64_t)a1);
    sub_1000E4930((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleEmergencyRequestStewie: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000E4930((uint64_t)a1);
    sub_1000E4930((uint64_t)a1);
  }

  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    *(void *)&long long v33 = v14;
    LOBYTE(v36) = *(unsigned char *)(*(void *)(v2 + 32) + 41);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v36 = sub_1001B3178(v15, v16, (uint64_t *)&v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "handleEmergencyRequestStewie: current stage: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100296FE4();
  uint64_t v17 = *(void *)(v2 + 96);
  if (qword_10037DD88 != -1) {
    swift_once();
  }
  sub_10000FD84(v4, (uint64_t)qword_1003A9970);
  int v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "cancelAllAlerts", v20, 2u);
    swift_slowDealloc();
  }

  unint64_t v21 = *(void *)(v17 + 56);
  if (v21)
  {
    uint64_t v22 = *(void *)(v17 + 48);
    swift_bridgeObjectRetain();
    sub_1001C92CC(v22, v21);
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = *a1;
  uint64_t v24 = *((void *)a1 + 1);
  uint64_t v25 = *((void *)a1 + 3);
  uint64_t v26 = a1[16] & 1;
  __int16 v27 = a1[32] & 1;
  __int16 v28 = sub_1001AAFE0();
  *(void *)&long long v33 = v23;
  *((void *)&v33 + 1) = v24;
  *(void *)&long long v34 = v26;
  *((void *)&v34 + 1) = v25;
  LOWORD(v35) = v27 | (v28 << 8);
  sub_10028BC4C((uint64_t)&v33);
  sub_1001ACE2C(a1[35]);
  sub_100276B24(2);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  sub_10000FD84(v32, (uint64_t)qword_1003A9988);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "fetchConnectionAssistantState", v31, 2u);
    swift_slowDealloc();
  }

  sub_100114548(0, 0);
}

uint64_t sub_1001AB510()
{
  return sub_1001AB51C(&OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastRoadsideRequestInitiatedFromTheAppAt);
}

uint64_t sub_1001AB51C(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v20 - v11;
  uint64_t v13 = v1 + *a1;
  swift_beginAccess();
  sub_10000D2A0(v13, (uint64_t)v5, &qword_100380788);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000950C((uint64_t)v5, &qword_100380788);
    return 2;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  static DispatchTime.now()();
  unint64_t v15 = DispatchTime.uptimeNanoseconds.getter();
  if (DispatchTime.uptimeNanoseconds.getter() >= v15) {
    goto LABEL_6;
  }
  unint64_t v16 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v17 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t v18 = v16 - v17;
  if (v16 < v17)
  {
    __break(1u);
LABEL_6:
    unint64_t v18 = 0;
  }
  os_log_type_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  v19(v12, v6);
  return v18 < 0x3B9ACA00;
}

void sub_1001AB750(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  sub_10015677C(a1);
  sub_10015677C(a1);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v34 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    long long v9 = *(_OWORD *)(a1 + 16);
    long long v35 = *(_OWORD *)a1;
    long long v36 = v9;
    long long v37 = *(_OWORD *)(a1 + 32);
    uint64_t v38 = *(void *)(a1 + 48);
    uint64_t v39 = v8;
    sub_10015677C(a1);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)&long long v35 = sub_1001B3178(v10, v11, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001567A8(a1);
    sub_1001567A8(a1);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleRoadsideAssistanceRequestStewie: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001567A8(a1);
    sub_1001567A8(a1);
  }

  swift_retain_n();
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446210;
    *(void *)&long long v35 = v15;
    LOBYTE(v39) = *(unsigned char *)(*(void *)(v2 + 32) + 41);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v39 = sub_1001B3178(v16, v17, (uint64_t *)&v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "handleRoadsideAssistanceRequestStewie: current stage: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100296FE4();
  uint64_t v18 = *(void *)(v2 + 96);
  if (qword_10037DD88 != -1) {
    swift_once();
  }
  sub_10000FD84(v4, (uint64_t)qword_1003A9970);
  os_log_type_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "cancelAllAlerts", v21, 2u);
    swift_slowDealloc();
  }

  unint64_t v22 = *(void *)(v18 + 56);
  if (v22)
  {
    uint64_t v23 = *(void *)(v18 + 48);
    swift_bridgeObjectRetain();
    sub_1001C92CC(v23, v22);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *(void *)a1;
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v27 = *(unsigned char *)(a1 + 8) & 1;
  uint64_t v28 = *(unsigned char *)(a1 + 24) & 1;
  __int16 v29 = *(unsigned char *)(a1 + 40) & 1;
  __int16 v30 = sub_1001AB510();
  *(void *)&long long v35 = v24;
  *((void *)&v35 + 1) = v27;
  *(void *)&long long v36 = v25;
  *((void *)&v36 + 1) = v28;
  *(void *)&long long v37 = v26;
  WORD4(v37) = v29 | (v30 << 8);
  sub_10006B824((uint64_t)&v35);
  sub_1001ACE2C(*(unsigned char *)(a1 + 43));
  sub_100276B24(2);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  sub_10000FD84(v34, (uint64_t)qword_1003A9988);
  os_log_type_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    long long v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "fetchConnectionAssistantState", v33, 2u);
    swift_slowDealloc();
  }

  sub_100114548(0, 0);
}

uint64_t sub_1001ABC84(_OWORD *a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000E4930((uint64_t)a1);
    sub_1000E4930((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "handleAlertRequest: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000E4930((uint64_t)a1);
    sub_1000E4930((uint64_t)a1);
  }

  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  long long v10 = a1[1];
  *(_OWORD *)(v9 + 24) = *a1;
  *(_OWORD *)(v9 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v10;
  *(_OWORD *)(v9 + 56) = a1[2];
  sub_1000E4904((uint64_t)a1);
  swift_retain();
  sub_10006D47C((void (*)(void))sub_1001B5F04, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1001ABEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001ABFBC(a1, *(void *)(a3 + 8), *(unsigned char *)(a3 + 16), v8, v6);
    sub_1001ABFBC(a1, *(void *)(a3 + 24), *(unsigned char *)(a3 + 32), v9, v7);
    sub_1001B5320((unsigned char *)a3, v8, v9);
    sub_100075EA8(v9, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(v8, (void (*)(void, void, void, void, void))sub_100075E64);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001ABFBC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>, __n128 a5@<Q0>)
{
  if (a3 & 1) == 0 && (uint64_t v6 = result, *(void *)(result + 16)) && (result = sub_1001C92C8(a2, a5), (v7))
  {
    uint64_t v8 = *(void *)(v6 + 56) + 40 * result;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t v11 = *(void *)(v8 + 16);
    uint64_t v12 = *(unsigned __int8 *)(v8 + 24);
    int v13 = *(unsigned __int8 *)(v8 + 25);
    uint64_t v14 = *(void *)(v8 + 32);
    uint64_t v15 = 256;
    if (!v13) {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v15 | v12;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v16 = 0;
    uint64_t v14 = 0;
  }
  *a4 = v9;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v16;
  a4[4] = v14;
  return result;
}

uint64_t sub_1001AC06C(char a1, uint64_t a2)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)char v7 = 136446210;
    uint64_t v8 = String.init<A>(describing:)();
    sub_1001B3178(v8, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleOfferRequest: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(unsigned char *)(v11 + 24) = a1 & 1;
  *(void *)(v11 + 32) = a2;
  swift_retain();
  swift_retain();
  sub_1001ACE2C(0);
  sub_100276B24(2);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "fetchConnectionAssistantState", v14, 2u);
    swift_slowDealloc();
  }

  sub_100114548((uint64_t)sub_1001B5EB4, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_1001AC394(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_10002A4D8(a2 & 1);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1001AC41C(char a1, uint64_t a2)
{
}

void sub_1001AC438(char a1, uint64_t a2)
{
}

void sub_1001AC454(char a1, uint64_t a2, uint64_t a3, const char *a4, const char *a5)
{
  uint64_t v7 = v5;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000FD84(v9, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    v27[1] = a2;
    uint64_t v28 = v13;
    swift_retain();
    uint64_t v14 = String.init<A>(describing:)();
    v27[0] = sub_1001B3178(v14, v15, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a4, v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446210;
    v27[0] = v19;
    LOBYTE(v28) = *(unsigned char *)(*(void *)(v7 + 32) + 41);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v28 = sub_1001B3178(v20, v21, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, a5, v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100296FE4();
  sub_1001ACE2C(a1 & 1);
  sub_100276B24(2);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  sub_10000FD84(v9, (uint64_t)qword_1003A9988);
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "fetchConnectionAssistantState", v24, 2u);
    swift_slowDealloc();
  }

  sub_100114548(0, 0);
}

void sub_1001AC858(__int16 a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  int v3 = a1 & 0x100;
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v20 = v8;
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    sub_1001B3178(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "handleOfferTryOutRequest: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v12 = *(unsigned __int16 *)(v11 + 56);
  if (v12 >> 9 > 0x7E)
  {
    __int16 v13 = a1;
LABEL_14:
    sub_100004010(&qword_100393AA0);
    sub_100009B18((unint64_t *)&qword_10037FD40, &qword_100393AA0);
    Subject<>.send()();
LABEL_15:
    *(_WORD *)(v11 + 56) = v13;
    sub_10029727C(v12);
    goto LABEL_16;
  }
  if (v12 >> 14 != 1)
  {
    __int16 v13 = a1;
    if (!(v12 >> 14) && !(v12 & 0x100 | (v12 ^ a1))) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "handleOfferTryOutRequest: TryOut mode is already active, ignoring", v16, 2u);
    swift_slowDealloc();
  }

  int v3 = a1 & 0x100;
LABEL_16:
  sub_1001ACE2C(v3 != 0);
  sub_100276B24(2);
  if (qword_10037DD90 != -1) {
    swift_once();
  }
  sub_10000FD84(v4, (uint64_t)qword_1003A9988);
  os_log_type_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "fetchConnectionAssistantState", v19, 2u);
    swift_slowDealloc();
  }

  sub_100114548(0, 0);
}

void sub_1001ACC48(char a1)
{
  char v1 = a1 & 1;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v9 = v6;
    swift_retain();
    uint64_t v7 = String.init<A>(describing:)();
    sub_1001B3178(v7, v8, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "handleOpenCommand: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_1001ACE2C(v1);
}

void sub_1001ACE2C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = type metadata accessor for DispatchQoS();
  Class isa = v8[-1].isa;
  os_log_t v37 = v8;
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v17 = (char *)&v30 - v16;
  if (*(unsigned char *)(v2[3] + 80))
  {
    sub_1001AA4AC();
    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {
    if (a1)
    {
      uint64_t v34 = v2[3];
      uint64_t v35 = v15;
      uint64_t v19 = v2[27];
      uint64_t v18 = v2[28];
      sub_100008F88(v2 + 24, v19);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 96);
      uint64_t v33 = v5;
      v20(v19, v18);
      sub_10001E6FC(0, (unint64_t *)&qword_100387440);
      uint64_t v31 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      unint64_t v21 = *(void (**)(char *, uint64_t))(v35 + 8);
      v35 += 8;
      os_log_type_t v32 = v21;
      v21(v14, v11);
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      aBlock[4] = sub_1001B5E90;
      aBlock[5] = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100207A1C;
      void aBlock[3] = &unk_10035BCB0;
      os_log_type_t v23 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1001B5920((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100004010((uint64_t *)&unk_10037FF80);
      sub_100009B18((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v24 = (void *)v31;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
      (*((void (**)(char *, os_log_t))isa + 1))(v10, v37);
      v32(v17, v11);
      sub_1001AA4AC();
LABEL_5:
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_100157A04((uint64_t)sub_1001B5E88, v25);
      swift_release_n();
      return;
    }
    sub_1001AA4AC();
  }
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_10000FD84(v26, (uint64_t)qword_1003A9958);
  os_log_t v37 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v27, "_postHandleRequest: skipping bringForeground", v28, 2u);
    swift_slowDealloc();
  }
  os_log_t v29 = v37;
}

uint64_t sub_1001AD3AC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001AA4AC();
    return swift_release();
  }
  return result;
}

void sub_1001AD404(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a1 & 1) == 0 && (*(unsigned char *)(*(void *)(Strong + 72) + 48))
    {
      *(unsigned char *)(Strong + 336) = 1;
      if (qword_10037DD80 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10000FD84(v3, (uint64_t)qword_1003A9958);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Scheduled delayed bringForegroundOnUnlock request", v6, 2u);
        swift_slowDealloc();
        swift_release();

        return;
      }
    }
    else
    {
      *(unsigned char *)(Strong + 336) = 2;
    }
    swift_release();
  }
}

BOOL sub_1001AD54C()
{
  uint64_t v1 = v0[4];
  int v2 = *(unsigned __int8 *)(v1 + 41);
  BOOL result = 1;
  switch(*(unsigned char *)(v1 + 41))
  {
    case 3:
      uint64_t v4 = *(void *)(v0[7] + 88);
      if (!v4) {
        return v2 == 9;
      }
      swift_beginAccess();
      uint64_t v5 = *(void *)(v4 + 144);
      uint64_t v6 = *(void *)(v5 + 16);
      if (!v6)
      {
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x1001AD650);
      }
      return *(unsigned char *)(v6 + v5 + 31) == 4 || v2 == 9;
    case 5:
      return result;
    case 6:
      if (*(unsigned char *)(v1 + 42)) {
        return result;
      }
      return 0;
    case 8:
      uint64_t v7 = *(void *)(v0[11] + 104);
      if (!v7) {
        return 0;
      }
      swift_beginAccess();
      uint64_t v8 = *(void *)(v7 + 144);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9) {
        return *(unsigned char *)(v9 + v8 + 31) == 4;
      }
      goto LABEL_15;
    default:
      return v2 == 9;
  }
}

uint64_t sub_1001AD668()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 192);
  swift_release();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 240);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastEmergencyRequestInitiatedFromTheAppAt, &qword_100380788);
  sub_10000950C(v0 + OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastRoadsideRequestInitiatedFromTheAppAt, &qword_100380788);
  return v0;
}

uint64_t sub_1001AD7B8()
{
  sub_1001AD668();

  return swift_deallocClassInstance();
}

uint64_t sub_1001AD810()
{
  return type metadata accessor for SOSBuddyEnvironment();
}

uint64_t type metadata accessor for SOSBuddyEnvironment()
{
  uint64_t result = qword_10038ADE8;
  if (!qword_10038ADE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001AD864()
{
  sub_10002D190();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t getEnumTagSinglePayload for SOSBuddyEnvironment.EndSession(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  if (*a1 <= 5u) {
    int v6 = 5;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 6;
  if (*a1 < 5u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SOSBuddyEnvironment.EndSession(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001ADADCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SOSBuddyEnvironment.EndSession()
{
  return &type metadata for SOSBuddyEnvironment.EndSession;
}

void *sub_1001ADB14()
{
  uint64_t v1 = v0;
  type metadata accessor for AppEvents();
  swift_allocObject();
  v0[2] = sub_100100A80();
  type metadata accessor for AppPropertiesModel();
  swift_allocObject();
  v0[3] = sub_100156A7C();
  type metadata accessor for AppRuntimeStateModel();
  swift_allocObject();
  v0[4] = sub_100158784();
  type metadata accessor for BannerAppearanceModel();
  swift_allocObject();
  v0[5] = sub_100287B34();
  type metadata accessor for ConnectionAssistantModels();
  swift_allocObject();
  v0[6] = sub_10020E084();
  type metadata accessor for EmergencyModel();
  swift_allocObject();
  v0[7] = sub_10028BE54();
  type metadata accessor for GeoLocationModel();
  swift_allocObject();
  v0[8] = sub_100018830();
  type metadata accessor for LockScreenModel();
  swift_allocObject();
  v0[9] = sub_1001489B4();
  type metadata accessor for OfferModel();
  swift_allocObject();
  v0[10] = sub_1000298F4();
  type metadata accessor for RoadsideAssistanceModel();
  swift_allocObject();
  v0[11] = sub_10006A060();
  type metadata accessor for TransitionAlertModel();
  swift_allocObject();
  v0[12] = sub_1001CA37C();
  type metadata accessor for StewieStateModel();
  swift_allocObject();
  v0[13] = sub_100093424();
  type metadata accessor for TimeZoneModel();
  swift_allocObject();
  v0[14] = sub_10008D340();
  type metadata accessor for TryOutModel();
  swift_allocObject();
  v0[15] = sub_100299B48();
  type metadata accessor for OffTheGridModel();
  swift_allocObject();
  v0[16] = sub_1000247B8();
  type metadata accessor for UIMetrics();
  swift_allocObject();
  v0[17] = sub_100082788();
  type metadata accessor for BackgroundActivityAgent();
  swift_allocObject();
  v0[18] = sub_1000F9928();
  v0[19] = [objc_allocWithZone((Class)type metadata accessor for CoreTelephonySPIAgent()) init];
  type metadata accessor for FindMyAgent();
  swift_allocObject();
  v0[20] = sub_10008CAE8();
  type metadata accessor for MessagesAgent();
  swift_allocObject();
  v0[21] = sub_100174D38();
  type metadata accessor for SettingsAgent();
  swift_allocObject();
  v0[22] = sub_10012B364();
  type metadata accessor for TelephonyUtilitiesAgent();
  swift_allocObject();
  v0[23] = sub_100245850();
  if (SBUIIsSystemApertureEnabled())
  {
    uint64_t v2 = type metadata accessor for _SessionEnvironmentBannerSession();
    swift_allocObject();
    int v3 = sub_1002A0D40();
    unsigned int v4 = &off_1003630F0;
  }
  else
  {
    uint64_t v2 = type metadata accessor for _SessionEnvironmentBannerKitStatusBar();
    swift_allocObject();
    int v3 = sub_1002A3B40();
    unsigned int v4 = &off_100363080;
  }
  v0[27] = v2;
  v0[28] = v4;
  v0[24] = v3;
  type metadata accessor for DeepLinkHandler();
  swift_allocObject();
  v0[29] = sub_100171D7C();
  uint64_t v5 = type metadata accessor for _HapticFeedback(0);
  swift_allocObject();
  uint64_t v6 = sub_1001DFBC8();
  v0[33] = v5;
  v0[34] = &off_10035D730;
  v0[30] = v6;
  type metadata accessor for VoiceOverFeedback();
  int v7 = (void *)swift_allocObject();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    int v8 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    int v8 = _swiftEmptySetSingleton;
  }
  void v7[3] = 0;
  _OWORD v7[4] = 0;
  v7[2] = v8;
  v1[35] = v7;
  type metadata accessor for LockScreenNotification();
  swift_allocObject();
  v1[36] = sub_10002AA94();
  type metadata accessor for SOSBuddyPersistence();
  swift_allocObject();
  v1[37] = sub_1001640BC();
  type metadata accessor for Analytics();
  swift_allocObject();
  v1[38] = sub_100140C20();
  type metadata accessor for DeviceOrientationTracker();
  swift_allocObject();
  v1[39] = sub_100173F58();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v9 = (void *)sub_100265020((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v9 = _swiftEmptySetSingleton;
  }
  v1[40] = v9;
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  v1[41] = PassthroughSubject.init()();
  *((_WORD *)v1 + 168) = 1538;
  unint64_t v10 = (char *)v1 + OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastEmergencyRequestInitiatedFromTheAppAt;
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12((char *)v1 + OBJC_IVAR____TtC8SOSBuddy19SOSBuddyEnvironment__lastRoadsideRequestInitiatedFromTheAppAt, 1, 1, v11);
  return v1;
}

id sub_1001AE068(void *a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  id v3 = a1;
  unsigned int v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    __src[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    id v7 = [v3 requestIdentifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    v45[0] = sub_1001B3178(v8, v10, __src);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "createBannerContentFor(%{public}s)", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v12 = *(void **)(v40 + 136);
  uint64_t v13 = v12 + 6;
  uint64_t v14 = v12[9];
  uint64_t v15 = v12[10];
  sub_100008F88(v12 + 6, v14);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 8))(__src, v14, v15);
  uint64_t v16 = self;
  id v17 = [v16 systemGray5Color];
  [v11 setBackgroundColor:v17];

  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)__src);
  [v11 setAutoresizingMask:18];
  id v18 = [v11 layer];
  uint64_t v19 = v12[9];
  uint64_t v20 = v12[10];
  sub_100008F88(v13, v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 8))(__src, v19, v20);
  [v18 setCornerRadius:30.0];

  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)__src);
  id v21 = [v11 layer];
  [v21 setCornerCurve:kCACornerCurveContinuous];

  id v22 = [v11 layer];
  [v22 setMasksToBounds:1];

  type metadata accessor for BannerAppearanceModel();
  sub_1001B5920(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
  uint64_t v23 = EnvironmentObject.init()();
  sub_1001B10A4(v23, v24, __src);
  LOBYTE(v22) = static Edge.Set.all.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v45, __dst, sizeof(v45));
  uint64_t v25 = *(void *)(v40 + 40);
  double v26 = *(double *)(v25 + 32);
  double v27 = *(double *)(v25 + 40);
  uint64_t v28 = (objc_class *)sub_100004010(&qword_10038B180);
  id v29 = objc_allocWithZone(v28);
  objc_allocWithZone((Class)sub_100004010(&qword_10038B188));
  memcpy(__src, v45, sizeof(__src));
  char v43 = (char)v22;
  sub_1001B5968((uint64_t)__dst);
  sub_1001B5968((uint64_t)__dst);
  uint64_t v30 = (char *)v29;
  uint64_t v31 = (void *)UIHostingController.init(rootView:)();
  *(void *)&v30[qword_10037F4D0] = v31;
  id v32 = v31;
  UIHostingController.safeAreaRegions.setter();

  v41.receiver = v30;
  v41.super_class = v28;
  uint64_t v33 = (char *)[super initWithFrame:0.0, 0.0, v26, v27];
  uint64_t v34 = *(void **)&v33[qword_10037F4D0];
  uint64_t v35 = v33;
  id v36 = [v34 view];
  if (v36)
  {
    os_log_t v37 = v36;
    id v38 = [v16 clearColor];
    [v37 setBackgroundColor:v38];

    [v37 setFrame:0.0, 0.0, v26, v27];
    [v35 addSubview:v37];
    [v37 setAutoresizesSubviews:1];
  }
  [v35 setAutoresizesSubviews:1];
  [v35 setAutoresizingMask:16];

  sub_1001B5C00((uint64_t)__dst);
  [v11 addSubview:v35];

  sub_1001B5C00((uint64_t)__dst);
  return v11;
}

char *sub_1001AE608(void *a1)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  id v3 = a1;
  unsigned int v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    __src[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    id v7 = [v3 requestIdentifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    v84[0] = sub_1001B3178(v8, v10, __src);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "createSessionContent(%{public}s)", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  type metadata accessor for BannerAppearanceModel();
  sub_1001B5920(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
  uint64_t v11 = EnvironmentObject.init()();
  sub_1001B10A4(v11, v12, __src);
  char v13 = static Edge.Set.all.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v84, __dst, sizeof(v84));
  uint64_t v14 = (objc_class *)sub_100004010(&qword_10038B138);
  uint64_t v15 = objc_allocWithZone(v14);
  v15[qword_100386440] = 0;
  objc_allocWithZone((Class)sub_100004010(&qword_10038B140));
  memcpy(__src, v84, sizeof(__src));
  char v82 = v13;
  uint64_t v16 = v15;
  sub_1001B5968((uint64_t)__dst);
  id v17 = (void *)UIHostingController.init(rootView:)();
  *(void *)&v16[qword_100386448] = v17;
  id v18 = v17;
  UIHostingController.safeAreaRegions.setter();

  v80.receiver = v16;
  v80.super_class = v14;
  uint64_t v19 = (char *)objc_msgSendSuper2(&v80, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = *(void **)&v19[qword_100386448];
  id v21 = v19;
  id v22 = [v20 view];
  if (v22)
  {
    id v23 = [self clearColor];
    [v22 setBackgroundColor:v23];

    [v21 addSubview:v22];
    [v22 setAutoresizesSubviews:1];
  }
  [v21 setAutoresizesSubviews:1];
  [v21 setAutoresizingMask:0];

  sub_1001B5C00((uint64_t)__dst);
  uint64_t v24 = EnvironmentObject.init()();
  sub_1001B10A4(v24, v25, __src);
  char v26 = static Edge.Set.all.getter();
  swift_release();
  memcpy(v78, __src, sizeof(v78));
  memcpy(v79, v78, sizeof(v79));
  double v27 = (objc_class *)sub_100004010(&qword_10038B148);
  uint64_t v28 = objc_allocWithZone(v27);
  v28[qword_100386440] = 1;
  objc_allocWithZone((Class)sub_100004010(&qword_10038B150));
  memcpy(__src, v79, sizeof(__src));
  char v82 = v26;
  id v29 = v28;
  sub_1001B5968((uint64_t)v78);
  uint64_t v30 = (void *)UIHostingController.init(rootView:)();
  *(void *)&v29[qword_100386448] = v30;
  id v31 = v30;
  UIHostingController.safeAreaRegions.setter();

  v77.receiver = v29;
  v77.super_class = v27;
  id v32 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v33 = *(void **)&v32[qword_100386448];
  uint64_t v34 = v32;
  id v35 = [v33 view];
  if (v35)
  {
    id v36 = v35;
    id v37 = [self clearColor];
    [v36 setBackgroundColor:v37];

    [v34 addSubview:v36];
    [v36 setAutoresizesSubviews:1];
  }
  [v34 setAutoresizesSubviews:1];
  [v34 setAutoresizingMask:0];

  sub_1001B5C00((uint64_t)v78);
  uint64_t v38 = EnvironmentObject.init()();
  sub_1001B10A4(v38, v39, __src);
  char v40 = static Edge.Set.all.getter();
  swift_release();
  memcpy(v75, __src, sizeof(v75));
  memcpy(v76, v75, sizeof(v76));
  objc_super v41 = (objc_class *)sub_100004010(&qword_10038B158);
  uint64_t v42 = objc_allocWithZone(v41);
  v42[qword_100386440] = 2;
  objc_allocWithZone((Class)sub_100004010(&qword_10038B160));
  memcpy(__src, v76, sizeof(__src));
  char v82 = v40;
  char v43 = v42;
  sub_1001B5968((uint64_t)v75);
  uint64_t v44 = (void *)UIHostingController.init(rootView:)();
  *(void *)&v43[qword_100386448] = v44;
  id v45 = v44;
  UIHostingController.safeAreaRegions.setter();

  v74.receiver = v43;
  v74.super_class = v41;
  char v46 = (char *)objc_msgSendSuper2(&v74, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  char v47 = *(void **)&v46[qword_100386448];
  uint64_t v48 = v46;
  id v49 = [v47 view];
  if (v49)
  {
    uint64_t v50 = v49;
    id v51 = [self clearColor];
    [v50 setBackgroundColor:v51];

    [v48 addSubview:v50];
    [v50 setAutoresizesSubviews:1];
  }
  [v48 setAutoresizesSubviews:1];
  [v48 setAutoresizingMask:0];

  sub_1001B5C00((uint64_t)v75);
  uint64_t v52 = EnvironmentObject.init()();
  sub_1001B10A4(v52, v53, __src);
  char v54 = static Edge.Set.all.getter();
  swift_release();
  memcpy(v72, __src, sizeof(v72));
  memcpy(v73, v72, sizeof(v73));
  uint64_t v55 = *(void *)(v70 + 40);
  double v56 = *(double *)(v55 + 64);
  double v57 = *(double *)(v55 + 72);
  uint64_t v58 = (objc_class *)sub_100004010(&qword_10038B168);
  id v59 = objc_allocWithZone(v58);
  objc_allocWithZone((Class)sub_100004010(&qword_10038B170));
  memcpy(__src, v73, sizeof(__src));
  char v82 = v54;
  uint64_t v60 = (char *)v59;
  sub_1001B5968((uint64_t)v72);
  uint64_t v61 = (void *)UIHostingController.init(rootView:)();
  *(void *)&v60[qword_10037F4D0] = v61;
  id v62 = v61;
  UIHostingController.safeAreaRegions.setter();

  v71.receiver = v60;
  v71.super_class = v58;
  uint64_t v63 = (char *)objc_msgSendSuper2(&v71, "initWithFrame:", 0.0, 0.0, v56, v57);
  uint64_t v64 = *(void **)&v63[qword_10037F4D0];
  uint64_t v65 = v63;
  id v66 = [v64 view];
  if (v66)
  {
    uint64_t v67 = v66;
    id v68 = [self clearColor];
    [v67 setBackgroundColor:v68];

    [v67 setFrame:0.0, 0.0, v56, v57];
    [v65 addSubview:v67];
    [v67 setAutoresizesSubviews:1];
  }
  [v65 setAutoresizesSubviews:1];
  [v65 setAutoresizingMask:0];

  sub_1001B5C00((uint64_t)v72);
  return v21;
}

uint64_t sub_1001AEF5C(uint64_t a1, uint64_t a2)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9958);
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Fetching my phone numbers", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = a1;
  _OWORD v9[4] = a2;
  swift_retain();
  swift_retain();
  sub_1002746F4((uint64_t)sub_1001AF794, (uint64_t)v9);
  swift_release();

  return swift_release();
}

uint64_t sub_1001AF0D8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v52 = a1;
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004010(&qword_100382428);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    swift_release();
    if (!Strong) {
      return ((uint64_t (*)(void))a3)(0);
    }
    uint64_t countAndFlagsBits = v6;
    if (qword_10037DD80 == -1) {
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_4:
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000FD84(v18, (uint64_t)qword_1003A9958);
  uint64_t v19 = v52;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v20, v21))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v27 = countAndFlagsBits;
    if (v19) {
      goto LABEL_6;
    }
    return ((uint64_t (*)(void))a3)(0);
  }
  id v22 = (uint8_t *)swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  uint64_t v50 = (void (*)(void *))v5;
  *(_DWORD *)id v22 = 136315138;
  uint64_t v54 = v52;
  uint64_t v55 = v23;
  swift_bridgeObjectRetain();
  sub_100004010(&qword_100382450);
  uint64_t v24 = String.init<A>(describing:)();
  uint64_t v54 = sub_1001B3178(v24, v25, &v55);
  uint64_t v26 = v52;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v20, v21, "My phone numbers fetched: %s", v22, 0xCu);
  swift_arrayDestroy();
  uint64_t v5 = (uint64_t)v50;
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v27 = countAndFlagsBits;
  if (!v26) {
    return ((uint64_t (*)(void))a3)(0);
  }
LABEL_6:
  uint64_t v50 = (void (*)(void *))a3;
  static Locale.autoupdatingCurrent.getter();
  Locale.region.getter();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
  uint64_t v28 = type metadata accessor for Locale.Region();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v11, 1, v28) == 1)
  {
    sub_10000950C((uint64_t)v11, &qword_100382428);
    uint64_t countAndFlagsBits = 0;
    unint64_t object = 0;
  }
  else
  {
    Locale.Region.identifier.getter();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
    Swift::String v32 = String.lowercased()();
    uint64_t countAndFlagsBits = v32._countAndFlagsBits;
    unint64_t object = v32._object;
    swift_bridgeObjectRelease();
  }
  type metadata accessor for PhoneNumberFormatter();
  uint64_t inited = swift_initStackObject();
  uint64_t v34 = v52;
  *(void *)(inited + 16) = countAndFlagsBits;
  *(void *)(inited + 24) = object;
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = inited;
    swift_retain();
    uint64_t v36 = v34 + 40;
    id v37 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      NSString v38 = String._bridgeToObjectiveC()();
      if (object) {
        NSString v39 = String._bridgeToObjectiveC()();
      }
      else {
        NSString v39 = 0;
      }
      char v40 = (void *)CFPhoneNumberCreate();

      uint64_t String = CFPhoneNumberCreateString();
      if (String)
      {
        uint64_t v42 = (void *)String;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v45 = v44;
        swift_bridgeObjectRelease();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v37 = sub_1001B1A30(0, v37[2] + 1, 1, v37);
        }
        unint64_t v47 = v37[2];
        unint64_t v46 = v37[3];
        if (v47 >= v46 >> 1) {
          id v37 = sub_1001B1A30((void *)(v46 > 1), v47 + 1, 1, v37);
        }
        void v37[2] = v47 + 1;
        uint64_t v48 = &v37[2 * v47];
        v48[4] = v43;
        v48[5] = v45;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v36 += 16;
      --v35;
    }
    while (v35);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v37 = _swiftEmptyArrayStorage;
  }
  v50(v37);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001AF758()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AF794(uint64_t a1)
{
  return sub_1001AF0D8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001AF7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(*(void *)(a1 + 264) + 32) & 1) == 0)
  {
    if (qword_10037DD80 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000FD84(v14, (uint64_t)qword_1003A9958);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Transitioning back to roadside", v17, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a3;
    swift_retain();
    uint64_t v12 = sub_1001B64C4;
    uint64_t v13 = 3;
    goto LABEL_14;
  }
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9958);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Transitioning back to emergency", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 32);
  if (*(void *)(v10 + 64) && (sub_100078E0C(0, *(void *)(v10 + 80)) & 1) != 0)
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a3;
    swift_retain();
    uint64_t v12 = sub_1001B64A0;
    uint64_t v13 = 2;
LABEL_14:
    sub_1002734A4(v13, 0x80u, (uint64_t)v12, v11);
    goto LABEL_18;
  }
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Transitioning back to emergency - Stewie emergency is not allowed, placing a call", v20, 2u);
    swift_slowDealloc();
  }

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = a3;
  swift_retain();
  sub_100245EDC((uint64_t)sub_1001B6498, v21);
LABEL_18:

  return swift_release();
}

uint64_t sub_1001AFAC0(uint64_t a1, uint64_t (*a2)(BOOL), uint64_t a3, const char *a4)
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000FD84(v7, (uint64_t)qword_1003A9958);
  swift_errorRetain();
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67240192;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a4, v10, 8u);
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }

  return a2(a1 == 0);
}

uint64_t sub_1001AFC1C(uint64_t a1, uint64_t (*a2)(void))
{
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000FD84(v3, (uint64_t)qword_1003A9958);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Emergency call request, success: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }

  return a2(0);
}

uint64_t sub_1001AFD54()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 88);
  if (v1
    && (swift_beginAccess(), uint64_t v2 = *(void *)(v1 + 64), *(void *)(v2 + 16))
    && (uint64_t v3 = sub_1001BEB10(1), (v4 & 1) != 0))
  {
    sub_1000A30C0(*(void *)(v2 + 56) + 32 * v3, (uint64_t)v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_10000D544((uint64_t)v10, (uint64_t)v8, &qword_10038D290);
  if (!v9)
  {
    sub_10000950C((uint64_t)v8, &qword_10038D290);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v6 == 1) {
    return v7 ^ 1u;
  }
  else {
    return 0;
  }
}

BOOL sub_1001AFE3C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 104);
  if (!v1) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 64);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v3 = sub_1001BEB10(5);
  if ((v4 & 1) == 0) {
    return 0;
  }
  sub_1000A30C0(*(void *)(v2 + 56) + 32 * v3, (uint64_t)v9);
  swift_retain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    return 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v5 = *(void *)v7 & 0xFFFFFFFFFFFFLL;
  }
  return v5 != 0;
}

uint64_t sub_1001AFF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v65 = *(_OWORD *)(a1 + 16);
  long long v66 = *(_OWORD *)a1;
  uint64_t v63 = *(void *)(a1 + 40);
  uint64_t v64 = *(void *)(a1 + 32);
  uint64_t v62 = *(void *)(a1 + 56);
  char v61 = *(unsigned char *)(a1 + 64);
  uint64_t v60 = *(void *)(a1 + 72);
  char v59 = *(unsigned char *)(a1 + 48) & 1;
  uint64_t v57 = v2[2];
  type metadata accessor for AppEvents();
  sub_1001B5920((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v58 = static ObservableObject.environmentStore.getter();
  uint64_t v55 = v2[3];
  type metadata accessor for AppPropertiesModel();
  swift_retain();
  sub_1001B64E8(a1);
  sub_1001B5920(&qword_1003852A0, (void (*)(uint64_t))type metadata accessor for AppPropertiesModel);
  uint64_t v56 = static ObservableObject.environmentStore.getter();
  uint64_t v53 = v2[4];
  type metadata accessor for AppRuntimeStateModel();
  sub_1001B5920(&qword_100380B58, (void (*)(uint64_t))type metadata accessor for AppRuntimeStateModel);
  swift_retain();
  uint64_t v54 = static ObservableObject.environmentStore.getter();
  uint64_t v51 = v2[5];
  type metadata accessor for BannerAppearanceModel();
  sub_1001B5920(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
  swift_retain();
  uint64_t v52 = static ObservableObject.environmentStore.getter();
  uint64_t v5 = (void *)v2[6];
  uint64_t v50 = v5[14];
  type metadata accessor for ConnectionClosedModel(0);
  sub_1001B5920(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  swift_retain();
  swift_retain();
  uint64_t v6 = static ObservableObject.environmentStore.getter();
  uint64_t v48 = v5[9];
  uint64_t v49 = v6;
  type metadata accessor for ConnectionModel(0);
  sub_1001B5920(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
  swift_retain();
  uint64_t v7 = static ObservableObject.environmentStore.getter();
  uint64_t v46 = v5[12];
  uint64_t v47 = v7;
  type metadata accessor for ConnectivityModel();
  sub_1001B5920(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  swift_retain();
  uint64_t v8 = static ObservableObject.environmentStore.getter();
  uint64_t v44 = v5[8];
  uint64_t v45 = v8;
  type metadata accessor for GuidanceMessagesModel();
  sub_1001B5920(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  swift_retain();
  uint64_t v9 = static ObservableObject.environmentStore.getter();
  uint64_t v42 = v5[7];
  uint64_t v43 = v9;
  type metadata accessor for GuidanceModel(0);
  sub_1001B5920(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  swift_retain();
  uint64_t v10 = static ObservableObject.environmentStore.getter();
  uint64_t v40 = v5[3];
  uint64_t v41 = v10;
  type metadata accessor for OrientationModel();
  sub_1001B5920(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  swift_retain();
  uint64_t v11 = static ObservableObject.environmentStore.getter();
  uint64_t v38 = v5[15];
  uint64_t v39 = v11;
  type metadata accessor for PartnerModel();
  sub_1001B5920(&qword_100380DA8, (void (*)(uint64_t))type metadata accessor for PartnerModel);
  swift_retain();
  uint64_t v12 = static ObservableObject.environmentStore.getter();
  uint64_t v36 = v5[4];
  uint64_t v37 = v12;
  type metadata accessor for StewieModel();
  sub_1001B5920(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  swift_retain();
  uint64_t v13 = static ObservableObject.environmentStore.getter();
  uint64_t v34 = v5[2];
  uint64_t v35 = v13;
  type metadata accessor for SystemSettingsModel();
  sub_1001B5920(&qword_1003852B0, (void (*)(uint64_t))type metadata accessor for SystemSettingsModel);
  swift_retain();
  uint64_t v33 = static ObservableObject.environmentStore.getter();
  uint64_t v31 = v2[7];
  type metadata accessor for EmergencyModel();
  sub_1001B5920(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
  uint64_t v32 = static ObservableObject.environmentStore.getter();
  uint64_t v29 = v2[8];
  type metadata accessor for GeoLocationModel();
  sub_1001B5920(&qword_100385440, (void (*)(uint64_t))type metadata accessor for GeoLocationModel);
  swift_retain();
  uint64_t v30 = static ObservableObject.environmentStore.getter();
  uint64_t v27 = v2[10];
  type metadata accessor for OfferModel();
  sub_1001B5920(&qword_10038B178, (void (*)(uint64_t))type metadata accessor for OfferModel);
  swift_retain();
  uint64_t v28 = static ObservableObject.environmentStore.getter();
  uint64_t v25 = v2[16];
  type metadata accessor for OffTheGridModel();
  sub_1001B5920(&qword_1003852A8, (void (*)(uint64_t))type metadata accessor for OffTheGridModel);
  swift_retain();
  uint64_t v26 = static ObservableObject.environmentStore.getter();
  uint64_t v14 = v2[11];
  type metadata accessor for RoadsideAssistanceModel();
  sub_1001B5920(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  swift_retain();
  uint64_t v24 = static ObservableObject.environmentStore.getter();
  uint64_t v15 = v2[12];
  type metadata accessor for TransitionAlertModel();
  sub_1001B5920((unint64_t *)&unk_100380B60, (void (*)(uint64_t))type metadata accessor for TransitionAlertModel);
  swift_retain();
  uint64_t v23 = static ObservableObject.environmentStore.getter();
  uint64_t v16 = v2[14];
  type metadata accessor for TimeZoneModel();
  sub_1001B5920(&qword_100385448, (void (*)(uint64_t))type metadata accessor for TimeZoneModel);
  swift_retain();
  uint64_t v17 = static ObservableObject.environmentStore.getter();
  uint64_t v18 = v2[15];
  type metadata accessor for TryOutModel();
  sub_1001B5920(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  swift_retain();
  uint64_t v19 = static ObservableObject.environmentStore.getter();
  uint64_t v20 = v2[17];
  type metadata accessor for UIMetrics();
  sub_1001B5920((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_retain();
  uint64_t v21 = static ObservableObject.environmentStore.getter();
  *(void *)(a2 + 32) = v64;
  *(void *)(a2 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v63;
  *(unsigned char *)(a2 + 48) = v59;
  *(void *)(a2 + 56) = v62;
  *(unsigned char *)(a2 + 64) = v61;
  *(void *)(a2 + 72) = v60;
  *(void *)(a2 + 8sub_100157A04((uint64_t)sub_100158148, 0) = v58;
  *(void *)(a2 + 88) = v57;
  *(void *)(a2 + 96) = v56;
  *(void *)(a2 + 104) = v55;
  *(void *)(a2 + 112) = v54;
  *(void *)(a2 + 12sub_100157A04((uint64_t)sub_100158148, 0) = v53;
  *(void *)(a2 + 128) = v52;
  *(void *)(a2 + 136) = v51;
  *(void *)(a2 + 144) = v49;
  *(void *)(a2 + 152) = v50;
  *(void *)(a2 + 16sub_100157A04((uint64_t)sub_100158148, 0) = v47;
  *(void *)(a2 + 168) = v48;
  *(void *)(a2 + 176) = v45;
  *(void *)(a2 + 184) = v46;
  *(void *)(a2 + 192) = v43;
  *(_OWORD *)a2 = v66;
  *(_OWORD *)(a2 + 16) = v65;
  *(void *)(a2 + 20sub_100157A04((uint64_t)sub_100158148, 0) = v44;
  *(void *)(a2 + 208) = v41;
  *(void *)(a2 + 216) = v42;
  *(void *)(a2 + 224) = v39;
  *(void *)(a2 + 232) = v40;
  *(void *)(a2 + 24sub_100157A04((uint64_t)sub_100158148, 0) = v37;
  *(void *)(a2 + 248) = v38;
  *(void *)(a2 + 256) = v35;
  *(void *)(a2 + 264) = v36;
  *(void *)(a2 + 272) = v33;
  *(void *)(a2 + 28sub_100157A04((uint64_t)sub_100158148, 0) = v34;
  *(void *)(a2 + 288) = v32;
  *(void *)(a2 + 296) = v31;
  *(void *)(a2 + 304) = v30;
  *(void *)(a2 + 312) = v29;
  *(void *)(a2 + 32sub_100157A04((uint64_t)sub_100158148, 0) = v28;
  *(void *)(a2 + 328) = v27;
  *(void *)(a2 + 336) = v26;
  *(void *)(a2 + 344) = v25;
  *(void *)(a2 + 352) = v24;
  *(void *)(a2 + 36sub_100157A04((uint64_t)sub_100158148, 0) = v14;
  *(void *)(a2 + 368) = v23;
  *(void *)(a2 + 376) = v15;
  *(void *)(a2 + 384) = v17;
  *(void *)(a2 + 392) = v16;
  *(void *)(a2 + 40sub_100157A04((uint64_t)sub_100158148, 0) = v19;
  *(void *)(a2 + 408) = v18;
  *(void *)(a2 + 416) = v21;
  *(void *)(a2 + 424) = v20;

  return swift_retain();
}

uint64_t sub_1001B07F8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v62 = a1[1];
  long long v63 = *a1;
  uint64_t v60 = *((void *)a1 + 5);
  uint64_t v61 = *((void *)a1 + 4);
  uint64_t v58 = v2[2];
  type metadata accessor for AppEvents();
  sub_1001B5920((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v59 = static ObservableObject.environmentStore.getter();
  long long v5 = *a1;
  long long v65 = a1[1];
  long long v66 = v5;
  long long v64 = a1[2];
  uint64_t v56 = v2[3];
  type metadata accessor for AppPropertiesModel();
  swift_retain();
  sub_10004ED30((uint64_t)&v66);
  sub_10004ED30((uint64_t)&v65);
  sub_10004ED30((uint64_t)&v64);
  sub_1001B5920(&qword_1003852A0, (void (*)(uint64_t))type metadata accessor for AppPropertiesModel);
  uint64_t v57 = static ObservableObject.environmentStore.getter();
  uint64_t v54 = v2[4];
  type metadata accessor for AppRuntimeStateModel();
  sub_1001B5920(&qword_100380B58, (void (*)(uint64_t))type metadata accessor for AppRuntimeStateModel);
  swift_retain();
  uint64_t v55 = static ObservableObject.environmentStore.getter();
  uint64_t v52 = v2[5];
  type metadata accessor for BannerAppearanceModel();
  sub_1001B5920(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
  swift_retain();
  uint64_t v53 = static ObservableObject.environmentStore.getter();
  uint64_t v6 = (void *)v2[6];
  uint64_t v51 = v6[14];
  type metadata accessor for ConnectionClosedModel(0);
  sub_1001B5920(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  swift_retain();
  swift_retain();
  uint64_t v7 = static ObservableObject.environmentStore.getter();
  uint64_t v49 = v6[9];
  uint64_t v50 = v7;
  type metadata accessor for ConnectionModel(0);
  sub_1001B5920(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
  swift_retain();
  uint64_t v8 = static ObservableObject.environmentStore.getter();
  uint64_t v47 = v6[12];
  uint64_t v48 = v8;
  type metadata accessor for ConnectivityModel();
  sub_1001B5920(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  swift_retain();
  uint64_t v9 = static ObservableObject.environmentStore.getter();
  uint64_t v45 = v6[8];
  uint64_t v46 = v9;
  type metadata accessor for GuidanceMessagesModel();
  sub_1001B5920(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  swift_retain();
  uint64_t v10 = static ObservableObject.environmentStore.getter();
  uint64_t v43 = v6[7];
  uint64_t v44 = v10;
  type metadata accessor for GuidanceModel(0);
  sub_1001B5920(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  swift_retain();
  uint64_t v11 = static ObservableObject.environmentStore.getter();
  uint64_t v41 = v6[3];
  uint64_t v42 = v11;
  type metadata accessor for OrientationModel();
  sub_1001B5920(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  swift_retain();
  uint64_t v12 = static ObservableObject.environmentStore.getter();
  uint64_t v39 = v6[15];
  uint64_t v40 = v12;
  type metadata accessor for PartnerModel();
  sub_1001B5920(&qword_100380DA8, (void (*)(uint64_t))type metadata accessor for PartnerModel);
  swift_retain();
  uint64_t v13 = static ObservableObject.environmentStore.getter();
  uint64_t v37 = v6[4];
  uint64_t v38 = v13;
  type metadata accessor for StewieModel();
  sub_1001B5920(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  swift_retain();
  uint64_t v14 = static ObservableObject.environmentStore.getter();
  uint64_t v35 = v6[2];
  uint64_t v36 = v14;
  type metadata accessor for SystemSettingsModel();
  sub_1001B5920(&qword_1003852B0, (void (*)(uint64_t))type metadata accessor for SystemSettingsModel);
  swift_retain();
  uint64_t v34 = static ObservableObject.environmentStore.getter();
  uint64_t v32 = v2[7];
  type metadata accessor for EmergencyModel();
  sub_1001B5920(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
  uint64_t v33 = static ObservableObject.environmentStore.getter();
  uint64_t v30 = v2[8];
  type metadata accessor for GeoLocationModel();
  sub_1001B5920(&qword_100385440, (void (*)(uint64_t))type metadata accessor for GeoLocationModel);
  swift_retain();
  uint64_t v31 = static ObservableObject.environmentStore.getter();
  uint64_t v28 = v2[10];
  type metadata accessor for OfferModel();
  sub_1001B5920(&qword_10038B178, (void (*)(uint64_t))type metadata accessor for OfferModel);
  swift_retain();
  uint64_t v29 = static ObservableObject.environmentStore.getter();
  uint64_t v26 = v2[16];
  type metadata accessor for OffTheGridModel();
  sub_1001B5920(&qword_1003852A8, (void (*)(uint64_t))type metadata accessor for OffTheGridModel);
  swift_retain();
  uint64_t v27 = static ObservableObject.environmentStore.getter();
  uint64_t v15 = v2[11];
  type metadata accessor for RoadsideAssistanceModel();
  sub_1001B5920(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  swift_retain();
  uint64_t v25 = static ObservableObject.environmentStore.getter();
  uint64_t v16 = v2[12];
  type metadata accessor for TransitionAlertModel();
  sub_1001B5920((unint64_t *)&unk_100380B60, (void (*)(uint64_t))type metadata accessor for TransitionAlertModel);
  swift_retain();
  uint64_t v24 = static ObservableObject.environmentStore.getter();
  uint64_t v17 = v2[14];
  type metadata accessor for TimeZoneModel();
  sub_1001B5920(&qword_100385448, (void (*)(uint64_t))type metadata accessor for TimeZoneModel);
  swift_retain();
  uint64_t v18 = static ObservableObject.environmentStore.getter();
  uint64_t v19 = v2[15];
  type metadata accessor for TryOutModel();
  sub_1001B5920(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  swift_retain();
  uint64_t v20 = static ObservableObject.environmentStore.getter();
  uint64_t v21 = v2[17];
  type metadata accessor for UIMetrics();
  sub_1001B5920((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_retain();
  uint64_t v22 = static ObservableObject.environmentStore.getter();
  *(void *)(a2 + 32) = v61;
  *(void *)(a2 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v60;
  *(void *)(a2 + 48) = v59;
  *(void *)(a2 + 56) = v58;
  *(void *)(a2 + 64) = v57;
  *(void *)(a2 + 72) = v56;
  *(void *)(a2 + 8sub_100157A04((uint64_t)sub_100158148, 0) = v55;
  *(void *)(a2 + 88) = v54;
  *(void *)(a2 + 96) = v53;
  *(void *)(a2 + 104) = v52;
  *(void *)(a2 + 112) = v50;
  *(void *)(a2 + 12sub_100157A04((uint64_t)sub_100158148, 0) = v51;
  *(void *)(a2 + 128) = v48;
  *(void *)(a2 + 136) = v49;
  *(void *)(a2 + 144) = v46;
  *(void *)(a2 + 152) = v47;
  *(_OWORD *)a2 = v63;
  *(_OWORD *)(a2 + 16) = v62;
  *(void *)(a2 + 16sub_100157A04((uint64_t)sub_100158148, 0) = v44;
  *(void *)(a2 + 168) = v45;
  *(void *)(a2 + 176) = v42;
  *(void *)(a2 + 184) = v43;
  *(void *)(a2 + 192) = v40;
  *(void *)(a2 + 20sub_100157A04((uint64_t)sub_100158148, 0) = v41;
  *(void *)(a2 + 208) = v38;
  *(void *)(a2 + 216) = v39;
  *(void *)(a2 + 224) = v36;
  *(void *)(a2 + 232) = v37;
  *(void *)(a2 + 24sub_100157A04((uint64_t)sub_100158148, 0) = v34;
  *(void *)(a2 + 248) = v35;
  *(void *)(a2 + 256) = v33;
  *(void *)(a2 + 264) = v32;
  *(void *)(a2 + 272) = v31;
  *(void *)(a2 + 28sub_100157A04((uint64_t)sub_100158148, 0) = v30;
  *(void *)(a2 + 288) = v29;
  *(void *)(a2 + 296) = v28;
  *(void *)(a2 + 304) = v27;
  *(void *)(a2 + 312) = v26;
  *(void *)(a2 + 32sub_100157A04((uint64_t)sub_100158148, 0) = v25;
  *(void *)(a2 + 328) = v15;
  *(void *)(a2 + 336) = v24;
  *(void *)(a2 + 344) = v16;
  *(void *)(a2 + 352) = v18;
  *(void *)(a2 + 36sub_100157A04((uint64_t)sub_100158148, 0) = v17;
  *(void *)(a2 + 368) = v20;
  *(void *)(a2 + 376) = v19;
  *(void *)(a2 + 384) = v22;
  *(void *)(a2 + 392) = v21;
  return swift_retain();
}

uint64_t sub_1001B10A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v58 = v3[2];
  type metadata accessor for AppEvents();
  sub_1001B5920((unint64_t *)&qword_10037F000, (void (*)(uint64_t))type metadata accessor for AppEvents);
  uint64_t v59 = static ObservableObject.environmentStore.getter();
  uint64_t v55 = v3[3];
  type metadata accessor for AppPropertiesModel();
  sub_1001B5920(&qword_1003852A0, (void (*)(uint64_t))type metadata accessor for AppPropertiesModel);
  swift_retain();
  swift_retain();
  uint64_t v56 = static ObservableObject.environmentStore.getter();
  uint64_t v53 = v3[4];
  type metadata accessor for AppRuntimeStateModel();
  sub_1001B5920(&qword_100380B58, (void (*)(uint64_t))type metadata accessor for AppRuntimeStateModel);
  swift_retain();
  uint64_t v54 = static ObservableObject.environmentStore.getter();
  uint64_t v51 = v3[5];
  type metadata accessor for BannerAppearanceModel();
  sub_1001B5920(&qword_10037F098, (void (*)(uint64_t))type metadata accessor for BannerAppearanceModel);
  swift_retain();
  uint64_t v52 = static ObservableObject.environmentStore.getter();
  long long v5 = (void *)v3[6];
  uint64_t v50 = v5[14];
  type metadata accessor for ConnectionClosedModel(0);
  sub_1001B5920(&qword_100385270, (void (*)(uint64_t))type metadata accessor for ConnectionClosedModel);
  swift_retain();
  swift_retain();
  uint64_t v6 = static ObservableObject.environmentStore.getter();
  uint64_t v48 = v5[9];
  uint64_t v49 = v6;
  type metadata accessor for ConnectionModel(0);
  sub_1001B5920(&qword_10037F100, (void (*)(uint64_t))type metadata accessor for ConnectionModel);
  swift_retain();
  uint64_t v7 = static ObservableObject.environmentStore.getter();
  uint64_t v46 = v5[12];
  uint64_t v47 = v7;
  type metadata accessor for ConnectivityModel();
  sub_1001B5920(&qword_10037F0F0, (void (*)(uint64_t))type metadata accessor for ConnectivityModel);
  swift_retain();
  uint64_t v8 = static ObservableObject.environmentStore.getter();
  uint64_t v44 = v5[8];
  uint64_t v45 = v8;
  type metadata accessor for GuidanceMessagesModel();
  sub_1001B5920(&qword_100381CB8, (void (*)(uint64_t))type metadata accessor for GuidanceMessagesModel);
  swift_retain();
  uint64_t v9 = static ObservableObject.environmentStore.getter();
  uint64_t v42 = v5[7];
  uint64_t v43 = v9;
  type metadata accessor for GuidanceModel(0);
  sub_1001B5920(&qword_10037F0F8, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  swift_retain();
  uint64_t v10 = static ObservableObject.environmentStore.getter();
  uint64_t v40 = v5[3];
  uint64_t v41 = v10;
  type metadata accessor for OrientationModel();
  sub_1001B5920(&qword_100385278, (void (*)(uint64_t))type metadata accessor for OrientationModel);
  swift_retain();
  uint64_t v11 = static ObservableObject.environmentStore.getter();
  uint64_t v38 = v5[15];
  uint64_t v39 = v11;
  type metadata accessor for PartnerModel();
  sub_1001B5920(&qword_100380DA8, (void (*)(uint64_t))type metadata accessor for PartnerModel);
  swift_retain();
  uint64_t v12 = static ObservableObject.environmentStore.getter();
  uint64_t v36 = v5[4];
  uint64_t v37 = v12;
  type metadata accessor for StewieModel();
  sub_1001B5920(&qword_100380DA0, (void (*)(uint64_t))type metadata accessor for StewieModel);
  swift_retain();
  uint64_t v13 = static ObservableObject.environmentStore.getter();
  uint64_t v34 = v5[2];
  uint64_t v35 = v13;
  type metadata accessor for SystemSettingsModel();
  sub_1001B5920(&qword_1003852B0, (void (*)(uint64_t))type metadata accessor for SystemSettingsModel);
  swift_retain();
  uint64_t v33 = static ObservableObject.environmentStore.getter();
  uint64_t v31 = v3[7];
  type metadata accessor for EmergencyModel();
  sub_1001B5920(&qword_100380D50, (void (*)(uint64_t))type metadata accessor for EmergencyModel);
  uint64_t v32 = static ObservableObject.environmentStore.getter();
  uint64_t v29 = v3[8];
  type metadata accessor for GeoLocationModel();
  sub_1001B5920(&qword_100385440, (void (*)(uint64_t))type metadata accessor for GeoLocationModel);
  swift_retain();
  uint64_t v30 = static ObservableObject.environmentStore.getter();
  uint64_t v27 = v3[10];
  type metadata accessor for OfferModel();
  sub_1001B5920(&qword_10038B178, (void (*)(uint64_t))type metadata accessor for OfferModel);
  swift_retain();
  uint64_t v28 = static ObservableObject.environmentStore.getter();
  uint64_t v25 = v3[16];
  type metadata accessor for OffTheGridModel();
  sub_1001B5920(&qword_1003852A8, (void (*)(uint64_t))type metadata accessor for OffTheGridModel);
  swift_retain();
  uint64_t v26 = static ObservableObject.environmentStore.getter();
  uint64_t v14 = v3[11];
  type metadata accessor for RoadsideAssistanceModel();
  sub_1001B5920(&qword_100380D48, (void (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel);
  swift_retain();
  uint64_t v24 = static ObservableObject.environmentStore.getter();
  uint64_t v15 = v3[12];
  type metadata accessor for TransitionAlertModel();
  sub_1001B5920((unint64_t *)&unk_100380B60, (void (*)(uint64_t))type metadata accessor for TransitionAlertModel);
  swift_retain();
  uint64_t v23 = static ObservableObject.environmentStore.getter();
  uint64_t v16 = v3[14];
  type metadata accessor for TimeZoneModel();
  sub_1001B5920(&qword_100385448, (void (*)(uint64_t))type metadata accessor for TimeZoneModel);
  swift_retain();
  uint64_t v17 = static ObservableObject.environmentStore.getter();
  uint64_t v18 = v3[15];
  type metadata accessor for TryOutModel();
  sub_1001B5920(&qword_1003827A8, (void (*)(uint64_t))type metadata accessor for TryOutModel);
  swift_retain();
  uint64_t v19 = static ObservableObject.environmentStore.getter();
  uint64_t v20 = v3[17];
  type metadata accessor for UIMetrics();
  sub_1001B5920((unint64_t *)&qword_10037EFF0, (void (*)(uint64_t))type metadata accessor for UIMetrics);
  swift_retain();
  uint64_t v21 = static ObservableObject.environmentStore.getter();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v59;
  a3[3] = v58;
  a3[4] = v56;
  a3[5] = v55;
  a3[6] = v54;
  a3[7] = v53;
  a3[8] = v52;
  a3[9] = v51;
  a3[10] = v49;
  a3[11] = v50;
  a3[12] = v47;
  a3[13] = v48;
  a3[14] = v45;
  a3[15] = v46;
  a3[16] = v43;
  a3[17] = v44;
  a3[18] = v41;
  a3[19] = v42;
  a3[20] = v39;
  a3[21] = v40;
  a3[22] = v37;
  a3[23] = v38;
  a3[24] = v35;
  a3[25] = v36;
  a3[26] = v33;
  a3[27] = v34;
  a3[28] = v32;
  a3[29] = v31;
  a3[30] = v30;
  a3[31] = v29;
  a3[32] = v28;
  a3[33] = v27;
  a3[34] = v26;
  a3[35] = v25;
  a3[36] = v24;
  a3[37] = v14;
  a3[38] = v23;
  a3[39] = v15;
  a3[40] = v17;
  a3[41] = v16;
  a3[42] = v19;
  a3[43] = v18;
  a3[44] = v21;
  a3[45] = v20;

  return swift_retain();
}

void *sub_1001B1920(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B520);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B47B8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B1A30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010((uint64_t *)&unk_1003839F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B44DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B1B40(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_1003808A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B48A4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B1C50(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001B1EB8(a1, a2, a3, a4, &qword_10038B528);
}

void *sub_1001B1C5C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B568);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B4AEC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B1D80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_100380DB8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B43E4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B1EAC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001B1EB8(a1, a2, a3, a4, &qword_10038B570);
}

void *sub_1001B1EB8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_100004010(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size_0(v11);
      void v11[2] = v9;
      void v11[3] = 2 * v12 - 64;
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B4DE4(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B1FB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B25A4(a1, a2, a3, a4, &qword_10038B540, type metadata accessor for MessageSimulationEngineImplementation.MessageProgress, type metadata accessor for MessageSimulationEngineImplementation.MessageProgress);
}

void *sub_1001B1FE4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_1003814F8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B4BE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B20F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_100381500);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B4CF0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B2204(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B538);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B47B8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B2314(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001B1EB8(a1, a2, a3, a4, &qword_1003853C8);
}

void *sub_1001B2320(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B530);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B4ECC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B2444(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B498);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage + 4;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B45D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B2570(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B25A4(a1, a2, a3, a4, &qword_10038B510, type metadata accessor for ServiceOutages.Outage, type metadata accessor for ServiceOutages.Outage);
}

uint64_t sub_1001B25A4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004010(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size_0(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  uint64_t v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001B50B4(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1001B2824(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004010(&qword_1003881B8);
  uint64_t v10 = *(void *)(sub_100004010(&qword_100380418) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size_0(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100004010(&qword_100380418) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001B4990(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1001B2A94(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001B1EB8(a1, a2, a3, a4, &qword_10038B518);
}

void *sub_1001B2AA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B458);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B4FC4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B2BC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B25A4(a1, a2, a3, a4, &qword_10038B450, type metadata accessor for TargetTracks.TimePoint, type metadata accessor for TargetTracks.TimePoint);
}

void *sub_1001B2BFC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B190);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B5210(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B2D20(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B550);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B46C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B2E30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B130);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B5834(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B2F40(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B558);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 12);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + 12 * v8 + 32)) {
          memmove(v12, a4 + 4, 12 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B6554(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B3068(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004010(&qword_10038B560);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B47B8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B3178(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1001B324C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000A30C0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000A30C0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1001B324C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1001B3408(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1001B3408(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1001B34A0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001B36FC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001B36FC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1001B34A0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1001B3618(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1001B3618(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004010(&qword_10038B128);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size_0(v4);
  v4[2] = a1;
  _OWORD v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1001B3680(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1001B36FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038B128);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B3850(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *((void *)a1 + 1);
  char v5 = a1[16];
  uint64_t v6 = *((void *)a1 + 5);
  char v8 = *a1;
  uint64_t v9 = v4;
  char v10 = v5;
  long long v11 = *(_OWORD *)(a1 + 24);
  uint64_t v12 = v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B38E8(long long *a1, uint64_t a2, void (*a3)(void))
{
  long long v4 = a1[1];
  long long v7 = *a1;
  long long v8 = v4;
  long long v5 = a1[3];
  long long v9 = a1[2];
  long long v10 = v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3968(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B39E0(char *a1, uint64_t a2, void (*a3)(void))
{
  char v5 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3A58(char *a1, uint64_t a2, void (*a3)(void))
{
  char v4 = a1[1];
  uint64_t v5 = *((void *)a1 + 1);
  char v7 = *a1;
  char v8 = v4;
  uint64_t v9 = v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3AE0(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *((void *)a1 + 1);
  char v5 = a1[16];
  uint64_t v6 = *((void *)a1 + 3);
  char v7 = a1[32];
  char v8 = a1[33];
  uint64_t v9 = *((void *)a1 + 5);
  char v11 = *a1;
  uint64_t v12 = v4;
  char v13 = v5;
  uint64_t v14 = v6;
  char v15 = v7;
  char v16 = v8;
  uint64_t v17 = v9;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3B88(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v5 = a1[2];
  char v6 = *((unsigned char *)a1 + 24);
  uint64_t v7 = a1[4];
  char v8 = *((unsigned char *)a1 + 40);
  char v9 = *((unsigned char *)a1 + 41);
  char v10 = *((unsigned char *)a1 + 42);
  char v11 = *((unsigned char *)a1 + 43);
  uint64_t v12 = a1[6];
  uint64_t v14 = *a1;
  char v15 = v4;
  uint64_t v16 = v5;
  char v17 = v6;
  uint64_t v18 = v7;
  char v19 = v8;
  char v20 = v9;
  char v21 = v10;
  char v22 = v11;
  uint64_t v23 = v12;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3C48(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *((void *)a1 + 1);
  char v5 = a1[16];
  uint64_t v6 = *((void *)a1 + 3);
  char v7 = a1[32];
  char v8 = a1[33];
  char v9 = a1[34];
  char v10 = a1[35];
  uint64_t v11 = *((void *)a1 + 5);
  char v13 = *a1;
  uint64_t v14 = v4;
  char v15 = v5;
  uint64_t v16 = v6;
  char v17 = v7;
  char v18 = v8;
  char v19 = v9;
  char v20 = v10;
  uint64_t v21 = v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3D00(long long *a1, uint64_t a2, void (*a3)(void))
{
  long long v5 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3D78(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *((void *)a1 + 1);
  char v6 = *a1;
  uint64_t v7 = v4;
  long long v8 = *((_OWORD *)a1 + 1);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3E00(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *((void *)a1 + 1);
  char v6 = *a1;
  uint64_t v7 = v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3E80(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = a1[1];
  uint64_t v6 = *a1;
  uint64_t v7 = v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3EF8(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *a1;
  long long v6 = *(_OWORD *)(a1 + 1);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3F78(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v6 = *a1;
  char v7 = v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B3FF8(long long *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *((void *)a1 + 2);
  long long v6 = *a1;
  uint64_t v7 = v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B4078(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  char v4 = *((unsigned char *)a1 + 8);
  char v5 = *((unsigned char *)a1 + 9);
  uint64_t v6 = a1[2];
  uint64_t v8 = *a1;
  char v9 = v4;
  char v10 = v5;
  uint64_t v11 = v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B4108(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B4174(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[20] = a1;
  a4[21] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a4[7] = &off_10035BAC0;
  swift_unknownObjectWeakAssign();
  if (!sub_10000DD8C())
  {
    if (qword_10037DDB8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000FD84(v5, (uint64_t)qword_1003A9A00);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to start EEDSource instance", v8, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v9 = a4[25];
  uint64_t v10 = a4[26];
  uint64_t v11 = a4[27];
  uint64_t v12 = a4[28];
  uint64_t v13 = a4[29];
  uint64_t v14 = a4[30];
  *(_OWORD *)(a4 + 25) = xmmword_1002B3310;
  *(_OWORD *)(a4 + 27) = xmmword_1002B3310;
  *(_OWORD *)(a4 + 29) = xmmword_1002B3310;
  a4[31] = 0;
  a4[32] = 0;
  sub_100075F88(v9, v10);
  sub_100075F88(v11, v12);
  return sub_1000760DC(v13, v14);
}

uint64_t sub_1001B42EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  os_log_type_t v7 = a6 + 37;
  a6[32] = a1;
  a6[33] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a6[7] = &off_10035BAC0;
  swift_unknownObjectWeakAssign();
  a6[9] = &off_100361618;
  swift_unknownObjectWeakAssign();
  a6[11] = &off_10035BB38;
  swift_unknownObjectWeakAssign();
  uint64_t v8 = a6[37];
  uint64_t v9 = a6[38];
  uint64_t v10 = v7[2];
  uint64_t v11 = a6[40];
  uint64_t v12 = v7[4];
  uint64_t v13 = a6[42];
  *(_OWORD *)os_log_type_t v7 = xmmword_1002B3310;
  *((_OWORD *)v7 + 1) = xmmword_1002B3310;
  *((_OWORD *)v7 + 2) = xmmword_1002B3310;
  a6[43] = 0;
  a6[44] = 0;
  sub_100075F88(v8, v9);
  sub_100075F88(v10, v11);
  return sub_1000760DC(v12, v13);
}

uint64_t sub_1001B43E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B44DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B45D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B46C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001B47B8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    os_log_type_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001B48A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    os_log_type_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4990(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100004010(&qword_100380418) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4AEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4BE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100004010(&qword_10038B548);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4CF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001B4DE4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4ECC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001B4FC4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    os_log_type_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B50B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B5210(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_100004010((uint64_t *)&unk_10038D250);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001B5320(unsigned char *a1, void *a2, void *a3)
{
  sub_10000D544((uint64_t)a2, (uint64_t)v42, &qword_100382448);
  uint64_t v6 = v42[0];
  uint64_t v34 = v42[1];
  uint64_t v7 = v42[2];
  uint64_t v8 = v42[3];
  uint64_t v9 = v42[4];
  sub_10000D544((uint64_t)a3, (uint64_t)v41, &qword_100382448);
  uint64_t v32 = v41[1];
  uint64_t v33 = v41[0];
  uint64_t v30 = v41[3];
  uint64_t v31 = v41[2];
  uint64_t v29 = v41[4];
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000FD84(v10, (uint64_t)qword_1003A9958);
  sub_1000E4904((uint64_t)a1);
  sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
  sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075EE4);
  sub_1000E4904((uint64_t)a1);
  sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
  sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075EE4);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v28 = v7;
    uint64_t v13 = swift_slowAlloc();
    v36._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446723;
    LOBYTE(v46[0]) = *a1;
    uint64_t v14 = String.init<A>(describing:)();
    v46[0] = sub_1001B3178(v14, v15, &v36._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000E4930((uint64_t)a1);
    sub_1000E4930((uint64_t)a1);
    *(_WORD *)(v13 + 12) = 2081;
    sub_10000D544((uint64_t)a2, (uint64_t)v46, &qword_100382448);
    sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
    sub_100004010(&qword_100382448);
    uint64_t v16 = String.init<A>(describing:)();
    v46[0] = sub_1001B3178(v16, v17, &v36._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    *(_WORD *)(v13 + 22) = 2081;
    sub_10000D544((uint64_t)a3, (uint64_t)v46, &qword_100382448);
    sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075EE4);
    uint64_t v18 = String.init<A>(describing:)();
    v46[0] = sub_1001B3178(v18, v19, &v36._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075E64);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "handleAlertRequest: %{public}s, requestedProvider=%{private}s, resumableProvider=%{private}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v7 = v28;
    swift_slowDealloc();
  }
  else
  {
    sub_1000E4930((uint64_t)a1);
    sub_1000E4930((uint64_t)a1);
    sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075E64);
    sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075E64);
  }

  if (*a1)
  {
    sub_1001C9B94(&v36);
    unint64_t object = v36._object;
    uint64_t v21 = v37;
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    long long v24 = v40;
    v46[0] = v36._countAndFlagsBits;
  }
  else
  {
    sub_10000D544((uint64_t)a2, (uint64_t)v43, &qword_100382448);
    if (v44)
    {
      uint64_t v25 = v34;
    }
    else
    {
      sub_100075EA8(a3, (void (*)(void, void, void, void, void))sub_100075EE4);
      uint64_t v25 = v32;
      uint64_t v6 = v33;
      uint64_t v8 = v30;
      uint64_t v7 = v31;
      uint64_t v9 = v29;
    }
    v45[0] = v6;
    v45[1] = v25;
    v45[2] = v7;
    v45[3] = v8;
    uint64_t v45[4] = v9;
    sub_100075EA8(a2, (void (*)(void, void, void, void, void))sub_100075EE4);
    sub_1001C987C(v45, &v36);
    uint64_t countAndFlagsBits = v36._countAndFlagsBits;
    unint64_t object = v36._object;
    uint64_t v27 = v7;
    uint64_t v21 = v37;
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    long long v35 = v40;
    sub_100075E64(v6, v25, v27);
    long long v24 = v35;
    v46[0] = countAndFlagsBits;
  }
  v46[1] = object;
  v46[2] = v21;
  v46[3] = v22;
  v46[4] = v23;
  long long v47 = v24;
  sub_1001C960C(v46);
  sub_1001ACE2C(a1[33]);
}

char *sub_1001B5834(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B5920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B5968(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001B5C00(uint64_t a1)
{
  return a1;
}

void sub_1001B5E88(char a1)
{
}

uint64_t sub_1001B5E90()
{
  return sub_1001AD3AC();
}

uint64_t sub_1001B5E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v2;
  return swift_retain();
}

uint64_t sub_1001B5EA8()
{
  return swift_release();
}

uint64_t sub_1001B5EB4()
{
  return sub_1001AC394(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001B5EC4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001B5F04(uint64_t a1)
{
  return sub_1001ABEF4(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_1001B5F10(void *a1, unsigned char *a2)
{
  return sub_1001A458C(a1, a2, v2);
}

uint64_t sub_1001B5F18(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1001A5880(a1, a2);
}

unint64_t sub_1001B5F20()
{
  unint64_t result = qword_10038B1D0;
  if (!qword_10038B1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038B1D0);
  }
  return result;
}

unint64_t sub_1001B5F74()
{
  unint64_t result = qword_10038B1D8;
  if (!qword_10038B1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038B1D8);
  }
  return result;
}

uint64_t sub_1001B5FCC(char *a1)
{
  return sub_1001B3850(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B5FDC(long long *a1)
{
  return sub_1001B38E8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B5FF0(uint64_t *a1)
{
  return sub_1001B3968(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6004(char *a1)
{
  return sub_1001B39E0(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6014(char *a1)
{
  return sub_1001B3A58(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6034(char *a1)
{
  return sub_1001B3AE0(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6044(uint64_t *a1)
{
  return sub_1001B3B88(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6054(char *a1)
{
  return sub_1001B3C48(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6064(long long *a1)
{
  return sub_1001B3D00(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6074(char *a1)
{
  return sub_1001B39E0(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6098(char *a1)
{
  return sub_1001B3D78(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B60A8(char *a1)
{
  return sub_1001B3E00(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B60CC(uint64_t *a1)
{
  return sub_1001B3E80(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B60DC(uint64_t *a1)
{
  return sub_1001B3EF8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B60E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6124(char a1)
{
  return sub_1001A70B0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001B612C(uint64_t a1)
{
  return sub_1001AFAC0(a1, *(uint64_t (**)(BOOL))(v1 + 16), *(void *)(v1 + 24), "switchFromRoadsideToEmergency success: %{BOOL,public}d");
}

uint64_t sub_1001B6154(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_1001B618C(uint64_t a1)
{
  return sub_1001AFAC0(a1, *(uint64_t (**)(BOOL))(v1 + 16), *(void *)(v1 + 24), "switchFromEmergencyToRoadside success: %{BOOL,public}d");
}

void sub_1001B61B8()
{
}

uint64_t sub_1001B61C4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001B61FC(uint64_t a1)
{
  return sub_1001A5AAC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1001B6210(uint64_t a1)
{
  return sub_1001A13F8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6230()
{
  return sub_1001A4CC8();
}

uint64_t sub_1001B623C(uint64_t a1)
{
  return sub_1001A13F8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6248(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001B62A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001B6300(uint64_t a1)
{
  return sub_1001A43B8(a1);
}

uint64_t sub_1001B630C(uint64_t *a1)
{
  return sub_1001B3F78(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B631C(long long *a1)
{
  return sub_1001B3FF8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B632C(uint64_t *a1)
{
  return sub_1001B4078(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1001B6344(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004010(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B63AC(uint64_t a1)
{
  return sub_1001B4108(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

void sub_1001B63CC()
{
  sub_10019A568(v0, &qword_10037DDD8, (uint64_t)qword_1003A9A60);
}

unint64_t sub_1001B6408()
{
  unint64_t result = qword_10038B508;
  if (!qword_10038B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038B508);
  }
  return result;
}

void sub_1001B645C()
{
  sub_10019A568(v0, &qword_10037DE38, (uint64_t)qword_1003A9B80);
}

uint64_t sub_1001B6498(uint64_t a1)
{
  return sub_1001AFC1C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001B64A0(uint64_t a1)
{
  return sub_1001AFAC0(a1, *(uint64_t (**)(BOOL))(v1 + 16), *(void *)(v1 + 24), "Transitioned back to emergency, success: %{BOOL,public}d");
}

uint64_t sub_1001B64C4(uint64_t a1)
{
  return sub_1001AFAC0(a1, *(uint64_t (**)(BOOL))(v1 + 16), *(void *)(v1 + 24), "Transitioned back to roadside, success: %{BOOL,public}d");
}

uint64_t sub_1001B64E8(uint64_t a1)
{
  return a1;
}

char *sub_1001B6554(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 12 * a1 + 32);
    size_t v6 = 12 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B6698()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v4 - 8);
  id v5 = [self mainBundle];
  id v6 = [v5 bundleIdentifier];

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = 0x80000001002C5A40;
    uint64_t v7 = 0xD000000000000012;
  }
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  v25[0] = v7;
  v25[1] = v9;
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = 0x616E4165726F432ELL;
  v10._unint64_t object = (void *)0xEE0073636974796CLL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  v25[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  uint64_t v11 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v12 = v23;
  *(void *)(v23 + 16) = v11;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = v12;
    v25[0] = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    type metadata accessor for CoreAnalyticsAgent();
    swift_retain();
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v24 = sub_1001B3178(v18, v19, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%{public}s] init", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v12;
}

uint64_t sub_1001B6B10()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136446210;
    type metadata accessor for CoreAnalyticsAgent();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }

  return v1;
}

uint64_t sub_1001B6CE0()
{
  sub_1001B6B10();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreAnalyticsAgent()
{
  return self;
}

uint64_t sub_1001B6D38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000FD84(v13, (uint64_t)qword_1003A9940);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v27[1] = v3;
    uint64_t v29 = v7;
    uint64_t v30 = v6;
    uint64_t v16 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    aBlock[0] = v27[0];
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = 0xD000000000000016;
    unint64_t v18 = 0x80000001002D1C60;
    uint64_t v28 = a1;
    switch((char)a1)
    {
      case 1:
        uint64_t v17 = 0xD00000000000001CLL;
        unint64_t v19 = "com.apple.stw.ca.connattempt";
        goto LABEL_14;
      case 2:
        char v20 = "com.apple.ca.skimmerobs";
        goto LABEL_9;
      case 3:
        char v20 = "com.apple.stw.buddy.que";
LABEL_9:
        unint64_t v18 = (unint64_t)(v20 - 32) | 0x8000000000000000;
        uint64_t v17 = 0xD000000000000017;
        break;
      case 4:
        uint64_t v17 = 0xD000000000000019;
        unint64_t v19 = "com.apple.stw.buddy.start";
        goto LABEL_14;
      case 5:
        uint64_t v17 = 0xD00000000000001CLL;
        unint64_t v19 = "com.apple.stw.buddy.startmsg";
        goto LABEL_14;
      case 6:
        uint64_t v17 = 0xD00000000000001FLL;
        unint64_t v19 = "com.apple.stw.ca.stateRetention";
        goto LABEL_14;
      case 7:
        uint64_t v17 = 0xD000000000000029;
        unint64_t v19 = "com.apple.Telephony.metricCCStwEntryPoint";
LABEL_14:
        unint64_t v18 = (unint64_t)(v19 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v33 = (void *)sub_1001B3178(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_10001E6FC(0, &qword_10038B630);
    swift_bridgeObjectRetain();
    uint64_t v21 = Dictionary.description.getter();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)sub_1001B3178(v21, v23, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Queueing analytics event %s: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v7 = v29;
    uint64_t v6 = v30;
    LOBYTE(a1) = v28;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1001B7564;
  aBlock[5] = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100207A1C;
  void aBlock[3] = (uint64_t)&unk_10035C4D0;
  uint64_t v25 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  return swift_release();
}

void sub_1001B72C0(char a1, uint64_t a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  _OWORD v7[4] = sub_1001B7588;
  void v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1001B7490;
  void v7[3] = &unk_10035C520;
  uint64_t v6 = _Block_copy(v7);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);
}

Class sub_1001B7490(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10001E6FC(0, &qword_10038B630);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_1001B752C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B7564()
{
  sub_1001B72C0(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001B7570(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v2;
  return swift_retain();
}

uint64_t sub_1001B7580()
{
  return swift_release();
}

uint64_t sub_1001B7588()
{
  sub_1001B75B8(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001B75B8(char a1, uint64_t a2)
{
  if (qword_10037DD78 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000FD84(v4, (uint64_t)qword_1003A9940);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = 0xD000000000000016;
    unint64_t v9 = 0x80000001002D1C60;
    switch(a1)
    {
      case 1:
        uint64_t v8 = 0xD00000000000001CLL;
        uint64_t v10 = "com.apple.stw.ca.connattempt";
        goto LABEL_14;
      case 2:
        uint64_t v11 = "com.apple.ca.skimmerobs";
        goto LABEL_9;
      case 3:
        uint64_t v11 = "com.apple.stw.buddy.que";
LABEL_9:
        unint64_t v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
        uint64_t v8 = 0xD000000000000017;
        break;
      case 4:
        uint64_t v8 = 0xD000000000000019;
        uint64_t v10 = "com.apple.stw.buddy.start";
        goto LABEL_14;
      case 5:
        uint64_t v8 = 0xD00000000000001CLL;
        uint64_t v10 = "com.apple.stw.buddy.startmsg";
        goto LABEL_14;
      case 6:
        uint64_t v8 = 0xD00000000000001FLL;
        uint64_t v10 = "com.apple.stw.ca.stateRetention";
        goto LABEL_14;
      case 7:
        uint64_t v8 = 0xD000000000000029;
        uint64_t v10 = "com.apple.Telephony.metricCCStwEntryPoint";
LABEL_14:
        unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    sub_1001B3178(v8, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_10001E6FC(0, &qword_10038B630);
    swift_bridgeObjectRetain();
    uint64_t v12 = Dictionary.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_1001B3178(v12, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Recording analytics event %s: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a2;
}

uint64_t sub_1001B78D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_10004A864((_OWORD *)a1, v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1002696F4(v14, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000950C(a1, &qword_10038D290);
    unint64_t v7 = sub_1001BEB80(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      uint64_t *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_1000A1874();
        uint64_t v11 = v13;
      }
      sub_10004A864((_OWORD *)(*(void *)(v11 + 56) + 32 * v9), v14);
      sub_1001C0D80(v9, v11);
      uint64_t *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_10000950C((uint64_t)v14, &qword_10038D290);
  }
}

uint64_t sub_1001B79E8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10004A864((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_100269C88(v9, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for CodingUserInfoKey();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_10000950C(a1, &qword_10038D290);
    sub_1001C08C4(a2, v9);
    uint64_t v7 = type metadata accessor for CodingUserInfoKey();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_10000950C((uint64_t)v9, &qword_10038D290);
  }
}

unint64_t sub_1001B7B08()
{
  unint64_t result = 0xD000000000000019;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000025;
      break;
    case 4:
      unint64_t result = 0xD000000000000026;
      break;
    case 5:
      unint64_t result = 0xD000000000000026;
      break;
    case 7:
      unint64_t result = 0xD000000000000029;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001B7C14(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = (unint64_t)sub_1001C11F4(a1, a2, 10);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v8 = (unint64_t)sub_1001C12DC(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      char v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_1001B7E74(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  dispatch thunk of CustomStringConvertible.description.getter();
  v1._uint64_t countAndFlagsBits = 46;
  v1._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  sub_1000238C4((uint64_t)v4, v5);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v4);
}

uint64_t sub_1001B7F80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001C1A44(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1001B7FAC(void *a1)
{
  return sub_1001B7E74(a1);
}

uint64_t sub_1001B7FC8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_1001B8008()
{
  return 0;
}

uint64_t type metadata accessor for StringCodingKey()
{
  return self;
}

uint64_t sub_1001B8064()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001B8098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 88))();
  *a1 = result;
  return result;
}

uint64_t sub_1001B80D0()
{
  return 0;
}

uint64_t sub_1001B80DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 104))();
  *a1 = result;
  return result;
}

uint64_t sub_1001B8114(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1001B8168(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1001B81BC(uint64_t a1)
{
  return sub_1001B8228(a1, qword_1003A9BF0);
}

uint64_t sub_1001B81E0(uint64_t a1)
{
  return sub_1001B8228(a1, qword_1003A9C08);
}

uint64_t sub_1001B8204(uint64_t a1)
{
  return sub_1001B8228(a1, qword_1003A9C20);
}

uint64_t sub_1001B8228(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004010(&qword_10038C298);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CodingUserInfoKey();
  sub_1000FA690(v6, a2);
  uint64_t v7 = sub_10000FD84(v6, (uint64_t)a2);
  CodingUserInfoKey.init(rawValue:)();
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B8354@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CodingUserInfoKey();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  uint64_t v8 = dispatch thunk of Decoder.userInfo.getter();
  if (qword_10037DE68 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10000FD84(v4, (uint64_t)qword_1003A9C08);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_1001BEE24((uint64_t)v7), (v11 & 1) != 0))
  {
    sub_1000A30C0(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*((void *)&v17 + 1))
  {
    sub_100004010(&qword_10038C290);
    if (swift_dynamicCast())
    {
      if (*((void *)&v19 + 1)) {
        return sub_100009164(&v18, a2);
      }
    }
    else
    {
      uint64_t v20 = 0;
      long long v18 = 0u;
      long long v19 = 0u;
    }
  }
  else
  {
    sub_10000950C((uint64_t)&v16, &qword_10038D290);
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v20 = 0;
  }
  sub_10000950C((uint64_t)&v18, &qword_10038C288);
  uint64_t v13 = type metadata accessor for DecodingError();
  swift_allocError();
  uint64_t v15 = v14;
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.codingPath.getter();
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, enum case for DecodingError.dataCorrupted(_:), v13);
  return swift_willThrow();
}

uint64_t sub_1001B8630(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2;
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v28 = a1;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v27 = *(void *)(v5 + 16);
  if (!v27)
  {
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000FD84(v17, (uint64_t)qword_1003A9B08);
    long long v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "No tableNames provided", v20, 2u);
      swift_slowDealloc();
    }

    goto LABEL_25;
  }
  id v26 = *(id *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + 56;
  uint64_t v7 = 1;
  while (1)
  {
    unint64_t v9 = v3;
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [v26 localizedStringForKey:v10 value:v11 table:v12];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    if (v14 != 0xD000000000000024 || v16 != 0x80000001002D2870) {
      break;
    }
    unint64_t v3 = v9;
    if (v27 == v7)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v6 += 16;
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0 && v27 != v7)
  {
    unint64_t v3 = v9;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return v14;
  }
  unint64_t v3 = v9;
LABEL_21:
  swift_bridgeObjectRelease();
  if (qword_10037DE10 == -1) {
    goto LABEL_22;
  }
LABEL_29:
  swift_once();
LABEL_22:
  uint64_t v21 = type metadata accessor for Logger();
  sub_10000FD84(v21, (uint64_t)qword_1003A9B08);
  swift_bridgeObjectRetain_n();
  char v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    sub_1001B3178(v28, v3, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "No translation for '%s'", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_25:
  swift_bridgeObjectRetain();
  return v28;
}

uint64_t sub_1001B8A78()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BundleTranslationProvider()
{
  return self;
}

uint64_t sub_1001B8ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (a1 == 0x636E656772656D65 && a2 == 0xE900000000000079) {
    goto LABEL_12;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v6) {
    return v4;
  }
  uint64_t v4 = 1;
  if (a1 == 0x6564697364616F72 && a2 == 0xE800000000000000)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v4;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return 2;
  }
  return v4;
}

uint64_t sub_1001B8BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  if (a1 == 1852138867 && a2 == 0xE400000000000000) {
    goto LABEL_3;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v5) {
    return v3;
  }
  uint64_t v3 = 1;
  if (a1 == 0x6465726577736E61 && a2 == 0xE800000000000000) {
    goto LABEL_3;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v6) {
    return v3;
  }
  uint64_t v3 = 2;
  if (a1 == 0x64657070696B73 && a2 == 0xE700000000000000)
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
  return v3;
}

uint64_t sub_1001B8DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 10;
  char v5 = &byte_10034A720;
  while (2)
  {
    unsigned int v7 = *v5++;
    uint64_t v6 = v7;
    unint64_t v8 = 0x80000001002D2520;
    unint64_t v9 = 0xD000000000000019;
    switch(v7)
    {
      case 1u:
        NSString v10 = "builtinRoadsideAvailable";
        goto LABEL_9;
      case 2u:
        NSString v12 = "emporarilyUnavailable";
        unint64_t v11 = 0xD000000000000018;
        goto LABEL_16;
      case 3u:
        unint64_t v11 = 0xD000000000000025;
        NSString v12 = "asInvokedFromEmergency";
        goto LABEL_16;
      case 4u:
        unint64_t v11 = 0xD000000000000026;
        NSString v12 = "WasInvokedFromRoadside";
        goto LABEL_16;
      case 5u:
        unint64_t v11 = 0xD000000000000026;
        NSString v12 = "onversationActive";
        goto LABEL_16;
      case 6u:
        NSString v10 = "roviderSelectionAvailable";
LABEL_9:
        unint64_t v8 = (unint64_t)v10 | 0x8000000000000000;
        if (a1 != 0xD000000000000021) {
          goto LABEL_18;
        }
        goto LABEL_17;
      case 7u:
        unint64_t v11 = 0xD000000000000029;
        NSString v12 = "builtinPhoneNumberAvailable";
        goto LABEL_16;
      case 8u:
        unint64_t v9 = 0xD00000000000001BLL;
        unint64_t v8 = 0x80000001002D23C0;
        goto LABEL_13;
      case 9u:
        unint64_t v11 = 0xD000000000000022;
        NSString v12 = "ot have revison set.";
LABEL_16:
        unint64_t v8 = (unint64_t)v12 | 0x8000000000000000;
        if (v11 == a1) {
          goto LABEL_17;
        }
        goto LABEL_18;
      default:
LABEL_13:
        if (v9 != a1) {
          goto LABEL_18;
        }
LABEL_17:
        if (v8 == a2)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
LABEL_18:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v13) {
          return v6;
        }
        if (--v2) {
          continue;
        }
        return 10;
    }
  }
}

uint64_t sub_1001B8FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  if (a1 == 6581857 && a2 == 0xE300000000000000) {
    goto LABEL_3;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v5) {
    return v3;
  }
  uint64_t v3 = 1;
  if (a1 == 29295 && a2 == 0xE200000000000000) {
    goto LABEL_3;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v6) {
    return v3;
  }
  uint64_t v3 = 2;
  if (a1 == 7630702 && a2 == 0xE300000000000000)
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
  return v3;
}

uint64_t sub_1001B9198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (a1 == 0x6843656C676E6953 && a2 == 0xEC0000006563696FLL) {
    goto LABEL_3;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v5) {
    return v4;
  }
  uint64_t v4 = 1;
  if (a1 == 0x656C7069746C754DLL && a2 == 0xEE006563696F6843) {
    goto LABEL_3;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v7) {
    return v4;
  }
  uint64_t v4 = 2;
  if (a1 == 0x6D726F4665657246 && a2 == 0xE800000000000000) {
    goto LABEL_3;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v8) {
    return v4;
  }
  uint64_t v4 = 3;
  if (a1 == 0x6E49746C697542 && a2 == 0xE700000000000000)
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v9) {
      return 3;
    }
    else {
      return 4;
    }
  }
  return v4;
}

uint64_t sub_1001B957C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 7;
  char v5 = &byte_10034A608;
  while (2)
  {
    unsigned int v7 = *v5++;
    uint64_t v6 = v7;
    unint64_t v8 = 0xD000000000000017;
    unint64_t v9 = 0x80000001002CACF0;
    switch(v7)
    {
      case 1u:
        unint64_t v11 = "SwitchToRoadsideFailed";
        unint64_t v10 = 0xD000000000000010;
        goto LABEL_6;
      case 2u:
        NSString v12 = "SwitchToEmergency";
        goto LABEL_9;
      case 3u:
        unint64_t v11 = "SelectRoadsideProvider";
        unint64_t v10 = 0xD000000000000011;
LABEL_6:
        unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
        if (v10 != a1) {
          goto LABEL_14;
        }
        goto LABEL_13;
      case 4u:
        NSString v12 = "SelectRoadsidePhoneNumber";
LABEL_9:
        unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
        if (a1 != 0xD000000000000016) {
          goto LABEL_14;
        }
        goto LABEL_13;
      case 5u:
        unint64_t v8 = 0xD000000000000019;
        unint64_t v9 = 0x80000001002D2740;
        goto LABEL_12;
      case 6u:
        unint64_t v9 = 0x80000001002D2720;
        if (a1 != 0xD000000000000018) {
          goto LABEL_14;
        }
        goto LABEL_13;
      default:
LABEL_12:
        if (v8 != a1) {
          goto LABEL_14;
        }
LABEL_13:
        if (v9 == a2)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
LABEL_14:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v13) {
          return v6;
        }
        if (--v2) {
          continue;
        }
        return 7;
    }
  }
}

uint64_t sub_1001B9750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (a1 == 0x636E656772656D45 && a2 == 0xED00006570795479) {
    goto LABEL_8;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    uint64_t v4 = 1;
    if (a1 == 0xD000000000000016 && 0x80000001002D27E0 == a2)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return v4;
    }
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 2;
    }
  }
  return v4;
}

uint64_t sub_1001B9870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  if (a1 == 0x6F697463656C6553 && a2 == 0xE90000000000006ELL) {
    goto LABEL_12;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v6) {
    return v4;
  }
  uint64_t v4 = 1;
  if (a1 == 1954047316 && a2 == 0xE400000000000000)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v4;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return 2;
  }
  return v4;
}

uint64_t sub_1001B9970(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1001B8FEC(a1, (uint64_t)a2);
  if (v4 == 3)
  {
    uint64_t v5 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v7 = v6;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = a1;
    v8._unint64_t object = a2;
    String.append(_:)(v8);
    v9._uint64_t countAndFlagsBits = 11815;
    v9._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v9);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:), v5);
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1001B9AB0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1001B9198(a1, (uint64_t)a2);
  if (v4 == 4)
  {
    uint64_t v5 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v7 = v6;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = a1;
    v8._unint64_t object = a2;
    String.append(_:)(v8);
    v9._uint64_t countAndFlagsBits = 11815;
    v9._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v9);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:), v5);
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1001B9BF0(uint64_t result, void *a2)
{
  if (result != 0x726F7461646E614DLL || a2 != (void *)0xE900000000000079)
  {
    uint64_t v4 = result;
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if ((result & 1) == 0)
    {
      uint64_t v5 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v7 = v6;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      v8._uint64_t countAndFlagsBits = v4;
      v8._unint64_t object = a2;
      String.append(_:)(v8);
      v9._uint64_t countAndFlagsBits = 11815;
      v9._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:), v5);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1001B9D60(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1001B957C(a1, (uint64_t)a2);
  if (v4 == 7)
  {
    uint64_t v5 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v7 = v6;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = a1;
    v8._unint64_t object = a2;
    String.append(_:)(v8);
    v9._uint64_t countAndFlagsBits = 11815;
    v9._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v9);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:), v5);
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1001B9EA0(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  char v5 = a3();
  if (v5 != 2) {
    return v5 & 1;
  }
  uint64_t v6 = type metadata accessor for DecodingError();
  swift_allocError();
  uint64_t v8 = v7;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = a1;
  v9._unint64_t object = a2;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 11815;
  v10._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v8, enum case for DecodingError.dataCorrupted(_:), v6);
  return swift_willThrow();
}

void *sub_1001B9FDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1001C24F0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t type metadata accessor for QuestionnairePresentationBuddyAutoSendPolicy.Key()
{
  return self;
}

uint64_t sub_1001BA038(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  v11[1] = a3;
  uint64_t v6 = sub_100004010(&qword_10038C1E8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnairePresentationBuddyAutoSendPolicy.Key();
  sub_1001C7FAC(&qword_10038C1E0, (void (*)(uint64_t))type metadata accessor for QuestionnairePresentationBuddyAutoSendPolicy.Key);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t inited = swift_initStaticObject();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    uint64_t inited = swift_initStaticObject();
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t inited = swift_initStaticObject();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001BA230@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001C27B0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1001BA260(void *a1)
{
  return sub_1001BA038(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1001BA280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v20 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v21 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v7)
  {
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(*(void *)(v4 + 56) + 72 * v11 + 64);
    if (*(void *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1001BEC58(a1, a2);
      if (v17)
      {
        uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
        swift_retain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v18;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v12 >= v21) {
    goto LABEL_23;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_19;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v21) {
    goto LABEL_23;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v9);
  if (v13) {
    goto LABEL_19;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v21) {
    goto LABEL_23;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v9);
  if (v13)
  {
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_20;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v21)
  {
LABEL_23:
    swift_release();
    return 0;
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v21) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for QuestionnairePresentationBuddy.Key()
{
  return self;
}

uint64_t sub_1001BA520(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004010(&qword_10038C220);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnairePresentationBuddy.Key();
  sub_1001C7FAC(&qword_10038C1F8, (void (*)(uint64_t))type metadata accessor for QuestionnairePresentationBuddy.Key);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  *(void *)&long long v10 = swift_initStaticObject();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    *(void *)&long long v10 = *(void *)(v3 + 8);
    swift_bridgeObjectRetain();
    uint64_t inited = swift_initStaticObject();
    sub_100004010(&qword_10038C200);
    sub_1001C2DE4(&qword_10038C228, (void (*)(void))sub_1001C2E60);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100039F34(v3);
    sub_10000D544(v3 + 16, (uint64_t)v12, &qword_10038C238);
    sub_10000D544((uint64_t)v12, (uint64_t)&v13, &qword_10038C238);
    if (v15 != 1)
    {
      long long v10 = v13;
      uint64_t v11 = v14;
      uint64_t inited = swift_initStaticObject();
      sub_1001C2EB4();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1001BA7D0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1001C29E0(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1001BA814(void *a1)
{
  return sub_1001BA520(a1);
}

uint64_t type metadata accessor for QuestionPresentationBuddy.Key()
{
  return self;
}

uint64_t sub_1001BA874(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004010(&qword_10038C2A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionPresentationBuddy.Key();
  sub_1001C7FAC(&qword_10038C250, (void (*)(uint64_t))type metadata accessor for QuestionPresentationBuddy.Key);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v9 = v3[1];
  long long v18 = *v3;
  long long v19 = v9;
  long long v10 = v3[3];
  long long v20 = v3[2];
  long long v21 = v10;
  uint64_t v11 = HIBYTE(*((void *)&v18 + 1)) & 0xFLL;
  if ((*((void *)&v18 + 1) & 0x2000000000000000) == 0) {
    uint64_t v11 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11 || (uint64_t v16 = swift_initStaticObject(), KeyedEncodingContainer.encode(_:forKey:)(), !v2))
  {
    uint64_t v12 = HIBYTE(*((void *)&v19 + 1)) & 0xFLL;
    if ((*((void *)&v19 + 1) & 0x2000000000000000) == 0) {
      uint64_t v12 = v19 & 0xFFFFFFFFFFFFLL;
    }
    if (!v12 || (uint64_t v16 = swift_initStaticObject(), KeyedEncodingContainer.encode(_:forKey:)(), !v2))
    {
      uint64_t v24 = v20;
      if (*(void *)(v20 + 16))
      {
        uint64_t v16 = v20;
        swift_bridgeObjectRetain();
        uint64_t inited = swift_initStaticObject();
        sub_100004010(&qword_100384D68);
        sub_1001C36B4(&qword_10038C2A8, &qword_100384D68, (void (*)(void))sub_1001C3774);
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        if (v2)
        {
          sub_10004F5B0((uint64_t)&v24);
          return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
        sub_10004F5B0((uint64_t)&v24);
      }
      uint64_t v16 = *((void *)v3 + 8);
      uint64_t v17 = v16;
      swift_bridgeObjectRetain();
      uint64_t inited = swift_initStaticObject();
      sub_100004010(&qword_10038C258);
      sub_1001C37C8();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_10004F5B0((uint64_t)&v17);
      if (!v2)
      {
        sub_10000D544((uint64_t)&v20 + 8, (uint64_t)v23, &qword_100382450);
        sub_10000D544((uint64_t)v23, (uint64_t)&v26, &qword_100382450);
        if (v26)
        {
          uint64_t v16 = v26;
          uint64_t inited = swift_initStaticObject();
          sub_100004010(&qword_100380040);
          sub_1001C3898(&qword_10038C2C8);
          KeyedEncodingContainer.encode<A>(_:forKey:)();
        }
        sub_10000D544((uint64_t)&v21, (uint64_t)v22, &qword_100380920);
        sub_10000D544((uint64_t)v22, (uint64_t)v25, &qword_100380920);
        if (v25[1])
        {
          uint64_t v16 = swift_initStaticObject();
          KeyedEncodingContainer.encode(_:forKey:)();
        }
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_1001BACA8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001C2F08(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1001BACFC(void *a1)
{
  return sub_1001BA874(a1);
}

uint64_t type metadata accessor for OptionPresentationBuddy.Key()
{
  return self;
}

uint64_t sub_1001BAD38(void *a1, void *a2)
{
  uint64_t v4 = sub_100004010(&qword_10038C2E0);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v33 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  long long v35 = (char *)&v33 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v36 = (char *)&v33 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  char v15 = (char *)&v33 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  sub_100008F88(a1, a1[3]);
  type metadata accessor for OptionPresentationBuddy.Key();
  sub_1001C7FAC(&qword_10038C2D8, (void (*)(uint64_t))type metadata accessor for OptionPresentationBuddy.Key);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  unint64_t v18 = a2[3];
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = a2[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    uint64_t inited = swift_initStaticObject();
    long long v20 = v38;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v21 = v20;
    if (v20) {
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v4);
    }
  }
  else
  {
    long long v21 = v38;
  }
  if (a2[5])
  {
    uint64_t v38 = v21;
    uint64_t inited = swift_initStaticObject();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t inited = swift_initStaticObject();
    os_log_type_t v23 = v36;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t inited = swift_initStaticObject();
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v37 + 8);
    v24(v23, v4);
    v24(v15, v4);
    return ((uint64_t (*)(char *, uint64_t))v24)(v17, v4);
  }
  else
  {
    if (!a2[7]) {
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v4);
    }
    uint64_t v38 = v21;
    Swift::String v36 = (char *)a2[6];
    uint64_t inited = swift_initStaticObject();
    uint64_t v25 = v4;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t inited = swift_initStaticObject();
    uint64_t v26 = v34;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t inited = swift_initStaticObject();
    uint64_t v27 = v38;
    KeyedEncodingContainer.encode(_:forKey:)();
    if (v27)
    {
      uint64_t v28 = v25;
      uint64_t v29 = *(void (**)(char *, uint64_t))(v37 + 8);
      v29(v26, v28);
      v29(v35, v28);
      return ((uint64_t (*)(char *, uint64_t))v29)(v17, v28);
    }
    else
    {
      uint64_t v38 = v17;
      uint64_t inited = swift_initStaticObject();
      uint64_t v30 = v33;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      Color.description.getter();
      uint64_t v31 = v25;
      uint64_t inited = swift_initStaticObject();
      KeyedEncodingContainer.encode(_:forKey:)();
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v37 + 8);
      v32(v30, v31);
      v32(v26, v31);
      v32(v35, v31);
      return ((uint64_t (*)(char *, uint64_t))v32)(v38, v31);
    }
  }
}

char *sub_1001BB274@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  __n128 result = sub_1001C38FC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001BB2A0(void *a1)
{
  return sub_1001BAD38(a1, *v1);
}

void *sub_1001BB2BC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __n128 result = sub_1001C6830(a1, (uint64_t (*)(void))sub_1001B8ADC);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001BB300(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

uint64_t _s3KeyCMa()
{
  return self;
}

uint64_t sub_1001BB400(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004010(&qword_10038C318);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  _s3KeyCMa();
  sub_1001C7FAC(&qword_10038C2F0, (void (*)(uint64_t))_s3KeyCMa);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t inited = swift_initStaticObject();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = *(unsigned char *)(v3 + 32);
    uint64_t inited = swift_initStaticObject();
    sub_1001C4718();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t inited = swift_initStaticObject();
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t inited = *(void *)(v3 + 96);
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_initStaticObject();
    sub_100004010(&qword_10038C300);
    sub_1001C476C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001BB67C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 96);
  unint64_t v56 = v2;
  if (v2 >> 62) {
    goto LABEL_49;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v3)
  {
LABEL_3:
    uint64_t v4 = 0;
    uint64_t v57 = v3;
    while (1)
    {
      if ((v56 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v7 = __OFADD__(v4, 1);
        uint64_t v8 = v4 + 1;
        if (v7) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v6 = *(void *)(v56 + 32 + 8 * v4);
        swift_retain();
        BOOL v7 = __OFADD__(v4, 1);
        uint64_t v8 = v4 + 1;
        if (v7) {
          goto LABEL_46;
        }
      }
      unint64_t v9 = *(void *)(v6 + 40);
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
      }
      uint64_t v60 = (void *)v6;
      uint64_t v59 = v8;
      if (v10) {
        break;
      }
LABEL_33:
      swift_bridgeObjectRelease_n();
      uint64_t v32 = v60[2];
      uint64_t v31 = v60[3];
      uint64_t v33 = v60[10];
      uint64_t v58 = v60[9];
      uint64_t v34 = v60[12];
      uint64_t v62 = v60[11];
      uint64_t v36 = v60[13];
      uint64_t v35 = v60[14];
      uint64_t v66 = v60[15];
      uint64_t v68 = v60[16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v64 = v35;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v39 = sub_1001BEC58(v32, v31);
      uint64_t v40 = *((void *)&_swiftEmptyDictionarySingleton + 2);
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_47;
      }
      char v43 = v38;
      if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000A2344();
        }
      }
      else
      {
        sub_10009FAF8(v42, isUniquelyReferenced_nonNull_native);
        unint64_t v44 = sub_1001BEC58(v32, v31);
        if ((v43 & 1) != (v45 & 1))
        {
LABEL_54:
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v39 = v44;
      }
      if (v43)
      {
        uint64_t v5 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 72 * v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v5 = v58;
        v5[1] = v33;
        uint64_t v5[2] = v62;
        v5[3] = v34;
        v5[4] = v36;
        v5[5] = v64;
        v5[6] = v66;
        v5[7] = v68;
        v5[8] = &_swiftEmptyDictionarySingleton;
      }
      else
      {
        *((void *)&_swiftEmptyDictionarySingleton + (v39 >> 6) + 8) |= 1 << v39;
        uint64_t v46 = (uint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + 16 * v39);
        *uint64_t v46 = v32;
        v46[1] = v31;
        long long v47 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 72 * v39);
        *long long v47 = v58;
        v47[1] = v33;
        v47[2] = v62;
        void v47[3] = v34;
        v47[4] = v36;
        v47[5] = v64;
        v47[6] = v66;
        void v47[7] = v68;
        v47[8] = &_swiftEmptyDictionarySingleton;
        uint64_t v48 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v7 = __OFADD__(v48, 1);
        uint64_t v49 = v48 + 1;
        if (v7) {
          goto LABEL_48;
        }
        *((void *)&_swiftEmptyDictionarySingleton + 2) = v49;
        swift_bridgeObjectRetain();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v59;
      if (v59 == v57) {
        goto LABEL_50;
      }
    }
    unint64_t v65 = v9 & 0xC000000000000001;
    uint64_t v11 = 4;
    uint64_t v61 = v10;
    unint64_t v63 = v9;
    while (1)
    {
      uint64_t v13 = v11 - 4;
      if (v65)
      {
        uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v15 = v11 - 3;
        if (__OFADD__(v13, 1)) {
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v14 = *(void **)(v9 + 8 * v11);
        swift_retain();
        uint64_t v15 = v11 - 3;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          swift_bridgeObjectRetain_n();
          uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v3) {
            break;
          }
          goto LABEL_3;
        }
      }
      uint64_t v67 = v15;
      uint64_t v17 = v14[2];
      uint64_t v16 = v14[3];
      uint64_t v18 = v14[4];
      swift_bridgeObjectRetain();
      swift_retain();
      char v19 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v21 = sub_1001BEC58(v17, v16);
      uint64_t v22 = *((void *)&_swiftEmptyDictionarySingleton + 2);
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_44;
      }
      char v25 = v20;
      if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v24)
      {
        if (v19)
        {
          if (v20) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_1000A2578();
          if (v25) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_10009FE9C(v24, v19);
        unint64_t v26 = sub_1001BEC58(v17, v16);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_54;
        }
        unint64_t v21 = v26;
        if (v25)
        {
LABEL_15:
          uint64_t v12 = *((void *)&_swiftEmptyDictionarySingleton + 7);
          swift_release();
          *(void *)(v12 + 8 * v21) = v18;
          goto LABEL_16;
        }
      }
      *((void *)&_swiftEmptyDictionarySingleton + (v21 >> 6) + 8) |= 1 << v21;
      uint64_t v28 = (uint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + 16 * v21);
      *uint64_t v28 = v17;
      v28[1] = v16;
      *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 8 * v21) = v18;
      uint64_t v29 = *((void *)&_swiftEmptyDictionarySingleton + 2);
      BOOL v7 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v7) {
        goto LABEL_45;
      }
      *((void *)&_swiftEmptyDictionarySingleton + 2) = v30;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v11;
      unint64_t v9 = v63;
      if (v67 == v61) {
        goto LABEL_33;
      }
    }
  }
LABEL_50:
  uint64_t result = swift_bridgeObjectRelease_n();
  char v51 = *(unsigned char *)(v55 + 80);
  if (v51)
  {
    uint64_t v52 = 0;
    long long v53 = 0uLL;
  }
  else
  {
    uint64_t v52 = *(void *)(v55 + 72);
    long long v53 = *(_OWORD *)(v55 + 56);
  }
  *(void *)a1 = *(void *)(v55 + 88);
  *(void *)(a1 + 8) = &_swiftEmptyDictionarySingleton;
  *(_OWORD *)(a1 + 16) = v53;
  *(void *)(a1 + 32) = v52;
  *(unsigned char *)(a1 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v51;
  return result;
}

uint64_t sub_1001BBC14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001C4138(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001BBC40(void *a1)
{
  return sub_1001BB400(a1);
}

uint64_t _s3KeyCMa_0()
{
  return self;
}

uint64_t sub_1001BBC88(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004010(&qword_10038C390);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  _s3KeyCMa_0();
  sub_1001C7FAC(&qword_10038C340, (void (*)(uint64_t))_s3KeyCMa_0);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t inited = swift_initStaticObject();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = *(unsigned char *)(v3 + 32);
    uint64_t inited = swift_initStaticObject();
    sub_1001C64E0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (*(void *)(*(void *)(v3 + 56) + 16))
    {
      uint64_t inited = *(void *)(v3 + 56);
      swift_bridgeObjectRetain();
      uint64_t v12 = swift_initStaticObject();
      sub_100004010(&qword_100384C60);
      sub_1001C36B4(&qword_10038C3A0, &qword_100384C60, (void (*)(void))sub_1001C6534);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      swift_bridgeObjectRelease();
    }
    uint64_t inited = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_initStaticObject();
    sub_100004010(&qword_10038C350);
    sub_1001C6588();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v3 + 48);
    type metadata accessor for NoPrerequisites();
    if (!swift_dynamicCastClass())
    {
      uint64_t inited = v10;
      swift_retain();
      uint64_t v12 = swift_initStaticObject();
      type metadata accessor for Condition();
      sub_1001C7FAC(&qword_10038C1D0, (void (*)(uint64_t))type metadata accessor for Condition);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      swift_release();
    }
    if (*(unsigned char *)(v3 + 64) != 7)
    {
      LOBYTE(v12) = *(unsigned char *)(v3 + 64);
      uint64_t inited = swift_initStaticObject();
      sub_100004010(&qword_10038C3C0);
      sub_1001C36B4(&qword_10038C3C8, &qword_10038C3C0, (void (*)(void))sub_1001C662C);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_1001BC0C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1001C5954(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001BC0F4(void *a1)
{
  return sub_1001BBC88(a1);
}

uint64_t sub_1001BC118(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

void *sub_1001BC25C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C6740(a1, (uint64_t (*)(uint64_t))sub_1001B9AB0);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1001BC29C(void *a1)
{
  return sub_1001BC118(a1);
}

uint64_t sub_1001BC2B8(void *a1)
{
  return sub_1001C6680(a1);
}

uint64_t sub_1001BC2D0(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

uint64_t sub_1001BC36C(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

void *sub_1001BC4D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C6740(a1, (uint64_t (*)(uint64_t))sub_1001B9D60);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1001BC518(void *a1)
{
  return sub_1001BC36C(a1);
}

uint64_t sub_1001BC534(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

void *sub_1001BC61C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C6830(a1, (uint64_t (*)(void))sub_1001B9750);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001BC660(void *a1)
{
  return sub_1001BC534(a1);
}

uint64_t _s3KeyCMa_1()
{
  return self;
}

uint64_t sub_1001BC6A0(void *a1, char a2)
{
  uint64_t v4 = sub_100004010(&qword_10038C3F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  _s3KeyCMa_1();
  sub_1001C7FAC(&qword_10038C3E0, (void (*)(uint64_t))_s3KeyCMa_1);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = a2;
  v9[1] = swift_initStaticObject();
  sub_1001C6B3C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1001BC83C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001C6924(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001BC868(void *a1)
{
  return sub_1001BC6A0(a1, *v1);
}

uint64_t _s3KeyCMa_2()
{
  return self;
}

uint64_t sub_1001BC8A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_10038C418);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v15 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v14 - v8;
  sub_100008F88(a1, a1[3]);
  _s3KeyCMa_2();
  sub_1001C7FAC(&qword_10038C408, (void (*)(uint64_t))_s3KeyCMa_2);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t inited = swift_initStaticObject();
  uint64_t v10 = v16;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v11 = v15;
  if ((*(unsigned char *)(v2 + 40) & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t inited = swift_initStaticObject();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  char v17 = 1;
  uint64_t inited = swift_initStaticObject();
  sub_1001C723C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  uint64_t inited = swift_initStaticObject();
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v11, v4);
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v4);
}

uint64_t sub_1001BCB58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001C6B90(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001BCB84(void *a1)
{
  return sub_1001BC8A8(a1);
}

void *sub_1001BCBA8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C6830(a1, (uint64_t (*)(void))sub_1001B9870);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001BCBEC(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  swift_bridgeObjectRelease();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

uint64_t _s3KeyCMa_3()
{
  return self;
}

uint64_t sub_1001BCCE4()
{
  uint64_t result = sub_1001BF6C4(0, 3, 0);
  unint64_t v2 = _swiftEmptyArrayStorage[2];
  unint64_t v1 = _swiftEmptyArrayStorage[3];
  unint64_t v3 = v2 + 1;
  if (v2 >= v1 >> 1) {
    uint64_t result = sub_1001BF6C4(v1 > 1, v2 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v3;
  uint64_t v4 = &_swiftEmptyArrayStorage[2 * v2];
  v4[4] = 6581857;
  v4[5] = 0xE300000000000000;
  unint64_t v5 = _swiftEmptyArrayStorage[3];
  int64_t v6 = v2 + 2;
  if (v3 >= v5 >> 1) {
    uint64_t result = sub_1001BF6C4(v5 > 1, v6, 1);
  }
  _swiftEmptyArrayStorage[2] = v6;
  uint64_t v7 = &_swiftEmptyArrayStorage[2 * v3];
  _OWORD v7[4] = 29295;
  void v7[5] = 0xE200000000000000;
  unint64_t v9 = _swiftEmptyArrayStorage[2];
  unint64_t v8 = _swiftEmptyArrayStorage[3];
  if (v9 >= v8 >> 1) {
    uint64_t result = sub_1001BF6C4(v8 > 1, v9 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v9 + 1;
  uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
  void v10[4] = 7630702;
  v10[5] = 0xE300000000000000;
  qword_10038B638 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1001BCEB4()
{
  uint64_t result = sub_1001BF6C4(0, 3, 0);
  unint64_t v2 = _swiftEmptyArrayStorage[2];
  unint64_t v1 = _swiftEmptyArrayStorage[3];
  unint64_t v3 = v2 + 1;
  if (v2 >= v1 >> 1) {
    uint64_t result = sub_1001BF6C4(v1 > 1, v2 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v3;
  uint64_t v4 = &_swiftEmptyArrayStorage[2 * v2];
  v4[4] = 1852138867;
  v4[5] = 0xE400000000000000;
  unint64_t v5 = _swiftEmptyArrayStorage[3];
  int64_t v6 = v2 + 2;
  if (v3 >= v5 >> 1) {
    uint64_t result = sub_1001BF6C4(v5 > 1, v6, 1);
  }
  _swiftEmptyArrayStorage[2] = v6;
  uint64_t v7 = &_swiftEmptyArrayStorage[2 * v3];
  _OWORD v7[4] = 0x6465726577736E61;
  void v7[5] = 0xE800000000000000;
  unint64_t v9 = _swiftEmptyArrayStorage[2];
  unint64_t v8 = _swiftEmptyArrayStorage[3];
  if (v9 >= v8 >> 1) {
    uint64_t result = sub_1001BF6C4(v8 > 1, v9 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v9 + 1;
  uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
  void v10[4] = 0x64657070696B73;
  v10[5] = 0xE700000000000000;
  qword_10038B640 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1001BD0C0()
{
  uint64_t result = sub_1001BF6C4(0, 1, 0);
  unint64_t v2 = _swiftEmptyArrayStorage[2];
  unint64_t v1 = _swiftEmptyArrayStorage[3];
  if (v2 >= v1 >> 1) {
    uint64_t result = sub_1001BF6C4(v1 > 1, v2 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v2 + 1;
  unint64_t v3 = &_swiftEmptyArrayStorage[2 * v2];
  v3[4] = 0x64657463656C6573;
  v3[5] = 0xE800000000000000;
  qword_10038B648 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

char *sub_1001BD168()
{
  uint64_t v0 = 10;
  sub_1001BF6C4(0, 10, 0);
  unint64_t v1 = _swiftEmptyArrayStorage;
  unint64_t v2 = (unint64_t)"builtinRoadsideAvailable";
  unint64_t v3 = 0xD000000000000018;
  unint64_t v4 = (unint64_t)"emporarilyUnavailable";
  unint64_t v5 = (unint64_t)"asInvokedFromEmergency";
  unint64_t v6 = (unint64_t)"WasInvokedFromRoadside";
  unint64_t v7 = (unint64_t)"onversationActive";
  uint64_t result = "roviderSelectionAvailable";
  unint64_t v9 = (unint64_t)"builtinPhoneNumberAvailable";
  unint64_t v10 = 0xD00000000000001BLL;
  unint64_t v11 = (unint64_t)"honeNumberSelected";
  unint64_t v12 = (unint64_t)"ot have revison set.";
  uint64_t v13 = &byte_10034A720;
  do
  {
    int v14 = *v13++;
    unint64_t v15 = 0x80000001002D2520;
    unint64_t v16 = 0xD000000000000019;
    switch(v14)
    {
      case 1:
        unint64_t v15 = v2 | 0x8000000000000000;
        goto LABEL_9;
      case 2:
        unint64_t v15 = v4 | 0x8000000000000000;
        unint64_t v16 = v3;
        break;
      case 3:
        unint64_t v16 = 0xD000000000000025;
        unint64_t v15 = v5 | 0x8000000000000000;
        break;
      case 4:
        unint64_t v16 = 0xD000000000000026;
        unint64_t v15 = v6 | 0x8000000000000000;
        break;
      case 5:
        unint64_t v16 = 0xD000000000000026;
        unint64_t v15 = v7 | 0x8000000000000000;
        break;
      case 6:
        unint64_t v15 = (unint64_t)result | 0x8000000000000000;
LABEL_9:
        unint64_t v16 = 0xD000000000000021;
        break;
      case 7:
        unint64_t v16 = 0xD000000000000029;
        unint64_t v15 = v9 | 0x8000000000000000;
        break;
      case 8:
        unint64_t v15 = v11 | 0x8000000000000000;
        unint64_t v16 = v10;
        break;
      case 9:
        unint64_t v16 = 0xD000000000000022;
        unint64_t v15 = v12 | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v31 = v1;
    unint64_t v18 = v1[2];
    unint64_t v17 = v1[3];
    if (v18 >= v17 >> 1)
    {
      BOOL v23 = (const char *)v9;
      uint64_t v24 = result;
      unint64_t v21 = (char *)v11;
      unint64_t v22 = v10;
      unint64_t v29 = v3;
      uint64_t v30 = (const char *)v2;
      char v27 = (char *)v5;
      uint64_t v28 = (char *)v4;
      char v25 = (char *)v7;
      unint64_t v26 = (char *)v6;
      char v20 = (char *)v12;
      sub_1001BF6C4(v17 > 1, v18 + 1, 1);
      unint64_t v12 = (unint64_t)v20;
      unint64_t v11 = (unint64_t)v21;
      unint64_t v10 = v22;
      unint64_t v9 = (unint64_t)v23;
      uint64_t result = v24;
      unint64_t v7 = (unint64_t)v25;
      unint64_t v6 = (unint64_t)v26;
      unint64_t v5 = (unint64_t)v27;
      unint64_t v4 = (unint64_t)v28;
      unint64_t v3 = v29;
      unint64_t v2 = (unint64_t)v30;
      unint64_t v1 = v31;
    }
    v1[2] = v18 + 1;
    char v19 = &v1[2 * v18];
    v19[4] = v16;
    v19[5] = v15;
    --v0;
  }
  while (v0);
  qword_10038B650 = (uint64_t)v1;
  return result;
}

uint64_t sub_1001BD3AC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004010(&qword_10038C198);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v2;
  uint64_t v8 = type metadata accessor for Condition();
  swift_retain();
  sub_100004010(&qword_10038C1A0);
  if (swift_dynamicCast())
  {
    sub_100009164(v23, (uint64_t)v25);
    sub_100008F88(a1, a1[3]);
    _s3KeyCMa_3();
    sub_1001C7FAC(&qword_10038C1B8, (void (*)(uint64_t))_s3KeyCMa_3);
    dispatch thunk of Encoder.container<A>(keyedBy:)();
    uint64_t v9 = v26;
    uint64_t v10 = v27;
    sub_100008F88(v25, v26);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    uint64_t v13 = v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v11;
    *(void *)(v14 + 24) = v13;
    uint64_t v15 = v26;
    uint64_t v16 = v27;
    sub_100008F88(v25, v26);
    uint64_t v28 = v14;
    KeyedEncodingContainer.superEncoder(forKey:)();
    (*(void (**)(long long *, uint64_t, uint64_t))(v16 + 16))(v23, v15, v16);
    swift_release();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v25);
  }
  else
  {
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_10000950C((uint64_t)v23, &qword_10038C1A8);
    uint64_t v18 = type metadata accessor for EncodingError();
    swift_allocError();
    char v20 = v19;
    sub_100004010(&qword_10038C1B0);
    v20[3] = v8;
    *char v20 = v2;
    sub_100008F88(a1, a1[3]);
    swift_retain();
    dispatch thunk of Encoder.codingPath.getter();
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(29);
    v21._unint64_t object = (void *)0x80000001002D2200;
    v21._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    String.append(_:)(v21);
    *(void *)&v23[0] = v2;
    _print_unlocked<A, B>(_:_:)();
    v22._uint64_t countAndFlagsBits = 46;
    v22._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    EncodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for EncodingError.invalidValue(_:), v18);
    return swift_willThrow();
  }
}

uint64_t sub_1001BD760(void *a1)
{
  return sub_1001BD3AC(a1);
}

uint64_t sub_1001BD784(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void *)(v2 + 24);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v9 = type metadata accessor for EncodingError();
    swift_allocError();
    uint64_t v11 = v10;
    sub_100004010(&qword_10038C1B0);
    void v11[3] = type metadata accessor for LogicalCondition();
    *uint64_t v11 = v2;
    sub_100008F88(a1, a1[3]);
    swift_retain();
    dispatch thunk of Encoder.codingPath.getter();
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v12._unint64_t object = (void *)0x80000001002D2220;
    v12._uint64_t countAndFlagsBits = 0xD000000000000022;
    String.append(_:)(v12);
    uint64_t v16 = v2;
    _print_unlocked<A, B>(_:_:)();
    v13._uint64_t countAndFlagsBits = 46;
    v13._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    EncodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, enum case for EncodingError.invalidValue(_:), v9);
    return swift_willThrow();
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_15;
  }
LABEL_3:
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  if (*(unsigned char *)(v2 + 16) != 2)
  {
    uint64_t v16 = v4;
    sub_1000238C4((uint64_t)v14, v15);
    sub_100004010(&qword_10038C1C0);
    sub_1001BEA28();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v14);
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v5)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_12;
    }
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v6 = *(void *)(v4 + 32);
      swift_retain();
LABEL_12:
      swift_bridgeObjectRelease();
      uint64_t v16 = v6;
      sub_1000238C4((uint64_t)v14, v15);
      type metadata accessor for Condition();
      sub_1001C7FAC(&qword_10038C1D0, (void (*)(uint64_t))type metadata accessor for Condition);
      dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
      swift_release();
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v14);
    }
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1001BDAEC()
{
  if (!*(unsigned char *)(*(void *)v0 + 16)) {
    return 6581857;
  }
  if (*(unsigned char *)(*(void *)v0 + 16) == 1) {
    return 29295;
  }
  return 7630702;
}

uint64_t sub_1001BDB2C(void *a1)
{
  return sub_1001BD784(a1);
}

uint64_t sub_1001BDB50()
{
  if (!*(unsigned char *)(*(void *)v0 + 16)) {
    return 1852138867;
  }
  if (*(unsigned char *)(*(void *)v0 + 16) == 1) {
    return 0x6465726577736E61;
  }
  return 0x64657070696B73;
}

uint64_t sub_1001BDBA4(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

uint64_t sub_1001BDC44()
{
  return 0x64657463656C6573;
}

uint64_t sub_1001BDC5C(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1000238C4((uint64_t)v2, v3);
  dispatch thunk of SingleValueEncodingContainer.encode(_:)();
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v2);
}

unint64_t sub_1001BDCFC()
{
  return sub_1001B7B08();
}

uint64_t sub_1001BDD20()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuestionnaireRevisionContainer()
{
  return self;
}

uint64_t sub_1001BDD54()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuestionnairePresentationBuddyContainer()
{
  return self;
}

uint64_t type metadata accessor for QuestionnaireStringsBundle.Key()
{
  return self;
}

uint64_t sub_1001BDDD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[1] = a4;
  v13[2] = a5;
  void v13[3] = a2;
  uint64_t v8 = sub_100004010(&qword_10038C438);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnaireStringsBundle.Key();
  sub_1001C7FAC(&qword_10038C430, (void (*)(uint64_t))type metadata accessor for QuestionnaireStringsBundle.Key);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (!a3 || (uint64_t inited = swift_initStaticObject(), KeyedEncodingContainer.encode(_:forKey:)(), !v5))
  {
    uint64_t inited = swift_initStaticObject();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001BDFA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001C7290(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1001BDFD0(void *a1)
{
  return sub_1001BDDD4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t type metadata accessor for QuestionnaireRepresentation.Key()
{
  return self;
}

uint64_t sub_1001BE014(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100004010(&qword_10038C480);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    uint64_t v21 = v10;
    uint64_t v22 = v4;
    sub_100008F88(a1, a1[3]);
    type metadata accessor for QuestionnaireRepresentation.Key();
    sub_1001C7FAC(&qword_10038C448, (void (*)(uint64_t))type metadata accessor for QuestionnaireRepresentation.Key);
    swift_retain();
    dispatch thunk of Encoder.container<A>(keyedBy:)();
    sub_100004010(&qword_10038C488);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1002B3350;
    uint64_t v15 = *(void *)(a4 + 40);
    uint64_t v14 = *(void *)(a4 + 48);
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 4sub_100157A04((uint64_t)sub_100158148, 0) = 0;
    *(void *)(v13 + 48) = v15;
    *(void *)(v13 + 56) = v14;
    *(void *)&long long v23 = a2;
    *((void *)&v23 + 1) = a3;
    swift_bridgeObjectRetain();
    uint64_t inited = swift_initStaticObject();
    sub_1001C7BC4();
    uint64_t v16 = v22;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (v16)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v12, v9);
    }
    else
    {
      *(void *)&long long v23 = swift_initStaticObject();
      KeyedEncodingContainer.encode(_:forKey:)();
      *(void *)&long long v23 = a4;
      uint64_t inited = swift_initStaticObject();
      type metadata accessor for Questionnaire();
      sub_1001C7FAC(&qword_10038C498, (void (*)(uint64_t))type metadata accessor for Questionnaire);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_1001BB67C((uint64_t)&v25);
      long long v23 = v25;
      v24[0] = v26[0];
      *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v26 + 9);
      uint64_t inited = swift_initStaticObject();
      sub_1001C7C18();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100039F34((uint64_t)&v25);
      *(void *)&long long v23 = v13;
      uint64_t inited = swift_initStaticObject();
      sub_100004010(&qword_10038C450);
      sub_1001C36B4(&qword_10038C4A8, &qword_10038C450, (void (*)(void))sub_1001C7C6C);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v9);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v17 = type metadata accessor for EncodingError();
    swift_allocError();
    char v19 = v18;
    sub_100004010(&qword_10038C1B0);
    *char v19 = a2;
    v19[1] = a3;
    long long v19[2] = 0;
    v19[3] = &type metadata for QuestionnaireRepresentation;
    EncodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for EncodingError.invalidValue(_:), v17);
    return swift_willThrow();
  }
}

void *sub_1001BE500@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1001C7518(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1001BE530(void *a1)
{
  return sub_1001BE014(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1001BE550()
{
  return 0;
}

uint64_t type metadata accessor for QuestionnaireRegion.Key()
{
  return self;
}

uint64_t initializeWithCopy for QuestionnairePresentationBuddy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QuestionnairePresentationBuddy(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for QuestionnairePresentationBuddy(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnairePresentationBuddy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnairePresentationBuddy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4sub_100157A04((uint64_t)sub_100158148, 0) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnairePresentationBuddy()
{
  return &type metadata for QuestionnairePresentationBuddy;
}

ValueMetadata *type metadata accessor for QuestionnaireRevision()
{
  return &type metadata for QuestionnaireRevision;
}

uint64_t sub_1001BE760(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100004010(&qword_10038C4E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnaireRegion.Key();
  sub_1001C7FAC(&qword_10038C4C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireRegion.Key);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[3] = a2;
  swift_bridgeObjectRetain();
  v9[1] = swift_initStaticObject();
  sub_100004010(&qword_10038C4C8);
  sub_1001C36B4(&qword_10038C4F0, &qword_10038C4C8, (void (*)(void))sub_1001C8048);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_1001BE950@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1001C7CC0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001BE97C(void *a1)
{
  return sub_1001BE760(a1, *v1);
}

uint64_t sub_1001BE998()
{
  return sub_1001C7FAC(&qword_10038C188, (void (*)(uint64_t))type metadata accessor for StringCodingKey);
}

uint64_t sub_1001BE9E0()
{
  return sub_1001C7FAC(&qword_10038C190, (void (*)(uint64_t))type metadata accessor for StringCodingKey);
}

unint64_t sub_1001BEA28()
{
  unint64_t result = qword_10038C1C8;
  if (!qword_10038C1C8)
  {
    sub_1000094C4(&qword_10038C1C0);
    sub_1001C7FAC(&qword_10038C1D0, (void (*)(uint64_t))type metadata accessor for Condition);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C1C8);
  }
  return result;
}

unint64_t sub_1001BEACC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_1001BEE88(a1, v4);
}

unint64_t sub_1001BEB14(Swift::UInt a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001BEF94(a1, v2);
}

unint64_t sub_1001BEB80(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();
  return sub_1001BF2B4(a1, v2);
}

unint64_t sub_1001BEBE8(char a1)
{
  char v2 = a1 & 1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Swift::Int v3 = Hasher._finalize()();

  return sub_1001BF030(v2, v3);
}

unint64_t sub_1001BEC58(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1001BF0EC(a1, a2, v4);
}

unint64_t sub_1001BECD4(uint64_t a1)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();
  return sub_1001BF1D0(a1, v2);
}

unint64_t sub_1001BED58(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_1001BF354(a1, v2);
}

unint64_t sub_1001BEDE8(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();
  return sub_1001BEF94(a1, v2);
}

unint64_t sub_1001BEE24(uint64_t a1)
{
  type metadata accessor for CodingUserInfoKey();
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_1001BF4CC(a1, v2);
}

unint64_t sub_1001BEE88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1001C809C();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1001BEF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001BF030(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001BF0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1001BF1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    uint64_t v7 = *(void *)(v6 + 8 * v5);
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    BOOL v10 = *(void *)(v7 + 16) == v8 && *(void *)(v7 + 24) == v9;
    if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v11 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v11;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          break;
        }
        uint64_t v12 = *(void *)(v6 + 8 * v5);
        BOOL v13 = *(void *)(v12 + 16) == v8 && *(void *)(v12 + 24) == v9;
      }
      while (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v5;
}

unint64_t sub_1001BF2B4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001BF354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1001BF4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = type metadata accessor for CodingUserInfoKey();
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_1001BF664(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BF7C4(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF684(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BF924(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001BF6A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BFAB0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF6C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BFC20(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF6E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BFD8C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF704(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001BFF14(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF724(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001C0080(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF744(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001C01E8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF764(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001C0370(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001BF784(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001C05B8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF7A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001C073C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001BF7C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C510);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BF924(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_100389BF0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100004010(&qword_100380920);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BFAB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C508);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BFC20(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010((uint64_t *)&unk_1003839F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BFD8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C540);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BFF14(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C550);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C0080(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C388);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C01E8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038B498);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C0370(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004010(&qword_1003881B8);
  uint64_t v10 = *(void *)(sub_100004010(&qword_100380418) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100004010(&qword_100380418) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  char v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C05B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C548);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001C073C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004010(&qword_10038C4E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double sub_1001C08C4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001BEE24(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000A2730();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for CodingUserInfoKey();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_10004A864((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1001C0F3C(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_1001C09F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v9);
        double result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (void *)(v11 + 8 * v3);
          uint64_t v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          size_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *size_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001C0BAC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v9);
        double result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          double result = v14 + 72 * v3;
          size_t v15 = (const void *)(v14 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v15 + 72 || (BOOL v16 = v3 == v6, v3 = v6, !v16))
          {
            double result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001C0D80(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        double result = Hasher._finalize()();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v3);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          BOOL v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *BOOL v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001C0F3C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CodingUserInfoKey();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      BOOL v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *uint64_t v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *unint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unsigned __int8 *sub_1001C11F4(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1001C1558();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_1001C12DC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1001C12DC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1001C1558()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_1001C15D8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001C15D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1001C1730(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1001B3618(v9, 0),
          unint64_t v12 = sub_1001C1830((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1001C1730(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1001B3680(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1001B3680(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_1001C1830(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1001B3680(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1001B3680(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1001C1A44(void *a1)
{
  uint64_t v3 = a1[3];
  sub_100008F88(a1, v3);
  dispatch thunk of Decoder.singleValueContainer()();
  if (v1) {
    goto LABEL_47;
  }
  sub_100008F88(v39, v39[3]);
  uint64_t v37 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
  uint64_t v38 = v4;
  sub_100033310();
  uint64_t v5 = (void *)StringProtocol.components<A>(separatedBy:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5[2] <= 1uLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v8 = v7;
    sub_100008F88(a1, a1[3]);
    dispatch thunk of Decoder.codingPath.getter();
LABEL_46:
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v3 - 8) + 104))(v8, enum case for DecodingError.dataCorrupted(_:), v3);
    swift_willThrow();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v39);
LABEL_47:
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
    return v3;
  }
  uint64_t v9 = v5[4];
  unint64_t v10 = v5[5];
  uint64_t v11 = HIBYTE(v10) & 0xF;
  uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v10 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(v10) & 0xF;
  }
  else {
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13) {
    goto LABEL_44;
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t)sub_1001C11F4(v9, v10, 10);
    char v16 = v36;
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0) {
      uint64_t v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v14 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t result = (uint64_t)sub_1001C12DC(v14, v12, 10);
    uint64_t v3 = result;
    char v16 = v15 & 1;
LABEL_40:
    if ((v16 & 1) == 0)
    {
      if (v5[2] >= 2uLL)
      {
        uint64_t v23 = v5[6];
        unint64_t v24 = v5[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1001B7C14(v23, v24);
        if ((v25 & 1) == 0)
        {
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v39);
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
          return v3;
        }
        uint64_t v3 = type metadata accessor for DecodingError();
        swift_allocError();
        uint64_t v8 = v27;
        sub_100008F88(a1, a1[3]);
        dispatch thunk of Decoder.codingPath.getter();
        goto LABEL_46;
      }
      __break(1u);
      goto LABEL_71;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v8 = v26;
    sub_100008F88(a1, a1[3]);
    dispatch thunk of Decoder.codingPath.getter();
    goto LABEL_46;
  }
  uint64_t v37 = v5[4];
  uint64_t v38 = v10 & 0xFFFFFFFFFFFFFFLL;
  if (v9 != 43)
  {
    if (v9 == 45)
    {
      if (!v11)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (v11 != 1)
      {
        unsigned __int8 v17 = BYTE1(v9) - 48;
        if ((BYTE1(v9) - 48) <= 9u)
        {
          uint64_t v3 = 0;
          BOOL v18 = v17 == 0;
          unint64_t v19 = -(uint64_t)v17;
          if (!v18) {
            goto LABEL_37;
          }
          if (v11 == 2)
          {
            char v16 = 0;
            uint64_t v3 = v19;
            goto LABEL_40;
          }
          unsigned __int8 v31 = BYTE2(v9) - 48;
          if ((BYTE2(v9) - 48) <= 9u && is_mul_ok(v19, 0xAuLL))
          {
            unint64_t v32 = 10 * v19;
            uint64_t v3 = v32 - v31;
            if (v32 >= v31)
            {
              uint64_t v33 = v11 - 3;
              if (v11 != 3)
              {
                uint64_t v34 = (unsigned __int8 *)&v37 + 3;
                while (1)
                {
                  unsigned int v35 = *v34 - 48;
                  if (v35 > 9) {
                    goto LABEL_36;
                  }
                  if (!is_mul_ok(v3, 0xAuLL)) {
                    goto LABEL_36;
                  }
                  BOOL v18 = 10 * v3 >= (unint64_t)v35;
                  uint64_t v3 = 10 * v3 - v35;
                  if (!v18) {
                    goto LABEL_36;
                  }
                  char v16 = 0;
                  ++v34;
                  if (!--v33) {
                    goto LABEL_40;
                  }
                }
              }
LABEL_39:
              char v16 = 0;
              goto LABEL_40;
            }
          }
        }
      }
    }
    else if (v11 && (v9 - 48) <= 9u)
    {
      uint64_t v3 = (v9 - 48);
      if (v11 == 1) {
        goto LABEL_39;
      }
      if ((BYTE1(v9) - 48) <= 9u)
      {
        uint64_t v3 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        uint64_t v28 = v11 - 2;
        if (v11 != 2)
        {
          unsigned int v29 = (unsigned __int8 *)&v37 + 2;
          while (1)
          {
            unsigned int v30 = *v29 - 48;
            if (v30 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v3, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v18 = __CFADD__(10 * v3, v30);
            uint64_t v3 = 10 * v3 + v30;
            if (v18) {
              goto LABEL_36;
            }
            char v16 = 0;
            ++v29;
            if (!--v28) {
              goto LABEL_40;
            }
          }
        }
        goto LABEL_39;
      }
    }
LABEL_36:
    uint64_t v3 = 0;
LABEL_37:
    char v16 = 1;
    goto LABEL_40;
  }
  if (v11)
  {
    if (v11 != 1 && (BYTE1(v9) - 48) <= 9u)
    {
      uint64_t v3 = (BYTE1(v9) - 48);
      if (v11 == 2) {
        goto LABEL_39;
      }
      if ((BYTE2(v9) - 48) <= 9u)
      {
        uint64_t v3 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        uint64_t v20 = v11 - 3;
        if (v11 != 3)
        {
          uint64_t v21 = (unsigned __int8 *)&v37 + 3;
          while (1)
          {
            unsigned int v22 = *v21 - 48;
            if (v22 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v3, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v18 = __CFADD__(10 * v3, v22);
            uint64_t v3 = 10 * v3 + v22;
            if (v18) {
              goto LABEL_36;
            }
            char v16 = 0;
            ++v21;
            if (!--v20) {
              goto LABEL_40;
            }
          }
        }
        goto LABEL_39;
      }
    }
    goto LABEL_36;
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1001C1FD0(void *a1)
{
  uint64_t v2 = type metadata accessor for CodingUserInfoKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  uint64_t v6 = dispatch thunk of Decoder.userInfo.getter();
  if (qword_10037DE60 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10000FD84(v2, (uint64_t)qword_1003A9BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_1001BEE24((uint64_t)v5), (v9 & 1) != 0))
  {
    sub_1000A30C0(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (*((void *)&v16 + 1))
  {
    type metadata accessor for QuestionnaireRevisionContainer();
    if (swift_dynamicCast()) {
      return v14[1];
    }
  }
  else
  {
    sub_10000950C((uint64_t)&v15, &qword_10038D290);
  }
  uint64_t v11 = type metadata accessor for DecodingError();
  swift_allocError();
  uint64_t v13 = v12;
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.codingPath.getter();
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, enum case for DecodingError.dataCorrupted(_:), v11);
  return swift_willThrow();
}

uint64_t sub_1001C2260(void *a1)
{
  uint64_t v2 = type metadata accessor for CodingUserInfoKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  uint64_t v6 = dispatch thunk of Decoder.userInfo.getter();
  if (qword_10037DE70 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10000FD84(v2, (uint64_t)qword_1003A9C20);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_1001BEE24((uint64_t)v5), (v9 & 1) != 0))
  {
    sub_1000A30C0(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (*((void *)&v16 + 1))
  {
    type metadata accessor for QuestionnairePresentationBuddyContainer();
    if (swift_dynamicCast()) {
      return v14[1];
    }
  }
  else
  {
    sub_10000950C((uint64_t)&v15, &qword_10038D290);
  }
  uint64_t v11 = type metadata accessor for DecodingError();
  swift_allocError();
  uint64_t v13 = v12;
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.codingPath.getter();
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, enum case for DecodingError.dataCorrupted(_:), v11);
  return swift_willThrow();
}

void *sub_1001C24F0(void *a1)
{
  uint64_t v3 = sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (v1)
  {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100008F88(v6, v6[3]);
    sub_100004010(&qword_10038C518);
    sub_1001C36B4(&qword_10038C520, &qword_10038C518, (void (*)(void))sub_1001C6400);
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    uint64_t v3 = v5;
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v6);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1001C27B0(void *a1)
{
  uint64_t v2 = sub_100004010(&qword_10038C1D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnairePresentationBuddyAutoSendPolicy.Key();
  sub_1001C7FAC(&qword_10038C1E0, (void (*)(uint64_t))type metadata accessor for QuestionnairePresentationBuddyAutoSendPolicy.Key);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t inited = swift_initStaticObject();
  uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t inited = swift_initStaticObject();
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t inited = swift_initStaticObject();
  KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  return v6;
}

uint64_t sub_1001C29E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = sub_100004010(&qword_10038C1F0);
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnairePresentationBuddy.Key();
  sub_1001C7FAC(&qword_10038C1F8, (void (*)(uint64_t))type metadata accessor for QuestionnairePresentationBuddy.Key);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t inited = swift_initStaticObject();
  uint64_t v9 = v19;
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  sub_100004010(&qword_10038C200);
  uint64_t v23 = swift_initStaticObject();
  sub_1001C2DE4(&qword_10038C208, (void (*)(void))sub_1001C2D3C);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v18 = inited;
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_initStaticObject();
  uint64_t inited = v12;
  HIDWORD(v17) = KeyedDecodingContainer.contains(_:)();
  if ((v17 & 0x100000000) != 0)
  {
    uint64_t v23 = v12;
    sub_1001C2D90();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v13 = inited;
    uint64_t v14 = v21;
    uint64_t v15 = v22;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  uint64_t v16 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 4sub_100157A04((uint64_t)sub_100158148, 0) = (v17 & 0x100000000) == 0;
  return result;
}

unint64_t sub_1001C2D3C()
{
  unint64_t result = qword_10038C210;
  if (!qword_10038C210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C210);
  }
  return result;
}

unint64_t sub_1001C2D90()
{
  unint64_t result = qword_10038C218;
  if (!qword_10038C218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C218);
  }
  return result;
}

uint64_t sub_1001C2DE4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(&qword_10038C200);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C2E60()
{
  unint64_t result = qword_10038C230;
  if (!qword_10038C230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C230);
  }
  return result;
}

unint64_t sub_1001C2EB4()
{
  unint64_t result = qword_10038C240;
  if (!qword_10038C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C240);
  }
  return result;
}

uint64_t sub_1001C2F08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v44 = a2;
  uint64_t v4 = sub_100004010(&qword_10038C248);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1;
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionPresentationBuddy.Key();
  sub_1001C7FAC(&qword_10038C250, (void (*)(uint64_t))type metadata accessor for QuestionPresentationBuddy.Key);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  uint64_t v43 = v5;
  uint64_t inited = swift_initStaticObject();
  v46[0] = inited;
  if (KeyedDecodingContainer.contains(_:)())
  {
    v46[0] = inited;
    uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  uint64_t v13 = swift_initStaticObject();
  v46[0] = v13;
  if (KeyedDecodingContainer.contains(_:)())
  {
    v46[0] = v13;
    uint64_t v40 = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    unint64_t v42 = v14;
  }
  else
  {
    uint64_t v40 = 0;
    unint64_t v42 = 0xE000000000000000;
  }
  uint64_t v15 = swift_initStaticObject();
  v46[0] = v15;
  char v16 = KeyedDecodingContainer.contains(_:)();
  uint64_t v41 = v10;
  if (v16)
  {
    sub_100004010(&qword_100384D68);
    uint64_t v48 = v15;
    sub_1001C36B4(&qword_10038C278, &qword_100384D68, (void (*)(void))sub_1001C3720);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v17 = (void *)v46[0];
  }
  else
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = swift_initStaticObject();
  v46[0] = v18;
  if (KeyedDecodingContainer.contains(_:)())
  {
    sub_100004010(&qword_100380040);
    uint64_t v48 = v18;
    sub_1001C3898(&qword_10038C270);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v39 = v46[0];
  }
  else
  {
    uint64_t v39 = 0;
  }
  uint64_t v20 = swift_initStaticObject();
  v46[0] = v20;
  if (KeyedDecodingContainer.contains(_:)())
  {
    v46[0] = v20;
    uint64_t v21 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v23 = v22;
    uint64_t v38 = v21;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v23 = 0;
  }
  sub_1001B8354(v8, (uint64_t)v46);
  uint64_t v24 = v43;
  sub_100008F88(v46, v47);
  uint64_t v37 = v23;
  uint64_t v36 = sub_1001B8630(v41, v12);
  uint64_t v41 = v25;
  swift_bridgeObjectRelease();
  sub_100008F88(v46, v47);
  uint64_t v35 = sub_1001B8630((uint64_t)v40, v42);
  uint64_t v40 = v17;
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  sub_100004010(&qword_10038C258);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v42 = v27;
  uint64_t v28 = (uint64_t)v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v39;
  swift_bridgeObjectRetain();
  uint64_t v45 = swift_initStaticObject();
  sub_1001C35E4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
  uint64_t v30 = v48;
  swift_bridgeObjectRetain();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v46);
  uint64_t v31 = v41;
  swift_bridgeObjectRetain();
  unint64_t v32 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v33 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v34 = v44;
  *unint64_t v44 = v36;
  v34[1] = v31;
  void v34[2] = v35;
  uint64_t v34[3] = v32;
  void v34[4] = v28;
  v34[5] = v29;
  v34[6] = v38;
  unsigned char v34[7] = v33;
  v34[8] = v30;
  return result;
}

unint64_t sub_1001C35E4()
{
  unint64_t result = qword_10038C260;
  if (!qword_10038C260)
  {
    sub_1000094C4(&qword_10038C258);
    sub_1001C3660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C260);
  }
  return result;
}

unint64_t sub_1001C3660()
{
  unint64_t result = qword_10038C268;
  if (!qword_10038C268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C268);
  }
  return result;
}

uint64_t sub_1001C36B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C3720()
{
  unint64_t result = qword_10038C280;
  if (!qword_10038C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C280);
  }
  return result;
}

unint64_t sub_1001C3774()
{
  unint64_t result = qword_10038C2B0;
  if (!qword_10038C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C2B0);
  }
  return result;
}

unint64_t sub_1001C37C8()
{
  unint64_t result = qword_10038C2B8;
  if (!qword_10038C2B8)
  {
    sub_1000094C4(&qword_10038C258);
    sub_1001C3844();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C2B8);
  }
  return result;
}

unint64_t sub_1001C3844()
{
  unint64_t result = qword_10038C2C0;
  if (!qword_10038C2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C2C0);
  }
  return result;
}

uint64_t sub_1001C3898(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000094C4(&qword_100380040);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1001C38FC(void *a1)
{
  uint64_t v2 = sub_100004010(&qword_10038C2D0);
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v67 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  unint64_t v65 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v56 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v56 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = a1[3];
  uint64_t v68 = (uint64_t)a1;
  uint64_t v17 = (char *)sub_100008F88(a1, v16);
  type metadata accessor for OptionPresentationBuddy.Key();
  uint64_t v18 = sub_1001C7FAC(&qword_10038C2D8, (void (*)(uint64_t))type metadata accessor for OptionPresentationBuddy.Key);
  uint64_t v19 = v70;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    uint64_t v20 = (void *)v68;
LABEL_21:
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v20);
    return v17;
  }
  unint64_t v63 = v13;
  uint64_t v64 = v18;
  uint64_t v60 = v7;
  uint64_t v61 = v10;
  uint64_t v70 = 0;
  uint64_t v21 = v66;
  uint64_t inited = swift_initStaticObject();
  v69[0] = inited;
  uint64_t v23 = v67;
  if (KeyedDecodingContainer.contains(_:)())
  {
    v69[0] = inited;
    uint64_t v17 = v15;
    uint64_t v24 = v70;
    uint64_t v25 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v20 = (void *)v68;
    if (v24)
    {
LABEL_10:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v23);
      goto LABEL_21;
    }
    uint64_t v27 = v25;
    uint64_t v70 = 0;
    unint64_t v62 = v26;
  }
  else
  {
    uint64_t v27 = 0;
    unint64_t v62 = 0xE000000000000000;
    uint64_t v20 = (void *)v68;
  }
  uint64_t v68 = static Color.clear.getter();
  uint64_t v28 = swift_initStaticObject();
  v69[0] = v28;
  if ((KeyedDecodingContainer.contains(_:)() & 1) == 0)
  {
    uint64_t v59 = v15;
    uint64_t v31 = 0;
    uint64_t v17 = 0;
    uint64_t v32 = v21;
    goto LABEL_12;
  }
  uint64_t v58 = v27;
  v69[0] = v28;
  uint64_t v29 = v63;
  uint64_t v17 = v15;
  uint64_t v30 = v70;
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  if (v30)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_10;
  }
  uint64_t v70 = 0;
  uint64_t v38 = swift_initStaticObject();
  v69[0] = v38;
  uint64_t v17 = v29;
  uint64_t v32 = v21;
  if (KeyedDecodingContainer.contains(_:)())
  {
    v69[0] = v38;
    uint64_t v39 = v61;
    uint64_t v40 = v70;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    if (v40)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v32 + 8);
      v41(v29, v23);
      v41(v15, v23);
      goto LABEL_21;
    }
    v69[0] = swift_initStaticObject();
    KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v70 = 0;
    uint64_t v59 = v15;
    uint64_t v49 = v39;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v32 + 8);
    v50(v49, v23);
    v50(v63, v23);
    uint64_t v31 = 0;
    uint64_t v17 = 0;
    goto LABEL_26;
  }
  uint64_t v59 = v15;
  uint64_t v42 = swift_initStaticObject();
  v69[0] = v42;
  if ((KeyedDecodingContainer.contains(_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v23);
    uint64_t v31 = 0;
    uint64_t v17 = 0;
LABEL_26:
    uint64_t v27 = v58;
    goto LABEL_12;
  }
  v69[0] = v42;
  uint64_t v43 = v60;
  uint64_t v44 = v70;
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  uint64_t v27 = v58;
  if (v44)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v45 = *(void (**)(char *, uint64_t))(v21 + 8);
    v45(v17, v23);
    v45(v59, v23);
    goto LABEL_21;
  }
  v69[0] = swift_initStaticObject();
  uint64_t v57 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v61 = (char *)v47;
  v69[0] = swift_initStaticObject();
  uint64_t v48 = v65;
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  v69[0] = swift_initStaticObject();
  uint64_t v51 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v70 = 0;
  uint64_t v53 = sub_1000AB050(v51, v52);
  swift_bridgeObjectRelease();
  if (v53)
  {
    swift_release();
    uint64_t v68 = v53;
  }
  else
  {
    uint64_t v54 = static Color.clear.getter();
    swift_release();
    uint64_t v68 = v54;
  }
  uint64_t v55 = *(void (**)(char *, uint64_t))(v32 + 8);
  v55(v48, v23);
  v55(v43, v23);
  v55(v63, v23);
  uint64_t v17 = v61;
  uint64_t v31 = v57;
LABEL_12:
  uint64_t v33 = v70;
  sub_1001B8354(v20, (uint64_t)v69);
  if (v33)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v59, v23);
    goto LABEL_21;
  }
  sub_100008F88(v69, v69[3]);
  uint64_t v61 = v17;
  uint64_t v57 = v31;
  uint64_t v34 = sub_1001B8630(v27, v62);
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for OptionPresentation();
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v34;
  *((void *)v17 + 3) = v36;
  uint64_t v37 = v61;
  *((void *)v17 + 6) = v57;
  *((void *)v17 + 7) = v37;
  *((void *)v17 + 8) = v68;
  *((void *)v17 + 4) = 0;
  *((void *)v17 + 5) = 0;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v59, v23);
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v69);
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v20);
  return v17;
}

uint64_t sub_1001C4138(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C2E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)sub_100008F88(a1, a1[3]);
  _s3KeyCMa();
  sub_1001C7FAC(&qword_10038C2F0, (void (*)(uint64_t))_s3KeyCMa);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t inited = swift_initStaticObject();
    sub_1001C4620();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v8 = v30;
    uint64_t inited = swift_initStaticObject();
    uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v29 = v11;
    uint64_t v12 = sub_1001C2260(a1);
    if (*(void *)(v12 + 24))
    {
      uint64_t v13 = *(void *)(v12 + 48);
      uint64_t v27 = *(void *)(v12 + 40);
      uint64_t v28 = v13;
      uint64_t v26 = *(void *)(v12 + 32);
      int v25 = *(unsigned __int8 *)(v12 + 56);
      swift_release();
      v31[0] = v8;
      uint64_t v14 = v26;
      uint64_t v15 = v27;
      if (v25)
      {
        uint64_t v14 = 0;
        uint64_t v15 = 0;
      }
      uint64_t v16 = v28;
      if (v25) {
        uint64_t v16 = 0;
      }
      uint64_t v32 = v10;
      uint64_t v33 = v29;
      uint64_t v34 = v14;
      uint64_t v35 = v15;
      uint64_t v36 = v16;
      char v37 = v25 & 1;
      uint64_t v17 = sub_1001C1FD0(a1);
      if ((*(unsigned char *)(v17 + 32) & 1) == 0)
      {
        uint64_t v21 = *(void *)(v17 + 24);
        uint64_t v28 = *(void *)(v17 + 16);
        swift_release();
        uint64_t inited = swift_initStaticObject();
        uint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)();
        uint64_t v27 = v21;
        sub_100004010(&qword_10038C300);
        uint64_t v30 = swift_initStaticObject();
        sub_1001C4674();
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        unint64_t v23 = inited;
        type metadata accessor for Questionnaire();
        swift_allocObject();
        uint64_t v7 = sub_10009A3E0(v28, v27, (uint64_t)v31, v22, v23);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
        return v7;
      }
    }
    uint64_t v18 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = a1[3];
    uint64_t v27 = a1[4];
    uint64_t v28 = v20;
    sub_100008F88(a1, v19);
    dispatch thunk of Decoder.codingPath.getter();
    uint64_t v7 = v28;
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:), v18);
    swift_willThrow();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  return v7;
}

unint64_t sub_1001C4620()
{
  unint64_t result = qword_10038C2F8;
  if (!qword_10038C2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C2F8);
  }
  return result;
}

unint64_t sub_1001C4674()
{
  unint64_t result = qword_10038C308;
  if (!qword_10038C308)
  {
    sub_1000094C4(&qword_10038C300);
    sub_1001C7FAC(&qword_10038C310, (void (*)(uint64_t))type metadata accessor for Question);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C308);
  }
  return result;
}

unint64_t sub_1001C4718()
{
  unint64_t result = qword_10038C320;
  if (!qword_10038C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C320);
  }
  return result;
}

unint64_t sub_1001C476C()
{
  unint64_t result = qword_10038C328;
  if (!qword_10038C328)
  {
    sub_1000094C4(&qword_10038C300);
    sub_1001C7FAC(&qword_10038C330, (void (*)(uint64_t))type metadata accessor for Question);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C328);
  }
  return result;
}

uint64_t sub_1001C4810(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  char v10 = sub_1001B8BE4(a1, (uint64_t)a2);
  if (v10 == 3)
  {
    uint64_t v11 = type metadata accessor for DecodingError();
    uint64_t v12 = swift_allocError();
    uint64_t v14 = v13;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = a1;
    v15._unint64_t object = a2;
    String.append(_:)(v15);
    v16._uint64_t countAndFlagsBits = 11815;
    v16._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v14, enum case for DecodingError.dataCorrupted(_:), v11);
LABEL_6:
    uint64_t v18 = v12;
    swift_willThrow();
    return v18;
  }
  if (a5 != 2)
  {
    uint64_t v19 = type metadata accessor for DecodingError();
    uint64_t v12 = swift_allocError();
    uint64_t v21 = v20;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    sub_1001C64C4(a3, a4, a5);
    v22._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 46;
    v23._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.dataCorrupted(_:), v19);
    goto LABEL_6;
  }
  char v17 = v10;
  type metadata accessor for QuestionCondition();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a4;
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t sub_1001C4A8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  BOOL v8 = a1 == 0x64657463656C6573 && a2 == (void *)0xE800000000000000;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v18 = type metadata accessor for DecodingError();
    uint64_t v13 = swift_allocError();
    uint64_t v20 = v19;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = a1;
    v21._unint64_t object = a2;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = 11815;
    v22._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v22);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for DecodingError.dataCorrupted(_:), v18);
    goto LABEL_10;
  }
  if (a5 != 2)
  {
    uint64_t v12 = type metadata accessor for DecodingError();
    uint64_t v13 = swift_allocError();
    uint64_t v15 = v14;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    sub_1001C64C4(a3, a4, a5);
    v16._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 46;
    v17._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v15, enum case for DecodingError.dataCorrupted(_:), v12);
LABEL_10:
    uint64_t v11 = v13;
    swift_willThrow();
    return v11;
  }
  type metadata accessor for OptionCondition();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  swift_bridgeObjectRetain();
  return v11;
}

uint64_t sub_1001C4D3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t object)
{
  uint64_t result = sub_1001B9970(a1, a2);
  if (v5) {
    return object;
  }
  unsigned __int8 v10 = result;
  if (object == 1)
  {
    sub_100004010(&qword_1003913B0);
    unint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1002B3AF0;
    type metadata accessor for Condition();
    *(void *)(v12 + 32) = sub_1001C51F8(a3, a4, 1);
    uint64_t result = specialized Array._endMutation()();
    int v17 = v10;
    if (v10) {
      goto LABEL_10;
    }
LABEL_16:
    type metadata accessor for AndCondition();
    unint64_t object = swift_allocObject();
    *(unsigned char *)(object + 16) = 0;
    *(void *)(object + 24) = v12;
    return object;
  }
  if ((_BYTE)object)
  {
    uint64_t v18 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v20 = v19;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1001C64C4(a3, a4, object);
    v21._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    unint64_t object = (uint64_t)v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 46;
    v22._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for DecodingError.dataCorrupted(_:), v18);
    swift_willThrow();
    return object;
  }
  uint64_t v11 = *(void *)(a3 + 16);
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v30 = a4;
    specialized ContiguousArray.reserveCapacity(_:)();
    type metadata accessor for Condition();
    uint64_t v28 = a3;
    uint64_t v13 = (unsigned __int8 *)(a3 + 48);
    do
    {
      uint64_t v14 = *((void *)v13 - 2);
      uint64_t v15 = *((void *)v13 - 1);
      uint64_t v16 = *v13;
      sub_1001C64C4(v14, v15, *v13);
      sub_1001C51F8(v14, v15, v16);
      v13 += 24;
      sub_1001C6454(v14, v15, v16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      --v11;
    }
    while (v11);
    a3 = v28;
    unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
    a4 = v30;
  }
  int v17 = v10;
  if (!v10) {
    goto LABEL_16;
  }
LABEL_10:
  if (v17 == 1)
  {
    type metadata accessor for OrCondition();
    unint64_t object = swift_allocObject();
    *(unsigned char *)(object + 16) = 1;
    *(void *)(object + 24) = v12;
    return object;
  }
  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_19;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v25 != 1)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v20 = v26;
    _StringGuts.grow(_:)(58);
    v27._uint64_t countAndFlagsBits = 0xD000000000000037;
    v27._unint64_t object = (void *)0x80000001002D26B0;
    String.append(_:)(v27);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  unint64_t object = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!object)
  {
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_26;
  }
LABEL_19:
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_22;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v23 = *(void *)(v12 + 32);
    swift_retain();
LABEL_22:
    swift_bridgeObjectRelease();
    type metadata accessor for NotCondition();
    unint64_t object = swift_allocObject();
    sub_100004010(&qword_1003913B0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1002B3AF0;
    *(void *)(v24 + 32) = v23;
    uint64_t v29 = v24;
    specialized Array._endMutation()();
    *(unsigned char *)(object + 16) = 2;
    *(void *)(object + 24) = v29;
    return object;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C51F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 1)
  {
    uint64_t v17 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = v18;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    unint64_t v52 = 0xD000000000000024;
    unint64_t v53 = 0x80000001002D2600;
    unint64_t v49 = a1;
    unint64_t v50 = a2;
    char v51 = a3;
    sub_1001C64C4(a1, a2, a3);
LABEL_12:
    v21._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    Swift::String v22 = &v52;
    v23._uint64_t countAndFlagsBits = 46;
    v23._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for DecodingError.dataCorrupted(_:), v17);
LABEL_13:
    swift_willThrow();
    return (uint64_t)v22;
  }
  if (*(void *)(a1 + 16) != 1)
  {
    uint64_t v17 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = v20;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v52 = 0xD00000000000002DLL;
    unint64_t v53 = 0x80000001002D2630;
    unint64_t v49 = a1;
    unint64_t v50 = a2;
    char v51 = 1;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  uint64_t v5 = sub_10012C6C4(a1);
  if (!v6)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_43:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_44:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v7 = v5;
  BOOL v8 = v6;
  if (qword_10037DE78 != -1) {
    swift_once();
  }
  if (sub_10012C964(v7, (uint64_t)v8, (void *)qword_10038B638))
  {
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v9 = sub_1001BEC58(v7, (uint64_t)v8);
      if (v10)
      {
        uint64_t v11 = *(void *)(a1 + 56) + 24 * v9;
        uint64_t v12 = *(void *)v11;
        uint64_t v13 = *(void *)(v11 + 8);
        uint64_t v14 = *(unsigned __int8 *)(v11 + 16);
        sub_1001C64C4(*(void *)v11, v13, *(unsigned char *)(v11 + 16));
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1001C4D3C(v7, v8, v12, v13, v14);
LABEL_25:
        Swift::String v22 = (unint64_t *)v15;
        swift_bridgeObjectRelease();
        sub_1001C6454(v12, v13, v14);
        return (uint64_t)v22;
      }
      goto LABEL_42;
    }
    __break(1u);
  }
  else if (qword_10037DE80 == -1)
  {
    goto LABEL_16;
  }
  swift_once();
LABEL_16:
  if (sub_10012C964(v7, (uint64_t)v8, (void *)qword_10038B640))
  {
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1001BEC58(v7, (uint64_t)v8);
      if (v26)
      {
        uint64_t v27 = *(void *)(a1 + 56) + 24 * v25;
        uint64_t v12 = *(void *)v27;
        uint64_t v13 = *(void *)(v27 + 8);
        LOBYTE(v14) = *(unsigned char *)(v27 + 16);
        sub_1001C64C4(*(void *)v27, v13, v14);
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1001C4810(v7, v8, v12, v13, v14);
        goto LABEL_25;
      }
      goto LABEL_43;
    }
    __break(1u);
  }
  else if (qword_10037DE88 == -1)
  {
    goto LABEL_21;
  }
  swift_once();
LABEL_21:
  if (sub_10012C964(v7, (uint64_t)v8, (void *)qword_10038B648))
  {
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1001BEC58(v7, (uint64_t)v8);
      if (v29)
      {
        uint64_t v30 = *(void *)(a1 + 56) + 24 * v28;
        uint64_t v12 = *(void *)v30;
        uint64_t v13 = *(void *)(v30 + 8);
        LOBYTE(v14) = *(unsigned char *)(v30 + 16);
        sub_1001C64C4(*(void *)v30, v13, v14);
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1001C4A8C(v7, v8, v12, v13, v14);
        goto LABEL_25;
      }
      goto LABEL_44;
    }
    __break(1u);
  }
  else if (qword_10037DE90 == -1)
  {
    goto LABEL_27;
  }
  swift_once();
LABEL_27:
  if ((sub_10012C964(v7, (uint64_t)v8, (void *)qword_10038B650) & 1) == 0)
  {
    uint64_t v43 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v45 = v44;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    unint64_t v49 = 0xD000000000000018;
    unint64_t v50 = 0x80000001002D2660;
    v46._uint64_t countAndFlagsBits = v7;
    v46._unint64_t object = v8;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    Swift::String v22 = &v49;
    v47._uint64_t countAndFlagsBits = 46;
    v47._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v47);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, enum case for DecodingError.dataCorrupted(_:), v43);
    goto LABEL_13;
  }
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_1001BEC58(v7, (uint64_t)v8);
  if (v32)
  {
    uint64_t v33 = *(void *)(a1 + 56) + 24 * v31;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    unsigned __int8 v36 = *(unsigned char *)(v33 + 16);
    sub_1001C64C4(*(void *)v33, v35, v36);
    swift_bridgeObjectRelease();
    char v37 = sub_1001B8DC4(v7, (uint64_t)v8);
    if (v37 == 10)
    {
      uint64_t v38 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v40 = v39;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v49 = 0xD000000000000014;
      unint64_t v50 = 0x80000001002D2310;
      v41._uint64_t countAndFlagsBits = v7;
      v41._unint64_t object = v8;
      String.append(_:)(v41);
      Swift::String v22 = &v49;
      v42._uint64_t countAndFlagsBits = 11815;
      v42._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v42);
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104))(v40, enum case for DecodingError.dataCorrupted(_:), v38);
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_1001C6454(v34, v35, v36);
    }
    else
    {
      char v48 = v37;
      swift_bridgeObjectRelease();
      sub_1001C6454(v34, v35, v36);
      type metadata accessor for BuiltInCondition();
      Swift::String v22 = (unint64_t *)swift_allocObject();
      *((unsigned char *)v22 + 16) = v48;
    }
    return (uint64_t)v22;
  }
LABEL_45:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void *sub_1001C5954(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C338);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008F88(a1, a1[3]);
  _s3KeyCMa_0();
  sub_1001C7FAC(&qword_10038C340, (void (*)(uint64_t))_s3KeyCMa_0);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t inited = (void *)swift_initStaticObject();
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v11 = v10;
    uint64_t v46 = v8;
    uint64_t v12 = swift_initStaticObject();
    uint64_t inited = (void *)v12;
    if (KeyedDecodingContainer.contains(_:)())
    {
      uint64_t v47 = v4;
      sub_100004010(&qword_100384C60);
      uint64_t v52 = v12;
      sub_1001C36B4(&qword_10038C378, &qword_100384C60, (void (*)(void))sub_1001C6470);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      char v48 = inited;
      uint64_t v4 = v47;
    }
    else
    {
      char v48 = _swiftEmptyArrayStorage;
    }
    uint64_t v13 = swift_initStaticObject();
    uint64_t inited = (void *)v13;
    if (KeyedDecodingContainer.contains(_:)())
    {
      uint64_t v52 = v13;
      sub_1001C6400();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v44 = v11;
      uint64_t v14 = v4;
      uint64_t v15 = (uint64_t)inited;
      uint64_t v16 = v50;
      unsigned __int8 v17 = v51;
      uint64_t v45 = sub_1001C51F8((uint64_t)inited, v50, v51);
      sub_1001C6454(v15, v16, v17);
      uint64_t v4 = v14;
      uint64_t v11 = v44;
    }
    else
    {
      type metadata accessor for NoPrerequisites();
      uint64_t v45 = swift_allocObject();
    }
    uint64_t v18 = swift_initStaticObject();
    uint64_t inited = (void *)v18;
    if (KeyedDecodingContainer.contains(_:)())
    {
      uint64_t inited = (void *)v18;
      sub_1001C63AC();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      int v19 = v52;
    }
    else
    {
      int v19 = 7;
    }
    uint64_t v20 = sub_1001C2260(a1);
    LODWORD(v44) = v19;
    uint64_t v21 = *(void *)(v20 + 24);
    if (v21)
    {
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v47 = v4;
      if (v22)
      {
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_1001BEC58(v46, (uint64_t)v11);
        if (v24)
        {
          unint64_t v25 = (void *)(*(void *)(v21 + 56) + 72 * v23);
          uint64_t v26 = v25[1];
          *(void *)&long long v41 = *v25;
          *((void *)&v41 + 1) = v26;
          uint64_t v40 = v25[2];
          uint64_t v27 = (void *)v25[3];
          uint64_t v28 = v25[4];
          uint64_t v42 = v25[5];
          uint64_t v43 = v27;
          uint64_t v29 = v25[7];
          uint64_t v39 = v25[6];
          v38[0] = v29;
          v38[1] = v25[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v30 = v42;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          long long v53 = v41;
          uint64_t v54 = v40;
          uint64_t v55 = v43;
          uint64_t v56 = v28;
          uint64_t v57 = v30;
          uint64_t v58 = v39;
          uint64_t v59 = v38[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t inited = (void *)swift_initStaticObject();
          sub_1001C62B4();
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          *(void *)&long long v41 = v28;
          LODWORD(v4sub_100157A04((uint64_t)sub_100158148, 0) = v60;
          sub_100004010(&qword_10038C350);
          uint64_t v52 = swift_initStaticObject();
          sub_1001C6308();
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          uint64_t v36 = v47;
          unint64_t v37 = (unint64_t)inited;
          type metadata accessor for Question();
          swift_allocObject();
          uint64_t v7 = (void *)sub_10009B318(v46, (uint64_t)v11, v40, &v53, v37, v45, (uint64_t)v48, (char)v44);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v3);
          _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
          return v7;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v32 = type metadata accessor for DecodingError();
      swift_allocError();
      char v48 = v33;
      sub_100008F88(a1, a1[3]);
      dispatch thunk of Decoder.codingPath.getter();
      uint64_t inited = 0;
      uint64_t v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease();
      uint64_t inited = (void *)0xD000000000000023;
      uint64_t v50 = 0x80000001002D25D0;
      v34._uint64_t countAndFlagsBits = v46;
      v34._unint64_t object = v11;
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._uint64_t countAndFlagsBits = 11815;
      v35._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v35);
      uint64_t v7 = v48;
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:), v32);
      swift_willThrow();
      swift_release();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v3);
    }
    else
    {
      uint64_t v46 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v43 = v31;
      uint64_t v44 = v11;
      sub_100008F88(a1, a1[3]);
      dispatch thunk of Decoder.codingPath.getter();
      uint64_t v7 = v43;
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void))(*(void *)(v46 - 8) + 104))(v7, enum case for DecodingError.dataCorrupted(_:));
      swift_willThrow();
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  return v7;
}

unint64_t sub_1001C62B4()
{
  unint64_t result = qword_10038C348;
  if (!qword_10038C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C348);
  }
  return result;
}

unint64_t sub_1001C6308()
{
  unint64_t result = qword_10038C358;
  if (!qword_10038C358)
  {
    sub_1000094C4(&qword_10038C350);
    sub_1001C7FAC(&qword_10038C360, (void (*)(uint64_t))type metadata accessor for Option);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C358);
  }
  return result;
}

unint64_t sub_1001C63AC()
{
  unint64_t result = qword_10038C368;
  if (!qword_10038C368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C368);
  }
  return result;
}

unint64_t sub_1001C6400()
{
  unint64_t result = qword_10038C370;
  if (!qword_10038C370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C370);
  }
  return result;
}

uint64_t sub_1001C6454(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1001C6470()
{
  unint64_t result = qword_10038C380;
  if (!qword_10038C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C380);
  }
  return result;
}

uint64_t sub_1001C64C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1001C64E0()
{
  unint64_t result = qword_10038C398;
  if (!qword_10038C398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C398);
  }
  return result;
}

unint64_t sub_1001C6534()
{
  unint64_t result = qword_10038C3A8;
  if (!qword_10038C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C3A8);
  }
  return result;
}

unint64_t sub_1001C6588()
{
  unint64_t result = qword_10038C3B0;
  if (!qword_10038C3B0)
  {
    sub_1000094C4(&qword_10038C350);
    sub_1001C7FAC(&qword_10038C3B8, (void (*)(uint64_t))type metadata accessor for Option);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C3B0);
  }
  return result;
}

unint64_t sub_1001C662C()
{
  unint64_t result = qword_10038C3D0;
  if (!qword_10038C3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C3D0);
  }
  return result;
}

uint64_t sub_1001C6680(void *a1)
{
  sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v1)
  {
    sub_100008F88(v6, v6[3]);
    uint64_t v3 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    sub_1001B9BF0(v3, v4);
    swift_bridgeObjectRelease();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v6);
  }
  return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
}

void *sub_1001C6740(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v2)
  {
    sub_100008F88(v8, v8[3]);
    uint64_t v6 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    uint64_t v5 = (void *)a2(v6);
    swift_bridgeObjectRelease();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v8);
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  return v5;
}

void *sub_1001C6830(void *a1, uint64_t (*a2)(void))
{
  uint64_t v5 = sub_100008F88(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v2)
  {
    sub_100008F88(v10, v10[3]);
    uint64_t v6 = dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    char v9 = sub_1001B9EA0(v6, v7, a2);
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)(v9 & 1);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v10);
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  return v5;
}

unint64_t sub_1001C6924(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C3D8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = (unint64_t)sub_100008F88(a1, a1[3]);
  _s3KeyCMa_1();
  sub_1001C7FAC(&qword_10038C3E0, (void (*)(uint64_t))_s3KeyCMa_1);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  else
  {
    v9[1] = swift_initStaticObject();
    sub_1001C6AE8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v7 = v10;
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1001C6AE8()
{
  unint64_t result = qword_10038C3E8;
  if (!qword_10038C3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C3E8);
  }
  return result;
}

unint64_t sub_1001C6B3C()
{
  unint64_t result = qword_10038C3F8;
  if (!qword_10038C3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C3F8);
  }
  return result;
}

uint64_t sub_1001C6B90(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C400);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v10 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v42 = a1;
  sub_100008F88(a1, v10);
  _s3KeyCMa_2();
  sub_1001C7FAC(&qword_10038C408, (void (*)(uint64_t))_s3KeyCMa_2);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    uint64_t v13 = v42;
  }
  else
  {
    uint64_t v11 = v6;
    uint64_t inited = swift_initStaticObject();
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v16 = v15;
    uint64_t v40 = v12;
    uint64_t v17 = swift_initStaticObject();
    uint64_t inited = v17;
    if (KeyedDecodingContainer.contains(_:)())
    {
      uint64_t inited = v17;
      uint64_t v18 = v11;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t inited = swift_initStaticObject();
      sub_1001C71E8();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v39 = v8;
      char v28 = v50;
      uint64_t inited = swift_initStaticObject();
      uint64_t v29 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v30 = v18;
      uint64_t v13 = v42;
      uint64_t v37 = v29;
      uint64_t v38 = v16;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v3);
    }
    else
    {
      uint64_t v38 = v16;
      uint64_t v39 = v8;
      char v28 = 0;
      uint64_t v37 = 40;
      uint64_t v13 = v42;
    }
    uint64_t v19 = sub_1001C2260(v13);
    uint64_t v20 = *(void *)(v19 + 24);
    if (v20)
    {
      char v21 = *(unsigned char *)(v19 + 56);
      uint64_t v22 = *(void *)(v19 + 48);
      uint64_t v45 = *(void *)(v19 + 16);
      uint64_t v46 = v20;
      long long v47 = *(_OWORD *)(v19 + 32);
      uint64_t v48 = v22;
      char v49 = v21 & 1;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v23 = sub_1001BA280(v40, v38);
      swift_bridgeObjectRelease();
      if (v23)
      {
        char v24 = v28;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v3);
        type metadata accessor for Option();
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = v40;
        *(void *)(v9 + 24) = v38;
        *(void *)(v9 + 32) = v23;
        *(unsigned char *)(v9 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v24;
        *(void *)(v9 + 48) = v37;
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v13);
        return v9;
      }
      unint64_t v31 = (void *)v38;
      uint64_t v32 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v34 = v33;
      sub_100008F88(v13, v13[3]);
      dispatch thunk of Decoder.codingPath.getter();
      uint64_t inited = 0;
      unint64_t v44 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      uint64_t inited = 0xD000000000000021;
      unint64_t v44 = 0x80000001002D2800;
      v35._uint64_t countAndFlagsBits = v40;
      v35._unint64_t object = v31;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      v36._uint64_t countAndFlagsBits = 11815;
      v36._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v36);
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, enum case for DecodingError.dataCorrupted(_:), v32);
      swift_willThrow();
      uint64_t v9 = v41 + 8;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v3);
    }
    else
    {
      uint64_t v25 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v42 = v26;
      sub_100008F88(v13, v13[3]);
      dispatch thunk of Decoder.codingPath.getter();
      uint64_t v27 = v42;
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for DecodingError.dataCorrupted(_:), v25);
      swift_willThrow();
      swift_release();
      uint64_t v9 = v41 + 8;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v3);
      swift_bridgeObjectRelease();
    }
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v13);
  return v9;
}

unint64_t sub_1001C71E8()
{
  unint64_t result = qword_10038C410;
  if (!qword_10038C410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C410);
  }
  return result;
}

unint64_t sub_1001C723C()
{
  unint64_t result = qword_10038C420;
  if (!qword_10038C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C420);
  }
  return result;
}

uint64_t sub_1001C7290(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C428);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnaireStringsBundle.Key();
  sub_1001C7FAC(&qword_10038C430, (void (*)(uint64_t))type metadata accessor for QuestionnaireStringsBundle.Key);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  else
  {
    uint64_t inited = swift_initStaticObject();
    uint64_t v11 = inited;
    if (KeyedDecodingContainer.contains(_:)())
    {
      uint64_t v11 = inited;
      uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    }
    else
    {
      uint64_t v7 = 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_initStaticObject();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_1001C7518(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C440);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)a1[4];
  sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnaireRepresentation.Key();
  sub_1001C7FAC(&qword_10038C448, (void (*)(uint64_t))type metadata accessor for QuestionnaireRepresentation.Key);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t inited = swift_initStaticObject();
    uint64_t v40 = (void *)inited;
    if (KeyedDecodingContainer.contains(_:)())
    {
      v46[0] = inited;
      sub_1001C7B70();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v7 = v40;
      uint64_t v9 = v41;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    uint64_t v10 = sub_1001C1FD0(a1);
    *(void *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v9;
    *(unsigned char *)(v10 + 32) = 0;
    swift_release();
    if (v7 == (void *)1)
    {
      sub_1001B8354(a1, (uint64_t)v46);
      uint64_t v37 = v9;
      sub_100004010(&qword_10038C450);
      uint64_t v47 = swift_initStaticObject();
      sub_1001C36B4(&qword_10038C458, &qword_10038C450, (void (*)(void))sub_1001C7AC8);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v36 = v3;
      uint64_t v12 = v40;
      uint64_t v13 = sub_100008F88(v46, v46[3]);
      uint64_t v14 = v13;
      int64_t v15 = v12[2];
      if (v15)
      {
        uint64_t v33 = v13;
        uint64_t v34 = 1;
        uint64_t v35 = v4;
        uint64_t v40 = _swiftEmptyArrayStorage;
        uint64_t v16 = v12;
        sub_1001BF6C4(0, v15, 0);
        uint64_t v17 = v40;
        v32[1] = v16;
        uint64_t v18 = v16 + 7;
        do
        {
          uint64_t v19 = *(v18 - 1);
          uint64_t v20 = *v18;
          uint64_t v40 = v17;
          unint64_t v22 = v17[2];
          unint64_t v21 = v17[3];
          uint64_t v38 = v19;
          int64_t v39 = v22 + 1;
          swift_bridgeObjectRetain();
          if (v22 >= v21 >> 1)
          {
            sub_1001BF6C4(v21 > 1, v39, 1);
            uint64_t v17 = v40;
          }
          uint64_t v23 = v38;
          v17[2] = v39;
          char v24 = &v17[2 * v22];
          v24[4] = v23;
          void v24[5] = v20;
          v18 += 4;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        uint64_t v7 = (void *)v34;
        uint64_t v4 = v35;
        uint64_t v14 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = _swiftEmptyArrayStorage;
      }
      *(void *)(*v14 + 24) = v17;
      swift_bridgeObjectRelease();
      uint64_t v40 = (void *)swift_initStaticObject();
      KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v47 = swift_initStaticObject();
      sub_1001C7B1C();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v34 = (uint64_t)v7;
      uint64_t v35 = v4;
      uint64_t v26 = v40;
      uint64_t v25 = v41;
      uint64_t v27 = v42;
      uint64_t v28 = v43;
      uint64_t v29 = v44;
      LODWORD(v39) = v45;
      uint64_t v30 = sub_1001C2260(a1);
      uint64_t v38 = *(void *)(v30 + 24);
      *(void *)(v30 + 16) = v26;
      *(void *)(v30 + 24) = v25;
      *(void *)(v30 + 32) = v27;
      *(void *)(v30 + 4sub_100157A04((uint64_t)sub_100158148, 0) = v28;
      *(void *)(v30 + 48) = v29;
      *(unsigned char *)(v30 + 56) = v39;
      swift_release();
      swift_bridgeObjectRelease();
      type metadata accessor for Questionnaire();
      uint64_t v47 = swift_initStaticObject();
      sub_1001C7FAC(&qword_10038C470, (void (*)(uint64_t))type metadata accessor for Questionnaire);
      uint64_t v31 = v36;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v31);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v46);
      uint64_t v7 = (void *)v34;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  return v7;
}

unint64_t sub_1001C7AC8()
{
  unint64_t result = qword_10038C460;
  if (!qword_10038C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C460);
  }
  return result;
}

unint64_t sub_1001C7B1C()
{
  unint64_t result = qword_10038C468;
  if (!qword_10038C468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C468);
  }
  return result;
}

unint64_t sub_1001C7B70()
{
  unint64_t result = qword_10038C478;
  if (!qword_10038C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C478);
  }
  return result;
}

unint64_t sub_1001C7BC4()
{
  unint64_t result = qword_10038C490;
  if (!qword_10038C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C490);
  }
  return result;
}

unint64_t sub_1001C7C18()
{
  unint64_t result = qword_10038C4A0;
  if (!qword_10038C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C4A0);
  }
  return result;
}

unint64_t sub_1001C7C6C()
{
  unint64_t result = qword_10038C4B0;
  if (!qword_10038C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C4B0);
  }
  return result;
}

void *sub_1001C7CC0(void *a1)
{
  uint64_t v3 = sub_100004010(&qword_10038C4B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008F88(a1, a1[3]);
  type metadata accessor for QuestionnaireRegion.Key();
  sub_1001C7FAC(&qword_10038C4C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireRegion.Key);
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100004010(&qword_10038C4C8);
    uint64_t inited = swift_initStaticObject();
    sub_1001C36B4(&qword_10038C4D0, &qword_10038C4C8, (void (*)(void))sub_1001C7FF4);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v17 = v4;
    uint64_t v18 = v3;
    uint64_t v9 = v21[2];
    v16[1] = v21;
    if (v9)
    {
      uint64_t v10 = v21 + 6;
      uint64_t v7 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v14 = *v10;
        if (*v10)
        {
          long long v19 = *((_OWORD *)v10 - 1);
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v21 = v7;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1001BF7A4(0, v7[2] + 1, 1);
            uint64_t v7 = v21;
          }
          unint64_t v12 = v7[2];
          unint64_t v11 = v7[3];
          if (v12 >= v11 >> 1)
          {
            sub_1001BF7A4(v11 > 1, v12 + 1, 1);
            uint64_t v7 = v21;
          }
          _OWORD v7[2] = v12 + 1;
          uint64_t v13 = &v7[3 * v12];
          *((_OWORD *)v13 + 2) = v19;
          v13[6] = v14;
        }
        v10 += 3;
        --v9;
      }
      while (v9);
    }
    else
    {
      uint64_t v7 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v18);
    _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1001C7FAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C7FF4()
{
  unint64_t result = qword_10038C4D8;
  if (!qword_10038C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C4D8);
  }
  return result;
}

unint64_t sub_1001C8048()
{
  unint64_t result = qword_10038C4F8;
  if (!qword_10038C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C4F8);
  }
  return result;
}

unint64_t sub_1001C809C()
{
  unint64_t result = qword_100393B80;
  if (!qword_100393B80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100393B80);
  }
  return result;
}

uint64_t sub_1001C80DC(uint64_t a1, uint64_t a2, void *a3)
{
  char v49 = a3;
  uint64_t v53 = a2;
  uint64_t v51 = a1;
  uint64_t v57 = type metadata accessor for String.Encoding();
  uint64_t v52 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  char v50 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CodingUserInfoKey();
  uint64_t v48 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for JSONDecoder.KeyDecodingStrategy();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for JSONDecoder.DataDecodingStrategy();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  uint64_t v15 = JSONDecoder.init()();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for JSONDecoder.DataDecodingStrategy.base64(_:), v11);
  uint64_t v16 = v15;
  dispatch thunk of JSONDecoder.dataDecodingStrategy.setter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for JSONDecoder.KeyDecodingStrategy.useDefaultKeys(_:), v7);
  dispatch thunk of JSONDecoder.keyDecodingStrategy.setter();
  if (qword_10037DE60 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10000FD84(v4, (uint64_t)qword_1003A9BF0);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v18(v6, v17, v4);
  uint64_t v19 = type metadata accessor for QuestionnaireRevisionContainer();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  *(unsigned char *)(v20 + 32) = 1;
  uint64_t v56 = v19;
  v55[0] = v20;
  unint64_t v21 = (void (*)(unsigned char *, void))dispatch thunk of JSONDecoder.userInfo.modify();
  sub_1001B79E8((uint64_t)v55, (uint64_t)v6);
  v21(v54, 0);
  if (qword_10037DE70 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10000FD84(v4, (uint64_t)qword_1003A9C20);
  v18(v6, v22, v4);
  uint64_t v23 = type metadata accessor for QuestionnairePresentationBuddyContainer();
  char v24 = (_OWORD *)swift_allocObject();
  v24[1] = 0u;
  _OWORD v24[2] = 0u;
  *(_OWORD *)((char *)v24 + 41) = 0u;
  swift_bridgeObjectRelease();
  uint64_t v56 = v23;
  v55[0] = (uint64_t)v24;
  uint64_t v25 = (void (*)(unsigned char *, void))dispatch thunk of JSONDecoder.userInfo.modify();
  sub_1001B79E8((uint64_t)v55, (uint64_t)v6);
  v25(v54, 0);
  if (qword_10037DE68 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10000FD84(v4, (uint64_t)qword_1003A9C08);
  v18(v6, v26, v4);
  uint64_t v27 = v49[3];
  uint64_t v28 = sub_100008F88(v49, v27);
  uint64_t v56 = v27;
  uint64_t v29 = sub_10013A31C(v55);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v29, v28, v27);
  uint64_t v30 = (void (*)(unsigned char *, void))dispatch thunk of JSONDecoder.userInfo.modify();
  sub_1001B79E8((uint64_t)v55, (uint64_t)v6);
  v30(v54, 0);
  uint64_t v31 = v50;
  static String.Encoding.utf8.getter();
  uint64_t v32 = String.data(using:allowLossyConversion:)();
  unint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v57);
  if (v34 >> 60 == 15)
  {
    uint64_t v35 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v37 = v36;
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, enum case for DecodingError.dataCorrupted(_:), v35);
    swift_willThrow();
LABEL_20:
    swift_release();
    return v35;
  }
  sub_1001C8C88();
  uint64_t v35 = v16;
  uint64_t v38 = v47[1];
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v38)
  {
LABEL_19:
    sub_10000FD70(v32, v34);
    goto LABEL_20;
  }
  uint64_t v39 = v55[0];
  if (qword_10037DE10 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_10000FD84(v40, (uint64_t)qword_1003A9B08);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Successfully created questionnaire region instance from JSON", v43, 2u);
    swift_slowDealloc();
  }

  if (!*(void *)(v39 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v35 = *(void *)(v39 + 48);
  swift_retain();
  swift_bridgeObjectRelease();
  if (!v35)
  {
LABEL_18:
    uint64_t v35 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v45 = v44;
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v35 - 8) + 104))(v45, enum case for DecodingError.dataCorrupted(_:), v35);
    swift_willThrow();
    goto LABEL_19;
  }
  sub_10000FD70(v32, v34);
  swift_release();
  return v35;
}

id sub_1001C88D0(id a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v7 - 8);
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [a1 pathForResource:v8 ofType:v9];

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    static String.Encoding.utf8.getter();
    uint64_t v11 = String.init(contentsOfFile:encoding:)();
    if (v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = v11;
      uint64_t v18 = v12;
      swift_bridgeObjectRelease();
      uint64_t v19 = type metadata accessor for BundleTranslationProvider();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a1;
      *(void *)(v20 + 24) = _swiftEmptyArrayStorage;
      void v27[3] = v19;
      v27[4] = (uint64_t)&off_10035C720;
      v27[0] = v20;
      id v21 = a1;
      a1 = (id)sub_1001C80DC(v17, v18, v27);
      swift_bridgeObjectRelease();
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((uint64_t)v27);
    }
  }
  else
  {
    if (qword_10037DE10 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000FD84(v13, (uint64_t)qword_1003A9B08);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      v27[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1001B3178(a2, a3, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2082;
      uint64_t v28 = sub_1001B3178(1852797802, 0xE400000000000000, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to retrieve resource file name for %{public}s.%{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a1 = [a1 bundlePath:v27[0]];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    sub_1000A1FAC();
    swift_allocError();
    *(void *)uint64_t v25 = v22;
    *(void *)(v25 + 8) = v24;
    *(void *)(v25 + 16) = 0;
    *(void *)(v25 + 24) = 0;
    *(unsigned char *)(v25 + 32) = 16;
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1001C8C88()
{
  unint64_t result = qword_10038C500;
  if (!qword_10038C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C500);
  }
  return result;
}

uint64_t destroy for JSONView(uint64_t a1)
{
  return sub_1001C6454(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8SOSBuddy8JSONViewOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1001C64C4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JSONView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1001C64C4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1001C6454(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JSONView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1001C6454(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001C8E68(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1001C8E70(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONView()
{
  return &type metadata for JSONView;
}

uint64_t getEnumTagSinglePayload for QuestionnaireStringsBundle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireStringsBundle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireStringsBundle()
{
  return &type metadata for QuestionnaireStringsBundle;
}

ValueMetadata *type metadata accessor for QuestionnaireRegion()
{
  return &type metadata for QuestionnaireRegion;
}

ValueMetadata *type metadata accessor for QuestionnairePresentationBuddyAutoSendPolicy()
{
  return &type metadata for QuestionnairePresentationBuddyAutoSendPolicy;
}

uint64_t destroy for QuestionPresentationBuddy()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for QuestionPresentationBuddy(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for QuestionPresentationBuddy(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QuestionPresentationBuddy(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4sub_100157A04((uint64_t)sub_100158148, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionPresentationBuddy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionPresentationBuddy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_100157A04((uint64_t)sub_100158148, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionPresentationBuddy()
{
  return &type metadata for QuestionPresentationBuddy;
}

ValueMetadata *type metadata accessor for OptionPresentationBuddy()
{
  return &type metadata for OptionPresentationBuddy;
}

ValueMetadata *type metadata accessor for QuestionnaireRepresentation()
{
  return &type metadata for QuestionnaireRepresentation;
}

unint64_t sub_1001C924C()
{
  unint64_t result = qword_10038C530;
  if (!qword_10038C530)
  {
    sub_1000094C4(&qword_10038C528);
    sub_1001C6400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C530);
  }
  return result;
}

uint64_t sub_1001C92CC(uint64_t result, unint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 56);
  if (v4)
  {
    uint64_t v5 = v2;
    uint64_t v6 = result;
    uint64_t v7 = v2 + 48;
    BOOL v8 = *(void *)(v2 + 48) == result && v4 == a2;
    if (v8 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      if (qword_10037DD80 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_10000FD84(v9, (uint64_t)qword_1003A9958);
      swift_bridgeObjectRetain_n();
      id v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        v18[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        swift_bridgeObjectRetain();
        v17[0] = sub_1001B3178(v6, a2, v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Canceling alert with id == %s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_10000D544(v7, (uint64_t)v17, &qword_10038C620);
      uint64_t v13 = *(void *)(v5 + 48);
      uint64_t v14 = *(void *)(v5 + 56);
      sub_10000D544((uint64_t)v17, (uint64_t)v18, &qword_10038C620);
      if (v18[1])
      {
        sub_1001CA820(v17, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001CA6EC(v13, v14);
        sub_1001CA6EC(0, 0);
        sub_100004010(&qword_100393AA0);
        sub_100019834();
        Subject<>.send()();
      }
      uint64_t v15 = *(void *)(v5 + 48);
      uint64_t v16 = *(void *)(v5 + 56);
      *(_OWORD *)uint64_t v7 = 0u;
      *(_OWORD *)(v7 + 16) = 0u;
      *(_OWORD *)(v7 + 32) = 0u;
      *(void *)(v7 + 48) = 0;
      sub_1001CA6EC(v15, v16);
      sub_1001C9DF4(v17);
      return (uint64_t)sub_1001CA820(v17, (void (*)(void, void, void, void, void, void, void))sub_1001CA6EC);
    }
  }
  return result;
}

uint64_t sub_1001C95DC(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void *sub_1001C960C(void *a1)
{
  uint64_t v2 = v1;
  sub_10000D544((uint64_t)a1, (uint64_t)v12, &qword_10038C620);
  uint64_t v5 = v12[0];
  uint64_t v4 = v12[1];
  uint64_t v11 = v1 + 48;
  sub_10000D544(v1 + 48, (uint64_t)v15, &qword_10038C620);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  sub_10000D544((uint64_t)v15, (uint64_t)v16, &qword_10038C620);
  if (!v17)
  {
    sub_10000D544((uint64_t)a1, (uint64_t)v13, &qword_10038C620);
    if (!v14) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  sub_10000D544((uint64_t)a1, (uint64_t)v13, &qword_10038C620);
  if (!v14)
  {
LABEL_8:
    sub_1001CA820(v15, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
    sub_1001CA820(v15, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
    sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
    sub_1001CA6EC(v6, v7);
    sub_1001CA6EC(v5, v4);
LABEL_9:
    sub_100004010(&qword_100393AA0);
    sub_100019834();
    Subject<>.send()();
    goto LABEL_10;
  }
  if ((v6 != v5 || v7 != v4) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v2 + 56);
  sub_10000D544((uint64_t)a1, v11, &qword_10038C620);
  sub_1001CA6EC(v8, v9);
  sub_1001C9DF4(v15);
  return sub_1001CA820(v15, (void (*)(void, void, void, void, void, void, void))sub_1001CA6EC);
}

uint64_t sub_1001C987C@<X0>(uint64_t *a1@<X0>, Swift::String *a2@<X8>)
{
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  sub_10000D544((uint64_t)a1, (uint64_t)v25, &qword_100382448);
  sub_100004010(&qword_100382420);
  v4._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = [v5 mainBundle];
  v26._uint64_t countAndFlagsBits = 0xD000000000000067;
  v26._unint64_t object = (void *)0x80000001002D29F0;
  v7._unint64_t object = (void *)0x80000001002D29D0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000012;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v8.value._unint64_t object = (void *)0x80000001002C7760;
  v9._uint64_t countAndFlagsBits = 0;
  v9._unint64_t object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v26);

  id v11 = [v5 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000038;
  v27._uint64_t countAndFlagsBits = 0xD00000000000006ALL;
  v27._unint64_t object = (void *)0x80000001002D2AA0;
  v12._unint64_t object = (void *)0x80000001002D2A60;
  v13.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v13.value._unint64_t object = (void *)0x80000001002C7760;
  v14._uint64_t countAndFlagsBits = 0;
  v14._unint64_t object = (void *)0xE000000000000000;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v27);

  id v16 = [v5 mainBundle];
  v17._uint64_t countAndFlagsBits = 0xD000000000000011;
  v28._uint64_t countAndFlagsBits = 0xD000000000000030;
  v28._unint64_t object = (void *)0x80000001002D2B10;
  v17._unint64_t object = (void *)0x80000001002C9700;
  v18.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v18.value._unint64_t object = (void *)0x80000001002C7760;
  v19._uint64_t countAndFlagsBits = 0;
  v19._unint64_t object = (void *)0xE000000000000000;
  Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v28);

  sub_100004010(&qword_10038C618);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1002B3350;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = (void *)swift_allocObject();
  long long v23[2] = v22;
  sub_10000D544((uint64_t)a1, (uint64_t)(v23 + 3), &qword_100382448);
  unsigned char v23[8] = 0xD000000000000014;
  v23[9] = 0x80000001002D29B0;
  *(Swift::String *)(v21 + 32) = v20;
  *(void *)(v21 + 48) = sub_1001CA7DC;
  *(void *)(v21 + 56) = v23;
  sub_1001CA7EC(a1);
  uint64_t result = swift_bridgeObjectRetain();
  a2->_uint64_t countAndFlagsBits = 0xD000000000000014;
  a2->_unint64_t object = (void *)0x80000001002D29B0;
  a2[1] = v10;
  a2[2] = v15;
  a2[3]._uint64_t countAndFlagsBits = v21;
  return result;
}

void *sub_1001C9B94@<X0>(Swift::String *a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  v21._uint64_t countAndFlagsBits = 0xD000000000000067;
  v21._unint64_t object = (void *)0x80000001002D2B70;
  v4._unint64_t object = (void *)0x80000001002D2B50;
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v5.value._unint64_t object = (void *)0x80000001002C7760;
  v6._uint64_t countAndFlagsBits = 0;
  v6._unint64_t object = (void *)0xE000000000000000;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v21);

  id v8 = [v2 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD000000000000038;
  v22._uint64_t countAndFlagsBits = 0xD00000000000006ALL;
  v22._unint64_t object = (void *)0x80000001002D2C20;
  v9._unint64_t object = (void *)0x80000001002D2BE0;
  v10.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v10.value._unint64_t object = (void *)0x80000001002C7760;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v22);

  id v13 = [v2 mainBundle];
  v14._uint64_t countAndFlagsBits = 0xD000000000000017;
  v23._uint64_t countAndFlagsBits = 0xD000000000000030;
  v23._unint64_t object = (void *)0x80000001002D2CB0;
  v14._unint64_t object = (void *)0x80000001002D2C90;
  v15.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v15.value._unint64_t object = (void *)0x80000001002C7760;
  v16._uint64_t countAndFlagsBits = 0;
  v16._unint64_t object = (void *)0xE000000000000000;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v23);

  sub_100004010(&qword_10038C618);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1002B3350;
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v19;
  result[3] = 0xD000000000000013;
  result[4] = 0x80000001002C5650;
  *(Swift::String *)(v18 + 32) = v17;
  *(void *)(v18 + 48) = sub_1001CA904;
  *(void *)(v18 + 56) = result;
  a1->_uint64_t countAndFlagsBits = 0xD000000000000013;
  a1->_unint64_t object = (void *)0x80000001002C5650;
  a1[1] = v7;
  a1[2] = v12;
  a1[3]._uint64_t countAndFlagsBits = v18;
  return result;
}

uint64_t sub_1001C9DF4(void *a1)
{
  uint64_t v2 = v1;
  sub_10000D544((uint64_t)a1, (uint64_t)v25, &qword_10038C620);
  uint64_t v4 = v25[0];
  uint64_t v22 = v25[1];
  uint64_t v6 = v2[6];
  uint64_t v5 = v2[7];
  if (v5)
  {
    uint64_t result = sub_10000D544((uint64_t)a1, (uint64_t)v26, &qword_10038C620);
    if (v27)
    {
      if (v6 == v4 && v5 == v22) {
        return result;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (result) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t result = sub_10000D544((uint64_t)a1, (uint64_t)v26, &qword_10038C620);
    if (!v27) {
      return result;
    }
  }
  sub_1001CA860(v6, v5);
  sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
  sub_1001CA6EC(v6, v5);
  sub_1001CA6EC(v4, v22);
LABEL_9:
  if (qword_10037DD88 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000FD84(v8, (uint64_t)qword_1003A9970);
  sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
  swift_retain();
  sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
  swift_retain();
  Swift::String v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    sub_10000D544((uint64_t)a1, (uint64_t)v23, &qword_10038C620);
    sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA860);
    sub_100004010(&qword_10038C620);
    uint64_t v12 = String.init<A>(describing:)();
    v23[0] = sub_1001B3178(v12, v13, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA6EC);
    sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA6EC);
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v14 = v2[7];
    uint64_t v15 = v2[8];
    uint64_t v16 = v2[9];
    uint64_t v17 = v2[10];
    uint64_t v18 = v2[11];
    uint64_t v19 = v2[12];
    v23[0] = v2[6];
    v23[1] = v14;
    long long v23[2] = v15;
    void v23[3] = v16;
    v23[4] = v17;
    v23[5] = v18;
    v23[6] = v19;
    sub_1001CA860(v23[0], v14);
    uint64_t v20 = String.init<A>(describing:)();
    v23[0] = sub_1001B3178(v20, v21, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "activeAlert changed from: %{public}s to: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA6EC);
    sub_1001CA820(a1, (void (*)(void, void, void, void, void, void, void))sub_1001CA6EC);

    swift_release_n();
  }
  sub_100004010(&qword_100393AA0);
  sub_100019834();
  return Subject<>.send()();
}

uint64_t sub_1001CA210(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10000D544(a2, (uint64_t)&v8, &qword_100382448);
    PassthroughSubject.send(_:)();
    sub_1001C92CC(a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001CA2CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_100004010(&qword_100393AA0);
    sub_100019834();
    Subject<>.send()();
    swift_release();
    sub_1001C92CC(a2, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001CA37C()
{
  sub_100004010(&qword_100393AA0);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 32) = PassthroughSubject.init()();
  sub_100004010(&qword_10038B468);
  swift_allocObject();
  *(void *)(v0 + 4sub_100157A04((uint64_t)sub_100158148, 0) = PassthroughSubject.init()();
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 8sub_100157A04((uint64_t)sub_100158148, 0) = 0u;
  *(void *)(v0 + 96) = 0;
  swift_release();
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  return v0;
}

uint64_t sub_1001CA44C()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);

  return sub_1001CA6EC(v1, v2);
}

uint64_t sub_1001CA490()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001CA6EC(*(void *)(v0 + 48), *(void *)(v0 + 56));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransitionAlertModel()
{
  return self;
}

uint64_t destroy for TransitionAlertModel.Alert()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TransitionAlertModel.Alert(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TransitionAlertModel.Alert(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TransitionAlertModel.Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 4sub_100157A04((uint64_t)sub_100158148, 0) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TransitionAlertModel.Alert()
{
  return &type metadata for TransitionAlertModel.Alert;
}

uint64_t sub_1001CA6EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001CA750()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CA788()
{
  swift_release();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001CA7DC()
{
  return sub_1001CA210(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t *sub_1001CA7EC(uint64_t *a1)
{
  return a1;
}

void *sub_1001CA820(void *a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1001CA860(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001CA8C4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001CA904()
{
  return sub_1001CA2CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t initializeWithCopy for TransitionAlertModel.AlertButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TransitionAlertModel.AlertButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TransitionAlertModel.AlertButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TransitionAlertModel.AlertButton()
{
  return &type metadata for TransitionAlertModel.AlertButton;
}

uint64_t sub_1001CAA24()
{
  return sub_1001CAAB8((void (*)(void))sub_1001CAA44);
}

unint64_t sub_1001CAA44()
{
  unint64_t result = qword_10038C628;
  if (!qword_10038C628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10038C628);
  }
  return result;
}

uint64_t sub_1001CAA98()
{
  return sub_1001CAAB8((void (*)(void))sub_10012ABD8);
}

uint64_t sub_1001CAAB8(void (*a1)(void))
{
  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

ValueMetadata *type metadata accessor for _TryOutViewExplorerPresentationEnvironmentKey()
{
  return &type metadata for _TryOutViewExplorerPresentationEnvironmentKey;
}

ValueMetadata *type metadata accessor for _TryOutViewEmbeddedPresentationEnvironmentKey()
{
  return &type metadata for _TryOutViewEmbeddedPresentationEnvironmentKey;
}

uint64_t sub_1001CAB20(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1001CAB48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Int sub_1001CAB70(void **a1)
{
  unsigned __int8 v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned __int8 v2 = sub_1001D5908(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1001D5C08(v5);
  *a1 = v2;
  return result;
}

BOOL sub_1001CABE0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  void v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1001D6F9C((double *)v7, (double *)v9);
}

BOOL static CMQuaternion.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  BOOL v8 = a1 == a5;
  if (a2 != a6) {
    BOOL v8 = 0;
  }
  if (a3 != a7) {
    BOOL v8 = 0;
  }
  return a4 == a8 && v8;
}

BOOL sub_1001CAC60(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_1001CAC9C()
{
  if (*(void *)(v0 + 16) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 8);
    swift_bridgeObjectRetain();
    return v7;
  }
  id v1 = [*(id *)v0 userInfo];
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_1001BEC58(v3, v4), (v6 & 1) == 0))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1000A30C0(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_10:
    sub_10000950C((uint64_t)&v10, &qword_10038D290);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001CADE0()
{
  if (*(void *)(v0 + 16) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v7;
  }
  id v1 = [*(id *)v0 userInfo];
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_1001BEC58(v3, v4), (v6 & 1) == 0))
  {
    long long v10 = 0u;
    long long v11 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1000A30C0(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_10:
    sub_10000950C((uint64_t)&v10, &qword_10038D290);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v9;
  }
  else {
    return 0;
  }
}

id sub_1001CAF24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  __chkstk_darwin(v7);
  Swift::String v28 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v27);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  *(void *)&v4[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManager] = 0;
  long long v10 = &v4[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_handler];
  *long long v10 = 0;
  v10[1] = 0;
  v4[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_authorized] = 1;
  long long v11 = self;
  uint64_t v12 = v4;
  id v13 = [v11 mainBundle];
  id v14 = [v13 bundleIdentifier];

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;
  }
  else
  {
    unint64_t v17 = 0x80000001002C5A40;
    uint64_t v15 = 0xD000000000000012;
  }
  v26[1] = sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  unint64_t v34 = (void *)v15;
  unint64_t v35 = v17;
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = 46;
  v18._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = a1;
  v19._unint64_t object = a2;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = 0x69726F687475412ELL;
  v20._unint64_t object = (void *)0xEE006E6F6974617ALL;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  static DispatchQoS.unspecified.getter();
  unint64_t v34 = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&unk_10037FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100004010((uint64_t *)&unk_10038D2B0);
  sub_100011C70((unint64_t *)&unk_10037FF70, (uint64_t *)&unk_10038D2B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v30);
  *(void *)&v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  unint64_t v21 = (uint64_t *)&v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_name];
  *unint64_t v21 = a1;
  v21[1] = (uint64_t)a2;
  uint64_t v22 = &v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_effectiveBundlePath];
  uint64_t v23 = v32;
  *(void *)uint64_t v22 = v31;
  *((void *)v22 + 1) = v23;

  uint64_t v24 = (objc_class *)type metadata accessor for LocationAuthorization();
  v33.receiver = v12;
  v33.super_class = v24;
  return [super init];
}

void sub_1001CB300(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = &a1[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_handler];
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_handler];
  *(void *)uint64_t v4 = a2;
  *((void *)v4 + 1) = a3;
  swift_retain();
  sub_10005BEA0(v5);
  char v6 = *(void **)&a1[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue];
  id v7 = objc_allocWithZone((Class)CLLocationManager);
  swift_bridgeObjectRetain();
  id v8 = v6;
  uint64_t v9 = a1;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v7 initWithEffectiveBundlePath:v10 delegate:v9 onQueue:v8];

  uint64_t v12 = *(void **)&v9[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManager];
  *(void *)&v9[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManager] = v11;
}

uint64_t sub_1001CB400(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1
                + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManager);
  *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManager) = 0;

  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_handler);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_handler);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t result = sub_10005BEA0(v4);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_authorized) = 1;
  return result;
}

void sub_1001CB45C(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = *(void **)&v1[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue];
  *char v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    unsigned int v9 = [a1 authorizationStatus];
    uint64_t v3 = (v9 < 5) & (0x19u >> v9);
    if (qword_10037DD80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000FD84(v10, (uint64_t)qword_1003A9958);
  id v11 = a1;
  uint64_t v12 = v1;
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446722;
    uint64_t v16 = *(void *)&v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_name];
    unint64_t v17 = *(void *)&v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_name + 8];
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1001B3178(v16, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    LODWORD(v21) = [v11 authorizationStatus];
    type metadata accessor for CLAuthorizationStatus(0);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v21 = sub_1001B3178(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 1026;
    LODWORD(v21) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s location auth status received: %{public}s, authorized: %{BOOL,public}d", (uint8_t *)v15, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (v3 != v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_authorized])
  {
    v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_authorized] = v3;
    Swift::String v20 = *(void (**)(uint64_t))&v12[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_handler];
    if (v20)
    {
      swift_retain();
      v20(v3);
      sub_10005BEA0((uint64_t)v20);
    }
  }
}

id sub_1001CB894()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationAuthorization();
  return [super dealloc];
}

uint64_t type metadata accessor for LocationAuthorization()
{
  return self;
}

uint64_t sub_1001CB978()
{
  type metadata accessor for ConsistencyCheckOnMainQueue(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__lastConsistencyCheckAt;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__updatesSinceLastConsistencyCheck) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__skippedUpdatesSinceLastConsistencyCheck) = 0;
  qword_10038C630 = v0;
  return result;
}

uint64_t sub_1001CBA18()
{
  type metadata accessor for ConsistencyCheckOnCMQueue(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10525ConsistencyCheckOnCMQueue__lastPingAt;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_10038C638 = v0;
  return result;
}

uint64_t sub_1001CBAA0()
{
  uint64_t v1 = v0;
  sub_100004010(&qword_10038D298);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  sub_100004010((uint64_t *)&unk_10038D2A0);
  swift_allocObject();
  *(void *)(v0 + 24) = PassthroughSubject.init()();
  *(void *)(v0 + 32) = [objc_allocWithZone((Class)CMMotionManager) init];
  uint64_t v2 = (objc_class *)type metadata accessor for LocationAuthorization();
  id v3 = objc_allocWithZone(v2);
  *(void *)(v0 + 4sub_100157A04((uint64_t)sub_100158148, 0) = sub_1001CAF24(0xD000000000000012, (void *)0x80000001002D3560, 0xD000000000000039, 0x80000001002D3580);
  id v4 = objc_allocWithZone(v2);
  *(void *)(v0 + 48) = sub_1001CAF24(0xD000000000000013, (void *)0x80000001002D35C0, 0xD00000000000002ELL, 0x80000001002CD640);
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 8sub_100157A04((uint64_t)sub_100158148, 0) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 16sub_100157A04((uint64_t)sub_100158148, 0) = 0u;
  *(unsigned char *)(v0 + 176) = 1;
  uint64_t v5 = v0 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__lastDeviceOrientationForwardedToMainThreadAt;
  uint64_t v6 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__currentRateRatio) = 0x3FF0000000000000;
  *(void *)(v1
            + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__skippedDeviceOrientationsSinceLastForwardedToMainThread) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors) = 0;
  id v7 = [objc_allocWithZone((Class)NSOperationQueue) init];
  *(void *)(v1 + 56) = v7;
  id v8 = self;
  id v9 = v7;
  id v10 = [v8 mainBundle];
  id v11 = [v10 bundleIdentifier];

  if (v11)
  {
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = 0x80000001002C5A40;
    uint64_t v12 = 0xD000000000000012;
  }
  v24[0] = v12;
  v24[1] = v14;
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = 0xD000000000000017;
  v15._unint64_t object = (void *)0x80000001002BF500;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setName:v16];

  [*(id *)(v1 + 56) setMaxConcurrentOperationCount:1];
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000FD84(v17, (uint64_t)qword_1003A9958);
  swift_retain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    Swift::String v20 = (uint8_t *)swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)Swift::String v20 = 136446210;
    type metadata accessor for DeviceOrientationSource(0);
    swift_retain();
    uint64_t v21 = String.init<A>(describing:)();
    sub_1001B3178(v21, v22, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "init: %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return v1;
}

id *sub_1001CBF04()
{
  uint64_t v1 = v0;
  if (qword_10037DD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9958);
  swift_retain_n();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    type metadata accessor for DeviceOrientationSource(0);
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001B3178(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_release();

  sub_10000950C((uint64_t)(v1 + 8), &qword_1003874C0);
  sub_10000950C((uint64_t)v1 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__lastDeviceOrientationForwardedToMainThreadAt, &qword_100380788);
  swift_release();
  return v1;
}

uint64_t sub_1001CC138()
{
  sub_1001CBF04();

  return swift_deallocClassInstance();
}

uint64_t sub_1001CC190()
{
  return type metadata accessor for DeviceOrientationSource(0);
}

uint64_t type metadata accessor for DeviceOrientationSource(uint64_t a1)
{
  return sub_1000497F4(a1, (uint64_t *)&unk_10038C6E0);
}

void sub_1001CC1B8()
{
  sub_1001D4E2C(319, (unint64_t *)&qword_10038C6F0, (void (*)(uint64_t))&type metadata accessor for DispatchTime);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001CC2B4()
{
  uint64_t v1 = (void *)v0[4];
  if (![v1 isDeviceMotionAvailable])
  {
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000FD84(v6, (uint64_t)qword_1003A9AC0);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(oslog, v3)) {
      goto LABEL_12;
    }
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    uint64_t v5 = "Device motion is not available";
    goto LABEL_11;
  }
  if (([v1 isDeviceMotionActive] & 1) == 0)
  {
    [v1 setDeviceMotionUpdateInterval:0.1];
    uint64_t v7 = v0[7];
    Swift::String v28 = sub_1001D8104;
    uint64_t v29 = v0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    Swift::String v26 = sub_10001DB38;
    uint64_t v27 = &unk_10035D078;
    id v8 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v1 startDeviceMotionUpdatesUsingReferenceFrame:8 toQueue:v7 withHandler:v8];
    _Block_release(v8);
    uint64_t v9 = (char *)v0[5];
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    id v11 = *(NSObject **)&v9[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue];
    uint64_t v12 = (void *)swift_allocObject();
    void v12[2] = v9;
    uint64_t v12[3] = sub_1001D8108;
    v12[4] = v10;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1001D8144;
    *(void *)(v13 + 24) = v12;
    Swift::String v28 = sub_1001D8448;
    uint64_t v29 = (void *)v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    Swift::String v26 = sub_1001CAB48;
    uint64_t v27 = &unk_10035D0F0;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_retain_n();
    Swift::String v15 = v9;
    swift_retain();
    swift_release();
    dispatch_sync(v11, v14);
    _Block_release(v14);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release_n();
    swift_release();
    swift_release();
    if (v11)
    {
      __break(1u);
    }
    else
    {
      NSString v16 = (char *)v0[6];
      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      uint64_t v18 = *(NSObject **)&v16[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue];
      os_log_type_t v19 = (void *)swift_allocObject();
      long long v19[2] = v16;
      v19[3] = sub_1001D8160;
      v19[4] = v17;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_1001D84AC;
      *(void *)(v20 + 24) = v19;
      Swift::String v28 = sub_1001D8448;
      uint64_t v29 = (void *)v20;
      aBlock = _NSConcreteStackBlock;
      uint64_t v25 = 1107296256;
      Swift::String v26 = sub_1001CAB48;
      uint64_t v27 = &unk_10035D168;
      uint64_t v21 = _Block_copy(&aBlock);
      swift_retain_n();
      unint64_t v22 = v16;
      swift_retain();
      swift_release();
      dispatch_sync(v18, v21);
      _Block_release(v21);
      LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
      swift_release_n();
      swift_release();
      swift_release();
      if ((v18 & 1) == 0) {
        return;
      }
    }
    __break(1u);
    return;
  }
  if (qword_10037DDF8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000FD84(v2, (uint64_t)qword_1003A9AC0);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    uint64_t v5 = "DeviceOrientationSource is already active";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
    swift_slowDealloc();
  }
LABEL_12:
}

void sub_1001CC824(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v3 = *(id *)(Strong + 56);
    swift_release();
    uint64_t v4 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(unsigned char *)(v5 + 24) = a1 & 1;
    sub_10001E6FC(0, &qword_10038D280);
    sub_1001D8090();
    swift_retain();
    Scheduler.schedule(_:)();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1001CC970(uint64_t a1, char a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001CD898(a3, a2 & 1);
    return swift_release();
  }
  return result;
}

void sub_1001CC9E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10037DDF8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000FD84(v6, (uint64_t)qword_1003A9AC0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "onStartConnectionAssistance", v9, 2u);
    swift_slowDealloc();
  }

  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v10)
  {
    Swift::String v15 = *(void **)(v1 + 56);
    id v11 = v15;
    swift_allocObject();
    swift_weakInit();
    sub_10001E6FC(0, &qword_10038D280);
    sub_1001D8090();
    id v12 = v11;
    swift_retain();
    Scheduler.schedule(_:)();
    swift_release();
    uint64_t v13 = v15;
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001CCC64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004010((uint64_t *)&unk_10038D270);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  Swift::String v15 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (_WORD *)((char *)&v28 - v16);
  uint64_t v28 = a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong
    || (uint64_t v19 = *(void *)(Strong + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors),
        swift_retain(),
        swift_release(),
        !v19))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_6;
  }
  sub_1001D2670(v10);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    uint64_t v20 = (char *)v17 + *(int *)(v11 + 24);
    uint64_t v21 = type metadata accessor for DeviceOrientationError(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *uint64_t v17 = 257;
    sub_10000950C((uint64_t)v10, (uint64_t *)&unk_10038D270);
    goto LABEL_7;
  }
  sub_1001D7DA8((uint64_t)v10, (uint64_t)v17);
LABEL_7:
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  unint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
  sub_1001D7D3C((uint64_t)v17, (uint64_t)v15, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v28;
  sub_1001D7DA8((uint64_t)v15, v24 + v23);
  aBlock[4] = sub_1001D7E0C;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100207A1C;
  void aBlock[3] = &unk_10035D050;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v26 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
  return sub_1001D7E10((uint64_t)v17, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
}

void sub_1001CD17C()
{
  uint64_t v21 = *v0;
  uint64_t v24 = 0;
  long long aBlock = 0u;
  long long v23 = 0u;
  swift_beginAccess();
  sub_100156648((uint64_t)&aBlock, (uint64_t)(v0 + 8), &qword_1003874C0);
  swift_endAccess();
  [(id)v0[4] stopDeviceMotionUpdates];
  uint64_t v1 = (char *)v0[5];
  uint64_t v2 = *(NSObject **)&v1[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1001D8060;
  *(void *)(v4 + 24) = v3;
  uint64_t v24 = sub_100034078;
  uint64_t v25 = v4;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v23 = sub_1001CAB48;
  *((void *)&v23 + 1) = &unk_10035CF60;
  uint64_t v5 = _Block_copy(&aBlock);
  uint64_t v6 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = (char *)v0[6];
  uint64_t v8 = *(NSObject **)&v7[OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10521LocationAuthorization_locationManagerQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001D8494;
  *(void *)(v10 + 24) = v9;
  uint64_t v24 = sub_1001D8448;
  uint64_t v25 = v10;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v23 = sub_1001CAB48;
  *((void *)&v23 + 1) = &unk_10035CFD8;
  uint64_t v11 = _Block_copy(&aBlock);
  uint64_t v12 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (qword_10037DE98 != -1) {
LABEL_7:
  }
    swift_once();
  type metadata accessor for ConsistencyCheckOnMainQueue(0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v13
      + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__lastConsistencyCheckAt;
  uint64_t v15 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)(v13
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__updatesSinceLastConsistencyCheck) = 0;
  *(void *)(v13
            + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10527ConsistencyCheckOnMainQueue__skippedUpdatesSinceLastConsistencyCheck) = 0;
  qword_10038C630 = v13;
  swift_release();
  *(void *)&long long aBlock = v0[7];
  uint64_t v16 = (void *)aBlock;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v21;
  sub_10001E6FC(0, &qword_10038D280);
  sub_1001D8090();
  id v19 = v16;
  swift_retain();
  Scheduler.schedule(_:)();
  swift_release();
  uint64_t v20 = (void *)aBlock;
  swift_release();
}

uint64_t sub_1001CD5EC()
{
  uint64_t v0 = sub_100004010(&qword_100380788);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 168) = 0;
    *(_OWORD *)(Strong + 152) = 0u;
    *(_OWORD *)(Strong + 136) = 0u;
    *(_OWORD *)(Strong + 12sub_100157A04((uint64_t)sub_100158148, 0) = 0u;
    *(_OWORD *)(Strong + 104) = 0u;
    *(unsigned char *)(Strong + 176) = 1;
    swift_release();
  }
  swift_beginAccess();
  uint64_t v4 = swift_weakLoadStrong();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = type metadata accessor for DispatchTime();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
    uint64_t v7 = v5 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__lastDeviceOrientationForwardedToMainThreadAt;
    swift_beginAccess();
    sub_100156648((uint64_t)v2, v7, &qword_100380788);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v8 = swift_weakLoadStrong();
  if (v8)
  {
    *(void *)(v8 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__currentRateRatio) = 0x3FF0000000000000;
    swift_release();
  }
  swift_beginAccess();
  uint64_t v9 = swift_weakLoadStrong();
  if (v9)
  {
    *(void *)(v9
              + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__skippedDeviceOrientationsSinceLastForwardedToMainThread) = 0;
    swift_release();
  }
  swift_beginAccess();
  uint64_t v10 = swift_weakLoadStrong();
  if (v10)
  {
    *(void *)(v10 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors) = 0;
    swift_release();
    swift_release();
  }
  if (qword_10037DEA0 != -1) {
    swift_once();
  }
  type metadata accessor for ConsistencyCheckOnCMQueue(0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v11 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10525ConsistencyCheckOnCMQueue__lastPingAt;
  uint64_t v13 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  qword_10038C638 = v11;
  return swift_release();
}

uint64_t sub_1001CD898(char a1, char a2)
{
  uint64_t v3 = v2;
  int v5 = a1 & 1;
  uint64_t v47 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v50 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  uint64_t v53 = v9;
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004010((uint64_t *)&unk_10038D270);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0);
  uint64_t v14 = *(void *)(v54 - 8);
  uint64_t v15 = __chkstk_darwin(v54);
  uint64_t v48 = v16;
  uint64_t v49 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (_WORD *)((char *)&v43 - v17);
  if (qword_10037DDF8 != -1) {
    swift_once();
  }
  uint64_t v46 = v14;
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000FD84(v19, (uint64_t)qword_1003A9AC0);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  int v45 = v5;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v44 = v18;
    LOBYTE(v56) = v5;
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v56 = sub_1001B3178(v24, v25, aBlock);
    uint64_t v18 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 1026;
    LODWORD(v56) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Location authorization changed for %s: %{BOOL,public}d", (uint8_t *)v23, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v26 = OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors;
  if (!*(void *)(v3 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors))
  {
    type metadata accessor for CoreMotionErrors(0);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = _swiftEmptyArrayStorage;
    uint64_t v28 = v27 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10516CoreMotionErrors__lastPeriodicCheckAt;
    uint64_t v29 = type metadata accessor for DispatchTime();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    *(void *)(v3 + v26) = v27;
    swift_release();
    if (!*(void *)(v3 + v26)) {
      goto LABEL_13;
    }
  }
  swift_retain();
  sub_1001D2E8C(v45, a2 & 1);
  swift_release();
  uint64_t v30 = *(void *)(v3 + v26);
  if (!v30) {
    goto LABEL_13;
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v30 + 16) + 16))
  {
    if (*(void *)(v3 + v26)) {
      goto LABEL_10;
    }
LABEL_13:
    uint64_t v31 = v46;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v13, 1, 1, v54);
    goto LABEL_14;
  }
  *(void *)(v3 + v26) = 0;
  swift_release();
  if (!*(void *)(v3 + v26)) {
    goto LABEL_13;
  }
LABEL_10:
  swift_retain();
  sub_1001D2670(v13);
  swift_release();
  uint64_t v31 = v46;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v46 + 48))(v13, 1, v54) == 1)
  {
LABEL_14:
    uint64_t v32 = (char *)v18 + *(int *)(v54 + 24);
    uint64_t v33 = type metadata accessor for DeviceOrientationError(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
    *uint64_t v18 = 257;
    sub_10000950C((uint64_t)v13, (uint64_t *)&unk_10038D270);
    goto LABEL_15;
  }
  sub_1001D7DA8((uint64_t)v13, (uint64_t)v18);
LABEL_15:
  sub_10001E6FC(0, (unint64_t *)&qword_100387440);
  unint64_t v34 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  uint64_t v36 = v49;
  sub_1001D7D3C((uint64_t)v18, v49, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
  unint64_t v37 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v35;
  sub_1001D7DA8(v36, v38 + v37);
  aBlock[4] = (uint64_t)sub_1001D7E0C;
  aBlock[5] = v38;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100207A1C;
  void aBlock[3] = (uint64_t)&unk_10035CEE8;
  uint64_t v39 = _Block_copy(aBlock);
  swift_release();
  uint64_t v40 = v51;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004010((uint64_t *)&unk_10037FF80);
  sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
  uint64_t v41 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v41);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v52);
  return sub_1001D7E10((uint64_t)v18, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
}

uint64_t sub_1001CE030(void *a1, void *a2)
{
  uint64_t v3 = v2;
  id v174 = a1;
  uint64_t v173 = *v2;
  uint64_t v5 = sub_100004010(&qword_100380788);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v167 = (uint64_t)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v172 = (uint64_t)&v153 - v9;
  __chkstk_darwin(v8);
  long long v171 = (char *)&v153 - v10;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v188 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v186 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for DispatchQoS();
  uint64_t v187 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  long long v185 = (char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004010((uint64_t *)&unk_10038D270);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  long long v168 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v177 = (char *)&v153 - v17;
  uint64_t v179 = type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState(0);
  uint64_t v191 = *(void *)(v179 - 8);
  uint64_t v18 = __chkstk_darwin(v179);
  long long v169 = (_WORD *)((char *)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v181 = (uint64_t)&v153 - v21;
  uint64_t v180 = v22;
  __chkstk_darwin(v20);
  int v178 = (char *)&v153 - v23;
  uint64_t v24 = type metadata accessor for DispatchTime();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v164 = (char *)&v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v27);
  Swift::String v165 = (char *)&v153 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  Swift::String v166 = (char *)&v153 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  long long v170 = (char *)&v153 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v153 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v153 - v37;
  if (qword_10037DEA0 != -1) {
    swift_once();
  }
  swift_retain();
  static DispatchTime.now()();
  uint64_t v39 = OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__currentRateRatio;
  sub_1001D020C((uint64_t)v38, *(double *)((char *)v2 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__currentRateRatio));
  swift_release();
  uint64_t v40 = v38;
  uint64_t v176 = v25;
  uint64_t v42 = v25 + 8;
  uint64_t v41 = *(uint64_t (**)(void))(v25 + 8);
  uint64_t v190 = (uint64_t)v40;
  uint64_t result = v41();
  if (a2)
  {
    uint64_t v183 = v41;
    swift_errorRetain();
    uint64_t v44 = v11;
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    sub_10000FD84(v45, (uint64_t)qword_1003A9AC0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v182 = v42;
    if (v48)
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v175 = v24;
      uint64_t v50 = (uint8_t *)v49;
      *(void *)&long long aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136446210;
      uint64_t v192 = a2;
      swift_errorRetain();
      sub_100004010(&qword_10037FFB0);
      uint64_t v51 = String.init<A>(describing:)();
      uint64_t v192 = (void *)sub_1001B3178(v51, v52, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Error getting device motion data: %{public}s", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v24 = v175;
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v68 = v178;
    uint64_t v69 = OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors;
    uint64_t v70 = *(void *)((char *)v3 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors);
    uint64_t v184 = v44;
    if (v70
      || (type metadata accessor for CoreMotionErrors(0),
          uint64_t v71 = swift_allocObject(),
          *(void *)(v71 + 16) = _swiftEmptyArrayStorage,
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v176 + 56))(v71 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10516CoreMotionErrors__lastPeriodicCheckAt, 1, 1, v24), *(void *)((char *)v3 + v69) = v71, swift_release(), *(void *)((char *)v3 + v69)))
    {
      swift_retain();
      uint64_t v72 = (void *)_convertErrorToNSError(_:)();
      uint64_t v73 = v190;
      static DispatchTime.now()();
      sub_1001D2910(v72, v73);
      swift_release();

      ((void (*)(uint64_t, uint64_t))v183)(v73, v24);
      uint64_t v74 = *(void *)((char *)v3 + v69);
      if (v74)
      {
        swift_beginAccess();
        if (*(void *)(*(void *)(v74 + 16) + 16))
        {
          if (*(void *)((char *)v3 + v69)) {
            goto LABEL_27;
          }
        }
        else
        {
          *(void *)((char *)v3 + v69) = 0;
          swift_release();
          if (*(void *)((char *)v3 + v69))
          {
LABEL_27:
            swift_retain();
            uint64_t v75 = v177;
            sub_1001D2670(v177);
            swift_release();
            uint64_t v76 = v179;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v75, 1, v179) != 1)
            {
              sub_1001D7DA8((uint64_t)v75, (uint64_t)v68);
LABEL_32:
              uint64_t v79 = (uint64_t)v68;
              uint64_t v80 = v181;
              sub_10001E6FC(0, (unint64_t *)&qword_100387440);
              uint64_t v81 = (void *)static OS_dispatch_queue.main.getter();
              uint64_t v82 = swift_allocObject();
              swift_weakInit();
              sub_1001D7D3C(v79, v80, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
              unint64_t v83 = (*(unsigned __int8 *)(v191 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80);
              uint64_t v84 = swift_allocObject();
              *(void *)(v84 + 16) = v82;
              sub_1001D7DA8(v80, v84 + v83);
              *(void *)&long long v200 = sub_1001D7E0C;
              *((void *)&v200 + 1) = v84;
              *(void *)&long long aBlock = _NSConcreteStackBlock;
              *((void *)&aBlock + 1) = 1107296256;
              *(void *)&long long v199 = sub_100207A1C;
              *((void *)&v199 + 1) = &unk_10035CE98;
              uint64_t v85 = _Block_copy(&aBlock);
              swift_release();
              uint64_t v86 = v185;
              static DispatchQoS.unspecified.getter();
              *(void *)&long long aBlock = _swiftEmptyArrayStorage;
              sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
              sub_100004010((uint64_t *)&unk_10037FF80);
              sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
              uint64_t v87 = v186;
              uint64_t v88 = v184;
              dispatch thunk of SetAlgebra.init<A>(_:)();
              OS_dispatch_queue.async(group:qos:flags:execute:)();
              _Block_release(v85);

              swift_errorRelease();
              (*(void (**)(char *, uint64_t))(v188 + 8))(v87, v88);
              (*(void (**)(char *, uint64_t))(v187 + 8))(v86, v189);
              return sub_1001D7E10(v79, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
            }
LABEL_31:
            objc_super v77 = (char *)v68 + *(int *)(v76 + 24);
            uint64_t v78 = type metadata accessor for DeviceOrientationError(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 1, 1, v78);
            *uint64_t v68 = 257;
            sub_10000950C((uint64_t)v75, (uint64_t *)&unk_10038D270);
            goto LABEL_32;
          }
        }
      }
    }
    uint64_t v75 = v177;
    uint64_t v76 = v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v191 + 56))(v177, 1, 1, v179);
    goto LABEL_31;
  }
  int v178 = (char *)v39;
  if (!v174) {
    return result;
  }
  uint64_t v53 = v11;
  uint64_t v183 = v41;
  long long v177 = (char *)v174;
  uint64_t result = (uint64_t)sub_1001D7808(v177, (uint64_t)&aBlock);
  id v174 = (id)*((void *)&aBlock + 1);
  uint64_t v54 = aBlock;
  uint64_t v162 = *((void *)&v199 + 1);
  uint64_t v163 = v199;
  uint64_t v160 = *((void *)&v200 + 1);
  uint64_t v161 = v200;
  uint64_t v158 = *((void *)&v201 + 1);
  uint64_t v159 = v201;
  uint64_t v157 = v202;
  uint64_t v155 = OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors;
  uint64_t v55 = *(void *)((char *)v3 + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__coreMotionErrors);
  uint64_t v184 = v53;
  uint64_t v175 = v24;
  uint64_t v182 = v42;
  if (v55)
  {
    uint64_t v156 = aBlock;
    swift_retain();
    static DispatchTime.now()();
    swift_beginAccess();
    uint64_t v56 = *(void *)(v55 + 16);
    uint64_t v57 = *(void *)(v56 + 16);
    if (v57)
    {
      uint64_t v154 = v3;
      uint64_t v58 = (void *)(v56 + 32);
      swift_bridgeObjectRetain();
      uint64_t v59 = v177;
      do
      {
        uint64_t v60 = v58[3];
        uint64_t v61 = v58[4];
        sub_100008F88(v58, v60);
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v61 + 8))(v59, v36, v60, v61);
        v58 += 5;
        --v57;
      }
      while (v57);
      swift_bridgeObjectRelease();
      uint64_t v24 = v175;
      uint64_t v3 = v154;
    }
    sub_1001D3124((uint64_t)v36);
    char v62 = sub_1001D3564();
    swift_release();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v183)(v36, v24);
    uint64_t v53 = v184;
    uint64_t v54 = v156;
    if (v62)
    {
      uint64_t v63 = v155;
      uint64_t v64 = *(void *)((char *)v3 + v155);
      unint64_t v65 = v168;
      if (!v64) {
        goto LABEL_33;
      }
      swift_beginAccess();
      if (!*(void *)(*(void *)(v64 + 16) + 16))
      {
        *(void *)((char *)v3 + v63) = 0;
        swift_release();
      }
      if (*(void *)((char *)v3 + v63))
      {
        swift_retain();
        sub_1001D2670(v65);
        swift_release();
        uint64_t v66 = v179;
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v191 + 48))(v65, 1, v179) != 1)
        {
          uint64_t v67 = v169;
          sub_1001D7DA8((uint64_t)v65, (uint64_t)v169);
LABEL_35:
          sub_10001E6FC(0, (unint64_t *)&qword_100387440);
          uint64_t v179 = static OS_dispatch_queue.main.getter();
          uint64_t v91 = swift_allocObject();
          swift_weakInit();
          uint64_t v92 = v181;
          sub_1001D7D3C((uint64_t)v67, v181, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
          unint64_t v93 = (*(unsigned __int8 *)(v191 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80);
          uint64_t v94 = swift_allocObject();
          *(void *)(v94 + 16) = v91;
          sub_1001D7DA8(v92, v94 + v93);
          double v196 = sub_1001D7E0C;
          uint64_t v197 = v94;
          uint64_t v192 = _NSConcreteStackBlock;
          uint64_t v193 = 1107296256;
          char v194 = sub_100207A1C;
          unsigned __int8 v195 = &unk_10035CE48;
          uint64_t v95 = _Block_copy(&v192);
          swift_release();
          uint64_t v96 = v185;
          static DispatchQoS.unspecified.getter();
          uint64_t v192 = _swiftEmptyArrayStorage;
          sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100004010((uint64_t *)&unk_10037FF80);
          sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
          uint64_t v97 = v186;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v98 = (void *)v179;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v95);

          (*(void (**)(char *, uint64_t))(v188 + 8))(v97, v53);
          (*(void (**)(char *, uint64_t))(v187 + 8))(v96, v189);
          uint64_t result = sub_1001D7E10((uint64_t)v169, type metadata accessor for DeviceOrientationSource.DeviceOrientationErrorState);
          uint64_t v24 = v175;
          uint64_t v54 = v156;
          goto LABEL_36;
        }
      }
      else
      {
LABEL_33:
        uint64_t v66 = v179;
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v191 + 56))(v65, 1, 1, v179);
      }
      uint64_t v67 = v169;
      uint64_t v89 = (char *)v169 + *(int *)(v66 + 24);
      uint64_t v90 = type metadata accessor for DeviceOrientationError(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 1, 1, v90);
      *uint64_t v67 = 257;
      sub_10000950C((uint64_t)v65, (uint64_t *)&unk_10038D270);
      goto LABEL_35;
    }
  }
LABEL_36:
  if ((v3[22] & 1) != 0
    || vabdd_f64(*((double *)v3 + 13), *(double *)&aBlock) >= 0.0436332313
    || vabdd_f64(*((double *)v3 + 14), *((double *)&aBlock + 1)) >= 0.0436332313)
  {
    uint64_t v107 = v190;
    static DispatchTime.now()();
    id v108 = v174;
    v3[13] = v54;
    v3[14] = v108;
    uint64_t v109 = v162;
    v3[15] = v163;
    v3[16] = v109;
    uint64_t v110 = v160;
    v3[17] = v161;
    v3[18] = v110;
    uint64_t v111 = v158;
    v3[19] = v159;
    v3[20] = v111;
    v3[21] = v157;
    *((unsigned char *)v3 + 176) = 0;
    uint64_t v112 = v176;
    uint64_t v113 = v24;
    uint64_t v114 = *(void (**)(char *, uint64_t))(v176 + 16);
    uint64_t v115 = (uint64_t)v171;
    uint64_t v116 = v107;
    uint64_t v117 = v107;
    uint64_t v118 = v113;
    v114(v171, v116);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v115, 0, 1, v118);
    uint64_t v119 = v172;
    sub_100174024(v115, v172);
    uint64_t v120 = (uint64_t)v3
         + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__lastDeviceOrientationForwardedToMainThreadAt;
    swift_beginAccess();
    sub_100156648(v119, v120, &qword_100380788);
    swift_endAccess();
    *(void *)&v178[(void)v3] = 0x3FF0000000000000;
    uint64_t v121 = *(void *)((char *)v3
                     + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__skippedDeviceOrientationsSinceLastForwardedToMainThread);
    *(void *)((char *)v3
              + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__skippedDeviceOrientationsSinceLastForwardedToMainThread) = 0;
    sub_10001E6FC(0, (unint64_t *)&qword_100387440);
    uint64_t v191 = static OS_dispatch_queue.main.getter();
    uint64_t v122 = v170;
    uint64_t v123 = v175;
    ((void (*)(char *, uint64_t, uint64_t))v114)(v170, v117, v175);
    unint64_t v124 = (*(unsigned __int8 *)(v112 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
    unint64_t v125 = (v26 + v124 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v126 = (v125 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v3;
    (*(void (**)(unint64_t, char *, uint64_t))(v112 + 32))(v127 + v124, v122, v123);
    *(void *)(v127 + v125) = v121;
    unint64_t v128 = v127 + v126;
    long long v129 = v201;
    long long v130 = v199;
    *(_OWORD *)(v128 + 32) = v200;
    *(_OWORD *)(v128 + 48) = v129;
    long long v131 = aBlock;
    *(void *)(v128 + 64) = v202;
    *(_OWORD *)unint64_t v128 = v131;
    *(_OWORD *)(v128 + 16) = v130;
    *(void *)(v127 + ((v126 + 79) & 0xFFFFFFFFFFFFFFF8)) = v173;
    double v196 = sub_1001D7C04;
    uint64_t v197 = v127;
    uint64_t v192 = _NSConcreteStackBlock;
    uint64_t v193 = 1107296256;
    char v194 = sub_100207A1C;
    unsigned __int8 v195 = &unk_10035CD80;
    uint64_t v132 = _Block_copy(&v192);
    swift_retain();
    swift_release();
    uint64_t v133 = v185;
    static DispatchQoS.unspecified.getter();
    uint64_t v192 = _swiftEmptyArrayStorage;
    sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004010((uint64_t *)&unk_10037FF80);
    sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
    uint64_t v134 = v186;
    uint64_t v135 = v184;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v136 = (void *)v191;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v132);

    (*(void (**)(char *, uint64_t))(v188 + 8))(v134, v135);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v133, v189);
    return ((uint64_t (*)(uint64_t, uint64_t))v183)(v190, v175);
  }
  else
  {
    uint64_t v99 = *(void *)((char *)v3
                    + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__skippedDeviceOrientationsSinceLastForwardedToMainThread);
    BOOL v100 = __CFADD__(v99, 1);
    uint64_t v101 = v99 + 1;
    if (!v100)
    {
      *(void *)((char *)v3
                + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__skippedDeviceOrientationsSinceLastForwardedToMainThread) = v101;
      uint64_t v102 = (uint64_t)v3
           + OBJC_IVAR____TtC8SOSBuddy23DeviceOrientationSource__lastDeviceOrientationForwardedToMainThreadAt;
      swift_beginAccess();
      uint64_t v103 = v167;
      sub_100173EF0(v102, v167);
      uint64_t v104 = v176;
      int v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v103, 1, v24);
      uint64_t v106 = v183;
      if (v105 == 1)
      {

        return sub_10000950C(v103, &qword_100380788);
      }
      uint64_t v137 = v166;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v166, v103, v24);
      uint64_t v138 = v178;
      double v139 = *(double *)&v178[(void)v3];
      uint64_t v140 = v165;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v165, v137, v24);
      if (v139 >= 10.0) {
        goto LABEL_48;
      }
      uint64_t v141 = v164;
      static DispatchTime.now()();
      unint64_t v142 = DispatchTime.uptimeNanoseconds.getter();
      if (DispatchTime.uptimeNanoseconds.getter() >= v142)
      {
        unint64_t v145 = 0;
      }
      else
      {
        unint64_t v143 = DispatchTime.uptimeNanoseconds.getter();
        uint64_t v106 = (uint64_t (*)(void))v140;
        unint64_t v144 = DispatchTime.uptimeNanoseconds.getter();
        BOOL v100 = v143 >= v144;
        unint64_t v145 = v143 - v144;
        if (!v100)
        {
          __break(1u);
LABEL_48:

          ((void (*)(char *, uint64_t))v106)(v140, v24);
          return ((uint64_t (*)(char *, uint64_t))v106)(v166, v24);
        }
      }
      uint64_t v106 = v183;
      ((void (*)(char *, uint64_t))v183)(v141, v24);
      ((void (*)(char *, uint64_t))v106)(v140, v24);
      if (v145 > 0x12A15343FLL)
      {
        *(void *)&v138[(void)v3] = 0x4024000000000000;
        sub_10001E6FC(0, (unint64_t *)&qword_100387440);
        long long v146 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v147 = swift_allocObject();
        swift_weakInit();
        uint64_t v148 = swift_allocObject();
        uint64_t v149 = v173;
        *(void *)(v148 + 16) = v147;
        *(void *)(v148 + 24) = v149;
        double v196 = (uint64_t (*)())sub_1001D7D34;
        uint64_t v197 = v148;
        uint64_t v192 = _NSConcreteStackBlock;
        uint64_t v193 = 1107296256;
        char v194 = sub_100207A1C;
        unsigned __int8 v195 = &unk_10035CDF8;
        long long v150 = _Block_copy(&v192);
        swift_release();
        uint64_t v151 = v185;
        static DispatchQoS.unspecified.getter();
        uint64_t v192 = _swiftEmptyArrayStorage;
        sub_10007616C((unint64_t *)&qword_100383A00, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100004010((uint64_t *)&unk_10037FF80);
        sub_100011C70((unint64_t *)&qword_100383A10, (uint64_t *)&unk_10037FF80);
        uint64_t v152 = v186;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();

        _Block_release(v150);
        (*(void (**)(char *, uint64_t))(v188 + 8))(v152, v53);
        (*(void (**)(char *, uint64_t))(v187 + 8))(v151, v189);
        return ((uint64_t (*)(char *, uint64_t))v183)(v166, v24);
      }

      return ((uint64_t (*)(char *, uint64_t))v106)(v166, v24);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001CF934()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

void sub_1001CF9B4()
{
  if (qword_10037DDF8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FD84(v0, (uint64_t)qword_1003A9AC0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Reducing deviceMotionUpdateInterval due to the lack of motion", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v5 = *(id *)(Strong + 32);
    swift_release();
    [v5 setDeviceMotionUpdateInterval:1.0];
  }
}

uint64_t sub_1001CFAE8(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchTime.now()();
  uint64_t v12 = *(void **)(a1 + 32);
  [v12 deviceMotionUpdateInterval];
  if (v13 > 0.1)
  {
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000FD84(v14, (uint64_t)qword_1003A9AC0);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = a2;
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Returning deviceMotionUpdateInterval back to normal rate", v17, 2u);
      a2 = v25;
      swift_slowDealloc();
    }

    [v12 setDeviceMotionUpdateInterval:0.1];
  }
  if (qword_10037DE98 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1001D06F4(a2, (unint64_t)v11, a3);
  swift_release();
  double v18 = a4[8];
  swift_retain();
  char v19 = sub_1001D09A8((uint64_t)v11, v18);
  uint64_t v20 = swift_release();
  if (v19) {
    sub_1001CFD8C(v20, a4);
  }
  long long v21 = *((_OWORD *)a4 + 3);
  long long v28 = *((_OWORD *)a4 + 2);
  long long v29 = v21;
  uint64_t v30 = *((void *)a4 + 8);
  long long v22 = *((_OWORD *)a4 + 1);
  long long v26 = *(_OWORD *)a4;
  long long v27 = v22;
  PassthroughSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1001CFD8C(uint64_t a1, double *a2)
{
  id v4 = [*(id *)(v2 + 32) deviceMotion];
  if (!v4)
  {
    if (qword_10037DDF8 == -1) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
  id v5 = v4;
  sub_1001D7808(v4, (uint64_t)v20);
  double v6 = round(*a2 * 57.2957795);
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v7 = round(v20[0] * 57.2957795);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
LABEL_14:
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000FD84(v12, (uint64_t)qword_1003A9AC0);
    char v19 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v13, "DeviceOrientationSource: checkConsistency: deviceMotion is not available", v14, 2u);
      swift_slowDealloc();
    }
    goto LABEL_23;
  }
  if (*(uint64_t *)&v6 == *(uint64_t *)&v7)
  {
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000FD84(v8, (uint64_t)qword_1003A9AC0);
    char v19 = v5;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134349056;
      [v19 timestamp];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "DeviceOrientationSource: checkConsistency: pull motion recorded at %{public}f", v11, 0xCu);
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    if (qword_10037DDF8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000FD84(v15, (uint64_t)qword_1003A9AC0);
    char v19 = v5;
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134349824;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2050;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 22) = 2050;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 32) = 2050;
      [v19 timestamp];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "DeviceOrientationSource: checkConsistency: push heading = %{public}lld at %{public}f, pull heading = %{public}lld at %{public}f", (uint8_t *)v18, 0x2Au);
      swift_slowDealloc();

      return;
    }
  }
LABEL_23:
}

uint64_t sub_1001D020C(uint64_t a1, double a2)
{
  uint64_t v6 = sub_100004010(&qword_100380788);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v31 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for DispatchTime();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_EA0A6DD3813AFCA28C36541F1A14F10525ConsistencyCheckOnCMQueue__lastPingAt;
  swift_beginAccess();
  sub_100173EF0(v19, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    unint64_t v20 = DispatchTime.uptimeNanoseconds.getter();
    if (DispatchTime.uptimeNanoseconds.getter() < v20)
    {
      unint64_t v21 = DispatchTime.uptimeNanoseconds.getter();
      unint64_t v22 = DispatchTime.uptimeNanoseconds.getter();
      unint64_t v23 = v21 - v22;
      if (v21 >= v22) {
        goto LABEL_7;
      }
      __break(1u);
    }
    unint64_t v23 = 0;
LABEL_7:
    double v24 = a2 * 100.0;
    if ((~COERCE__INT64(a2 * 100.0) & 0x7FF0000000000000) != 0)
    {
      if (v24 > -1.0)
      {
        if (v24 < 1.84467441e19)
        {
          if ((unint64_t)v24 < 0xFFFFFFFFFFFFFF9CLL)
          {
            unint64_t v3 = v23 / 0xF4240;
            if ((unint64_t)v24 + 100 >= v23 / 0xF4240)
            {
LABEL_16:
              (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
              goto LABEL_17;
            }
            if (qword_10037DDF8 == -1)
            {
LABEL_13:
              uint64_t v25 = type metadata accessor for Logger();
              sub_10000FD84(v25, (uint64_t)qword_1003A9AC0);
              long long v26 = Logger.logObject.getter();
              os_log_type_t v27 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v26, v27))
              {
                long long v28 = (uint8_t *)swift_slowAlloc();
                uint64_t v32 = a1;
                unint64_t v33 = v3;
                long long v29 = v28;
                *(_DWORD *)long long v28 = 134349056;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                _os_log_impl((void *)&_mh_execute_header, v26, v27, "DeviceOrientationSource: updates from CoreMotion are lagging, delay is %{public}llu ms", v29, 0xCu);
                a1 = v32;
                swift_slowDealloc();
              }

              goto LABEL_16;
            }
LABEL_22:
            swift_once();
            goto LABEL_13;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  sub_10000950C((uint64_t)v14, &qword_100380788);
LABEL_17:
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v12, a1, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  sub_100174024((uint64_t)v12, (uint64_t)v9);
  swift_beginAccess();
  sub_100156648((uint64_t)v9, v19, &qword_100380788);
  return swift_endAccess();
}