void sub_1000041AC(id a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  unsigned char v14[128];

  v1 = +[NSBundle allFrameworks];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v2)
  {
    v3 = v2;
    v4 = *(void *)v11;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v11 != v4) {
          objc_enumerationMutation(v1);
        }
        v6 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        v7 = [v6 objectForInfoDictionaryKey:@"CFBundleName"];
        if ([v7 isEqualToString:@"Vision"])
        {
          v8 = [v6 objectForInfoDictionaryKey:@"CFBundleShortVersionString"];
          v9 = (void *)off_1000ED230;
          off_1000ED230 = v8;
        }
      }
      v3 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v3);
  }
}

Class sub_10000474C()
{
  if (qword_1000F0870 != -1) {
    dispatch_once(&qword_1000F0870, &stru_1000D9A80);
  }
  Class result = objc_getClass("CMMotionManager");
  qword_1000F0868 = (uint64_t)result;
  off_1000ED238 = (uint64_t (*)())sub_1000047B0;
  return result;
}

id sub_1000047B0()
{
  return (id)qword_1000F0868;
}

void sub_1000047BC(id a1)
{
  qword_1000F0878 = (uint64_t)dlopen("/System/Library/Frameworks/CoreMotion.framework/CoreMotion", 2);
}

void sub_100004BFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_100004C20(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 8), a2);
  if (WeakRetained || [v10 isEmpty])
  {
    v12 = [*(id *)(*(void *)(a1 + 32) + 16) voices];
    v13 = [v12 objectAtIndexedSubscript:[v9 row]];

    v14 = [WeakRetained _tableCellForVoiceViewModel:v13 indexPath:v9];
  }
  else
  {
    v14 = 0;
  }

  return v14;
}

id sub_100005660(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 67) = 0;
  return _[*(id *)(a1 + 32) clearHistory];
}

void sub_10000578C(uint64_t a1)
{
  size_t Width = CVPixelBufferGetWidth(*(CVPixelBufferRef *)(a1 + 40));
  size_t Height = CVPixelBufferGetHeight(*(CVPixelBufferRef *)(a1 + 40));
  if (Width >= Height) {
    unint64_t v4 = Height;
  }
  else {
    unint64_t v4 = Width;
  }
  double v5 = (double)v4;
  uint64_t v6 = *(void *)(a1 + 32);
  [*(id *)(v6 + 48) setCropRect:Width * 0.5 - *(double *)(v6 + 72) * v5 * 0.5, Height * 0.5 - *(double *)(v6 + 72) * v5 * 0.5, *(double *)(v6 + 72) * v5, *(double *)(v6 + 72) * v5];
  [*(id *)(a1 + 32) processVideoFrame:*(void *)(a1 + 40)];
  v7 = *(const void **)(a1 + 40);

  CFRelease(v7);
}

void sub_100005890(uint64_t a1)
{
  CVPixelBufferRef pixelBufferOut = 0;
  if (!CVPixelBufferCreate(0, 1uLL, 1uLL, 0x42475241u, 0, &pixelBufferOut)) {
    [*(id *)(a1 + 32) processVideoFrame:pixelBufferOut];
  }
  CVPixelBufferRelease(pixelBufferOut);
}

void sub_100005AE4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 64) = 0;
  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    v1 = v2;
  }
}

uint64_t sub_100005B38(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 64) = 0;
  return result;
}

void sub_1000067E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006818(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleAgreeFromObjectModel:v3];
}

void sub_100006874(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100006904;
  block[3] = &unk_1000D9B70;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_100006904(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _termsDisagree];
}

void sub_100006944(id a1, BOOL a2, NSError *a3)
{
  CFStringRef v3 = @"Fail";
  if (a2) {
    CFStringRef v3 = @"Success";
  }
  NSLog(@"results = %@, with error = %@", v3, a3);
}

void sub_100006A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4) {
    NSLog(@"Failed to mark terms as agreed in iCloud: %@", a4);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100006B1C;
  block[3] = &unk_1000D9AD0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100006B1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissTerms:1];
}

uint64_t start(int a1, char **a2)
{
  double v5 = (objc_class *)objc_opt_class();
  NSStringFromClass(v5);
  uint64_t v6 = (NSString *)objc_claimAutoreleasedReturnValue();
  LogControl();
  uint64_t v7 = UIApplicationMain(a1, a2, 0, v6);

  return v7;
}

id sub_100007214(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  CFStringRef v3 = [v2 localizedStringForKey:v1 value:&stru_1000DE4A0 table:@"Localizable"];

  return v3;
}

BOOL sub_100007294()
{
  return MKBGetDeviceLockState() - 1 < 2;
}

void sub_1000072BC(id a1)
{
  if (MGGetBoolAnswer()) {
    char v1 = 1;
  }
  else {
    char v1 = MGGetBoolAnswer();
  }
  byte_1000F0880 = v1;
}

id sub_1000072FC(char a1)
{
  if ((a1 - 2) > 3u) {
    char v1 = @"iPhone";
  }
  else {
    char v1 = off_1000D9C18[(char)(a1 - 2)];
  }
  return sub_100007344(@"Localizable", v1);
}

id sub_100007334(void *a1)
{
  return sub_100007344(@"Localizable", a1);
}

id sub_100007344(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  double v5 = +[NSBundle mainBundle];
  uint64_t v6 = sub_1000073C8(v5, v4, v3);

  return v6;
}

id sub_1000073C8(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (qword_1000F0888 != -1) {
    dispatch_once(&qword_1000F0888, &stru_1000D9BF8);
  }
  if (byte_1000F0880)
  {
    id v8 = [v7 stringByAppendingString:@"_GT"];
    id v9 = [v5 localizedStringForKey:v8 value:@"_GT" table:v6];

    if (![v9 isEqual:@"_GT"]) {
      goto LABEL_7;
    }
  }
  id v9 = 0;
LABEL_7:
  if (![v9 length])
  {
    uint64_t v10 = [v5 localizedStringForKey:v7 value:&stru_1000DE4A0 table:v6];

    id v9 = (void *)v10;
  }
  if (v9) {
    v11 = v9;
  }
  else {
    v11 = v7;
  }
  id v12 = v11;

  return v12;
}

id sub_1000074F4(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = sub_100007344(@"Localizable", v5);
  id v15 = 0;
  id v8 = [objc_alloc((Class)NSString) initWithValidatedFormat:v7 validFormatSpecifiers:v6 arguments:a3 error:&v15];

  id v9 = v15;
  uint64_t v10 = v8;
  if (!v8)
  {
    v13 = +[NSAssertionHandler currentHandler];
    v14 = +[NSString stringWithUTF8String:"NSString * _Nonnull SVSLocalizedStringV(NSString * _Nonnull __strong, NSString *__strong _Nonnull, va_list)"];
    [v13 handleFailureInFunction:v14, @"Utilities.m", 109, @"nil localized string for %@ key - %@", v5, v9 file lineNumber description];

    uint64_t v10 = v5;
  }
  id v11 = v10;

  return v11;
}

id sub_100007614()
{
  v0 = CUAddSuffixForCurrentDeviceClass();
  char v1 = [v0 stringByAppendingString:@"_HOMEPOD"];

  return v1;
}

id sub_100007668()
{
  v2[0] = FBSOpenApplicationOptionKeyUnlockDevice;
  v2[1] = FBSOpenApplicationOptionKeyPromptUnlockDevice;
  v3[0] = &__kCFBooleanTrue;
  v3[1] = &__kCFBooleanTrue;
  v0 = +[NSDictionary dictionaryWithObjects:v3 forKeys:v2 count:2];

  return v0;
}

uint64_t sub_100007704(void *a1)
{
  strlen((const char *)[a1 UTF8String]);
  uint64_t v1 = 1;
  while (TextSep())
  {
    if (strnicmpx())
    {
      if (strnicmpx())
      {
        if (strnicmpx())
        {
          if (strnicmpx())
          {
            if (strnicmpx())
            {
              if (strnicmpx())
              {
                if (strnicmpx())
                {
                  if (strnicmpx())
                  {
                    if (strnicmpx())
                    {
                      if (strnicmpx())
                      {
                        if (strnicmpx())
                        {
                          if (strnicmpx())
                          {
                            if (strnicmpx())
                            {
                              if (strnicmpx())
                              {
                                if (strnicmpx())
                                {
                                  if (strnicmpx())
                                  {
                                    if (strnicmpx())
                                    {
                                      if (strnicmpx())
                                      {
                                        if (strnicmpx())
                                        {
                                          if (strnicmpx())
                                          {
                                            if (strnicmpx())
                                            {
                                              if (strnicmpx())
                                              {
                                                if (strnicmpx())
                                                {
                                                  if (strnicmpx())
                                                  {
                                                    if (strnicmp_prefix())
                                                    {
                                                      if (strnicmp_prefix())
                                                      {
                                                        if (strnicmp_prefix())
                                                        {
                                                          if (strnicmp_prefix())
                                                          {
                                                            if (strnicmp_prefix())
                                                            {
                                                              if (strnicmp_prefix())
                                                              {
                                                                if (strnicmp_prefix())
                                                                {
                                                                  if (strnicmpx())
                                                                  {
                                                                    if (strnicmpx())
                                                                    {
                                                                      if (strnicmpx())
                                                                      {
                                                                        if (strnicmpx())
                                                                        {
                                                                          if (strnicmpx())
                                                                          {
                                                                            if (!strnicmpx()) {
                                                                              v1 |= 0x10000000000uLL;
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            v1 |= 0x1000000000uLL;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          v1 |= 0x800000000uLL;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        v1 |= 0x400000000uLL;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      v1 |= 0x200000000uLL;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    v1 |= (unint64_t)&_mh_execute_header;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  v1 |= 0x80000000uLL;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                v1 |= 0x20000000uLL;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              v1 |= 0x10000000uLL;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            v1 |= 0x8000000uLL;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          v1 |= 0x4000000uLL;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v1 |= 0x40000000uLL;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      v1 |= 0x2000000uLL;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    v1 |= 0x1000000uLL;
                                                  }
                                                }
                                                else
                                                {
                                                  v1 |= 0x800000uLL;
                                                }
                                              }
                                              else
                                              {
                                                v1 |= 0x400000uLL;
                                              }
                                            }
                                            else
                                            {
                                              v1 |= 0x200000uLL;
                                            }
                                          }
                                          else
                                          {
                                            v1 |= 0x100000uLL;
                                          }
                                        }
                                        else
                                        {
                                          v1 |= 0x80000uLL;
                                        }
                                      }
                                      else
                                      {
                                        v1 |= 0x40000uLL;
                                      }
                                    }
                                    else
                                    {
                                      v1 |= 0x20000uLL;
                                    }
                                  }
                                  else
                                  {
                                    v1 |= 0x10000uLL;
                                  }
                                }
                                else
                                {
                                  v1 |= 0x8000uLL;
                                }
                              }
                              else
                              {
                                v1 |= 0x4000uLL;
                              }
                            }
                            else
                            {
                              v1 |= 0x2000uLL;
                            }
                          }
                          else
                          {
                            v1 |= 0x1000uLL;
                          }
                        }
                        else
                        {
                          v1 |= 0x800uLL;
                        }
                      }
                      else
                      {
                        v1 |= 0x400uLL;
                      }
                    }
                    else
                    {
                      v1 |= 0x200uLL;
                    }
                  }
                  else
                  {
                    v1 |= 0x100uLL;
                  }
                }
                else
                {
                  v1 |= 0x80uLL;
                }
              }
              else
              {
                v1 |= 0x40uLL;
              }
            }
            else
            {
              v1 |= 0x20uLL;
            }
          }
          else
          {
            v1 |= 0x10uLL;
          }
        }
        else
        {
          v1 |= 8uLL;
        }
      }
      else
      {
        v1 |= 4uLL;
      }
    }
    else
    {
      v1 |= 2uLL;
    }
  }
  return v1;
}

void sub_100007BE0(intptr_t a1, intptr_t a2, uint64_t a3, id *a4, id *a5, id *a6, id *a7, void **a8, void **a9)
{
}

void sub_100007C18(intptr_t a1, intptr_t a2, uint64_t a3, id *a4, id *a5, id *a6, void **a7, id *a8, void **a9, void **a10, id *a11)
{
  uint64_t v68 = 0;
  v69 = &v68;
  uint64_t v70 = 0x3032000000;
  v71 = sub_1000086FC;
  v72 = sub_10000870C;
  id v73 = 0;
  if ((a3 & 4) == 0)
  {
    id v15 = 0;
    if ((a3 & 8) != 0) {
      goto LABEL_3;
    }
LABEL_78:
    v43 = sub_100007334(@"AUDIO_ACCESSORY");
    v44 = +[UIColor grayColor];
    v18 = 0;
    v19 = @"UnsupportedAccessory.png";
    goto LABEL_111;
  }
  if (dword_1000ED480 <= 30 && (dword_1000ED480 != -1 || _LogCategory_Initialize()))
  {
    uint64_t v56 = a3;
    v57 = &unk_1000AF650;
    intptr_t v53 = a1;
    uint64_t v55 = a2;
    LogPrintF();
  }
  uint64_t v23 = mach_absolute_time();
  unsigned __int8 v24 = a2;
  if ((a3 & 0x1060) == 0x60)
  {
    unsigned __int8 v24 = (a2 != 2) != ((a3 & 0x800) == 0) ? 2 : 1;
    if (dword_1000ED480 <= 30 && (dword_1000ED480 != -1 || _LogCategory_Initialize()))
    {
      intptr_t v53 = a2;
      uint64_t v55 = v24;
      LogPrintF();
    }
  }
  if ((a3 & 8) != 0) {
    id v27 = [objc_alloc((Class)SFDeviceAssetQuery) initWithHomePodColor:v24 version:a1];
  }
  else {
    id v27 = [objc_alloc((Class)SFDeviceAssetQuery) initWithBluetoothProductIdentifier:a1 color:v24];
  }
  v28 = v27;
  dispatch_semaphore_t v29 = dispatch_semaphore_create(0);
  id v30 = objc_alloc_init((Class)SFDeviceAssetManager);
  dispatch_queue_t v31 = dispatch_queue_create("MobileAssetLookup", 0);
  [v30 setDispatchQueue:v31];

  [v30 activate];
  id v32 = objc_alloc((Class)SFDeviceAssetRequestConfiguration);
  v62[0] = _NSConcreteStackBlock;
  v62[1] = 3221225472;
  v62[2] = sub_100008714;
  v62[3] = &unk_1000D9C40;
  int v66 = a1;
  char v67 = a2;
  v64 = &v68;
  uint64_t v65 = v23;
  v33 = v29;
  v63 = v33;
  id v34 = [v32 initWithQueryResultHandler:v62];
  [v34 setTimeout:3.0];
  [v30 getAssetBundleForDeviceQuery:v28 withRequestConfiguration:v34];
  dispatch_time_t v35 = dispatch_time(0, 5000000000);
  intptr_t v36 = dispatch_semaphore_wait(v33, v35);
  if (v36)
  {
    if (dword_1000ED480 <= 60)
    {
      intptr_t v37 = v36;
      if (dword_1000ED480 != -1 || _LogCategory_Initialize())
      {
        intptr_t v53 = v37;
        LogPrintF();
      }
    }
  }
  id v15 = 0;
  if ((a3 & 8) != 0)
  {
    v38 = (void *)v69[5];
    if (v38)
    {
      id v15 = [v38 pathForResource:@"ProxCard_connect-engage.mov" ofType:0];
      if (!v15)
      {
        if (dword_1000ED480 <= 90 && (dword_1000ED480 != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        id v15 = 0;
      }
    }
  }

  if ((a3 & 8) == 0) {
    goto LABEL_78;
  }
LABEL_3:
  v16 = (void *)GestaltCopyAnswer();
  id v17 = [v16 intValue];
  if ((a3 & 0x10) != 0)
  {
    if (SFDeviceClassCodeGet() != 3)
    {
      if (v17 == 2) {
        v18 = @"ProxCard_Lockup-iPhone9_1@2x.png";
      }
      else {
        v18 = @"ProxCard_Lockup-iPhone9_2@3x.png";
      }
      [v69[5] pathForResource:v18 ofType:0 v53, v55, v56, v57];
      v19 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (v19) {
        goto LABEL_107;
      }
      if (dword_1000ED480 > 90 || dword_1000ED480 == -1 && !_LogCategory_Initialize()) {
        goto LABEL_81;
      }
      goto LABEL_131;
    }
    v19 = [(id)v69[5] pathForResource:@"ProxCard_Lockup-iPad@2x.png" ofType:0];
    if (!v19)
    {
      if (dword_1000ED480 <= 90 && (dword_1000ED480 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      v18 = 0;
      goto LABEL_81;
    }
LABEL_74:
    v18 = 0;
    goto LABEL_107;
  }
  if ((a3 & 0x400) != 0)
  {
    CFStringRef v20 = @"HomePod";
    if (a1 == 6) {
      CFStringRef v20 = @"HomePod6";
    }
    if ((a3 & 0x20) != 0)
    {
      if ((a3 & 0x40) != 0)
      {
        if ((a2 != 2) != ((a3 & 0x800) == 0)) {
          CFStringRef v26 = @"TVAudio_Stereo%@_LeftWhite_RightBlack";
        }
        else {
          CFStringRef v26 = @"TVAudio_Stereo%@_LeftBlack_RightWhite";
        }
        goto LABEL_73;
      }
      CFStringRef v21 = @"TVAudio_Stereo%@_BothWhite";
      CFStringRef v22 = @"TVAudio_Stereo%@_BothBlack";
    }
    else
    {
      CFStringRef v21 = @"TVAudio_Single%@_White";
      CFStringRef v22 = @"TVAudio_Single%@_Black";
    }
    if (a2 == 2) {
      CFStringRef v26 = v21;
    }
    else {
      CFStringRef v26 = v22;
    }
LABEL_73:
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", v26, v20, v55, v56, v57);
    v19 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_74;
  }
  if ((a3 & 0x20) != 0)
  {
    if ((a3 & 0x40) != 0)
    {
      if (a2 == 1) {
        v39 = @"2";
      }
      else {
        v39 = @"1";
      }
      v40 = v39;
      if ((a3 & 0x1000) == 0)
      {
        if ((a2 != 2) != ((a3 & 0x800) == 0)) {
          v41 = @"1";
        }
        else {
          v41 = @"2";
        }
        v42 = v41;

        v40 = v42;
      }
      if (dword_1000ED480 <= 30 && (dword_1000ED480 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      if ((a3 & 2) != 0) {
        CFStringRef v45 = @"ProxCard_StereoPair-Mixed-CL_%@-Small@%dx.png";
      }
      else {
        CFStringRef v45 = @"ProxCard_StereoPair-Mixed-CL_%@-Large@%dx.png";
      }
      +[NSString stringWithFormat:](NSString, "stringWithFormat:", v45, v40, v17, v56, v57);
      v18 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (dword_1000ED480 <= 30 && (dword_1000ED480 != -1 || _LogCategory_Initialize()))
      {
        v54 = v18;
        LogPrintF();
      }
      [v69[5] pathForResource:v18 ofType:0];
      v19 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (v19)
      {

        goto LABEL_107;
      }
      v25 = +[NSString stringWithFormat:@"ProxCard_StereoPair-Mixed-CL_%@@%dx.png", v40, v17];

      v19 = [(id)v69[5] pathForResource:v25 ofType:0];
      if (dword_1000ED480 <= 90 && (dword_1000ED480 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    else
    {
      v25 = 0;
      v19 = 0;
    }
    if ((a3 & 2) != 0) {
      CFStringRef v46 = @"ProxCard_StereoPair-Small@%dx.png";
    }
    else {
      CFStringRef v46 = @"ProxCard_StereoPair-Large@%dx.png";
    }
    v47 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v46, v17, v55);

    v48 = +[NSString stringWithFormat:@"ProxCard_StereoPair@%dx.png", v17];

    if (v19
      || ([(id)v69[5] pathForResource:v48 ofType:0],
          (v19 = (__CFString *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      v18 = v48;
      goto LABEL_107;
    }
    v18 = +[NSString stringWithFormat:@"ProxCard_StereoPair-Small@%dx.png", v17];

    v19 = [(id)v69[5] pathForResource:v18 ofType:0];
    if (v19) {
      goto LABEL_107;
    }
    if (dword_1000ED480 > 90 || dword_1000ED480 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
LABEL_131:
    LogPrintF();
LABEL_81:
    v19 = @"UnsupportedAccessory.png";
    goto LABEL_107;
  }
  v18 = +[NSString stringWithFormat:@"ProxCard_Setup@%dx.png", v17];
  v19 = [(id)v69[5] pathForResource:v18 ofType:0];
  if (!v19)
  {
    if (dword_1000ED480 > 90 || dword_1000ED480 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
    goto LABEL_131;
  }
LABEL_107:
  if (a1 == 5) {
    v49 = @"AS_HOMEPODMINI";
  }
  else {
    v49 = @"HOMEPOD";
  }
  v43 = sub_100007334(v49);

  v44 = 0;
LABEL_111:
  if (a7)
  {
    v50 = *a7;
    *a7 = 0;
  }
  if (a10)
  {
    v51 = *a10;
    *a10 = 0;
  }
  if (a9)
  {
    v52 = *a9;
    *a9 = 0;
  }
  if (a5) {
    objc_storeStrong(a5, v44);
  }
  if (a8) {
    objc_storeStrong(a8, v15);
  }
  if (a6) {
    objc_storeStrong(a6, v43);
  }
  if (a4) {
    objc_storeStrong(a4, v19);
  }
  if (a11) {
    objc_storeStrong(a11, (id)v69[5]);
  }
  _Block_object_dispose(&v68, 8);
}

void sub_1000086B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

uint64_t sub_1000086FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000870C(uint64_t a1)
{
}

void sub_100008714(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v14 = a3;
  id v9 = a5;
  mach_absolute_time();
  UpTicksToSecondsF();
  if (v9)
  {
    if (dword_1000ED480 <= 60 && (dword_1000ED480 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  else if (dword_1000ED480 <= 30 && (dword_1000ED480 != -1 || _LogCategory_Initialize()))
  {
    v13 = [v8 bundleIdentifier];
    LogPrintF();
  }
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v8;
  id v12 = v8;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10000940C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100009428(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v12 = a2;
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v8 = WeakRetained;
  if (WeakRetained && [*((id *)WeakRetained + 3) isEqual:*(void *)(a1 + 32)])
  {
    id v9 = (void *)v8[3];
    v8[3] = 0;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t v11 = *(void *)(a1 + 40);
  if (v11) {
    (*(void (**)(uint64_t, BOOL, id))(v11 + 16))(v11, Int64 != 0, v12);
  }
}

void sub_10000964C(void *a1, void *a2)
{
  id v4 = a1;
  id v3 = a2;
  if (dword_1000ED5B0 <= 30 && (dword_1000ED5B0 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  off_1000ED620(v4, v3);
}

void sub_100009708(void *a1, void *a2)
{
  uint64_t v3 = qword_1000F0890;
  id v4 = a2;
  id v5 = a1;
  if (v3 != -1) {
    dispatch_once(&qword_1000F0890, &stru_1000D9C88);
  }
  off_1000ED620 = (uint64_t (*)())dlsym((void *)qword_1000F0898, "AnalyticsSendEvent");
  ((void (*)(id, id))off_1000ED620)(v5, v4);
}

void sub_1000097B4(id a1)
{
  qword_1000F0898 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics", 2);
}

void sub_100009A54(CMTime *a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  CMTime v26 = *a1;
  if (a5)
  {
    unsigned int v6 = a3 - 1;
    if (a3 != 1)
    {
      unint64_t v10 = 0;
      unsigned int v11 = 0;
      unsigned int v19 = a3 - 2;
      unint64_t v12 = a5;
      do
      {
        CMTime lhs = a1[v11];
        CMTime rhs = v26;
        CMTimeSubtract(&time, &lhs, &rhs);
        float Seconds = CMTimeGetSeconds(&time);
        uint64_t v14 = v11 + 1;
        CMTime lhs = a1[v14];
        CMTime rhs = v26;
        CMTimeSubtract(&v22, &lhs, &rhs);
        double v15 = CMTimeGetSeconds(&v22);
        CMTime lhs = *(CMTime *)(a4 + 24 * v10);
        CMTime rhs = v26;
        CMTimeSubtract(&v21, &lhs, &rhs);
        float v16 = CMTimeGetSeconds(&v21);
        if (v16 <= Seconds)
        {
          float v18 = *(float *)(a2 + 4 * v11);
        }
        else
        {
          float v17 = v15;
          if (v16 <= v17)
          {
            float v18 = *(float *)(a2 + 4 * v11)
                + (float)((float)((float)(v16 - Seconds) * (float)(*(float *)(a2 + 4 * v14) - *(float *)(a2 + 4 * v11)))
                        / (float)(v17 - Seconds));
          }
          else
          {
            if (v11 < v19)
            {
              ++v11;
              continue;
            }
            float v18 = *(float *)(a2 + 4 * v14);
          }
        }
        *(float *)(a6 + 4 * v10++) = v18;
      }
      while (v10 < v12 && v11 < v6);
    }
  }
}

void sub_100009CE4(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (dword_1000ED628 <= 30 && (dword_1000ED628 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v6 = 0;
  if (v7 && !v5)
  {
    if ([v7 statusType] == (id)3) {
      uint64_t v6 = [v7 isInFreeTrial] ^ 1;
    }
    else {
      uint64_t v6 = 0;
    }
  }
  (*(void (**)(void, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v6);
}

void sub_10000A0A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000A0D4(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (v5)
  {
    if (dword_1000ED628 > 90 || dword_1000ED628 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_15;
    }
LABEL_8:
    LogPrintF();
    goto LABEL_15;
  }
  if ([v7 count])
  {
    if (dword_1000ED628 <= 40 && (dword_1000ED628 != -1 || _LogCategory_Initialize())) {
      goto LABEL_8;
    }
  }
  else if (dword_1000ED628 <= 90 && (dword_1000ED628 != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_8;
  }
LABEL_15:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32));
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setAmsDeviceRegistrationPromise:0];
}

void sub_10000A8F8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v3 = [[HPdetector_SceneClassifier_B238 alloc] initWithMLModel:v4];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10000ABC0(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  if (v12)
  {
    id v5 = a3;
    uint64_t v6 = [HPdetector_SceneClassifier_B238Output alloc];
    id v7 = [v12 featureValueForName:@"HomePodDetected"];
    id v8 = [v7 multiArrayValue];
    id v9 = [(HPdetector_SceneClassifier_B238Output *)v6 initWithHomePodDetected:v8];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void (**)(uint64_t, void, HPdetector_SceneClassifier_B238Output *))(v10 + 16);
    id v9 = a3;
    v11(v10, 0, v9);
  }
}

void sub_10000AD98(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  if (v12)
  {
    id v5 = a3;
    uint64_t v6 = [HPdetector_SceneClassifier_B238Output alloc];
    id v7 = [v12 featureValueForName:@"HomePodDetected"];
    id v8 = [v7 multiArrayValue];
    id v9 = [(HPdetector_SceneClassifier_B238Output *)v6 initWithHomePodDetected:v8];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void (**)(uint64_t, void, HPdetector_SceneClassifier_B238Output *))(v10 + 16);
    id v9 = a3;
    v11(v10, 0, v9);
  }
}

void sub_10000B73C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v3 = [[HPdetector_SmartCam_B238 alloc] initWithMLModel:v4];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10000BA04(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  if (v12)
  {
    id v5 = a3;
    uint64_t v6 = [HPdetector_SmartCam_B238Output alloc];
    id v7 = [v12 featureValueForName:@"HomePodDetected"];
    id v8 = [v7 multiArrayValue];
    id v9 = [(HPdetector_SmartCam_B238Output *)v6 initWithHomePodDetected:v8];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void (**)(uint64_t, void, HPdetector_SmartCam_B238Output *))(v10 + 16);
    id v9 = a3;
    v11(v10, 0, v9);
  }
}

void sub_10000BBDC(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  if (v12)
  {
    id v5 = a3;
    uint64_t v6 = [HPdetector_SmartCam_B238Output alloc];
    id v7 = [v12 featureValueForName:@"HomePodDetected"];
    id v8 = [v7 multiArrayValue];
    id v9 = [(HPdetector_SmartCam_B238Output *)v6 initWithHomePodDetected:v8];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void (**)(uint64_t, void, HPdetector_SmartCam_B238Output *))(v10 + 16);
    id v9 = a3;
    v11(v10, 0, v9);
  }
}

void sub_10000C580(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v3 = [[HPdetector_SceneClassifier_B520 alloc] initWithMLModel:v4];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10000C848(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  if (v12)
  {
    id v5 = a3;
    uint64_t v6 = [HPdetector_SceneClassifier_B520Output alloc];
    id v7 = [v12 featureValueForName:@"HomePodDetected"];
    id v8 = [v7 multiArrayValue];
    id v9 = [(HPdetector_SceneClassifier_B520Output *)v6 initWithHomePodDetected:v8];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void (**)(uint64_t, void, HPdetector_SceneClassifier_B520Output *))(v10 + 16);
    id v9 = a3;
    v11(v10, 0, v9);
  }
}

void sub_10000CA20(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  if (v12)
  {
    id v5 = a3;
    uint64_t v6 = [HPdetector_SceneClassifier_B520Output alloc];
    id v7 = [v12 featureValueForName:@"HomePodDetected"];
    id v8 = [v7 multiArrayValue];
    id v9 = [(HPdetector_SceneClassifier_B520Output *)v6 initWithHomePodDetected:v8];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void (**)(uint64_t, void, HPdetector_SceneClassifier_B520Output *))(v10 + 16);
    id v9 = a3;
    v11(v10, 0, v9);
  }
}

unint64_t sub_10000CD54()
{
  unint64_t v11 = 0xD000000000000013;
  unint64_t v12 = 0x80000001000B3F80;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v10[0] = 0x64657463656C6573;
  v10[1] = 0xEF3D6E6F69746341;
  v1._countAndFlagsBits = sub_1000106E8(*v0);
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 32;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3._countAndFlagsBits = 0x64657463656C6573;
  v3._object = (void *)0xEF3D6E6F69746341;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  sub_10000FD94((uint64_t)(v0 + 8), (uint64_t)&v8, &qword_1000ED970);
  if (v9)
  {
    sub_10000F6D0((long long *)&v8._countAndFlagsBits, (uint64_t)v10);
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(18);
    v4._object = (void *)0xEF3D6E6F6974704FLL;
    v4._countAndFlagsBits = 0x64657463656C6573;
    String.append(_:)(v4);
    sub_10000EE48(&qword_1000ED978);
    _print_unlocked<A, B>(_:_:)();
    v5._countAndFlagsBits = 32;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    sub_10000E470((uint64_t)v10);
  }
  else
  {
    sub_10000F674((uint64_t)&v8, &qword_1000ED970);
  }
  v6._countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v11;
}

uint64_t sub_10000CF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)(a2 + 8) = 0u;
  uint64_t v4 = a2 + 8;
  *(void *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 24) = 0u;
  strcpy((char *)&v39, "selectedAction");
  HIBYTE(v39) = -18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_10005513C((uint64_t)&v44), (v6 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v42);
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_10000F474((uint64_t)&v44);
  if (!*((void *)&v43 + 1))
  {
    sub_10000F674((uint64_t)&v42, &qword_1000EE410);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    *(void *)&long long v39 = 0x44496E6F74747562;
    *((void *)&v39 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a1 + 16) && (unint64_t v7 = sub_10005513C((uint64_t)&v44), (v8 & 1) != 0))
    {
      sub_10000F578(*(void *)(a1 + 56) + 32 * v7, (uint64_t)&v42);
    }
    else
    {
      long long v42 = 0u;
      long long v43 = 0u;
    }
    sub_10000F474((uint64_t)&v44);
    if (*((void *)&v43 + 1))
    {
      if (swift_dynamicCast()) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_10000F674((uint64_t)&v42, &qword_1000EE410);
    }
    char v10 = 0;
    goto LABEL_20;
  }
LABEL_15:
  char v9 = sub_100010D48();
  if (v9 == 33) {
    char v10 = 0;
  }
  else {
    char v10 = v9;
  }
LABEL_20:
  *(unsigned char *)a2 = v10;
  strcpy((char *)&v39, "selectedOption");
  HIBYTE(v39) = -18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_10005513C((uint64_t)&v44), (v12 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v42);
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_10000F474((uint64_t)&v44);
  if (!*((void *)&v43 + 1))
  {
    sub_10000F674((uint64_t)&v42, &qword_1000EE410);
    goto LABEL_33;
  }
  sub_10000EE48(&qword_1000ED9F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_33;
  }
  *(void *)&long long v42 = 1701869940;
  *((void *)&v42 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  if (!*(void *)(v39 + 16) || (unint64_t v13 = sub_10005513C((uint64_t)&v44), (v14 & 1) == 0))
  {
    sub_10000F474((uint64_t)&v44);
    swift_bridgeObjectRelease();
LABEL_33:
    *(void *)&long long v39 = 0x44496E6F6974706FLL;
    *((void *)&v39 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a1 + 16) && (unint64_t v19 = sub_10005513C((uint64_t)&v44), (v20 & 1) != 0))
    {
      sub_10000F578(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v42);
    }
    else
    {
      long long v42 = 0u;
      long long v43 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10000F474((uint64_t)&v44);
    if (*((void *)&v43 + 1))
    {
      if (swift_dynamicCast())
      {
        long long v21 = v39;
        *((void *)&v45 + 1) = &type metadata for SimpleOption;
        *(void *)&long long v46 = &off_1000DAEC0;
        CMTime v22 = (_OWORD *)swift_allocObject();
        *(void *)&long long v44 = v22;
        v22[1] = v39;
        v22[2] = v21;
        v22[3] = v21;
        swift_bridgeObjectRetain_n();
LABEL_40:
        uint64_t v23 = &v44;
        return sub_10000F510((uint64_t)v23, v4);
      }
    }
    else
    {
      sub_10000F674((uint64_t)&v42, &qword_1000EE410);
    }
    uint64_t result = sub_10000F674(v4, &qword_1000ED970);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(void *)(v4 + 32) = 0;
    return result;
  }
  double v15 = (uint64_t *)(*(void *)(v39 + 56) + 16 * v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  swift_bridgeObjectRetain();
  sub_10000F474((uint64_t)&v44);
  swift_bridgeObjectRelease();
  *(void *)&long long v44 = &type metadata for SimpleOption;
  sub_10000EE48(&qword_1000ED9F8);
  if (v17 == String.init<A>(describing:)() && v16 == v18)
  {
    swift_bridgeObjectRelease();
LABEL_45:
    swift_bridgeObjectRelease();
    sub_100010328(v39, (uint64_t *)&v42);
    swift_bridgeObjectRelease();
    sub_10000F60C((uint64_t)&v42, (uint64_t)&v44);
    if (*((void *)&v44 + 1))
    {
      *((void *)&v40 + 1) = &type metadata for SimpleOption;
      v41 = &off_1000DAEC0;
      CMTime v26 = (_OWORD *)swift_allocObject();
      *(void *)&long long v39 = v26;
      long long v27 = v45;
      v26[1] = v44;
      v26[2] = v27;
      v26[3] = v46;
    }
    else
    {
      v41 = 0;
      long long v39 = 0u;
      long long v40 = 0u;
    }
    uint64_t v23 = &v39;
    return sub_10000F510((uint64_t)v23, v4);
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_45;
  }
  *(void *)&long long v44 = &type metadata for RoomOption;
  sub_10000EE48(&qword_1000EDA00);
  if (v17 == String.init<A>(describing:)() && v16 == v28)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_53;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29)
  {
LABEL_53:
    char v30 = sub_100096D08(v39);
    if (v32)
    {
      char v34 = v30;
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      char v37 = v33 & 1;
      *((void *)&v45 + 1) = &type metadata for RoomOption;
      *(void *)&long long v46 = &off_1000DD638;
      uint64_t v38 = swift_allocObject();
      *(void *)&long long v44 = v38;
      *(unsigned char *)(v38 + 16) = v34 & 1;
      *(void *)(v38 + 24) = v35;
      *(void *)(v38 + 32) = v36;
      *(unsigned char *)(v38 + 40) = v37;
    }
    else
    {
      *(void *)&long long v46 = 0;
      long long v44 = 0u;
      long long v45 = 0u;
    }
    goto LABEL_40;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_10000D500()
{
  sub_10000FD94((uint64_t)(v0 + 8), (uint64_t)v17, &qword_1000ED970);
  if (v18)
  {
    sub_10000EE48(&qword_1000ED978);
    sub_10000EE48(&qword_1000EDA20);
    if (swift_dynamicCast())
    {
      if (*((void *)&v20 + 1))
      {
        sub_10000F6D0(&v19, (uint64_t)v22);
        sub_10000EE48(&qword_1000EDA18);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1000AF6D0;
        strcpy((char *)&v19, "selectedAction");
        HIBYTE(v19) = -18;
        AnyHashable.init<A>(_:)();
        unint64_t v2 = sub_1000106E8(*v0);
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 72) = v2;
        *(void *)(inited + 80) = v3;
        strcpy((char *)&v19, "selectedOption");
        HIBYTE(v19) = -18;
        AnyHashable.init<A>(_:)();
        uint64_t v4 = v23;
        uint64_t v5 = v24;
        sub_10000F6E8(v22, v23);
        uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
        *(void *)(inited + 168) = sub_10000EE48(&qword_1000ED9F0);
        *(void *)(inited + 144) = v6;
        unint64_t v7 = sub_10000D968(inited);
        sub_10000E470((uint64_t)v22);
        return v7;
      }
    }
    else
    {
      uint64_t v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
    }
  }
  else
  {
    sub_10000F674((uint64_t)v17, &qword_1000ED970);
    long long v19 = 0u;
    long long v20 = 0u;
    uint64_t v21 = 0;
  }
  sub_10000F674((uint64_t)&v19, &qword_1000EDA10);
  sub_10000FD94((uint64_t)(v0 + 8), (uint64_t)v22, &qword_1000ED970);
  uint64_t v8 = v23;
  sub_10000F674((uint64_t)v22, &qword_1000ED970);
  sub_10000EE48(&qword_1000EDA18);
  if (v8)
  {
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_1000AF6D0;
    strcpy(v22, "selectedAction");
    v22[15] = -18;
    AnyHashable.init<A>(_:)();
    unint64_t v10 = sub_1000106E8(*v0);
    *(void *)(v9 + 96) = &type metadata for String;
    *(void *)(v9 + 72) = v10;
    *(void *)(v9 + 80) = v11;
    strcpy(v22, "selectedOption");
    v22[15] = -18;
    AnyHashable.init<A>(_:)();
    *(void *)(v9 + 168) = &type metadata for String;
    unint64_t v12 = 0xD000000000000024;
    unint64_t v13 = 0x80000001000B3FA0;
  }
  else
  {
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_1000AF6D0;
    strcpy(v22, "selectedAction");
    v22[15] = -18;
    AnyHashable.init<A>(_:)();
    unint64_t v14 = sub_1000106E8(*v0);
    *(void *)(v9 + 96) = &type metadata for String;
    *(void *)(v9 + 72) = v14;
    *(void *)(v9 + 80) = v15;
    strcpy(v22, "selectedOption");
    v22[15] = -18;
    AnyHashable.init<A>(_:)();
    *(void *)(v9 + 168) = &type metadata for String;
    unint64_t v12 = 7104878;
    unint64_t v13 = 0xE300000000000000;
  }
  *(void *)(v9 + 144) = v12;
  *(void *)(v9 + 152) = v13;
  return sub_10000D968(v9);
}

unint64_t sub_10000D834(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000EDB70);
  unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000FD94(v4, (uint64_t)v15, &qword_1000EDB78);
    unint64_t result = sub_10005513C((uint64_t)v15);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v15[0];
    long long v9 = v15[1];
    *(void *)(v7 + 32) = v16;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    unint64_t v10 = (void *)(v2[7] + 16 * result);
    uint64_t v11 = v18;
    *unint64_t v10 = v17;
    v10[1] = v11;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v2[2] = v14;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000D968(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000ED9A8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000FD94(v6, (uint64_t)v15, &qword_1000ED9B0);
    unint64_t result = sub_10005513C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10000F464(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000DAAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000ED990);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100055184(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    void v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000DBD0(uint64_t a1)
{
  return sub_10000DE6C(a1, &qword_1000ED980, &qword_1000ED988, (uint64_t (*)(uint64_t))sub_100055180);
}

unint64_t sub_10000DBF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000ED9B8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000FD94(v6, (uint64_t)&v15, &qword_1000ED9C0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100055184(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10000F464(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000DD30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000ED9C8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100055184(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    void v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000DE44(uint64_t a1)
{
  return sub_10000DE6C(a1, &qword_1000ED998, &qword_1000ED9A0, (uint64_t (*)(uint64_t))sub_1000551FC);
}

unint64_t sub_10000DE6C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000FD94(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10000F464(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000DF9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000EDA28);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000FD94(v4, (uint64_t)&v16, &qword_1000EDA30);
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    unint64_t result = sub_100055184(v16, v17);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    uint64_t v10 = (_OWORD *)(v2[7] + 48 * result);
    long long v11 = v18;
    long long v12 = v20;
    v10[1] = v19;
    v10[2] = v12;
    *uint64_t v10 = v11;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v2[2] = v15;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000E0E8(uint64_t a1)
{
  return sub_10000DE6C(a1, &qword_1000ED9D8, (uint64_t *)&unk_1000ED9E0, (uint64_t (*)(uint64_t))sub_100055180);
}

unint64_t sub_10000E110(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000EE48(&qword_1000ED9D0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100055184(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t variable initialization expression of HomePodSetupAutomation.automationStepResults()
{
  return sub_10000DF9C((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SVSHomePodIDViewController.startIngesting()
{
  return 0;
}

uint64_t variable initialization expression of SVSHomePodIDViewController.engine()
{
  return 0;
}

void *variable initialization expression of HomePodSetupAutomation.forcedStateSequence()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of HomePodSetupAutomation.forcedPasscode()
{
  return 0;
}

id variable initialization expression of SVSLPCActivityIndicatorViewController.v()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView());

  return [v0 init];
}

id variable initialization expression of SVSHomePodIDViewController.preView()
{
  type metadata accessor for PreviewView();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

id variable initialization expression of SVSHomePodIDViewController.session()
{
  id v0 = objc_allocWithZone((Class)AVCaptureSession);

  return [v0 init];
}

id variable initialization expression of SVSHomePodIDViewController.feedbackGenerator()
{
  id v0 = objc_allocWithZone((Class)UINotificationFeedbackGenerator);

  return [v0 init];
}

id variable initialization expression of SVSHomePodIDViewController.output()
{
  id v0 = objc_allocWithZone((Class)AVCaptureVideoDataOutput);

  return [v0 init];
}

uint64_t variable initialization expression of SVSHomePodIDViewController.handler()
{
  return 0;
}

void type metadata accessor for SDAirDropStatus(uint64_t a1)
{
}

void type metadata accessor for HPProductVersion(uint64_t a1)
{
}

void type metadata accessor for SFDeviceActionType(uint64_t a1)
{
}

void type metadata accessor for SFStereoRole(uint64_t a1)
{
}

void type metadata accessor for SFDeviceSetupProgressEvent(uint64_t a1)
{
}

void type metadata accessor for SFDeviceModelCode(uint64_t a1)
{
}

void type metadata accessor for SFOSVersion(uint64_t a1)
{
}

void type metadata accessor for UserActionType(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for HomePodSetupStepResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for HomePodSetupStepResult(uint64_t result)
{
  if (*(void *)(result + 32)) {
    return sub_10000E470(result + 8);
  }
  return result;
}

uint64_t sub_10000E470(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t initializeWithCopy for HomePodSetupStepResult(uint64_t a1, char *a2)
{
  char v5 = *a2;
  uint64_t v4 = a2 + 8;
  *(unsigned char *)a1 = v5;
  uint64_t v6 = a1 + 8;
  uint64_t v7 = *((void *)a2 + 4);
  if (v7)
  {
    uint64_t v8 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    long long v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(void *)(v6 + 32) = *((void *)v4 + 4);
  }
  return a1;
}

uint64_t assignWithCopy for HomePodSetupStepResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = a1 + 8;
  uint64_t v4 = (long long *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v5)
    {
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    long long v6 = *v4;
    long long v7 = v4[1];
    *(void *)(v3 + 32) = *((void *)v4 + 4);
    *(_OWORD *)uint64_t v3 = v6;
    *(_OWORD *)(v3 + 16) = v7;
    return a1;
  }
  if (!v5)
  {
    sub_10000E470(a1 + 8);
    goto LABEL_7;
  }
  sub_10000E5F4((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t *sub_10000E5F4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for HomePodSetupStepResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HomePodSetupStepResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    sub_10000E470(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePodSetupStepResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupStepResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupStepResult()
{
  return &type metadata for HomePodSetupStepResult;
}

void type metadata accessor for PRXImageStyle(uint64_t a1)
{
}

_DWORD *sub_10000E978@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_10000E988(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void sub_10000E994(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_10000E99C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10000E9B0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_10000E9C4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10000E9D8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10000EA08@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000EA34@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10000EA58(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10000EA6C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_10000EA80(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10000EA94@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000EAA8(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000EABC(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10000EAD0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000EAE4()
{
  return *v0 == 0;
}

uint64_t sub_10000EAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_10000EB0C(void *result)
{
  *v1 &= ~*result;
  return result;
}

void sub_10000EB20(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned __int8 *sub_10000EB2C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10000EB3C(uint64_t a1, uint64_t a2)
{
  return sub_10000F2CC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000EB60(uint64_t a1, uint64_t a2)
{
  return sub_10000F2CC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

BOOL sub_10000EB80(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000EB94()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10000EBDC()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10000EC08()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10000EC4C(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10000ECC4(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10000ED44@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_10000ED88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *sub_10000ED9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_10000EDA8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10000EDBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_100057938(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10000EE00()
{
  return sub_10000F83C(&qword_1000ED968, type metadata accessor for SFDeviceSetupProgressEvent);
}

uint64_t sub_10000EE48(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *sub_10000EE8C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10000EE9C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10000EEAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000EED8(uint64_t a1)
{
  uint64_t v2 = sub_10000F83C((unint64_t *)&qword_1000EDB50, type metadata accessor for Key);
  uint64_t v3 = sub_10000F83C(&qword_1000EDB58, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000EF94(uint64_t a1)
{
  uint64_t v2 = sub_10000F83C((unint64_t *)&qword_1000EDB40, type metadata accessor for SKCloudServiceSetupOptionsKey);
  uint64_t v3 = sub_10000F83C(&qword_1000EDB48, type metadata accessor for SKCloudServiceSetupOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000F050(uint64_t a1)
{
  uint64_t v2 = sub_10000F83C(&qword_1000EDB30, type metadata accessor for SKCloudServiceSetupAction);
  uint64_t v3 = sub_10000F83C(&qword_1000EDB38, type metadata accessor for SKCloudServiceSetupAction);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000F10C(uint64_t a1)
{
  uint64_t v2 = sub_10000F83C(&qword_1000EDB20, type metadata accessor for SKCloudServiceSetupMessageIdentifier);
  uint64_t v3 = sub_10000F83C(&qword_1000EDB28, type metadata accessor for SKCloudServiceSetupMessageIdentifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000F1C8@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10000F210(uint64_t a1)
{
  uint64_t v2 = sub_10000F83C(&qword_1000EDB60, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_10000F83C(&qword_1000EDB68, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000F2CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10000F310()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000F364()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10000F3D8()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_OWORD *sub_10000F464(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10000F474(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000F4C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10000F510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000ED970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F578(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10000F5D4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10000F60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EDA08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F674(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000EE48(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000F6D0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *sub_10000F6E8(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void type metadata accessor for SKCloudServiceSetupMessageIdentifier(uint64_t a1)
{
}

void type metadata accessor for SKCloudServiceSetupAction(uint64_t a1)
{
}

void type metadata accessor for SKCloudServiceSetupOptionsKey(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void type metadata accessor for HDSBuildType(uint64_t a1)
{
}

void type metadata accessor for ContentMode(uint64_t a1)
{
}

void type metadata accessor for PRXDismissalType(uint64_t a1)
{
}

uint64_t sub_10000F7F4()
{
  return sub_10000F83C(&qword_1000EDA88, type metadata accessor for PRXDismissalType);
}

uint64_t sub_10000F83C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000F884()
{
  return sub_10000F83C(&qword_1000EDA90, type metadata accessor for PRXDismissalType);
}

uint64_t sub_10000F8CC()
{
  return sub_10000F83C(&qword_1000EDA98, type metadata accessor for PRXDismissalType);
}

uint64_t sub_10000F914()
{
  return sub_10000F83C(&qword_1000EDAA0, type metadata accessor for PRXDismissalType);
}

uint64_t sub_10000F95C()
{
  return sub_10000F83C(&qword_1000EDAA8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10000F9A4()
{
  return sub_10000F83C(&qword_1000EDAB0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10000F9EC()
{
  return sub_10000F83C(&qword_1000EDAB8, type metadata accessor for Key);
}

uint64_t sub_10000FA34()
{
  return sub_10000F83C(&qword_1000EDAC0, type metadata accessor for Key);
}

uint64_t sub_10000FA7C()
{
  return sub_10000F83C(&qword_1000EDAC8, type metadata accessor for SKCloudServiceSetupOptionsKey);
}

uint64_t sub_10000FAC4()
{
  return sub_10000F83C(&qword_1000EDAD0, type metadata accessor for SKCloudServiceSetupOptionsKey);
}

uint64_t sub_10000FB0C()
{
  return sub_10000F83C(&qword_1000EDAD8, type metadata accessor for SKCloudServiceSetupAction);
}

uint64_t sub_10000FB54()
{
  return sub_10000F83C(&qword_1000EDAE0, type metadata accessor for SKCloudServiceSetupAction);
}

uint64_t sub_10000FB9C()
{
  return sub_10000F83C(&qword_1000EDAE8, type metadata accessor for SKCloudServiceSetupAction);
}

uint64_t sub_10000FBE4()
{
  return sub_10000F83C(&qword_1000EDAF0, type metadata accessor for SKCloudServiceSetupMessageIdentifier);
}

uint64_t sub_10000FC2C()
{
  return sub_10000F83C(&qword_1000EDAF8, type metadata accessor for SKCloudServiceSetupMessageIdentifier);
}

uint64_t sub_10000FC74()
{
  return sub_10000F83C(&qword_1000EDB00, type metadata accessor for SKCloudServiceSetupMessageIdentifier);
}

uint64_t sub_10000FCBC()
{
  return sub_10000F83C(&qword_1000EDB08, type metadata accessor for SKCloudServiceSetupOptionsKey);
}

uint64_t sub_10000FD04()
{
  return sub_10000F83C(&qword_1000EDB10, type metadata accessor for Key);
}

uint64_t sub_10000FD4C()
{
  return sub_10000F83C(&qword_1000EDB18, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10000FD94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000EE48(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for PRXActionStyle(uint64_t a1)
{
}

void sub_10000FE0C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_10000FE78()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_10000D834((uint64_t)&_swiftEmptyArrayStorage);
  AnyHashable.init<A>(_:)();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(0x704F656C706D6953, 0xEC0000006E6F6974, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v14);
  AnyHashable.init<A>(_:)();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  swift_bridgeObjectRetain();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(v4, v5, (uint64_t)v14, v6);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v14);
  AnyHashable.init<A>(_:)();
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  swift_bridgeObjectRetain();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(v7, v8, (uint64_t)v14, v9);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v14);
  AnyHashable.init<A>(_:)();
  uint64_t v11 = v1[2];
  uint64_t v10 = v1[3];
  swift_bridgeObjectRetain();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(v11, v10, (uint64_t)v14, v12);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v14);
  return v2;
}

uint64_t sub_100010090()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000100C4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000100F4()
{
  swift_bridgeObjectRetain();
  v0._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = 1031365995;
  strcpy((char *)&v11, "<SimpleOption ");
  v2._object = (void *)0xE400000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v11._countAndFlagsBits;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v11, "displayValue=");
  HIWORD(v11._object) = -4864;
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = 0x3D65756C6176;
  v8._object = (void *)0xE600000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = 62;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_100010328@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  AnyHashable.init<A>(_:)();
  uint64_t v4 = sub_10009A238((uint64_t)v14, 0x6E776F6B6E75, 0xE600000000000000, a1);
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  sub_10000F474((uint64_t)v14);
  AnyHashable.init<A>(_:)();
  uint64_t v7 = sub_10009A238((uint64_t)v14, 0x76206E776F6B6E75, 0xEC00000065756C61, a1);
  uint64_t v9 = v8;
  swift_bridgeObjectRetain();
  sub_10000F474((uint64_t)v14);
  AnyHashable.init<A>(_:)();
  uint64_t v10 = sub_10009A238((uint64_t)v14, 0xD000000000000013, 0x80000001000B3FD0, a1);
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  uint64_t result = sub_10000F474((uint64_t)v14);
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v10;
  a2[3] = v12;
  a2[4] = v7;
  a2[5] = v9;
  return result;
}

uint64_t destroy for SimpleOption()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SimpleOption(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SimpleOption(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SimpleOption(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleOption(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleOption()
{
  return &type metadata for SimpleOption;
}

unint64_t sub_1000106E8(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7972616D697270;
      break;
    case 2:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 3:
      unint64_t result = 0x65756E69746E6F63;
      break;
    case 4:
      unint64_t result = 0x6F6572657473;
      break;
    case 5:
      unint64_t result = 1869508461;
      break;
    case 6:
      unint64_t result = 0x654C6F6572657473;
      break;
    case 7:
      unint64_t result = 0x69526F6572657473;
      break;
    case 8:
      unint64_t result = 0x6565726761;
      break;
    case 9:
      unint64_t result = 0x65726741746E6F64;
      break;
    case 10:
      unint64_t result = 0x6E456C61756E616DLL;
      break;
    case 11:
      unint64_t result = 0x7361506B61657073;
      break;
    case 12:
      unint64_t result = 0x69466957776F6873;
      break;
    case 13:
      unint64_t result = 0x534449656C707061;
      break;
    case 14:
      unint64_t result = 0x73676E6974746573;
      break;
    case 15:
      unint64_t result = 0x655373656E755469;
      break;
    case 16:
      unint64_t result = 0x776F4E746F6ELL;
      break;
    case 17:
      unint64_t result = 0x754274726F706572;
      break;
    case 18:
      unint64_t result = 0x6F4C6E4F6E727574;
      break;
    case 19:
      unint64_t result = 0x747542636973756DLL;
      break;
    case 20:
      unint64_t result = 0x7542657461647075;
      break;
    case 21:
      unint64_t result = 0xD000000000000014;
      break;
    case 22:
    case 26:
      unint64_t result = 0xD000000000000010;
      break;
    case 23:
      unint64_t result = 0x4D5264756F6C4369;
      break;
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 25:
      unint64_t result = 0x654674726F706572;
      break;
    case 27:
      unint64_t result = 0x7269417472617473;
      break;
    case 28:
      unint64_t result = 0x79536C65636E6163;
      break;
    case 29:
      unint64_t result = 0x69416C65636E6163;
      break;
    case 30:
      unint64_t result = 0x6C65636E6163;
      break;
    case 31:
      unint64_t result = 0x75436C65636E6163;
      break;
    case 32:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100010B40(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000106E8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000106E8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100010BCC()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000106E8(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100010C30()
{
  sub_1000106E8(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100010C84()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000106E8(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100010CE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100010D48();
  *a1 = result;
  return result;
}

unint64_t sub_100010D14@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000106E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100010D40()
{
  return sub_1000106E8(*v0);
}

uint64_t sub_100010D48()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x21) {
    return 33;
  }
  else {
    return v0;
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for HomePodSetupStepAction(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HomePodSetupStepAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE0) {
    goto LABEL_17;
  }
  if (a2 + 32 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 32) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 32;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x21;
  int v8 = v6 - 33;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomePodSetupStepAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 32 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 32) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDF)
  {
    unsigned int v6 = ((a2 - 224) >> 8) + 1;
    *unint64_t result = a2 + 32;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100010F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 32;
        break;
    }
  }
  return result;
}

uint64_t sub_100010F30(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100010F3C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupStepAction()
{
  return &type metadata for HomePodSetupStepAction;
}

unint64_t sub_100010F58()
{
  unint64_t result = qword_1000EDD10;
  if (!qword_1000EDD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDD10);
  }
  return result;
}

uint64_t sub_100010FAC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EDD18);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EDD18);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100011074(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  int v3 = &v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel];
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0xE000000000000000;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_style] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_images] = &_swiftEmptyArrayStorage;
  unsigned int v6 = &v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_estimatedSecondsText];
  strcpy(&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_estimatedSecondsText], "Estimating...");
  *((_WORD *)v6 + 7) = -4864;
  *(_DWORD *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_currentProgress] = -1082130432;
  id v7 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupProgressBarView());
  int v8 = v1;
  id v9 = [v7 initWithCardStyle:0];
  *(void *)&v8[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView] = v9;
  id v10 = v9;
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for HomePodSetupFileTransferViewController();
  id v11 = v10;
  id v12 = [super initWithContentView:v11];

  return v12;
}

void sub_100011248()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (void *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (char *)v31 - v10;
  id v12 = (objc_class *)type metadata accessor for HomePodSetupFileTransferViewController();
  v35.receiver = v1;
  v35.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED700 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EDD18);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupFileTransferViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000134A0((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000ED700 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EDD18);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    long long v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v34 = v32;
      *(_DWORD *)uint64_t v21 = 136315138;
      v31[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_100048718(v23, v22, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100013508((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupFileTransferViewController: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100013508((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    sub_100011C14((uint64_t)v11);
    uint64_t v24 = *(void *)&v11[v5[10]];
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000932E0(v24, (uint64_t)sub_1000135A0, v25);
    swift_release();
    if (v11[v5[39]] == 1)
    {
      sub_1000117B4();
    }
    else if ((v11[v5[18]] & 2) == 0 && *(void *)&v11[v5[19] + 8])
    {
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v1 dismissalConfirmationActionWithTitle:v26 message:v27 confirmButtonTitle:v28 cancelButtonTitle:v29];

      [v1 setDismissButtonAction:v30];
    }
    sub_100013508((uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
  }
}

void sub_1000117B4()
{
  uint64_t v1 = self;
  BOOL v2 = [v1 sysDropBuildMode] == 2
    || [v1 sysDropBuildMode] == 3;
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  id v4 = v0;
  NSString v5 = String._bridgeToObjectiveC()();
  v8[4] = sub_1000135E0;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100041068;
  v8[3] = &unk_1000DAFD8;
  uint64_t v6 = _Block_copy(v8);
  id v7 = [self actionWithTitle:v5 style:0 handler:v6];

  _Block_release(v6);
  swift_release();
  [v4 setDismissButtonAction:v7];
}

void sub_100011960(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED700 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EDD18);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    NSString v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)NSString v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)id v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupFileTransferViewController: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

void sub_100011C14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AdjustedImage(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  NSString v11 = String._bridgeToObjectiveC()();
  [v2 setTitle:v11];

  NSString v12 = String._bridgeToObjectiveC()();
  [v2 setSubtitle:v12];

  uint64_t v13 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  sub_100012464(*(void *)(a1 + v13[7]), *(void *)(a1 + v13[7] + 8));
  sub_10001259C(*(float *)(a1 + v13[40]));
  uint64_t v14 = v13[11];
  unint64_t v15 = *(void *)(a1 + v14);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if (qword_1000ED700 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000133A0(v16, (uint64_t)qword_1000EDD18);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      long long v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupIconContent: iconImages used", v19, 2u);
      swift_slowDealloc();
    }

    sub_1000120FC(*(void *)(a1 + v14));
    goto LABEL_16;
  }
  sub_10000FD94(a1 + v13[27], (uint64_t)v6, &qword_1000EE040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000F674((uint64_t)v6, &qword_1000EE040);
  }
  else
  {
    sub_1000134A0((uint64_t)v6, (uint64_t)v10, type metadata accessor for AdjustedImage);
    if (qword_1000ED700 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1000133A0(v21, (uint64_t)qword_1000EDD18);
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "HomePodSetupIconContent: iconImages empty, prodImage used", v24, 2u);
      swift_slowDealloc();
    }

    id v25 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v10];
    sub_100083920((uint64_t)v10 + *(int *)(v7 + 20));
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    NSString v26 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView];
    sub_10000EE48(&qword_1000EF140);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1000B0690;
    *(void *)(v27 + 32) = v25;
    uint64_t v33 = v27;
    specialized Array._endMutation()();
    unint64_t v28 = *(void *)&v26[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
    *(void *)&v26[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = v33;
    NSString v29 = v26;
    id v30 = v25;
    sub_10008F630(v28);

    swift_bridgeObjectRelease();
    sub_100013508((uint64_t)v10, type metadata accessor for AdjustedImage);
  }
LABEL_16:
  [v2 setDismissalType:*(void *)(a1 + v13[18])];
  if (*(unsigned char *)(a1 + v13[38]) == 1)
  {
    NSString v31 = String._bridgeToObjectiveC()();
    [v2 showActivityIndicatorWithStatus:v31];
  }
}

id sub_1000120FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_images;
  unint64_t v8 = swift_bridgeObjectRetain();
  unsigned __int8 v9 = sub_1000934AC(v8, a1);
  id result = (id)swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    *(void *)&v2[v7] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id result = [v2 isViewLoaded];
    if (result)
    {
      unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
      unint64_t v11 = *(void *)&v2[v7];
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain_n();
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v12 = (uint64_t)result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id result = (id)swift_bridgeObjectRetain_n();
        if (v12)
        {
LABEL_5:
          if (v12 < 1)
          {
            __break(1u);
            return result;
          }
          unint64_t v26 = v11 & 0xC000000000000001;
          uint64_t v27 = &v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel];
          uint64_t v28 = OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_style;
          swift_beginAccess();
          uint64_t v13 = 0;
          do
          {
            if (v26) {
              id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v14 = *(id *)(v11 + 8 * v13 + 32);
            }
            unint64_t v15 = v14;
            id v16 = [objc_allocWithZone((Class)PRXImageView) initWithStyle:*(void *)&v2[v28]];
            [v16 setImage:v15];
            [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
            sub_10000FD94((uint64_t)v27, (uint64_t)v6, &qword_1000EF130);
            uint64_t v17 = type metadata accessor for HomePodSetupViewModel(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1, v17))
            {
              sub_10000F674((uint64_t)v6, &qword_1000EF130);
            }
            else
            {
              os_log_type_t v18 = &v6[*(int *)(v17 + 124)];
              uint64_t v19 = *(void *)v18;
              char v20 = v18[8];
              sub_10000F674((uint64_t)v6, &qword_1000EF130);
              if ((v20 & 1) == 0) {
                [v16 setContentMode:v19];
              }
            }
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            ++v13;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          while (v12 != v13);
          swift_bridgeObjectRelease_n();
          uint64_t v21 = (void *)v29;
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_20:
      unint64_t v22 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView];
      unint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
      *(void *)&v22[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = v21;
      uint64_t v24 = v22;
      swift_bridgeObjectRetain();
      sub_10008F630(v23);
      swift_bridgeObjectRelease();

      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_100012464(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText);
  BOOL v6 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText) == a1
    && *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText + 8) == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    *uint64_t v5 = a1;
    v5[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v7 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:1];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setText:v8];

    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = *(id *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView);
    id v9 = v7;
    sub_10008F840(v7);
  }
}

void sub_10001259C(float a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED700 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EDD18);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v7 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupFileTransferViewController: setting progress view to %f", v7, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v9 = OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView;
  if (!*(void *)(*(void *)(v2
                              + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView)
                  + OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView))
  {
    id v10 = [objc_allocWithZone((Class)UIProgressView) initWithProgressViewStyle:0];
    [v10 setProgress:0 animated:0.0];
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = *(id *)(v2 + v9);
    id v12 = v10;
    sub_10008F82C(v10);
  }
  BOOL v13 = (LODWORD(a1) & 0x7FFFFF) != 0 && (~LODWORD(a1) & 0x7F800000) == 0;
  if (!v13 && a1 >= 0.0)
  {
    if (*(float *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_currentProgress) == a1)
    {
      id v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        id v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupFileTransferViewController: progresses are the same, not updating progress view", v16, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      *(float *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_currentProgress) = a1;
      uint64_t v17 = *(void **)(*(void *)(v2 + v9) + OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView);
      if (v17)
      {
        *(float *)&double v8 = a1;
        [v17 setProgress:1 animated:v8];
      }
    }
  }
}

id sub_10001282C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupFileTransferViewController();
  return [super dealloc];
}

uint64_t sub_100012900()
{
  return type metadata accessor for HomePodSetupFileTransferViewController();
}

uint64_t type metadata accessor for HomePodSetupFileTransferViewController()
{
  uint64_t result = qword_1000EDD60;
  if (!qword_1000EDD60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100012954()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100012A34()
{
  if (!qword_1000EDD70)
  {
    type metadata accessor for HomePodSetupViewModel(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000EDD70);
    }
  }
}

uint64_t sub_100012A8C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_100012AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100012AE0(uint64_t a1, char a2, void *a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = sub_100007334(v5);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:1];

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  id v14 = a3;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_10001363C;
  uint64_t v39 = v13;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100041068;
  char v37 = &unk_1000DB028;
  id v16 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v17 = self;
  id v18 = [v17 actionWithTitle:v15 style:0 handler:v16];
  _Block_release(v16);

  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v14;
  id v22 = v14;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_100013644;
  uint64_t v39 = v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100041068;
  char v37 = &unk_1000DB078;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = [v17 actionWithTitle:v23 style:0 handler:v24];
  _Block_release(v24);

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = sub_100007334(v26);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v33;
  id v29 = v33;
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_10001364C;
  uint64_t v39 = v28;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100041068;
  char v37 = &unk_1000DB0C8;
  NSString v31 = _Block_copy(&aBlock);
  swift_release();
  id v32 = [v17 actionWithTitle:v30 style:1 handler:v31];
  _Block_release(v31);

  [v29 addAction:v18];
  if ((a2 & 1) == 0) {
    [v29 addAction:v25];
  }
  [v29 addAction:v32, v33];
  [v29 setPreferredAction:v18];
  [v22 presentViewController:v29 animated:1 completion:0];
}

uint64_t sub_100013014()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 31;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1000130B0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 32;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

void sub_10001314C(uint64_t a1)
{
  uint64_t v3 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v3 - 8);
  NSString v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED700 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EDD18);
  NSString v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    NSString v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupFileTransferViewController: presenter:didUpdate viewModel", v9, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v5);
  uint64_t v10 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  uint64_t v11 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v5, v11, &qword_1000EF130);
  swift_endAccess();
  if ([v1 isViewLoaded])
  {
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "HomePodSetupFileTransferViewController: configureUI", v14, 2u);
      swift_slowDealloc();
    }

    sub_100011C14(a1);
  }
}

uint64_t sub_1000133A0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000133D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10001343C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1000134A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100013508(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100013568()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000135A0(char *a1)
{
}

uint64_t sub_1000135A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000135E0(uint64_t a1)
{
  sub_100012AE0(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000135EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000135FC()
{
  return swift_release();
}

uint64_t sub_100013604()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001363C()
{
  return sub_100013014();
}

uint64_t sub_100013644()
{
  return sub_1000130B0();
}

id sub_10001364C()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_100013664(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000EE48(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000136C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001371C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100013764()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EDD78);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EDD78);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_10001382C()
{
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v10, "serialNumber=");
  HIWORD(v10._object) = -4864;
  swift_bridgeObjectRetain();
  v0._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  strcpy((char *)&v10, "modelNum=");
  WORD1(v10._object) = 0;
  HIDWORD(v10._object) = -385875968;
  swift_bridgeObjectRetain();
  v2._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 32;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRetain();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v10, "wifiAddress=");
  HIWORD(v10._object) = -5120;
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v10, "featureFlags=");
  HIWORD(v10._object) = -4864;
  v6._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRetain();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = 62;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return 0xD00000000000001DLL;
}

uint64_t sub_100013B1C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    sub_1000150E4();
    uint64_t v10 = static OS_dispatch_queue.main.getter();
    uint64_t v13 = v4;
    uint64_t v11 = (void *)v10;
    aBlock[4] = sub_100015124;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100089B18;
    aBlock[3] = &unk_1000DB1C8;
    id v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10001512C();
    sub_10000EE48(&qword_1000EDEA0);
    sub_100015184();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  }
  return result;
}

id sub_100013DB8(uint64_t a1)
{
  id result = [*(id *)(a1 + 72) preAuthResponse];
  if (result)
  {
    Swift::String v3 = result;
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v5 = sub_100013EF4(v4);
    id result = (id)swift_bridgeObjectRelease();
    if (v5)
    {
      sub_100014800(v5, &v13);
      long long v6 = v14;
      uint64_t v7 = v15;
      long long v8 = v16;
      uint64_t v9 = v17;
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v13;
      *(_OWORD *)(a1 + 24) = v6;
      *(void *)(a1 + 40) = v7;
      *(_OWORD *)(a1 + 48) = v8;
      *(void *)(a1 + 64) = v9;
      sub_100015228((uint64_t)&v13);
      sub_100015274(v10, v11);
      *(unsigned char *)(a1 + 80) = 1;
      id v12 = *(void (**)(uint64_t *))(a1 + 88);
      swift_retain();
      v12(&v13);
      swift_release();
      return (id)sub_1000152C4((uint64_t)&v13);
    }
  }
  return result;
}

unint64_t sub_100013EF4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000EE48(&qword_1000ED9B8);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v23 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v12 = v7;
    }
    else
    {
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v22)
      {
LABEL_33:
        sub_10001536C();
        return (unint64_t)v2;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v7 + 1;
      if (!v14)
      {
        int64_t v12 = v7 + 2;
        if (v7 + 2 >= v22) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 3;
          if (v7 + 3 >= v22) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v7 + 4;
            if (v7 + 4 >= v22) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v22) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_38;
                  }
                  if (v12 >= v22) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_100015310(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_10000F578(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_100015310((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_10000F674((uint64_t)v30, &qword_1000EDEA8);
      swift_bridgeObjectRelease();
      sub_10001536C();
      swift_release();
      return 0;
    }
    sub_10000F578((uint64_t)v31 + 8, (uint64_t)v25);
    sub_10000F674((uint64_t)v30, &qword_1000EDEA8);
    sub_10000F464(v25, v26);
    long long v27 = v24;
    sub_10000F464(v26, v28);
    long long v16 = v27;
    sub_10000F464(v28, v29);
    sub_10000F464(v29, &v27);
    unint64_t result = sub_100055184(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      long long v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *long long v8 = v16;
      uint64_t v9 = (_OWORD *)(v2[7] + 32 * v17);
      sub_10000E470((uint64_t)v9);
      unint64_t result = (unint64_t)sub_10000F464(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_10000F464(&v27, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_36;
    }
    _OWORD v2[2] = v21;
LABEL_8:
    int64_t v7 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1000142C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1000ED708 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EDD78);
  swift_retain_n();
  int64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    uint64_t v22 = a2;
    id v24 = *(id *)(v3 + 72);
    id v11 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v24;
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupPreAuth: preAuth requested for session: %@", v9, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a2;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(v3 + 24);
  if (!v12) {
    goto LABEL_9;
  }
  int64_t v13 = *(void **)(v3 + 16);
  uint64_t v14 = *(void *)(v3 + 32);
  uint64_t v15 = *(void *)(v3 + 40);
  uint64_t v16 = *(void *)(v3 + 48);
  uint64_t v17 = *(void *)(v3 + 56);
  uint64_t v18 = *(void *)(v3 + 64);
  id v24 = v13;
  uint64_t v25 = v12;
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  uint64_t v28 = v16;
  uint64_t v29 = v17;
  uint64_t v30 = v18;
  if (*(unsigned char *)(v3 + 80) == 1)
  {
    uint64_t v19 = (unsigned __int8 *)(v3 + 80);
    uint64_t v23 = *(void (**)(id *))(v3 + 88);
    sub_100015374((uint64_t)v13, v12);
    swift_retain();
    v23(&v24);
    sub_100015274((uint64_t)v13, v12);
    swift_release();
  }
  else
  {
LABEL_9:
    BOOL v20 = *(void **)(v3 + 72);
    [v20 setPauseAfterPreAuth:1 v22, v24, v25, v26, v27, v28, v29, v30];
    [v20 activate];
    uint64_t v19 = (unsigned __int8 *)(v3 + 80);
  }
  return *v19;
}

uint64_t sub_100014570()
{
  sub_100015274(*(void *)(v0 + 16), *(void *)(v0 + 24));

  swift_release();

  return _swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for HomePodSetupPreAuthFetcher()
{
  return self;
}

void *initializeWithCopy for HomePodSetupPreAuthResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HomePodSetupPreAuthResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for HomePodSetupPreAuthResponse(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for HomePodSetupPreAuthResponse(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePodSetupPreAuthResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupPreAuthResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupPreAuthResponse()
{
  return &type metadata for HomePodSetupPreAuthResponse;
}

void sub_100014800(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_100055184(7238500, 0xE300000000000000), (v5 & 1) != 0)
    && (sub_10000F578(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v55), swift_dynamicCast()))
  {
    unint64_t v6 = v53;
    uint64_t v51 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v7
    && (unint64_t v8 = sub_100055184(5137517, 0xE300000000000000), (v9 & 1) != 0)
    && (sub_10000F578(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v55), swift_dynamicCast()))
  {
    unint64_t v10 = v53;
    uint64_t v50 = v52;
  }
  else
  {
    uint64_t v50 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v11
    && (unint64_t v12 = sub_100055184(0x414D69666977, 0xE600000000000000), (v13 & 1) != 0)
    && (sub_10000F578(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v55), swift_dynamicCast()))
  {
    uint64_t v15 = v52;
    unint64_t v14 = v53;
    if (!*(void *)(a1 + 16))
    {
LABEL_15:
      long long v55 = 0u;
      long long v56 = 0u;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v14 = 0xE000000000000000;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_100055184(26214, 0xE200000000000000);
  if (v17)
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  if (*((void *)&v56 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v18 = v52;
      goto LABEL_25;
    }
  }
  else
  {
    sub_10000F674((uint64_t)&v55, &qword_1000EE410);
  }
  uint64_t v18 = 0;
LABEL_25:
  uint64_t v19 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v19 = v51 & 0xFFFFFFFFFFFFLL;
  }
  if (!v19)
  {
    if (qword_1000ED708 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000133A0(v20, (uint64_t)qword_1000EDD78);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "HomePodSetupPreAuthFetcher: No serial number returned from PreAuthorization call.", v23, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v24 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v24 = v50 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    if (qword_1000ED708 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000133A0(v25, (uint64_t)qword_1000EDD78);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "HomePodSetupPreAuthFetcher: No model number returned from PreAuthorization call.", v28, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v29 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v29 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    if (v18) {
      goto LABEL_56;
    }
    goto LABEL_51;
  }
  if (qword_1000ED708 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_1000133A0(v30, (uint64_t)qword_1000EDD78);
  NSString v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "HomePodSetupPreAuthFetcher: No model WiFi MAC address returned from PreAuthorization call.", v33, 2u);
    swift_slowDealloc();
  }

  if (!v18)
  {
LABEL_51:
    if (qword_1000ED708 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_1000133A0(v34, (uint64_t)qword_1000EDD78);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      char v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "HomePodSetupPreAuthFetcher: No featureFlags returned from PreAuthorization call.", v37, 2u);
      swift_slowDealloc();
    }
  }
LABEL_56:
  *(void *)&long long v55 = v51;
  *((void *)&v55 + 1) = v6;
  *(void *)&long long v56 = v50;
  *((void *)&v56 + 1) = v10;
  uint64_t v49 = v15;
  uint64_t v57 = v15;
  unint64_t v58 = v14;
  uint64_t v59 = v18;
  unint64_t v38 = sub_10001382C();
  unint64_t v39 = v14;
  uint64_t v40 = v38;
  unint64_t v42 = v41;
  unint64_t v48 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1000ED708 != -1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for Logger();
  sub_1000133A0(v43, (uint64_t)qword_1000EDD78);
  swift_bridgeObjectRetain();
  long long v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v47 = a2;
    long long v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)long long v46 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_100048718(v40, v42, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "HomePodSetupPreAuthFetcher: results=%s", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v47;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v51;
  a2[1] = v6;
  a2[2] = v50;
  a2[3] = v10;
  a2[4] = v49;
  a2[5] = v48;
  a2[6] = v18;
}

uint64_t sub_100014F78(void *a1)
{
  *(unsigned char *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = a1;
  *(void *)(v1 + 88) = nullsub_1;
  *(void *)(v1 + 96) = 0;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  v7[4] = sub_1000150C4;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100089B18;
  v7[3] = &unk_1000DB1A0;
  unint64_t v4 = _Block_copy(v7);
  id v5 = a1;
  swift_release();
  [v5 setPreAuthHandler:v4];
  _Block_release(v4);
  return v1;
}

uint64_t sub_10001508C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000150C4()
{
  return sub_100013B1C();
}

uint64_t sub_1000150CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000150DC()
{
  return swift_release();
}

unint64_t sub_1000150E4()
{
  unint64_t result = qword_1000EDE98;
  if (!qword_1000EDE98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EDE98);
  }
  return result;
}

id sub_100015124()
{
  return sub_100013DB8(v0);
}

unint64_t sub_10001512C()
{
  unint64_t result = qword_1000EFF40;
  if (!qword_1000EFF40)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EFF40);
  }
  return result;
}

unint64_t sub_100015184()
{
  unint64_t result = qword_1000EFF50;
  if (!qword_1000EFF50)
  {
    sub_1000151E0(&qword_1000EDEA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EFF50);
  }
  return result;
}

uint64_t sub_1000151E0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100015228(uint64_t a1)
{
  return a1;
}

uint64_t sub_100015274(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000152C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100015310(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001536C()
{
  return swift_release();
}

uint64_t sub_100015374(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000153CC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EDEB8);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EDEB8);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100015494()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___moreInfoButton;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___moreInfoButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___moreInfoButton);
  }
  else
  {
    id v4 = [self buttonWithType:1];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100015514()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___disclaimerLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___disclaimerLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___disclaimerLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:3];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10001558C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = __chkstk_darwin(v5);
  char v9 = (uint64_t *)((char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v90 - v10;
  unint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupDisclaimerViewController();
  v95.receiver = v1;
  v95.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED710 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EDEB8);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    v92 = v11;
    if (v21)
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 136315138;
      v91 = v5;
      uint64_t v23 = *v9;
      unint64_t v24 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_100048718(v23, v24, &v94);
      id v5 = v91;
      uint64_t v11 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupDisclaimer: viewDidLoad with title %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    NSString v25 = String._bridgeToObjectiveC()();
    [v1 setTitle:v25];

    NSString v26 = String._bridgeToObjectiveC()();
    [v1 setSubtitle:v26];

    id v27 = sub_100015514();
    NSString v28 = String._bridgeToObjectiveC()();
    [v27 setText:v28];

    uint64_t v29 = v5[18];
    [v1 setDismissalType:*(void *)&v11[v29]];
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1000932E0(v31, (uint64_t)sub_100017188, v30);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v11[v29] & 2) == 0 && *(void *)&v11[v5[19] + 8])
    {
      NSString v32 = String._bridgeToObjectiveC()();
      NSString v33 = String._bridgeToObjectiveC()();
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = String._bridgeToObjectiveC()();
      id v36 = [v1 dismissalConfirmationActionWithTitle:v32 message:v33 confirmButtonTitle:v34 cancelButtonTitle:v35];

      [v1 setDismissButtonAction:v36];
    }
    id v37 = sub_100015494();
    [v37 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v38 = sub_100015494();
    if (*(void *)&v11[v5[23] + 8])
    {
      swift_bridgeObjectRetain();
      NSString v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v39 = 0;
    }
    [v38 setTitle:v39 forState:0];

    id v40 = sub_100015494();
    [v40 addTarget:v1 action:"moreInfoButtonTapped:" forControlEvents:0x2000];

    id v41 = sub_100015494();
    id v42 = [v41 titleLabel];

    if (v42)
    {
      id v43 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote];
      id v44 = [v43 fontDescriptorWithSymbolicTraits:2];

      if (!v44)
      {
        __break(1u);
        return;
      }
      id v45 = v44;
      [v45 pointSize];
      id v47 = [self fontWithDescriptor:v45 size:v46];

      [v42 setFont:v47];
      [v42 setAdjustsFontForContentSizeCategory:1];
      [v42 setNumberOfLines:0];
    }
    id v48 = [v1 contentView];
    id v49 = sub_100015494();
    [v48 addSubview:v49];

    id v50 = sub_100015514();
    [v50 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v51 = [v1 contentView];
    id v52 = sub_100015514();
    [v51 addSubview:v52];

    id v53 = [v1 contentView];
    id v54 = [v53 mainContentGuide];

    v91 = (int *)self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1000B07A0;
    id v56 = sub_100015514();
    id v57 = [v56 topAnchor];

    id v58 = [v54 topAnchor];
    id v59 = [v57 constraintEqualToAnchor:v58];

    *(void *)(v55 + 32) = v59;
    id v60 = sub_100015514();
    id v61 = [v60 leadingAnchor];

    id v62 = [v54 leadingAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    *(void *)(v55 + 40) = v63;
    id v64 = sub_100015514();
    id v65 = [v64 trailingAnchor];

    id v66 = [v54 trailingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v55 + 48) = v67;
    id v68 = sub_100015494();
    id v69 = [v68 topAnchor];

    id v70 = sub_100015514();
    id v71 = [v70 bottomAnchor];

    id v72 = [v69 constraintEqualToAnchor:v71 constant:8.0];
    *(void *)(v55 + 56) = v72;
    id v73 = sub_100015494();
    id v74 = [v73 leadingAnchor];

    id v75 = [v54 leadingAnchor];
    id v76 = [v74 constraintGreaterThanOrEqualToAnchor:v75];

    *(void *)(v55 + 64) = v76;
    id v77 = sub_100015494();
    id v78 = [v77 trailingAnchor];

    id v79 = [v54 trailingAnchor];
    id v80 = [v78 constraintLessThanOrEqualToAnchor:v79];

    *(void *)(v55 + 72) = v80;
    id v81 = sub_100015494();
    id v82 = [v81 centerXAnchor];

    id v83 = [v54 centerXAnchor];
    id v84 = [v82 constraintEqualToAnchor:v83];

    *(void *)(v55 + 80) = v84;
    id v85 = sub_100015494();
    id v86 = [v85 bottomAnchor];

    id v87 = [v54 bottomAnchor];
    id v88 = [v86 constraintEqualToAnchor:v87];

    *(void *)(v55 + 88) = v88;
    uint64_t v94 = v55;
    specialized Array._endMutation()();
    sub_100017190();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v91 activateConstraints:isa];

    sub_10001712C((uint64_t)v92);
    return;
  }
  sub_100017068((uint64_t)v4);
  if (qword_1000ED710 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000133A0(v14, (uint64_t)qword_1000EDEB8);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    char v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupDisclaimer: viewDidLoad failed because viewModel not set.", v17, 2u);
    swift_slowDealloc();
  }
}

void sub_100016180(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED710 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EDEB8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)uint64_t v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupDisclaimer: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

void sub_10001647C()
{
  if (qword_1000ED710 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EDEB8);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "HomePodSetupDisclaimer: termsManager loaded handler was called", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100016564(char a1)
{
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  if (a1) {
    char v1 = 8;
  }
  else {
    char v1 = 9;
  }
  memset(&v12[8], 0, 40);
  v12[0] = v1;
  sub_100013664((uint64_t)v13, (uint64_t)&v12[8], &qword_1000ED970);
  v15[0] = *(_OWORD *)v12;
  v15[1] = *(_OWORD *)&v12[16];
  _OWORD v15[2] = *(_OWORD *)&v12[32];
  if (qword_1000ED710 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EDEB8);
  sub_100016FA4((char *)v15, (uint64_t)v12);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v13[0] = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    unint64_t v6 = sub_10000CD54();
    sub_100048718(v6, v7, (uint64_t *)v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000136C8((uint64_t)v12);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupDisclaimer: termsManager completion handler was called so selecting the %s button.", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000136C8((uint64_t)v12);
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      sub_10007A7CC(v15);
      swift_unknownObjectRelease();
    }
  }
  return sub_1000136C8((uint64_t)v15);
}

id sub_100016808(uint64_t a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setTitle:v3];

  NSString v4 = String._bridgeToObjectiveC()();
  [v1 setSubtitle:v4];

  id v5 = sub_100015514();
  uint64_t v6 = type metadata accessor for HomePodSetupViewModel(0);
  NSString v7 = String._bridgeToObjectiveC()();
  [v5 setText:v7];

  uint64_t v8 = *(void *)(a1 + *(int *)(v6 + 72));

  return [v1 setDismissalType:v8];
}

id sub_1000169C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupDisclaimerViewController();
  return [super dealloc];
}

uint64_t sub_100016A7C()
{
  return type metadata accessor for HomePodSetupDisclaimerViewController();
}

uint64_t type metadata accessor for HomePodSetupDisclaimerViewController()
{
  uint64_t result = qword_1000EDF10;
  if (!qword_1000EDF10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100016AD0()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100016B78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_100016BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100016D6C(a3);
}

void sub_100016BCC()
{
  id v1 = [objc_allocWithZone((Class)SFTermsAndConditionsManager) initWithPresenter:v0 showWarranty:1];
  uint64_t v10 = sub_10001647C;
  uint64_t v11 = 0;
  uint64_t v6 = _NSConcreteStackBlock;
  uint64_t v7 = 1107296256;
  uint64_t v8 = sub_100089B18;
  char v9 = &unk_1000DB218;
  uint64_t v2 = _Block_copy(&v6);
  [v1 setLoadedHandler:v2];
  _Block_release(v2);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = sub_100016F9C;
  uint64_t v11 = v3;
  uint64_t v6 = _NSConcreteStackBlock;
  uint64_t v7 = 1107296256;
  uint64_t v8 = sub_10009A4B8;
  char v9 = &unk_1000DB268;
  NSString v4 = _Block_copy(&v6);
  swift_release();
  [v1 setCompletionHandler:v4];
  _Block_release(v4);
  [v1 activate];
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_termsManager);
  *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_termsManager) = v1;
}

id sub_100016D6C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED710 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EDEB8);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupDisclaimer: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result) {
    return sub_100016808(a1);
  }
  return result;
}

uint64_t sub_100016F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100016F5C()
{
  return swift_release();
}

uint64_t sub_100016F64()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100016F9C(char a1)
{
  return sub_100016564(a1);
}

uint64_t sub_100016FA4(char *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100017000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017068(uint64_t a1)
{
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000170C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001712C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100017188(char *a1)
{
}

unint64_t sub_100017190()
{
  unint64_t result = qword_1000EF2E0;
  if (!qword_1000EF2E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EF2E0);
  }
  return result;
}

void sub_1000171D8()
{
  qword_1000EDF20 = 0x4044000000000000;
}

void sub_1000171E8()
{
  qword_1000EDF28 = 0x4028000000000000;
}

void sub_1000171F8()
{
  qword_1000EDF30 = 0x4010000000000000;
}

char *sub_100017208(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_feature] = a1;
  id v3 = objc_allocWithZone((Class)PRXImageView);
  uint64_t v4 = v1;
  id v5 = a1;
  id v6 = [v3 initWithStyle:1];
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_iconView] = v6;
  id v7 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:4];
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_titleLabel] = v7;
  id v8 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:5];
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_subTitleLabel] = v8;

  v64.receiver = v4;
  v64.super_class = (Class)type metadata accessor for HomePodSetupFeatureView();
  os_log_type_t v9 = (char *)objc_msgSendSuper2(&v64, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_iconView;
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_iconView];
  uint64_t v12 = v9;
  id v13 = v11;
  id v14 = [v5 icon];
  [v13 setImage:v14];

  uint64_t v15 = OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_titleLabel;
  os_log_type_t v16 = v5;
  id v17 = *(id *)&v12[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_titleLabel];
  NSString v18 = [v5 title];
  if (!v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v18 = String._bridgeToObjectiveC()();
    os_log_type_t v16 = v5;
    swift_bridgeObjectRelease();
  }
  [v17 setText:v18];

  uint64_t v19 = OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_subTitleLabel;
  id v20 = *(id *)&v12[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_subTitleLabel];
  id v63 = v16;
  NSString v21 = [v16 detailText];
  if (!v21)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v20 setText:v21];

  os_log_type_t v22 = *(void **)&v12[v15];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v23 = *(void **)&v12[v19];
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v24 = *(void **)&v9[v10];
  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 addSubview:v24];
  [v12 addSubview:v22];
  [v12 addSubview:v23];
  id v62 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000B0820;
  id v26 = [v24 topAnchor];
  id v27 = [v12 topAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v25 + 32) = v28;
  id v29 = [*(id *)&v9[v10] leadingAnchor];
  id v30 = [v12 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v25 + 40) = v31;
  id v32 = [*(id *)&v9[v10] bottomAnchor];
  id v33 = [v12 bottomAnchor];
  id v34 = [v32 constraintLessThanOrEqualToAnchor:v33];

  *(void *)(v25 + 48) = v34;
  id v35 = [*(id *)&v9[v10] heightAnchor];
  if (qword_1000ED718 != -1) {
    swift_once();
  }
  id v36 = [v35 constraintEqualToConstant:*(double *)&qword_1000EDF20];

  *(void *)(v25 + 56) = v36;
  id v37 = [*(id *)&v9[v10] widthAnchor];
  id v38 = [v37 constraintEqualToConstant:*(double *)&qword_1000EDF20];

  *(void *)(v25 + 64) = v38;
  id v39 = [*(id *)&v12[v15] topAnchor];
  id v40 = [v12 topAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  *(void *)(v25 + 72) = v41;
  id v42 = [*(id *)&v12[v15] leadingAnchor];
  id v43 = [*(id *)&v9[v10] trailingAnchor];
  if (qword_1000ED720 != -1) {
    swift_once();
  }
  id v44 = [v42 constraintEqualToAnchor:v43 constant:*(double *)&qword_1000EDF28];

  *(void *)(v25 + 80) = v44;
  id v45 = [*(id *)&v12[v15] trailingAnchor];
  id v46 = [v12 trailingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  *(void *)(v25 + 88) = v47;
  id v48 = [*(id *)&v12[v19] topAnchor];
  id v49 = [*(id *)&v12[v15] bottomAnchor];
  if (qword_1000ED728 != -1) {
    swift_once();
  }
  id v50 = [v48 constraintEqualToAnchor:v49 constant:*(double *)&qword_1000EDF30];

  *(void *)(v25 + 96) = v50;
  id v51 = [*(id *)&v12[v19] leadingAnchor];
  id v52 = [*(id *)&v12[v15] leadingAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v25 + 104) = v53;
  id v54 = [*(id *)&v12[v19] trailingAnchor];
  id v55 = [*(id *)&v12[v15] trailingAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55];

  *(void *)(v25 + 112) = v56;
  id v57 = [*(id *)&v12[v19] bottomAnchor];
  id v58 = [v12 bottomAnchor];
  id v59 = [v57 constraintLessThanOrEqualToAnchor:v58];

  *(void *)(v25 + 120) = v59;
  specialized Array._endMutation()();
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v62 activateConstraints:isa];

  return v12;
}

id sub_100017A98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupFeatureView();
  return [super dealloc];
}

uint64_t type metadata accessor for HomePodSetupFeatureView()
{
  return self;
}

void **sub_100017B5C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    id v7 = (char *)a1 + v6;
    id v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    if (v11(v8, 1, v9))
    {
      uint64_t v13 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_100017CDC(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    id v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void **sub_100017DAC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  id v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  id v11 = v4;
  if (v10(v7, 1, v8))
  {
    uint64_t v12 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void **sub_100017ECC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  id v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

void *sub_100018058(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **sub_10001816C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1000182F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100018308);
}

uint64_t sub_100018308(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000EE48(&qword_1000EDF98);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000183BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000183D0);
}

void *sub_1000183D0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000EE48(&qword_1000EDF98);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AdjustedImage(uint64_t a1)
{
  return sub_10001CFD4(a1, (uint64_t *)&unk_1000EDFF8);
}

void sub_10001849C()
{
  sub_10001D22C(319, (unint64_t *)&unk_1000EE008, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_100018554(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = (int *)type metadata accessor for AdjustedMovie(0);
    uint64_t v158 = *((void *)v12 - 1);
    int v13 = *(unsigned int (**)(void *, uint64_t, int *))(v158 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v11, 1, v12))
    {
      uint64_t v14 = sub_10000EE48(&qword_1000EE038);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v16;
      uint64_t v17 = v12[5];
      v154 = (char *)v11 + v17;
      v156 = (char *)v10 + v17;
      uint64_t v18 = type metadata accessor for URL();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v156, v154, v18);
      *(void *)((char *)v10 + v12[6]) = *(void *)((char *)v11 + v12[6]);
      *(void *)((char *)v10 + v12[7]) = *(void *)((char *)v11 + v12[7]);
      *(void *)((char *)v10 + v12[8]) = *(void *)((char *)v11 + v12[8]);
      (*(void (**)(void *, void, uint64_t, int *))(v158 + 56))(v10, 0, 1, v12);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    os_log_type_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)v4 + v21);
    id v26 = (void *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[9];
    uint64_t v29 = a3[10];
    id v30 = (void *)((char *)v4 + v28);
    id v31 = (void *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    *id v30 = *v31;
    v30[1] = v32;
    *(void *)((char *)v4 + v29) = *(void *)((char *)a2 + v29);
    uint64_t v33 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *(void *)((char *)v4 + v33) = *(void *)((char *)a2 + v33);
    uint64_t v34 = a3[13];
    v159 = (char *)v4 + v34;
    id v35 = (char *)a2 + v34;
    uint64_t v36 = *(void *)((char *)a2 + v34 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36)
    {
      uint64_t v37 = *((void *)v35 + 4);
      *((void *)v159 + 3) = v36;
      *((void *)v159 + 4) = v37;
      (**(void (***)(void))(v36 - 8))();
    }
    else
    {
      long long v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v159 = *(_OWORD *)v35;
      *((_OWORD *)v159 + 1) = v38;
      *((void *)v159 + 4) = *((void *)v35 + 4);
    }
    uint64_t v39 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v39) = *(void *)((char *)a2 + v39);
    uint64_t v40 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    id v41 = (char *)v4 + v40;
    id v42 = (char *)a2 + v40;
    *(_DWORD *)id v41 = *(_DWORD *)v42;
    uint64_t v43 = a3[18];
    uint64_t v44 = a3[19];
    uint64_t v45 = *(void *)((char *)a2 + v43);
    v41[4] = v42[4];
    *(void *)((char *)v4 + v43) = v45;
    id v46 = (void *)((char *)v4 + v44);
    id v47 = (void *)((char *)a2 + v44);
    uint64_t v48 = *(void *)((char *)a2 + v44 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48)
    {
      *id v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v47[3];
      v46[2] = v47[2];
      v46[3] = v49;
      uint64_t v50 = v47[5];
      v46[4] = v47[4];
      v46[5] = v50;
      uint64_t v51 = v47[7];
      v46[6] = v47[6];
      v46[7] = v51;
      uint64_t v52 = v47[8];
      uint64_t v53 = v47[9];
      v46[8] = v52;
      v46[9] = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v54 = *((_OWORD *)v47 + 3);
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
      *((_OWORD *)v46 + 3) = v54;
      *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
      long long v55 = *((_OWORD *)v47 + 1);
      *(_OWORD *)id v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v55;
    }
    uint64_t v56 = a3[20];
    id v57 = (void *)((char *)v4 + v56);
    id v58 = (void *)((char *)a2 + v56);
    uint64_t v59 = v58[1];
    if (v59)
    {
      void *v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v58[3];
      v57[2] = v58[2];
      v57[3] = v60;
      uint64_t v61 = v58[5];
      v57[4] = v58[4];
      v57[5] = v61;
      uint64_t v62 = v58[7];
      v57[6] = v58[6];
      v57[7] = v62;
      uint64_t v63 = v58[9];
      v57[8] = v58[8];
      v57[9] = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v64 = *((_OWORD *)v58 + 3);
      *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
      *((_OWORD *)v57 + 3) = v64;
      *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
      long long v65 = *((_OWORD *)v58 + 1);
      *(_OWORD *)id v57 = *(_OWORD *)v58;
      *((_OWORD *)v57 + 1) = v65;
    }
    uint64_t v66 = a3[22];
    *(void *)((char *)v4 + a3[21]) = *(void *)((char *)a2 + a3[21]);
    v157 = *(void **)((char *)a2 + v66);
    *(void *)((char *)v4 + v66) = v157;
    uint64_t v67 = a3[23];
    uint64_t v68 = a3[24];
    id v69 = (void *)((char *)v4 + v67);
    id v70 = (void *)((char *)a2 + v67);
    uint64_t v71 = v70[1];
    void *v69 = *v70;
    v69[1] = v71;
    id v72 = (void *)((char *)v4 + v68);
    id v73 = (void *)((char *)a2 + v68);
    uint64_t v74 = v73[1];
    *id v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = a3[25];
    uint64_t v76 = a3[26];
    id v77 = (void *)((char *)v4 + v75);
    id v78 = (void *)((char *)a2 + v75);
    uint64_t v79 = *v78;
    uint64_t v80 = v78[1];
    LOBYTE(v78) = *((unsigned char *)a2 + v76);
    *id v77 = v79;
    v77[1] = v80;
    *((unsigned char *)v4 + v76) = (_BYTE)v78;
    uint64_t v81 = a3[27];
    __dst = (void **)((char *)v4 + v81);
    id v82 = (void **)((char *)a2 + v81);
    uint64_t v83 = type metadata accessor for AdjustedImage(0);
    uint64_t v151 = *(void *)(v83 - 8);
    id v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
    swift_bridgeObjectRetain();
    id v85 = v157;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v155 = v84;
    uint64_t v160 = v83;
    if (v84((char *)v82, 1, v83))
    {
      uint64_t v86 = sub_10000EE48(&qword_1000EE040);
      memcpy(__dst, v82, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      id v87 = *v82;
      *__dst = *v82;
      uint64_t v88 = *(int *)(v83 + 20);
      v149 = (char *)__dst + v88;
      v89 = (char *)v82 + v88;
      uint64_t v90 = type metadata accessor for URL();
      uint64_t v91 = *(void *)(v90 - 8);
      v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
      id v93 = v87;
      if (v92(v89, 1, v90))
      {
        uint64_t v94 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v149, v89, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v149, v89, v90);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v149, 0, 1, v90);
      }
      (*(void (**)(void **, void, uint64_t, uint64_t))(v151 + 56))(__dst, 0, 1, v160);
    }
    uint64_t v95 = a3[29];
    *((unsigned char *)v4 + a3[28]) = *((unsigned char *)a2 + a3[28]);
    *(void *)((char *)v4 + v95) = *(void *)((char *)a2 + v95);
    uint64_t v96 = a3[31];
    *(void *)((char *)v4 + a3[30]) = *(void *)((char *)a2 + a3[30]);
    v97 = (char *)v4 + v96;
    v98 = (char *)a2 + v96;
    *(void *)v97 = *(void *)v98;
    v97[8] = v98[8];
    uint64_t v99 = a3[33];
    *((unsigned char *)v4 + a3[32]) = *((unsigned char *)a2 + a3[32]);
    *((unsigned char *)v4 + v99) = *((unsigned char *)a2 + v99);
    uint64_t v100 = a3[35];
    *((unsigned char *)v4 + a3[34]) = *((unsigned char *)a2 + a3[34]);
    *(_DWORD *)((char *)v4 + v100) = *(_DWORD *)((char *)a2 + v100);
    uint64_t v101 = a3[37];
    *(_DWORD *)((char *)v4 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
    v102 = (void *)((char *)v4 + v101);
    v103 = (void *)((char *)a2 + v101);
    uint64_t v104 = v103[1];
    void *v102 = *v103;
    v102[1] = v104;
    uint64_t v105 = a3[39];
    *((unsigned char *)v4 + a3[38]) = *((unsigned char *)a2 + a3[38]);
    *((unsigned char *)v4 + v105) = *((unsigned char *)a2 + v105);
    uint64_t v106 = a3[41];
    *(_DWORD *)((char *)v4 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
    *((unsigned char *)v4 + v106) = *((unsigned char *)a2 + v106);
    uint64_t v107 = a3[43];
    *((unsigned char *)v4 + a3[42]) = *((unsigned char *)a2 + a3[42]);
    *((unsigned char *)v4 + v107) = *((unsigned char *)a2 + v107);
    uint64_t v108 = a3[44];
    uint64_t v109 = a3[45];
    v110 = (void *)((char *)v4 + v108);
    v111 = (void *)((char *)a2 + v108);
    uint64_t v112 = v111[1];
    void *v110 = *v111;
    v110[1] = v112;
    v113 = (void *)((char *)v4 + v109);
    v114 = (void *)((char *)a2 + v109);
    uint64_t v115 = v114[1];
    void *v113 = *v114;
    v113[1] = v115;
    uint64_t v116 = a3[47];
    *((unsigned char *)v4 + a3[46]) = *((unsigned char *)a2 + a3[46]);
    uint64_t v117 = a3[48];
    v118 = (void **)((char *)v4 + v117);
    v119 = (void **)((char *)a2 + v117);
    *(_DWORD *)((char *)v4 + v116) = *(_DWORD *)((char *)a2 + v116);
    uint64_t v120 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v121 = *(void **)(v120 - 8);
    v122 = (unsigned int (*)(void **, uint64_t, uint64_t))v121[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v122(v119, 1, v120))
    {
      uint64_t v123 = sub_10000EE48(&qword_1000EE048);
      memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
    }
    else
    {
      __dsta = v121;
      v124 = *v119;
      *v118 = *v119;
      uint64_t v125 = *(int *)(v160 + 20);
      v150 = (char *)v118 + v125;
      v126 = (char *)v119 + v125;
      uint64_t v127 = type metadata accessor for URL();
      uint64_t v128 = *(void *)(v127 - 8);
      v129 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48);
      id v130 = v124;
      uint64_t v148 = v128;
      if (v129(v126, 1, v127))
      {
        uint64_t v131 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v150, v126, *(void *)(*(void *)(v131 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v150, v126, v127);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v150, 0, 1, v127);
      }
      uint64_t v132 = v127;
      uint64_t v133 = *(int *)(v120 + 20);
      v134 = (void **)((char *)v118 + v133);
      v135 = (void **)((char *)v119 + v133);
      if (v155((char *)v119 + v133, 1, v160))
      {
        uint64_t v136 = sub_10000EE48(&qword_1000EE040);
        memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
      }
      else
      {
        v137 = *v135;
        *v134 = *v135;
        uint64_t v138 = *(int *)(v160 + 20);
        v139 = (char *)v134 + v138;
        v140 = (char *)v135 + v138;
        id v141 = v137;
        if (v129(v140, 1, v132))
        {
          uint64_t v142 = sub_10000EE48(&qword_1000EDF98);
          memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v139, v140, v132);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v139, 0, 1, v132);
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v151 + 56))(v134, 0, 1, v160);
      }
      uint64_t v143 = *(int *)(v120 + 24);
      v144 = *(void **)((char *)v119 + v143);
      *(void **)((char *)v118 + v143) = v144;
      v145 = (void (*)(void **, void, uint64_t, uint64_t))__dsta[7];
      id v146 = v144;
      v145(v118, 0, 1, v120);
    }
  }
  return v4;
}

uint64_t type metadata accessor for AdjustedMovie(uint64_t a1)
{
  return sub_10001CFD4(a1, qword_1000EE298);
}

uint64_t type metadata accessor for HomePodSetupViewModel.StereoPairImage(uint64_t a1)
{
  return sub_10001CFD4(a1, qword_1000EE200);
}

void sub_100019008(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for AdjustedMovie(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[13];
  if (*(void *)(v8 + 24)) {
    sub_10000E470(v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[20] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (id *)(a1 + a2[27]);
  uint64_t v10 = type metadata accessor for AdjustedImage(0);
  uint64_t v11 = *(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {

    uint64_t v12 = (char *)v9 + *(int *)(v10 + 20);
    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (id *)(a1 + a2[48]);
  uint64_t v16 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {

    uint64_t v17 = (char *)v15 + *(int *)(v10 + 20);
    uint64_t v18 = type metadata accessor for URL();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (!v20(v17, 1, v18)) {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    }
    uint64_t v21 = (id *)((char *)v15 + *(int *)(v16 + 20));
    if (!v11(v21, 1, v10))
    {

      os_log_type_t v22 = (char *)v21 + *(int *)(v10 + 20);
      if (!v20(v22, 1, v18)) {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
      }
    }
    uint64_t v23 = *(id *)((char *)v15 + *(int *)(v16 + 24));
  }
}

void *sub_100019490(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for AdjustedMovie(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10000EE48(&qword_1000EE038);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v14;
    uint64_t v15 = v10[5];
    v152 = (char *)v9 + v15;
    v154 = (char *)v8 + v15;
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v154, v152, v16);
    *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
    *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
    *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
    (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v18);
  uint64_t v21 = (void *)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)((char *)a1 + v19);
  uint64_t v24 = (void *)((char *)a2 + v19);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v26);
  uint64_t v29 = (void *)((char *)a2 + v26);
  uint64_t v30 = v29[1];
  void *v28 = *v29;
  v28[1] = v30;
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  uint64_t v31 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  uint64_t v32 = a3[13];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)((char *)a2 + v32 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35)
  {
    uint64_t v36 = *((void *)v34 + 4);
    *((void *)v33 + 3) = v35;
    *((void *)v33 + 4) = v36;
    (**(void (***)(char *, char *, uint64_t))(v35 - 8))(v33, v34, v35);
  }
  else
  {
    long long v37 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v37;
    *((void *)v33 + 4) = *((void *)v34 + 4);
  }
  uint64_t v38 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v39 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  uint64_t v40 = (char *)a1 + v39;
  id v41 = (char *)a2 + v39;
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  uint64_t v42 = a3[18];
  uint64_t v43 = a3[19];
  uint64_t v44 = *(void *)((char *)a2 + v42);
  v40[4] = v41[4];
  *(void *)((char *)a1 + v42) = v44;
  uint64_t v45 = (void *)((char *)a1 + v43);
  id v46 = (void *)((char *)a2 + v43);
  uint64_t v47 = *(void *)((char *)a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47)
  {
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = v46[3];
    v45[2] = v46[2];
    v45[3] = v48;
    uint64_t v49 = v46[5];
    v45[4] = v46[4];
    v45[5] = v49;
    uint64_t v50 = v46[7];
    v45[6] = v46[6];
    v45[7] = v50;
    uint64_t v51 = v46[8];
    uint64_t v52 = v46[9];
    v45[8] = v51;
    v45[9] = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v53 = *((_OWORD *)v46 + 3);
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
    *((_OWORD *)v45 + 3) = v53;
    *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
    long long v54 = *((_OWORD *)v46 + 1);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v54;
  }
  uint64_t v55 = a3[20];
  uint64_t v56 = (void *)((char *)a1 + v55);
  id v57 = (void *)((char *)a2 + v55);
  uint64_t v58 = v57[1];
  if (v58)
  {
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = v57[3];
    v56[2] = v57[2];
    v56[3] = v59;
    uint64_t v60 = v57[5];
    v56[4] = v57[4];
    v56[5] = v60;
    uint64_t v61 = v57[7];
    v56[6] = v57[6];
    v56[7] = v61;
    uint64_t v62 = v57[9];
    v56[8] = v57[8];
    v56[9] = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v63 = *((_OWORD *)v57 + 3);
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    *((_OWORD *)v56 + 3) = v63;
    *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
    long long v64 = *((_OWORD *)v57 + 1);
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v64;
  }
  uint64_t v65 = a3[22];
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  v153 = *(void **)((char *)a2 + v65);
  *(void *)((char *)a1 + v65) = v153;
  uint64_t v66 = a3[23];
  uint64_t v67 = a3[24];
  uint64_t v68 = (void *)((char *)a1 + v66);
  id v69 = (void *)((char *)a2 + v66);
  uint64_t v70 = v69[1];
  *uint64_t v68 = *v69;
  v68[1] = v70;
  uint64_t v71 = (void *)((char *)a1 + v67);
  id v72 = (void *)((char *)a2 + v67);
  uint64_t v73 = v72[1];
  *uint64_t v71 = *v72;
  v71[1] = v73;
  uint64_t v74 = a3[25];
  uint64_t v75 = a3[26];
  uint64_t v76 = (void *)((char *)a1 + v74);
  id v77 = (void *)((char *)a2 + v74);
  uint64_t v78 = *v77;
  uint64_t v79 = v77[1];
  LOBYTE(v77) = *((unsigned char *)a2 + v75);
  *uint64_t v76 = v78;
  v76[1] = v79;
  *((unsigned char *)a1 + v75) = (_BYTE)v77;
  uint64_t v80 = a3[27];
  __dst = (void **)((char *)a1 + v80);
  uint64_t v81 = (void **)((char *)a2 + v80);
  uint64_t v82 = type metadata accessor for AdjustedImage(0);
  uint64_t v149 = *(void *)(v82 - 8);
  uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
  swift_bridgeObjectRetain();
  id v84 = v153;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v148 = v83;
  uint64_t v155 = v82;
  if (v83((char *)v81, 1, v82))
  {
    uint64_t v85 = sub_10000EE48(&qword_1000EE040);
    memcpy(__dst, v81, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    uint64_t v86 = *v81;
    *__dst = *v81;
    uint64_t v87 = *(int *)(v82 + 20);
    uint64_t v88 = (char *)__dst + v87;
    v89 = (char *)v81 + v87;
    uint64_t v90 = type metadata accessor for URL();
    uint64_t v91 = *(void *)(v90 - 8);
    v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
    id v93 = v86;
    if (v92(v89, 1, v90))
    {
      uint64_t v94 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v88, v89, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v89, v90);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
    }
    (*(void (**)(void **, void, uint64_t, uint64_t))(v149 + 56))(__dst, 0, 1, v155);
  }
  uint64_t v95 = a3[29];
  *((unsigned char *)a1 + a3[28]) = *((unsigned char *)a2 + a3[28]);
  *(void *)((char *)a1 + v95) = *(void *)((char *)a2 + v95);
  uint64_t v96 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  v97 = (char *)a1 + v96;
  v98 = (char *)a2 + v96;
  *(void *)v97 = *(void *)v98;
  v97[8] = v98[8];
  uint64_t v99 = a3[33];
  *((unsigned char *)a1 + a3[32]) = *((unsigned char *)a2 + a3[32]);
  *((unsigned char *)a1 + v99) = *((unsigned char *)a2 + v99);
  uint64_t v100 = a3[35];
  *((unsigned char *)a1 + a3[34]) = *((unsigned char *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + v100) = *(_DWORD *)((char *)a2 + v100);
  uint64_t v101 = a3[37];
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  v102 = (void *)((char *)a1 + v101);
  v103 = (void *)((char *)a2 + v101);
  uint64_t v104 = v103[1];
  void *v102 = *v103;
  v102[1] = v104;
  uint64_t v105 = a3[39];
  *((unsigned char *)a1 + a3[38]) = *((unsigned char *)a2 + a3[38]);
  *((unsigned char *)a1 + v105) = *((unsigned char *)a2 + v105);
  uint64_t v106 = a3[41];
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((unsigned char *)a1 + v106) = *((unsigned char *)a2 + v106);
  uint64_t v107 = a3[43];
  *((unsigned char *)a1 + a3[42]) = *((unsigned char *)a2 + a3[42]);
  *((unsigned char *)a1 + v107) = *((unsigned char *)a2 + v107);
  uint64_t v108 = a3[44];
  uint64_t v109 = a3[45];
  v110 = (void *)((char *)a1 + v108);
  v111 = (void *)((char *)a2 + v108);
  uint64_t v112 = v111[1];
  void *v110 = *v111;
  v110[1] = v112;
  v113 = (void *)((char *)a1 + v109);
  v114 = (void *)((char *)a2 + v109);
  uint64_t v115 = v114[1];
  void *v113 = *v114;
  v113[1] = v115;
  uint64_t v116 = a3[47];
  *((unsigned char *)a1 + a3[46]) = *((unsigned char *)a2 + a3[46]);
  uint64_t v117 = a3[48];
  v118 = (void **)((char *)a1 + v117);
  v119 = (void **)((char *)a2 + v117);
  *(_DWORD *)((char *)a1 + v116) = *(_DWORD *)((char *)a2 + v116);
  uint64_t v120 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v121 = *(void *)(v120 - 8);
  v122 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v121 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v122(v119, 1, v120))
  {
    uint64_t v123 = sub_10000EE48(&qword_1000EE048);
    memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
  }
  else
  {
    v124 = *v119;
    *v118 = *v119;
    uint64_t v125 = *(int *)(v155 + 20);
    __dsta = (char *)v118 + v125;
    v126 = (char *)v119 + v125;
    uint64_t v127 = type metadata accessor for URL();
    uint64_t v128 = *(void *)(v127 - 8);
    v129 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48);
    id v130 = v124;
    v147 = v129;
    if (v129(v126, 1, v127))
    {
      uint64_t v131 = sub_10000EE48(&qword_1000EDF98);
      memcpy(__dsta, v126, *(void *)(*(void *)(v131 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v128 + 16))(__dsta, v126, v127);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(__dsta, 0, 1, v127);
    }
    uint64_t v132 = *(int *)(v120 + 20);
    uint64_t v133 = (void **)((char *)v118 + v132);
    v134 = (void **)((char *)v119 + v132);
    if (v148((char *)v119 + v132, 1, v155))
    {
      uint64_t v135 = sub_10000EE48(&qword_1000EE040);
      memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
    }
    else
    {
      uint64_t v136 = *v134;
      *uint64_t v133 = *v134;
      uint64_t v137 = *(int *)(v155 + 20);
      uint64_t v138 = (char *)v133 + v137;
      v139 = (char *)v134 + v137;
      id v140 = v136;
      if (v147(v139, 1, v127))
      {
        uint64_t v141 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v138, v139, v127);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v138, 0, 1, v127);
      }
      (*(void (**)(void **, void, uint64_t, uint64_t))(v149 + 56))(v133, 0, 1, v155);
    }
    uint64_t v142 = *(int *)(v120 + 24);
    uint64_t v143 = *(void **)((char *)v119 + v142);
    *(void **)((char *)v118 + v142) = v143;
    v144 = *(void (**)(void **, void, uint64_t, uint64_t))(v121 + 56);
    id v145 = v143;
    v144(v118, 0, 1, v120);
  }
  return a1;
}

void *sub_100019EB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for AdjustedMovie(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      void *v7 = *v8;
      v7[1] = v8[1];
      uint64_t v14 = v9[5];
      v206 = (char *)v8 + v14;
      v208 = (char *)v7 + v14;
      uint64_t v15 = type metadata accessor for URL();
      v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v201(v208, v206, v15);
      *(void *)((char *)v7 + v9[6]) = *(void *)((char *)v8 + v9[6]);
      *(void *)((char *)v7 + v9[7]) = *(void *)((char *)v8 + v9[7]);
      *(void *)((char *)v7 + v9[8]) = *(void *)((char *)v8 + v9[8]);
      (*(void (**)(void *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_10001B3A8((uint64_t)v7, type metadata accessor for AdjustedMovie);
LABEL_6:
    uint64_t v16 = sub_10000EE48(&qword_1000EE038);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v9[5];
  uint64_t v45 = (char *)v7 + v44;
  id v46 = (char *)v8 + v44;
  uint64_t v47 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  *(void *)((char *)v7 + v9[6]) = *(void *)((char *)v8 + v9[6]);
  *(void *)((char *)v7 + v9[7]) = *(void *)((char *)v8 + v9[7]);
  *(void *)((char *)v7 + v9[8]) = *(void *)((char *)v8 + v9[8]);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[13];
  uint64_t v27 = (uint64_t)a1 + v26;
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v29 = *(void *)((char *)a2 + v26 + 24);
  if (*(void *)((char *)a1 + v26 + 24))
  {
    if (v29)
    {
      sub_10000E5F4((uint64_t *)v27, v28);
      goto LABEL_14;
    }
    sub_10000E470(v27);
  }
  else if (v29)
  {
    *(void *)(v27 + 24) = v29;
    *(void *)(v27 + 32) = v28[4];
    (**(void (***)(uint64_t, char *))(v29 - 8))(v27, (char *)v28);
    goto LABEL_14;
  }
  long long v30 = *(_OWORD *)v28;
  long long v31 = *((_OWORD *)v28 + 1);
  *(void *)(v27 + 32) = v28[4];
  *(_OWORD *)uint64_t v27 = v30;
  *(_OWORD *)(v27 + 16) = v31;
LABEL_14:
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  uint64_t v32 = a3[17];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  char v35 = v34[4];
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  v33[4] = v35;
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  uint64_t v36 = a3[19];
  long long v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = *(void *)((char *)a1 + v36 + 8);
  uint64_t v40 = *(void *)((char *)a2 + v36 + 8);
  if (v39)
  {
    if (v40)
    {
      *long long v37 = *v38;
      v37[1] = v38[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37[2] = v38[2];
      v37[3] = v38[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37[4] = v38[4];
      v37[5] = v38[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37[6] = v38[6];
      v37[7] = v38[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37[8] = v38[8];
      v37[9] = v38[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001B354((uint64_t)v37);
      *(_OWORD *)long long v37 = *(_OWORD *)v38;
      long long v41 = *((_OWORD *)v38 + 4);
      long long v43 = *((_OWORD *)v38 + 1);
      long long v42 = *((_OWORD *)v38 + 2);
      *((_OWORD *)v37 + 3) = *((_OWORD *)v38 + 3);
      *((_OWORD *)v37 + 4) = v41;
      *((_OWORD *)v37 + 1) = v43;
      *((_OWORD *)v37 + 2) = v42;
    }
  }
  else if (v40)
  {
    *long long v37 = *v38;
    v37[1] = v38[1];
    v37[2] = v38[2];
    v37[3] = v38[3];
    v37[4] = v38[4];
    v37[5] = v38[5];
    v37[6] = v38[6];
    v37[7] = v38[7];
    v37[8] = v38[8];
    v37[9] = v38[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)long long v37 = *(_OWORD *)v38;
    long long v48 = *((_OWORD *)v38 + 1);
    long long v49 = *((_OWORD *)v38 + 2);
    long long v50 = *((_OWORD *)v38 + 4);
    *((_OWORD *)v37 + 3) = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 4) = v50;
    *((_OWORD *)v37 + 1) = v48;
    *((_OWORD *)v37 + 2) = v49;
  }
  uint64_t v51 = a3[20];
  uint64_t v52 = (void *)((char *)a1 + v51);
  long long v53 = (void *)((char *)a2 + v51);
  uint64_t v54 = *(void *)((char *)a1 + v51 + 8);
  uint64_t v55 = *(void *)((char *)a2 + v51 + 8);
  if (v54)
  {
    if (v55)
    {
      void *v52 = *v53;
      v52[1] = v53[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[2] = v53[2];
      v52[3] = v53[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[4] = v53[4];
      v52[5] = v53[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[6] = v53[6];
      v52[7] = v53[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[8] = v53[8];
      v52[9] = v53[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001B354((uint64_t)v52);
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
      long long v56 = *((_OWORD *)v53 + 4);
      long long v58 = *((_OWORD *)v53 + 1);
      long long v57 = *((_OWORD *)v53 + 2);
      *((_OWORD *)v52 + 3) = *((_OWORD *)v53 + 3);
      *((_OWORD *)v52 + 4) = v56;
      *((_OWORD *)v52 + 1) = v58;
      *((_OWORD *)v52 + 2) = v57;
    }
  }
  else if (v55)
  {
    void *v52 = *v53;
    v52[1] = v53[1];
    v52[2] = v53[2];
    v52[3] = v53[3];
    v52[4] = v53[4];
    v52[5] = v53[5];
    v52[6] = v53[6];
    v52[7] = v53[7];
    v52[8] = v53[8];
    v52[9] = v53[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    long long v59 = *((_OWORD *)v53 + 1);
    long long v60 = *((_OWORD *)v53 + 2);
    long long v61 = *((_OWORD *)v53 + 4);
    *((_OWORD *)v52 + 3) = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 4) = v61;
    *((_OWORD *)v52 + 1) = v59;
    *((_OWORD *)v52 + 2) = v60;
  }
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[22];
  long long v63 = *(void **)((char *)a1 + v62);
  long long v64 = *(void **)((char *)a2 + v62);
  *(void *)((char *)a1 + v62) = v64;
  id v65 = v64;

  uint64_t v66 = a3[23];
  uint64_t v67 = (void *)((char *)a1 + v66);
  uint64_t v68 = (void *)((char *)a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[24];
  uint64_t v70 = (void *)((char *)a1 + v69);
  uint64_t v71 = (void *)((char *)a2 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[25];
  uint64_t v73 = (void *)((char *)a1 + v72);
  uint64_t v74 = (void *)((char *)a2 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  uint64_t v75 = a3[27];
  uint64_t v76 = (void **)((char *)a1 + v75);
  id v77 = (void **)((char *)a2 + v75);
  uint64_t v78 = type metadata accessor for AdjustedImage(0);
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v79 + 48);
  int v81 = v80(v76, 1, v78);
  v207 = (uint64_t (*)(char *, uint64_t, uint64_t))v80;
  int v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (!v82)
    {
      uint64_t v203 = v79;
      uint64_t v94 = *v77;
      uint64_t v95 = *v76;
      *uint64_t v76 = *v77;
      id v96 = v94;

      uint64_t v97 = *(int *)(v78 + 20);
      v98 = (void **)((char *)v76 + v97);
      uint64_t v99 = (char *)v77 + v97;
      uint64_t v100 = type metadata accessor for URL();
      uint64_t v101 = *(void *)(v100 - 8);
      v102 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v101 + 48);
      __dsta = v98;
      LODWORD(v98) = v102(v98, 1, v100);
      int v103 = v102((void **)v99, 1, v100);
      if (v98)
      {
        uint64_t v79 = v203;
        if (!v103)
        {
          (*(void (**)(void **, char *, uint64_t))(v101 + 16))(__dsta, v99, v100);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v101 + 56))(__dsta, 0, 1, v100);
          goto LABEL_42;
        }
        size_t v91 = *(void *)(*(void *)(sub_10000EE48(&qword_1000EDF98) - 8) + 64);
        v92 = __dsta;
        id v93 = (void **)v99;
      }
      else
      {
        uint64_t v79 = v203;
        if (!v103)
        {
          (*(void (**)(void **, char *, uint64_t))(v101 + 24))(__dsta, v99, v100);
          goto LABEL_42;
        }
        (*(void (**)(void **, uint64_t))(v101 + 8))(__dsta, v100);
        size_t v91 = *(void *)(*(void *)(sub_10000EE48(&qword_1000EDF98) - 8) + 64);
        v92 = __dsta;
        id v93 = (void **)v99;
      }
LABEL_36:
      memcpy(v92, v93, v91);
      goto LABEL_42;
    }
    sub_10001B3A8((uint64_t)v76, type metadata accessor for AdjustedImage);
LABEL_35:
    size_t v91 = *(void *)(*(void *)(sub_10000EE48(&qword_1000EE040) - 8) + 64);
    v92 = v76;
    id v93 = v77;
    goto LABEL_36;
  }
  if (v82) {
    goto LABEL_35;
  }
  uint64_t v198 = v78;
  uint64_t v202 = v79;
  uint64_t v83 = *v77;
  *uint64_t v76 = *v77;
  uint64_t v84 = *(int *)(v78 + 20);
  __dst = (char *)v76 + v84;
  uint64_t v85 = (char *)v77 + v84;
  uint64_t v86 = type metadata accessor for URL();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
  id v89 = v83;
  if (v88(v85, 1, v86))
  {
    uint64_t v90 = sub_10000EE48(&qword_1000EDF98);
    memcpy(__dst, v85, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v85, v86);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v86);
  }
  uint64_t v78 = v198;
  uint64_t v79 = v202;
  (*(void (**)(void **, void, uint64_t, uint64_t))(v202 + 56))(v76, 0, 1, v198);
LABEL_42:
  *((unsigned char *)a1 + a3[28]) = *((unsigned char *)a2 + a3[28]);
  *(void *)((char *)a1 + a3[29]) = *(void *)((char *)a2 + a3[29]);
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  uint64_t v104 = a3[31];
  uint64_t v105 = (char *)a1 + v104;
  uint64_t v106 = (char *)a2 + v104;
  uint64_t v107 = *(void *)v106;
  v105[8] = v106[8];
  *(void *)uint64_t v105 = v107;
  *((unsigned char *)a1 + a3[32]) = *((unsigned char *)a2 + a3[32]);
  *((unsigned char *)a1 + a3[33]) = *((unsigned char *)a2 + a3[33]);
  *((unsigned char *)a1 + a3[34]) = *((unsigned char *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + a3[35]) = *(_DWORD *)((char *)a2 + a3[35]);
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  uint64_t v108 = a3[37];
  uint64_t v109 = (void *)((char *)a1 + v108);
  v110 = (void *)((char *)a2 + v108);
  *uint64_t v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[38]) = *((unsigned char *)a2 + a3[38]);
  *((unsigned char *)a1 + a3[39]) = *((unsigned char *)a2 + a3[39]);
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((unsigned char *)a1 + a3[41]) = *((unsigned char *)a2 + a3[41]);
  *((unsigned char *)a1 + a3[42]) = *((unsigned char *)a2 + a3[42]);
  *((unsigned char *)a1 + a3[43]) = *((unsigned char *)a2 + a3[43]);
  uint64_t v111 = a3[44];
  uint64_t v112 = (void *)((char *)a1 + v111);
  v113 = (void *)((char *)a2 + v111);
  *uint64_t v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v114 = a3[45];
  uint64_t v115 = (void *)((char *)a1 + v114);
  uint64_t v116 = (void *)((char *)a2 + v114);
  *uint64_t v115 = *v116;
  v115[1] = v116[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[46]) = *((unsigned char *)a2 + a3[46]);
  *(_DWORD *)((char *)a1 + a3[47]) = *(_DWORD *)((char *)a2 + a3[47]);
  uint64_t v117 = a3[48];
  v118 = (void **)((char *)a1 + v117);
  v119 = (void **)((char *)a2 + v117);
  uint64_t v120 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v121 = *(void *)(v120 - 8);
  v122 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v121 + 48);
  int v123 = v122(v118, 1, v120);
  int v124 = v122(v119, 1, v120);
  if (!v123)
  {
    if (v124)
    {
      sub_10001B3A8((uint64_t)v118, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
      goto LABEL_48;
    }
    __dstc = (int *)v120;
    uint64_t v205 = v79;
    uint64_t v135 = *v119;
    uint64_t v136 = *v118;
    *v118 = *v119;
    id v137 = v135;

    uint64_t v138 = *(int *)(v78 + 20);
    v139 = (char *)v118 + v138;
    v200 = v119;
    id v140 = (char *)v119 + v138;
    uint64_t v141 = type metadata accessor for URL();
    uint64_t v142 = *(void *)(v141 - 8);
    uint64_t v143 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 48);
    v192 = v139;
    int v144 = v143(v139, 1, v141);
    int v145 = v143(v140, 1, v141);
    uint64_t v191 = v141;
    uint64_t v190 = v142;
    if (v144)
    {
      id v146 = __dstc;
      if (v145)
      {
        uint64_t v147 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v192, v140, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v192, v140, v141);
        id v146 = __dstc;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v192, 0, 1, v141);
      }
      uint64_t v158 = v200;
    }
    else
    {
      if (v145)
      {
        (*(void (**)(char *, uint64_t))(v142 + 8))(v139, v141);
        uint64_t v157 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v139, v140, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v142 + 24))(v139, v140, v141);
      }
      id v146 = __dstc;
      uint64_t v158 = v200;
    }
    uint64_t v163 = v146[5];
    v164 = (void **)((char *)v118 + v163);
    v165 = (void **)((char *)v158 + v163);
    int v166 = v207((char *)v118 + v163, 1, v78);
    int v167 = v207((char *)v165, 1, v78);
    if (v166)
    {
      if (!v167)
      {
        v168 = *v165;
        *v164 = *v165;
        uint64_t v169 = *(int *)(v78 + 20);
        v170 = (char *)v164 + v169;
        v171 = (char *)v165 + v169;
        id v172 = v168;
        if (v143(v171, 1, v141))
        {
          uint64_t v173 = sub_10000EE48(&qword_1000EDF98);
          memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v170, v171, v141);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(v170, 0, 1, v141);
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v205 + 56))(v164, 0, 1, v78);
        goto LABEL_82;
      }
    }
    else
    {
      if (!v167)
      {
        v175 = *v165;
        v176 = *v164;
        *v164 = *v165;
        id v177 = v175;

        uint64_t v178 = *(int *)(v78 + 20);
        v179 = (char *)v164 + v178;
        v180 = (char *)v165 + v178;
        int v181 = v143(v179, 1, v191);
        int v182 = v143(v180, 1, v191);
        if (v181)
        {
          v183 = v200;
          if (!v182)
          {
            (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v179, v180, v191);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(v179, 0, 1, v191);
LABEL_83:
            uint64_t v184 = v146[6];
            v185 = *(void **)((char *)v118 + v184);
            v186 = *(void **)((char *)v183 + v184);
            *(void **)((char *)v118 + v184) = v186;
            id v187 = v186;

            return a1;
          }
        }
        else
        {
          v183 = v200;
          if (!v182)
          {
            (*(void (**)(char *, char *, uint64_t))(v190 + 24))(v179, v180, v191);
            goto LABEL_83;
          }
          (*(void (**)(char *, uint64_t))(v190 + 8))(v179, v191);
        }
        uint64_t v189 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v179, v180, *(void *)(*(void *)(v189 - 8) + 64));
        goto LABEL_83;
      }
      sub_10001B3A8((uint64_t)v164, type metadata accessor for AdjustedImage);
    }
    uint64_t v174 = sub_10000EE48(&qword_1000EE040);
    memcpy(v164, v165, *(void *)(*(void *)(v174 - 8) + 64));
LABEL_82:
    v183 = v200;
    goto LABEL_83;
  }
  if (v124)
  {
LABEL_48:
    uint64_t v134 = sub_10000EE48(&qword_1000EE048);
    memcpy(v118, v119, *(void *)(*(void *)(v134 - 8) + 64));
    return a1;
  }
  uint64_t v125 = v119;
  v126 = *v119;
  *v118 = v126;
  uint64_t v127 = *(int *)(v78 + 20);
  __src = (char *)v118 + v127;
  __dstb = v118;
  v199 = v125;
  uint64_t v204 = v79;
  uint64_t v128 = (char *)v125 + v127;
  uint64_t v129 = type metadata accessor for URL();
  uint64_t v130 = *(void *)(v129 - 8);
  uint64_t v131 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48);
  id v132 = v126;
  if (v131(v128, 1, v129))
  {
    uint64_t v133 = sub_10000EE48(&qword_1000EDF98);
    memcpy(__src, v128, *(void *)(*(void *)(v133 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(__src, v128, v129);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(__src, 0, 1, v129);
  }
  uint64_t v148 = *(int *)(v120 + 20);
  uint64_t v149 = (void **)((char *)__dstb + v148);
  v150 = (void **)((char *)v199 + v148);
  if (v207((char *)v199 + v148, 1, v78))
  {
    uint64_t v151 = sub_10000EE48(&qword_1000EE040);
    memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
  }
  else
  {
    v152 = *v150;
    char *v149 = *v150;
    uint64_t v153 = *(int *)(v78 + 20);
    v209 = (char *)v149 + v153;
    v154 = (char *)v150 + v153;
    id v155 = v152;
    if (v131(v154, 1, v129))
    {
      uint64_t v156 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v209, v154, *(void *)(*(void *)(v156 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v209, v154, v129);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v209, 0, 1, v129);
    }
    (*(void (**)(void **, void, uint64_t, uint64_t))(v204 + 56))(v149, 0, 1, v78);
  }
  uint64_t v159 = *(int *)(v120 + 24);
  uint64_t v160 = *(void **)((char *)v199 + v159);
  *(void **)((char *)__dstb + v159) = v160;
  v161 = *(void (**)(void **, void, uint64_t, uint64_t))(v121 + 56);
  id v162 = v160;
  v161(__dstb, 0, 1, v120);
  return a1;
}

uint64_t sub_10001B354(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001B3A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_10001B408(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for AdjustedMovie(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000EE48(&qword_1000EE038);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
    *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
    *(void *)((char *)v8 + v10[8]) = *(void *)((char *)v9 + v10[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  uint64_t v18 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = a3[14];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((void *)v22 + 4) = *((void *)v23 + 4);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v25 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = a3[17];
  uint64_t v27 = a3[18];
  uint64_t v28 = (char *)a1 + v26;
  uint64_t v29 = (char *)a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  uint64_t v30 = a3[19];
  uint64_t v31 = a3[20];
  uint64_t v32 = (_OWORD *)((char *)a1 + v30);
  uint64_t v33 = (_OWORD *)((char *)a2 + v30);
  long long v34 = v33[4];
  long long v35 = v33[2];
  v32[3] = v33[3];
  v32[4] = v34;
  long long v36 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v36;
  v32[2] = v35;
  long long v37 = (_OWORD *)((char *)a1 + v31);
  uint64_t v38 = (_OWORD *)((char *)a2 + v31);
  long long v39 = v38[4];
  long long v40 = v38[2];
  v37[3] = v38[3];
  v37[4] = v39;
  long long v41 = v38[1];
  *long long v37 = *v38;
  v37[1] = v41;
  v37[2] = v40;
  uint64_t v42 = a3[22];
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  uint64_t v43 = a3[24];
  *(_OWORD *)((char *)a1 + a3[23]) = *(_OWORD *)((char *)a2 + a3[23]);
  *(_OWORD *)((char *)a1 + v43) = *(_OWORD *)((char *)a2 + v43);
  uint64_t v44 = a3[26];
  *(_OWORD *)((char *)a1 + a3[25]) = *(_OWORD *)((char *)a2 + a3[25]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  uint64_t v45 = a3[27];
  id v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  uint64_t v48 = type metadata accessor for AdjustedImage(0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v95 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v49 + 48);
  if (v95(v47, 1, v48))
  {
    uint64_t v50 = sub_10000EE48(&qword_1000EE040);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    uint64_t v93 = v49;
    *id v46 = *v47;
    uint64_t v51 = *(int *)(v48 + 20);
    uint64_t v52 = (char *)v46 + v51;
    long long v53 = (char *)v47 + v51;
    uint64_t v54 = type metadata accessor for URL();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      uint64_t v56 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    uint64_t v49 = v93;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v46, 0, 1, v48);
  }
  uint64_t v57 = a3[29];
  *((unsigned char *)a1 + a3[28]) = *((unsigned char *)a2 + a3[28]);
  *(void *)((char *)a1 + v57) = *(void *)((char *)a2 + v57);
  uint64_t v58 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  long long v59 = (char *)a1 + v58;
  long long v60 = (char *)a2 + v58;
  *(void *)long long v59 = *(void *)v60;
  v59[8] = v60[8];
  uint64_t v61 = a3[33];
  *((unsigned char *)a1 + a3[32]) = *((unsigned char *)a2 + a3[32]);
  *((unsigned char *)a1 + v61) = *((unsigned char *)a2 + v61);
  uint64_t v62 = a3[35];
  *((unsigned char *)a1 + a3[34]) = *((unsigned char *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + v62) = *(_DWORD *)((char *)a2 + v62);
  uint64_t v63 = a3[37];
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  *(_OWORD *)((char *)a1 + v63) = *(_OWORD *)((char *)a2 + v63);
  uint64_t v64 = a3[39];
  *((unsigned char *)a1 + a3[38]) = *((unsigned char *)a2 + a3[38]);
  *((unsigned char *)a1 + v64) = *((unsigned char *)a2 + v64);
  uint64_t v65 = a3[41];
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((unsigned char *)a1 + v65) = *((unsigned char *)a2 + v65);
  uint64_t v66 = a3[43];
  *((unsigned char *)a1 + a3[42]) = *((unsigned char *)a2 + a3[42]);
  *((unsigned char *)a1 + v66) = *((unsigned char *)a2 + v66);
  uint64_t v67 = a3[45];
  *(_OWORD *)((char *)a1 + a3[44]) = *(_OWORD *)((char *)a2 + a3[44]);
  *(_OWORD *)((char *)a1 + v67) = *(_OWORD *)((char *)a2 + v67);
  uint64_t v68 = a3[47];
  *((unsigned char *)a1 + a3[46]) = *((unsigned char *)a2 + a3[46]);
  uint64_t v69 = a3[48];
  uint64_t v70 = (void *)((char *)a1 + v69);
  uint64_t v71 = (void *)((char *)a2 + v69);
  *(_DWORD *)((char *)a1 + v68) = *(_DWORD *)((char *)a2 + v68);
  uint64_t v72 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v73 = *(void *)(v72 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
  {
    uint64_t v74 = sub_10000EE48(&qword_1000EE048);
    memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    uint64_t v94 = v49;
    *uint64_t v70 = *v71;
    uint64_t v75 = *(int *)(v48 + 20);
    __dst = (char *)v70 + v75;
    uint64_t v76 = (char *)v71 + v75;
    uint64_t v77 = type metadata accessor for URL();
    uint64_t v78 = *(void *)(v77 - 8);
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
    uint64_t v91 = v77;
    uint64_t v89 = v78;
    if (v90(v76, 1, v77))
    {
      uint64_t v79 = sub_10000EE48(&qword_1000EDF98);
      memcpy(__dst, v76, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(__dst, v76, v77);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(__dst, 0, 1, v77);
    }
    uint64_t v80 = *(int *)(v72 + 20);
    int v81 = (void *)((char *)v70 + v80);
    int v82 = (void *)((char *)v71 + v80);
    if (v95((void *)((char *)v71 + v80), 1, v48))
    {
      uint64_t v83 = sub_10000EE48(&qword_1000EE040);
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      *int v81 = *v82;
      uint64_t v84 = *(int *)(v48 + 20);
      uint64_t v85 = (char *)v81 + v84;
      uint64_t v86 = (char *)v82 + v84;
      if (v90(v86, 1, v91))
      {
        uint64_t v87 = sub_10000EE48(&qword_1000EDF98);
        memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v85, v86, v91);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v85, 0, 1, v91);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v81, 0, 1, v48);
    }
    *(void *)((char *)v70 + *(int *)(v72 + 24)) = *(void *)((char *)v71 + *(int *)(v72 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  return a1;
}

void *sub_10001BC0C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for AdjustedMovie(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v16 = v11[5];
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (char *)v10 + v16;
      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(void *)((char *)v9 + v11[6]) = *(void *)((char *)v10 + v11[6]);
      *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
      *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
      (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_10001B3A8((uint64_t)v9, type metadata accessor for AdjustedMovie);
LABEL_6:
    uint64_t v20 = sub_10000EE48(&qword_1000EE038);
    memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v97 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v97;
  swift_bridgeObjectRelease();
  uint64_t v98 = v11[5];
  uint64_t v99 = (char *)v9 + v98;
  uint64_t v100 = (char *)v10 + v98;
  uint64_t v101 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 40))(v99, v100, v101);
  *(void *)((char *)v9 + v11[6]) = *(void *)((char *)v10 + v11[6]);
  *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
  *(void *)((char *)v9 + v11[8]) = *(void *)((char *)v10 + v11[8]);
LABEL_7:
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[13];
  uint64_t v37 = (uint64_t)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  if (*(void *)((char *)a1 + v36 + 24)) {
    sub_10000E470(v37);
  }
  long long v39 = *((_OWORD *)v38 + 1);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(void *)(v37 + 32) = *((void *)v38 + 4);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  long long v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *(_DWORD *)long long v41 = *(_DWORD *)v42;
  uint64_t v43 = a3[18];
  uint64_t v44 = a3[19];
  uint64_t v45 = *(void *)((char *)a2 + v43);
  v41[4] = v42[4];
  *(void *)((char *)a1 + v43) = v45;
  id v46 = (void *)((char *)a1 + v44);
  uint64_t v47 = (void *)((char *)a2 + v44);
  if (*(void *)((char *)a1 + v44 + 8))
  {
    uint64_t v48 = v47[1];
    if (v48)
    {
      *id v46 = *v47;
      v46[1] = v48;
      swift_bridgeObjectRelease();
      uint64_t v49 = v47[3];
      v46[2] = v47[2];
      v46[3] = v49;
      swift_bridgeObjectRelease();
      uint64_t v50 = v47[5];
      v46[4] = v47[4];
      v46[5] = v50;
      swift_bridgeObjectRelease();
      uint64_t v51 = v47[7];
      v46[6] = v47[6];
      v46[7] = v51;
      swift_bridgeObjectRelease();
      uint64_t v52 = v47[9];
      v46[8] = v47[8];
      v46[9] = v52;
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_10001B354((uint64_t)a1 + v44);
  }
  long long v53 = *((_OWORD *)v47 + 3);
  *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
  *((_OWORD *)v46 + 3) = v53;
  *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
  long long v54 = *((_OWORD *)v47 + 1);
  *(_OWORD *)id v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v54;
LABEL_14:
  uint64_t v55 = a3[20];
  uint64_t v56 = (void *)((char *)a1 + v55);
  uint64_t v57 = (void *)((char *)a2 + v55);
  if (*(void *)((char *)a1 + v55 + 8))
  {
    uint64_t v58 = v57[1];
    if (v58)
    {
      *uint64_t v56 = *v57;
      v56[1] = v58;
      swift_bridgeObjectRelease();
      uint64_t v59 = v57[3];
      v56[2] = v57[2];
      v56[3] = v59;
      swift_bridgeObjectRelease();
      uint64_t v60 = v57[5];
      v56[4] = v57[4];
      v56[5] = v60;
      swift_bridgeObjectRelease();
      uint64_t v61 = v57[7];
      v56[6] = v57[6];
      v56[7] = v61;
      swift_bridgeObjectRelease();
      uint64_t v62 = v57[9];
      v56[8] = v57[8];
      v56[9] = v62;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_10001B354((uint64_t)v56);
  }
  long long v63 = *((_OWORD *)v57 + 3);
  *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
  *((_OWORD *)v56 + 3) = v63;
  *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
  long long v64 = *((_OWORD *)v57 + 1);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v64;
LABEL_19:
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  swift_bridgeObjectRelease();
  uint64_t v65 = a3[22];
  uint64_t v66 = *(void **)((char *)a1 + v65);
  *(void *)((char *)a1 + v65) = *(void *)((char *)a2 + v65);

  uint64_t v67 = a3[23];
  uint64_t v68 = (void *)((char *)a1 + v67);
  uint64_t v69 = (void *)((char *)a2 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  *uint64_t v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[24];
  uint64_t v73 = (void *)((char *)a1 + v72);
  uint64_t v74 = (void *)((char *)a2 + v72);
  uint64_t v76 = *v74;
  uint64_t v75 = v74[1];
  *uint64_t v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  uint64_t v77 = a3[25];
  uint64_t v78 = (void *)((char *)a1 + v77);
  uint64_t v79 = (void *)((char *)a2 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  *uint64_t v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  uint64_t v82 = a3[27];
  *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  uint64_t v83 = (void **)((char *)a1 + v82);
  uint64_t v84 = (void **)((char *)a2 + v82);
  uint64_t v85 = type metadata accessor for AdjustedImage(0);
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  uint64_t v198 = (uint64_t (*)(char *, uint64_t, uint64_t))v87;
  if (!v88)
  {
    if (!v89)
    {
      uint64_t v195 = v86;
      v102 = *v83;
      *uint64_t v83 = *v84;

      uint64_t v103 = *(int *)(v85 + 20);
      uint64_t v104 = (char *)v83 + v103;
      uint64_t v105 = (char *)v84 + v103;
      uint64_t v106 = type metadata accessor for URL();
      uint64_t v107 = *(void *)(v106 - 8);
      uint64_t v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
      int v109 = v108(v104, 1, v106);
      int v110 = v108(v105, 1, v106);
      if (v109)
      {
        uint64_t v86 = v195;
        if (!v110)
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v104, v105, v106);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v86 = v195;
        if (!v110)
        {
          (*(void (**)(char *, char *, uint64_t))(v107 + 40))(v104, v105, v106);
          goto LABEL_35;
        }
        (*(void (**)(char *, uint64_t))(v107 + 8))(v104, v106);
      }
      uint64_t v111 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v104, v105, *(void *)(*(void *)(v111 - 8) + 64));
      goto LABEL_35;
    }
    sub_10001B3A8((uint64_t)v83, type metadata accessor for AdjustedImage);
LABEL_25:
    uint64_t v96 = sub_10000EE48(&qword_1000EE040);
    memcpy(v83, v84, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_35;
  }
  if (v89) {
    goto LABEL_25;
  }
  uint64_t v194 = v86;
  *uint64_t v83 = *v84;
  uint64_t v90 = *(int *)(v85 + 20);
  uint64_t v91 = (char *)v83 + v90;
  v92 = (char *)v84 + v90;
  uint64_t v93 = type metadata accessor for URL();
  uint64_t v94 = *(void *)(v93 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
  {
    uint64_t v95 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v91, v92, v93);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
  }
  uint64_t v86 = v194;
  (*(void (**)(void **, void, uint64_t, uint64_t))(v194 + 56))(v83, 0, 1, v85);
LABEL_35:
  uint64_t v112 = a3[29];
  *((unsigned char *)a1 + a3[28]) = *((unsigned char *)a2 + a3[28]);
  *(void *)((char *)a1 + v112) = *(void *)((char *)a2 + v112);
  uint64_t v113 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  uint64_t v114 = (char *)a1 + v113;
  uint64_t v115 = (char *)a2 + v113;
  *(void *)uint64_t v114 = *(void *)v115;
  v114[8] = v115[8];
  uint64_t v116 = a3[33];
  *((unsigned char *)a1 + a3[32]) = *((unsigned char *)a2 + a3[32]);
  *((unsigned char *)a1 + v116) = *((unsigned char *)a2 + v116);
  uint64_t v117 = a3[35];
  *((unsigned char *)a1 + a3[34]) = *((unsigned char *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + v117) = *(_DWORD *)((char *)a2 + v117);
  uint64_t v118 = a3[37];
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  v119 = (void *)((char *)a1 + v118);
  uint64_t v120 = (void *)((char *)a2 + v118);
  uint64_t v122 = *v120;
  uint64_t v121 = v120[1];
  void *v119 = v122;
  v119[1] = v121;
  swift_bridgeObjectRelease();
  uint64_t v123 = a3[39];
  *((unsigned char *)a1 + a3[38]) = *((unsigned char *)a2 + a3[38]);
  *((unsigned char *)a1 + v123) = *((unsigned char *)a2 + v123);
  uint64_t v124 = a3[41];
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((unsigned char *)a1 + v124) = *((unsigned char *)a2 + v124);
  uint64_t v125 = a3[43];
  *((unsigned char *)a1 + a3[42]) = *((unsigned char *)a2 + a3[42]);
  *((unsigned char *)a1 + v125) = *((unsigned char *)a2 + v125);
  uint64_t v126 = a3[44];
  uint64_t v127 = (void *)((char *)a1 + v126);
  uint64_t v128 = (void *)((char *)a2 + v126);
  uint64_t v130 = *v128;
  uint64_t v129 = v128[1];
  *uint64_t v127 = v130;
  v127[1] = v129;
  swift_bridgeObjectRelease();
  uint64_t v131 = a3[45];
  id v132 = (void *)((char *)a1 + v131);
  uint64_t v133 = (void *)((char *)a2 + v131);
  uint64_t v135 = *v133;
  uint64_t v134 = v133[1];
  *id v132 = v135;
  v132[1] = v134;
  swift_bridgeObjectRelease();
  uint64_t v136 = a3[47];
  *((unsigned char *)a1 + a3[46]) = *((unsigned char *)a2 + a3[46]);
  *(_DWORD *)((char *)a1 + v136) = *(_DWORD *)((char *)a2 + v136);
  uint64_t v137 = a3[48];
  uint64_t v138 = (void **)((char *)a1 + v137);
  v139 = (void **)((char *)a2 + v137);
  uint64_t v140 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v141 = *(void *)(v140 - 8);
  uint64_t v142 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v141 + 48);
  uint64_t v143 = v138;
  LODWORD(v138) = v142(v138, 1, v140);
  uint64_t v199 = v140;
  __src = v139;
  int v144 = v142(v139, 1, v140);
  if (!v138)
  {
    if (v144)
    {
      sub_10001B3A8((uint64_t)v143, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
      goto LABEL_41;
    }
    uint64_t v197 = v86;
    v152 = *v143;
    *uint64_t v143 = *v139;

    uint64_t v193 = v85;
    uint64_t v153 = *(int *)(v85 + 20);
    v154 = (char *)v143 + v153;
    id v155 = (char *)v139 + v153;
    uint64_t v156 = type metadata accessor for URL();
    uint64_t v157 = *(void *)(v156 - 8);
    uint64_t v158 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 48);
    int v159 = v158(v154, 1, v156);
    int v160 = v158(v155, 1, v156);
    if (v159)
    {
      if (!v160)
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v154, v155, v156);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
        goto LABEL_53;
      }
    }
    else
    {
      if (!v160)
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 40))(v154, v155, v156);
LABEL_53:
        uint64_t v170 = *(int *)(v199 + 20);
        v171 = (void **)((char *)v143 + v170);
        id v172 = (void **)((char *)__src + v170);
        int v173 = v198((char *)v143 + v170, 1, v193);
        int v174 = v198((char *)v172, 1, v193);
        if (v173)
        {
          if (!v174)
          {
            char *v171 = *v172;
            uint64_t v175 = *(int *)(v193 + 20);
            v176 = (char *)v171 + v175;
            id v177 = (char *)v172 + v175;
            if (v158(v177, 1, v156))
            {
              uint64_t v178 = sub_10000EE48(&qword_1000EDF98);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v176, v177, v156);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v176, 0, 1, v156);
            }
            (*(void (**)(void **, void, uint64_t, uint64_t))(v197 + 56))(v171, 0, 1, v193);
            goto LABEL_71;
          }
        }
        else
        {
          if (!v174)
          {
            int v182 = *v171;
            char *v171 = *v172;

            uint64_t v183 = *(int *)(v193 + 20);
            uint64_t v184 = (char *)v171 + v183;
            v185 = (char *)v172 + v183;
            int v186 = v158(v184, 1, v156);
            int v187 = v158(v185, 1, v156);
            if (v186)
            {
              if (!v187)
              {
                (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v184, v185, v156);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v184, 0, 1, v156);
                goto LABEL_71;
              }
            }
            else
            {
              if (!v187)
              {
                (*(void (**)(char *, char *, uint64_t))(v157 + 40))(v184, v185, v156);
                goto LABEL_71;
              }
              (*(void (**)(char *, uint64_t))(v157 + 8))(v184, v156);
            }
            size_t v179 = *(void *)(*(void *)(sub_10000EE48(&qword_1000EDF98) - 8) + 64);
            v180 = (void **)v184;
            int v181 = v185;
LABEL_60:
            memcpy(v180, v181, v179);
LABEL_71:
            uint64_t v188 = *(int *)(v199 + 24);
            uint64_t v189 = *(void **)((char *)v143 + v188);
            *(void **)((char *)v143 + v188) = *(void **)((char *)__src + v188);

            return a1;
          }
          sub_10001B3A8((uint64_t)v171, type metadata accessor for AdjustedImage);
        }
        size_t v179 = *(void *)(*(void *)(sub_10000EE48(&qword_1000EE040) - 8) + 64);
        v180 = v171;
        int v181 = v172;
        goto LABEL_60;
      }
      (*(void (**)(char *, uint64_t))(v157 + 8))(v154, v156);
    }
    uint64_t v169 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v154, v155, *(void *)(*(void *)(v169 - 8) + 64));
    goto LABEL_53;
  }
  if (v144)
  {
LABEL_41:
    uint64_t v151 = sub_10000EE48(&qword_1000EE048);
    memcpy(v143, v139, *(void *)(*(void *)(v151 - 8) + 64));
    return a1;
  }
  uint64_t v196 = v86;
  *uint64_t v143 = *v139;
  uint64_t v145 = *(int *)(v85 + 20);
  id v146 = (char *)v143 + v145;
  uint64_t v147 = (char *)v139 + v145;
  uint64_t v148 = type metadata accessor for URL();
  uint64_t v149 = *(void *)(v148 - 8);
  uint64_t v191 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
  uint64_t v192 = v85;
  if (v191(v147, 1, v148))
  {
    uint64_t v150 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v146, v147, *(void *)(*(void *)(v150 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v146, v147, v148);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
  }
  uint64_t v161 = *(int *)(v199 + 20);
  id v162 = (void **)((char *)v143 + v161);
  uint64_t v163 = (void **)((char *)v139 + v161);
  if (v198((char *)v139 + v161, 1, v192))
  {
    uint64_t v164 = sub_10000EE48(&qword_1000EE040);
    memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
  }
  else
  {
    *id v162 = *v163;
    uint64_t v165 = *(int *)(v192 + 20);
    int v166 = (char *)v162 + v165;
    int v167 = (char *)v163 + v165;
    if (v191(v167, 1, v148))
    {
      uint64_t v168 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v166, v167, v148);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v166, 0, 1, v148);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v162, 0, 1, v192);
  }
  *(void **)((char *)v143 + *(int *)(v199 + 24)) = *(void **)((char *)v139 + *(int *)(v199 + 24));
  (*(void (**)(void **, void, uint64_t, uint64_t))(v141 + 56))(v143, 0, 1, v199);
  return a1;
}

uint64_t sub_10001CC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001CC98);
}

uint64_t sub_10001CC98(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_10000EE48(&qword_1000EE040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[27];
    goto LABEL_9;
  }
  uint64_t v14 = sub_10000EE48(&qword_1000EE048);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[48];

  return v15(v17, a2, v16);
}

uint64_t sub_10001CE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001CE30);
}

uint64_t sub_10001CE30(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_10000EE48(&qword_1000EE040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[27];
    goto LABEL_7;
  }
  uint64_t v14 = sub_10000EE48(&qword_1000EE048);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[48];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for HomePodSetupViewModel(uint64_t a1)
{
  return sub_10001CFD4(a1, (uint64_t *)&unk_1000EE0A8);
}

uint64_t sub_10001CFD4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001D00C()
{
  sub_10001D22C(319, &qword_1000EE0B8, (void (*)(uint64_t))type metadata accessor for AdjustedMovie);
  if (v0 <= 0x3F)
  {
    sub_10001D22C(319, &qword_1000EE0C0, (void (*)(uint64_t))type metadata accessor for AdjustedImage);
    if (v1 <= 0x3F)
    {
      sub_10001D22C(319, (unint64_t *)&unk_1000EE0C8, (void (*)(uint64_t))type metadata accessor for HomePodSetupViewModel.StereoPairImage);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10001D22C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void **sub_10001D280(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v31 = type metadata accessor for AdjustedImage(0);
    uint64_t v8 = *(int *)(v31 + 20);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (void **)((char *)v7 + v16);
    uint64_t v18 = (void **)((char *)a2 + v16);
    uint64_t v19 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))((char *)a2 + v16, 1, v31))
    {
      uint64_t v20 = sub_10000EE48(&qword_1000EE040);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = *v18;
      *uint64_t v17 = *v18;
      uint64_t v22 = *(int *)(v31 + 20);
      __dst = (char *)v17 + v22;
      uint64_t v23 = (char *)v18 + v22;
      id v24 = v21;
      if (v13(v23, 1, v11))
      {
        uint64_t v25 = sub_10000EE48(&qword_1000EDF98);
        memcpy(__dst, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v23, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      (*(void (**)(void **, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v31);
    }
    uint64_t v26 = *(int *)(a3 + 24);
    uint64_t v27 = *(void **)((char *)a2 + v26);
    *(void **)((char *)v7 + v26) = v27;
    id v28 = v27;
  }
  return v7;
}

void sub_10001D5A0(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdjustedImage(0);
  uint64_t v5 = (char *)a1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (id *)((char *)a1 + *(int *)(a2 + 20));
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v9, 1, v4))
  {

    uint64_t v10 = (char *)v9 + *(int *)(v4 + 20);
    if (!v8(v10, 1, v6)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  uint64_t v11 = *(id *)((char *)a1 + *(int *)(a2 + 24));
}

void **sub_10001D70C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for AdjustedImage(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void **)((char *)a1 + v15);
  uint64_t v17 = (void **)((char *)a2 + v15);
  uint64_t v18 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))((char *)a2 + v15, 1, v6))
  {
    uint64_t v19 = sub_10000EE48(&qword_1000EE040);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = *v17;
    void *v16 = *v17;
    uint64_t v21 = *(int *)(v6 + 20);
    __dst = (char *)v16 + v21;
    uint64_t v22 = (char *)v17 + v21;
    id v23 = v20;
    if (v12(v22, 1, v10))
    {
      uint64_t v24 = sub_10000EE48(&qword_1000EDF98);
      memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    (*(void (**)(void **, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v6);
  }
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = *(void **)((char *)a2 + v25);
  *(void **)((char *)a1 + v25) = v26;
  id v27 = v26;
  return a1;
}

void **sub_10001D9D8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *a1;
  *a1 = *a2;
  id v7 = v5;

  uint64_t v8 = type metadata accessor for AdjustedImage(0);
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  uint64_t v47 = v13;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (void **)((char *)a1 + v18);
  uint64_t v20 = (void **)((char *)a2 + v18);
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = a2;
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  int v22 = v21((char *)a1 + v18, 1, v8);
  int v23 = v21((char *)v20, 1, v8);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v33 = *v20;
      uint64_t v34 = *v19;
      void *v19 = *v20;
      id v35 = v33;

      uint64_t v36 = *(int *)(v8 + 20);
      uint64_t v37 = (char *)v19 + v36;
      uint64_t v38 = (char *)v20 + v36;
      int v39 = v14(v37, 1, v12);
      int v40 = v14(v38, 1, v12);
      if (v39)
      {
        uint64_t v30 = v49;
        if (!v40)
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v37, v38, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v37, 0, 1, v12);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v30 = v49;
        if (!v40)
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v37, v38, v12);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v12);
      }
      uint64_t v41 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
      goto LABEL_23;
    }
    sub_10001B3A8((uint64_t)v19, type metadata accessor for AdjustedImage);
    goto LABEL_13;
  }
  if (v23)
  {
LABEL_13:
    uint64_t v32 = sub_10000EE48(&qword_1000EE040);
    memcpy(v19, v20, *(void *)(*(void *)(v32 - 8) + 64));
    uint64_t v30 = v49;
    goto LABEL_23;
  }
  uint64_t v24 = *v20;
  void *v19 = *v20;
  uint64_t v25 = *(int *)(v8 + 20);
  uint64_t v26 = (char *)v19 + v25;
  id v27 = (char *)v20 + v25;
  id v28 = v24;
  int v29 = v14(v27, 1, v12);
  uint64_t v30 = v49;
  if (v29)
  {
    uint64_t v31 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
  }
  (*(void (**)(void **, void, uint64_t, uint64_t))(v48 + 56))(v19, 0, 1, v8);
LABEL_23:
  uint64_t v42 = *(int *)(a3 + 24);
  uint64_t v43 = *(void **)((char *)a1 + v42);
  uint64_t v44 = *(void **)((char *)v30 + v42);
  *(void **)((char *)a1 + v42) = v44;
  id v45 = v44;

  return a1;
}

void *sub_10001DE7C(void *a1, char *a2, uint64_t a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = type metadata accessor for AdjustedImage(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v24 = a3;
  uint64_t v14 = *(int *)(a3 + 20);
  int v15 = (void *)((char *)a1 + v14);
  int v16 = &a2[v14];
  uint64_t v17 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v14], 1, v6))
  {
    uint64_t v18 = sub_10000EE48(&qword_1000EE040);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *int v15 = *(void *)v16;
    uint64_t v19 = *(int *)(v6 + 20);
    __dst = (char *)v15 + v19;
    uint64_t v20 = &v16[v19];
    if (v12(v20, 1, v10))
    {
      uint64_t v21 = sub_10000EE48(&qword_1000EDF98);
      memcpy(__dst, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(__dst, v20, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v6);
  }
  *(void *)((char *)a1 + *(int *)(v24 + 24)) = *(void *)&a2[*(int *)(v24 + 24)];
  return a1;
}

void **sub_10001E13C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = type metadata accessor for AdjustedImage(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v13 = v12(v9, 1, v11);
  int v14 = v12(v10, 1, v11);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v41 = a3;
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (void **)((char *)a1 + v16);
  uint64_t v18 = (void **)((char *)a2 + v16);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v20 = v19((char *)a1 + v16, 1, v7);
  int v21 = v19((char *)v18, 1, v7);
  if (!v20)
  {
    if (!v21)
    {
      int v29 = *v17;
      *uint64_t v17 = *v18;

      uint64_t v30 = *(int *)(v7 + 20);
      uint64_t v31 = (char *)v17 + v30;
      uint64_t v32 = (char *)v18 + v30;
      int v33 = v12(v31, 1, v11);
      int v34 = v12(v32, 1, v11);
      if (v33)
      {
        uint64_t v26 = v41;
        if (!v34)
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v31, v32, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v31, 0, 1, v11);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v26 = v41;
        if (!v34)
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v31, v32, v11);
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v11);
      }
      uint64_t v35 = sub_10000EE48(&qword_1000EDF98);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      goto LABEL_23;
    }
    sub_10001B3A8((uint64_t)v17, type metadata accessor for AdjustedImage);
    goto LABEL_13;
  }
  if (v21)
  {
LABEL_13:
    uint64_t v28 = sub_10000EE48(&qword_1000EE040);
    memcpy(v17, v18, *(void *)(*(void *)(v28 - 8) + 64));
    uint64_t v26 = v41;
    goto LABEL_23;
  }
  *uint64_t v17 = *v18;
  uint64_t v22 = *(int *)(v7 + 20);
  int v23 = (char *)v17 + v22;
  uint64_t v24 = (char *)v18 + v22;
  int v25 = v12(v24, 1, v11);
  uint64_t v26 = v41;
  if (v25)
  {
    uint64_t v27 = sub_10000EE48(&qword_1000EDF98);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v23, v24, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v23, 0, 1, v11);
  }
  (*(void (**)(void **, void, uint64_t, uint64_t))(v39 + 56))(v17, 0, 1, v7);
LABEL_23:
  uint64_t v36 = *(int *)(v26 + 24);
  uint64_t v37 = *(void **)((char *)a1 + v36);
  *(void **)((char *)a1 + v36) = *(void **)((char *)a2 + v36);

  return a1;
}

uint64_t sub_10001E5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001E5E8);
}

uint64_t sub_10001E5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AdjustedImage(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10000EE48(&qword_1000EE040);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_10001E70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001E720);
}

uint64_t sub_10001E720(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AdjustedImage(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10000EE48(&qword_1000EE040);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_10001E834()
{
  type metadata accessor for AdjustedImage(319);
  if (v0 <= 0x3F)
  {
    sub_10001D22C(319, &qword_1000EE0C0, (void (*)(uint64_t))type metadata accessor for AdjustedImage);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10001E920(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_10001EA38(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10001EAB0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10001EB78(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_10001EC40(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10001ECEC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10001EDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001EDB4);
}

uint64_t sub_10001EDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10001EE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001EE78);
}

uint64_t sub_10001EE78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10001EF20()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001EFC8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EDF80);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EDF80);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10001F090()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EDF98);
  __chkstk_darwin(v1);
  int v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = 0x3D6567616D69;
  v22[1] = 0xE600000000000000;
  int v21 = *v0;
  unint64_t v4 = v21;
  sub_10003DD8C(0, &qword_1000EE2E0);
  id v5 = v4;
  v6._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = v22[0];
  uint64_t v9 = (void *)v22[1];
  v22[0] = 0x657473756A64413CLL;
  v22[1] = 0xEF206567616D4964;
  v8._object = v9;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = v22[0];
  uint64_t v10 = v22[1];
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v22, "adjustmentURL=");
  HIBYTE(v22[1]) = -18;
  uint64_t v12 = type metadata accessor for AdjustedImage(0);
  sub_10000FD94((uint64_t)v0 + *(int *)(v12 + 20), (uint64_t)v3, &qword_1000EDF98);
  v13._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t v15 = v22[0];
  uint64_t v16 = (void *)v22[1];
  v22[0] = v11;
  v22[1] = v10;
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = 62;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return v22[0];
}

uint64_t sub_10001F2A0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v42, "fileName=");
  WORD1(v42[1]) = 0;
  HIDWORD(v42[1]) = -385875968;
  uint64_t v5 = *((void *)v0 + 1);
  v41[0] = *(void *)v0;
  v41[1] = v5;
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = v42[0];
  uint64_t v9 = (void *)v42[1];
  v42[0] = 0x657473756A64413CLL;
  v42[1] = 0xEF206569766F4D64;
  v8._object = v9;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = v42[0];
  uint64_t v10 = v42[1];
  v42[0] = 0;
  v42[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v42, "adjustmentURL=");
  HIBYTE(v42[1]) = -18;
  uint64_t v12 = (int *)type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v0[v12[5]], v1);
  v13._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t v15 = v42[0];
  uint64_t v16 = (void *)v42[1];
  v42[0] = v11;
  v42[1] = v10;
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v42[0];
  uint64_t v18 = v42[1];
  v42[0] = 0x3D6874646977;
  v42[1] = 0xE600000000000000;
  v41[0] = *(void *)&v0[v12[6]];
  v20._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  uint64_t v22 = v42[0];
  int v23 = (void *)v42[1];
  v42[0] = v19;
  v42[1] = v18;
  swift_bridgeObjectRetain();
  v24._uint64_t countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v42[0];
  uint64_t v25 = v42[1];
  strcpy((char *)v42, "height=");
  v42[1] = 0xE700000000000000;
  v41[0] = *(void *)&v0[v12[7]];
  v27._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 32;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  uint64_t v29 = v42[0];
  uint64_t v30 = (void *)v42[1];
  v42[0] = v26;
  v42[1] = v25;
  swift_bridgeObjectRetain();
  v31._uint64_t countAndFlagsBits = v29;
  v31._object = v30;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v42[0];
  uint64_t v32 = v42[1];
  v42[0] = 0;
  v42[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v42, "productHeight=");
  HIBYTE(v42[1]) = -18;
  v41[0] = *(void *)&v0[v12[8]];
  v34._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 32;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  uint64_t v36 = v42[0];
  uint64_t v37 = (void *)v42[1];
  v42[0] = v33;
  v42[1] = v32;
  swift_bridgeObjectRetain();
  v38._uint64_t countAndFlagsBits = v36;
  v38._object = v37;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v39._uint64_t countAndFlagsBits = 62;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  return v42[0];
}

void sub_10001F674(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 1:
      sub_10002110C(a1, a5);
      break;
    case 2:
      sub_1000216D0(a1, a5);
      break;
    case 3:
      sub_10002BF80(a1, a3 | ((HIDWORD(a3) & 1) << 32), (uint64_t)a5);
      break;
    case 4:
      sub_10002C83C(a1, a3 | ((HIDWORD(a3) & 1) << 32), a4, a5);
      break;
    case 5:
      sub_10002D43C(a1, a3 | ((HIDWORD(a3) & 1) << 32), a5);
      break;
    case 6:
      sub_100026B68(a5);
      break;
    case 7:
      sub_1000273D8(a5);
      break;
    case 8:
      sub_100028A40(a5);
      break;
    case 9:
      sub_100035F50(a1, a5);
      break;
    case 10:
      sub_10002AFCC(a5);
      break;
    case 11:
      sub_100026320(a1, a5);
      break;
    case 12:
    case 13:
      sub_100039DD4(a1, a5);
      break;
    case 14:
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = sub_100007334(v25);

      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v28;
      uint64_t v39 = v27;

      uint64_t v29 = type metadata accessor for AdjustedMovie(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
      sub_10003DB28(a1);
      uint64_t v31 = v30;
      uint64_t v32 = type metadata accessor for AdjustedImage(0);
      long long v56 = 0u;
      long long v57 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
      long long v60 = 0u;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 1, 1, v32);
      uint64_t v33 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
      uint64_t v43 = 0;
      long long v41 = 0u;
      long long v42 = 0u;
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = String._bridgeToObjectiveC()();
      uint64_t Int64 = CFPrefs_GetInt64();

      sub_100067438((uint64_t *)&v44);
      long long v50 = v44;
      long long v51 = v45;
      long long v52 = v46;
      long long v53 = v47;
      char v40 = 1;
      uint64_t v54 = v48;
      uint64_t v55 = v49;
      sub_10003A618(v39, v38, 0, 0xE000000000000000, (uint64_t)v18, 0, 0xE000000000000000, 0, a5, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v31, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v41,
        (uint64_t)_swiftEmptyArrayStorage,
        (uint64_t)_swiftEmptyArrayStorage,
        Int64 != 0,
        v37,
        0,
        1,
        1,
        (uint64_t)&v50,
        (uint64_t)&v56,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        (uint64_t)v15,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0,
        (uint64_t)v12);
      break;
    case 15:
      sub_100021F10(a1, a5);
      break;
    case 16:
      sub_100022CB8(a5);
      break;
    case 17:
      sub_1000230D8(a5);
      break;
    case 18:
      sub_100023574(a1, (uint64_t)a5);
      break;
    case 19:
    case 24:
    case 48:
    case 58:
      uint64_t v19 = type metadata accessor for AdjustedMovie(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
      uint64_t v20 = type metadata accessor for AdjustedImage(0);
      long long v56 = 0u;
      long long v57 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
      long long v60 = 0u;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 1, 1, v20);
      uint64_t v21 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
      uint64_t v43 = 0;
      long long v41 = 0u;
      long long v42 = 0u;
      NSString v22 = String._bridgeToObjectiveC()();
      NSString v23 = String._bridgeToObjectiveC()();
      uint64_t v24 = CFPrefs_GetInt64();

      sub_100067438((uint64_t *)&v44);
      long long v50 = v44;
      long long v51 = v45;
      long long v52 = v46;
      long long v53 = v47;
      char v40 = 1;
      uint64_t v54 = v48;
      uint64_t v55 = v49;
      sub_10003A618(0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v18, 0, 0xE000000000000000, 0, a5, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v41,
        (uint64_t)_swiftEmptyArrayStorage,
        (uint64_t)_swiftEmptyArrayStorage,
        v24 != 0,
        v37,
        0,
        1,
        1,
        (uint64_t)&v50,
        (uint64_t)&v56,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        (uint64_t)v15,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0,
        (uint64_t)v12);
      break;
    case 20:
      sub_100024024(a1, a5);
      break;
    case 21:
      sub_1000245E4(a5);
      break;
    case 22:
      sub_10002A604(a1, a5);
      break;
    case 23:
      sub_10002B550(a5);
      break;
    case 25:
      sub_100025C70(a1, a5);
      break;
    case 26:
      sub_100036D20(a5);
      break;
    case 27:
      sub_100035B2C(a5);
      break;
    case 28:
      sub_10002E490(a5);
      break;
    case 29:
      sub_10002ECC4(a5);
      break;
    case 30:
      sub_10002F2C0(a5);
      break;
    case 31:
      sub_10002F948(a5);
      break;
    case 32:
      sub_10002FEE0(a1, a5);
      break;
    case 33:
      sub_100030424(a1, a5);
      break;
    case 34:
      sub_1000310C8(a1, a5);
      break;
    case 35:
      sub_100030AA8(a1, a5);
      break;
    case 36:
      sub_100032434(a5);
      break;
    case 37:
      sub_100032CA8(a5);
      break;
    case 38:
      sub_1000334B4(a5);
      break;
    case 39:
      sub_100033D60(a5);
      break;
    case 40:
      sub_10003435C(a5);
      break;
    case 41:
      sub_100034A50(a1, a5);
      break;
    case 42:
      sub_100035150(a5);
      break;
    case 43:
      sub_1000356E8(a5);
      break;
    case 44:
      sub_1000316C0(a5);
      break;
    case 45:
      sub_1000364F4(a1, a5);
      break;
    case 46:
      sub_10002D8F0(a1, a5);
      break;
    case 47:
      sub_10002DF6C(a1, a5);
      break;
    case 49:
      sub_10002841C(a1, a5);
      break;
    case 50:
      sub_100027AA4(a1, a5);
      break;
    case 51:
      sub_100031D2C(a5);
      break;
    case 52:
      sub_100028F9C(a1, a4, a5);
      break;
    case 53:
      sub_10002970C(a1, a4, a5);
      break;
    case 54:
      sub_100039474(a1, a4, a5);
      break;
    case 55:
      sub_100038A20(a1, a4, a5);
      break;
    case 56:
      sub_100024A04(a1, a5);
      break;
    case 57:
      sub_10002BABC(a5);
      break;
    case 59:
      sub_100037454(a5);
      break;
    case 60:
      sub_1000378B0(a5);
      break;
    case 61:
      sub_1000381B4(a1, a5);
      break;
    case 62:
      sub_100037D10(a1, a5);
      break;
    default:
      sub_1000209E4(a1, a5);
      break;
  }
}

uint64_t sub_1000209E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v57 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  long long v56 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  uint64_t v55 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EDF98);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v53 - 8);
  uint64_t v11 = __chkstk_darwin(v53);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v52 = (char *)&v50 - v14;
  uint64_t v15 = sub_10000EE48(&qword_1000EE038);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v58 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v54 = (uint64_t *)((char *)&v50 - v18);
  if (*(unsigned char *)(a1 + 69)) {
    char v19 = 8;
  }
  else {
    char v19 = 9;
  }
  sub_10005A4D4(v19);
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000B0850;
  *(void *)(v25 + 32) = v22;
  *(void *)(v25 + 40) = v24;
  uint64_t v26 = a1;
  *(void *)(v25 + 48) = 0;
  uint64_t v27 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
  *(unsigned char *)(v25 + 56) = 1;
  id v28 = [v27 URLForResource:SFDeviceAssetNameAdjustments withExtension:0];
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, 1, 1, v53);
    goto LABEL_14;
  }
  uint64_t v29 = v28;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v31 = v53;
  v30(v9, v13, v53);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v31) == 1)
  {
LABEL_14:
    sub_10000F674((uint64_t)v9, &qword_1000EDF98);
    uint64_t v40 = type metadata accessor for AdjustedMovie(0);
    uint64_t v39 = v54;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v54, 1, 1, v40);
    goto LABEL_15;
  }
  uint64_t v32 = v52;
  v30(v52, v9, v31);
  uint64_t v33 = qword_1000B0860[*(unsigned char *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5];
  if (*(unsigned char *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5) {
    double v34 = 150.0;
  }
  else {
    double v34 = 200.0;
  }
  if (*(unsigned char *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5) {
    double v35 = 260.0;
  }
  else {
    double v35 = 291.333333;
  }
  uint64_t v51 = v26;
  uint64_t v37 = *(void *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName);
  uint64_t v36 = *(void *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName + 8);
  uint64_t v38 = (int *)type metadata accessor for AdjustedMovie(0);
  uint64_t v39 = v54;
  v30((char *)v54 + v38[5], v32, v31);
  void *v39 = v37;
  v39[1] = v36;
  *(void *)((char *)v39 + v38[6]) = v33;
  *(double *)((char *)v39 + v38[7]) = v35;
  *(double *)((char *)v39 + v38[8]) = v34;
  (*(void (**)(void *, void, uint64_t, int *))(*((void *)v38 - 1) + 56))(v39, 0, 1, v38);
  uint64_t v26 = v51;
  swift_bridgeObjectRetain();
LABEL_15:
  uint64_t v41 = *(void *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  uint64_t v53 = *(void *)(v26 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8);
  uint64_t v54 = (void *)v41;
  sub_10000FD94((uint64_t)v39, v58, &qword_1000EE038);
  memset(v68, 0, 80);
  swift_bridgeObjectRetain();
  uint64_t v42 = v55;
  sub_1000501E0(0, 0, v55);
  uint64_t v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v44 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v56, 1, 1, v43);
  uint64_t v61 = 0;
  memset(v60, 0, sizeof(v60));
  NSString v45 = String._bridgeToObjectiveC()();
  NSString v46 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v62);
  v65[0] = v62[0];
  v65[1] = v62[1];
  v65[2] = v62[2];
  v65[3] = v62[3];
  uint64_t v66 = v63;
  uint64_t v67 = v64;
  sub_10000F674((uint64_t)v39, &qword_1000EE038);
  char v59 = 1;
  return sub_10003A618((uint64_t)v54, v53, 0, 0xE000000000000000, v58, 0, 0xE000000000000000, 0, v57, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v25, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v60,
           (uint64_t)&_swiftEmptyArrayStorage,
           (uint64_t)&_swiftEmptyArrayStorage,
           Int64 != 0,
           v49,
           0,
           1,
           1,
           (uint64_t)v65,
           (uint64_t)v68,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v42,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v44);
}

uint64_t sub_10002110C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  NSString v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (unint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v15;
  uint64_t v45 = v14;

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1000B0850;
  *(void *)(v21 + 32) = v18;
  *(void *)(v21 + 40) = v20;
  *(void *)(v21 + 48) = 0;
  *(unsigned char *)(v21 + 56) = 1;
  uint64_t v42 = a1;
  unint64_t v22 = *(void *)(a1 + 40);
  long long v47 = a2;
  if (!v22)
  {
    uint64_t v27 = 0;
    goto LABEL_14;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (v23) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v27 = &_swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_13;
  }
LABEL_4:
  v58[0] = &_swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if (v23 < 0) {
    goto LABEL_25;
  }
  uint64_t v41 = v8;
  uint64_t v43 = v11;
  uint64_t v25 = 0;
  do
  {
    if ((v22 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v26 = *(id *)(v22 + 8 * v25 + 32);
    }
    ++v25;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v23 != v25);
  uint64_t v27 = (void *)v58[0];
  swift_bridgeObjectRelease();
  uint64_t v11 = v43;
  uint64_t v8 = v41;
LABEL_14:
  uint64_t v28 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 1, 1, v28);
  if (v27) {
    uint64_t v29 = v27;
  }
  else {
    uint64_t v29 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10008BE84((uint64_t)v29);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v43 = v30;
  if (!v27)
  {
    uint64_t v51 = 0;
    long long v49 = 0u;
    long long v50 = 0u;
    goto LABEL_22;
  }
  unint64_t v31 = *(void *)(v42 + 72);
  *((void *)&v50 + 1) = &type metadata for HomeOption;
  uint64_t v51 = &off_1000DD698;
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v31 < *((void *)v27 + 2))
  {
    id v32 = *((id *)v27 + v31 + 4);
    swift_bridgeObjectRelease();
    *(void *)&long long v49 = v32;
LABEL_22:
    uint64_t v33 = type metadata accessor for AdjustedImage(0);
    memset(v58, 0, 80);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
    uint64_t v34 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    uint64_t v35 = (uint64_t)v8;
    uint64_t v36 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v46, 1, 1, v34);
    NSString v37 = String._bridgeToObjectiveC()();
    NSString v38 = String._bridgeToObjectiveC()();
    uint64_t Int64 = CFPrefs_GetInt64();

    sub_100067438((uint64_t *)v52);
    v55[0] = v52[0];
    v55[1] = v52[1];
    v55[2] = v52[2];
    v55[3] = v52[3];
    char v48 = 1;
    uint64_t v56 = v53;
    uint64_t v57 = v54;
    return sub_10003A618(v45, v44, 0, 0xE000000000000000, (uint64_t)v11, 0, 0xE000000000000000, 0, v47, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v21, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v43, (uint64_t)&v49,
             (uint64_t)&_swiftEmptyArrayStorage,
             (uint64_t)&_swiftEmptyArrayStorage,
             Int64 != 0,
             v40,
             0,
             1,
             1,
             (uint64_t)v55,
             (uint64_t)v58,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             v35,
             0,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             v36);
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1000216D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v78 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  uint64_t v80 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)type metadata accessor for IndexPath();
  uint64_t v73 = *(v11 - 1);
  uint64_t v74 = v11;
  __chkstk_darwin(v11);
  uint64_t v72 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000EE48(&qword_1000EE3C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v76 = v19;
  uint64_t v77 = v18;

  uint64_t v20 = a1;
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000B0850;
  *(void *)(v26 + 32) = v23;
  *(void *)(v26 + 40) = v25;
  *(void *)(v26 + 48) = 0;
  uint64_t v75 = v26;
  *(unsigned char *)(v26 + 56) = 1;
  uint64_t v27 = *(void *)(v20 + 48);
  uint64_t v79 = a2;
  if (v27)
  {
    int64_t v28 = *(void *)(v27 + 16);
    uint64_t v29 = _swiftEmptyArrayStorage;
    if (v28)
    {
      uint64_t v69 = v15;
      uint64_t v70 = v20;
      uint64_t v71 = v8;
      v91[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10008E9A0(0, v28, 0);
      uint64_t v29 = (void *)v91[0];
      uint64_t v68 = v27;
      uint64_t v30 = (uint64_t *)(v27 + 40);
      do
      {
        uint64_t v32 = *(v30 - 1);
        uint64_t v31 = *v30;
        v91[0] = v29;
        unint64_t v34 = v29[2];
        unint64_t v33 = v29[3];
        swift_bridgeObjectRetain();
        if (v34 >= v33 >> 1)
        {
          sub_10008E9A0(v33 > 1, v34 + 1, 1);
          uint64_t v29 = (void *)v91[0];
        }
        _OWORD v29[2] = v34 + 1;
        uint64_t v35 = &v29[4 * v34];
        *((unsigned char *)v35 + 32) = 0;
        v30 += 2;
        v35[5] = v32;
        v35[6] = v31;
        *((unsigned char *)v35 + 56) = 1;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v20 = v70;
      uint64_t v8 = v71;
      uint64_t v15 = v69;
    }
  }
  else
  {
    uint64_t v29 = _swiftEmptyArrayStorage;
  }
  uint64_t v36 = _swiftEmptyArrayStorage;
  if (*(void *)(v20 + 56))
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v36 = sub_10003D2D4(v37, (uint64_t)v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v91[0] = v29;
  swift_bridgeObjectRetain();
  uint64_t v38 = swift_bridgeObjectRetain();
  sub_10003D11C(v38);
  uint64_t v39 = v91[0];
  if (!*(void *)(v91[0] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    char v52 = 0;
    uint64_t v48 = (uint64_t)v80;
    goto LABEL_21;
  }
  sub_10000EE48(&qword_1000EE3C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000AF6D0;
  uint64_t v41 = v29[2];
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v41;
  uint64_t v42 = v36[2];
  swift_bridgeObjectRelease();
  *(void *)(inited + 40) = v42;
  uint64_t v43 = v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  swift_beginAccess();
  sub_10000FD94(v43, (uint64_t)v15, &qword_1000EE3C0);
  uint64_t v44 = v73;
  uint64_t v45 = v74;
  if (!(*(unsigned int (**)(char *, uint64_t, void *))(v73 + 48))(v15, 1, v74))
  {
    uint64_t v53 = (uint64_t)v15;
    uint64_t v54 = v72;
    (*(void (**)(char *, uint64_t, void *))(v44 + 16))(v72, v53, v45);
    sub_10000F674(v53, &qword_1000EE3C0);
    uint64_t v55 = v44;
    unint64_t v47 = sub_10004B774(inited);
    LOBYTE(v53) = v56;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, void *))(v55 + 8))(v54, v45);
    uint64_t v48 = (uint64_t)v80;
    if ((v53 & 1) == 0)
    {
      if ((v47 & 0x8000000000000000) == 0) {
        goto LABEL_19;
      }
      __break(1u);
    }
    unint64_t v47 = 0;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_10000F674((uint64_t)v15, &qword_1000EE3C0);
  unint64_t v47 = 0;
  uint64_t v48 = (uint64_t)v80;
LABEL_19:
  if (v47 >= *(void *)(v39 + 16))
  {
    __break(1u);
    return result;
  }
  unint64_t v57 = v39 + 32 * v47;
  char v49 = *(unsigned char *)(v57 + 32);
  uint64_t v50 = *(void *)(v57 + 40);
  uint64_t v51 = *(void *)(v57 + 48);
  char v52 = *(unsigned char *)(v57 + 56);
  swift_bridgeObjectRetain();
LABEL_21:
  uint64_t v58 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v48, 1, 1, v58);
  uint64_t v74 = sub_10008BE98(v39);
  swift_bridgeObjectRelease();
  if (v51)
  {
    *((void *)&v83 + 1) = &type metadata for RoomOption;
    uint64_t v84 = &off_1000DD648;
    uint64_t v59 = swift_allocObject();
    *(void *)&long long v82 = v59;
    *(unsigned char *)(v59 + 16) = v49;
    *(void *)(v59 + 24) = v50;
    *(void *)(v59 + 32) = v51;
    *(unsigned char *)(v59 + 40) = v52;
  }
  else
  {
    uint64_t v84 = 0;
    long long v82 = 0u;
    long long v83 = 0u;
  }
  uint64_t v60 = type metadata accessor for AdjustedImage(0);
  memset(v91, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v8, 1, 1, v60);
  uint64_t v61 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v62 = (uint64_t)v8;
  uint64_t v63 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v78, 1, 1, v61);
  NSString v64 = String._bridgeToObjectiveC()();
  NSString v65 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v85);
  v88[0] = v85[0];
  v88[1] = v85[1];
  v88[2] = v85[2];
  v88[3] = v85[3];
  char v81 = 1;
  uint64_t v89 = v86;
  uint64_t v90 = v87;
  return sub_10003A618(v77, v76, 0, 0xE000000000000000, v48, 0, 0xE000000000000000, 0, v79, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v75, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v74, (uint64_t)&v82,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v67,
           0,
           1,
           1,
           (uint64_t)v88,
           (uint64_t)v91,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v62,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v63);
}

uint64_t sub_100021F10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v119 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v118 = (char *)v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  uint64_t v117 = (char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v121 = (uint64_t)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v115 = v12;
  uint64_t v116 = v11;

  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = sub_100007614();

  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v125 = v16;
  uint64_t v126 = v18;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v111 = v22;
  uint64_t v112 = v21;

  id v23 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline];
  id v24 = [v23 fontDescriptorWithSymbolicTraits:2];

  *(void *)&v130[0] = v24;
  sub_10000EE48(&qword_1000EE3D0);
  Optional.unwrap(_:file:line:)();

  id v25 = v133[0];
  [v25 pointSize];
  id v27 = [self fontWithDescriptor:v25 size:v26];
  id v114 = v25;

  *(void *)&long long v109 = sub_10000EE48(&qword_1000EE3D8);
  uint64_t inited = swift_initStackObject();
  long long v108 = xmmword_1000AF6D0;
  *(_OWORD *)(inited + 16) = xmmword_1000AF6D0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v29 = sub_10003DD8C(0, &qword_1000EE3E0);
  *(void *)(inited + 40) = v27;
  *(void *)(inited + 64) = v29;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v30 = self;
  *(void *)&long long v107 = NSFontAttributeName;
  id v31 = v27;
  uint64_t v106 = NSForegroundColorAttributeName;
  id v32 = [v30 labelColor];
  uint64_t v33 = sub_10003DD8C(0, (unint64_t *)&unk_1000EE3E8);
  *(void *)(inited + 104) = v33;
  *(void *)(inited + 80) = v32;
  *(void *)&long long v110 = sub_10000DE44(inited);
  char v34 = *(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled);
  id v120 = v31;
  if (v34)
  {
    int v35 = 0;
  }
  else
  {
    int v35 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods) ^ 1;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) == 1
      && (v35 & 1) != 0)
    {
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = sub_100007334(v36);

      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10000EE48(&qword_1000EE398);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1000B0850;
      uint64_t v40 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
      uint64_t v39 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
      *(void *)(v38 + 56) = &type metadata for String;
      *(void *)(v38 + 64) = sub_10003D0C8();
      *(void *)(v38 + 32) = v40;
      *(void *)(v38 + 40) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = String.init(format:_:)();
      uint64_t v43 = v42;
      swift_bridgeObjectRelease();
      v133[0] = (id)2570;
      v133[1] = (id)0xE200000000000000;
      v44._uint64_t countAndFlagsBits = v41;
      v44._object = v43;
      String.append(_:)(v44);
      id v31 = v120;
      swift_bridgeObjectRelease();
      String.append(_:)(*(Swift::String *)v133);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v35 = 1;
    }
  }
  uint64_t v45 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId + 8);
  NSString v46 = (void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  uint64_t v47 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId + 8);
  LODWORD(v113) = v35;
  if (v45)
  {
    if (v47)
    {
      if (*(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId) == *v46 && v45 == v47) {
        goto LABEL_16;
      }
      uint64_t v48 = (void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      NSString v46 = v48;
      if (v49) {
        goto LABEL_16;
      }
    }
LABEL_17:
    v105[2] = v46;
    uint64_t v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = v108;
    uint64_t v55 = (void *)v107;
    *(void *)(v54 + 32) = v107;
    *(void *)(v54 + 40) = v31;
    *(void *)(v54 + 64) = v29;
    char v56 = v106;
    *(void *)(v54 + 72) = v106;
    id v57 = v31;
    id v58 = v55;
    uint64_t v59 = v56;
    id v60 = [v30 secondaryLabelColor];
    *(void *)(v54 + 104) = v33;
    *(void *)(v54 + 80) = v60;
    sub_10000DE44(v54);
    NSString v61 = String._bridgeToObjectiveC()();
    id v62 = sub_100007334(v61);

    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v65 = v64;

    v133[0] = (id)v63;
    v133[1] = v65;
    swift_bridgeObjectRetain();
    v66._uint64_t countAndFlagsBits = 32;
    v66._object = (void *)0xE100000000000000;
    String.append(_:)(v66);
    swift_bridgeObjectRelease();
    NSString v67 = String._bridgeToObjectiveC()();
    id v68 = sub_100007334(v67);

    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v71 = v70;

    v133[0] = (id)10;
    v133[1] = (id)0xE100000000000000;
    v72._uint64_t countAndFlagsBits = v69;
    v72._object = v71;
    String.append(_:)(v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v73._uint64_t countAndFlagsBits = 32;
    v73._object = (void *)0xE100000000000000;
    String.append(_:)(v73);
    swift_bridgeObjectRelease();
    uint64_t v106 = (NSString *)v133[1];
    *(id *)&long long v107 = v133[0];
    id v74 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    unint64_t v76 = sub_10003DC6C();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v109 = [v74 initWithString:v75 attributes:isa];

    id v78 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v79 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v105[1] = v76;
    Class v80 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v108 = [v78 initWithString:v79 attributes:v80];

    id v81 = objc_allocWithZone((Class)NSAttributedString);
    NSString v82 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v83 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v51 = [v81 initWithString:v82 attributes:v83];

    id v84 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v85 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v86 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v52.super.Class isa = (Class)[v84 initWithString:v85 attributes:v86];

    id v53 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
    uint64_t v87 = (void *)v109;
    [v53 appendAttributedString:(void)v109];
    int v88 = (void *)v108;
    [v53 appendAttributedString:(void)v108];
    [v53 appendAttributedString:v51];
    [v53 appendAttributedString:v52.super.isa];

    goto LABEL_18;
  }
  if (v47) {
    goto LABEL_17;
  }
LABEL_16:
  id v50 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10003DC6C();
  v52.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v53 = [v50 initWithString:v51 attributes:v52.super.isa];
LABEL_18:
  uint64_t v90 = v111;
  uint64_t v89 = v112;

  uint64_t v91 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v121, 1, 1, v91);
  uint64_t v111 = v126;
  uint64_t v112 = v125;
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_1000B0850;
  *(void *)(v92 + 32) = v89;
  *(void *)(v92 + 40) = v90;
  *(void *)(v92 + 48) = 0;
  *(unsigned char *)(v92 + 56) = 1;
  uint64_t v113 = (uint64_t)sub_10003D3D4(v113 & 1);
  uint64_t v93 = type metadata accessor for AdjustedImage(0);
  memset(v133, 0, 80);
  uint64_t v94 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v117, 1, 1, v93);
  uint64_t v95 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v96 = (uint64_t)v118;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v118, 1, 1, v95);
  uint64_t v124 = 0;
  memset(v123, 0, sizeof(v123));
  id v97 = v53;
  NSString v98 = String._bridgeToObjectiveC()();
  NSString v99 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v98) = Int64 != 0;
  sub_100067438((uint64_t *)v127);
  long long v109 = v127[1];
  long long v110 = v127[0];
  long long v107 = v127[3];
  long long v108 = v127[2];
  uint64_t v101 = v128;
  uint64_t v102 = v129;

  v130[0] = v110;
  v130[1] = v109;
  v130[2] = v108;
  v130[3] = v107;
  uint64_t v131 = v101;
  uint64_t v132 = v102;
  char v122 = 1;
  return sub_10003A618(v116, v115, 0, 0xE000000000000000, v121, v112, v111, 0, v119, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v92, v113, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v123,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v98,
           v104,
           0,
           1,
           1,
           (uint64_t)v130,
           (uint64_t)v133,
           0,
           (uint64_t)v53,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v94,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v96);
}

uint64_t sub_100022CB8@<X0>(void *a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v13;
  uint64_t v29 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000B0850;
  *(void *)(v19 + 32) = v16;
  *(void *)(v19 + 40) = v18;
  *(void *)(v19 + 48) = 1;
  *(unsigned char *)(v19 + 56) = 10;
  uint64_t v20 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
  uint64_t v21 = type metadata accessor for AdjustedImage(0);
  memset(v40, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  uint64_t v22 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v3, 1, 1, v22);
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v34);
  v37[0] = v34[0];
  v37[1] = v34[1];
  v37[2] = v34[2];
  v37[3] = v34[3];
  char v31 = 1;
  uint64_t v38 = v35;
  uint64_t v39 = v36;
  return sub_10003A618(v29, v28, 0, 0xE000000000000000, (uint64_t)v9, 0, 0xE000000000000000, 0, v30, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v19, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v32,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v27,
           0,
           1,
           1,
           (uint64_t)v37,
           (uint64_t)v40,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_1000230D8@<X0>(void *a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = v13;
  uint64_t v41 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v17;
  uint64_t v39 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  uint64_t v23 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = sub_100007334(v24);

  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1000B0850;
  *(void *)(v28 + 32) = v20;
  *(void *)(v28 + 40) = v22;
  *(void *)(v28 + 48) = 0;
  *(unsigned char *)(v28 + 56) = 11;
  uint64_t v29 = type metadata accessor for AdjustedImage(0);
  memset(v52, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
  uint64_t v30 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v3, 1, 1, v30);
  uint64_t v45 = 0;
  memset(v44, 0, sizeof(v44));
  NSString v31 = String._bridgeToObjectiveC()();
  NSString v32 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v46);
  v49[0] = v46[0];
  v49[1] = v46[1];
  v49[2] = v46[2];
  v49[3] = v46[3];
  char v43 = 1;
  uint64_t v50 = v47;
  uint64_t v51 = v48;
  return sub_10003A618(v41, v40, v39, v38, (uint64_t)v9, 0, 0xE000000000000000, 0, v42, 0.0, 0.0, 0.0, 0xE000000000000000, v37, v27, v28, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v44,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v35,
           0,
           1,
           1,
           (uint64_t)v49,
           (uint64_t)v52,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_100023574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v92 = a1;
  uint64_t v2 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v2 - 8);
  uint64_t v89 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for HomePodSetupViewModel(0);
  __chkstk_darwin(v93);
  uint64_t v94 = (uint64_t *)((char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000EE48(&qword_1000EE048);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  int v88 = (char *)&v79 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v79 - v11;
  __chkstk_darwin(v10);
  NSString v14 = (char *)&v79 - v13;
  uint64_t v15 = sub_10000EE48(&qword_1000EE040);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v81 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v90 = (uint64_t)&v79 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v85 = (uint64_t)&v79 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v79 - v22;
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = sub_100007334(v24);

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v86 = v27;
  uint64_t v87 = v26;

  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v83 = v31;
  uint64_t v84 = v30;

  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = sub_100007334(v32);

  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = sub_100007334(v37);

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1000AF6D0;
  *(void *)(v42 + 32) = v34;
  *(void *)(v42 + 40) = v36;
  *(void *)(v42 + 48) = 0;
  *(unsigned char *)(v42 + 56) = 4;
  *(void *)(v42 + 64) = v39;
  *(void *)(v42 + 72) = v41;
  *(void *)(v42 + 80) = 1;
  *(unsigned char *)(v42 + 88) = 5;
  int v43 = *(unsigned __int8 *)(v92 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
  uint64_t v95 = v14;
  if (v43 == 5)
  {
    sub_10003AA58(v92, 0, 1, (uint64_t)v14);
    sub_10000FD94((uint64_t)v14, (uint64_t)v12, &qword_1000EE048);
    uint64_t v44 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    int v45 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v44 - 8) + 48))(v12, 1);
    sub_10000F674((uint64_t)v12, &qword_1000EE048);
    if (v45 == 1)
    {
      uint64_t v46 = (uint64_t)v23;
      if (qword_1000ED730 != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      sub_1000133A0(v47, (uint64_t)qword_1000EDF80);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "createStereoPairViewModel: stereoPairImages are nil", v50, 2u);
        swift_slowDealloc();
      }

      sub_1000501E0(0, 1, (uint64_t)v23);
    }
    else
    {
      uint64_t v52 = type metadata accessor for AdjustedImage(0);
      uint64_t v46 = (uint64_t)v23;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v23, 1, 1, v52);
    }
    uint64_t v51 = v44;
  }
  else
  {
    sub_1000501E0(0, 1, (uint64_t)v23);
    uint64_t v51 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v14, 1, 1, v51);
    uint64_t v46 = (uint64_t)v23;
  }
  uint64_t v53 = type metadata accessor for AdjustedMovie(0);
  uint64_t v54 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v89, 1, 1, v53);
  memset(v105, 0, 80);
  uint64_t v55 = v85;
  sub_10000FD94(v46, v85, &qword_1000EE040);
  type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v80 = *(void *)(v51 - 8);
  char v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
  uint64_t v57 = (uint64_t)v88;
  uint64_t v92 = v51;
  v56(v88, 1, 1, v51);
  uint64_t v98 = 0;
  memset(v97, 0, sizeof(v97));
  NSString v58 = String._bridgeToObjectiveC()();
  NSString v59 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v99);
  v102[0] = v99[0];
  v102[1] = v99[1];
  v102[2] = v99[2];
  v102[3] = v99[3];
  char v96 = 1;
  uint64_t v103 = v100;
  uint64_t v104 = v101;
  NSString v61 = v94;
  sub_10003A618(v87, v86, v84, v83, v54, 0, 0xE000000000000000, 0, v94, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v42, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v97,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v78,
    0,
    1,
    1,
    (uint64_t)v102,
    (uint64_t)v105,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v55,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v57);
  sub_10003DCC4((uint64_t)v95, (uint64_t)v61 + *(int *)(v93 + 192), &qword_1000EE048);
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for Logger();
  sub_1000133A0(v62, (uint64_t)qword_1000EDF80);
  uint64_t v63 = v90;
  sub_10000FD94(v46, v90, &qword_1000EE040);
  NSString v64 = Logger.logObject.getter();
  os_log_type_t v65 = static os_log_type_t.default.getter();
  int v66 = v65;
  uint64_t v67 = v46;
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 67109376;
    LODWORD(v89) = v66;
    uint64_t v69 = v81;
    sub_10000FD94(v63, v81, &qword_1000EE040);
    uint64_t v70 = type metadata accessor for AdjustedImage(0);
    BOOL v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v69, 1, v70) != 1;
    sub_10000F674(v69, &qword_1000EE040);
    sub_10000F674(v63, &qword_1000EE040);
    v97[0] = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v68 + 8) = 1024;
    Swift::String v72 = v94;
    swift_beginAccess();
    uint64_t v73 = v67;
    uint64_t v74 = v82;
    sub_10000FD94((uint64_t)v72 + *(int *)(v93 + 192), v82, &qword_1000EE048);
    BOOL v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v74, 1, v92) != 1;
    uint64_t v76 = v74;
    uint64_t v67 = v73;
    sub_10000F674(v76, &qword_1000EE048);
    v97[0] = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v89, "createStereoPairViewModel: productImage exists = %{BOOL}d | stereoPairImages exists = %{BOOL}d", (uint8_t *)v68, 0xEu);
    swift_slowDealloc();
  }
  else
  {
    sub_10000F674(v63, &qword_1000EE040);
    Swift::String v72 = v94;
  }

  sub_10000F674((uint64_t)v95, &qword_1000EE048);
  sub_10000F674(v67, &qword_1000EE040);
  swift_beginAccess();
  sub_10003DDC8((uint64_t)v72, v91, type metadata accessor for HomePodSetupViewModel);
  return sub_10001B3A8((uint64_t)v72, type metadata accessor for HomePodSetupViewModel);
}

uint64_t sub_100024024@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  uint64_t v51 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v14;
  uint64_t v48 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000AF6D0;
  *(void *)(v25 + 32) = v17;
  *(void *)(v25 + 40) = v19;
  *(void *)(v25 + 48) = 0;
  *(unsigned char *)(v25 + 56) = 1;
  *(void *)(v25 + 64) = v22;
  *(void *)(v25 + 72) = v24;
  *(void *)(v25 + 80) = 1;
  *(unsigned char *)(v25 + 88) = 2;
  uint64_t v26 = (unint64_t *)OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories;
  uint64_t v46 = a1;
  unint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories);
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v52 = a2;
  uint64_t v50 = v6;
  if (!v28)
  {
    swift_bridgeObjectRelease();
    NSString v32 = _swiftEmptyArrayStorage;
LABEL_12:
    uint64_t v33 = type metadata accessor for AdjustedMovie(0);
    uint64_t v34 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v51, 1, 1, v33);
    int v45 = sub_10008BFC0((uint64_t)v32);
    swift_bridgeObjectRelease();
    uint64_t v35 = *(unint64_t *)((char *)v26 + v46);
    uint64_t v36 = type metadata accessor for AdjustedImage(0);
    memset(v62, 0, 80);
    uint64_t v37 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v49, 1, 1, v36);
    uint64_t v38 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    uint64_t v39 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v50, 1, 1, v38);
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    swift_bridgeObjectRetain();
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    uint64_t Int64 = CFPrefs_GetInt64();

    sub_100067438((uint64_t *)v56);
    v59[0] = v56[0];
    v59[1] = v56[1];
    v59[2] = v56[2];
    v59[3] = v56[3];
    char v53 = 1;
    uint64_t v60 = v57;
    uint64_t v61 = v58;
    return sub_10003A618(v48, v47, 0, 0xE000000000000000, v34, 0, 0xE000000000000000, 0, v52, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v25, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v45, (uint64_t)v54,
             v35,
             (uint64_t)_swiftEmptyArrayStorage,
             Int64 != 0,
             v43,
             0,
             1,
             1,
             (uint64_t)v59,
             (uint64_t)v62,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             v37,
             0,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             v39);
  }
  v62[0] = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v28 & 0x8000000000000000) == 0)
  {
    int v45 = v26;
    uint64_t v30 = 0;
    do
    {
      if ((v27 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v31 = *(id *)(v27 + 8 * v30 + 32);
      }
      ++v30;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v28 != v30);
    NSString v32 = (void *)v62[0];
    swift_bridgeObjectRelease();
    uint64_t v26 = v45;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000245E4@<X0>(void *a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v13;
  uint64_t v29 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v19 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1000B0850;
  *(void *)(v20 + 32) = v16;
  *(void *)(v20 + 40) = v18;
  *(void *)(v20 + 48) = 1;
  *(unsigned char *)(v20 + 56) = 1;
  uint64_t v21 = type metadata accessor for AdjustedImage(0);
  memset(v40, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  uint64_t v22 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v3, 1, 1, v22);
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v34);
  v37[0] = v34[0];
  v37[1] = v34[1];
  v37[2] = v34[2];
  v37[3] = v34[3];
  char v31 = 1;
  uint64_t v38 = v35;
  uint64_t v39 = v36;
  return sub_10003A618(v29, v28, 0, 0xE000000000000000, (uint64_t)v9, 0, 0xE000000000000000, 0, v30, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v20, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v32,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v27,
           0,
           1,
           1,
           (uint64_t)v37,
           (uint64_t)v40,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_100024A04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)&long long v133 = a1;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  *(void *)&long long v132 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v118 = (uint64_t)&v113 - v12;
  *(void *)&long long v126 = type metadata accessor for AdjustedImage(0);
  *(void *)&long long v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v116 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000EE48(&qword_1000EDF98);
  __chkstk_darwin(v14 - 8);
  id v120 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for URL();
  uint64_t v131 = *(void *)(v121 - 8);
  uint64_t v16 = __chkstk_darwin(v121);
  v119 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v117 = (char *)&v113 - v18;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v129 = v22;
  uint64_t v130 = v21;

  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = sub_100007614();

  if (!v24)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v25 = sub_100007334(v24);

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v127 = v27;
  uint64_t v128 = v26;

  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = sub_100007334(v33);

  uint64_t v35 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1000AF6D0;
  *(void *)(v38 + 32) = v30;
  *(void *)(v38 + 40) = v32;
  *(void *)(v38 + 48) = 0;
  *(unsigned char *)(v38 + 56) = 1;
  *(void *)(v38 + 64) = v35;
  *(void *)(v38 + 72) = v37;
  *(void *)(v38 + 80) = 1;
  *(unsigned char *)(v38 + 88) = 2;
  id v39 = [self mainScreen];
  [v39 scale];
  double v41 = v40;

  if ((~*(void *)&v41 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v41 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v41 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
LABEL_9:
    uint64_t v47 = type metadata accessor for Logger();
    sub_1000133A0(v47, (uint64_t)qword_1000EDF80);
    uint64_t v48 = v133;
    swift_retain_n();
    swift_bridgeObjectRetain();
    os_log_type_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v113 = (void *)swift_slowAlloc();
      uint64_t v115 = (void (*)(void, void, void))swift_slowAlloc();
      a2[10] = (uint64_t)v115;
      *(_DWORD *)uint64_t v51 = 136315394;
      swift_bridgeObjectRetain();
      *a2 = sub_100048718((uint64_t)v34, (unint64_t)v8, (uint64_t *)&v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v51 + 12) = 2112;
      *a2 = (uint64_t)v35;
      id v114 = v35;
      uint64_t v48 = v133;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v113 = v35;
      swift_release_n();
      uint64_t v52 = "HomePodSetupViewModel: ### HomePod iPad lockup asset missing %s in %@";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v49, v50, v52, (uint8_t *)v51, 0x16u);
      sub_10000EE48(&qword_1000EDEB0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v35 = v114;
LABEL_22:
      uint64_t v62 = v131;
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  uint64_t v123 = v8;
  uint64_t v124 = a2;
  a2 = v144;
  int v42 = SFDeviceClassCodeGet();
  char v122 = v5;
  if (v42 == 3)
  {
    uint64_t v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v145 = (void *)0xD000000000000015;
    unint64_t v146 = 0x80000001000B4AE0;
    v144[0] = (uint64_t)v41;
    v43._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._uint64_t countAndFlagsBits = 0x676E702E78;
    v44._object = (void *)0xE500000000000000;
    String.append(_:)(v44);
    id v34 = v145;
    uint64_t v8 = (char *)v146;
    uint64_t v35 = *(void **)(v133 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [v35 pathForResource:v45 ofType:0];

    if (!v46)
    {
      if (qword_1000ED730 == -1) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v53 = v133;
    if (*(unsigned char *)(v133 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5) {
      uint64_t v54 = 2;
    }
    else {
      uint64_t v54 = 1;
    }
    uint64_t v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    uint64_t v145 = (void *)0xD000000000000018;
    unint64_t v146 = 0x80000001000B4AA0;
    v144[0] = v54;
    v55._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v55);
    swift_bridgeObjectRelease();
    v56._uint64_t countAndFlagsBits = 64;
    v56._object = (void *)0xE100000000000000;
    String.append(_:)(v56);
    v144[0] = (uint64_t)v41;
    v57._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v57);
    swift_bridgeObjectRelease();
    v58._uint64_t countAndFlagsBits = 0x676E702E78;
    v58._object = (void *)0xE500000000000000;
    String.append(_:)(v58);
    uint64_t v59 = (uint64_t)v145;
    unint64_t v60 = v146;
    uint64_t v35 = *(void **)(v53 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
    NSString v61 = String._bridgeToObjectiveC()();
    id v46 = [v35 pathForResource:v61 ofType:0];

    if (!v46)
    {
      if (qword_1000ED730 != -1) {
        swift_once();
      }
      uint64_t v63 = type metadata accessor for Logger();
      sub_1000133A0(v63, (uint64_t)qword_1000EDF80);
      uint64_t v48 = v133;
      swift_retain_n();
      swift_bridgeObjectRetain();
      os_log_type_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v113 = (void *)swift_slowAlloc();
        uint64_t v115 = (void (*)(void, void, void))swift_slowAlloc();
        uint64_t v145 = v115;
        *(_DWORD *)uint64_t v51 = 136315394;
        swift_bridgeObjectRetain();
        v144[0] = sub_100048718(v59, v60, (uint64_t *)&v145);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v51 + 12) = 2112;
        v144[0] = v35;
        id v114 = v35;
        uint64_t v48 = v133;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v113 = v35;
        swift_release_n();
        uint64_t v52 = "HomePodSetupViewModel: ### HomePod iPhone lockup asset missing %s in %@";
        goto LABEL_20;
      }
LABEL_21:

      swift_release_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v62 = v131;
  uint64_t v48 = v133;
LABEL_23:
  if (*(unsigned char *)(v48 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 6)
  {
    swift_bridgeObjectRetain();
    id v64 = v35;
    NSString v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v66 = [self imageNamed:v65 inBundle:v64];

    if (v66)
    {
      id v67 = [v64 URLForResource:SFDeviceAssetNameAdjustments withExtension:0];
      if (v67)
      {
        uint64_t v68 = v67;
        *(void *)&long long v133 = v66;
        uint64_t v69 = v119;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v70 = (uint64_t)v120;
        BOOL v71 = v69;
        uint64_t v72 = v121;
        uint64_t v115 = *(void (**)(void, void, void))(v62 + 32);
        v115(v120, v71, v121);
        v119 = *(char **)(v62 + 56);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v119)(v70, 0, 1, v72);
        uint64_t v73 = v72;
        uint64_t v74 = v72;
        id v66 = (id)v133;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v70, 1, v74) != 1)
        {
          swift_bridgeObjectRelease();
          BOOL v75 = v117;
          v115(v117, v70, v73);
          uint64_t v76 = v126;
          uint64_t v77 = v116;
          int v78 = &v116[*(int *)(v126 + 20)];
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v78, v75, v73);
          ((void (*)(char *, void, uint64_t, uint64_t))v119)(v78, 0, 1, v73);
          *uint64_t v77 = v66;
          uint64_t v79 = type metadata accessor for AdjustedMovie(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v118, 1, 1, v79);
          *((_OWORD *)a2 + 8) = 0u;
          *((_OWORD *)a2 + 9) = 0u;
          *((_OWORD *)a2 + 6) = 0u;
          *((_OWORD *)a2 + 7) = 0u;
          *((_OWORD *)a2 + 5) = 0u;
          uint64_t v80 = (uint64_t)v123;
          sub_10003DDC8((uint64_t)v77, (uint64_t)v123, type metadata accessor for AdjustedImage);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v125 + 56))(v80, 0, 1, v76);
          uint64_t v81 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
          uint64_t v82 = (uint64_t)v122;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v122, 1, 1, v81);
          uint64_t v137 = 0;
          long long v135 = 0u;
          long long v136 = 0u;
          id v83 = v66;
          NSString v84 = String._bridgeToObjectiveC()();
          NSString v85 = String._bridgeToObjectiveC()();
          uint64_t Int64 = CFPrefs_GetInt64();

          LOBYTE(v84) = Int64 != 0;
          sub_100067438((uint64_t *)&v138);
          long long v132 = v139;
          long long v133 = v138;
          long long v125 = v141;
          long long v126 = v140;
          uint64_t v87 = v142;
          uint64_t v88 = v143;

          long long v89 = v132;
          *(_OWORD *)a2 = v133;
          *((_OWORD *)a2 + 1) = v89;
          long long v90 = v125;
          *((_OWORD *)a2 + 2) = v126;
          *((_OWORD *)a2 + 3) = v90;
          a2[8] = v87;
          a2[9] = v88;
          sub_10001B3A8((uint64_t)v77, type metadata accessor for AdjustedImage);
          (*(void (**)(char *, uint64_t))(v131 + 8))(v117, v121);
          char v134 = 1;
          return sub_10003A618(v130, v129, v128, v127, v118, 0, 0xE000000000000000, 0, v124, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v38, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v135,
                   (uint64_t)_swiftEmptyArrayStorage,
                   (uint64_t)_swiftEmptyArrayStorage,
                   (char)v84,
                   v112,
                   0,
                   1,
                   1,
                   (uint64_t)v144,
                   (uint64_t)&v145,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   v80,
                   0,
                   0,
                   1,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0xE000000000000000,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0xE000000000000000,
                   0,
                   0,
                   0,
                   0,
                   v82);
        }
      }
      else
      {
        uint64_t v70 = (uint64_t)v120;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v120, 1, 1, v121);
      }

      sub_10000F674(v70, &qword_1000EDF98);
    }
  }
  uint64_t v92 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v132, 1, 1, v92);
  uint64_t v93 = self;
  swift_bridgeObjectRetain();
  id v94 = [v93 configurationWithPointSize:72.0];
  NSString v95 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  char v96 = self;
  id v97 = [v96 systemImageNamed:v95 withConfiguration:v94];

  if (!v97)
  {
    swift_bridgeObjectRetain();
    NSString v98 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v97 = [v96 imageNamed:v98];

    if (!v97) {
      id v97 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  sub_10000EE48(&qword_1000EF140);
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_1000B0690;
  *(void *)(v99 + 32) = v97;
  a2[10] = v99;
  specialized Array._endMutation()();
  uint64_t v100 = a2[10];
  swift_bridgeObjectRelease();
  *((_OWORD *)a2 + 5) = 0u;
  *((_OWORD *)a2 + 6) = 0u;
  *((_OWORD *)a2 + 7) = 0u;
  *((_OWORD *)a2 + 8) = 0u;
  *((_OWORD *)a2 + 9) = 0u;
  uint64_t v101 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, void))(v125 + 56))(v123, 1, 1, v126);
  uint64_t v102 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v103 = (uint64_t)v122;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v122, 1, 1, v102);
  uint64_t v137 = 0;
  long long v135 = 0u;
  long long v136 = 0u;
  NSString v104 = String._bridgeToObjectiveC()();
  NSString v105 = String._bridgeToObjectiveC()();
  uint64_t v106 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)&v138);
  long long v107 = v139;
  long long v108 = v140;
  long long v109 = v141;
  uint64_t v110 = v142;
  uint64_t v111 = v143;
  *(_OWORD *)a2 = v138;
  *((_OWORD *)a2 + 1) = v107;
  *((_OWORD *)a2 + 2) = v108;
  *((_OWORD *)a2 + 3) = v109;
  char v134 = 1;
  a2[8] = v110;
  a2[9] = v111;
  return sub_10003A618(v130, v129, v128, v127, v132, 0, 0xE000000000000000, 0, v124, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v38, v100, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v135,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           v106 != 0,
           v112,
           0,
           1,
           1,
           (uint64_t)v144,
           (uint64_t)&v145,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v101,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v103);
}

uint64_t sub_100025C70@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v3 - 8);
  Swift::String v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE048);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v56 - v9;
  __chkstk_darwin(v8);
  uint64_t v64 = (uint64_t)&v56 - v11;
  uint64_t v12 = sub_10000EE48(&qword_1000EE040);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v61 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v56 - v15;
  if ((*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2) {
    char v17 = 114;
  }
  else {
    char v17 = 113;
  }
  if ((*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2) {
    char v18 = 116;
  }
  else {
    char v18 = 115;
  }
  sub_10005A4D4(v17);
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v59 = v22;
  uint64_t v60 = v21;
  swift_bridgeObjectRelease();

  sub_10005A4D4(v18);
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = sub_100007334(v23);

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();

  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v31;
  uint64_t v57 = v30;

  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = sub_100007334(v32);

  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1000AF6D0;
  *(void *)(v37 + 32) = v25;
  *(void *)(v37 + 40) = v27;
  *(void *)(v37 + 48) = 0;
  *(unsigned char *)(v37 + 56) = 1;
  *(void *)(v37 + 64) = v34;
  *(void *)(v37 + 72) = v36;
  *(void *)(v37 + 80) = 1;
  *(unsigned char *)(v37 + 88) = 2;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
  {
    uint64_t v38 = v64;
    sub_10003AA58(a1, 1, 0, v64);
    sub_10000FD94(v38, (uint64_t)v10, &qword_1000EE048);
    uint64_t v39 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    LODWORD(v38) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v10, 1, v39);
    sub_10000F674((uint64_t)v10, &qword_1000EE048);
    BOOL v40 = v38 == 1;
    uint64_t v41 = (uint64_t)v16;
    if (v40)
    {
      sub_1000501E0(1, 0, (uint64_t)v16);
    }
    else
    {
      uint64_t v42 = type metadata accessor for AdjustedImage(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v16, 1, 1, v42);
    }
  }
  else
  {
    sub_1000501E0(1, 0, (uint64_t)v16);
    uint64_t v39 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v64, 1, 1, v39);
    uint64_t v41 = (uint64_t)v16;
  }
  uint64_t v43 = type metadata accessor for AdjustedMovie(0);
  uint64_t v44 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v58, 1, 1, v43);
  memset(v74, 0, 80);
  uint64_t v45 = v61;
  sub_10000FD94(v41, v61, &qword_1000EE040);
  type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v46 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v62, 1, 1, v39);
  uint64_t v67 = 0;
  memset(v66, 0, sizeof(v66));
  NSString v47 = String._bridgeToObjectiveC()();
  uint64_t v48 = v41;
  NSString v49 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v68);
  v71[0] = v68[0];
  v71[1] = v68[1];
  v71[2] = v68[2];
  v71[3] = v68[3];
  uint64_t v72 = v69;
  uint64_t v73 = v70;
  sub_10000F674(v48, &qword_1000EE040);
  char v65 = 1;
  uint64_t v55 = v45;
  uint64_t v51 = v63;
  sub_10003A618(v60, v59, v57, v56, v44, 0, 0xE000000000000000, 0, v63, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v37, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v66,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v54,
    0,
    1,
    1,
    (uint64_t)v71,
    (uint64_t)v74,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v55,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v46);
  uint64_t v52 = type metadata accessor for HomePodSetupViewModel(0);
  return sub_10003DE30(v64, (uint64_t)v51 + *(int *)(v52 + 192));
}

uint64_t sub_100026320@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  BOOL v75 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v74 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v8 - 8);
  uint64_t v77 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v72 = v14;

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8);
  uint64_t v21 = self;
  swift_bridgeObjectRetain();
  id v22 = [v21 sharedInstance];
  uint64_t v76 = a2;
  uint64_t v73 = v13;
  id v71 = v22;
  if (v10 == 1)
  {
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = sub_100007334(v23);
  }
  else
  {
    if (v22)
    {
      id v25 = v22;
      NSString v26 = String._bridgeToObjectiveC()();
      if (v20)
      {
        NSString v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v27 = 0;
      }
      id v28 = [v25 localizedUIUtteranceForKey:v26 languageCode:v27];

      if (v28) {
        goto LABEL_11;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = sub_100007334(v23);
  }
  id v28 = v24;

LABEL_11:
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  long long v68 = xmmword_1000B0850;
  *(_OWORD *)(inited + 16) = xmmword_1000B0850;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v33 = sub_10003D0C8();
  *(void *)(inited + 32) = v29;
  *(void *)(inited + 64) = v33;
  *(void *)(inited + 40) = v31;
  v87[0] = 0;
  v87[1] = 0xE000000000000000;
  sub_10003C0DC(inited, v87);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  uint64_t v69 = v87[1];
  uint64_t v70 = v87[0];
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v68;
  *(void *)(v34 + 32) = v17;
  *(void *)(v34 + 40) = v19;
  *(void *)(v34 + 48) = 0;
  *(unsigned char *)(v34 + 56) = 1;
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = sub_100007334(v35);

  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v38;
  *(void *)&long long v68 = v37;

  uint64_t v39 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v77, 1, 1, v39);
  id v40 = [self configurationWithPointSize:72.0];
  NSString v41 = String._bridgeToObjectiveC()();
  uint64_t v42 = self;
  id v43 = [v42 systemImageNamed:v41 withConfiguration:v40];

  if (!v43)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    id v43 = [v42 imageNamed:v44];

    if (!v43) {
      id v43 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  sub_10000EE48(&qword_1000EF140);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1000B0690;
  *(void *)(v45 + 32) = v43;
  v87[0] = v45;
  specialized Array._endMutation()();
  uint64_t v66 = v87[0];
  memset(v87, 0, 80);
  NSString v46 = String._bridgeToObjectiveC()();
  id v47 = sub_100007334(v46);

  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v49;

  uint64_t v51 = type metadata accessor for AdjustedImage(0);
  uint64_t v52 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v74, 1, 1, v51);
  uint64_t v53 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v54 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v75, 1, 1, v53);
  uint64_t v80 = 0;
  memset(v79, 0, sizeof(v79));
  NSString v55 = String._bridgeToObjectiveC()();
  NSString v56 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v55) = Int64 != 0;
  sub_100067438((uint64_t *)v81);
  long long v64 = v81[1];
  long long v65 = v81[0];
  long long v62 = v81[3];
  long long v63 = v81[2];
  uint64_t v58 = v82;
  uint64_t v59 = v83;

  v84[0] = v65;
  v84[1] = v64;
  v84[2] = v63;
  v84[3] = v62;
  uint64_t v85 = v58;
  uint64_t v86 = v59;
  char v78 = 1;
  return sub_10003A618(v73, v72, v70, v69, v77, v68, v67, 0, v76, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v34, v66, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v79,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v55,
           v61,
           0,
           1,
           1,
           (uint64_t)v84,
           (uint64_t)v87,
           0,
           0,
           v48,
           v50,
           0xD000000000000019,
           0x80000001000B4BA0,
           0,
           0,
           0,
           v52,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v54);
}

void sub_100026B68(void *a1@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v82 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v81 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v74 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_1000073C8(v8, v9, v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v79 = v13;
  uint64_t v80 = v12;

  id v14 = [v7 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_1000073C8(v14, v15, v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v77 = v19;
  uint64_t v78 = v18;

  id v20 = [self systemFontOfSize:72.0 weight:UIFontWeightRegular];
  uint64_t v21 = self;
  id v22 = [v21 configurationWithFont:v20];

  id v23 = [self orangeColor];
  id v24 = [v21 configurationWithHierarchicalColor:v23];

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [self _systemImageNamed:v25];

  id v76 = v22;
  id v27 = [v26 imageByApplyingSymbolConfiguration:v22];

  id v75 = v24;
  id v28 = [v27 imageByApplyingSymbolConfiguration:v24];

  id v29 = v28;
  if (!v28) {
    id v29 = [objc_allocWithZone((Class)UIImage) init];
  }
  *(void *)&long long v72 = v29;
  id v73 = v28;
  id v30 = [v7 mainBundle];
  NSString v31 = String._bridgeToObjectiveC()();
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = sub_1000073C8(v30, v31, v32);

  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  id v37 = [v7 mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = sub_1000073C8(v37, v38, v39);

  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;

  id v44 = [v7 mainBundle];
  NSString v45 = String._bridgeToObjectiveC()();
  NSString v46 = String._bridgeToObjectiveC()();
  id v47 = sub_1000073C8(v44, v45, v46);

  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v70 = v49;
  uint64_t v71 = v48;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1000AF6D0;
  *(void *)(v50 + 32) = v34;
  *(void *)(v50 + 40) = v36;
  *(void *)(v50 + 48) = 0;
  *(unsigned char *)(v50 + 56) = 8;
  *(void *)(v50 + 64) = v41;
  *(void *)(v50 + 72) = v43;
  *(void *)(v50 + 80) = 1;
  *(unsigned char *)(v50 + 88) = 9;
  uint64_t v51 = type metadata accessor for AdjustedMovie(0);
  uint64_t v52 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v74, 1, 1, v51);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1000B0690;
  uint64_t v54 = (void *)v72;
  *(void *)(v53 + 32) = v72;
  v93[0] = v53;
  specialized Array._endMutation()();
  uint64_t v69 = v93[0];
  uint64_t v55 = type metadata accessor for AdjustedImage(0);
  memset(v93, 0, 80);
  uint64_t v56 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v81, 1, 1, v55);
  uint64_t v57 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v58 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v82, 1, 1, v57);
  uint64_t v86 = 0;
  memset(v85, 0, sizeof(v85));
  id v59 = v54;
  NSString v60 = String._bridgeToObjectiveC()();
  NSString v61 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v60) = Int64 != 0;
  sub_100067438((uint64_t *)v87);
  long long v72 = v87[0];
  long long v67 = v87[2];
  long long v68 = v87[1];
  long long v66 = v87[3];
  uint64_t v63 = v88;
  uint64_t v64 = v89;

  v90[0] = v72;
  v90[1] = v68;
  v90[2] = v67;
  v90[3] = v66;
  uint64_t v91 = v63;
  uint64_t v92 = v64;
  char v84 = 1;
  sub_10003A618(v80, v79, v78, v77, v52, 0, 0xE000000000000000, v71, v83, 0.0, 0.0, 0.0, v70, 0, 0xE000000000000000, v50, v69, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v85,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    (char)v60,
    v65,
    0,
    1,
    1,
    (uint64_t)v90,
    (uint64_t)v93,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v56,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v58);
}

uint64_t sub_1000273D8@<X0>(void *a1@<X8>)
{
  long long v68 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  long long v67 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  long long v66 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v64 = v11;
  uint64_t v65 = v10;

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v15;
  uint64_t v63 = v14;

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v19;
  id v59 = (char *)v18;

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  id v25 = [self systemFontOfSize:72.0 weight:UIFontWeightRegular];
  id v26 = self;
  id v27 = [v26 configurationWithFont:v25];

  id v28 = [self lightGrayColor];
  id v29 = [v26 configurationWithHierarchicalColor:v28];

  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [self _systemImageNamed:v30];

  id v61 = v27;
  id v32 = [v31 imageByApplyingSymbolConfiguration:v27];

  id v60 = v29;
  id v33 = [v32 imageByApplyingSymbolConfiguration:v29];

  id v34 = v33;
  if (!v33) {
    id v34 = [objc_allocWithZone((Class)UIImage) init];
  }
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1000AF6D0;
  uint64_t v36 = v58;
  *(void *)(v35 + 32) = v59;
  *(void *)(v35 + 40) = v36;
  *(void *)(v35 + 48) = 0;
  *(unsigned char *)(v35 + 56) = 8;
  *(void *)(v35 + 64) = v22;
  *(void *)(v35 + 72) = v24;
  *(void *)(v35 + 80) = 1;
  *(unsigned char *)(v35 + 88) = 9;
  uint64_t v37 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v7, 1, 1, v37);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1000B0690;
  *(void *)(v38 + 32) = v34;
  v78[0] = v38;
  specialized Array._endMutation()();
  uint64_t v58 = v78[0];
  id v59 = v7;
  uint64_t v39 = type metadata accessor for AdjustedImage(0);
  memset(v78, 0, 80);
  uint64_t v40 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v66, 1, 1, v39);
  uint64_t v41 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v42 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v67, 1, 1, v41);
  uint64_t v71 = 0;
  memset(v70, 0, sizeof(v70));
  id v43 = v33;
  id v44 = v34;
  NSString v45 = String._bridgeToObjectiveC()();
  NSString v46 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v45) = Int64 != 0;
  sub_100067438((uint64_t *)v72);
  long long v56 = v72[1];
  long long v57 = v72[0];
  long long v54 = v72[3];
  long long v55 = v72[2];
  uint64_t v48 = v73;
  uint64_t v49 = v74;

  v75[0] = v57;
  v75[1] = v56;
  v75[2] = v55;
  v75[3] = v54;
  uint64_t v76 = v48;
  uint64_t v77 = v49;
  char v69 = 1;
  uint64_t v50 = v68;
  sub_10003A618(v65, v64, v63, v62, (uint64_t)v59, 0, 0xE000000000000000, 0, v68, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v35, v58, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v70,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    (char)v45,
    v53,
    0,
    1,
    1,
    (uint64_t)v75,
    (uint64_t)v78,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v40,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v42);

  uint64_t result = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v52 = (char *)v50 + *(int *)(result + 124);
  *(void *)uint64_t v52 = 1;
  v52[8] = 0;
  return result;
}

__n128 sub_100027AA4@<Q0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  *(void *)&long long v91 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  v90.n128_u64[0] = (unint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  *(void *)&long long v92 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate);
  int v10 = *(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homePodProductVersion);
  if (v10 == 2)
  {
    if ((v9 & 1) == 0)
    {
LABEL_3:
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = sub_100007334(v11);

      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v88 = v14;
      v89.n128_u64[0] = v13;

      NSString v15 = String._bridgeToObjectiveC()();
      int v16 = 1;
      goto LABEL_6;
    }
  }
  else if (((v10 == 3) & ~v9) != 0)
  {
    goto LABEL_3;
  }
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100007334(v17);

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v88 = v20;
  v89.n128_u64[0] = v19;

  NSString v15 = String._bridgeToObjectiveC()();
  int v16 = 0;
LABEL_6:
  id v21 = sub_100007334(v15);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = sub_100007334(v25);

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  NSString v30 = (_OWORD *)&unk_1000B0000;
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = sub_100007334(v31);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10000EE48(&qword_1000EE398);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1000B0850;
    uint64_t v34 = a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName;
    uint64_t v35 = a1;
    uint64_t v36 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
    uint64_t v37 = *(void *)(v34 + 8);
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_10003D0C8();
    *(void *)(v33 + 32) = v36;
    *(void *)(v33 + 40) = v37;
    a1 = v35;
    swift_bridgeObjectRetain();
    NSString v30 = &unk_1000B0000;
    uint64_t v27 = String.init(format:_:)();
    uint64_t v29 = v38;
    swift_bridgeObjectRelease();
  }
  uint64_t v86 = v27;
  uint64_t v87 = v29;
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v30[133];
  *(void *)(v39 + 32) = v22;
  *(void *)(v39 + 40) = v24;
  *(void *)(v39 + 48) = 0;
  *(unsigned char *)(v39 + 56) = 1;
  if (v16)
  {
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = sub_100007334(v40);

    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    unint64_t v46 = *(void *)(v39 + 16);
    unint64_t v45 = *(void *)(v39 + 24);
    if (v46 >= v45 >> 1) {
      uint64_t v39 = (uint64_t)sub_100054CE4((char *)(v45 > 1), v46 + 1, 1, (char *)v39);
    }
    *(void *)(v39 + 16) = v46 + 1;
    uint64_t v47 = v39 + 32 * v46;
    *(void *)(v47 + 32) = v42;
    *(void *)(v47 + 40) = v44;
    *(void *)(v47 + 48) = 1;
    *(unsigned char *)(v47 + 56) = 2;
  }
  id v48 = [self systemFontOfSize:80.0 weight:UIFontWeightRegular];
  uint64_t v49 = self;
  id v50 = [v49 configurationWithFont:v48];

  id v51 = [self tertiaryLabelColor];
  id v52 = [v49 configurationWithHierarchicalColor:v51];

  NSString v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v54 = [self _systemImageNamed:v53];

  uint64_t v83 = a1;
  id v85 = v50;
  id v55 = [v54 imageByApplyingSymbolConfiguration:v50];

  id v84 = v52;
  id v56 = [v55 imageByApplyingSymbolConfiguration:v52];

  id v57 = v56;
  if (!v56) {
    id v57 = [objc_allocWithZone((Class)UIImage) init];
  }
  uint64_t v58 = type metadata accessor for AdjustedMovie(0);
  uint64_t v59 = v92;
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v92, 1, 1, v58);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1000B0690;
  *(void *)(v60 + 32) = v57;
  v107[0] = v60;
  specialized Array._endMutation()();
  uint64_t v81 = v107[0];
  uint64_t v61 = type metadata accessor for AdjustedImage(0);
  memset(v107, 0, 80);
  uint64_t v62 = v90.n128_u64[0];
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v90.n128_u64[0], 1, 1, v61);
  uint64_t v63 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v64 = v91;
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v91, 1, 1, v63);
  v100.n128_u64[0] = 0;
  long long v98 = 0u;
  long long v99 = 0u;
  id v82 = v56;
  id v65 = v57;
  NSString v66 = String._bridgeToObjectiveC()();
  NSString v67 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v95);
  v104[0] = v95[0];
  v104[1] = v95[1];
  v104[2] = v95[2];
  v104[3] = v95[3];
  char v94 = 1;
  uint64_t v105 = v96;
  uint64_t v106 = v97;
  uint64_t v79 = v39;
  char v69 = v93;
  sub_10003A618(v89.n128_i64[0], v88, v86, v87, v59, 0, 0xE000000000000000, 0, v93, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v79, v81, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v98,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v80,
    0,
    1,
    1,
    (uint64_t)v104,
    (uint64_t)v107,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v62,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v64);
  uint64_t v70 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v71 = (char *)v69 + v70[31];
  *(void *)uint64_t v71 = 1;
  v71[8] = 0;
  *((unsigned char *)v69 + v70[32]) = 1;
  uint64_t v72 = *(void *)(v83 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  uint64_t v73 = *(void *)(v83 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
  swift_bridgeObjectRetain();
  sub_100067630(v72, v73, (uint64_t *)&v98);
  long long v91 = v99;
  long long v92 = v98;
  __n128 v89 = v101;
  __n128 v90 = v100;
  unint64_t v74 = v102;
  unint64_t v75 = v103;
  swift_bridgeObjectRelease();

  uint64_t v76 = (__n128 *)((char *)v69 + v70[20]);
  sub_10003DEFC(v76->n128_u64[0], v76->n128_i64[1]);

  __n128 v77 = (__n128)v91;
  *uint64_t v76 = (__n128)v92;
  v76[1] = v77;
  __n128 result = v89;
  v76[2] = v90;
  v76[3] = result;
  v76[4].n128_u64[0] = v74;
  v76[4].n128_u64[1] = v75;
  return result;
}

uint64_t sub_10002841C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  id v57 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v14;
  uint64_t v56 = v13;

  int v15 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService);
  uint64_t v59 = a2;
  if (v15 == 1)
  {
    id v16 = [self mainBundle];
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = sub_1000073C8(v16, v17, v18);

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) != 1) {
    goto LABEL_8;
  }
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
    id v24 = [self mainBundle];
    NSString v25 = String._bridgeToObjectiveC()();
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = sub_1000073C8(v24, v25, v26);

    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    swift_bridgeObjectRelease();
    uint64_t v54 = v29;
  }
  else
  {
LABEL_8:
    uint64_t v53 = v20;
    uint64_t v54 = v22;
  }
  id v30 = sub_10003D8C8();
  uint64_t v31 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 1, 1, v31);
  sub_10003DB28(a1);
  uint64_t v52 = v32;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1000B0690;
  *(void *)(v33 + 32) = v30;
  v69[0] = v33;
  specialized Array._endMutation()();
  uint64_t v34 = (uint64_t)v10;
  uint64_t v35 = v69[0];
  uint64_t v36 = type metadata accessor for AdjustedImage(0);
  memset(v69, 0, 80);
  uint64_t v37 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v57, 1, 1, v36);
  uint64_t v38 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v39 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v58, 1, 1, v38);
  uint64_t v62 = 0;
  memset(v61, 0, sizeof(v61));
  id v40 = v30;
  NSString v41 = String._bridgeToObjectiveC()();
  NSString v42 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v41) = Int64 != 0;
  sub_100067438((uint64_t *)v63);
  long long v50 = v63[1];
  long long v51 = v63[0];
  long long v48 = v63[3];
  long long v49 = v63[2];
  uint64_t v44 = v64;
  uint64_t v45 = v65;

  v66[0] = v51;
  v66[1] = v50;
  v66[2] = v49;
  v66[3] = v48;
  uint64_t v67 = v44;
  uint64_t v68 = v45;
  char v60 = 1;
  return sub_10003A618(v56, v55, v53, v54, v34, 0, 0xE000000000000000, 0, v59, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v52, v35, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v61,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v41,
           v47,
           0,
           1,
           1,
           (uint64_t)v66,
           (uint64_t)v69,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v37,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v39);
}

uint64_t sub_100028A40@<X0>(void *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  long long v49 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v6 - 8);
  int v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v11;
  uint64_t v53 = v10;

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v15;
  uint64_t v51 = v14;

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = sub_100007334(v26);

  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v28;

  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = sub_100007334(v29);

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v32;
  uint64_t v45 = v31;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1000AF6D0;
  *(void *)(v33 + 32) = v18;
  *(void *)(v33 + 40) = v20;
  *(void *)(v33 + 48) = 0;
  *(unsigned char *)(v33 + 56) = 8;
  *(void *)(v33 + 64) = v23;
  *(void *)(v33 + 72) = v25;
  *(void *)(v33 + 80) = 1;
  *(unsigned char *)(v33 + 88) = 9;
  uint64_t v34 = type metadata accessor for AdjustedMovie(0);
  uint64_t v35 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v47, 1, 1, v34);
  uint64_t v36 = type metadata accessor for AdjustedImage(0);
  memset(v64, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v5, 1, 1, v36);
  uint64_t v37 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v38 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v49, 1, 1, v37);
  uint64_t v57 = 0;
  memset(v56, 0, sizeof(v56));
  NSString v39 = String._bridgeToObjectiveC()();
  NSString v40 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v58);
  v61[0] = v58[0];
  v61[1] = v58[1];
  v61[2] = v58[2];
  v61[3] = v58[3];
  char v55 = 1;
  uint64_t v62 = v59;
  uint64_t v63 = v60;
  return sub_10003A618(v53, v52, v51, v50, v35, 0, 0xE000000000000000, v48, v54, 0.0, 0.0, 0.0, v46, 0, 0xE000000000000000, v33, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v56,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v43,
           0,
           1,
           1,
           (uint64_t)v61,
           (uint64_t)v64,
           0,
           0,
           v45,
           v44,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v5,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v38);
}

void sub_100028F9C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v54 = a1;
  char v55 = a3;
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v10 - 8);
  uint64_t v53 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = "RMS_OF_USE_MORE_INFO_BUTTON";
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = (id)CUAddSuffixForCurrentDeviceClass();

  if (v18)
  {
    id v19 = sub_100007334(v18);

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    uint64_t v51 = v22;
    uint64_t v52 = v20;
    if (a2)
    {
      swift_bridgeObjectRelease();
      *(void *)&v65[0] = 0x72655F6473;
      *((void *)&v65[0] + 1) = 0xE500000000000000;
      AnyHashable.init<A>(_:)();
      if (*(void *)(a2 + 16) && (unint64_t v23 = sub_10005513C((uint64_t)&v68), (v24 & 1) != 0))
      {
        sub_10000F578(*(void *)(a2 + 56) + 32 * v23, (uint64_t)&v59);
      }
      else
      {
        long long v59 = 0u;
        long long v60 = 0u;
      }
      sub_10000F474((uint64_t)&v68);
      if (*((void *)&v60 + 1))
      {
        sub_10000F464(&v59, v65);
        sub_10000F464(v65, &v68);
        if (swift_dynamicCast()) {
          int v25 = v59;
        }
        else {
          int v25 = 0;
        }
      }
      else
      {
        sub_10000F674((uint64_t)&v59, &qword_1000EE410);
        int v25 = 0;
      }
      *(void *)&v65[0] = 0x64655F6473;
      *((void *)&v65[0] + 1) = 0xE500000000000000;
      AnyHashable.init<A>(_:)();
      if (*(void *)(a2 + 16) && (unint64_t v28 = sub_10005513C((uint64_t)&v68), (v29 & 1) != 0))
      {
        sub_10000F578(*(void *)(a2 + 56) + 32 * v28, (uint64_t)&v59);
      }
      else
      {
        long long v59 = 0u;
        long long v60 = 0u;
      }
      sub_10000F474((uint64_t)&v68);
      if (*((void *)&v60 + 1))
      {
        sub_10000F464(&v59, v65);
        sub_10000F578((uint64_t)v65, (uint64_t)&v68);
        swift_dynamicCast();
        sub_10000E470((uint64_t)v65);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10000F674((uint64_t)&v59, &qword_1000EE410);
      }
      *(void *)&v65[0] = 0x65645F6473;
      *((void *)&v65[0] + 1) = 0xE500000000000000;
      AnyHashable.init<A>(_:)();
      if (*(void *)(a2 + 16) && (unint64_t v30 = sub_10005513C((uint64_t)&v68), (v31 & 1) != 0))
      {
        sub_10000F578(*(void *)(a2 + 56) + 32 * v30, (uint64_t)&v59);
      }
      else
      {
        long long v59 = 0u;
        long long v60 = 0u;
      }
      sub_10000F474((uint64_t)&v68);
      NSString v26 = v6;
      if (*((void *)&v60 + 1))
      {
        sub_10000F464(&v59, v65);
        sub_10000F578((uint64_t)v65, (uint64_t)&v68);
        swift_dynamicCast();
        sub_10000E470((uint64_t)v65);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10000F674((uint64_t)&v59, &qword_1000EE410);
      }
      uint64_t v27 = (uint64_t)v53;
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = sub_100007334(v32);

      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      *(void *)&long long v68 = v34;
      *((void *)&v68 + 1) = v36;
      v37._uint64_t countAndFlagsBits = 10272;
      v37._object = (void *)0xE200000000000000;
      String.append(_:)(v37);
      LODWORD(v65[0]) = v25;
      v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      v39._uint64_t countAndFlagsBits = 41;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
      uint64_t v49 = *((void *)&v68 + 1);
      uint64_t v50 = (char *)v68;
    }
    else
    {
      NSString v26 = v6;
      uint64_t v27 = (uint64_t)v53;
      uint64_t v49 = v16;
      uint64_t v50 = v14;
    }
    *((void *)&v69 + 1) = &type metadata for HomeDeviceSetupFeatureFlags;
    *(void *)&long long v70 = sub_10003DF6C();
    LOBYTE(v68) = 2;
    char v40 = isFeatureEnabled(_:)();
    sub_10000E470((uint64_t)&v68);
    uint64_t v41 = type metadata accessor for AdjustedMovie(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v27, 1, 1, v41);
    long long v71 = 0u;
    long long v72 = 0u;
    long long v69 = 0u;
    long long v70 = 0u;
    long long v68 = 0u;
    uint64_t v42 = (uint64_t)v9;
    sub_1000501E0(0, 0, (uint64_t)v9);
    uint64_t v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    uint64_t v44 = (uint64_t)v26;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v26, 1, 1, v43);
    uint64_t v58 = 0;
    memset(v57, 0, sizeof(v57));
    NSString v45 = String._bridgeToObjectiveC()();
    NSString v46 = String._bridgeToObjectiveC()();
    uint64_t Int64 = CFPrefs_GetInt64();

    sub_100067438((uint64_t *)&v59);
    v65[0] = v59;
    v65[1] = v60;
    v65[2] = v61;
    v65[3] = v62;
    char v56 = 1;
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    sub_10003A618((uint64_t)v50, v49, v52, v51, v27, 0, 0xE000000000000000, 0, v55, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v57,
      (uint64_t)_swiftEmptyArrayStorage,
      (uint64_t)_swiftEmptyArrayStorage,
      Int64 != 0,
      v48,
      0,
      1,
      1,
      (uint64_t)v65,
      (uint64_t)&v68,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      v42,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      1,
      1,
      (v40 & 1) == 0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      v44);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002970C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v127 = a1;
  uint64_t v5 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  uint64_t v129 = v7;
  uint64_t v130 = a3;
  uint64_t v128 = v10;
  if (a2)
  {
    *(void *)&v142[0] = 0x72655F6473;
    *((void *)&v142[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v18 = sub_10005513C((uint64_t)v145), (v19 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v18, (uint64_t)&v136);
    }
    else
    {
      long long v136 = 0u;
      long long v137 = 0u;
    }
    sub_10000F474((uint64_t)v145);
    if (*((void *)&v137 + 1))
    {
      sub_10000F464(&v136, v142);
      sub_10000F464(v142, v145);
      if (swift_dynamicCast()) {
        int v20 = v136;
      }
      else {
        int v20 = 0;
      }
    }
    else
    {
      sub_10000F674((uint64_t)&v136, &qword_1000EE410);
      int v20 = 0;
    }
    *(void *)&v142[0] = 0x64655F6473;
    *((void *)&v142[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v24 = sub_10005513C((uint64_t)v145), (v25 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v24, (uint64_t)&v136);
    }
    else
    {
      long long v136 = 0u;
      long long v137 = 0u;
    }
    sub_10000F474((uint64_t)v145);
    if (*((void *)&v137 + 1))
    {
      sub_10000F464(&v136, v142);
      sub_10000F578((uint64_t)v142, (uint64_t)v145);
      swift_dynamicCast();
      sub_10000E470((uint64_t)v142);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000F674((uint64_t)&v136, &qword_1000EE410);
    }
    *(void *)&v142[0] = 0x65645F6473;
    *((void *)&v142[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v26 = sub_10005513C((uint64_t)v145), (v27 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v26, (uint64_t)&v136);
    }
    else
    {
      long long v136 = 0u;
      long long v137 = 0u;
    }
    sub_10000F474((uint64_t)v145);
    if (*((void *)&v137 + 1))
    {
      sub_10000F464(&v136, v142);
      sub_10000F578((uint64_t)v142, (uint64_t)v145);
      swift_dynamicCast();
      sub_10000E470((uint64_t)v142);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000F674((uint64_t)&v136, &qword_1000EE410);
    }
    *(void *)&long long v136 = 0x655F64615F6473;
    *((void *)&v136 + 1) = 0xE700000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v28 = sub_10005513C((uint64_t)v145), (v29 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v28, (uint64_t)&v136);
    }
    else
    {
      long long v136 = 0u;
      long long v137 = 0u;
    }
    sub_10000F474((uint64_t)v145);
    if (*((void *)&v137 + 1))
    {
      sub_10000F464(&v136, v142);
      sub_10000F578((uint64_t)v142, (uint64_t)v145);
      swift_dynamicCast();
      int v131 = v136;
      if (v136 == 5)
      {
        int v120 = 0;
        a2 = 0;
        uint64_t v123 = 0;
        uint64_t v124 = 0;
        unint64_t v118 = 0xE000000000000000;
        uint64_t v119 = 0;
        unint64_t v22 = 0xE000000000000000;
        uint64_t v121 = 0xE000000000000000;
        uint64_t v122 = 0xE000000000000000;
        uint64_t v125 = 0xE000000000000000;
        uint64_t v126 = 0;
        uint64_t v23 = v17;
      }
      else
      {
        if (v136 == 4)
        {
          NSString v32 = String._bridgeToObjectiveC()();
          id v33 = sub_100007334(v32);

          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;

          *(void *)&v145[0] = v34;
          *((void *)&v145[0] + 1) = v36;
          v37._uint64_t countAndFlagsBits = 10272;
          v37._object = (void *)0xE200000000000000;
          String.append(_:)(v37);
          LODWORD(v136) = v20;
          v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v38);
          swift_bridgeObjectRelease();
          v39._uint64_t countAndFlagsBits = 2601;
          v39._object = (void *)0xE200000000000000;
          String.append(_:)(v39);
          NSString v40 = String._bridgeToObjectiveC()();
          id v41 = sub_100007334(v40);

          uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v44 = v43;

          v45._uint64_t countAndFlagsBits = v42;
          v45._object = v44;
          String.append(_:)(v45);
          swift_bridgeObjectRelease();
          uint64_t v125 = *((void *)&v145[0] + 1);
          uint64_t v126 = *(void *)&v145[0];
          NSString v46 = String._bridgeToObjectiveC()();
          id v47 = sub_100007334(v46);

          uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v121 = v48;

          NSString v49 = String._bridgeToObjectiveC()();
          int v120 = 0;
          uint64_t v124 = 0;
          unint64_t v118 = 0xE000000000000000;
          uint64_t v119 = 0;
          uint64_t v122 = 0xE000000000000000;
        }
        else
        {
          if (v136 == 3)
          {
            *(void *)&long long v136 = 0x72655F64615F6473;
            *((void *)&v136 + 1) = 0xE800000000000000;
            AnyHashable.init<A>(_:)();
            if (*(void *)(a2 + 16) && (unint64_t v30 = sub_10005513C((uint64_t)v145), (v31 & 1) != 0))
            {
              sub_10000F578(*(void *)(a2 + 56) + 32 * v30, (uint64_t)&v133);
            }
            else
            {
              long long v133 = 0u;
              long long v134 = 0u;
            }
            sub_10000F474((uint64_t)v145);
            if (*((void *)&v134 + 1))
            {
              sub_10000F464(&v133, &v136);
              sub_10000F464(&v136, v145);
              int v67 = swift_dynamicCast();
              int v68 = v133;
              if (!v67) {
                int v68 = 0;
              }
              int v120 = v68;
            }
            else
            {
              sub_10000F674((uint64_t)&v133, &qword_1000EE410);
              int v120 = 0;
            }
            *(void *)&long long v136 = 0x64655F64615F6473;
            *((void *)&v136 + 1) = 0xE800000000000000;
            AnyHashable.init<A>(_:)();
            if (*(void *)(a2 + 16) && (unint64_t v69 = sub_10005513C((uint64_t)v145), (v70 & 1) != 0))
            {
              sub_10000F578(*(void *)(a2 + 56) + 32 * v69, (uint64_t)&v133);
            }
            else
            {
              long long v133 = 0u;
              long long v134 = 0u;
            }
            sub_10000F474((uint64_t)v145);
            if (*((void *)&v134 + 1))
            {
              sub_10000F464(&v133, &v136);
              sub_10000F578((uint64_t)&v136, (uint64_t)v145);
              if (swift_dynamicCast())
              {
                unint64_t v72 = *((void *)&v133 + 1);
                uint64_t v71 = v133;
              }
              else
              {
                unint64_t v72 = 0xE700000000000000;
                uint64_t v71 = 0x6E776F6E6B6E55;
              }
              unint64_t v118 = v72;
              uint64_t v119 = v71;
              sub_10000E470((uint64_t)&v136);
            }
            else
            {
              sub_10000F674((uint64_t)&v133, &qword_1000EE410);
              unint64_t v118 = 0xE000000000000000;
              uint64_t v119 = 0;
            }
            NSString v73 = String._bridgeToObjectiveC()();
            id v74 = sub_100007334(v73);

            uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v77 = v76;

            *(void *)&v145[0] = v75;
            *((void *)&v145[0] + 1) = v77;
            v78._uint64_t countAndFlagsBits = 10272;
            v78._object = (void *)0xE200000000000000;
            String.append(_:)(v78);
            LODWORD(v136) = v20;
            v79._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v79);
            swift_bridgeObjectRelease();
            v80._uint64_t countAndFlagsBits = 2601;
            v80._object = (void *)0xE200000000000000;
            String.append(_:)(v80);
            NSString v81 = String._bridgeToObjectiveC()();
            id v82 = sub_100007334(v81);

            uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v85 = v84;

            v86._uint64_t countAndFlagsBits = v83;
            v86._object = v85;
            String.append(_:)(v86);
            swift_bridgeObjectRelease();
            uint64_t v125 = *((void *)&v145[0] + 1);
            uint64_t v126 = *(void *)&v145[0];
            NSString v87 = String._bridgeToObjectiveC()();
            id v88 = sub_100007334(v87);

            uint64_t v124 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v122 = v89;

            NSString v49 = String._bridgeToObjectiveC()();
            uint64_t v123 = 0;
          }
          else
          {
            NSString v50 = String._bridgeToObjectiveC()();
            id v51 = sub_100007334(v50);

            uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v54 = v53;

            *(void *)&v145[0] = v52;
            *((void *)&v145[0] + 1) = v54;
            v55._uint64_t countAndFlagsBits = 10272;
            v55._object = (void *)0xE200000000000000;
            String.append(_:)(v55);
            LODWORD(v136) = v20;
            v56._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v56);
            swift_bridgeObjectRelease();
            v57._uint64_t countAndFlagsBits = 2601;
            v57._object = (void *)0xE200000000000000;
            String.append(_:)(v57);
            NSString v58 = String._bridgeToObjectiveC()();
            id v59 = sub_100007334(v58);

            uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            long long v62 = v61;

            v63._uint64_t countAndFlagsBits = v60;
            v63._object = v62;
            String.append(_:)(v63);
            swift_bridgeObjectRelease();
            uint64_t v125 = *((void *)&v145[0] + 1);
            uint64_t v126 = *(void *)&v145[0];
            NSString v64 = String._bridgeToObjectiveC()();
            id v65 = sub_100007334(v64);

            uint64_t v124 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v122 = v66;

            NSString v49 = String._bridgeToObjectiveC()();
            int v120 = 0;
            uint64_t v123 = 0;
            unint64_t v118 = 0xE000000000000000;
            uint64_t v119 = 0;
          }
          uint64_t v121 = 0xE000000000000000;
        }
        uint64_t v23 = v17;
        id v90 = sub_100007334(v49);

        a2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v22 = v91;
      }
      sub_10000E470((uint64_t)v142);
      int v21 = v131;
    }
    else
    {
      sub_10000F674((uint64_t)&v136, &qword_1000EE410);
      int v120 = 0;
      int v21 = 0;
      a2 = 0;
      uint64_t v123 = 0;
      uint64_t v124 = 0;
      unint64_t v118 = 0xE000000000000000;
      uint64_t v119 = 0;
      unint64_t v22 = 0xE000000000000000;
      uint64_t v121 = 0xE000000000000000;
      uint64_t v122 = 0xE000000000000000;
      uint64_t v125 = 0xE000000000000000;
      uint64_t v126 = 0;
      uint64_t v23 = v17;
    }
  }
  else
  {
    int v120 = 0;
    int v21 = 0;
    uint64_t v123 = 0;
    uint64_t v124 = 0;
    unint64_t v118 = 0xE000000000000000;
    uint64_t v119 = 0;
    unint64_t v22 = 0xE000000000000000;
    uint64_t v121 = 0xE000000000000000;
    uint64_t v122 = 0xE000000000000000;
    uint64_t v125 = 0xE000000000000000;
    uint64_t v126 = 0;
    uint64_t v23 = v17;
  }
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_1000B0870;
  *(void *)(v92 + 32) = a2;
  *(void *)(v92 + 40) = v22;
  *(void *)(v92 + 48) = 0;
  *(unsigned char *)(v92 + 56) = 27;
  NSString v93 = String._bridgeToObjectiveC()();
  id v94 = sub_100007334(v93);

  uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v97 = v96;

  *(void *)(v92 + 64) = v95;
  *(void *)(v92 + 72) = v97;
  *(void *)(v92 + 80) = 1;
  *(unsigned char *)(v92 + 88) = 26;
  int v131 = v21;
  if (v21 == 4)
  {
    swift_bridgeObjectRelease();
    NSString v98 = String._bridgeToObjectiveC()();
    id v99 = sub_100007334(v98);

    uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v101;

    char v102 = 17;
  }
  else
  {
    char v102 = 30;
    uint64_t v100 = v117;
  }
  *(void *)(v92 + 96) = v100;
  *(void *)(v92 + 104) = v23;
  *(void *)(v92 + 112) = 1;
  *(unsigned char *)(v92 + 120) = v102;
  uint64_t v103 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v13, 1, 1, v103);
  memset(v145, 0, 80);
  uint64_t v104 = (uint64_t)v128;
  sub_1000501E0(0, 0, (uint64_t)v128);
  uint64_t v105 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v106 = (uint64_t)v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v129, 1, 1, v105);
  uint64_t v135 = 0;
  long long v133 = 0u;
  long long v134 = 0u;
  NSString v107 = String._bridgeToObjectiveC()();
  NSString v108 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)&v136);
  v142[0] = v136;
  v142[1] = v137;
  v142[2] = v138;
  v142[3] = v139;
  char v132 = 1;
  uint64_t v143 = v140;
  uint64_t v144 = v141;
  uint64_t v110 = v130;
  sub_10003A618(v126, v125, v124, v122, (uint64_t)v13, v123, v121, 0, v130, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v92, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v133,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v115,
    0,
    1,
    1,
    (uint64_t)v142,
    (uint64_t)v145,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v104,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    1,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v106);
  uint64_t v111 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  *(_DWORD *)((char *)v110 + v111[35]) = v131;
  *(_DWORD *)((char *)v110 + v111[36]) = v120;
  int v112 = (void *)((char *)v110 + v111[37]);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v114 = v118;
  *int v112 = v119;
  v112[1] = v114;
  return result;
}

uint64_t sub_10002A604@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v84 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v83 = (char *)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  id v82 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v85 = (uint64_t)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v80 = v12;
  uint64_t v81 = v11;

  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1000AF6D0;
  *(void *)(v23 + 32) = v15;
  *(void *)(v23 + 40) = v17;
  *(void *)(v23 + 48) = 0;
  *(unsigned char *)(v23 + 56) = 1;
  *(void *)(v23 + 64) = v20;
  *(void *)(v23 + 72) = v22;
  *(void *)(v23 + 80) = 1;
  uint64_t v79 = v23;
  *(unsigned char *)(v23 + 88) = 2;
  uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages);
  int64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = (uint64_t)_swiftEmptyArrayStorage;
  if (v25)
  {
    uint64_t v78 = a1;
    v101[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10008E9C0(0, v25, 0);
    uint64_t v26 = v101[0];
    v77[1] = v24;
    char v27 = (uint64_t *)(v24 + 56);
    do
    {
      uint64_t v28 = *(v27 - 2);
      Swift::String v86 = (void *)*(v27 - 3);
      uint64_t v30 = *(v27 - 1);
      uint64_t v29 = *v27;
      v101[0] = v26;
      unint64_t v32 = *(void *)(v26 + 16);
      unint64_t v31 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >= v31 >> 1)
      {
        sub_10008E9C0(v31 > 1, v32 + 1, 1);
        uint64_t v26 = v101[0];
      }
      v27 += 4;
      *(void *)(v26 + 16) = v32 + 1;
      id v33 = (void *)(v26 + 32 * v32);
      v33[4] = v86;
      v33[5] = v28;
      v33[6] = v30;
      v33[7] = v29;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a1 = v78;
  }
  uint64_t v34 = *(void *)(v26 + 16);
  if (v34) {
    goto LABEL_12;
  }
  if (qword_1000ED730 != -1) {
    goto LABEL_53;
  }
  while (1)
  {
    uint64_t v35 = type metadata accessor for Logger();
    sub_1000133A0(v35, (uint64_t)qword_1000EDF80);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      Swift::String v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "HomePodSetupViewModel: Array of available Siri languages unexpectedly empty.", v38, 2u);
      swift_slowDealloc();
    }

LABEL_12:
    Swift::String v39 = (void *)v26;
    uint64_t v40 = *(void *)(v26 + 16);
    if (v40) {
      break;
    }
LABEL_20:
    if (!v34) {
      goto LABEL_29;
    }
    uint64_t v49 = v39[4];
    unint64_t v48 = v39[5];
    uint64_t v50 = v39[6];
    a1 = v39[7];
    if (v49 == 0x53552D6E65 && v48 == 0xE500000000000000)
    {
LABEL_23:
      unint64_t v48 = 0xE500000000000000;
      swift_bridgeObjectRetain();
      uint64_t v49 = 0x53552D6E65;
      goto LABEL_27;
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
LABEL_26:
      swift_bridgeObjectRetain();
LABEL_27:
      swift_bridgeObjectRetain();
LABEL_30:
      uint64_t v91 = v49;
      unint64_t v92 = v48;
      uint64_t v93 = v50;
      uint64_t v94 = a1;
      goto LABEL_31;
    }
    if (v34 == 1)
    {
LABEL_29:
      uint64_t v49 = 0;
      unint64_t v48 = 0;
      uint64_t v50 = 0;
      a1 = 0;
      goto LABEL_30;
    }
    NSString v73 = v39 + 11;
    uint64_t v26 = 1;
    while (1)
    {
      uint64_t v74 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        break;
      }
      uint64_t v49 = *(v73 - 3);
      unint64_t v48 = *(v73 - 2);
      uint64_t v50 = *(v73 - 1);
      a1 = *v73;
      if (v49 == 0x53552D6E65 && v48 == 0xE500000000000000) {
        goto LABEL_23;
      }
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        goto LABEL_26;
      }
      uint64_t v49 = 0;
      unint64_t v48 = 0;
      uint64_t v50 = 0;
      a1 = 0;
      ++v26;
      v73 += 4;
      if (v74 == v34) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_53:
    swift_once();
  }
  id v41 = (void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
  uint64_t v42 = v39 + 7;
  while (1)
  {
    uint64_t v44 = *(v42 - 3);
    unint64_t v43 = *(v42 - 2);
    uint64_t v46 = *(v42 - 1);
    uint64_t v45 = *v42;
    BOOL v47 = v44 == *v41 && v43 == v41[1];
    if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    v42 += 4;
    if (!--v40) {
      goto LABEL_20;
    }
  }
  uint64_t v91 = v44;
  unint64_t v92 = v43;
  uint64_t v93 = v46;
  uint64_t v94 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_31:
  uint64_t v51 = (uint64_t)v39;
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v52 = type metadata accessor for Logger();
  sub_1000133A0(v52, (uint64_t)qword_1000EDF80);
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v53, v54))
  {
    Swift::String v55 = (uint8_t *)swift_slowAlloc();
    v101[0] = swift_slowAlloc();
    *(_DWORD *)Swift::String v55 = 136315138;
    swift_beginAccess();
    unint64_t v56 = v92;
    if (v92)
    {
      uint64_t v57 = v91;
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v56 = 0xE300000000000000;
      uint64_t v57 = 7104878;
    }
    *(void *)&v98[0] = sub_100048718(v57, v56, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "HomePodSetupViewModel: Default Option %s will be preselected in picker.", v55, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v51 = (uint64_t)v39;
  }
  else
  {
  }
  uint64_t v58 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v85, 1, 1, v58);
  Swift::String v86 = sub_10008C0C8(v51);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v59 = v91;
  uint64_t v60 = v92;
  uint64_t v61 = v93;
  uint64_t v62 = v94;
  if (v92)
  {
    *((void *)&v89 + 1) = &type metadata for LanguageOption;
    id v90 = &off_1000DC3A0;
    Swift::String v63 = (void *)swift_allocObject();
    *(void *)&long long v88 = v63;
    v63[2] = v59;
    v63[3] = v60;
    _OWORD v63[4] = v61;
    v63[5] = v62;
  }
  else
  {
    id v90 = 0;
    long long v88 = 0u;
    long long v89 = 0u;
  }
  uint64_t v64 = type metadata accessor for AdjustedImage(0);
  memset(v101, 0, 80);
  uint64_t v65 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v82, 1, 1, v64);
  uint64_t v66 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v67 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v83, 1, 1, v66);
  sub_10003DFC0(v59, v60);
  NSString v68 = String._bridgeToObjectiveC()();
  uint64_t v78 = v59;
  unint64_t v69 = v68;
  NSString v70 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v95);
  v98[0] = v95[0];
  v98[1] = v95[1];
  v98[2] = v95[2];
  v98[3] = v95[3];
  char v87 = 1;
  uint64_t v99 = v96;
  uint64_t v100 = v97;
  sub_10003A618(v81, v80, 0, 0xE000000000000000, v85, 0, 0xE000000000000000, 0, v84, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v79, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v86, (uint64_t)&v88,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v76,
    0,
    1,
    1,
    (uint64_t)v98,
    (uint64_t)v101,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v65,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v67);
  return sub_10003E004(v78, v60);
}

uint64_t sub_10002AFCC@<X0>(void *a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v13;
  uint64_t v44 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v22;
  uint64_t v42 = v21;

  uint64_t v23 = type metadata accessor for AdjustedMovie(0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v45 = v9;
  v24(v9, 1, 1, v23);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000B0850;
  *(void *)(v25 + 32) = v16;
  *(void *)(v25 + 40) = v18;
  *(void *)(v25 + 48) = 0;
  *(unsigned char *)(v25 + 56) = 1;
  id v26 = [self configurationWithPointSize:72.0];
  NSString v27 = String._bridgeToObjectiveC()();
  uint64_t v28 = self;
  id v29 = [v28 systemImageNamed:v27 withConfiguration:v26];

  if (!v29)
  {
    NSString v30 = String._bridgeToObjectiveC()();
    id v29 = [v28 imageNamed:v30];

    if (!v29) {
      id v29 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  sub_10000EE48(&qword_1000EF140);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1000B0690;
  *(void *)(v31 + 32) = v29;
  v56[0] = v31;
  specialized Array._endMutation()();
  uint64_t v32 = v56[0];
  uint64_t v33 = type metadata accessor for AdjustedImage(0);
  memset(v56, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v6, 1, 1, v33);
  uint64_t v34 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v3, 1, 1, v34);
  uint64_t v49 = 0;
  memset(v48, 0, sizeof(v48));
  NSString v35 = String._bridgeToObjectiveC()();
  NSString v36 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v50);
  v53[0] = v50[0];
  v53[1] = v50[1];
  v53[2] = v50[2];
  v53[3] = v50[3];
  char v47 = 1;
  uint64_t v54 = v51;
  uint64_t v55 = v52;
  return sub_10003A618(v44, v43, v42, v41, (uint64_t)v45, 0, 0xE000000000000000, 0, v46, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v25, v32, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v48,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v39,
           0,
           1,
           1,
           (uint64_t)v53,
           (uint64_t)v56,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

void sub_10002B550(void *a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v49 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v12;
  uint64_t v48 = v11;

  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v16;
  uint64_t v46 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100007334(v17);

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = sub_100007334(v22);

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000AF6D0;
  *(void *)(v27 + 32) = v19;
  *(void *)(v27 + 40) = v21;
  *(void *)(v27 + 48) = 0;
  *(unsigned char *)(v27 + 56) = 22;
  *(void *)(v27 + 64) = v24;
  *(void *)(v27 + 72) = v26;
  *(void *)(v27 + 80) = 1;
  *(unsigned char *)(v27 + 88) = 2;
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v31 = (id)CUAddSuffixForCurrentDeviceClass();

  if (v31)
  {
    id v32 = sub_100007334(v31);

    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    uint64_t v35 = type metadata accessor for AdjustedMovie(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v8, 1, 1, v35);
    uint64_t v36 = type metadata accessor for AdjustedImage(0);
    memset(v60, 0, 80);
    uint64_t v37 = (uint64_t)v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v5, 1, 1, v36);
    uint64_t v38 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    uint64_t v39 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v49, 1, 1, v38);
    uint64_t v53 = 0;
    memset(v52, 0, sizeof(v52));
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    uint64_t Int64 = CFPrefs_GetInt64();

    sub_100067438((uint64_t *)v54);
    v57[0] = v54[0];
    v57[1] = v54[1];
    v57[2] = v54[2];
    v57[3] = v54[3];
    char v51 = 1;
    uint64_t v58 = v55;
    uint64_t v59 = v56;
    sub_10003A618(v48, v47, v46, v45, (uint64_t)v8, v44, v34, 0, v50, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v27, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v52,
      (uint64_t)_swiftEmptyArrayStorage,
      (uint64_t)_swiftEmptyArrayStorage,
      Int64 != 0,
      v43,
      0,
      1,
      1,
      (uint64_t)v57,
      (uint64_t)v60,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      v37,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      v39);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002BABC@<X0>(void *a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  NSString v40 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v10;
  uint64_t v44 = v9;

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v14;
  uint64_t v42 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000AF6D0;
  *(void *)(v25 + 32) = v17;
  *(void *)(v25 + 40) = v19;
  *(void *)(v25 + 48) = 0;
  *(unsigned char *)(v25 + 56) = 1;
  *(void *)(v25 + 64) = v22;
  *(void *)(v25 + 72) = v24;
  *(void *)(v25 + 80) = 1;
  *(unsigned char *)(v25 + 88) = 2;
  uint64_t v26 = type metadata accessor for AdjustedMovie(0);
  uint64_t v27 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v38, 1, 1, v26);
  uint64_t v28 = type metadata accessor for AdjustedImage(0);
  memset(v55, 0, 80);
  uint64_t v29 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v39, 1, 1, v28);
  uint64_t v30 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v31 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v40, 1, 1, v30);
  uint64_t v48 = 0;
  memset(v47, 0, sizeof(v47));
  NSString v32 = String._bridgeToObjectiveC()();
  NSString v33 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v49);
  v52[0] = v49[0];
  v52[1] = v49[1];
  v52[2] = v49[2];
  v52[3] = v49[3];
  char v46 = 1;
  uint64_t v53 = v50;
  uint64_t v54 = v51;
  return sub_10003A618(v44, v43, v42, v41, v27, 0, 0xE000000000000000, 0, v45, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v25, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v47,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v36,
           0,
           1,
           1,
           (uint64_t)v52,
           (uint64_t)v55,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v29,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v31);
}

uint64_t sub_10002BF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v67 = a3;
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v60 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v68 = (uint64_t)&v56 - v7;
  uint64_t v8 = sub_10000EE48(&qword_1000EE040);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v12 = (char *)&v56 - v11;
  uint64_t v13 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v13 - 8);
  NSString v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  uint64_t v66 = (int *)v17;
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v23;
  uint64_t v63 = v22;

  uint64_t v24 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
  sub_10003DB28(a1);
  uint64_t v61 = v25;
  memset(v78, 0, 80);
  sub_1000501E0(0, 0, (uint64_t)v12);
  uint64_t v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v57 = *(void *)(v26 - 8);
  uint64_t v58 = v26;
  uint64_t v27 = v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 56))(v68, 1, 1);
  uint64_t v71 = 0;
  memset(v70, 0, sizeof(v70));
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v72);
  v75[0] = v72[0];
  v75[1] = v72[1];
  v75[2] = v72[2];
  v75[3] = v72[3];
  char v69 = 1;
  uint64_t v76 = v73;
  uint64_t v77 = v74;
  sub_10003A618(v63, v62, 0, 0xE000000000000000, (uint64_t)v15, 0, 0xE000000000000000, 0, v19, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v61, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v70,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v55,
    0,
    1,
    1,
    (uint64_t)v75,
    (uint64_t)v78,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v12,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v27);
  uint64_t v31 = v64;
  if (*(unsigned char *)(a1 + v64) == 5
    && (*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2)
  {
    NSString v32 = v66;
    if (qword_1000ED730 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_1000133A0(v33, (uint64_t)qword_1000EDF80);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      int v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "createProgressViewModel creating stereo pair image for mini", v36, 2u);
      swift_slowDealloc();
    }

    uint64_t v37 = v68;
    sub_10003AA58(a1, 0, 0, v68);
    sub_10003DE30(v37, (uint64_t)v19 + v32[48]);
  }
  else
  {
    NSString v32 = v66;
    if (qword_1000ED730 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_1000133A0(v38, (uint64_t)qword_1000EDF80);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "createProgressViewModel useSoloHomePodConstraints set to true", v41, 2u);
      swift_slowDealloc();
    }

    *((unsigned char *)v19 + v32[28]) = 1;
    uint64_t v42 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
    *(double *)((char *)v19 + v32[29]) = sub_10003E088(1, *(_DWORD *)(a1+ OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole), *(unsigned char *)(a1 + v31));
    *(double *)((char *)v19 + v32[30]) = sub_10003E088(0, *(_DWORD *)(a1 + v42), *(unsigned char *)(a1 + v31));
  }
  uint64_t v43 = (char *)v19 + v32[17];
  char v44 = BYTE4(v65);
  *(_DWORD *)uint64_t v43 = v65;
  v43[4] = v44 & 1;
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_1000133A0(v45, (uint64_t)qword_1000EDF80);
  char v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 67109376;
    swift_beginAccess();
    uint64_t v49 = v59;
    sub_10000FD94((uint64_t)v19 + v32[27], v59, &qword_1000EE040);
    uint64_t v50 = type metadata accessor for AdjustedImage(0);
    BOOL v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v49, 1, v50) != 1;
    sub_10000F674(v49, &qword_1000EE040);
    v70[0] = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v48 + 8) = 1024;
    uint64_t v52 = (uint64_t)v19 + v32[48];
    uint64_t v53 = v60;
    sub_10000FD94(v52, v60, &qword_1000EE048);
    LODWORD(v49) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v53, 1, v58) != 1;
    sub_10000F674(v53, &qword_1000EE048);
    v70[0] = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "createProgressViewModel: productImage exists = %{BOOL}d | stereoPairImages exists = %{BOOL}d", (uint8_t *)v48, 0xEu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  sub_10003DDC8((uint64_t)v19, v67, type metadata accessor for HomePodSetupViewModel);
  return sub_10001B3A8((uint64_t)v19, type metadata accessor for HomePodSetupViewModel);
}

double sub_10002C83C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v96 = a4;
  uint64_t v97 = a2;
  uint64_t v6 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v6 - 8);
  uint64_t v94 = &v85[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v8 - 8);
  uint64_t v93 = &v85[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = &v85[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000133A0(v12, (uint64_t)qword_1000EDF80);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v95 = a1;
  if (v15)
  {
    uint64_t v16 = a3;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v112[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    if (!v16) {
      sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
    }
    NSString v98 = v17 + 4;
    swift_bridgeObjectRetain();
    uint64_t v18 = Dictionary.description.getter();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v106 = sub_100048718(v18, v20, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "createProgressUIForHomePodSUViewModel created, dict = %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v16;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = sub_100007334(v26);

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  uint64_t v91 = v25;
  uint64_t v92 = v23;
  NSString v98 = (uint8_t *)v28;
  if (!a3)
  {
    uint64_t v90 = v30;
    long long v106 = 0u;
    long long v107 = 0u;
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    long long v106 = 0u;
    long long v107 = 0u;
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    long long v106 = 0u;
    long long v107 = 0u;
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    int v89 = 0;
    int v34 = 0;
    long long v106 = 0u;
    long long v107 = 0u;
LABEL_46:
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    goto LABEL_47;
  }
  *(void *)&v103[0] = 0xD00000000000001ALL;
  *((void *)&v103[0] + 1) = 0x80000001000B5660;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a3 + 16) && (unint64_t v31 = sub_10005513C((uint64_t)v112), (v32 & 1) != 0))
  {
    sub_10000F578(*(void *)(a3 + 56) + 32 * v31, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  sub_10000F474((uint64_t)v112);
  if (!*((void *)&v107 + 1))
  {
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
LABEL_18:
    int v33 = 0;
    goto LABEL_19;
  }
  int v33 = LOBYTE(v112[0]);
LABEL_19:
  *(void *)&v103[0] = 0xD000000000000013;
  *((void *)&v103[0] + 1) = 0x80000001000B5640;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a3 + 16) && (unint64_t v35 = sub_10005513C((uint64_t)v112), (v36 & 1) != 0))
  {
    sub_10000F578(*(void *)(a3 + 56) + 32 * v35, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  sub_10000F474((uint64_t)v112);
  if (!*((void *)&v107 + 1))
  {
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    goto LABEL_27;
  }
  if (!swift_dynamicCast())
  {
LABEL_27:
    int v34 = 0;
    goto LABEL_28;
  }
  int v34 = v112[0];
LABEL_28:
  *(void *)&v103[0] = 0xD000000000000016;
  *((void *)&v103[0] + 1) = 0x80000001000B5620;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a3 + 16) && (unint64_t v37 = sub_10005513C((uint64_t)v112), (v38 & 1) != 0))
  {
    sub_10000F578(*(void *)(a3 + 56) + 32 * v37, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  sub_10000F474((uint64_t)v112);
  if (*((void *)&v107 + 1))
  {
    if (swift_dynamicCast())
    {
      int v89 = LOBYTE(v112[0]);
      if ((v33 & 1) == 0) {
        goto LABEL_39;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      NSString v39 = String._bridgeToObjectiveC()();
      id v40 = sub_100007334(v39);

      NSString v98 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v90 = v41;

      uint64_t v87 = 0xE000000000000000;
      uint64_t v88 = 0;
      int v86 = 1;
      goto LABEL_53;
    }
    int v89 = 0;
    if (v33) {
      goto LABEL_37;
    }
  }
  else
  {
    sub_10000F674((uint64_t)&v106, &qword_1000EE410);
    int v89 = 0;
    if (v33) {
      goto LABEL_37;
    }
  }
LABEL_39:
  strcpy((char *)v103, "hp_su_est_time");
  HIBYTE(v103[0]) = -18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a3 + 16) && (unint64_t v42 = sub_10005513C((uint64_t)v112), (v43 & 1) != 0))
  {
    sub_10000F578(*(void *)(a3 + 56) + 32 * v42, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  sub_10000F474((uint64_t)v112);
  uint64_t v90 = v30;
  if (!*((void *)&v107 + 1)) {
    goto LABEL_46;
  }
  if (swift_dynamicCast())
  {
    uint64_t v44 = sub_10003E35C();
    char v46 = v45;
    goto LABEL_48;
  }
LABEL_47:
  NSString v47 = String._bridgeToObjectiveC()();
  id v48 = sub_100007334(v47);

  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v46 = v49;

LABEL_48:
  uint64_t v50 = sub_10003E540();
  if (v34 == 5)
  {
    uint64_t v87 = v51;
    uint64_t v88 = v50;
    swift_bridgeObjectRelease();
    int v86 = 0;
  }
  else if (v34)
  {
    v112[0] = v50;
    v112[1] = v51;
    v56._uint64_t countAndFlagsBits = 8250;
    v56._object = (void *)0xE200000000000000;
    String.append(_:)(v56);
    v57._uint64_t countAndFlagsBits = v44;
    v57._object = v46;
    String.append(_:)(v57);
    swift_bridgeObjectRelease();
    int v86 = 0;
    uint64_t v87 = v112[1];
    uint64_t v88 = v112[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v52 = String._bridgeToObjectiveC()();
    id v53 = sub_100007334(v52);

    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v55;
    uint64_t v88 = v54;

    int v86 = 0;
  }
LABEL_53:
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = sub_100007334(v58);

  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v61;

  NSString v63 = String._bridgeToObjectiveC()();
  id v64 = sub_100007334(v63);

  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_1000AF6D0;
  *(void *)(v68 + 32) = v60;
  *(void *)(v68 + 40) = v62;
  *(void *)(v68 + 48) = 0;
  *(unsigned char *)(v68 + 56) = 1;
  *(void *)(v68 + 64) = v65;
  *(void *)(v68 + 72) = v67;
  *(void *)(v68 + 80) = 1;
  *(unsigned char *)(v68 + 88) = 21;
  uint64_t v69 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v99, 1, 1, v69);
  memset(v112, 0, 80);
  NSString v70 = v93;
  uint64_t v71 = v95;
  sub_1000501E0(0, 0, (uint64_t)v93);
  uint64_t v72 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v73 = (uint64_t)v94;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v94, 1, 1, v72);
  uint64_t v102 = 0;
  memset(v101, 0, sizeof(v101));
  NSString v74 = String._bridgeToObjectiveC()();
  NSString v75 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v103);
  long long v106 = v103[0];
  long long v107 = v103[1];
  long long v108 = v103[2];
  long long v109 = v103[3];
  char v100 = 1;
  uint64_t v110 = v104;
  uint64_t v111 = v105;
  uint64_t v77 = v96;
  sub_10003A618(v92, v91, (uint64_t)v98, v90, (uint64_t)v99, v88, v87, 0, v96, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v68, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v101,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v84,
    0,
    1,
    1,
    (uint64_t)&v106,
    (uint64_t)v112,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v70,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v73);
  uint64_t v78 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  *((unsigned char *)v77 + v78[28]) = 1;
  if (v89) {
    *((unsigned char *)v77 + v78[33]) = 1;
  }
  *((unsigned char *)v77 + v78[34]) = v86;
  uint64_t v79 = 8 * (*(unsigned char *)(v71 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5);
  double result = *(double *)((char *)&unk_1000B0880 + v79);
  uint64_t v81 = *(void *)((char *)&unk_1000B0890 + v79);
  *(double *)((char *)v77 + v78[29]) = result;
  *(void *)((char *)v77 + v78[30]) = v81;
  id v82 = (char *)v77 + v78[17];
  char v83 = BYTE4(v97);
  *(_DWORD *)id v82 = v97;
  v82[4] = v83 & 1;
  return result;
}

double sub_10002D43C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v44 = a1;
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  char v43 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v42 = v11;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v15;
  uint64_t v48 = v14;

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v19;
  uint64_t v46 = v18;

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000B0850;
  *(void *)(v25 + 32) = v22;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 48) = 0;
  *(unsigned char *)(v25 + 56) = 1;
  uint64_t v26 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
  memset(v59, 0, 80);
  uint64_t v27 = (uint64_t)v8;
  uint64_t v28 = v44;
  sub_1000501E0(0, 0, (uint64_t)v8);
  uint64_t v29 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v30 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v43, 1, 1, v29);
  uint64_t v52 = 0;
  memset(v51, 0, sizeof(v51));
  NSString v31 = String._bridgeToObjectiveC()();
  NSString v32 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v53);
  v56[0] = v53[0];
  v56[1] = v53[1];
  v56[2] = v53[2];
  v56[3] = v53[3];
  char v50 = 1;
  uint64_t v57 = v54;
  uint64_t v58 = v55;
  sub_10003A618(v48, v47, v46, v45, (uint64_t)v42, 0, 0xE000000000000000, 0, a3, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v25, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v51,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v40,
    0,
    1,
    1,
    (uint64_t)v56,
    (uint64_t)v59,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v27,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v30);
  int v34 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  *((unsigned char *)a3 + v34[28]) = 1;
  uint64_t v35 = 8 * (*(unsigned char *)(v28 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5);
  double result = *(double *)((char *)&unk_1000B0880 + v35);
  uint64_t v37 = *(void *)((char *)&unk_1000B0890 + v35);
  *(double *)((char *)a3 + v34[29]) = result;
  *(void *)((char *)a3 + v34[30]) = v37;
  char v38 = (char *)a3 + v34[17];
  char v39 = BYTE4(v49);
  *(_DWORD *)char v38 = v49;
  v38[4] = v39 & 1;
  return result;
}

void sub_10002D8F0(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v10 - 8);
  NSString v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate);
  int v14 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showHomepodSoftwareUpdate);
  Swift::String v56 = a2;
  if (v14 == 1) {
    v13 |= *(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_isHomeInHH2);
  }
  if (v13)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = sub_100007334(v15);

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v18;
    uint64_t v55 = v17;

    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = sub_100007334(v19);

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v22;
    uint64_t v53 = v21;
  }
  else
  {
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = sub_100007334(v23);

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v26;
    uint64_t v55 = v25;

    uint64_t v52 = 0xE000000000000000;
    uint64_t v53 = 0;
  }
  uint64_t v27 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 1, 1, v27);
  sub_10003DB28(a1);
  uint64_t v51 = v28;
  memset(v66, 0, 80);
  sub_1000501E0(0, 0, (uint64_t)v9);
  uint64_t v29 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
  uint64_t v59 = 0;
  memset(v58, 0, sizeof(v58));
  NSString v30 = String._bridgeToObjectiveC()();
  NSString v31 = String._bridgeToObjectiveC()();
  uint64_t v32 = (uint64_t)v12;
  uint64_t v33 = (uint64_t)v6;
  uint64_t Int64 = CFPrefs_GetInt64();

  uint64_t v35 = v33;
  sub_100067438((uint64_t *)v60);
  v63[0] = v60[0];
  v63[1] = v60[1];
  v63[2] = v60[2];
  v63[3] = v60[3];
  char v57 = 1;
  uint64_t v64 = v61;
  uint64_t v65 = v62;
  char v36 = v56;
  sub_10003A618(v55, v54, v53, v52, v32, 0, 0xE000000000000000, 0, v56, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v51, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v58,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v49,
    0,
    1,
    1,
    (uint64_t)v63,
    (uint64_t)v66,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v9,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v33);
  uint64_t v37 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5
    && (*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2)
  {
    if (qword_1000ED730 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_1000133A0(v38, (uint64_t)qword_1000EDF80);
    char v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "createDoneViewModel creating stereo pair image for mini", v41, 2u);
      swift_slowDealloc();
    }

    sub_10003AA58(a1, 0, 0, v35);
    uint64_t v42 = type metadata accessor for HomePodSetupViewModel(0);
    sub_10003DE30(v35, (uint64_t)v36 + *(int *)(v42 + 192));
  }
  else
  {
    if (qword_1000ED730 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_1000133A0(v43, (uint64_t)qword_1000EDF80);
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "createDoneViewModel useSoloHomePodConstraints set to true", v46, 2u);
      swift_slowDealloc();
    }

    uint64_t v47 = (int *)type metadata accessor for HomePodSetupViewModel(0);
    *((unsigned char *)v36 + v47[28]) = 1;
    uint64_t v48 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
    *(double *)((char *)v36 + v47[29]) = sub_10003E088(1, *(_DWORD *)(a1+ OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole), *(unsigned char *)(a1 + v37));
    *(double *)((char *)v36 + v47[30]) = sub_10003E088(0, *(_DWORD *)(a1 + v48), *(unsigned char *)(a1 + v37));
  }
}

uint64_t sub_10002DF6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v10 - 8);
  NSString v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  uint64_t v46 = sub_10003E66C(v15, v17, 0, 1);
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10000EE48(&qword_1000EE398);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status;
  int v22 = *(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status);
  *(_OWORD *)(v20 + 16) = xmmword_1000B0850;
  *(void *)(v20 + 56) = &type metadata for Int32;
  *(void *)(v20 + 64) = &protocol witness table for Int32;
  *(_DWORD *)(v20 + 32) = v22;
  uint64_t v23 = String.init(format:_:)();
  uint64_t v44 = v24;
  swift_bridgeObjectRelease();
  int v25 = IsAppleInternalBuild();
  uint64_t v47 = a2;
  uint64_t v45 = v23;
  if (v25)
  {
    uint64_t v26 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
    v57[0] = 0x6C616E7265746E49;
    v57[1] = 0xEA0000000000203ALL;
    if (v26)
    {
      id v27 = v26;
      id v28 = [v27 description];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v31 = v30;

      v32._uint64_t countAndFlagsBits = v29;
      v32._object = v31;
      String.append(_:)(v32);
    }
    else
    {
      LODWORD(v54[0]) = *(_DWORD *)(a1 + v21);
      v35._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v35);
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = v57[1];
    uint64_t v33 = v57[0];
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0xE000000000000000;
  }
  uint64_t v36 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 1, 1, v36);
  memset(v57, 0, 80);
  sub_1000501E0(0, 0, (uint64_t)v9);
  uint64_t v37 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v6, 1, 1, v37);
  uint64_t v50 = 0;
  memset(v49, 0, sizeof(v49));
  NSString v38 = String._bridgeToObjectiveC()();
  NSString v39 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v51);
  v54[0] = v51[0];
  v54[1] = v51[1];
  v54[2] = v51[2];
  v54[3] = v51[3];
  char v48 = 1;
  uint64_t v55 = v52;
  uint64_t v56 = v53;
  return sub_10003A618(v45, v44, v33, v34, (uint64_t)v12, 0, 0xE000000000000000, 0, v47, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v46, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v49,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v42,
           0,
           1,
           1,
           (uint64_t)v54,
           (uint64_t)v57,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v9,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v6);
}

uint64_t sub_10002E490@<X0>(void *a1@<X8>)
{
  NSString v70 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v69 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v68 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v71 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = self;
  id v12 = [v11 mainScreen];
  [v12 scale];
  double v14 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  uint64_t v16 = self;
  id v17 = [v16 imageNamed:v15];

  if (!v17
    || (id v18 = [v17 _applicationIconImageForFormat:2 precomposed:1 scale:v14],
        v17,
        !v18))
  {
    id v18 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v19 = objc_allocWithZone((Class)PRXFeature);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v67 = [v19 initWithTitle:v20 detailText:v21 icon:v18 tintColor:0 valueChangedBlock:0];

  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = sub_100007334(v22);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = sub_100007334(v24);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = [v11 mainScreen];
  [v26 scale];
  double v28 = v27;

  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v16 _applicationIconImageForBundleIdentifier:v29 format:2 scale:v28];

  if (!v30) {
    id v30 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v31 = objc_allocWithZone((Class)PRXFeature);
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v34 = [v31 initWithTitle:v32 detailText:v33 icon:v30 tintColor:0 valueChangedBlock:0];

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1000B0850;
  NSString v36 = String._bridgeToObjectiveC()();
  id v37 = sub_100007334(v36);

  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = v39;

  *(void *)(v35 + 32) = v38;
  *(void *)(v35 + 40) = v40;
  *(void *)(v35 + 48) = 0;
  *(unsigned char *)(v35 + 56) = 15;
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = sub_100007334(v41);

  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v65 = v44;
  uint64_t v66 = v43;

  uint64_t v45 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v71, 1, 1, v45);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1000B08A0;
  uint64_t v47 = (void *)v67;
  *(void *)(v46 + 32) = v67;
  *(void *)(v46 + 40) = v34;
  v81[0] = v46;
  specialized Array._endMutation()();
  uint64_t v64 = v81[0];
  uint64_t v48 = type metadata accessor for AdjustedImage(0);
  memset(v81, 0, 80);
  uint64_t v49 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v68, 1, 1, v48);
  uint64_t v50 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v51 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v69, 1, 1, v50);
  uint64_t v74 = 0;
  memset(v73, 0, sizeof(v73));
  id v52 = v47;
  id v53 = v34;
  NSString v54 = String._bridgeToObjectiveC()();
  NSString v55 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v54) = Int64 != 0;
  sub_100067438((uint64_t *)v75);
  long long v67 = v75[0];
  long long v62 = v75[2];
  long long v63 = v75[1];
  long long v61 = v75[3];
  uint64_t v57 = v76;
  uint64_t v58 = v77;

  v78[0] = v67;
  v78[1] = v63;
  v78[2] = v62;
  v78[3] = v61;
  uint64_t v79 = v57;
  uint64_t v80 = v58;
  char v72 = 1;
  return sub_10003A618(v66, v65, 0, 0xE000000000000000, v71, 0, 0xE000000000000000, 0, v70, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v35, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v73,
           (uint64_t)_swiftEmptyArrayStorage,
           v64,
           (char)v54,
           v60,
           0,
           1,
           1,
           (uint64_t)v78,
           (uint64_t)v81,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v49,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v51);
}

uint64_t sub_10002ECC4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  NSString v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000AF6D0;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(v11 + 32) = v14;
  *(void *)(v11 + 40) = v16;
  *(void *)(v11 + 48) = 0;
  *(unsigned char *)(v11 + 56) = 15;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100007334(v17);

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *(void *)(v11 + 64) = v19;
  *(void *)(v11 + 72) = v21;
  *(void *)(v11 + 80) = 1;
  *(unsigned char *)(v11 + 88) = 2;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = sub_100007334(v22);

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v25;

  uint64_t v26 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 1, 1, v26);
  *((void *)&v63 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(void *)&long long v64 = sub_10003E78C();
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v62);
  uint64_t v51 = v10;
  id v52 = a1;
  uint64_t v50 = v24;
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = sub_100007334(v27);

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v30;
  uint64_t v48 = v29;

  sub_10000EE48(&qword_1000EF140);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1000B0690;
  id v32 = [self mainScreen];
  [v32 scale];
  double v34 = v33;

  uint64_t v35 = self;
  NSString v36 = String._bridgeToObjectiveC()();
  id v37 = [v35 _applicationIconImageForBundleIdentifier:v36 format:2 scale:v34];

  if (!v37) {
    id v37 = [objc_allocWithZone((Class)UIImage) init];
  }
  *(void *)(v31 + 32) = v37;
  *(void *)&long long v62 = v31;
  specialized Array._endMutation()();
  uint64_t v38 = v62;
  uint64_t v39 = type metadata accessor for AdjustedImage(0);
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v7, 1, 1, v39);
  uint64_t v40 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v4, 1, 1, v40);
  uint64_t v55 = 0;
  memset(v54, 0, sizeof(v54));
  NSString v41 = String._bridgeToObjectiveC()();
  NSString v42 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v56);
  v59[0] = v56[0];
  v59[1] = v56[1];
  v59[2] = v56[2];
  v59[3] = v56[3];
  char v53 = 1;
  uint64_t v60 = v57;
  uint64_t v61 = v58;
  return sub_10003A618(v50, v49, 0, 0xE000000000000000, (uint64_t)v51, v48, v47, 0, v52, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v11, v38, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v54,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v45,
           0,
           1,
           1,
           (uint64_t)v59,
           (uint64_t)&v62,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v7,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v4);
}

uint64_t sub_10002F2C0@<X0>(void *a1@<X8>)
{
  long long v65 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  long long v64 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v12;
  uint64_t v63 = v11;

  id v13 = [self mainScreen];
  [v13 scale];
  double v15 = v14;

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self imageNamed:v16];

  if (!v17
    || (id v18 = [v17 _applicationIconImageForFormat:2 precomposed:1 scale:v15],
        v17,
        !v18))
  {
    id v18 = [objc_allocWithZone((Class)UIImage) init];
  }
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000AF6D0;
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v24;
  *(void *)(v19 + 48) = 0;
  *(unsigned char *)(v19 + 56) = 18;
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = sub_100007334(v25);

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  *(void *)(v19 + 64) = v27;
  *(void *)(v19 + 72) = v29;
  *(void *)(v19 + 80) = 1;
  *(unsigned char *)(v19 + 88) = 2;
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = sub_100007334(v30);

  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v33;
  uint64_t v61 = v32;

  uint64_t v34 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v8, 1, 1, v34);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1000B0690;
  *(void *)(v35 + 32) = v18;
  v75[0] = v35;
  specialized Array._endMutation()();
  uint64_t v59 = v75[0];
  memset(v75, 0, 80);
  id v36 = v18;
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = sub_100007334(v37);

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v40;
  uint64_t v58 = v39;

  uint64_t v41 = type metadata accessor for AdjustedImage(0);
  uint64_t v42 = (uint64_t)v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v5, 1, 1, v41);
  uint64_t v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v44 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v64, 1, 1, v43);
  uint64_t v68 = 0;
  memset(v67, 0, sizeof(v67));
  NSString v45 = String._bridgeToObjectiveC()();
  uint64_t v46 = (uint64_t)v8;
  NSString v47 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v69);
  long long v55 = v69[1];
  long long v56 = v69[0];
  long long v53 = v69[3];
  long long v54 = v69[2];
  uint64_t v49 = v70;
  uint64_t v50 = v71;

  v72[0] = v56;
  v72[1] = v55;
  v72[2] = v54;
  v72[3] = v53;
  uint64_t v73 = v49;
  uint64_t v74 = v50;
  char v66 = 1;
  return sub_10003A618(v61, v60, 0, 0xE000000000000000, v46, v63, v62, 0, v65, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v19, v59, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v67,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v52,
           0,
           1,
           1,
           (uint64_t)v72,
           (uint64_t)v75,
           0,
           0,
           v58,
           v57,
           0xD000000000000025,
           0x80000001000B5C50,
           0,
           0,
           0,
           v42,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v44);
}

uint64_t sub_10002F948@<X0>(void *a1@<X8>)
{
  long long v53 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  int v52 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v51 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v11;
  uint64_t v50 = v10;

  id v12 = [self mainScreen];
  [v12 scale];
  double v14 = v13;

  double v15 = self;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 _applicationIconImageForBundleIdentifier:v16 format:2 scale:v14];

  if (!v17) {
    id v17 = [objc_allocWithZone((Class)UIImage) init];
  }
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1000B0850;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  *(void *)(v18 + 32) = v21;
  *(void *)(v18 + 40) = v23;
  *(void *)(v18 + 48) = 0;
  *(unsigned char *)(v18 + 56) = 1;
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = sub_100007334(v24);

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v27;
  uint64_t v48 = v26;

  uint64_t v28 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1000B0690;
  *(void *)(v29 + 32) = v17;
  v63[0] = v29;
  specialized Array._endMutation()();
  uint64_t v46 = v63[0];
  uint64_t v30 = type metadata accessor for AdjustedImage(0);
  memset(v63, 0, 80);
  uint64_t v31 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v51, 1, 1, v30);
  uint64_t v32 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v33 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v52, 1, 1, v32);
  uint64_t v56 = 0;
  memset(v55, 0, sizeof(v55));
  id v34 = v17;
  NSString v35 = String._bridgeToObjectiveC()();
  NSString v36 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v35) = Int64 != 0;
  sub_100067438((uint64_t *)v57);
  long long v44 = v57[1];
  long long v45 = v57[0];
  long long v42 = v57[3];
  long long v43 = v57[2];
  uint64_t v38 = v58;
  uint64_t v39 = v59;

  v60[0] = v45;
  v60[1] = v44;
  v60[2] = v43;
  v60[3] = v42;
  uint64_t v61 = v38;
  uint64_t v62 = v39;
  char v54 = 1;
  return sub_10003A618(v48, v47, 0, 0xE000000000000000, (uint64_t)v7, v50, v49, 0, v53, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v18, v46, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v55,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v35,
           v41,
           0,
           1,
           1,
           (uint64_t)v60,
           (uint64_t)v63,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v31,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v33);
}

uint64_t sub_10002FEE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(void *)&long long v45 = a1;
  long long v53 = a2;
  uint64_t v2 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v2 - 8);
  uint64_t v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_10003E7E0();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v14;
  uint64_t v50 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v18;
  uint64_t v48 = v17;

  uint64_t v19 = type metadata accessor for AdjustedMovie(0);
  id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  int v52 = v9;
  v20(v9, 1, 1, v19);
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000B0850;
  *(void *)(v26 + 32) = v23;
  *(void *)(v26 + 40) = v25;
  *(void *)(v26 + 48) = 0;
  *(unsigned char *)(v26 + 56) = 1;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000B0690;
  *(void *)(v27 + 32) = v10;
  v63[0] = v27;
  specialized Array._endMutation()();
  uint64_t v46 = v63[0];
  uint64_t v28 = qword_1000ED740;
  id v29 = v10;
  if (v28 != -1) {
    swift_once();
  }
  char v30 = 1;
  if (!*(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags)) {
    char v30 = *(void *)(v45 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  }
  uint64_t v31 = type metadata accessor for AdjustedImage(0);
  memset(v63, 0, 80);
  uint64_t v32 = (uint64_t)v6;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v6, 1, 1, v31);
  uint64_t v33 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v34 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v51, 1, 1, v33);
  uint64_t v56 = 0;
  memset(v55, 0, sizeof(v55));
  NSString v35 = String._bridgeToObjectiveC()();
  NSString v36 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v35) = Int64 != 0;
  sub_100067438((uint64_t *)v57);
  long long v44 = v57[1];
  long long v45 = v57[0];
  long long v42 = v57[3];
  long long v43 = v57[2];
  uint64_t v38 = v58;
  uint64_t v39 = v59;

  v60[0] = v45;
  v60[1] = v44;
  v60[2] = v43;
  v60[3] = v42;
  uint64_t v61 = v38;
  uint64_t v62 = v39;
  char v54 = 1;
  return sub_10003A618(v50, v49, 0, 0xE000000000000000, (uint64_t)v52, v48, v47, 0, v53, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v26, v46, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v55,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v35,
           v41,
           0,
           1,
           1,
           (uint64_t)v60,
           (uint64_t)v63,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v30,
           v32,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v34);
}

uint64_t sub_100030424@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(void *)&long long v52 = a1;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  NSString v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = sub_10003E7E0();
  uint64_t v13 = WiFiCopyCurrentNetworkInfo();
  uint64_t v61 = a2;
  uint64_t v58 = v8;
  uint64_t v59 = v5;
  if (!v13
    || (uint64_t v14 = (void *)v13,
        *(void *)&long long v71 = 0,
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(),
        v14,
        (uint64_t v15 = v71) == 0))
  {
    long long v71 = 0u;
    long long v72 = 0u;
    goto LABEL_10;
  }
  if (!*(void *)(v71 + 16) || (unint64_t v16 = sub_100055184(1684632435, 0xE400000000000000), (v17 & 1) == 0))
  {
    long long v71 = 0u;
    long long v72 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10000F578(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v71);
  swift_bridgeObjectRelease();
  if (!*((void *)&v72 + 1))
  {
LABEL_10:
    sub_10000F674((uint64_t)&v71, &qword_1000EE410);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    unint64_t v18 = *((void *)&v68[0] + 1);
    uint64_t v19 = *(void *)&v68[0];
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v18 = 0xE100000000000000;
  uint64_t v19 = 63;
LABEL_12:
  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  long long v53 = xmmword_1000B0850;
  *(_OWORD *)(inited + 16) = xmmword_1000B0850;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v21 = sub_10003D0C8();
  *(void *)(inited + 32) = v19;
  *(void *)(inited + 64) = v21;
  *(void *)(inited + 40) = v18;
  *(void *)&long long v71 = 0;
  *((void *)&v71 + 1) = 0xE000000000000000;
  sub_10003C0DC(inited, (uint64_t *)&v71);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  uint64_t v56 = *((void *)&v71 + 1);
  uint64_t v57 = v71;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = sub_100007334(v22);

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v25;
  uint64_t v55 = v24;

  uint64_t v26 = type metadata accessor for AdjustedMovie(0);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v60 = v11;
  v27(v11, 1, 1, v26);
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v53;
  *(void *)(v33 + 32) = v30;
  *(void *)(v33 + 40) = v32;
  *(void *)(v33 + 48) = 0;
  *(unsigned char *)(v33 + 56) = 1;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1000B0690;
  *(void *)(v34 + 32) = v12;
  *(void *)&long long v71 = v34;
  specialized Array._endMutation()();
  *(void *)&long long v53 = v71;
  uint64_t v35 = qword_1000ED740;
  id v36 = v12;
  if (v35 != -1) {
    swift_once();
  }
  char v37 = 1;
  if (!*(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags)) {
    char v37 = *(void *)(v52 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  }
  uint64_t v38 = type metadata accessor for AdjustedImage(0);
  long long v71 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  uint64_t v39 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v58, 1, 1, v38);
  uint64_t v40 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v41 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v59, 1, 1, v40);
  uint64_t v64 = 0;
  memset(v63, 0, sizeof(v63));
  NSString v42 = String._bridgeToObjectiveC()();
  NSString v43 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v65);
  long long v51 = v65[1];
  long long v52 = v65[0];
  long long v49 = v65[3];
  long long v50 = v65[2];
  uint64_t v45 = v66;
  uint64_t v46 = v67;

  v68[0] = v52;
  v68[1] = v51;
  v68[2] = v50;
  v68[3] = v49;
  uint64_t v69 = v45;
  uint64_t v70 = v46;
  char v62 = 1;
  return sub_10003A618(v55, v54, 0, 0xE000000000000000, (uint64_t)v60, v57, v56, 0, v61, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v33, v53, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v63,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v48,
           0,
           1,
           1,
           (uint64_t)v68,
           (uint64_t)&v71,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v37,
           v39,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v41);
}

uint64_t sub_100030AA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v55 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v13;
  uint64_t v53 = v12;

  id v14 = sub_10003E7E0();
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = sub_100007614();

  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v19;
  uint64_t v51 = v18;

  uint64_t v20 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000B0850;
  *(void *)(v26 + 32) = v23;
  *(void *)(v26 + 40) = v25;
  *(void *)(v26 + 48) = 0;
  *(unsigned char *)(v26 + 56) = 1;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000B0690;
  *(void *)(v27 + 32) = v14;
  v68[0] = v27;
  specialized Array._endMutation()();
  uint64_t v49 = v68[0];
  id v47 = v14;
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v30;

  if (qword_1000ED740 != -1) {
    swift_once();
  }
  uint64_t v56 = v9;
  char v31 = 1;
  if (!*(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags)) {
    char v31 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  }
  uint64_t v32 = type metadata accessor for AdjustedImage(0);
  memset(v68, 0, 80);
  uint64_t v33 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v54, 1, 1, v32);
  uint64_t v34 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v35 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v55, 1, 1, v34);
  uint64_t v61 = 0;
  memset(v60, 0, sizeof(v60));
  NSString v36 = String._bridgeToObjectiveC()();
  NSString v37 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v36) = Int64 != 0;
  sub_100067438((uint64_t *)v62);
  long long v45 = v62[1];
  long long v46 = v62[0];
  long long v43 = v62[3];
  long long v44 = v62[2];
  uint64_t v39 = v63;
  uint64_t v40 = v64;

  v65[0] = v46;
  v65[1] = v45;
  v65[2] = v44;
  v65[3] = v43;
  uint64_t v66 = v39;
  uint64_t v67 = v40;
  char v59 = 1;
  return sub_10003A618(v53, v52, 0, 0xE000000000000000, (uint64_t)v56, v51, v50, 0, v57, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v26, v49, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v60,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v36,
           v42,
           0,
           1,
           1,
           (uint64_t)v65,
           (uint64_t)v68,
           0,
           0,
           v58,
           v48,
           0,
           0,
           0xD000000000000025,
           0x80000001000B5E20,
           v31,
           v33,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v35);
}

uint64_t sub_1000310C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(void *)&long long v46 = a1;
  uint64_t v57 = a2;
  uint64_t v2 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v2 - 8);
  uint64_t v55 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_10003E7E0();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v13;
  uint64_t v53 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = sub_100007614();

  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v18;
  uint64_t v51 = v17;

  uint64_t v19 = type metadata accessor for AdjustedMovie(0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v56 = v8;
  v20(v8, 1, 1, v19);
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000B0850;
  *(void *)(v26 + 32) = v23;
  *(void *)(v26 + 40) = v25;
  *(void *)(v26 + 48) = 0;
  *(unsigned char *)(v26 + 56) = 1;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000B0690;
  *(void *)(v27 + 32) = v9;
  v68[0] = v27;
  specialized Array._endMutation()();
  uint64_t v49 = v68[0];
  id v47 = v9;
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = sub_100007334(v28);

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v30;

  if (qword_1000ED740 != -1) {
    swift_once();
  }
  char v31 = 1;
  if (!*(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags)) {
    char v31 = *(void *)(v46 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  }
  uint64_t v32 = type metadata accessor for AdjustedImage(0);
  memset(v68, 0, 80);
  uint64_t v33 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v54, 1, 1, v32);
  uint64_t v34 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v35 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v55, 1, 1, v34);
  uint64_t v61 = 0;
  memset(v60, 0, sizeof(v60));
  NSString v36 = String._bridgeToObjectiveC()();
  NSString v37 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v62);
  long long v45 = v62[1];
  long long v46 = v62[0];
  long long v43 = v62[3];
  long long v44 = v62[2];
  uint64_t v39 = v63;
  uint64_t v40 = v64;

  v65[0] = v46;
  v65[1] = v45;
  v65[2] = v44;
  v65[3] = v43;
  uint64_t v66 = v39;
  uint64_t v67 = v40;
  char v59 = 1;
  return sub_10003A618(v53, v52, 0, 0xE000000000000000, (uint64_t)v56, v51, v50, 0, v57, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v26, v49, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v60,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v42,
           0,
           1,
           1,
           (uint64_t)v65,
           (uint64_t)v68,
           0,
           0,
           v58,
           v48,
           0,
           0,
           0xD000000000000025,
           0x80000001000B5E20,
           v31,
           v33,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v35);
}

uint64_t sub_1000316C0@<X0>(void *a1@<X8>)
{
  char v59 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v56 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v52 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v53 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_10003E7E0();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v11;
  uint64_t v58 = v10;

  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  long long v51 = xmmword_1000B0850;
  *(_OWORD *)(inited + 16) = xmmword_1000B0850;
  id v13 = [self currentDevice];
  id v14 = [v13 localizedModel];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_10003D0C8();
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v19;
  v69[0] = 0;
  v69[1] = 0xE000000000000000;
  sub_10003C0DC(inited, v69);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  uint64_t v54 = v69[1];
  uint64_t v55 = v69[0];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v51;
  *(void *)(v25 + 32) = v22;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 48) = 0;
  *(unsigned char *)(v25 + 56) = 1;
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = sub_100007334(v26);

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  char v31 = sub_100054CE4((char *)1, 2, 1, (char *)v25);
  *((void *)v31 + 2) = 2;
  *((void *)v31 + 8) = v28;
  *((void *)v31 + 9) = v30;
  *((void *)v31 + 10) = 1;
  v31[88] = 24;
  uint64_t v32 = type metadata accessor for AdjustedMovie(0);
  uint64_t v33 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v53, 1, 1, v32);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1000B0690;
  *(void *)(v34 + 32) = v7;
  v69[0] = v34;
  specialized Array._endMutation()();
  *(void *)&long long v51 = v69[0];
  uint64_t v35 = type metadata accessor for AdjustedImage(0);
  memset(v69, 0, 80);
  uint64_t v36 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v52, 1, 1, v35);
  uint64_t v37 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v38 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v56, 1, 1, v37);
  uint64_t v62 = 0;
  memset(v61, 0, sizeof(v61));
  id v39 = v7;
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v40) = Int64 != 0;
  sub_100067438((uint64_t *)v63);
  long long v49 = v63[1];
  long long v50 = v63[0];
  long long v47 = v63[3];
  long long v48 = v63[2];
  uint64_t v43 = v64;
  uint64_t v44 = v65;

  v66[0] = v50;
  v66[1] = v49;
  v66[2] = v48;
  v66[3] = v47;
  uint64_t v67 = v43;
  uint64_t v68 = v44;
  char v60 = 1;
  return sub_10003A618(v58, v57, 0, 0xE000000000000000, v33, v55, v54, 0, v59, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v31, v51, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v61,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v40,
           v46,
           0,
           1,
           1,
           (uint64_t)v66,
           (uint64_t)v69,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v36,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v38);
}

uint64_t sub_100031D2C@<X0>(void *a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v56 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self imageNamed:v9];

  if (!v10
    || (id v11 = [self systemBlueColor],
        id v12 = [v10 imageWithTintColor:v11],
        v10,
        v11,
        !v12))
  {
    id v12 = [objc_allocWithZone((Class)UIImage) init];
  }
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v16;
  uint64_t v55 = v15;

  uint64_t v17 = WiFiCopyCurrentNetworkInfo();
  if (!v17
    || (uint64_t v18 = (void *)v17,
        *(void *)&long long v67 = 0,
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(),
        v18,
        (uint64_t v19 = v67) == 0))
  {
    long long v67 = 0u;
    long long v68 = 0u;
    goto LABEL_13;
  }
  if (!*(void *)(v67 + 16) || (unint64_t v20 = sub_100055184(1684632435, 0xE400000000000000), (v21 & 1) == 0))
  {
    long long v67 = 0u;
    long long v68 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_10000F578(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v67);
  swift_bridgeObjectRelease();
  if (!*((void *)&v68 + 1))
  {
LABEL_13:
    sub_10000F674((uint64_t)&v67, &qword_1000EE410);
    goto LABEL_14;
  }
  if (!swift_dynamicCast())
  {
LABEL_14:
    unint64_t v22 = 0xE100000000000000;
    uint64_t v23 = 63;
    goto LABEL_15;
  }
  unint64_t v22 = *((void *)&v64[0] + 1);
  uint64_t v23 = *(void *)&v64[0];
LABEL_15:
  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  long long v50 = xmmword_1000B0850;
  *(_OWORD *)(inited + 16) = xmmword_1000B0850;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v25 = sub_10003D0C8();
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 64) = v25;
  *(void *)(inited + 40) = v22;
  *(void *)&long long v67 = 0;
  *((void *)&v67 + 1) = 0xE000000000000000;
  sub_10003C0DC(inited, (uint64_t *)&v67);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  uint64_t v52 = *((void *)&v67 + 1);
  uint64_t v53 = v67;
  uint64_t v26 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 1, 1, v26);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v27 = swift_allocObject();
  long long v51 = v8;
  uint64_t v28 = v27;
  *(_OWORD *)(v27 + 16) = v50;
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = sub_100007334(v29);

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  *(void *)(v28 + 32) = v31;
  *(void *)(v28 + 40) = v33;
  *(void *)(v28 + 48) = 0;
  *(unsigned char *)(v28 + 56) = 1;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1000B0690;
  *(void *)(v34 + 32) = v12;
  *(void *)&long long v67 = v34;
  specialized Array._endMutation()();
  uint64_t v35 = v67;
  uint64_t v36 = type metadata accessor for AdjustedImage(0);
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  long long v71 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v5, 1, 1, v36);
  uint64_t v37 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v38 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v56, 1, 1, v37);
  uint64_t v60 = 0;
  memset(v59, 0, sizeof(v59));
  id v39 = v12;
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v40) = Int64 != 0;
  sub_100067438((uint64_t *)v61);
  long long v49 = v61[1];
  long long v50 = v61[0];
  long long v47 = v61[3];
  long long v48 = v61[2];
  uint64_t v43 = v62;
  uint64_t v44 = v63;

  v64[0] = v50;
  v64[1] = v49;
  v64[2] = v48;
  v64[3] = v47;
  uint64_t v65 = v43;
  uint64_t v66 = v44;
  char v58 = 1;
  return sub_10003A618(v55, v54, v53, v52, (uint64_t)v51, 0, 0xE000000000000000, 0, v57, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v28, v35, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v59,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v40,
           v46,
           0,
           1,
           1,
           (uint64_t)v64,
           (uint64_t)&v67,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v5,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v38);
}

void sub_100032434(void *a1@<X8>)
{
  uint64_t v2 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v8 - 8);
  uint64_t v73 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = (id)CUAddSuffixForCurrentDeviceClass();

  if (v11)
  {
    id v12 = sub_100007334(v11);

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    sub_10000EE48(&qword_1000EE3B8);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1000B0850;
    *((void *)&v84 + 1) = &type metadata for AppleAccountFeatureFlags;
    unint64_t v67 = sub_10003E78C();
    *(void *)&long long v85 = v67;
    isFeatureEnabled(_:)();
    sub_10000E470((uint64_t)&v83);
    long long v71 = v4;
    long long v72 = a1;
    uint64_t v69 = v15;
    uint64_t v70 = v13;
    uint64_t v65 = v7;
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = sub_100007334(v17);

    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = v21;
    *(void *)(v16 + 48) = 0;
    uint64_t v68 = v16;
    *(unsigned char *)(v16 + 56) = 13;
    unint64_t v22 = self;
    id v23 = [v22 mainScreen];
    [v23 scale];
    double v25 = v24;

    NSString v26 = String._bridgeToObjectiveC()();
    uint64_t v27 = self;
    id v28 = [v27 imageNamed:v26];

    if (!v28
      || (id v29 = [v28 _applicationIconImageForFormat:2 precomposed:1 scale:v25],
          v28,
          !v29))
    {
      id v29 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v30 = [v22 mainScreen];
    [v30 scale];
    double v32 = v31;

    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v27 _applicationIconImageForBundleIdentifier:v33 format:2 scale:v32];

    if (!v34) {
      id v34 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v35 = [v22 mainScreen];
    [v35 scale];
    double v37 = v36;

    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v27 _applicationIconImageForBundleIdentifier:v38 format:2 scale:v37];

    if (!v39) {
      id v39 = [objc_allocWithZone((Class)UIImage) init];
    }
    uint64_t v40 = type metadata accessor for AdjustedMovie(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v73, 1, 1, v40);
    *((void *)&v84 + 1) = &type metadata for AppleAccountFeatureFlags;
    *(void *)&long long v85 = v67;
    isFeatureEnabled(_:)();
    sub_10000E470((uint64_t)&v83);
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = sub_100007334(v41);

    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v66 = v44;
    unint64_t v67 = v43;

    *(void *)&long long v83 = _swiftEmptyArrayStorage;
    id v45 = v29;
    id v46 = v34;
    id v47 = v39;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v48 = v46;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v49 = v47;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v64 = v83;

    uint64_t v50 = type metadata accessor for AdjustedImage(0);
    long long v83 = 0u;
    long long v84 = 0u;
    long long v85 = 0u;
    long long v86 = 0u;
    long long v87 = 0u;
    uint64_t v51 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v65, 1, 1, v50);
    uint64_t v52 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    uint64_t v53 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v71, 1, 1, v52);
    uint64_t v76 = 0;
    memset(v75, 0, sizeof(v75));
    NSString v54 = String._bridgeToObjectiveC()();
    NSString v55 = String._bridgeToObjectiveC()();
    uint64_t Int64 = CFPrefs_GetInt64();

    LOBYTE(v54) = Int64 != 0;
    sub_100067438((uint64_t *)v77);
    long long v62 = v77[1];
    long long v63 = v77[0];
    long long v60 = v77[3];
    long long v61 = v77[2];
    uint64_t v57 = v78;
    uint64_t v58 = v79;

    v80[0] = v63;
    v80[1] = v62;
    v80[2] = v61;
    v80[3] = v60;
    uint64_t v81 = v57;
    uint64_t v82 = v58;
    char v74 = 1;
    sub_10003A618(v70, v69, 0, 0xE000000000000000, v73, v67, v66, 0, v72, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v68, v64, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v75,
      (uint64_t)_swiftEmptyArrayStorage,
      (uint64_t)_swiftEmptyArrayStorage,
      (char)v54,
      v59,
      0,
      1,
      1,
      (uint64_t)v80,
      (uint64_t)&v83,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      v51,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      v53);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100032CA8@<X0>(void *a1@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  unint64_t v67 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  long long v61 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v69 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000B0850;
  *((void *)&v80 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(void *)&long long v81 = sub_10003E78C();
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v79);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v12;
  *(void *)(v7 + 48) = 0;
  uint64_t v66 = v7;
  *(unsigned char *)(v7 + 56) = 13;
  uint64_t v13 = self;
  id v14 = [v13 mainScreen];
  [v14 scale];
  double v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = self;
  id v19 = [v18 imageNamed:v17];

  if (!v19
    || (id v20 = [v19 _applicationIconImageForFormat:2 precomposed:1 scale:v16],
        v19,
        !v20))
  {
    id v20 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v21 = [v13 mainScreen];
  [v21 scale];
  double v23 = v22;

  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v18 _applicationIconImageForBundleIdentifier:v24 format:2 scale:v23];

  if (!v25) {
    id v25 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v26 = [v13 mainScreen];
  [v26 scale];
  double v28 = v27;

  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v18 _applicationIconImageForBundleIdentifier:v29 format:2 scale:v28];

  if (!v30) {
    id v30 = [objc_allocWithZone((Class)UIImage) init];
  }
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = sub_100007334(v31);

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v64 = v34;
  uint64_t v65 = v33;

  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = sub_100007334(v35);

  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v38;
  uint64_t v63 = v37;

  uint64_t v39 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v69, 1, 1, v39);
  *(void *)&long long v79 = _swiftEmptyArrayStorage;
  id v40 = v20;
  id v41 = v25;
  id v42 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v43 = v41;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v44 = v42;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v60 = v79;

  uint64_t v45 = type metadata accessor for AdjustedImage(0);
  long long v79 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  uint64_t v46 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v61, 1, 1, v45);
  uint64_t v47 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v48 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v67, 1, 1, v47);
  uint64_t v72 = 0;
  memset(v71, 0, sizeof(v71));
  NSString v49 = String._bridgeToObjectiveC()();
  NSString v50 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v49) = Int64 != 0;
  sub_100067438((uint64_t *)v73);
  long long v58 = v73[1];
  long long v59 = v73[0];
  long long v56 = v73[3];
  long long v57 = v73[2];
  uint64_t v52 = v74;
  uint64_t v53 = v75;

  v76[0] = v59;
  v76[1] = v58;
  v76[2] = v57;
  v76[3] = v56;
  uint64_t v77 = v52;
  uint64_t v78 = v53;
  char v70 = 1;
  return sub_10003A618(v63, v62, 0, 0xE000000000000000, v69, v65, v64, 0, v68, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v66, v60, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v71,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v49,
           v55,
           0,
           1,
           1,
           (uint64_t)v76,
           (uint64_t)&v79,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v46,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v48);
}

uint64_t sub_1000334B4@<X0>(void *a1@<X8>)
{
  char v70 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v69 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v65 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v71 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000B0850;
  *((void *)&v82 + 1) = &type metadata for AppleAccountFeatureFlags;
  unint64_t v8 = sub_10003E78C();
  *(void *)&long long v83 = v8;
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v81);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v7 + 32) = v11;
  *(void *)(v7 + 40) = v13;
  *(void *)(v7 + 48) = 0;
  uint64_t v68 = v7;
  *(unsigned char *)(v7 + 56) = 13;
  id v14 = self;
  id v15 = [v14 mainScreen];
  [v15 scale];
  double v17 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = self;
  id v20 = [v19 imageNamed:v18];

  if (!v20
    || (id v21 = [v20 _applicationIconImageForFormat:2 precomposed:1 scale:v17],
        v20,
        !v21))
  {
    id v21 = [objc_allocWithZone((Class)UIImage) init];
  }
  double v22 = v21;
  id v23 = [v14 mainScreen];
  [v23 scale];
  double v25 = v24;

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v19 _applicationIconImageForBundleIdentifier:v26 format:2 scale:v25];

  if (!v27) {
    id v27 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v28 = [v14 mainScreen];
  [v28 scale];
  double v30 = v29;

  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v19 _applicationIconImageForBundleIdentifier:v31 format:2 scale:v30];

  if (!v32) {
    id v32 = [objc_allocWithZone((Class)UIImage) init];
  }
  *((void *)&v82 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(void *)&long long v83 = v8;
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v81);
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v34 = sub_100007334(v33);

  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v36;
  uint64_t v67 = v35;

  *((void *)&v82 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(void *)&long long v83 = v8;
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v81);
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = sub_100007334(v37);

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v40;
  uint64_t v64 = v39;

  uint64_t v41 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v71, 1, 1, v41);
  *(void *)&long long v81 = _swiftEmptyArrayStorage;
  id v42 = v22;
  id v43 = v27;
  id v44 = v32;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v45 = v43;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v46 = v44;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v62 = v81;

  uint64_t v47 = type metadata accessor for AdjustedImage(0);
  long long v81 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  uint64_t v48 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v65, 1, 1, v47);
  uint64_t v49 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v50 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v69, 1, 1, v49);
  uint64_t v74 = 0;
  memset(v73, 0, sizeof(v73));
  NSString v51 = String._bridgeToObjectiveC()();
  NSString v52 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v51) = Int64 != 0;
  sub_100067438((uint64_t *)v75);
  long long v60 = v75[1];
  long long v61 = v75[0];
  long long v58 = v75[3];
  long long v59 = v75[2];
  uint64_t v54 = v76;
  uint64_t v55 = v77;

  v78[0] = v61;
  v78[1] = v60;
  v78[2] = v59;
  v78[3] = v58;
  uint64_t v79 = v54;
  uint64_t v80 = v55;
  char v72 = 1;
  return sub_10003A618(v64, v63, 0, 0xE000000000000000, v71, v67, v66, 0, v70, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v68, v62, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v73,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v51,
           v57,
           0,
           1,
           1,
           (uint64_t)v78,
           (uint64_t)&v81,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v48,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v50);
}

uint64_t sub_100033D60@<X0>(void *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  id v46 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  id v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000B0850;
  *((void *)&v59 + 1) = &type metadata for AppleAccountFeatureFlags;
  unint64_t v9 = sub_10003E78C();
  *(void *)&long long v60 = v9;
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v58);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(v8 + 32) = v12;
  *(void *)(v8 + 40) = v14;
  *(void *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 56) = 13;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v18;
  uint64_t v44 = v17;

  uint64_t v19 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
  *((void *)&v59 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(void *)&long long v60 = v9;
  isFeatureEnabled(_:)();
  sub_10000E470((uint64_t)&v58);
  uint64_t v47 = v7;
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v23;
  uint64_t v42 = v22;

  id v24 = [self configurationWithPointSize:72.0];
  NSString v25 = String._bridgeToObjectiveC()();
  NSString v26 = self;
  id v27 = [v26 systemImageNamed:v25 withConfiguration:v24];

  if (!v27)
  {
    NSString v28 = String._bridgeToObjectiveC()();
    id v27 = [v26 imageNamed:v28];

    if (!v27) {
      id v27 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  sub_10000EE48(&qword_1000EF140);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1000B0690;
  *(void *)(v29 + 32) = v27;
  *(void *)&long long v58 = v29;
  specialized Array._endMutation()();
  uint64_t v30 = v58;
  uint64_t v31 = type metadata accessor for AdjustedImage(0);
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  uint64_t v32 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v45, 1, 1, v31);
  uint64_t v33 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v34 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v46, 1, 1, v33);
  uint64_t v51 = 0;
  memset(v50, 0, sizeof(v50));
  NSString v35 = String._bridgeToObjectiveC()();
  NSString v36 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v52);
  v55[0] = v52[0];
  v55[1] = v52[1];
  v55[2] = v52[2];
  v55[3] = v52[3];
  char v49 = 1;
  uint64_t v56 = v53;
  uint64_t v57 = v54;
  return sub_10003A618(v44, v43, 0, 0xE000000000000000, (uint64_t)v47, v42, v41, 0, v48, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v8, v30, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v50,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v39,
           0,
           1,
           1,
           (uint64_t)v55,
           (uint64_t)&v58,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v32,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v34);
}

uint64_t sub_10003435C@<X0>(void *a1@<X8>)
{
  long long v61 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  long long v60 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  long long v59 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  uint64_t v62 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v10;
  uint64_t v58 = v9;

  id v11 = self;
  id v12 = [v11 mainScreen];
  [v12 scale];
  double v14 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = self;
  id v17 = [v16 imageNamed:v15];

  if (!v17
    || (id v18 = [v17 _applicationIconImageForFormat:2 precomposed:1 scale:v14],
        v17,
        !v18))
  {
    id v18 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v19 = [v11 mainScreen];
  [v19 scale];
  double v21 = v20;

  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v16 imageNamed:v22];

  if (!v23
    || (id v24 = [v23 _applicationIconImageForFormat:2 precomposed:1 scale:v21],
        v23,
        !v24))
  {
    id v24 = [objc_allocWithZone((Class)UIImage) init];
  }
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = sub_100007334(v25);

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v28;
  uint64_t v56 = v27;

  uint64_t v29 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v62, 1, 1, v29);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1000B0850;
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = sub_100007334(v31);

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  *(void *)(v30 + 32) = v33;
  *(void *)(v30 + 40) = v35;
  *(void *)(v30 + 48) = 0;
  *(unsigned char *)(v30 + 56) = 1;
  v72[0] = _swiftEmptyArrayStorage;
  id v36 = v18;
  id v37 = v24;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v38 = v37;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v54 = v72[0];

  uint64_t v39 = type metadata accessor for AdjustedImage(0);
  memset(v72, 0, 80);
  uint64_t v40 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v59, 1, 1, v39);
  uint64_t v41 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v42 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v60, 1, 1, v41);
  uint64_t v65 = 0;
  memset(v64, 0, sizeof(v64));
  NSString v43 = String._bridgeToObjectiveC()();
  NSString v44 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v43) = Int64 != 0;
  sub_100067438((uint64_t *)v66);
  long long v52 = v66[1];
  long long v53 = v66[0];
  long long v50 = v66[3];
  long long v51 = v66[2];
  uint64_t v46 = v67;
  uint64_t v47 = v68;

  v69[0] = v53;
  v69[1] = v52;
  v69[2] = v51;
  v69[3] = v50;
  uint64_t v70 = v46;
  uint64_t v71 = v47;
  char v63 = 1;
  return sub_10003A618(v56, v55, 0, 0xE000000000000000, v62, v58, v57, 0, v61, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v30, v54, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v64,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v43,
           v49,
           0,
           1,
           1,
           (uint64_t)v69,
           (uint64_t)v72,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v40,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v42);
}

uint64_t sub_100034A50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  long long v60 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  id v11 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
  long long v61 = v6;
  uint64_t v62 = a2;
  long long v59 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v11)
  {
    long long v72 = 0u;
    long long v73 = 0u;
    goto LABEL_9;
  }
  id v12 = [v11 userInfo];
  uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v13 + 16) || (unint64_t v14 = sub_100055184(0xD000000000000012, 0x80000001000B61A0), (v15 & 1) == 0))
  {
    long long v72 = 0u;
    long long v73 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10000F578(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v72);
  swift_bridgeObjectRelease();
  if (!*((void *)&v73 + 1))
  {
LABEL_9:
    sub_10000F674((uint64_t)&v72, &qword_1000EE410);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    unint64_t v16 = *((void *)&v69[0] + 1);
    uint64_t v17 = *(void *)&v69[0];
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v16 = 0xE100000000000000;
  uint64_t v17 = 63;
LABEL_11:
  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  long long v56 = xmmword_1000B0850;
  *(_OWORD *)(inited + 16) = xmmword_1000B0850;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_10003D0C8();
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v16;
  *(void *)&long long v72 = 0;
  *((void *)&v72 + 1) = 0xE000000000000000;
  sub_10003C0DC(inited, (uint64_t *)&v72);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  uint64_t v57 = *((void *)&v72 + 1);
  uint64_t v58 = v72;
  id v19 = [self mainScreen];
  [v19 scale];
  double v21 = v20;

  NSString v22 = self;
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 _applicationIconImageForBundleIdentifier:v23 format:2 scale:v21];

  if (!v24) {
    id v24 = [objc_allocWithZone((Class)UIImage) init];
  }
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = sub_100007334(v25);

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v56;
  *(void *)(v30 + 32) = v27;
  *(void *)(v30 + 40) = v29;
  *(void *)(v30 + 48) = 0;
  *(unsigned char *)(v30 + 56) = 1;
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = sub_100007334(v31);

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v34;
  *(void *)&long long v56 = v33;

  uint64_t v35 = type metadata accessor for AdjustedMovie(0);
  uint64_t v36 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v59, 1, 1, v35);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1000B0690;
  *(void *)(v37 + 32) = v24;
  *(void *)&long long v72 = v37;
  specialized Array._endMutation()();
  uint64_t v54 = v72;
  uint64_t v38 = type metadata accessor for AdjustedImage(0);
  long long v72 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  uint64_t v39 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v60, 1, 1, v38);
  uint64_t v40 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v41 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v61, 1, 1, v40);
  uint64_t v65 = 0;
  memset(v64, 0, sizeof(v64));
  id v42 = v24;
  NSString v43 = String._bridgeToObjectiveC()();
  NSString v44 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v66);
  long long v52 = v66[1];
  long long v53 = v66[0];
  long long v50 = v66[3];
  long long v51 = v66[2];
  uint64_t v46 = v67;
  uint64_t v47 = v68;

  v69[0] = v53;
  v69[1] = v52;
  v69[2] = v51;
  v69[3] = v50;
  uint64_t v70 = v46;
  uint64_t v71 = v47;
  char v63 = 1;
  return sub_10003A618(v56, v55, 0, 0xE000000000000000, v36, v58, v57, 0, v62, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v30, v54, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v64,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v49,
           0,
           1,
           1,
           (uint64_t)v69,
           (uint64_t)&v72,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v39,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v41);
}

uint64_t sub_100035150@<X0>(void *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  long long v53 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v12;
  uint64_t v52 = v11;

  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  id v18 = [self mainScreen];
  [v18 scale];
  double v20 = v19;

  double v21 = self;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 _applicationIconImageForBundleIdentifier:v22 format:2 scale:v20];

  if (!v23) {
    id v23 = [objc_allocWithZone((Class)UIImage) init];
  }
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = sub_100007334(v24);

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v27;
  uint64_t v50 = v26;

  uint64_t v28 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 1, 1, v28);
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1000B0850;
  *(void *)(v29 + 32) = v15;
  *(void *)(v29 + 40) = v17;
  *(void *)(v29 + 48) = 0;
  *(unsigned char *)(v29 + 56) = 1;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1000B0690;
  *(void *)(v30 + 32) = v23;
  v64[0] = v30;
  specialized Array._endMutation()();
  uint64_t v47 = v64[0];
  uint64_t v48 = v8;
  uint64_t v31 = type metadata accessor for AdjustedImage(0);
  memset(v64, 0, 80);
  uint64_t v32 = (uint64_t)v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v5, 1, 1, v31);
  uint64_t v33 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v34 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v53, 1, 1, v33);
  uint64_t v57 = 0;
  memset(v56, 0, sizeof(v56));
  id v35 = v23;
  NSString v36 = String._bridgeToObjectiveC()();
  NSString v37 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v36) = Int64 != 0;
  sub_100067438((uint64_t *)v58);
  long long v45 = v58[1];
  long long v46 = v58[0];
  long long v43 = v58[3];
  long long v44 = v58[2];
  uint64_t v39 = v59;
  uint64_t v40 = v60;

  v61[0] = v46;
  v61[1] = v45;
  v61[2] = v44;
  v61[3] = v43;
  uint64_t v62 = v39;
  uint64_t v63 = v40;
  char v55 = 1;
  return sub_10003A618(v52, v51, 0, 0xE000000000000000, (uint64_t)v48, v50, v49, 0, v54, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v29, v47, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v56,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v36,
           v42,
           0,
           1,
           1,
           (uint64_t)v61,
           (uint64_t)v64,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v32,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v34);
}

uint64_t sub_1000356E8@<X0>(void *a1@<X8>)
{
  NSString v36 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v13;
  uint64_t v35 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v17;
  uint64_t v33 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  uint64_t v23 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  uint64_t v24 = sub_10003E66C(v20, v22, 0, 1);
  swift_bridgeObjectRelease();
  uint64_t v25 = type metadata accessor for AdjustedImage(0);
  memset(v46, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
  uint64_t v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v3, 1, 1, v26);
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v40);
  v43[0] = v40[0];
  v43[1] = v40[1];
  v43[2] = v40[2];
  v43[3] = v40[3];
  char v37 = 1;
  uint64_t v44 = v41;
  uint64_t v45 = v42;
  return sub_10003A618(v35, v34, v33, v32, (uint64_t)v9, 0, 0xE000000000000000, 0, v36, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v38,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v31,
           0,
           1,
           1,
           (uint64_t)v43,
           (uint64_t)v46,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_100035B2C@<X0>(void *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v13;
  uint64_t v34 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v17;
  uint64_t v32 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  uint64_t v23 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  uint64_t v24 = sub_10003E66C(v20, v22, 0, 1);
  swift_bridgeObjectRelease();
  memset(v45, 0, 80);
  sub_1000501E0(0, 0, (uint64_t)v6);
  uint64_t v25 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v3, 1, 1, v25);
  uint64_t v38 = 0;
  memset(v37, 0, sizeof(v37));
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v39);
  v42[0] = v39[0];
  v42[1] = v39[1];
  void v42[2] = v39[2];
  v42[3] = v39[3];
  char v36 = 1;
  uint64_t v43 = v40;
  uint64_t v44 = v41;
  return sub_10003A618(v34, v33, v32, v31, (uint64_t)v9, 0, 0xE000000000000000, 0, v35, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v37,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v30,
           0,
           1,
           1,
           (uint64_t)v42,
           (uint64_t)v45,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_100035F50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  uint64_t v50 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v13;
  uint64_t v46 = v12;

  SFDeviceClassCodeGet();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000B0850;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100007334(v17);

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();

  *(void *)(v16 + 32) = v19;
  *(void *)(v16 + 40) = v21;
  *(void *)(v16 + 48) = 0;
  *(unsigned char *)(v16 + 56) = 1;
  if (SFDeviceClassCodeGet() == 1)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = sub_100007334(v22);

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();

    unint64_t v28 = *(void *)(v16 + 16);
    unint64_t v27 = *(void *)(v16 + 24);
    if (v28 >= v27 >> 1) {
      uint64_t v16 = (uint64_t)sub_100054CE4((char *)(v27 > 1), v28 + 1, 1, (char *)v16);
    }
    *(void *)(v16 + 16) = v28 + 1;
    uint64_t v29 = v16 + 32 * v28;
    *(void *)(v29 + 32) = v24;
    *(void *)(v29 + 40) = v26;
    *(void *)(v29 + 48) = 1;
    *(unsigned char *)(v29 + 56) = 2;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = type metadata accessor for AdjustedMovie(0);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v48 = v9;
  v31(v9, 1, 1, v30);
  sub_1000501E0(0, 0, v50);
  int v44 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_voiceRecognitionEnabled);
  int v43 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled);
  uint64_t v32 = (uint64_t *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  uint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8);
  if (v33)
  {
    uint64_t v34 = *v32;
    uint64_t v35 = v33;
  }
  else
  {
    uint64_t v35 = 0xE500000000000000;
    uint64_t v34 = 0x53552D6E65;
  }
  uint64_t v36 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  memset(v60, 0, 80);
  uint64_t v37 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v47, 1, 1, v36);
  uint64_t v53 = 0;
  memset(v52, 0, sizeof(v52));
  swift_bridgeObjectRetain();
  NSString v38 = String._bridgeToObjectiveC()();
  NSString v39 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v54);
  v57[0] = v54[0];
  v57[1] = v54[1];
  v57[2] = v54[2];
  v57[3] = v54[3];
  char v51 = 1;
  uint64_t v58 = v55;
  uint64_t v59 = v56;
  return sub_10003A618(v46, v45, 0, 0xE000000000000000, (uint64_t)v48, 0, 0xE000000000000000, 0, v49, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v16, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v52,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v42,
           0,
           1,
           1,
           (uint64_t)v57,
           (uint64_t)v60,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v50,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           1,
           0,
           v44,
           v43,
           v34,
           v35,
           0,
           0,
           0,
           0,
           v37);
}

uint64_t sub_1000364F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v63 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v62 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v8 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = SFDeviceClassCodeGet();
  if (v10 == 3) {
    unint64_t v11 = 0xD000000000000021;
  }
  else {
    unint64_t v11 = 0xD000000000000023;
  }
  if (v10 == 3) {
    unint64_t v12 = 0x80000001000B6380;
  }
  else {
    unint64_t v12 = 0x80000001000B6300;
  }
  int v13 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
  uint64_t v64 = a2;
  if (v13 == 5)
  {
    *(void *)&long long v75 = v11;
    *((void *)&v75 + 1) = v12;
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = 1768843629;
    v14._object = (void *)0xE400000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    unint64_t v11 = v75;
  }
  uint64_t v15 = WiFiCopyCurrentNetworkInfo();
  if (!v15) {
    goto LABEL_18;
  }
  uint64_t v16 = (void *)v15;
  *(void *)&long long v75 = 0;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

  uint64_t v17 = v75;
  if (!(void)v75) {
    goto LABEL_18;
  }
  if (!*(void *)(v75 + 16) || (unint64_t v18 = sub_100055184(1684632435, 0xE400000000000000), (v19 & 1) == 0))
  {
    long long v75 = 0u;
    long long v76 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_10000F578(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v75);
  swift_bridgeObjectRelease();
  if (!*((void *)&v76 + 1))
  {
LABEL_17:
    sub_10000F674((uint64_t)&v75, &qword_1000EE410);
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
LABEL_18:
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    goto LABEL_19;
  }
  unint64_t v21 = *((void *)&v72[0] + 1);
  uint64_t v20 = *(void *)&v72[0];
LABEL_19:
  unint64_t v61 = v11;
  if ((sub_10004D328() & 1) != 0
    || *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem)
    && *(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) == 1)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    char v23 = 20;
  }
  else
  {
    NSString v22 = String._bridgeToObjectiveC()();
    char v23 = 1;
  }
  id v24 = sub_100007334(v22);

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v28 = swift_allocObject();
  long long v60 = xmmword_1000B0850;
  *(_OWORD *)(v28 + 16) = xmmword_1000B0850;
  *(void *)(v28 + 32) = v25;
  *(void *)(v28 + 40) = v27;
  *(void *)(v28 + 48) = 0;
  *(unsigned char *)(v28 + 56) = v23;
  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v60;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v30 = sub_10003D0C8();
  *(void *)(inited + 32) = v20;
  *(void *)(inited + 64) = v30;
  *(void *)(inited + 40) = v21;
  *(void *)&long long v75 = 0;
  *((void *)&v75 + 1) = 0xE000000000000000;
  sub_10003C0DC(inited, (uint64_t *)&v75);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  uint64_t v59 = *((void *)&v75 + 1);
  *(void *)&long long v60 = v75;
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = sub_100007334(v31);

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v34;
  uint64_t v58 = v33;

  uint64_t v35 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v65, 1, 1, v35);
  uint64_t v36 = self;
  swift_bridgeObjectRetain();
  id v37 = [v36 configurationWithPointSize:72.0];
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v39 = self;
  id v40 = [v39 systemImageNamed:v38 withConfiguration:v37];

  if (!v40)
  {
    swift_bridgeObjectRetain();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v40 = [v39 imageNamed:v41];

    if (!v40) {
      id v40 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  sub_10000EE48(&qword_1000EF140);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1000B0690;
  *(void *)(v42 + 32) = v40;
  *(void *)&long long v75 = v42;
  specialized Array._endMutation()();
  unint64_t v61 = v75;
  swift_bridgeObjectRelease();
  long long v75 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = sub_100007334(v43);

  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  uint64_t v47 = type metadata accessor for AdjustedImage(0);
  uint64_t v48 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v62, 1, 1, v47);
  uint64_t v49 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v50 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v63, 1, 1, v49);
  uint64_t v68 = 0;
  memset(v67, 0, sizeof(v67));
  NSString v51 = String._bridgeToObjectiveC()();
  NSString v52 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v69);
  v72[0] = v69[0];
  v72[1] = v69[1];
  v72[2] = v69[2];
  v72[3] = v69[3];
  char v66 = 1;
  uint64_t v73 = v70;
  uint64_t v74 = v71;
  return sub_10003A618(v58, v57, 0, 0xE000000000000000, v65, v60, v59, 0, v64, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v28, v61, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v67,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v55,
           0,
           1,
           1,
           (uint64_t)v72,
           (uint64_t)&v75,
           0,
           0,
           v56,
           v46,
           0,
           0,
           0xD000000000000025,
           0x80000001000B5E20,
           0,
           v48,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           v50);
}

uint64_t sub_100036D20@<X0>(void *a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v71 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v3 - 8);
  uint64_t v70 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v5 - 8);
  long long v72 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v10;
  uint64_t v69 = v9;

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v14;
  uint64_t v67 = v13;

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = sub_100007334(v25);

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v64 = v28;
  uint64_t v65 = v27;

  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = sub_100007334(v29);

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v32;
  uint64_t v63 = v31;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1000AF6D0;
  *(void *)(v33 + 32) = v17;
  *(void *)(v33 + 40) = v19;
  *(void *)(v33 + 48) = 0;
  *(unsigned char *)(v33 + 56) = 1;
  *(void *)(v33 + 64) = v22;
  *(void *)(v33 + 72) = v24;
  *(void *)(v33 + 80) = 1;
  *(unsigned char *)(v33 + 88) = 2;
  id v34 = [self systemFontOfSize:72.0 weight:UIFontWeightRegular];
  uint64_t v35 = self;
  id v36 = [v35 configurationWithFont:v34];

  id v37 = [self purpleColor];
  id v38 = [v35 configurationWithHierarchicalColor:v37];

  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = [self _systemImageNamed:v39];

  if (!v40) {
    id v40 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v61 = v36;
  id v41 = [v40 imageByApplyingSymbolConfiguration:v36];
  if (!v41) {
    id v41 = [objc_allocWithZone((Class)UIImage) init];
  }

  id v42 = [v41 imageByApplyingSymbolConfiguration:v38];
  id v60 = v38;
  if (!v42) {
    id v42 = [objc_allocWithZone((Class)UIImage) init];
  }

  uint64_t v43 = type metadata accessor for AdjustedMovie(0);
  uint64_t v44 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v72, 1, 1, v43);
  uint64_t v45 = type metadata accessor for AdjustedImage(0);
  memset(v83, 0, 80);
  uint64_t v46 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v70, 1, 1, v45);
  uint64_t v47 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v48 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v71, 1, 1, v47);
  uint64_t v76 = 0;
  memset(v75, 0, sizeof(v75));
  NSString v49 = String._bridgeToObjectiveC()();
  NSString v50 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  LOBYTE(v49) = Int64 != 0;
  sub_100067438((uint64_t *)v77);
  long long v58 = v77[1];
  long long v59 = v77[0];
  long long v56 = v77[3];
  long long v57 = v77[2];
  uint64_t v52 = v78;
  uint64_t v53 = v79;

  v80[0] = v59;
  v80[1] = v58;
  v80[2] = v57;
  v80[3] = v56;
  uint64_t v81 = v52;
  uint64_t v82 = v53;
  char v74 = 1;
  return sub_10003A618(v69, v68, v67, v66, v44, 0, 0xE000000000000000, v65, v73, 0.0, 0.0, 0.0, v64, 0, 0xE000000000000000, v33, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v75,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v49,
           v55,
           0,
           1,
           1,
           (uint64_t)v80,
           (uint64_t)v83,
           0,
           0,
           v63,
           v62,
           0,
           0,
           0,
           0,
           0,
           v46,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           1,
           0,
           v48);
}

uint64_t sub_100037454@<X0>(void *a1@<X8>)
{
  id v36 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v13;
  uint64_t v35 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v17;
  uint64_t v33 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1000B0850;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = v22;
  *(void *)(v23 + 48) = 0;
  *(unsigned char *)(v23 + 56) = 8;
  uint64_t v24 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  uint64_t v25 = type metadata accessor for AdjustedImage(0);
  memset(v46, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
  uint64_t v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v3, 1, 1, v26);
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v40);
  v43[0] = v40[0];
  v43[1] = v40[1];
  v43[2] = v40[2];
  v43[3] = v40[3];
  char v37 = 1;
  uint64_t v44 = v41;
  uint64_t v45 = v42;
  return sub_10003A618(v35, v34, v33, v32, (uint64_t)v9, 0, 0xE000000000000000, 0, v36, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v23, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v38,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v31,
           0,
           1,
           1,
           (uint64_t)v43,
           (uint64_t)v46,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_1000378B0@<X0>(void *a1@<X8>)
{
  id v36 = a1;
  uint64_t v1 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v13;
  uint64_t v35 = v12;

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v17;
  uint64_t v33 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1000B0850;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = v22;
  *(void *)(v23 + 48) = 0;
  *(unsigned char *)(v23 + 56) = 8;
  uint64_t v24 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  uint64_t v25 = type metadata accessor for AdjustedImage(0);
  memset(v46, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
  uint64_t v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v3, 1, 1, v26);
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v40);
  v43[0] = v40[0];
  v43[1] = v40[1];
  v43[2] = v40[2];
  v43[3] = v40[3];
  char v37 = 1;
  uint64_t v44 = v41;
  uint64_t v45 = v42;
  return sub_10003A618(v35, v34, v33, v32, (uint64_t)v9, 0, 0xE000000000000000, 0, v36, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v23, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v38,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v31,
           0,
           1,
           1,
           (uint64_t)v43,
           (uint64_t)v46,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           (uint64_t)v3);
}

uint64_t sub_100037D10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000133A0(v12, (uint64_t)qword_1000EDF80);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HomePodSetupViewModel: createDone2ViewModel", v15, 2u);
    swift_slowDealloc();
  }

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = v19;
  uint64_t v40 = v18;

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v23;
  uint64_t v38 = v22;

  uint64_t v24 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 1, 1, v24);
  sub_10003DB28(a1);
  uint64_t v36 = v25;
  memset(v51, 0, 80);
  sub_1000501E0(0, 0, (uint64_t)v8);
  uint64_t v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
  uint64_t v44 = 0;
  memset(v43, 0, sizeof(v43));
  NSString v27 = String._bridgeToObjectiveC()();
  uint64_t v28 = a1;
  NSString v29 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v45);
  v48[0] = v45[0];
  v48[1] = v45[1];
  v48[2] = v45[2];
  v48[3] = v45[3];
  char v42 = 1;
  uint64_t v49 = v46;
  uint64_t v50 = v47;
  int v31 = v41;
  sub_10003A618(v40, v39, v38, v37, (uint64_t)v11, 0, 0xE000000000000000, 0, v41, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v36, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v43,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v34,
    0,
    1,
    1,
    (uint64_t)v48,
    (uint64_t)v51,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v8,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    (uint64_t)v5);
  sub_10003AA58(v28, 0, 0, (uint64_t)v5);
  uint64_t v32 = type metadata accessor for HomePodSetupViewModel(0);
  return sub_10003DE30((uint64_t)v5, (uint64_t)v31 + *(int *)(v32 + 192));
}

__n128 sub_1000381B4@<Q0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v77 = a2;
  uint64_t v3 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v3 - 8);
  *(void *)&long long v76 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  *(void *)&long long v75 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v7 - 8);
  uint64_t v70 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000133A0(v9, (uint64_t)qword_1000EDF80);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupViewModel: createSoftwareUpdateForHomePodViewModel2", v12, 2u);
    swift_slowDealloc();
  }

  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  v74.n128_u64[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v73.n128_u64[0] = v15;

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v71 = v24;
  uint64_t v72 = v23;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000B0850;
  *(void *)(v25 + 32) = v18;
  *(void *)(v25 + 40) = v20;
  *(void *)(v25 + 48) = 0;
  *(unsigned char *)(v25 + 56) = 1;
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = sub_100007334(v26);

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  int v31 = sub_100054CE4((char *)1, 2, 1, (char *)v25);
  *((void *)v31 + 2) = 2;
  *((void *)v31 + 8) = v28;
  *((void *)v31 + 9) = v30;
  *((void *)v31 + 10) = 1;
  v31[88] = 2;
  id v32 = [self systemFontOfSize:80.0 weight:UIFontWeightRegular];
  uint64_t v33 = self;
  id v34 = [v33 configurationWithFont:v32];

  id v35 = [self tertiaryLabelColor];
  id v36 = [v33 configurationWithHierarchicalColor:v35];

  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v67 = a1;
  id v38 = [self _systemImageNamed:v37];

  id v69 = v34;
  id v39 = [v38 imageByApplyingSymbolConfiguration:v34];

  id v68 = v36;
  id v40 = [v39 imageByApplyingSymbolConfiguration:v36];

  id v41 = v40;
  if (!v40) {
    id v41 = [objc_allocWithZone((Class)UIImage) init];
  }
  uint64_t v42 = type metadata accessor for AdjustedMovie(0);
  uint64_t v43 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v70, 1, 1, v42);
  sub_10000EE48(&qword_1000EF140);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1000B0690;
  *(void *)(v44 + 32) = v41;
  v91[0] = v44;
  specialized Array._endMutation()();
  uint64_t v65 = v91[0];
  uint64_t v45 = type metadata accessor for AdjustedImage(0);
  memset(v91, 0, 80);
  uint64_t v46 = v75;
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v75, 1, 1, v45);
  uint64_t v47 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v48 = v76;
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v76, 1, 1, v47);
  v84.n128_u64[0] = 0;
  long long v82 = 0u;
  long long v83 = 0u;
  id v66 = v40;
  id v49 = v41;
  NSString v50 = String._bridgeToObjectiveC()();
  NSString v51 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  sub_100067438((uint64_t *)v79);
  v88[0] = v79[0];
  v88[1] = v79[1];
  v88[2] = v79[2];
  v88[3] = v79[3];
  char v78 = 1;
  uint64_t v89 = v80;
  uint64_t v90 = v81;
  uint64_t v64 = v46;
  uint64_t v53 = v77;
  sub_10003A618(v74.n128_i64[0], v73.n128_i64[0], v72, v71, v43, 0, 0xE000000000000000, 0, v77, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v31, v65, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v82,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v63,
    0,
    1,
    1,
    (uint64_t)v88,
    (uint64_t)v91,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v64,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    v48);
  uint64_t v54 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  int v55 = (char *)v53 + v54[31];
  *(void *)int v55 = 1;
  v55[8] = 0;
  *((unsigned char *)v53 + v54[32]) = 1;
  uint64_t v56 = *(void *)(v67 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  uint64_t v57 = *(void *)(v67 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
  swift_bridgeObjectRetain();
  sub_100067630(v56, v57, (uint64_t *)&v82);
  long long v75 = v83;
  long long v76 = v82;
  __n128 v73 = v85;
  __n128 v74 = v84;
  unint64_t v59 = v86;
  unint64_t v58 = v87;
  swift_bridgeObjectRelease();

  id v60 = (__n128 *)((char *)v53 + v54[20]);
  sub_10003DEFC(v60->n128_u64[0], v60->n128_i64[1]);

  __n128 v61 = (__n128)v75;
  *id v60 = (__n128)v76;
  v60[1] = v61;
  __n128 result = v73;
  v60[2] = v74;
  v60[3] = result;
  v60[4].n128_u64[0] = v59;
  v60[4].n128_u64[1] = v58;
  return result;
}

void sub_100038A20(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v5 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v5 - 8);
  uint64_t v92 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  uint64_t v91 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v94 = v11;
  uint64_t v84 = v14;
  if (a2)
  {
    *(void *)&v104[0] = 0x72655F6473;
    *((void *)&v104[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v17 = sub_10005513C((uint64_t)v107), (v18 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v17, (uint64_t)&v98);
    }
    else
    {
      long long v98 = 0u;
      long long v99 = 0u;
    }
    sub_10000F474((uint64_t)v107);
    if (*((void *)&v99 + 1))
    {
      sub_10000F464(&v98, v104);
      sub_10000F464(v104, v107);
      if (swift_dynamicCast()) {
        int v19 = v98;
      }
      else {
        int v19 = 0;
      }
    }
    else
    {
      sub_10000F674((uint64_t)&v98, &qword_1000EE410);
      int v19 = 0;
    }
    *(void *)&v104[0] = 0x64655F6473;
    *((void *)&v104[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v22 = sub_10005513C((uint64_t)v107), (v23 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v22, (uint64_t)&v98);
    }
    else
    {
      long long v98 = 0u;
      long long v99 = 0u;
    }
    sub_10000F474((uint64_t)v107);
    if (*((void *)&v99 + 1))
    {
      sub_10000F464(&v98, v104);
      sub_10000F578((uint64_t)v104, (uint64_t)v107);
      swift_dynamicCast();
      sub_10000E470((uint64_t)v104);
    }
    else
    {
      sub_10000F674((uint64_t)&v98, &qword_1000EE410);
    }
    *(void *)&v104[0] = 0x65645F6473;
    *((void *)&v104[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a2 + 16) && (unint64_t v24 = sub_10005513C((uint64_t)v107), (v25 & 1) != 0))
    {
      sub_10000F578(*(void *)(a2 + 56) + 32 * v24, (uint64_t)&v98);
    }
    else
    {
      long long v98 = 0u;
      long long v99 = 0u;
    }
    sub_10000F474((uint64_t)v107);
    if (*((void *)&v99 + 1))
    {
      sub_10000F464(&v98, v104);
      sub_10000F578((uint64_t)v104, (uint64_t)v107);
      swift_dynamicCast();
      sub_10000E470((uint64_t)v104);
    }
    else
    {
      sub_10000F674((uint64_t)&v98, &qword_1000EE410);
    }
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = sub_100007334(v26);

    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    *(void *)&v107[0] = v28;
    *((void *)&v107[0] + 1) = v30;
    v31._uint64_t countAndFlagsBits = 10250;
    v31._object = (void *)0xE200000000000000;
    String.append(_:)(v31);
    LODWORD(v104[0]) = v19;
    v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 2601;
    v33._object = (void *)0xE200000000000000;
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = *((void *)&v107[0] + 1);
    uint64_t v20 = *(void *)&v107[0];
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  id v34 = self;
  unsigned int v35 = [v34 sysDropBuildMode];
  uint64_t v93 = a3;
  unint64_t v88 = v21;
  uint64_t v89 = v20;
  if (v35 == 1)
  {
    swift_bridgeObjectRelease();
    NSString v58 = String._bridgeToObjectiveC()();
    id v59 = (id)CUAddSuffixForCurrentDeviceClass();

    if (v59)
    {
      id v60 = sub_100007334(v59);

      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v86 = v62;

      NSString v63 = String._bridgeToObjectiveC()();
      id v64 = sub_100007334(v63);

      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v67 = v66;

      id v68 = sub_100054CE4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v70 = *((void *)v68 + 2);
      unint64_t v69 = *((void *)v68 + 3);
      uint64_t v87 = v61;
      if (v70 >= v69 >> 1) {
        id v68 = sub_100054CE4((char *)(v69 > 1), v70 + 1, 1, v68);
      }
      __n128 v85 = v68;
      *((void *)v68 + 2) = v70 + 1;
      uint64_t v71 = &v68[32 * v70];
      *((void *)v71 + 4) = v65;
      *((void *)v71 + 5) = v67;
      *((void *)v71 + 6) = 0;
      v71[56] = 17;
      goto LABEL_42;
    }
  }
  else
  {
    if (v35 != 2)
    {
      if (v35 == 3)
      {
        NSString v36 = String._bridgeToObjectiveC()();
        id v37 = sub_100007334(v36);

        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v86 = v39;

        id v40 = sub_100054CE4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v42 = *((void *)v40 + 2);
        unint64_t v41 = *((void *)v40 + 3);
        uint64_t v87 = v38;
        if (v42 >= v41 >> 1) {
          id v40 = sub_100054CE4((char *)(v41 > 1), v42 + 1, 1, v40);
        }
        __n128 v85 = v40;
        *((void *)v40 + 2) = v42 + 1;
        uint64_t v43 = &v40[32 * v42];
        *((void *)v43 + 4) = v84;
        *((void *)v43 + 5) = v16;
        *((void *)v43 + 6) = 0;
        v43[56] = 30;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v87 = 0;
        __n128 v85 = (char *)_swiftEmptyArrayStorage;
        uint64_t v86 = 0xE000000000000000;
      }
LABEL_42:
      uint64_t v72 = v90;
      uint64_t v73 = type metadata accessor for AdjustedMovie(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v94, 1, 1, v73);
      memset(v107, 0, 80);
      uint64_t v74 = v91;
      sub_1000501E0(0, 0, v91);
      uint64_t v76 = *(void *)(v72 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sysdropPath);
      uint64_t v75 = *(void *)(v72 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sysdropPath + 8);
      swift_bridgeObjectRetain();
      int v77 = [v34 sysDropBuildMode];
      uint64_t v78 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
      uint64_t v79 = (uint64_t)v92;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v92, 1, 1, v78);
      uint64_t v97 = 0;
      memset(v96, 0, sizeof(v96));
      NSString v80 = String._bridgeToObjectiveC()();
      NSString v81 = String._bridgeToObjectiveC()();
      uint64_t Int64 = CFPrefs_GetInt64();

      sub_100067438((uint64_t *)&v98);
      v104[0] = v98;
      v104[1] = v99;
      v104[2] = v100;
      v104[3] = v101;
      char v95 = 1;
      uint64_t v105 = v102;
      uint64_t v106 = v103;
      sub_10003A618(v89, v88, v87, v86, (uint64_t)v94, 0, 0xE000000000000000, 0, v93, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v85, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v96,
        (uint64_t)_swiftEmptyArrayStorage,
        (uint64_t)_swiftEmptyArrayStorage,
        Int64 != 0,
        v83,
        0,
        1,
        1,
        (uint64_t)v104,
        (uint64_t)v107,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        v74,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        1,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        v76,
        v75,
        0,
        v77,
        v79);
      return;
    }
    swift_bridgeObjectRelease();
    NSString v44 = String._bridgeToObjectiveC()();
    id v45 = (id)CUAddSuffixForCurrentDeviceClass();

    if (v45)
    {
      id v46 = sub_100007334(v45);

      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v86 = v48;

      NSString v49 = String._bridgeToObjectiveC()();
      id v50 = sub_100007334(v49);

      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      uint64_t v54 = sub_100054CE4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v56 = *((void *)v54 + 2);
      unint64_t v55 = *((void *)v54 + 3);
      uint64_t v87 = v47;
      if (v56 >= v55 >> 1) {
        uint64_t v54 = sub_100054CE4((char *)(v55 > 1), v56 + 1, 1, v54);
      }
      __n128 v85 = v54;
      *((void *)v54 + 2) = v56 + 1;
      uint64_t v57 = &v54[32 * v56];
      *((void *)v57 + 4) = v51;
      *((void *)v57 + 5) = v53;
      *((void *)v57 + 6) = 0;
      v57[56] = 25;
      goto LABEL_42;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100039474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v15 = String._bridgeToObjectiveC()();

  id v59 = v8;
  id v60 = a3;
  uint64_t v58 = a1;
  if (!a2)
  {
    uint64_t v57 = 0;
    float v20 = 0.0;
    uint64_t v21 = 0xE000000000000000;
    uint64_t v53 = 0;
    uint64_t v54 = 0xE000000000000000;
    uint64_t v55 = 0;
    uint64_t v56 = 0xE000000000000000;
LABEL_50:
    uint64_t v44 = type metadata accessor for AdjustedMovie(0);
    uint64_t v45 = (uint64_t)v14;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v14, 1, 1, v44);
    memset(v76, 0, 80);
    sub_1000501E0(0, 0, (uint64_t)v11);
    uint64_t v46 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    uint64_t v47 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v59, 1, 1, v46);
    uint64_t v63 = 0;
    memset(v62, 0, sizeof(v62));
    NSString v48 = String._bridgeToObjectiveC()();
    NSString v49 = String._bridgeToObjectiveC()();
    uint64_t Int64 = CFPrefs_GetInt64();

    sub_100067438((uint64_t *)&v64);
    long long v70 = v64;
    long long v71 = v65;
    long long v72 = v66;
    long long v73 = v67;
    char v61 = 1;
    uint64_t v74 = v68;
    uint64_t v75 = v69;
    return sub_10003A618(v57, v56, v55, v54, v45, 0, 0xE000000000000000, 0, v60, 0.0, 0.0, v20, 0xE000000000000000, v53, v21, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v62,
             (uint64_t)_swiftEmptyArrayStorage,
             (uint64_t)_swiftEmptyArrayStorage,
             Int64 != 0,
             v51,
             0,
             1,
             1,
             (uint64_t)&v70,
             (uint64_t)v76,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             (uint64_t)v11,
             0,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             1,
             1,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             v47);
  }
  *(void *)&long long v70 = 0x72655F6473;
  *((void *)&v70 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v16 = sub_10005513C((uint64_t)v76), (v17 & 1) != 0))
  {
    sub_10000F578(*(void *)(a2 + 56) + 32 * v16, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  sub_10000F474((uint64_t)v76);
  if (*((void *)&v65 + 1))
  {
    sub_10000F464(&v64, &v70);
    sub_10000F464(&v70, v76);
    int v18 = swift_dynamicCast();
    int v19 = v64;
    if (!v18) {
      int v19 = 0;
    }
    LODWORD(v57) = v19;
  }
  else
  {
    sub_10000F674((uint64_t)&v64, &qword_1000EE410);
    LODWORD(v57) = 0;
  }
  *(void *)&long long v70 = 0x64655F6473;
  *((void *)&v70 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v22 = sub_10005513C((uint64_t)v76), (v23 & 1) != 0))
  {
    sub_10000F578(*(void *)(a2 + 56) + 32 * v22, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  sub_10000F474((uint64_t)v76);
  if (*((void *)&v65 + 1))
  {
    sub_10000F464(&v64, &v70);
    sub_10000F578((uint64_t)&v70, (uint64_t)v76);
    swift_dynamicCast();
    sub_10000E470((uint64_t)&v70);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000F674((uint64_t)&v64, &qword_1000EE410);
  }
  *(void *)&long long v70 = 0x65645F6473;
  *((void *)&v70 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v24 = sub_10005513C((uint64_t)v76), (v25 & 1) != 0))
  {
    sub_10000F578(*(void *)(a2 + 56) + 32 * v24, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  sub_10000F474((uint64_t)v76);
  if (*((void *)&v65 + 1))
  {
    sub_10000F464(&v64, &v70);
    sub_10000F578((uint64_t)&v70, (uint64_t)v76);
    swift_dynamicCast();
    sub_10000E470((uint64_t)&v70);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000F674((uint64_t)&v64, &qword_1000EE410);
  }
  *(void *)&long long v70 = 0x72705F70725F6473;
  *((void *)&v70 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v26 = sub_10005513C((uint64_t)v76), (v27 & 1) != 0))
  {
    sub_10000F578(*(void *)(a2 + 56) + 32 * v26, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  sub_10000F474((uint64_t)v76);
  if (*((void *)&v65 + 1))
  {
    sub_10000F464(&v64, &v70);
    sub_10000F464(&v70, v76);
    if (swift_dynamicCast()) {
      float v20 = *(float *)&v64;
    }
    else {
      float v20 = 0.0;
    }
  }
  else
  {
    sub_10000F674((uint64_t)&v64, &qword_1000EE410);
    float v20 = 0.0;
  }
  *(void *)&long long v64 = 0x74705F6473;
  *((void *)&v64 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v28 = sub_10005513C((uint64_t)v76), (v29 & 1) != 0))
  {
    sub_10000F578(*(void *)(a2 + 56) + 32 * v28, (uint64_t)&v70);
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  sub_10000F474((uint64_t)v76);
  if (!*((void *)&v71 + 1))
  {
    sub_10000F674((uint64_t)&v70, &qword_1000EE410);
    goto LABEL_48;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_48:
    uint64_t v31 = 0;
    unint64_t v52 = 0xE000000000000000;
LABEL_49:
    uint64_t v53 = v31;
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = sub_100007334(v32);

    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;

    *(void *)&v76[0] = v34;
    *((void *)&v76[0] + 1) = v36;
    v37._uint64_t countAndFlagsBits = 10250;
    v37._object = (void *)0xE200000000000000;
    String.append(_:)(v37);
    LODWORD(v70) = v57;
    v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    v39._uint64_t countAndFlagsBits = 41;
    v39._object = (void *)0xE100000000000000;
    String.append(_:)(v39);
    uint64_t v56 = *((void *)&v76[0] + 1);
    uint64_t v57 = *(void *)&v76[0];
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = sub_100007334(v40);

    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v43;
    uint64_t v55 = v42;

    uint64_t v21 = v52;
    goto LABEL_50;
  }
  if ((uint64_t)v64 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if ((uint64_t)v64 <= 0x7FFFFFFF)
  {
    if (v64 == 30)
    {
      unint64_t v52 = 0xEF2E2E2E676E6972;
      uint64_t v31 = 0x726566736E617254;
    }
    else if (v64 == 10)
    {
      unint64_t v52 = 0xEC0000002E2E2E64;
      uint64_t v31 = 0x657463656E6E6F43;
    }
    else
    {
      unint64_t v52 = 0xED00002E2E2E676ELL;
      if (v64 == 1) {
        uint64_t v31 = 0x697463656E6E6F43;
      }
      else {
        uint64_t v31 = 0x6974616D69747345;
      }
    }
    goto LABEL_49;
  }
  __break(1u);
  return result;
}

id sub_100039DD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v7 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [objc_allocWithZone((Class)CNContactStore) init];
  sub_10000EE48(&qword_1000EF140);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000B0690;
  *(void *)(v13 + 32) = CNContactGivenNameKey;
  v75[0] = (id)v13;
  specialized Array._endMutation()();
  if ((unint64_t)v75[0] >> 62)
  {
    uint64_t v55 = CNContactGivenNameKey;
    swift_bridgeObjectRetain();
    sub_10000EE48(&qword_1000EE390);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = CNContactGivenNameKey;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_bridgeObjectRelease();
  sub_10000EE48(&qword_1000EE390);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v75[0] = 0;
  id v16 = [v12 _crossPlatformUnifiedMeContactWithKeysToFetch:isa error:v75];

  long long v65 = a2;
  id v63 = v12;
  if (v16)
  {
    id v17 = v75[0];
    id v18 = [v16 givenName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;
  }
  else
  {
    id v22 = v75[0];
    uint64_t v23 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v62 = v23;
    unint64_t v24 = (void *)_convertErrorToNSError(_:)();
    if (qword_1000ED730 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000133A0(v25, (uint64_t)qword_1000EDF80);
    id v26 = v24;
    char v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      char v61 = v6;
      uint64_t v30 = (uint8_t *)v29;
      *(void *)&long long v58 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412290;
      *(void *)&long long v60 = v11;
      v75[0] = v26;
      *(void *)&long long v59 = v27;
      id v31 = v26;
      os_log_type_t v11 = (char *)v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)long long v58 = v26;

      char v27 = v59;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v59, v28, "HomePodSetupViewModel: Open Settings failed {error: %@}", v30, 0xCu);
      sub_10000EE48(&qword_1000EDEB0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v61;
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
    }

    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  uint64_t v32 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v32 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v32) {
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v34 = result;
    id v35 = [result aa_primaryAppleAccount];

    if (v35)
    {
      id v36 = [v35 aa_firstName];
      if (v36)
      {
        Swift::String v37 = v36;
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v21 = v38;

LABEL_20:
        NSString v39 = String._bridgeToObjectiveC()();
        id v40 = sub_100007334(v39);

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10000EE48(&qword_1000EE398);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_1000B0850;
        *(void *)(v41 + 56) = &type metadata for String;
        *(void *)(v41 + 64) = sub_10003D0C8();
        *(void *)(v41 + 32) = v19;
        *(void *)(v41 + 40) = v21;
        uint64_t v42 = String.init(format:_:)();
        char v61 = (char *)v43;
        uint64_t v62 = v42;
        swift_bridgeObjectRelease();
        uint64_t v44 = type metadata accessor for AdjustedMovie(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 1, 1, v44);
        uint64_t v45 = *(unsigned int *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent);
        memset(v75, 0, 80);
        uint64_t v46 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo);
        swift_bridgeObjectRetain();
        uint64_t v47 = v64;
        sub_1000501E0(0, 0, v64);
        uint64_t v48 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v6, 1, 1, v48);
        uint64_t v71 = 0;
        memset(v70, 0, sizeof(v70));
        NSString v49 = String._bridgeToObjectiveC()();
        NSString v50 = String._bridgeToObjectiveC()();
        uint64_t v51 = (uint64_t)v11;
        uint64_t Int64 = CFPrefs_GetInt64();

        LOBYTE(v49) = Int64 != 0;
        sub_100067438((uint64_t *)v67);
        long long v59 = v67[1];
        long long v60 = v67[0];
        long long v57 = v67[3];
        long long v58 = v67[2];
        uint64_t v53 = v68;
        uint64_t v54 = v69;

        v72[0] = v60;
        v72[1] = v59;
        v72[2] = v58;
        v72[3] = v57;
        uint64_t v73 = v53;
        uint64_t v74 = v54;
        char v66 = 0;
        return (id)sub_10003A618(v62, (uint64_t)v61, 0, 0xE000000000000000, v51, 0, 0xE000000000000000, 0, v65, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v70,
                     (uint64_t)_swiftEmptyArrayStorage,
                     (uint64_t)_swiftEmptyArrayStorage,
                     (char)v49,
                     v56,
                     v45,
                     SBYTE4(v45),
                     1,
                     (uint64_t)v72,
                     (uint64_t)v75,
                     v46,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     v47,
                     0,
                     0,
                     1,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     0,
                     0,
                     0,
                     0,
                     (uint64_t)v6);
      }
    }
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003A618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, float a12@<S2>, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,int a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,char a39,uint64_t a40,char a41,char a42,char a43,char a44,int a45,int a46,uint64_t a47,uint64_t a48,char a49,char a50,char a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,int a59,uint64_t a60)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v64 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  sub_10003D270(a5, (uint64_t)a9 + v64[6], &qword_1000EE038);
  long long v65 = (void *)((char *)a9 + v64[7]);
  *long long v65 = a6;
  v65[1] = a7;
  char v66 = (void *)((char *)a9 + v64[8]);
  *char v66 = a8;
  v66[1] = a13;
  long long v67 = (void *)((char *)a9 + v64[9]);
  *long long v67 = a14;
  v67[1] = a15;
  *(void *)((char *)a9 + v64[10]) = a16;
  *(void *)((char *)a9 + v64[11]) = a17;
  *(void *)((char *)a9 + v64[12]) = a18;
  sub_10003D270(a19, (uint64_t)a9 + v64[13], &qword_1000EE300);
  *(void *)((char *)a9 + v64[14]) = a20;
  *(void *)((char *)a9 + v64[15]) = a21;
  *((unsigned char *)a9 + v64[16]) = a22;
  uint64_t v68 = (char *)a9 + v64[17];
  *(_DWORD *)uint64_t v68 = a24;
  _OWORD v68[4] = a25 & 1;
  *(void *)((char *)a9 + v64[18]) = a26;
  sub_10003D270(a27, (uint64_t)a9 + v64[19], &qword_1000EE3B0);
  sub_10003D270(a28, (uint64_t)a9 + v64[20], &qword_1000EE3B0);
  *(void *)((char *)a9 + v64[21]) = a29;
  *(void *)((char *)a9 + v64[22]) = a30;
  uint64_t v69 = (void *)((char *)a9 + v64[23]);
  void *v69 = a31;
  v69[1] = a32;
  long long v70 = (void *)((char *)a9 + v64[24]);
  *long long v70 = a33;
  v70[1] = a34;
  uint64_t v71 = (void *)((char *)a9 + v64[25]);
  *uint64_t v71 = a35;
  v71[1] = a36;
  *((unsigned char *)a9 + v64[26]) = a37;
  sub_10003D270(a38, (uint64_t)a9 + v64[27], &qword_1000EE040);
  *((unsigned char *)a9 + v64[28]) = a39;
  *(double *)((char *)a9 + v64[29]) = a10;
  *(double *)((char *)a9 + v64[30]) = a11;
  long long v72 = (char *)a9 + v64[31];
  *(void *)long long v72 = a40;
  v72[8] = a41 & 1;
  *((unsigned char *)a9 + v64[32]) = a42;
  *((unsigned char *)a9 + v64[33]) = a43;
  *((unsigned char *)a9 + v64[34]) = a44;
  *(_DWORD *)((char *)a9 + v64[35]) = a45;
  *(_DWORD *)((char *)a9 + v64[36]) = a46;
  uint64_t v73 = (void *)((char *)a9 + v64[37]);
  *uint64_t v73 = a47;
  v73[1] = a48;
  *((unsigned char *)a9 + v64[38]) = a49;
  *((unsigned char *)a9 + v64[39]) = a50;
  *(float *)((char *)a9 + v64[40]) = a12;
  *((unsigned char *)a9 + v64[41]) = a51;
  *((unsigned char *)a9 + v64[42]) = a52;
  *((unsigned char *)a9 + v64[43]) = a53;
  uint64_t v74 = (void *)((char *)a9 + v64[44]);
  *uint64_t v74 = a54;
  v74[1] = a55;
  uint64_t v75 = (void *)((char *)a9 + v64[45]);
  *uint64_t v75 = a56;
  v75[1] = a57;
  *((unsigned char *)a9 + v64[46]) = a58;
  *(_DWORD *)((char *)a9 + v64[47]) = a59;
  return sub_10003D270(a60, (uint64_t)a9 + v64[48], &qword_1000EE048);
}

uint64_t sub_10003AA58@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v169) = a3;
  int v161 = a2;
  uint64_t v167 = a4;
  uint64_t v5 = type metadata accessor for AdjustedImage(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v155 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v166 = (uint64_t)&v152 - v9;
  uint64_t v10 = sub_10000EE48(&qword_1000EDF98);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v164 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v175 = (char *)&v152 - v14;
  __chkstk_darwin(v13);
  id v16 = (char *)&v152 - v15;
  uint64_t v172 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v172 - 8);
  uint64_t v18 = __chkstk_darwin(v172);
  uint64_t v153 = (char *)&v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  id v162 = (char *)&v152 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v152 - v22;
  uint64_t v24 = sub_10000EE48(&qword_1000EE040);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v157 = (uint64_t)&v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v156 = (uint64_t)&v152 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v165 = (uint64_t)&v152 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  id v33 = (char *)&v152 - v32;
  __chkstk_darwin(v31);
  id v35 = (char *)&v152 - v34;
  uint64_t v174 = v6;
  id v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v36((char *)&v152 - v34, 1, 1, v5);
  uint64_t v170 = v33;
  uint64_t v171 = v5;
  uint64_t v160 = v6 + 56;
  int v159 = v36;
  v36(v33, 1, 1, v5);
  uint64_t v173 = a1;
  id v37 = *(id *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
  uint64_t v163 = "NOT_NOW_BUTTON_TITLE";
  NSString v38 = String._bridgeToObjectiveC()();
  id v168 = self;
  id v39 = [v168 imageNamed:v38 inBundle:v37];

  id v40 = (void *)&unk_1000ED000;
  if (v39)
  {
    v154 = (void (*)(void, void, void, void))v23;
    uint64_t v41 = (uint64_t)v35;
    uint64_t v42 = SFDeviceAssetNameAdjustments;
    id v43 = [v37 URLForResource:SFDeviceAssetNameAdjustments withExtension:0];
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v158 = v42;
      uint64_t v45 = v162;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      uint64_t v47 = v17;
      uint64_t v48 = v172;
      v46(v16, v45, v172);
      NSString v49 = *(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56);
      v49(v16, 0, 1, v48);
      uint64_t v50 = v48;
      uint64_t v17 = v47;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v16, 1, v50) != 1)
      {
        sub_10000F674(v41, &qword_1000EE040);
        uint64_t v51 = v154;
        uint64_t v52 = v172;
        v46((char *)v154, v16, v172);
        id v35 = (char *)v41;
        uint64_t v53 = v171;
        uint64_t v54 = v41 + *(int *)(v171 + 20);
        (*(void (**)(uint64_t, void (*)(void, void, void, void), uint64_t))(v17 + 16))(v54, v51, v52);
        v49((char *)v54, 0, 1, v52);
        *(void *)id v35 = v39;
        v159(v35, 0, 1, v53);
        uint64_t v55 = qword_1000ED730;
        id v56 = v39;
        long long v57 = (void (*)(uint64_t, void, uint64_t, uint64_t))v49;
        if (v55 != -1) {
          swift_once();
        }
        uint64_t v58 = type metadata accessor for Logger();
        sub_1000133A0(v58, (uint64_t)qword_1000EDF80);
        long long v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.default.getter();
        BOOL v61 = os_log_type_enabled(v59, v60);
        uint64_t v62 = v173;
        if (v61)
        {
          id v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v63 = 0;
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "HomePodSetupViewModel createStereoPairImages: leftHomePod adjusted image created", v63, 2u);
          long long v57 = (void (*)(uint64_t, void, uint64_t, uint64_t))v49;
          swift_slowDealloc();
        }

        uint64_t v64 = v172;
        (*(void (**)(void (*)(void, void, void, void), uint64_t))(v17 + 8))(v154, v172);
        id v40 = (void *)&unk_1000ED000;
        goto LABEL_26;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, 1, 1, v172);
    }

    sub_10000F674((uint64_t)v16, &qword_1000EDF98);
    id v35 = (char *)v41;
    id v40 = &unk_1000ED000;
  }
  if (v40[230] != -1) {
    swift_once();
  }
  uint64_t v65 = type metadata accessor for Logger();
  sub_1000133A0(v65, (uint64_t)qword_1000EDF80);
  char v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  BOOL v68 = os_log_type_enabled(v66, v67);
  uint64_t v64 = v172;
  if (v68)
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v69 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "HomePodSetupViewModel createStereoPairImages: leftHomePod failed to create", v69, 2u);
    swift_slowDealloc();
  }

  id v70 = v37;
  NSString v71 = String._bridgeToObjectiveC()();
  id v72 = [v168 imageNamed:v71 inBundle:v70];

  if (!v72)
  {
    uint64_t v73 = Logger.logObject.getter();
    uint64_t v74 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v73, (os_log_type_t)v74))
    {
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v75 = 0;
      _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v74, "HomePodSetupViewModel createStereoPairImages: UIImage(named: ProxCard_StereoPairUnit, in: model.assetBundle) == nil", v75, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v158 = SFDeviceAssetNameAdjustments;
  id v76 = [v70 URLForResource:];
  if (v76)
  {
    int v77 = v76;
    uint64_t v78 = v162;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v79 = (uint64_t)v175;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v175, v78, v64);
    long long v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
    v57(v79, 0, 1, v64);
    int v80 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v79, 1, v64);
    uint64_t v62 = v173;
    if (v80 != 1)
    {
      sub_10000F674(v79, &qword_1000EDF98);
      goto LABEL_26;
    }
  }
  else
  {
    long long v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
    uint64_t v79 = (uint64_t)v175;
    v57((uint64_t)v175, 1, 1, v64);
    uint64_t v62 = v173;
  }
  sub_10000F674(v79, &qword_1000EDF98);
  NSString v81 = Logger.logObject.getter();
  os_log_type_t v82 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v81, v82))
  {
    int v83 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v83 = 0;
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "HomePodSetupViewModel createStereoPairImages: model.assetBundle.url(forResource: SFDeviceAssetNameAdjustments, withExtension: nil) == nil", v83, 2u);
    swift_slowDealloc();
  }

LABEL_26:
  if (v40[230] != -1) {
    swift_once();
  }
  uint64_t v84 = type metadata accessor for Logger();
  uint64_t v85 = sub_1000133A0(v84, (uint64_t)qword_1000EDF80);
  swift_retain();
  uint64_t v175 = (char *)v85;
  uint64_t v86 = Logger.logObject.getter();
  os_log_type_t v87 = static os_log_type_t.default.getter();
  BOOL v88 = os_log_type_enabled(v86, v87);
  v154 = v57;
  if (v88)
  {
    uint64_t v89 = swift_slowAlloc();
    *(_DWORD *)uint64_t v89 = 67109376;
    LODWORD(v177) = *(_DWORD *)(v62 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v89 + 8) = 1024;
    LODWORD(v177) = v169 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v86, v87, "HomePodSetupViewModel createStereoPairImages: stereoRole = %d | forceStereo = %{BOOL}d", (uint8_t *)v89, 0xEu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  swift_retain_n();
  uint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = (uint8_t *)swift_slowAlloc();
    uint64_t v177 = swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 136315138;
    uint64_t v152 = v17;
    swift_beginAccess();
    sub_10003DD8C(0, &qword_1000EE3F8);
    swift_bridgeObjectRetain();
    uint64_t v93 = Dictionary.description.getter();
    unint64_t v95 = v94;
    uint64_t v62 = v173;
    swift_bridgeObjectRelease();
    uint64_t v176 = sub_100048718(v93, v95, &v177);
    uint64_t v17 = v152;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "HomePodSetupViewModel assetBundles %s", v92, 0xCu);
    swift_arrayDestroy();
    uint64_t v64 = v172;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v96 = v170;
  uint64_t v97 = (uint64_t)v164;
  uint64_t v98 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
  if (*(_DWORD *)(v62 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) != 1
    || (v169 & 1) != 0)
  {
    unsigned __int8 v99 = *(unsigned char *)(v62 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
    long long v100 = (uint64_t *)(v62 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
    swift_beginAccess();
    uint64_t v101 = *v100;
    if (*(void *)(*v100 + 16))
    {
      unint64_t v102 = sub_100055290(v99);
      if (v103)
      {
        id v104 = *(id *)(*(void *)(v101 + 56) + 8 * v102);
        NSString v105 = String._bridgeToObjectiveC()();
        id v106 = [v168 imageNamed:v105 inBundle:v104];

        if (v106)
        {
          uint64_t v172 = v98;
          id v107 = [v104 URLForResource:v158 withExtension:0];
          if (v107)
          {
            long long v108 = v107;
            long long v109 = v162;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v110 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
            v110(v97, v109, v64);
            uint64_t v111 = (void (*)(char *, void, uint64_t, uint64_t))v154;
            uint64_t v169 = (char *)(v17 + 56);
            v154(v97, 0, 1, v64);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v97, 1, v64) != 1)
            {
              uint64_t v112 = v97;
              uint64_t v113 = v153;
              v110((uint64_t)v153, (char *)v112, v64);
              sub_10000F674((uint64_t)v96, &qword_1000EE040);
              uint64_t v114 = v171;
              int v115 = &v96[*(int *)(v171 + 20)];
              (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v115, v113, v64);
              v111(v115, 0, 1, v64);
              *(void *)uint64_t v96 = v106;
              v159(v96, 0, 1, v114);
              id v116 = v106;
              uint64_t v117 = Logger.logObject.getter();
              os_log_type_t v118 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v117, v118))
              {
                uint64_t v119 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v119 = 0;
                _os_log_impl((void *)&_mh_execute_header, v117, v118, "HomePodSetupViewModel createStereoPairImages: rightHomePod adjusted image created", v119, 2u);
                swift_slowDealloc();
              }

              (*(void (**)(char *, uint64_t))(v17 + 8))(v153, v64);
              uint64_t v98 = v172;
              uint64_t v62 = v173;
              goto LABEL_50;
            }
          }
          else
          {
            v154(v97, 1, 1, v64);
          }

          sub_10000F674(v97, &qword_1000EDF98);
          uint64_t v98 = v172;
          uint64_t v62 = v173;
        }
        else
        {
        }
      }
    }
    int v120 = Logger.logObject.getter();
    os_log_type_t v121 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v120, v121))
    {
      uint64_t v122 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v122 = 0;
      _os_log_impl((void *)&_mh_execute_header, v120, v121, "HomePodSetupViewModel createStereoPairImages: rightHomePod failed to create, setting rightHomepod to left", v122, 2u);
      swift_slowDealloc();
    }

    sub_10003DCC4((uint64_t)v35, (uint64_t)v96, &qword_1000EE040);
  }
LABEL_50:
  uint64_t v123 = v165;
  sub_10000FD94((uint64_t)v35, v165, &qword_1000EE040);
  uint64_t v124 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48);
  v174 += 48;
  if (v124(v123, 1, v171) == 1)
  {
    sub_10000F674(v123, &qword_1000EE040);
    uint64_t v125 = Logger.logObject.getter();
    os_log_type_t v126 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v127 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v127 = 0;
      _os_log_impl((void *)&_mh_execute_header, v125, v126, "HomePodSetupViewModel createStereoPairImages: leftHomePod is nil, returning nil", v127, 2u);
      swift_slowDealloc();
    }

    sub_10000F674((uint64_t)v35, &qword_1000EE040);
    uint64_t v128 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v167, 1, 1, v128);
    return sub_10000F674((uint64_t)v96, &qword_1000EE040);
  }
  sub_10003DD28(v123, v166);
  uint64_t v172 = v98;
  if (v161)
  {
    NSString v129 = String._bridgeToObjectiveC()();
    id v130 = [v168 imageNamed:v129];
  }
  else
  {
    id v130 = 0;
  }
  int v131 = v130;
  char v132 = Logger.logObject.getter();
  os_log_type_t v133 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v132, v133))
  {
    long long v134 = (_DWORD *)swift_slowAlloc();
    uint64_t v169 = v35;
    uint64_t v135 = v134;
    *long long v134 = 67109632;
    LODWORD(v176) = 1;
    id v168 = v131;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v135 + 4) = 1024;
    swift_beginAccess();
    uint64_t v136 = v156;
    sub_10000FD94((uint64_t)v96, v156, &qword_1000EE040);
    BOOL v137 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v124)(v136, 1, v171) != 1;
    sub_10000F674(v136, &qword_1000EE040);
    LODWORD(v176) = v137;
    uint64_t v62 = v173;
    uint64_t v96 = v170;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v135 + 7) = 1024;
    LODWORD(v176) = v130 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v132, v133, "HomePodSetupViewModel createStereoPairImages: creating StereoPairImage left = %{BOOL}d | right = %{BOOL}d | appleTV = %{BOOL}d", (uint8_t *)v135, 0x14u);
    id v35 = v169;
    swift_slowDealloc();
  }
  else
  {

    char v132 = v131;
  }

  if (*(_DWORD *)(v62 + v172) != 3) {
    goto LABEL_63;
  }
  swift_beginAccess();
  uint64_t v138 = v157;
  sub_10000FD94((uint64_t)v96, v157, &qword_1000EE040);
  if (v124(v138, 1, v171) == 1)
  {
    sub_10000F674(v138, &qword_1000EE040);
LABEL_63:
    long long v139 = Logger.logObject.getter();
    os_log_type_t v140 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v139, v140))
    {
      uint64_t v141 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v141 = 0;
      _os_log_impl((void *)&_mh_execute_header, v139, v140, "HomePodSetupViewModel StereoPairImage, HomePod being setup set on the left", v141, 2u);
      swift_slowDealloc();
    }

    sub_10000F674((uint64_t)v35, &qword_1000EE040);
    uint64_t v142 = v167;
    sub_10003DD28(v166, v167);
    swift_beginAccess();
    uint64_t v143 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    sub_10000FD94((uint64_t)v96, v142 + *(int *)(v143 + 20), &qword_1000EE040);
    *(void *)(v142 + *(int *)(v143 + 24)) = v130;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v142, 0, 1, v143);
    return sub_10000F674((uint64_t)v96, &qword_1000EE040);
  }
  uint64_t v144 = v155;
  sub_10003DD28(v138, v155);
  uint64_t v145 = Logger.logObject.getter();
  os_log_type_t v146 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v145, v146))
  {
    uint64_t v147 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v147 = 0;
    _os_log_impl((void *)&_mh_execute_header, v145, v146, "HomePodSetupViewModel StereoPairImage, HomePod being setup set on the right", v147, 2u);
    swift_slowDealloc();
  }

  sub_10000F674((uint64_t)v35, &qword_1000EE040);
  uint64_t v148 = v167;
  sub_10003DD28(v144, v167);
  uint64_t v149 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v150 = v148 + *(int *)(v149 + 20);
  sub_10003DD28(v166, v150);
  v159((char *)v150, 0, 1, v171);
  *(void *)(v148 + *(int *)(v149 + 24)) = v130;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v149 - 8) + 56))(v148, 0, 1, v149);
  return sub_10000F674((uint64_t)v96, &qword_1000EE040);
}

unint64_t sub_10003C0C0()
{
  return 0xD000000000000018;
}

char *sub_10003C0DC(uint64_t a1, uint64_t *a2)
{
  type metadata accessor for __VaListBuilder();
  uint64_t v3 = (void *)swift_allocObject();
  void v3[2] = 8;
  v3[3] = 0;
  uint64_t v4 = v3 + 3;
  v3[4] = 0;
  v3[5] = 0;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_25:
    uint64_t v21 = __VaListBuilder.va_list()();
    NSString v22 = String._bridgeToObjectiveC()();
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = sub_1000074F4(v22, v23, v21);

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    *a2 = v25;
    a2[1] = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (char *)swift_bridgeObjectRelease();
  }
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  while (1)
  {
    sub_10003DE98(v7 + 40 * v6, (uint64_t)v29);
    sub_10000F6E8(v29, v29[3]);
    id result = (char *)dispatch thunk of CVarArg._cVarArgEncoding.getter();
    uint64_t v9 = *v4;
    uint64_t v10 = *((void *)result + 2);
    BOOL v11 = __OFADD__(*v4, v10);
    uint64_t v12 = *v4 + v10;
    if (v11) {
      break;
    }
    uint64_t v13 = result;
    uint64_t v14 = v3[4];
    if (v14 >= v12) {
      goto LABEL_18;
    }
    if (v14 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    uint64_t v15 = (char *)v3[5];
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    v3[4] = v12;
    if ((unint64_t)(v12 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    id result = (char *)swift_slowAlloc();
    v3[5] = result;
    if (v15)
    {
      if (result != v15 || result >= &v15[8 * v9]) {
        memmove(result, v15, 8 * v9);
      }
      __VaListBuilder.deallocStorage(wordCount:storage:)();
LABEL_18:
      id result = (char *)v3[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v17 = *((void *)v13 + 2);
    if (v17)
    {
      uint64_t v18 = (uint64_t *)(v13 + 32);
      uint64_t v19 = *v4;
      while (1)
      {
        uint64_t v20 = *v18++;
        *(void *)&result[8 * v19] = v20;
        uint64_t v19 = *v4 + 1;
        if (__OFADD__(*v4, 1)) {
          break;
        }
        *uint64_t v4 = v19;
        if (!--v17) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v6;
    swift_bridgeObjectRelease();
    sub_10000E470((uint64_t)v29);
    if (v6 == v5) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10003C338()
{
  uint64_t v169 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v169);
  uint64_t v168 = (uint64_t)&v167 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v167);
  uint64_t v3 = (char *)&v167 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170[0] = 0x3D656C746974;
  v170[1] = 0xE600000000000000;
  uint64_t v4 = *(void **)(v0 + 8);
  v171[0] = *(id *)v0;
  v171[1] = v4;
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 32;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = v170[0];
  uint64_t v8 = (void *)v170[1];
  v170[0] = 0xD000000000000017;
  v170[1] = 0x80000001000B4420;
  v7._object = v8;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v170[0];
  uint64_t v9 = v170[1];
  strcpy((char *)v170, "subtitle=");
  WORD1(v170[1]) = 0;
  HIDWORD(v170[1]) = -385875968;
  BOOL v11 = *(void **)(v0 + 24);
  v171[0] = *(id *)(v0 + 16);
  v171[1] = v11;
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t v14 = v170[0];
  uint64_t v15 = (void *)v170[1];
  v170[0] = v10;
  v170[1] = v9;
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v170[0];
  uint64_t v17 = v170[1];
  strcpy((char *)v170, "bodyText=");
  WORD1(v170[1]) = 0;
  HIDWORD(v170[1]) = -385875968;
  uint64_t v19 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v20 = v0 + v19[7];
  uint64_t v21 = *(void **)(v20 + 8);
  v171[0] = *(id *)v20;
  v171[1] = v21;
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 32;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  uint64_t v25 = v170[0];
  id v24 = (void *)v170[1];
  v170[0] = v18;
  v170[1] = v17;
  swift_bridgeObjectRetain();
  v26._uint64_t countAndFlagsBits = v25;
  v26._object = v24;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v170[0];
  uint64_t v27 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v170[0] = 0x6D69616C63736964;
  v170[1] = 0xEF3D747865547265;
  uint64_t v29 = v0 + v19[8];
  uint64_t v30 = *(void **)(v29 + 8);
  v171[0] = *(id *)v29;
  v171[1] = v30;
  swift_bridgeObjectRetain();
  v31._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 32;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  uint64_t v33 = v170[0];
  uint64_t v34 = (void *)v170[1];
  v170[0] = v28;
  v170[1] = v27;
  swift_bridgeObjectRetain();
  v35._uint64_t countAndFlagsBits = v33;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v170[0];
  uint64_t v36 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v170[0] = 0xD000000000000017;
  v170[1] = 0x80000001000B4440;
  uint64_t v38 = v0 + v19[9];
  id v39 = *(void **)(v38 + 8);
  v171[0] = *(id *)v38;
  v171[1] = v39;
  swift_bridgeObjectRetain();
  v40._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = 32;
  v41._object = (void *)0xE100000000000000;
  String.append(_:)(v41);
  uint64_t v42 = v170[0];
  id v43 = (void *)v170[1];
  v170[0] = v37;
  v170[1] = v36;
  swift_bridgeObjectRetain();
  v44._uint64_t countAndFlagsBits = v42;
  v44._object = v43;
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v170[0];
  uint64_t v45 = v170[1];
  strcpy((char *)v170, "buttonInfo=");
  HIDWORD(v170[1]) = -352321536;
  v171[0] = *(id *)(v0 + v19[10]);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE2E8);
  v47._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 32;
  v48._object = (void *)0xE100000000000000;
  String.append(_:)(v48);
  uint64_t v49 = v170[0];
  uint64_t v50 = (void *)v170[1];
  v170[0] = v46;
  v170[1] = v45;
  swift_bridgeObjectRetain();
  v51._uint64_t countAndFlagsBits = v49;
  v51._object = v50;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = v170[0];
  uint64_t v52 = v170[1];
  v170[0] = 0x3D6569766F6DLL;
  v170[1] = 0xE600000000000000;
  sub_10000FD94(v0 + v19[6], (uint64_t)v3, &qword_1000EE038);
  v54._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  v55._uint64_t countAndFlagsBits = 32;
  v55._object = (void *)0xE100000000000000;
  String.append(_:)(v55);
  uint64_t v56 = v170[0];
  long long v57 = (void *)v170[1];
  v170[0] = v53;
  v170[1] = v52;
  swift_bridgeObjectRetain();
  v58._uint64_t countAndFlagsBits = v56;
  v58._object = v57;
  String.append(_:)(v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = v170[0];
  uint64_t v59 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v170, "productImage=");
  HIWORD(v170[1]) = -4864;
  sub_10000FD94(v0 + v19[27], v168, &qword_1000EE040);
  v61._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  v62._uint64_t countAndFlagsBits = 32;
  v62._object = (void *)0xE100000000000000;
  String.append(_:)(v62);
  uint64_t v63 = v170[0];
  uint64_t v64 = (void *)v170[1];
  v170[0] = v60;
  v170[1] = v59;
  swift_bridgeObjectRetain();
  v65._uint64_t countAndFlagsBits = v63;
  v65._object = v64;
  String.append(_:)(v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = v170[0];
  uint64_t v66 = v170[1];
  strcpy((char *)v170, "iconImages=");
  HIDWORD(v170[1]) = -352321536;
  v171[0] = *(id *)(v0 + v19[11]);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE2F0);
  v68._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v68);
  swift_bridgeObjectRelease();
  v69._uint64_t countAndFlagsBits = 32;
  v69._object = (void *)0xE100000000000000;
  String.append(_:)(v69);
  uint64_t v70 = v170[0];
  NSString v71 = (void *)v170[1];
  v170[0] = v67;
  v170[1] = v66;
  swift_bridgeObjectRetain();
  v72._uint64_t countAndFlagsBits = v70;
  v72._object = v71;
  String.append(_:)(v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v74 = v170[0];
  uint64_t v73 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v170[0] = 0xD000000000000012;
  v170[1] = 0x80000001000B4460;
  v171[0] = *(id *)(v0 + v19[12]);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE2F8);
  v75._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v75);
  swift_bridgeObjectRelease();
  v76._uint64_t countAndFlagsBits = 32;
  v76._object = (void *)0xE100000000000000;
  String.append(_:)(v76);
  uint64_t v77 = v170[0];
  uint64_t v78 = (void *)v170[1];
  v170[0] = v74;
  v170[1] = v73;
  swift_bridgeObjectRetain();
  v79._uint64_t countAndFlagsBits = v77;
  v79._object = v78;
  String.append(_:)(v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = v170[0];
  uint64_t v80 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v171, "defaultOption=");
  HIBYTE(v171[1]) = -18;
  sub_10000FD94(v0 + v19[13], (uint64_t)v170, &qword_1000EE300);
  sub_10000EE48(&qword_1000EE300);
  v82._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v82);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = 32;
  v83._object = (void *)0xE100000000000000;
  String.append(_:)(v83);
  id v84 = v171[0];
  id v85 = v171[1];
  v170[0] = v81;
  v170[1] = v80;
  swift_bridgeObjectRetain();
  v86._uint64_t countAndFlagsBits = (uint64_t)v84;
  v86._object = v85;
  String.append(_:)(v86);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v88 = v170[0];
  uint64_t v87 = v170[1];
  strcpy((char *)v170, "features=");
  WORD1(v170[1]) = 0;
  HIDWORD(v170[1]) = -385875968;
  v171[0] = *(id *)(v0 + v19[15]);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE308);
  v89._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v89);
  swift_bridgeObjectRelease();
  v90._uint64_t countAndFlagsBits = 32;
  v90._object = (void *)0xE100000000000000;
  String.append(_:)(v90);
  uint64_t v91 = v170[0];
  uint64_t v92 = (void *)v170[1];
  v170[0] = v88;
  v170[1] = v87;
  swift_bridgeObjectRetain();
  v93._uint64_t countAndFlagsBits = v91;
  v93._object = v92;
  String.append(_:)(v93);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = v170[0];
  uint64_t v94 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v170[0] = 0x73736572676F7270;
  v170[1] = 0xEF3D6C6961746544;
  char v96 = *(unsigned char *)(v0 + v19[16]);
  if (v96) {
    uint64_t v97 = 7562585;
  }
  else {
    uint64_t v97 = 28494;
  }
  if (*(unsigned char *)(v0 + v19[16])) {
    unint64_t v98 = 0xE300000000000000;
  }
  else {
    unint64_t v98 = 0xE200000000000000;
  }
  unint64_t v99 = v98;
  String.append(_:)(*(Swift::String *)&v97);
  swift_bridgeObjectRelease();
  v100._uint64_t countAndFlagsBits = 32;
  v100._object = (void *)0xE100000000000000;
  String.append(_:)(v100);
  uint64_t v101 = v170[0];
  unint64_t v102 = (void *)v170[1];
  v170[0] = v95;
  v170[1] = v94;
  swift_bridgeObjectRetain();
  v103._uint64_t countAndFlagsBits = v101;
  v103._object = v102;
  String.append(_:)(v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v105 = v170[0];
  uint64_t v104 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v170, "progressEvent=");
  HIBYTE(v170[1]) = -18;
  id v106 = (int *)(v0 + v19[17]);
  int v107 = *v106;
  LOBYTE(v106) = *((unsigned char *)v106 + 4);
  LODWORD(v171[0]) = v107;
  BYTE4(v171[0]) = (_BYTE)v106;
  sub_10000EE48(&qword_1000EE310);
  v108._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v108);
  swift_bridgeObjectRelease();
  v109._uint64_t countAndFlagsBits = 32;
  v109._object = (void *)0xE100000000000000;
  String.append(_:)(v109);
  uint64_t v110 = v170[0];
  uint64_t v111 = (void *)v170[1];
  v170[0] = v105;
  v170[1] = v104;
  swift_bridgeObjectRetain();
  v112._uint64_t countAndFlagsBits = v110;
  v112._object = v111;
  String.append(_:)(v112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v114 = v170[0];
  uint64_t v113 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v170[0] = 0x6C61694469726973;
  v170[1] = 0xEF3D6F666E49676FLL;
  if (*(void *)(v0 + v19[21]))
  {
    uint64_t v115 = Dictionary.debugDescription.getter();
    unint64_t v117 = v116;
  }
  else
  {
    unint64_t v117 = 0xE400000000000000;
    uint64_t v115 = 1701736270;
  }
  unint64_t v118 = v117;
  String.append(_:)(*(Swift::String *)&v115);
  swift_bridgeObjectRelease();
  v119._uint64_t countAndFlagsBits = 32;
  v119._object = (void *)0xE100000000000000;
  String.append(_:)(v119);
  uint64_t v120 = v170[0];
  os_log_type_t v121 = (void *)v170[1];
  v170[0] = v114;
  v170[1] = v113;
  swift_bridgeObjectRetain();
  v122._uint64_t countAndFlagsBits = v120;
  v122._object = v121;
  String.append(_:)(v122);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v124 = v170[0];
  uint64_t v123 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v170, "accountEmails=");
  HIBYTE(v170[1]) = -18;
  v171[0] = *(id *)(v0 + v19[22]);
  id v125 = v171[0];
  sub_10000EE48(&qword_1000EE318);
  v126._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v126);
  swift_bridgeObjectRelease();
  v127._uint64_t countAndFlagsBits = 32;
  v127._object = (void *)0xE100000000000000;
  String.append(_:)(v127);
  uint64_t v128 = v170[0];
  NSString v129 = (void *)v170[1];
  v170[0] = v124;
  v170[1] = v123;
  swift_bridgeObjectRetain();
  v130._uint64_t countAndFlagsBits = v128;
  v130._object = v129;
  String.append(_:)(v130);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v132 = v170[0];
  uint64_t v131 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v170[0] = 0x73736572676F7270;
  v170[1] = 0xEF3D6C6961746544;
  LOBYTE(v171[0]) = v96;
  v133._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v133);
  swift_bridgeObjectRelease();
  v134._uint64_t countAndFlagsBits = 32;
  v134._object = (void *)0xE100000000000000;
  String.append(_:)(v134);
  uint64_t v135 = v170[0];
  uint64_t v136 = (void *)v170[1];
  v170[0] = v132;
  v170[1] = v131;
  swift_bridgeObjectRetain();
  v137._uint64_t countAndFlagsBits = v135;
  v137._object = v136;
  String.append(_:)(v137);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v139 = v170[0];
  uint64_t v138 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v170[0] = 0xD000000000000010;
  v170[1] = 0x80000001000B4480;
  uint64_t v140 = v0 + v19[23];
  uint64_t v141 = *(void **)(v140 + 8);
  v171[0] = *(id *)v140;
  v171[1] = v141;
  swift_bridgeObjectRetain();
  sub_10000EE48((uint64_t *)&unk_1000EE320);
  v142._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v142);
  swift_bridgeObjectRelease();
  v143._uint64_t countAndFlagsBits = 32;
  v143._object = (void *)0xE100000000000000;
  String.append(_:)(v143);
  uint64_t v144 = v170[0];
  uint64_t v145 = (void *)v170[1];
  v170[0] = v139;
  v170[1] = v138;
  swift_bridgeObjectRetain();
  v146._uint64_t countAndFlagsBits = v144;
  v146._object = v145;
  String.append(_:)(v146);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v148 = v170[0];
  uint64_t v147 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v170[0] = 0xD00000000000001ALL;
  v170[1] = 0x80000001000B44A0;
  uint64_t v149 = v0 + v19[24];
  uint64_t v150 = *(void **)(v149 + 8);
  v171[0] = *(id *)v149;
  v171[1] = v150;
  swift_bridgeObjectRetain();
  v151._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v151);
  swift_bridgeObjectRelease();
  v152._uint64_t countAndFlagsBits = 32;
  v152._object = (void *)0xE100000000000000;
  String.append(_:)(v152);
  uint64_t v153 = v170[0];
  v154 = (void *)v170[1];
  v170[0] = v148;
  v170[1] = v147;
  swift_bridgeObjectRetain();
  v155._uint64_t countAndFlagsBits = v153;
  v155._object = v154;
  String.append(_:)(v155);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v157 = v170[0];
  uint64_t v156 = v170[1];
  v170[0] = 0;
  v170[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v170[0] = 0xD000000000000011;
  v170[1] = 0x80000001000B44C0;
  uint64_t v158 = v0 + v19[25];
  int v159 = *(void **)(v158 + 8);
  v171[0] = *(id *)v158;
  v171[1] = v159;
  swift_bridgeObjectRetain();
  v160._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v160);
  swift_bridgeObjectRelease();
  v161._uint64_t countAndFlagsBits = 32;
  v161._object = (void *)0xE100000000000000;
  String.append(_:)(v161);
  uint64_t v162 = v170[0];
  uint64_t v163 = (void *)v170[1];
  v170[0] = v157;
  v170[1] = v156;
  swift_bridgeObjectRetain();
  v164._uint64_t countAndFlagsBits = v162;
  v164._object = v163;
  String.append(_:)(v164);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v165._uint64_t countAndFlagsBits = 62;
  v165._object = (void *)0xE100000000000000;
  String.append(_:)(v165);
  swift_bridgeObjectRelease();
  return v170[0];
}

unint64_t sub_10003D0C8()
{
  unint64_t result = qword_1000EE3A0;
  if (!qword_1000EE3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE3A0);
  }
  return result;
}

uint64_t sub_10003D11C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100054CC4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[32 * v8 + 32];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    char *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10003D270(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000EE48(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_10003D2D4(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10008E9A0(0, v2, 0);
    BOOL v5 = *(void *)(a2 + 16) != 0;
    Swift::String v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_10008E9A0(v10 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage[4 * v9];
      v11[32] = 1;
      v6 += 2;
      *((void *)v11 + 5) = v8;
      *((void *)v11 + 6) = v7;
      v11[56] = v5;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10003D3D4(char a1)
{
  if (a1)
  {
    id v1 = [self mainScreen];
    [v1 scale];
    double v3 = v2;

    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self imageNamed:v4];

    if (v5
      && (id v6 = [v5 _applicationIconImageForFormat:2 precomposed:1 scale:v3],
          v5,
          v6))
    {
      id v36 = v6;
    }
    else
    {
      id v36 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  else
  {
    id v36 = 0;
  }
  uint64_t v7 = self;
  id v8 = [v7 mainScreen];
  [v8 scale];
  double v10 = v9;

  uint64_t v11 = self;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 _applicationIconImageForBundleIdentifier:v12 format:2 scale:v10];

  if (!v13) {
    id v13 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v14 = [v7 mainScreen:v36];
  [v14 scale];
  double v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v11 _applicationIconImageForBundleIdentifier:v17 format:2 scale:v16];

  if (!v18) {
    id v18 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v19 = [v7 mainScreen];
  [v19 scale];
  double v21 = v20;

  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v11 imageNamed:v22];

  if (!v23
    || (id v24 = [v23 _applicationIconImageForFormat:2 precomposed:1 scale:v21],
        v23,
        !v24))
  {
    id v24 = [objc_allocWithZone((Class)UIImage) init];
  }
  if (v37)
  {
    id v25 = v37;
    id v26 = v13;
    id v27 = v18;
    id v28 = v24;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    id v29 = v13;
    id v30 = v18;
    id v31 = v24;
  }
  id v32 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v33 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v34 = v24;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return _swiftEmptyArrayStorage;
}

id sub_10003D8C8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainScreen];
  [v1 scale];
  double v3 = v2;

  id v4 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithBundleIdentifier:v5];

  id v7 = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:32.0 scale:32.0 v3];
  [v7 setDrawBorder:1];
  id v8 = [v6 imageForDescriptor:v7];
  if (v8)
  {
    double v9 = v8;
    [v8 placeholder];
    id v10 = [v6 prepareImageForDescriptor:v7];

    if (v10)
    {
      id v11 = [v10 CGImage];
      if (v11)
      {
        id v12 = v11;
        id v13 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v11];

        id v10 = v6;
        id v6 = v7;
        id v7 = v12;
        goto LABEL_8;
      }
    }
  }
  else
  {
    id v10 = 0;
  }
  id v14 = [v0 mainScreen];
  [v14 scale];
  double v16 = v15;

  NSString v17 = self;
  NSString v18 = String._bridgeToObjectiveC()();
  id v13 = [v17 _applicationIconImageForBundleIdentifier:v18 format:2 scale:v16];

  if (!v13) {
    id v13 = [objc_allocWithZone((Class)UIImage) init];
  }
LABEL_8:

  return v13;
}

double sub_10003DB28(uint64_t a1)
{
  if (*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) == 3
    || (sub_10004D328() & 1) != 0
    || *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem)
    && *(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) == 1)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    char v3 = 3;
  }
  else
  {
    NSString v2 = String._bridgeToObjectiveC()();
    char v3 = 1;
  }
  id v4 = sub_100007334(v2);

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  sub_10000EE48(&qword_1000EE3B8);
  uint64_t v8 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v8 + 16) = xmmword_1000B0850;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 56) = v3;
  return result;
}

uint64_t sub_10003DC34()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

unint64_t sub_10003DC6C()
{
  unint64_t result = qword_1000EDB50;
  if (!qword_1000EDB50)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDB50);
  }
  return result;
}

uint64_t sub_10003DCC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000EE48(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003DD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdjustedImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003DD8C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10003DDC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003DE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003DE98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10003DEFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10003DF6C()
{
  unint64_t result = qword_1000EE408;
  if (!qword_1000EE408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE408);
  }
  return result;
}

uint64_t sub_10003DFC0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10003E004(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003E048()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

double sub_10003E088(char a1, int a2, char a3)
{
  if (a2 == 2)
  {
    BOOL v4 = 0;
LABEL_11:
    if (a3 == 6)
    {
      if (qword_1000ED730 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_1000133A0(v10, (uint64_t)qword_1000EDF80);
      id v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        id v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "createProgressViewModel b620 image adjusted", v13, 2u);
        swift_slowDealloc();
      }

      BOOL v14 = !v4;
      double result = 215.586667;
    }
    else
    {
      if (qword_1000ED730 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_1000133A0(v15, (uint64_t)qword_1000EDF80);
      double v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        NSString v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "createProgressViewModel b238 image adjusted", v18, 2u);
        swift_slowDealloc();
      }

      BOOL v14 = !v4;
      double result = 189.366667;
    }
    if (!v14) {
      double result = 227.24;
    }
    if ((a1 & 1) == 0) {
      return 227.546667;
    }
    return result;
  }
  if (a2 == 3 || a3 != 5)
  {
    BOOL v4 = a2 != 3;
    goto LABEL_11;
  }
  if (qword_1000ED730 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000133A0(v5, (uint64_t)qword_1000EDF80);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "createProgressViewModel solo mini image adjusted", v8, 2u);
    swift_slowDealloc();
  }

  return dbl_1000B08B0[(a1 & 1) == 0];
}

uint64_t sub_10003E35C()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_100007334(v0);

  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v2;
}

uint64_t sub_10003E540()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_100007334(v0);

  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v2;
}

uint64_t sub_10003E66C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (IsAppleInternalBuild())
  {
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = sub_100007334(v8);

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    sub_10000EE48(&qword_1000EE3B8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1000AF6D0;
    *(void *)(v13 + 32) = a1;
    *(void *)(v13 + 40) = a2;
    *(void *)(v13 + 48) = a3;
    *(unsigned char *)(v13 + 56) = a4;
    *(void *)(v13 + 64) = v10;
    *(void *)(v13 + 72) = v12;
    *(void *)(v13 + 80) = 1;
    *(unsigned char *)(v13 + 88) = 17;
  }
  else
  {
    sub_10000EE48(&qword_1000EE3B8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1000B0850;
    *(void *)(v13 + 32) = a1;
    *(void *)(v13 + 40) = a2;
    *(void *)(v13 + 48) = a3;
    *(unsigned char *)(v13 + 56) = a4;
  }
  swift_bridgeObjectRetain();
  return v13;
}

unint64_t sub_10003E78C()
{
  unint64_t result = qword_1000EE418;
  if (!qword_1000EE418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE418);
  }
  return result;
}

id sub_10003E7E0()
{
  id v0 = [self mainScreen];
  [v0 scale];
  double v2 = v1;

  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self imageNamed:v3];

  if (v4)
  {
    id v5 = [v4 _applicationIconImageForFormat:2 precomposed:1 scale:v2];

    if (v5) {
      return v5;
    }
  }
  id v7 = objc_allocWithZone((Class)UIImage);

  return [v7 init];
}

uint64_t sub_10003E904()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EE420);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EE420);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  NSString v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10003E9CC()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults);
  }
  else
  {
    id v4 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 initWithSuiteName:v5];

    if (!v6) {
      id v6 = [self standardUserDefaults];
    }
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_10003EAA0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for HomePodSetupAutomation()) init];
  qword_1000F3968 = (uint64_t)result;
  return result;
}

id HomePodSetupAutomation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void sub_10003EB60(uint64_t a1, char a2)
{
  id v3 = sub_10003E9CC();
  NSString v4 = String._bridgeToObjectiveC()();
  unsigned int v5 = [v3 BOOLForKey:v4];

  if (v5)
  {
    id v6 = sub_10003E9CC();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 objectForKey:v7];

    if (v8)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    sub_10003D270((uint64_t)&v19, (uint64_t)v17, &qword_1000EE410);
    if (v18)
    {
      sub_10000EE48(&qword_1000EE4D0);
      if (swift_dynamicCast())
      {
        unint64_t v9 = *(void *)&v16[0];
LABEL_10:
        *(void *)&long long v19 = sub_100078DA8(a2);
        *((void *)&v19 + 1) = v10;
        AnyHashable.init<A>(_:)();
        unint64_t v11 = sub_10000D500();
        *((void *)&v20 + 1) = sub_10000EE48(&qword_1000EE4D0);
        *(void *)&long long v19 = v11;
        sub_10000F464(&v19, v16);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1000568C4(v16, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_10000F474((uint64_t)v17);
        id v13 = sub_10003E9CC();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        NSString v15 = String._bridgeToObjectiveC()();
        [v13 setValue:isa forKey:v15];

        return;
      }
    }
    else
    {
      sub_10000F674((uint64_t)v17, &qword_1000EE410);
    }
    unint64_t v9 = sub_10000D968((uint64_t)&_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
}

void sub_10003EDD8(uint64_t a1, uint64_t a2)
{
  unint64_t v97 = sub_10000DF9C((uint64_t)_swiftEmptyArrayStorage);
  id v5 = sub_10003E9CC();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 objectForKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v99 = 0u;
    long long v100 = 0u;
  }
  sub_10003D270((uint64_t)&v99, (uint64_t)v101, &qword_1000EE410);
  if (v102)
  {
    if (swift_dynamicCast())
    {
      uint64_t v8 = *((void *)&v105[0] + 1);
      unint64_t v9 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode);
      *unint64_t v9 = *(void *)&v105[0];
      v9[1] = v8;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10000F674((uint64_t)v101, &qword_1000EE410);
  }
  id v10 = sub_10003E9CC();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 objectForKey:v11];

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v99 = 0u;
    long long v100 = 0u;
  }
  sub_10003D270((uint64_t)&v99, (uint64_t)v101, &qword_1000EE410);
  uint64_t v95 = a2;
  char v96 = v2;
  uint64_t v94 = a1;
  if (v102)
  {
    unint64_t v13 = sub_10000EE48(&qword_1000EE4D0);
    if (swift_dynamicCast())
    {
      BOOL v14 = *(NSObject **)&v105[0];
      uint64_t v15 = *(void *)&v105[0] + 64;
      uint64_t v16 = 1 << *(unsigned char *)(*(void *)&v105[0] + 32);
      uint64_t v17 = -1;
      if (v16 < 64) {
        uint64_t v17 = ~(-1 << v16);
      }
      unint64_t v18 = v17 & *(void *)(*(void *)&v105[0] + 64);
      Swift::String v90 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode);
      int64_t v19 = (unint64_t)(v16 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v20 = 0;
      unint64_t v91 = v13;
      int64_t v92 = v19;
      while (1)
      {
        while (1)
        {
          while (1)
          {
            if (v18)
            {
              unint64_t v21 = __clz(__rbit64(v18));
              v18 &= v18 - 1;
              unint64_t v22 = v21 | (v20 << 6);
            }
            else
            {
              int64_t v23 = v20 + 1;
              if (__OFADD__(v20, 1))
              {
                __break(1u);
                goto LABEL_111;
              }
              if (v23 >= v19) {
                goto LABEL_66;
              }
              unint64_t v24 = *(void *)(v15 + 8 * v23);
              ++v20;
              if (!v24)
              {
                int64_t v20 = v23 + 1;
                if (v23 + 1 >= v19) {
                  goto LABEL_66;
                }
                unint64_t v24 = *(void *)(v15 + 8 * v20);
                if (!v24)
                {
                  int64_t v20 = v23 + 2;
                  if (v23 + 2 >= v19) {
                    goto LABEL_66;
                  }
                  unint64_t v24 = *(void *)(v15 + 8 * v20);
                  if (!v24)
                  {
                    int64_t v20 = v23 + 3;
                    if (v23 + 3 >= v19) {
                      goto LABEL_66;
                    }
                    unint64_t v24 = *(void *)(v15 + 8 * v20);
                    if (!v24)
                    {
                      int64_t v20 = v23 + 4;
                      if (v23 + 4 >= v19) {
                        goto LABEL_66;
                      }
                      unint64_t v24 = *(void *)(v15 + 8 * v20);
                      if (!v24)
                      {
                        int64_t v25 = v23 + 5;
                        if (v25 >= v19)
                        {
LABEL_66:
                          swift_release();
                          swift_bridgeObjectRelease();
                          uint64_t v2 = v96;
                          *(Class *)((char *)&v96->isa
                                   + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults) = (Class)v97;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          goto LABEL_67;
                        }
                        unint64_t v24 = *(void *)(v15 + 8 * v25);
                        if (!v24)
                        {
                          while (1)
                          {
                            int64_t v20 = v25 + 1;
                            if (__OFADD__(v25, 1)) {
                              break;
                            }
                            if (v20 >= v19) {
                              goto LABEL_66;
                            }
                            unint64_t v24 = *(void *)(v15 + 8 * v20);
                            ++v25;
                            if (v24) {
                              goto LABEL_36;
                            }
                          }
                          __break(1u);
                          swift_unexpectedError();
                          __break(1u);
                          return;
                        }
                        int64_t v20 = v25;
                      }
                    }
                  }
                }
              }
LABEL_36:
              unint64_t v18 = (v24 - 1) & v24;
              unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
            }
            sub_100015310((uint64_t)v14[6].isa + 40 * v22, (uint64_t)v105);
            v103[0] = v105[0];
            v103[1] = v105[1];
            uint64_t v104 = v106;
            if (v14[2].isa)
            {
              uint64_t v2 = v14;
              unint64_t v26 = sub_10005513C((uint64_t)v103);
              if (v27)
              {
                sub_10000F578((uint64_t)v14[7].isa + 32 * v26, (uint64_t)v101);
                if (swift_dynamicCast()) {
                  break;
                }
              }
            }
            sub_10000F474((uint64_t)v103);
          }
          sub_100015310((uint64_t)v103, (uint64_t)v101);
          if (swift_dynamicCast()) {
            break;
          }
          swift_bridgeObjectRelease();
          sub_10000F474((uint64_t)v103);
        }
        long long v28 = v99;
        uint64_t v29 = swift_bridgeObjectRetain();
        sub_10000CF0C(v29, (uint64_t)v101);
        if (sub_1000106E8(v101[0]) == 0x6E776F6E6B6E75 && v30 == 0xE700000000000000) {
          break;
        }
        char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        sub_100016FA4((char *)v101, (uint64_t)&v99);
        if (v31)
        {
LABEL_46:
          sub_10003D270((uint64_t)&v99 + 8, (uint64_t)v98, &qword_1000ED970);
          uint64_t v32 = v98[3];
          sub_10000F674((uint64_t)v98, &qword_1000ED970);
          if (v32) {
            goto LABEL_52;
          }
          swift_bridgeObjectRelease();
          if (qword_1000ED738 != -1) {
            swift_once();
          }
          uint64_t v33 = type metadata accessor for Logger();
          sub_1000133A0(v33, (uint64_t)qword_1000EE420);
          swift_bridgeObjectRetain();
          uint64_t v2 = Logger.logObject.getter();
          os_log_type_t v34 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v2, v34))
          {
            uint64_t v89 = swift_slowAlloc();
            *(void *)&long long v99 = swift_slowAlloc();
            *(_DWORD *)uint64_t v89 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v35 = Dictionary.description.getter();
            unint64_t v37 = v36;
            swift_bridgeObjectRelease();
            *(void *)(v89 + 4) = sub_100048718(v35, v37, (uint64_t *)&v99);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v2, v34, "HomePodSetupAutomation:Found Automation, but could not convert to choice %s", (uint8_t *)v89, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          sub_1000136C8((uint64_t)v101);
          sub_10000F474((uint64_t)v103);
          unint64_t v13 = v91;
          int64_t v19 = v92;
        }
        else
        {
          sub_1000136C8((uint64_t)&v99);
LABEL_52:
          swift_bridgeObjectRelease();
          int64_t v19 = v92;
          unint64_t v38 = v90[1];
          uint64_t v39 = *v90 & 0xFFFFFFFFFFFFLL;
          if ((v38 & 0x2000000000000000) != 0) {
            uint64_t v39 = HIBYTE(v38) & 0xF;
          }
          if (v39
            && (v28 == __PAIR128__(0xEE0065646F637373, 0x615044454C746567)
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
          {
            swift_bridgeObjectRelease();
            if (qword_1000ED738 != -1) {
              swift_once();
            }
            uint64_t v40 = type metadata accessor for Logger();
            sub_1000133A0(v40, (uint64_t)qword_1000EE420);
            uint64_t v2 = Logger.logObject.getter();
            os_log_type_t v41 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v2, v41))
            {
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v42 = 0;
              _os_log_impl((void *)&_mh_execute_header, v2, v41, "HomePodSetupAutomation:Found Automation for getLEDPasscode, but rejecting because of forcedPasscode", v42, 2u);
              int64_t v19 = v92;
              swift_slowDealloc();
            }

            sub_1000136C8((uint64_t)v101);
            sub_10000F474((uint64_t)v103);
            unint64_t v13 = v91;
          }
          else
          {
            sub_100016FA4((char *)v101, (uint64_t)&v99);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v98[0] = v97;
            uint64_t v2 = v98;
            sub_100056A10(&v99, v28, *((uint64_t *)&v28 + 1), isUniquelyReferenced_nonNull_native);
            unint64_t v97 = v98[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000136C8((uint64_t)v101);
            sub_10000F474((uint64_t)v103);
            unint64_t v13 = v91;
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_100016FA4((char *)v101, (uint64_t)&v99);
      goto LABEL_46;
    }
  }
  else
  {
    sub_10000F674((uint64_t)v101, &qword_1000EE410);
  }
LABEL_67:
  Swift::String v44 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence);
  swift_beginAccess();
  void *v44 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v45 = sub_10003E9CC();
  NSString v46 = String._bridgeToObjectiveC()();
  id v47 = [v45 objectForKey:v46];

  if (v47)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v99 = 0u;
    long long v100 = 0u;
  }
  sub_10003D270((uint64_t)&v99, (uint64_t)v101, &qword_1000EE410);
  if (v102)
  {
    sub_10000EE48(&qword_1000EE4C0);
    if (swift_dynamicCast())
    {
      uint64_t v48 = *(void *)(*(void *)&v103[0] + 16);
      if (v48)
      {
        uint64_t v49 = (unint64_t *)(*(void *)&v103[0] + 40);
        Swift::String v93 = v44;
        do
        {
          uint64_t v50 = *(v49 - 1);
          unint64_t v51 = *v49;
          swift_bridgeObjectRetain_n();
          char v52 = sub_1000824EC();
          if (v52 == 63)
          {
            if (qword_1000ED738 != -1) {
              swift_once();
            }
            uint64_t v53 = type metadata accessor for Logger();
            sub_1000133A0(v53, (uint64_t)qword_1000EE420);
            swift_bridgeObjectRetain();
            Swift::String v54 = Logger.logObject.getter();
            os_log_type_t v55 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v54, v55))
            {
              uint64_t v56 = swift_slowAlloc();
              v101[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v56 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)(v56 + 4) = sub_100048718(v50, v51, v101);
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v54, v55, "HomePodSetupAutomation: Found Automation screen name %s, but could not convert to valid HomePodSetupStep", (uint8_t *)v56, 0xCu);
              swift_arrayDestroy();
              Swift::String v44 = v93;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
          }
          else
          {
            char v57 = v52;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            Swift::String v58 = (void *)*v44;
            char v59 = swift_isUniquelyReferenced_nonNull_native();
            void *v44 = v58;
            if ((v59 & 1) == 0)
            {
              Swift::String v58 = sub_100054E20(0, v58[2] + 1, 1, v58);
              void *v44 = v58;
            }
            unint64_t v61 = v58[2];
            unint64_t v60 = v58[3];
            if (v61 >= v60 >> 1)
            {
              Swift::String v58 = sub_100054E20((void *)(v60 > 1), v61 + 1, 1, v58);
              void *v44 = v58;
            }
            v58[2] = v61 + 1;
            *((unsigned char *)v58 + v61 + 32) = v57;
            swift_endAccess();
          }
          v49 += 2;
          --v48;
        }
        while (v48);
      }
      swift_bridgeObjectRelease();
      if (qword_1000ED738 != -1) {
        swift_once();
      }
      uint64_t v62 = type metadata accessor for Logger();
      sub_1000133A0(v62, (uint64_t)qword_1000EE420);
      uint64_t v63 = v96;
      uint64_t v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        v101[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v66 = 136315138;
        *(void *)&long long v99 = *v44;
        swift_bridgeObjectRetain();
        sub_10000EE48(&qword_1000EE4C8);
        uint64_t v67 = String.init<A>(reflecting:)();
        *(void *)&long long v99 = sub_100048718(v67, v68, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "HomePodSetupAutomation: Following forced screen were loaded from userDefaults: %s", v66, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10000F674((uint64_t)v101, &qword_1000EE410);
  }
  id v69 = objc_allocWithZone((Class)NSRegularExpression);
  BOOL v14 = sub_100053158(0x283D6E6565726373, 0xEC000000292A775CLL, 1);
  swift_bridgeObjectRelease();
  NSString v70 = String._bridgeToObjectiveC()();
  *(void *)&long long v99 = 15;
  v101[0] = v94;
  v101[1] = v95;
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE4A8);
  sub_100040E58();
  sub_100040EB4();
  uint64_t v71 = _NSRange.init<A, B>(_:in:)();
  id v73 = -[NSObject firstMatchInString:options:range:](v14, "firstMatchInString:options:range:", v70, 0, v71, v72);

  if (v73)
  {
    [v73 rangeAtIndex:1];
    Range<>.init(_:in:)();
    if ((v74 & 1) == 0)
    {
      String.subscript.getter();
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      char v75 = sub_1000824EC();
      if (v75 != 63)
      {
        char v76 = v75;
        swift_beginAccess();
        sub_100040F08(0, 0, v76);
        swift_endAccess();
      }
    }
  }
  uint64_t v2 = v96;
  id v77 = sub_10003E9CC();
  NSString v78 = String._bridgeToObjectiveC()();
  unsigned int v79 = [v77 BOOLForKey:v78];

  *((unsigned char *)&v96->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) = v79;
  if (v79) {
    uint64_t v80 = 0x64656C62616E65;
  }
  else {
    uint64_t v80 = 0x64656C6261736964;
  }
  if (v79) {
    unint64_t v13 = 0xE700000000000000;
  }
  else {
    unint64_t v13 = 0xE800000000000000;
  }
  if ((*(void **)((char *)&v96->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults))[2]
    || v79)
  {
    unint64_t v97 = v80;
    if (qword_1000ED738 != -1) {
LABEL_111:
    }
      swift_once();
    uint64_t v81 = type metadata accessor for Logger();
    sub_1000133A0(v81, (uint64_t)qword_1000EE420);
    Swift::String v82 = v2;
    swift_bridgeObjectRetain();
    Swift::String v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = swift_slowAlloc();
      v101[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v85 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v86 = Dictionary.description.getter();
      unint64_t v88 = v87;
      swift_bridgeObjectRelease();
      *(void *)&long long v99 = sub_100048718(v86, v88, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v85 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v99 = sub_100048718(v97, v13, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "HomePodSetupAutomation: Automation enabled with flow selection for these screens %s always select the defauls is %s", (uint8_t *)v85, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10003FFC4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v5 = sub_100078DA8(a1);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults);
  if (*(void *)(v8 + 16))
  {
    uint64_t v9 = v5;
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_100055184(v9, v7);
    if (v11)
    {
      sub_100016FA4((char *)(*(void *)(v8 + 56) + 48 * v10), a2);
    }
    else
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = xmmword_1000B0AA0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = xmmword_1000B0AA0;
  }
  swift_bridgeObjectRelease();
  sub_100040DF0(a2, (uint64_t)v29);
  uint64_t v12 = v30;
  sub_10000F674((uint64_t)v29, &qword_1000EE4A0);
  if (v12 != 1)
  {
    if (*(void *)(a2 + 32) == 1)
    {
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
    }
    else
    {
      sub_100016FA4((char *)a2, (uint64_t)v29);
      unint64_t v13 = sub_10000CD54();
      unint64_t v14 = v15;
      sub_1000136C8((uint64_t)v29);
    }
    if (qword_1000ED738 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000133A0(v16, (uint64_t)qword_1000EE420);
    swift_bridgeObjectRetain();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      int64_t v19 = (uint8_t *)swift_slowAlloc();
      *(void *)&v29[0] = swift_slowAlloc();
      *(_DWORD *)int64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)unint64_t v26 = sub_100048718(v13, v14, (uint64_t *)v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupAutomation: Automation selection %s being applied.", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  sub_100040DF0(a2, (uint64_t)v29);
  uint64_t v20 = v30;
  uint64_t result = sub_10000F674((uint64_t)v29, &qword_1000EE4A0);
  if (v20 == 1 && *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) == 1)
  {
    if (qword_1000ED738 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1000133A0(v22, (uint64_t)qword_1000EE420);
    int64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      int64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupAutomation: Automation always select default enabled selecting primary button.", v25, 2u);
      swift_slowDealloc();
    }

    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    memset(&v26[8], 0, 40);
    v26[0] = 1;
    sub_100013664((uint64_t)v27, (uint64_t)&v26[8], &qword_1000ED970);
    v29[0] = *(_OWORD *)v26;
    v29[1] = *(_OWORD *)&v26[16];
    long long v30 = *(_OWORD *)&v26[32];
    return sub_100013664((uint64_t)v29, a2, &qword_1000EE4A0);
  }
  return result;
}

uint64_t sub_1000403DC(char a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode;
  if (!*(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode)
    && !*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
  {
    return 0;
  }
  uint64_t v6 = (void *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  *uint64_t v6 = 0xD000000000000010;
  v6[1] = 0x80000001000B6880;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  void *v7 = 0xD000000000000013;
  v7[1] = 0x80000001000B68A0;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  *uint64_t v8 = 0xD000000000000019;
  v8[1] = 0x80000001000B68C0;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber;
  strcpy((char *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber), "FFMC80BDPM4R");
  *(unsigned char *)(v9 + 13) = 0;
  *(_WORD *)(v9 + 14) = -5120;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) = 0;
  *(unsigned char *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) = 1;
  uint64_t v10 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags);
  if ((v11 & 8) != 0) {
    char v12 = 32;
  }
  else {
    char v12 = a1;
  }
  if ((v11 & 0x10) != 0) {
    char v12 = 34;
  }
  if ((v11 & 0x20) != 0) {
    char v12 = 28;
  }
  if ((v11 & 0x40) != 0) {
    char v12 = 29;
  }
  if ((v11 & 0x100) != 0) {
    char v12 = 37;
  }
  if ((v11 & 0x200) != 0) {
    char v12 = 39;
  }
  if ((v11 & 0x800) != 0) {
    char v12 = 16;
  }
  if ((v11 & 0x1000) != 0) {
    char v12 = 17;
  }
  if ((v11 & 0x2000) != 0) {
    char v12 = 18;
  }
  if ((v11 & 0x8080) != 0) {
    char v12 = 41;
  }
  if ((v11 & 0x10000) != 0) {
    char v12 = 31;
  }
  if ((v11 & 0x20000) != 0) {
    char v12 = 9;
  }
  if ((v11 & 0x40000) != 0) {
    char v12 = 8;
  }
  if ((v11 & 0x2000000) != 0) {
    char v12 = 33;
  }
  if ((v11 & 0x4000000) != 0) {
    char v12 = 30;
  }
  if ((v11 & 0x8000000) != 0) {
    char v12 = 11;
  }
  if ((v11 & 0x20000000) != 0) {
    char v12 = 42;
  }
  if ((v11 & 0x200000000) != 0) {
    char v12 = 25;
  }
  if ((v11 & 0x400000000) != 0) {
    char v12 = 58;
  }
  if ((v11 & 0x800000000) != 0) {
    char v12 = 16;
  }
  if ((v11 & 0x4000) != 0) {
    char v12 = 21;
  }
  if ((v11 & 0x2000000000) != 0) {
    char v12 = 10;
  }
  if ((v11 & 0x4000000000) != 0) {
    char v12 = 23;
  }
  if ((v11 & 0x400) != 0) {
    char v12 = 15;
  }
  if ((v11 & 0x200000) != 0)
  {
    void *v7 = 0xD000000000000010;
    v7[1] = 0x80000001000B6880;
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v2 + v10);
    char v12 = 15;
  }
  if ((v11 & 0x10000000) != 0) {
    char v12 = 20;
  }
  if ((v11 & 0x80000) != 0) {
    char v12 = 14;
  }
  if ((v11 & 0x100000) != 0) {
    char v12 = 12;
  }
  if ((v11 & 0x1000000000) != 0) {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) = 5;
  }
  if ((v11 & 0x10000000000) != 0) {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) = 6;
  }
  if ((v11 & 0x8000000000) != 0) {
    unsigned __int8 v13 = 24;
  }
  else {
    unsigned __int8 v13 = v12;
  }
  unint64_t v14 = sub_100078DA8(v13);
  uint64_t v16 = v15;
  if (v14 == sub_100078DA8(a1) && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
LABEL_74:
    int v20 = *(unsigned __int8 *)(v2 + v5);
    switch(v20)
    {
      case 1:
        unsigned __int8 v13 = 40;
        break;
      case 14:
        unsigned __int8 v13 = 35;
        break;
      case 5:
        unsigned __int8 v13 = 36;
        break;
    }
    goto LABEL_80;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_74;
  }
LABEL_80:
  uint64_t v21 = v13;
  swift_retain();
  return v21;
}

void sub_100040780(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode;
  v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode] = 0;
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags;
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags] = 0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_10005513C((uint64_t)v22), (v7 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_10000F474((uint64_t)v22);
  if (!*((void *)&v24 + 1))
  {
    sub_10000F674((uint64_t)&v23, &qword_1000EE410);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    char v8 = 0;
    goto LABEL_11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      swift_bridgeObjectRelease();
      char v8 = 5;
      goto LABEL_11;
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v21)
    {
      char v8 = 14;
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  char v8 = 1;
LABEL_11:
  v2[v4] = v8;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v9 = sub_10005513C((uint64_t)v22), (v10 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_10000F474((uint64_t)v22);
  if (*((void *)&v24 + 1))
  {
    if (swift_dynamicCast())
    {
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_100007704(v11);

      *(void *)&v2[v5] = v12;
    }
    if (!v2[v4])
    {
LABEL_21:
      if (!*(void *)&v2[v5]) {
        return;
      }
    }
  }
  else
  {
    sub_10000F674((uint64_t)&v23, &qword_1000EE410);
    if (!v2[v4]) {
      goto LABEL_21;
    }
  }
  if (qword_1000ED738 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000133A0(v13, (uint64_t)qword_1000EE420);
  unint64_t v14 = v2;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = sub_10004D018(v2[v4]);
    *(void *)&long long v23 = sub_100048718(v18, v19, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v20 = *(void *)&v2[v5];

    *(void *)&long long v23 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Testing: testMode is %s  flags are %llu", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id HomePodSetupAutomation.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_10000DF9C((uint64_t)_swiftEmptyArrayStorage);
  v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault] = 0;
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults] = 0;
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState] = 0;
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags] = 0;
  uint64_t v3 = &v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode] = 0;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for HomePodSetupAutomation();
  return [super init];
}

uint64_t type metadata accessor for HomePodSetupAutomation()
{
  return self;
}

id HomePodSetupAutomation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupAutomation();
  return [super dealloc];
}

uint64_t sub_100040DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100040E58()
{
  unint64_t result = qword_1000EE4B0;
  if (!qword_1000EE4B0)
  {
    sub_1000151E0(&qword_1000EE4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE4B0);
  }
  return result;
}

unint64_t sub_100040EB4()
{
  unint64_t result = qword_1000EE4B8;
  if (!qword_1000EE4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EE4B8);
  }
  return result;
}

char *sub_100040F08(uint64_t a1, int64_t a2, char a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  objc_super v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t result = (char *)sub_100054E20(result, v13, 1, v5);
    objc_super v5 = result;
  }
  unint64_t v14 = v5 + 4;
  uint64_t v15 = (char *)v5 + a1 + 32;
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  size_t v17 = v16 - a2;
  if (__OFSUB__(v16, a2)) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t result = v15 + 1;
    uint64_t v18 = (char *)v14 + a2;
    if (v15 + 1 != (char *)v14 + a2 || result >= &v18[v17]) {
      unint64_t result = (char *)memmove(result, v18, v17);
    }
    uint64_t v19 = v5[2];
    BOOL v20 = __OFADD__(v19, v9);
    uint64_t v21 = v19 + v9;
    if (!v20)
    {
      v5[2] = v21;
LABEL_20:
      *uint64_t v15 = a3;
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100041068(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1000410D0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EE4D8);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EE4D8);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100041198(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_images] = _swiftEmptyArrayStorage;
  objc_super v5 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText];
  *objc_super v5 = 0;
  v5[1] = 0xE000000000000000;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_style] = 0;
  v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_loadedMovie] = 0;
  id v6 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupIconContentView());
  char v7 = v1;
  id v8 = [v6 initWithCardStyle:0];
  *(void *)&v7[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView] = v8;
  id v9 = v8;
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for HomePodSetupIconContentViewController();
  id v10 = v9;
  [super initWithContentView:v10];

  return v11;
}

void sub_100041344()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (void *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (char *)v29 - v10;
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupIconContentViewController();
  v33.receiver = v1;
  v33.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EE4D8);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      size_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)size_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupIconContent: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_100049644((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EE4D8);
    sub_10004970C((uint64_t)v11, (uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v32 = v30;
      *(_DWORD *)uint64_t v21 = 136315138;
      v29[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_100048718(v23, v22, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000496AC((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupIconContent: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000496AC((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    sub_100044D90((uint64_t)v11);
    (*(void (**)(char *))((swift_isaMask & *v1) + 0x150))(v11);
    if (v11[v5[39]] == 1)
    {
      if (*(_DWORD *)&v11[v5[47]] != 2) {
        sub_10004761C();
      }
    }
    else if (v11[v5[32]] == 1)
    {
      sub_1000418E8((uint64_t)v11);
    }
    else if ((v11[v5[18]] & 2) == 0 && *(void *)&v11[v5[19] + 8])
    {
      NSString v24 = String._bridgeToObjectiveC()();
      NSString v25 = String._bridgeToObjectiveC()();
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = [v1 dismissalConfirmationActionWithTitle:v24 message:v25 confirmButtonTitle:v26 cancelButtonTitle:v27];

      [v1 setDismissButtonAction:v28];
    }
    sub_100044558((uint64_t)v11);
    sub_1000496AC((uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
  }
}

void sub_1000418E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(v3 + 80));
  uint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + *(int *)(v3 + 40));
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      id v28 = v1;
      uint64_t v9 = v4[2];
      uint64_t v8 = v4[3];
      uint64_t v11 = v4[4];
      uint64_t v10 = v4[5];
      uint64_t v12 = v4[6];
      uint64_t v35 = *v4;
      uint64_t v36 = v4[7];
      uint64_t v14 = v4[8];
      uint64_t v13 = v4[9];
      swift_bridgeObjectRetain_n();
      uint64_t v27 = v13;
      uint64_t v29 = v5;
      uint64_t v30 = v9;
      uint64_t v31 = v8;
      uint64_t v32 = v11;
      uint64_t v33 = v10;
      uint64_t v34 = v12;
      sub_100049954(v35, v5);
      uint64_t v15 = (unsigned __int8 *)(v6 + 56);
      while (1)
      {
        uint64_t v17 = *((void *)v15 - 3);
        uint64_t v16 = *((void *)v15 - 2);
        uint64_t v18 = *((void *)v15 - 1);
        int v20 = *v15;
        v15 += 32;
        char v19 = v20;
        switch(v20)
        {
          case 1:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_8;
          default:
            char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v21)
            {
LABEL_8:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v22 = swift_allocObject();
              *(void *)(v22 + 16) = v35;
              *(void *)(v22 + 24) = v29;
              *(void *)(v22 + 32) = v30;
              *(void *)(v22 + 40) = v31;
              *(void *)(v22 + 48) = v32;
              *(void *)(v22 + 56) = v33;
              *(void *)(v22 + 64) = v34;
              *(void *)(v22 + 72) = v36;
              *(void *)(v22 + 80) = v14;
              *(void *)(v22 + 88) = v13;
              *(void *)(v22 + 96) = v28;
              *(void *)(v22 + 104) = v17;
              *(void *)(v22 + 112) = v16;
              *(void *)(v22 + 120) = v18;
              *(unsigned char *)(v22 + 128) = v19;
              id v23 = v28;
              NSString v24 = String._bridgeToObjectiveC()();
              aBlock[4] = sub_100049A2C;
              aBlock[5] = v22;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_100041068;
              aBlock[3] = &unk_1000DB8A8;
              NSString v25 = _Block_copy(aBlock);
              id v26 = [self actionWithTitle:v24 style:0 handler:v25 v14 v27];

              _Block_release(v25);
              swift_release();
              [v23 setDismissButtonAction:v26];

              return;
            }
            swift_bridgeObjectRelease();
            if (!--v7)
            {
              swift_bridgeObjectRelease_n();
              sub_10003DEFC(v35, v29);
              return;
            }
            break;
        }
      }
    }
  }
}

uint64_t sub_100042014(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for HomePodSetupViewModel(0) + 40));
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000932E0(v1, (uint64_t)sub_100049848, v2);

  return swift_release();
}

void sub_1000420A4(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EE4D8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    unint64_t v8 = sub_1000106E8(v3);
    *(void *)uint64_t v36 = sub_100048718(v8, v9, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupIconContent: User tapped on button: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (sub_1000106E8(v3) == 0x654674726F706572 && v10 == 0xEE006B6361626465)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v13 = (void *)Strong;
    sub_100042740();
    goto LABEL_11;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_9;
  }
  if (sub_1000106E8(v3) == 0xD000000000000010 && v14 == 0x80000001000B38C0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    sub_10000EE48((uint64_t *)&unk_1000EF400);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1000B0850;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 32) = 0xD000000000000010;
    *(void *)(v16 + 40) = 0x80000001000B6EE0;
    id v17 = objc_allocWithZone((Class)UIActivityViewController);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithActivityItems:isa applicationActivities:0];

    int v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "HomePodSetupIconContent: showing sharesheet", v22, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v23 = swift_unknownObjectWeakLoadStrong();
    if (!v23)
    {

      return;
    }
    uint64_t v13 = (void *)v23;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v19;
    *(void *)(v24 + 24) = a2;
    *(unsigned char *)(v24 + 32) = v3;
    *(void *)&long long v41 = sub_100049890;
    *((void *)&v41 + 1) = v24;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v40 = sub_100089B18;
    *((void *)&v40 + 1) = &unk_1000DB4C0;
    NSString v25 = _Block_copy(&aBlock);
    id v26 = v19;
    swift_retain();
    swift_release();
    [v13 presentViewController:v26 animated:0 completion:v25];

    _Block_release(v25);
    goto LABEL_11;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_17;
  }
  if (sub_1000106E8(v3) == 0xD000000000000010 && v27 == 0x80000001000B3870)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      if (sub_1000106E8(v3) == 0xD000000000000014 && v33 == 0x80000001000B3850)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0) {
          goto LABEL_27;
        }
      }
      swift_beginAccess();
      uint64_t v35 = swift_unknownObjectWeakLoadStrong();
      if (!v35) {
        return;
      }
      uint64_t v13 = (void *)v35;
      sub_100043394();
LABEL_11:

      return;
    }
  }
  if (([self isSiriForiCloudEnabled] & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v32 = swift_unknownObjectWeakLoadStrong();
    if (!v32) {
      return;
    }
    uint64_t v13 = (void *)v32;
    sub_100042EFC();
    goto LABEL_11;
  }
LABEL_27:
  swift_beginAccess();
  uint64_t v29 = swift_unknownObjectWeakLoadStrong();
  if (v29)
  {
    uint64_t v30 = (void *)v29;
    uint64_t v31 = swift_unknownObjectWeakLoadStrong();

    if (v31)
    {
      uint64_t v38 = 0;
      memset(v37, 0, sizeof(v37));
      memset(&v36[8], 0, 40);
      v36[0] = v3;
      sub_100013664((uint64_t)v37, (uint64_t)&v36[8], &qword_1000ED970);
      long long aBlock = *(_OWORD *)v36;
      long long v40 = *(_OWORD *)&v36[16];
      long long v41 = *(_OWORD *)&v36[32];
      sub_10007A7CC(&aBlock);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)&aBlock);
    }
  }
}

void sub_100042740()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FBKFeedbackForm.Question();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (void *)((char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = objc_allocWithZone((Class)type metadata accessor for FBKFeedbackForm());
  uint64_t v10 = (void *)FBKFeedbackForm.init(identifier:)();
  char v11 = *(void (**)(void *, void, uint64_t))(v6 + 104);
  v11(v8, enum case for FBKFeedbackForm.Question.title(_:), v5);
  dispatch thunk of FBKFeedbackForm.prefill(question:answer:)();
  uint64_t v12 = *(void (**)(void *, uint64_t))(v6 + 8);
  v12(v8, v5);
  *unint64_t v8 = 0x65725F657079743ALL;
  v8[1] = 0xE900000000000071;
  v11(v8, enum case for FBKFeedbackForm.Question.custom(_:), v5);
  dispatch thunk of FBKFeedbackForm.prefill(question:answer:)();
  v12(v8, v5);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  uint64_t v14 = type metadata accessor for HomePodSetupViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14))
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
  }
  else
  {
    uint64_t v15 = *(void *)&v4[*(int *)(v14 + 180) + 8];
    swift_bridgeObjectRetain();
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (v15)
    {
      sub_10000EE48(&qword_1000EE550);
      type metadata accessor for URL();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000B0850;
      URL.init(fileURLWithPath:)();
      swift_bridgeObjectRelease();
      dispatch thunk of FBKFeedbackForm.attachments.setter();
    }
  }
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000133A0(v16, (uint64_t)qword_1000EE4D8);
  id v17 = v10;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    int v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)int v20 = 136315138;
    v29[0] = v20 + 4;
    dispatch thunk of FBKFeedbackForm.attachments.getter();
    type metadata accessor for URL();
    os_log_type_t v21 = v1;
    uint64_t v22 = Array.description.getter();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = v22;
    uint64_t v1 = v21;
    v29[1] = sub_100048718(v25, v24, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Presenting Feedback Form with attachments %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v26 = objc_allocWithZone((Class)type metadata accessor for FBKFeedbackDraftViewController());
  id v27 = v17;
  char v28 = (void *)FBKFeedbackDraftViewController.init(feedbackForm:)();
  swift_unknownObjectRetain();
  dispatch thunk of FBKFeedbackDraftViewController.delegate.setter();
  [v1 presentViewController:v28 animated:1 completion:0];
}

void sub_100042C84(void *a1, uint64_t a2, char a3)
{
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EE4D8);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupIconContent: dismissing sharesheet", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(unsigned char *)(v10 + 24) = a3;
  v12[4] = sub_1000498D4;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_100089B18;
  v12[3] = &unk_1000DB510;
  char v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  [a1 dismissViewControllerAnimated:0 completion:v11];
  _Block_release(v11);
}

void sub_100042E2C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();

    if (v5)
    {
      uint64_t v8 = 0;
      memset(v7, 0, sizeof(v7));
      memset(&v6[8], 0, 40);
      v6[0] = a2;
      sub_100013664((uint64_t)v7, (uint64_t)&v6[8], &qword_1000ED970);
      v9[0] = *(_OWORD *)v6;
      v9[1] = *(_OWORD *)&v6[16];
      v9[2] = *(_OWORD *)&v6[32];
      sub_10007A7CC(v9);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v9);
    }
  }
}

void sub_100042EFC()
{
  uint64_t v1 = v0;
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EE4D8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupIconContent: presentRMViCloudEnable", v5, 2u);
    swift_slowDealloc();
  }

  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_100007334(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  id v16 = v1;
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1000498E0;
  uint64_t v33 = v15;
  char v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100041068;
  uint64_t v31 = &unk_1000DB560;
  uint64_t v18 = _Block_copy(&v28);
  swift_release();
  os_log_type_t v19 = self;
  id v20 = [v19 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v12 addAction:v20];
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v16;
  id v24 = v16;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1000498E8;
  uint64_t v33 = v23;
  char v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100041068;
  uint64_t v31 = &unk_1000DB5B0;
  id v26 = _Block_copy(&v28);
  swift_release();
  id v27 = [v19 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  [v12 addAction:v27];
  [v12 setPreferredAction:v20];
  [v24 presentViewController:v12 animated:1 completion:0];
}

void sub_100043394()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v9, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000EE4D8);
    NSString v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      NSString v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "HomePodSetupIconContent: presentCancelSUAcknowledgement skipped since viewmodel is nil", v13, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_100049644((uint64_t)v4, (uint64_t)v8, type metadata accessor for HomePodSetupViewModel);
    if (v8[*(int *)(v5 + 136)] == 1)
    {
      if (qword_1000ED748 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_1000133A0(v14, (uint64_t)qword_1000EE4D8);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        NSString v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupIconContent: addButtonActions cancel tapped when SUBS finished", v17, 2u);
        swift_slowDealloc();
      }

      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = sub_100007334(v18);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = sub_100007334(v20);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v24 = [self alertControllerWithTitle:v22 message:v23 preferredStyle:1];

      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = sub_100007334(v25);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v24;
      id v28 = v24;
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unint64_t v60 = sub_100049A98;
      uint64_t v61 = v27;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v57 = 1107296256;
      Swift::String v58 = sub_100041068;
      char v59 = &unk_1000DB6A0;
      uint64_t v30 = _Block_copy(&aBlock);
      swift_release();
      id v31 = [self actionWithTitle:v29 style:0 handler:v30];
      _Block_release(v30);

      [v28 addAction:v31];
      [v28 setPreferredAction:v31];
      [v1 presentViewController:v28 animated:1 completion:0];
    }
    else
    {
      if (qword_1000ED748 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      sub_1000133A0(v32, (uint64_t)qword_1000EE4D8);
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "HomePodSetupIconContent: addButtonActions cancel tapped, presenting confirmation alert", v35, 2u);
        swift_slowDealloc();
      }

      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = sub_100007334(v36);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v38 = String._bridgeToObjectiveC()();
      id v39 = sub_100007334(v38);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v42 = [self alertControllerWithTitle:v40 message:v41 preferredStyle:1];

      NSString v43 = String._bridgeToObjectiveC()();
      id v44 = sub_100007334(v43);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v1;
      id v55 = v1;
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unint64_t v60 = sub_1000498F0;
      uint64_t v61 = v45;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v57 = 1107296256;
      Swift::String v58 = sub_100041068;
      char v59 = &unk_1000DB600;
      id v47 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v48 = self;
      id v49 = [v48 actionWithTitle:v46 style:0 handler:v47];
      _Block_release(v47);

      [v42 addAction:v49];
      NSString v50 = String._bridgeToObjectiveC()();
      id v51 = sub_100007334(v50);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v42;
      id v31 = v42;
      NSString v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unint64_t v60 = sub_100049A98;
      uint64_t v61 = v52;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v57 = 1107296256;
      Swift::String v58 = sub_100041068;
      char v59 = &unk_1000DB650;
      Swift::String v54 = _Block_copy(&aBlock);
      swift_release();
      id v28 = [v48 actionWithTitle:v53 style:1 handler:v54];
      _Block_release(v54);

      [v31 addAction:v28];
      [v31 setPreferredAction:v49];
      [v55 presentViewController:v31 animated:1 completion:0];
    }
    sub_1000496AC((uint64_t)v8, type metadata accessor for HomePodSetupViewModel);
  }
}

uint64_t sub_100043DDC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v11, (uint64_t)v6, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10000F674((uint64_t)v6, &qword_1000EF130);
  }
  sub_100049644((uint64_t)v6, (uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
  if (v10[*(int *)(v7 + 164)] == 1)
  {
    sub_10000EE48((uint64_t *)&unk_1000EF400);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1000B0850;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 32) = 0xD000000000000010;
    *(void *)(v13 + 40) = 0x80000001000B6EE0;
    id v14 = objc_allocWithZone((Class)UIActivityViewController);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v14 initWithActivityItems:isa applicationActivities:0];

    id v17 = [v16 popoverPresentationController];
    if (v17)
    {
      NSString v18 = v17;
      id v19 = [v2 view];
      [v18 setSourceView:v19];
    }
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000133A0(v20, (uint64_t)qword_1000EE4D8);
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      NSString v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "HomePodSetupIconContent: showing sharesheet", v23, 2u);
      swift_slowDealloc();
    }

    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v16;
    aBlock[4] = sub_1000498F8;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100089B18;
    aBlock[3] = &unk_1000DB6F0;
    NSString v25 = _Block_copy(aBlock);
    id v26 = v16;
    swift_release();
    [v2 presentViewController:v26 animated:0 completion:v25];
    _Block_release(v25);
  }
  uint64_t v27 = (objc_class *)type metadata accessor for HomePodSetupIconContentViewController();
  v30.receiver = v2;
  v30.super_class = v27;
  [super viewWillDisappear:a1 & 1];
  return sub_1000496AC((uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
}

void sub_10004421C(void *a1)
{
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EE4D8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupIconContent: dismissing sharesheet", v5, 2u);
    swift_slowDealloc();
  }

  v7[4] = nullsub_1;
  v7[5] = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_100089B18;
  v7[3] = &unk_1000DB718;
  uint64_t v6 = _Block_copy(v7);
  [a1 dismissViewControllerAnimated:0 completion:v6];
  _Block_release(v6);
}

void sub_1000443D8(char a1)
{
  uint64_t v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for HomePodSetupIconContentViewController();
  [super viewDidDisappear:a1 & 1];
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EE4D8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupIconContent: viewDidDisappear", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView;
  [*(id *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView] stop];
  uint64_t v9 = *(void **)&v2[v8];
  *(void *)&v2[v8] = 0;
}

int *sub_100044558(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t result = (int *)type metadata accessor for HomePodSetupViewModel(0);
  if (!*(void *)(a1 + result[23] + 8)) {
    return result;
  }
  uint64_t v5 = (uint64_t *)(a1 + result[24]);
  uint64_t v6 = v5[1];
  if (v6)
  {
    uint64_t v7 = *v5;
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = v6;
    v8[4] = v1;
    uint64_t v9 = v1;
    objc_super v10 = (uint64_t (*)())sub_100049804;
  }
  else
  {
    uint64_t v11 = (uint64_t *)(a1 + result[25]);
    uint64_t v12 = v11[1];
    if (v12)
    {
      uint64_t v13 = *v11;
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = v13;
      v8[3] = v12;
      swift_bridgeObjectRetain();
      objc_super v10 = (uint64_t (*)())sub_1000497BC;
    }
    else
    {
      if (*(unsigned char *)(a1 + result[46]) != 1)
      {
        uint64_t v15 = nullsub_1;
        uint64_t v8 = 0;
        goto LABEL_9;
      }
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = v1;
      id v14 = v1;
      objc_super v10 = (uint64_t (*)())sub_10004977C;
    }
  }
  uint64_t v15 = v10;
LABEL_9:
  sub_10003DD8C(0, &qword_1000EE540);
  sub_10003DD8C(0, &qword_1000EE548);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v27.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v16.super.super.super.super.Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v27).super.super.super.super.isa;
  -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v16.super.super.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0, 0, 0, 0, v15, v8);
  id v17 = [(objc_class *)v16.super.super.super.super.isa titleLabel];
  if (v17)
  {
    NSString v18 = v17;
    id v19 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote];
    id v20 = [v19 fontDescriptorWithSymbolicTraits:2];

    sub_10000EE48(&qword_1000EE3D0);
    Optional.unwrap(_:file:line:)();

    id v21 = v26;
    [v21 pointSize];
    id v23 = [self fontWithDescriptor:v21 size:v22];

    [v18 setFont:v23];
    [v18 setAdjustsFontForContentSizeCategory:1];
    [v18 setNumberOfLines:0];
  }
  id v24 = *(id *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
  NSString v25 = v16.super.super.super.super.isa;
  sub_100049EF0(v16.super.super.super.super.isa);

  return (int *)swift_release();
}

void sub_1000448E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self presenterForPrivacySplashWithIdentifier:v5];

  if (v6)
  {
    [v6 setPresentingViewController:a4];
    [v6 present];
  }
}

id sub_1000449C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_10000EE48(&qword_1000EDF98);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  objc_super v10 = (char *)&v24 - v9;
  URL.init(string:)();
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v12 = result;
    sub_10000FD94((uint64_t)v10, (uint64_t)v8, &qword_1000EDF98);
    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = *(void *)(v13 - 8);
    UIButton v16 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) != 1)
    {
      URL._bridgeToObjectiveC()(v15);
      UIButton v16 = v17;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    }
    sub_10000DBF8((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v19 = [v12 openURL:v16 withOptions:isa];

    if ((v19 & 1) == 0)
    {
      if (qword_1000ED748 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_1000133A0(v20, (uint64_t)qword_1000EE4D8);
      swift_bridgeObjectRetain_n();
      id v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        id v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)id v23 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_100048718(a2, a3, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "HomePodSetupIconContent: unable to open URL %s", v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    return (id)sub_10000F674((uint64_t)v10, &qword_1000EDF98);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100044D18(uint64_t a1, void *a2)
{
  type metadata accessor for HomePodPrivacyConsentViewController();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [a2 presentViewController:v3 animated:1 completion:0];
}

void sub_100044D90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for AdjustedImage(0);
  uint64_t v7 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v57 = (void **)((char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000EE48(&qword_1000EE038);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AdjustedMovie(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v16 = String._bridgeToObjectiveC()();
  [v2 setTitle:v16];

  NSString v17 = String._bridgeToObjectiveC()();
  [v2 setSubtitle:v17];

  NSString v18 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  unsigned __int8 v19 = (uint64_t *)(a1 + v18[7]);
  uint64_t v20 = *v19;
  unint64_t v21 = v19[1];
  uint64_t v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v22 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (v22) {
    goto LABEL_7;
  }
  id v23 = (uint64_t *)(a1 + v18[8]);
  uint64_t v20 = *v23;
  unint64_t v21 = v23[1];
  uint64_t v24 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v24 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (v24) {
LABEL_7:
  }
    sub_100047074(v20, v21);
  sub_10000FD94(a1 + v18[6], (uint64_t)v11, &qword_1000EE038);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_100049644((uint64_t)v11, (uint64_t)v15, type metadata accessor for AdjustedMovie);
    if ((v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_loadedMovie] & 1) == 0)
    {
      v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_loadedMovie] = 1;
      sub_100045630((uint64_t)v15);
      sub_100045BBC((uint64_t)v15);
    }
    id v31 = type metadata accessor for AdjustedMovie;
    uint64_t v32 = (uint64_t)v15;
    goto LABEL_19;
  }
  sub_10000F674((uint64_t)v11, &qword_1000EE038);
  uint64_t v25 = v18[11];
  unint64_t v26 = *(void *)(a1 + v25);
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
  if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    sub_10000FD94(a1 + v18[27], (uint64_t)v6, &qword_1000EE040);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v58) == 1)
    {
      sub_10000F674((uint64_t)v6, &qword_1000EE040);
      goto LABEL_20;
    }
    NSString v46 = v57;
    sub_100049644((uint64_t)v6, (uint64_t)v57, type metadata accessor for AdjustedImage);
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_1000133A0(v47, (uint64_t)qword_1000EE4D8);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      NSString v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "HomePodSetupIconContent: iconImages empty, prodImage used", v50, 2u);
      swift_slowDealloc();
    }

    id v51 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v46];
    sub_100083920((uint64_t)v46 + *(int *)(v58 + 20));
    [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v52 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
    sub_10000EE48(&qword_1000EF140);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1000B0690;
    *(void *)(v53 + 32) = v51;
    id v60 = (id)v53;
    specialized Array._endMutation()();
    unint64_t v54 = *(void *)&v52[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
    *(void *)&v52[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = v60;
    id v55 = v52;
    id v56 = v51;
    sub_100049B60(v54);

    swift_bridgeObjectRelease();
    id v31 = type metadata accessor for AdjustedImage;
    uint64_t v32 = (uint64_t)v46;
LABEL_19:
    sub_1000496AC(v32, v31);
    goto LABEL_20;
  }
LABEL_11:
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_1000133A0(v27, (uint64_t)qword_1000EE4D8);
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    objc_super v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "HomePodSetupIconContent: iconImages used", v30, 2u);
    swift_slowDealloc();
  }

  sub_100046D0C(*(void *)(a1 + v25));
LABEL_20:
  uint64_t v33 = *(void **)(a1 + v18[22]);
  if (v33)
  {
    id v34 = v33;
    if ((uint64_t)[v34 length] >= 1)
    {
      id v35 = [objc_allocWithZone((Class)UILabel) init];
      id v36 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline];
      id v37 = [v36 fontDescriptorWithSymbolicTraits:2];

      id v59 = v37;
      sub_10000EE48(&qword_1000EE3D0);
      Optional.unwrap(_:file:line:)();

      id v38 = v60;
      [v38 pointSize];
      id v40 = [self fontWithDescriptor:v38 size:v39];

      [v35 setFont:v40];
      id v41 = [self labelColor];
      [v35 setTextColor:v41];

      [v35 setTextAlignment:1];
      [v35 setNumberOfLines:0];
      [v35 setAttributedText:v34];
      [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v42 = *(id *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
      id v43 = v35;
      sub_100049D5C(v35);

      id v34 = v42;
    }
  }
  [v2 setDismissalType:*(void *)(a1 + v18[18])];
  if (*(unsigned char *)(a1 + v18[38]) == 1)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    [v2 showActivityIndicatorWithStatus:v44];
  }
}

void sub_100045630(uint64_t a1)
{
  uint64_t v2 = v1;
  id v3 = [objc_allocWithZone((Class)UILayoutGuide) init];
  id v4 = [v1 contentView];
  [v4 addLayoutGuide:v3];

  id v5 = [objc_allocWithZone((Class)SFMediaPlayerView) init];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [v1 view];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 addSubview:v5];

    id v8 = [v1 contentView];
    id v46 = [v8 mainContentGuide];

    id v44 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1000B0AD0;
    id v10 = [v3 topAnchor];
    id v11 = [v46 topAnchor];
    id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];

    *(void *)(v9 + 32) = v12;
    id v13 = [v3 bottomAnchor];
    id v14 = [v46 bottomAnchor];
    id v15 = [v13 constraintLessThanOrEqualToAnchor:v14];

    *(void *)(v9 + 40) = v15;
    id v16 = [v3 centerYAnchor];
    id v17 = [v46 centerYAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v9 + 48) = v18;
    id v19 = [v3 leadingAnchor];
    id v20 = [v46 leadingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v9 + 56) = v21;
    id v22 = [v3 trailingAnchor];
    id v23 = [v46 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v9 + 64) = v24;
    id v25 = [v3 heightAnchor];
    unint64_t v26 = (int *)type metadata accessor for AdjustedMovie(0);
    id v27 = [v25 constraintEqualToConstant:*(double *)(a1 + v26[8])];

    *(void *)(v9 + 72) = v27;
    id v28 = [v5 centerYAnchor];
    id v29 = [v3 centerYAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    *(void *)(v9 + 80) = v30;
    id v31 = [v5 centerXAnchor];
    id v32 = [v3 centerXAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32];

    *(void *)(v9 + 88) = v33;
    id v34 = [v5 heightAnchor];
    id v35 = [v34 constraintEqualToConstant:*(double *)(a1 + v26[7])];

    *(void *)(v9 + 96) = v35;
    id v36 = [v5 widthAnchor];
    id v37 = [v36 constraintEqualToConstant:*(double *)(a1 + v26[6])];

    *(void *)(v9 + 104) = v37;
    specialized Array._endMutation()();
    sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v44 activateConstraints:isa];

    uint64_t v39 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView;
    id v40 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView];
    *(void *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView] = v5;
    id v41 = v5;

    id v42 = *(void **)&v2[v39];
    if (v42)
    {
      id v43 = v42;
      [v43 setUserInteractionEnabled:0];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100045BBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AdjustedMovie(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v45 - v8);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView];
  if (v14)
  {
    uint64_t v50 = v4;
    id v15 = v14;
    URL.init(fileURLWithPath:isDirectory:)();
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000133A0(v16, (uint64_t)qword_1000EE4D8);
    uint64_t v51 = a1;
    sub_10004970C(a1, (uint64_t)v9, type metadata accessor for AdjustedMovie);
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v48 = v2;
      id v20 = (uint8_t *)v19;
      aBlock[0] = swift_slowAlloc();
      id v46 = v15;
      uint64_t v47 = v13;
      *(_DWORD *)id v20 = 136315138;
      uint64_t v49 = v11;
      uint64_t v21 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_100048718(v21, v22, aBlock);
      uint64_t v11 = v49;
      id v13 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v15 = v46;
      swift_bridgeObjectRelease();
      sub_1000496AC((uint64_t)v9, type metadata accessor for AdjustedMovie);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupIconContent: playMovie:movieName %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v48;
      swift_slowDealloc();
    }
    else
    {
      sub_1000496AC((uint64_t)v9, type metadata accessor for AdjustedMovie);
    }

    [v15 setPausesAfterEachItem:1];
    id v29 = objc_allocWithZone((Class)SFMediaPlayerItem);
    URL._bridgeToObjectiveC()(v30);
    id v32 = v31;
    id v33 = [v29 initWithURL:v31];

    [v15 addMovieItem:v33];
    [v15 play];
    [v15 setHidden:0];
    id v34 = [self currentTraitCollection];
    id v35 = [v34 userInterfaceStyle];

    if (v35 == (id)2) {
      uint64_t v36 = 1;
    }
    else {
      uint64_t v36 = 2;
    }
    URL._bridgeToObjectiveC()((NSURL *)*(int *)(v50 + 20));
    id v38 = v37;
    [v15 updateViewForAssetType:v36 adjustmentsURL:v37];

    id v39 = [v2 contentView];
    id v40 = [v39 titleView];

    if (v40)
    {
      [v40 setAlpha:0.0];
    }
    sub_100070744(0.0);
    id v41 = self;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v2;
    aBlock[4] = (uint64_t)sub_100049774;
    aBlock[5] = v42;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100089B18;
    aBlock[3] = (uint64_t)&unk_1000DB3D0;
    id v43 = _Block_copy(aBlock);
    id v44 = v2;
    swift_release();
    [v41 animateWithDuration:65538 delay:v43 options:0 animations:1.5 completion:0.7];
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_1000133A0(v23, (uint64_t)qword_1000EE4D8);
    sub_10004970C(a1, (uint64_t)v7, type metadata accessor for AdjustedMovie);
    id v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v26 = 136315138;
      uint64_t v27 = *v7;
      unint64_t v28 = v7[1];
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_100048718(v27, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000496AC((uint64_t)v7, type metadata accessor for AdjustedMovie);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "HomePodSetupIconContent: playMovie:movieName %s but movieView is nil", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000496AC((uint64_t)v7, type metadata accessor for AdjustedMovie);
    }
  }
}

void sub_1000462D8(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v11, (uint64_t)v6, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_100049644((uint64_t)v6, (uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
    sub_1000492D0(*(_DWORD *)&v10[*(int *)(v7 + 140)]);
    uint64_t v16 = String.init(cString:)();
    unint64_t v18 = v17;
    if (qword_1000ED748 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1000133A0(v19, (uint64_t)qword_1000EE4D8);
    swift_bridgeObjectRetain();
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      id v40 = v10;
      aBlock[0] = v23;
      *(_DWORD *)unint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100048718(v16, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "HomePodSetupIconContent: AirDrop status %s", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v10 = v40;
      swift_slowDealloc();
      swift_slowDealloc();

      if (a1 == 2) {
        goto LABEL_14;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (a1 == 2) {
        goto LABEL_14;
      }
    }
    if (a1 != 1)
    {
LABEL_16:
      sub_1000496AC((uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
      return;
    }
LABEL_14:
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = sub_100007334(v24);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = sub_100007334(v26);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [self alertControllerWithTitle:v28 message:v29 preferredStyle:1];

    if (v30)
    {
      id v31 = v30;
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = sub_100007334(v32);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v31;
      id v35 = v31;
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = (uint64_t)sub_10001364C;
      aBlock[5] = v34;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100041068;
      aBlock[3] = (uint64_t)&unk_1000DB380;
      id v37 = _Block_copy(aBlock);
      swift_release();
      id v38 = [self actionWithTitle:v36 style:1 handler:v37];
      _Block_release(v37);

      [v35 addAction:v38];
      [v2 presentViewController:v35 animated:1 completion:0];
    }
    goto LABEL_16;
  }
  sub_10000F674((uint64_t)v6, &qword_1000EF130);
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000133A0(v12, (uint64_t)qword_1000EE4D8);
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HomePodSetupIconContent: No viewmodel, not showing alert", v15, 2u);
    swift_slowDealloc();
  }
}

void sub_1000469C8()
{
  uint64_t v1 = v0;
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EE4D8);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupIconContent: presentCancelSUSkipped called", v5, 2u);
    swift_slowDealloc();
  }

  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_100007334(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = sub_100007334(v8);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  id v16 = v12;
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v20[4] = sub_100049A98;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_100041068;
  v20[3] = &unk_1000DB330;
  unint64_t v18 = _Block_copy(v20);
  swift_release();
  id v19 = [self actionWithTitle:v17 style:1 handler:v18];
  _Block_release(v18);

  [v16 addAction:v19];
  [v1 presentViewController:v16 animated:1 completion:0];
}

id sub_100046D0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_images;
  unint64_t v8 = swift_bridgeObjectRetain();
  unsigned __int8 v9 = sub_1000934AC(v8, a1);
  id result = (id)swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    *(void *)&v2[v7] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id result = [v2 isViewLoaded];
    if (result)
    {
      unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
      unint64_t v11 = *(void *)&v2[v7];
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain_n();
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v12 = (uint64_t)result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id result = (id)swift_bridgeObjectRetain_n();
        if (v12)
        {
LABEL_5:
          if (v12 < 1)
          {
            __break(1u);
            return result;
          }
          unint64_t v26 = v11 & 0xC000000000000001;
          id v27 = &v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
          uint64_t v28 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_style;
          swift_beginAccess();
          uint64_t v13 = 0;
          do
          {
            if (v26) {
              id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v14 = *(id *)(v11 + 8 * v13 + 32);
            }
            uint64_t v15 = v14;
            id v16 = [objc_allocWithZone((Class)PRXImageView) initWithStyle:*(void *)&v2[v28]];
            [v16 setImage:v15];
            [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
            sub_10000FD94((uint64_t)v27, (uint64_t)v6, &qword_1000EF130);
            uint64_t v17 = type metadata accessor for HomePodSetupViewModel(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1, v17))
            {
              sub_10000F674((uint64_t)v6, &qword_1000EF130);
            }
            else
            {
              unint64_t v18 = &v6[*(int *)(v17 + 124)];
              uint64_t v19 = *(void *)v18;
              char v20 = v18[8];
              sub_10000F674((uint64_t)v6, &qword_1000EF130);
              if ((v20 & 1) == 0) {
                [v16 setContentMode:v19];
              }
            }
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            ++v13;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          while (v12 != v13);
          swift_bridgeObjectRelease_n();
          os_log_type_t v21 = (void *)v29;
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease_n();
      os_log_type_t v21 = _swiftEmptyArrayStorage;
LABEL_20:
      unint64_t v22 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
      unint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      *(void *)&v22[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = v21;
      NSString v24 = v22;
      swift_bridgeObjectRetain();
      sub_100049B60(v23);
      swift_bridgeObjectRelease();

      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_100047074(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText);
  BOOL v9 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText) == a1
    && *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText + 8) == a2;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    *unint64_t v8 = a1;
    v8[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v10 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:1];
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 setText:v11];

    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v12 = v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
    swift_beginAccess();
    sub_10000FD94(v12, (uint64_t)v7, &qword_1000EF130);
    uint64_t v13 = type metadata accessor for HomePodSetupViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v7, 1, v13))
    {
      sub_10000F674((uint64_t)v7, &qword_1000EF130);
    }
    else
    {
      id v14 = &v7[*(int *)(v13 + 32)];
      uint64_t v16 = *(void *)v14;
      unint64_t v15 = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      sub_10000F674((uint64_t)v7, &qword_1000EF130);
      swift_bridgeObjectRelease();
      uint64_t v17 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0) {
        uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (v17)
      {
        id v18 = [objc_allocWithZone((Class)PRXTextStyleDefinition) initWithStyle:3];
        id v19 = v10;
        id v20 = [v18 textColor];
        [v19 setTextColor:v20];

        id v21 = v19;
        id v22 = [v18 font];
        [v21 setFont:v22];

        id v23 = v21;
        [v23 setTextAlignment:[v18 textAlignment]];

        id v24 = v23;
        [v24 setAccessibilityTraits:[v18 accessibilityTraits]];

        id v25 = v24;
        [v25 setNumberOfLines:[v18 numberOfLines]];
      }
    }
    unint64_t v26 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView);
    id v27 = v10;
    id v28 = v26;
    sub_100049E1C(v10);
  }
}

id sub_1000473C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupIconContentViewController();
  return [super dealloc];
}

uint64_t sub_100047494()
{
  return type metadata accessor for HomePodSetupIconContentViewController();
}

uint64_t type metadata accessor for HomePodSetupIconContentViewController()
{
  uint64_t result = qword_1000EE528;
  if (!qword_1000EE528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000474E8()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1000475C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_100047614(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10004761C()
{
  uint64_t v1 = self;
  BOOL v2 = [v1 sysDropBuildMode] == 2
    || [v1 sysDropBuildMode] == 3;
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  id v4 = v0;
  NSString v5 = String._bridgeToObjectiveC()();
  v8[4] = sub_100049938;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100041068;
  v8[3] = &unk_1000DB768;
  uint64_t v6 = _Block_copy(v8);
  id v7 = [self actionWithTitle:v5 style:0 handler:v6];

  _Block_release(v6);
  swift_release();
  [v4 setDismissButtonAction:v7];
}

void sub_100047780(uint64_t a1, char a2, void *a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = sub_100007334(v5);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:1];

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  id v14 = a3;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = sub_100049944;
  uint64_t v39 = v13;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  NSString v36 = sub_100041068;
  id v37 = &unk_1000DB7B8;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v17 = self;
  id v18 = [v17 actionWithTitle:v15 style:0 handler:v16];
  _Block_release(v16);

  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_100007334(v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v14;
  id v22 = v14;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = sub_10004994C;
  uint64_t v39 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  NSString v36 = sub_100041068;
  id v37 = &unk_1000DB808;
  id v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = [v17 actionWithTitle:v23 style:0 handler:v24];
  _Block_release(v24);

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = sub_100007334(v26);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v33;
  id v29 = v33;
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = sub_100049A98;
  uint64_t v39 = v28;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  NSString v36 = sub_100041068;
  id v37 = &unk_1000DB858;
  id v31 = _Block_copy(&aBlock);
  swift_release();
  id v32 = [v17 actionWithTitle:v30 style:1 handler:v31];
  _Block_release(v31);

  [v29 addAction:v18];
  if ((a2 & 1) == 0) {
    [v29 addAction:v25];
  }
  [v29 addAction:v32, v33];
  [v29 setPreferredAction:v18];
  [v22 presentViewController:v29 animated:1 completion:0];
}

uint64_t sub_100047CB4()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 31;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

uint64_t sub_100047D50()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 32;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

void sub_100047DEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:1];

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100007334(v15);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  *(void *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  *(unsigned char *)(v17 + 48) = a7;
  id v18 = a3;
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_100049A80;
  uint64_t v35 = v17;
  NSString v30 = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_100041068;
  id v33 = &unk_1000DB8F8;
  id v20 = _Block_copy(&v30);
  swift_release();
  uint64_t v21 = self;
  id v22 = [v21 actionWithTitle:v19 style:0 handler:v20];
  _Block_release(v20);

  [v14 addAction:v22];
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = sub_100007334(v23);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v18;
  id v26 = v18;
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_100049A90;
  uint64_t v35 = v25;
  NSString v30 = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_100041068;
  id v33 = &unk_1000DB948;
  uint64_t v28 = _Block_copy(&v30);
  swift_release();
  id v29 = [v21 actionWithTitle:v27 style:1 handler:v28];
  _Block_release(v28);

  [v14 addAction:v29];
  [v14 setPreferredAction:v22];
  [v26 presentViewController:v14 animated:1 completion:0];
}

uint64_t sub_100048188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    memset(&v8[8], 0, 40);
    v8[0] = a6;
    sub_100013664((uint64_t)v9, (uint64_t)&v8[8], &qword_1000ED970);
    v11[0] = *(_OWORD *)v8;
    v11[1] = *(_OWORD *)&v8[16];
    v11[2] = *(_OWORD *)&v8[32];
    sub_10007A7CC(v11);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v11);
  }
  return result;
}

void sub_100048224(int a1, id a2)
{
  id v2 = [a2 presentingViewController];
  if (v2)
  {
    id v3 = v2;
    [v2 dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_100048294()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 21;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

uint64_t sub_100048330()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 23;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1000483CC()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 2;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

void sub_100048468(void *a1)
{
  id v1 = [a1 contentView];
  id v2 = [v1 titleView];

  if (v2)
  {
    [v2 setAlpha:1.0];
  }
  sub_100070744(1.0);
}

uint64_t sub_100048678(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000486A0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100048718(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_100048718(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000487EC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000F578((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000F578((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000E470((uint64_t)v12);
  return v7;
}

uint64_t sub_1000487EC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000489A8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000489A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100048A40(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100048C9C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100048C9C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100048A40(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100048BB8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100048BB8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000EE48(&qword_1000EE538);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  _OWORD v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100048C20(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_100048C9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48(&qword_1000EE538);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char **sub_100048DEC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_100048DFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000133A0(v11, (uint64_t)qword_1000EE4D8);
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "HomePodSetupIconContent: presenter:didUpdate viewModel", v14, 2u);
    swift_slowDealloc();
  }

  sub_10004970C(a1, (uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  uint64_t v15 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v10, v15, &qword_1000EF130);
  swift_endAccess();
  sub_10004970C(a1, (uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v18 = 67109120;
    uint64_t v19 = a1;
    id v20 = v2;
    int v21 = *(_DWORD *)&v7[*(int *)(v4 + 140)];
    sub_1000496AC((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
    _OWORD v28[2] = v21;
    uint64_t v2 = v20;
    a1 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "HomePodSetupIconContent: viewModel.airDropStatus %u", v18, 8u);
    swift_slowDealloc();
  }
  else
  {
    sub_1000496AC((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
  }

  sub_1000462D8(*(_DWORD *)(a1 + *(int *)(v4 + 140)));
  if (*(unsigned char *)(a1 + *(int *)(v4 + 132)) == 1)
  {
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "HomePodSetupIconContent: presentCancelSUSkipped", v24, 2u);
      swift_slowDealloc();
    }

    sub_1000469C8();
  }
  else if ([v2 isViewLoaded])
  {
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      NSString v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "HomePodSetupIconContent: configureUI", v27, 2u);
      swift_slowDealloc();
    }

    sub_100044D90(a1);
  }
}

uint64_t sub_100049280()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000492B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000492C8()
{
  return swift_release();
}

const char *sub_1000492D0(unsigned int a1)
{
  if (a1 > 5) {
    return "?";
  }
  else {
    return off_1000DB970[a1];
  }
}

void sub_1000492F8()
{
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EE4D8);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315138;
    sub_100048718(0xD000000000000038, 0x80000001000B6DB0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "%s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10004949C(uint64_t a1, unint64_t a2)
{
  if (qword_1000ED748 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EE4D8);
  oslog = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_100048718(a1, a2, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100049644(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000496AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10004970C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100049774()
{
  sub_100048468(*(void **)(v0 + 16));
}

void sub_10004977C(uint64_t a1)
{
  sub_100044D18(a1, *(void **)(v1 + 16));
}

uint64_t sub_100049784()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000497BC(uint64_t a1)
{
  return sub_1000449C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000497C4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100049804(uint64_t a1)
{
  sub_1000448E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100049810()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100049848(char *a1)
{
  sub_1000420A4(a1, v1);
}

uint64_t sub_100049850()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_100049890()
{
  sub_100042C84(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_10004989C()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1000498D4()
{
  sub_100042E2C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000498E0()
{
  return sub_100048330();
}

uint64_t sub_1000498E8()
{
  return sub_1000483CC();
}

uint64_t sub_1000498F0()
{
  return sub_100048294();
}

void sub_1000498F8()
{
  sub_10004421C(*(void **)(v0 + 16));
}

uint64_t sub_100049900()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100049938(uint64_t a1)
{
  sub_100047780(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100049944()
{
  return sub_100047CB4();
}

uint64_t sub_10004994C()
{
  return sub_100047D50();
}

uint64_t sub_100049954(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000499C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 129, 7);
}

void sub_100049A2C(uint64_t a1)
{
  sub_100047DEC(a1, v1 + 16, *(void **)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(unsigned char *)(v1 + 128));
}

uint64_t sub_100049A40()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100049A80(uint64_t a1)
{
  return sub_100048188(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

void sub_100049A90(int a1)
{
  sub_100048224(a1, *(id *)(v1 + 16));
}

id sub_100049B60(unint64_t a1)
{
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v3 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain_n();
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          goto LABEL_27;
        }
        for (uint64_t i = 0; i != v3; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v6 = *(id *)(a1 + 8 * i + 32);
          }
          int64_t v7 = v6;
          [v6 removeFromSuperview];
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints] = 0;
  id result = (id)swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
  if (!v8) {
    return result;
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = (uint64_t)result;
    if (result)
    {
LABEL_15:
      if (v9 >= 1)
      {
        uint64_t v10 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v11 = *(id *)(v8 + 8 * v10 + 32);
          }
          unint64_t v12 = v11;
          ++v10;
          [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v1 addSubview:v12];
        }
        while (v9 != v10);
        goto LABEL_23;
      }
LABEL_27:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (v9) {
      goto LABEL_15;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease_n();

  return [v1 setNeedsUpdateConstraints];
}

void sub_100049D5C(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel];
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel] = a1;
  id v6 = a1;
  if (v3) {
    [v3 removeFromSuperview];
  }
  uint64_t v4 = *(void **)&v1[v2];
  if (v4)
  {
    id v5 = v4;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v1 addSubview:v5];
    [v1 setNeedsUpdateConstraints];

    uint64_t v3 = v6;
    id v6 = v5;
  }
}

void sub_100049E1C(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel];
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel] = a1;
  id v6 = a1;
  if (v3) {
    [v3 removeFromSuperview];
  }
  uint64_t v4 = *(void **)&v1[v2];
  if (v4)
  {
    id v5 = v4;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v1 addSubview:v5];
    *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints] = 0;
    swift_bridgeObjectRelease();
    [v1 setNeedsUpdateConstraints];

    uint64_t v3 = v6;
    id v6 = v5;
  }
}

void sub_100049EF0(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton];
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton] = a1;
  id v6 = a1;
  if (v3) {
    [v3 removeFromSuperview];
  }
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints] = 0;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)&v1[v2];
  if (v4)
  {
    id v5 = v4;
    [v1 addSubview:v5];
    [v1 setNeedsUpdateConstraints];

    uint64_t v3 = v6;
    id v6 = v5;
  }
}

char *sub_100049FB4(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints] = 0;
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
  id v4 = objc_allocWithZone((Class)UILayoutGuide);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton] = 0;

  v30.receiver = v5;
  v30.super_class = (Class)type metadata accessor for HomePodSetupIconContentView();
  id v6 = (char *)objc_msgSendSuper2(&v30, "initWithCardStyle:", a1);
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
  unint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide];
  uint64_t v9 = v6;
  [v9 addLayoutGuide:v8];
  id v10 = [v9 mainContentGuide];
  id v29 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000B0B90;
  id v12 = [v8 topAnchor];
  id v13 = [v10 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v11 + 32) = v14;
  id v15 = [*(id *)&v6[v7] leadingAnchor];
  id v16 = [v10 leadingAnchor];
  id v17 = [v15 constraintGreaterThanOrEqualToAnchor:v16];

  *(void *)(v11 + 40) = v17;
  id v18 = [*(id *)&v6[v7] trailingAnchor];
  id v19 = [v10 trailingAnchor];
  id v20 = [v18 constraintLessThanOrEqualToAnchor:v19];

  *(void *)(v11 + 48) = v20;
  id v21 = [*(id *)&v6[v7] centerXAnchor];
  id v22 = [v10 centerXAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v11 + 56) = v23;
  id v24 = [*(id *)&v6[v7] bottomAnchor];
  id v25 = [v10 bottomAnchor];
  id v26 = [v24 constraintLessThanOrEqualToAnchor:v25];

  *(void *)(v11 + 64) = v26;
  specialized Array._endMutation()();
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v29 activateConstraints:isa];

  return v9;
}

void sub_10004A3A4()
{
  uint64_t v1 = v0;
  v113.receiver = v0;
  v113.super_class = (Class)type metadata accessor for HomePodSetupIconContentView();
  [super updateConstraints];
  id v2 = *(id *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
  p_name = (char **)(&stru_1000E6FF8 + 8);
  Swift::String v112 = v0;
  if (v2)
  {
    if ((unint64_t)v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)(((unint64_t)v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v4)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    if (*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints]) {
      goto LABEL_5;
    }
    uint64_t v109 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints;
    uint64_t v110 = v4 - 1;
    if (v4 < 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      id v6 = 0;
      uint64_t v7 = *(void **)&v112[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide];
      double v8 = PRXIconToIconMargin;
      if (((unint64_t)v2 & 0xC000000000000001) == 0) {
        goto LABEL_9;
      }
LABEL_8:
      for (id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(); ; id i = *((id *)v2 + v5 + 4))
      {
        id v10 = i;
        id v11 = [i centerYAnchor:v109];
        if (!v6 || (id v12 = [v6 centerYAnchor]) == 0) {
          id v12 = [v7 centerYAnchor];
        }
        id v13 = [v11 constraintEqualToAnchor:v12];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v14 = [v10 image];
        if (v14)
        {
          id v15 = v14;
          [v14 size];
          double v17 = v16;
          double v19 = v18;
        }
        else
        {
          double v19 = 1.0;
          double v17 = 1.0;
        }
        if (v17 <= 0.0) {
          double v20 = 1.0;
        }
        else {
          double v20 = v19 / v17;
        }
        id v21 = [v10 heightAnchor];
        id v22 = [v10 widthAnchor];
        id v23 = [v21 constraintEqualToAnchor:v22 multiplier:v20];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v24 = [v10 topAnchor];
        id v25 = [v7 topAnchor];
        id v26 = [v24 constraintGreaterThanOrEqualToAnchor:v25];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v27 = [v10 bottomAnchor];
        id v28 = [v7 bottomAnchor];
        id v29 = [v27 constraintLessThanOrEqualToAnchor:v28];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (v6)
        {
          id v30 = v6;
          id v31 = [v10 leadingAnchor];
          id v32 = [v30 trailingAnchor];
          id v33 = [v31 constraintEqualToAnchor:v32 constant:v8];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v34 = [v30 widthAnchor];
          id v35 = [v10 widthAnchor];
          id v36 = [v34 constraintEqualToAnchor:v35];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          id v37 = [v10 leadingAnchor];
          id v38 = [v7 leadingAnchor];
          id v39 = [v37 constraintEqualToAnchor:v38];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        if (v110 == v5) {
          break;
        }
        ++v5;
        id v6 = v10;
        if (((unint64_t)v2 & 0xC000000000000001) != 0) {
          goto LABEL_8;
        }
LABEL_9:
        ;
      }
      swift_bridgeObjectRelease();
      id v2 = v10;
      id v40 = [v2 trailingAnchor];
      id v41 = [v7 trailingAnchor];
      id v42 = [v40 constraintEqualToAnchor:v41];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_40;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_40:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    id v43 = self;
    sub_100017190();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    p_name = &stru_1000E6FF8.name;
    [v43 activateConstraints:isa];

    uint64_t v1 = v112;
    *(void *)&v112[v109] = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
  }
LABEL_41:
  uint64_t v45 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel];
  if (v45)
  {
    uint64_t v46 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints;
    if (!*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints])
    {
      sub_10000EE48(&qword_1000EF140);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1000B08A0;
      id v48 = v45;
      id v49 = [v48 leadingAnchor];
      id v50 = [v1 mainContentGuide];
      id v51 = [v50 leadingAnchor];

      id v52 = [v49 constraintEqualToAnchor:v51];
      *(void *)(v47 + 32) = v52;
      id v53 = [v48 trailingAnchor];
      id v54 = [v112 mainContentGuide];
      id v55 = [v54 trailingAnchor];

      id v56 = [v53 constraintEqualToAnchor:v55];
      *(void *)(v47 + 40) = v56;
      specialized Array._endMutation()();
      uint64_t v57 = self;
      sub_100017190();
      Class v58 = Array._bridgeToObjectiveC()().super.isa;
      [v57 p_name[384] v58];

      uint64_t v1 = v112;
      *(void *)&v112[v46] = v47;
      swift_bridgeObjectRelease();
      id v59 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v60 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel];
  if (v60)
  {
    uint64_t v61 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints;
    if (!*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints])
    {
      sub_10000EE48(&qword_1000EF140);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1000B08A0;
      id v63 = v60;
      id v64 = [v63 leadingAnchor];
      id v65 = [v1 mainContentGuide];
      id v66 = [v65 leadingAnchor];

      id v67 = [v64 constraintEqualToAnchor:v66];
      *(void *)(v62 + 32) = v67;
      id v68 = [v63 trailingAnchor];
      id v69 = [v112 mainContentGuide];
      id v70 = [v69 trailingAnchor];

      id v71 = [v68 constraintEqualToAnchor:v70];
      *(void *)(v62 + 40) = v71;
      specialized Array._endMutation()();
      uint64_t v72 = self;
      sub_100017190();
      Class v73 = Array._bridgeToObjectiveC()().super.isa;
      [v72 p_name[384]:v73];

      uint64_t v1 = v112;
      *(void *)&v112[v61] = v62;
      swift_bridgeObjectRelease();
      id v74 = v63;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  char v75 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton];
  if (v75)
  {
    uint64_t v76 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints;
    if (!*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints])
    {
      sub_10000EE48(&qword_1000EF140);
      uint64_t v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_1000B08A0;
      id v78 = v75;
      id v79 = [v78 leadingAnchor];
      id v80 = [v1 mainContentGuide];
      id v81 = [v80 leadingAnchor];

      id v82 = [v79 constraintEqualToAnchor:v81];
      *(void *)(v77 + 32) = v82;
      id v83 = [v78 trailingAnchor];
      id v84 = [v112 mainContentGuide];
      id v85 = [v84 trailingAnchor];

      id v86 = [v83 constraintEqualToAnchor:v85];
      *(void *)(v77 + 40) = v86;
      specialized Array._endMutation()();
      unint64_t v87 = self;
      sub_100017190();
      Class v88 = Array._bridgeToObjectiveC()().super.isa;
      [v87 p_name[384] v88];

      *(void *)&v112[v76] = v77;
      swift_bridgeObjectRelease();
      id v89 = v78;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  Swift::String v90 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v91) {
      goto LABEL_58;
    }
LABEL_74:
    swift_bridgeObjectRelease();
    Swift::String v90 = 0;
    goto LABEL_75;
  }
  uint64_t v91 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v91) {
    goto LABEL_74;
  }
LABEL_58:
  if (v91 >= 1)
  {
    int64_t v92 = 0;
    uint64_t v93 = 0;
    uint64_t v111 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
    double v94 = PRXMainContentMargin;
    while (1)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v92) {
          goto LABEL_60;
        }
      }
      else
      {
        id v99 = (id)_swiftEmptyArrayStorage[v93 + 4];
        if (v92)
        {
LABEL_60:
          id v95 = v92;
          id v96 = [v99 topAnchor];
          id v97 = [v95 bottomAnchor];
          id v98 = [v96 constraintEqualToAnchor:v97 constant:v94];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          goto LABEL_63;
        }
      }
      id v100 = [v99 topAnchor];
      id v101 = [*(id *)&v112[v111] bottomAnchor];
      id v102 = [v100 constraintEqualToAnchor:v101 constant:v94];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
LABEL_63:
      ++v93;
      int64_t v92 = v99;
      if (v91 == v93)
      {
        swift_bridgeObjectRelease();
        Swift::String v90 = v99;
        id v103 = [v90 bottomAnchor];
        id v104 = [v112 mainContentGuide];
        id v105 = [v104 bottomAnchor];

        id v106 = [v103 constraintLessThanOrEqualToAnchor:v105];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_72;
        }
        goto LABEL_79;
      }
    }
  }
  __break(1u);
LABEL_79:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_72:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  p_name = (char **)(&stru_1000E6FF8 + 8);
LABEL_75:
  int v107 = self;
  sub_100017190();
  Class v108 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v107 p_name[384]:v108];
}

id sub_10004B578()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupIconContentView();
  return [super dealloc];
}

uint64_t type metadata accessor for HomePodSetupIconContentView()
{
  return self;
}

void sub_10004B68C()
{
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints] = 0;
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILayoutGuide) init];
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10004B774(uint64_t a1)
{
  uint64_t v2 = IndexPath.section.getter();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v2 >= v3) {
    return 0;
  }
  uint64_t result = IndexPath.section.getter();
  if (result < 0) {
    goto LABEL_18;
  }
  if (!v3)
  {
LABEL_13:
    __break(1u);
    return 0;
  }
  uint64_t v5 = result;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  while (1)
  {
    uint64_t v9 = *(void *)(v8 + 8 * v6);
    uint64_t result = IndexPath.section.getter();
    if (v6 != result) {
      break;
    }
    if (IndexPath.row.getter() >= v9) {
      return 0;
    }
    uint64_t result = IndexPath.row.getter();
    BOOL v10 = __OFADD__(v7, result);
    v7 += result;
    if (v10) {
      goto LABEL_17;
    }
LABEL_11:
    if (v5 == v6) {
      return v7;
    }
    if (v3 == ++v6) {
      goto LABEL_13;
    }
  }
  BOOL v10 = __OFADD__(v7, v9);
  v7 += v9;
  if (!v10) {
    goto LABEL_11;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10004B844()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EE5C8);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EE5C8);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10004B90C()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_100007334(v0);

  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  qword_1000F39A0 = v2;
  *(void *)algn_1000F39A8 = v4;
}

void sub_10004B984()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_100007334(v0);

  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  qword_1000F39B0 = v2;
  *(void *)algn_1000F39B8 = v4;
}

id sub_10004B9FC()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView);
  }
  else
  {
    type metadata accessor for HomePodSetupWiFiInfoTableView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10004BA74()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (char *)&v31 - v10;
  id v12 = (objc_class *)type metadata accessor for HomePodSetupWiFiErrorViewController();
  v35.receiver = v1;
  v35.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED750 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EE5C8);
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      double v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupWiFiErrorViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED750 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EE5C8);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    double v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      id v32 = v1;
      aBlock[0] = v22;
      id v31 = v11;
      *(_DWORD *)id v21 = 136315138;
      uint64_t v23 = *v9;
      unint64_t v24 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_100048718(v23, v24, aBlock);
      id v11 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupWiFiErrorViewController: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v1 = v32;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    if (v11[*(int *)(v5 + 104)] == 1)
    {
      if (qword_1000ED758 != -1) {
        swift_once();
      }
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_bridgeObjectRetain();
      swift_retain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = (uint64_t)sub_10004CF28;
      aBlock[5] = v25;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100041068;
      aBlock[3] = (uint64_t)&unk_1000DBAB8;
      id v27 = _Block_copy(aBlock);
      id v28 = [self actionWithTitle:v26 style:1 handler:v27];

      _Block_release(v27);
      swift_release();
      swift_release();
      id v29 = [v1 addAction:v28];
    }
    id v30 = sub_10004B9FC();
    [v30 setAlpha:0.0];

    sub_10001712C((uint64_t)v11);
  }
}

void sub_10004BFE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController_showInfo;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController_showInfo) == 1)
    {
      sub_10004C820();
      if (qword_1000ED760 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_1000F39B0;
      uint64_t v4 = *(void *)algn_1000F39B8;
      if (qword_1000ED758 == -1) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_10004C428();
      if (qword_1000ED758 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_1000F39A0;
      uint64_t v4 = *(void *)algn_1000F39A8;
      if (qword_1000ED760 == -1) {
        goto LABEL_10;
      }
    }
    swift_once();
LABEL_10:
    sub_10004C248(v3, v4);
    v1[v2] = (v1[v2] & 1) == 0;
  }
}

void sub_10004C248(uint64_t a1, uint64_t a2)
{
  id v5 = [*(id *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView) actionButtons];
  sub_10003DD8C(0, &qword_1000EE620);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_19;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    while (1)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v6 + 8 * v8 + 32);
      }
      uint64_t v10 = v11;
      id v12 = [v11 titleForState:0];
      if (!v12) {
        goto LABEL_7;
      }
      uint64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      if (v14 == a1 && v16 == a2)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0) {
          goto LABEL_7;
        }
      }
      NSString v9 = String._bridgeToObjectiveC()();
      [v10 setTitle:v9 forState:0];

      uint64_t v10 = v9;
LABEL_7:
      ++v8;

      if (v7 == v8) {
        goto LABEL_19;
      }
    }
  }
  __break(1u);
}

void sub_10004C428()
{
  uint64_t v1 = v0;
  if (qword_1000ED750 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EE5C8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupWiFiErrorViewController: user tapped on the info button.", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = sub_10004B9FC();
  [v6 setSeparatorStyle:0];

  id v7 = sub_10004B9FC();
  sub_100095978();

  sub_10004C9A4();
  uint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  v16[4] = sub_10004CE80;
  v16[5] = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_100089B18;
  v16[3] = &unk_1000DBA68;
  uint64_t v10 = _Block_copy(v16);
  id v11 = v1;
  swift_release();
  [v8 animateWithDuration:v10 animations:0.5];
  _Block_release(v10);
  id v12 = sub_10004B9FC();
  [v12 setHidden:0];

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    char v14 = sub_10009D32C((uint64_t)sub_10004CF20, v13);
    swift_unknownObjectRelease();
    swift_release_n();
    if ((v14 & 1) == 0)
    {
      NSString v15 = String._bridgeToObjectiveC()();
      [v11 showActivityIndicatorWithStatus:v15];
    }
  }
}

void sub_10004C6DC(uint64_t *a1)
{
  if (qword_1000ED750 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EE5C8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupWiFiErrorViewController: Request for PreAuth completed.", v5, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = Strong;
    [Strong hideActivityIndicator];
    sub_100070744(1.0);
    id v8 = sub_10004B9FC();
    sub_100095B34(a1);
  }
}

void sub_10004C820()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  id v12 = sub_10004CE0C;
  uint64_t v13 = v2;
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_100089B18;
  id v11 = &unk_1000DB9C8;
  uint64_t v3 = _Block_copy(&v8);
  id v4 = v0;
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  id v12 = sub_10004CE2C;
  uint64_t v13 = v5;
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_10009A4B8;
  id v11 = &unk_1000DBA18;
  id v6 = _Block_copy(&v8);
  id v7 = v4;
  swift_release();
  [v1 animateWithDuration:v3 animations:v6 completion:0.5];
  _Block_release(v6);
  _Block_release(v3);
}

void sub_10004C9A4()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView;
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView);
  id v3 = sub_10004B9FC();
  [v2 addSubview:v3];

  id v4 = [*(id *)(v0 + v1) mainContentGuide];
  uint64_t v5 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000B0BC0;
  id v7 = sub_10004B9FC();
  id v8 = [v7 topAnchor];

  id v9 = [v4 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v6 + 32) = v10;
  id v11 = sub_10004B9FC();
  id v12 = [v11 bottomAnchor];

  id v13 = [v4 bottomAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v6 + 40) = v14;
  id v15 = sub_10004B9FC();
  id v16 = [v15 leadingAnchor];

  id v17 = [v4 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v6 + 48) = v18;
  id v19 = sub_10004B9FC();
  id v20 = [v19 trailingAnchor];

  id v21 = [v4 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v6 + 56) = v22;
  specialized Array._endMutation()();
  sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];
}

void sub_10004CCDC()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView));
}

id sub_10004CCEC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupWiFiErrorViewController();
  return [super dealloc];
}

uint64_t sub_10004CD34()
{
  return type metadata accessor for HomePodSetupWiFiErrorViewController();
}

uint64_t type metadata accessor for HomePodSetupWiFiErrorViewController()
{
  uint64_t result = qword_1000EE610;
  if (!qword_1000EE610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004CD88()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10004CDD4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10004CE0C()
{
}

uint64_t sub_10004CE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004CE24()
{
  return swift_release();
}

void sub_10004CE2C()
{
  id v0 = sub_10004B9FC();
  [v0 setHidden:1];
}

void sub_10004CE80()
{
}

void sub_10004CE88(double a1)
{
  id v2 = sub_10004B9FC();
  [v2 setAlpha:a1];
}

uint64_t sub_10004CEE8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10004CF20(uint64_t *a1)
{
}

void sub_10004CF28()
{
}

uint64_t sub_10004CF50()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EE628);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EE628);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10004D018(char a1)
{
  uint64_t result = 1701736270;
  switch(a1)
  {
    case 1:
      uint64_t result = 1818845510;
      break;
    case 2:
      uint64_t result = 1701080899;
      break;
    case 3:
      uint64_t result = 0x694669576F6ELL;
      break;
    case 4:
      uint64_t result = 0x69466957646142;
      break;
    case 5:
      uint64_t result = 0x64756F6C43696F6ELL;
      break;
    case 6:
      uint64_t result = 0x324153486F6ELL;
      break;
    case 7:
      uint64_t result = 0x73656E7554696F6ELL;
      break;
    case 8:
      uint64_t result = 0x656D6F486F6ELL;
      break;
    case 9:
      uint64_t result = 0x61686379654B6F6ELL;
      break;
    case 10:
      uint64_t result = 0x6C70536572616873;
      break;
    case 11:
      uint64_t result = 0x6F69647561;
      break;
    case 12:
      uint64_t result = 1769105779;
      break;
    case 13:
      uint64_t result = 0x73754D656C707061;
      break;
    case 14:
      uint64_t result = 0x65746E4569666977;
      break;
    case 15:
      uint64_t result = 0x6974616D6F747541;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10004D1E4(char *a1, char *a2)
{
  return dword_1000B0E4C[*a1] == dword_1000B0E4C[*a2];
}

Swift::Int sub_10004D208()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(dword_1000B0E4C[v1]);
  return Hasher._finalize()();
}

void sub_10004D258()
{
  Hasher._combine(_:)(dword_1000B0E4C[*v0]);
}

Swift::Int sub_10004D290()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(dword_1000B0E4C[v1]);
  return Hasher._finalize()();
}

uint64_t sub_10004D2DC@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000536A4(*a1);
  *a2 = result;
  return result;
}

void sub_10004D308(_DWORD *a1@<X8>)
{
  *a1 = dword_1000B0E4C[*v1];
}

uint64_t sub_10004D320()
{
  return sub_10004D018(*v0);
}

uint64_t sub_10004D328()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
  if (v2)
  {
    uint64_t v3 = v1[6];
    uint64_t v4 = *v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100015274(v4, v2);
  }
  else
  {
    LOWORD(v3) = 0;
  }
  int v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService);
  if ((v3 & 0x1000) != 0) {
    int v5 = 0;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) == 1)
  {
    if ((v5 & 1) == 0) {
      return (v3 & 0x800) == 0;
    }
    return 1;
  }
  return v5 != 0;
}

uint64_t sub_10004D408(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EEF28);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v125 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v8 = (char *)&v122 - v7;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v122 - v14;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 36) = 1;
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  uint64_t v16 = v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  uint64_t v17 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType;
  *(_DWORD *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 4) = 1;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error) = 0;
  id v19 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  void *v19 = 0;
  v19[1] = 0;
  id v20 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  *id v20 = 0;
  v20[1] = 0;
  id v21 = (unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi);
  *(_DWORD *)id v21 = 0;
  Swift::String v127 = v21;
  v21[4] = 1;
  id v22 = *(void (**)(void))(v10 + 56);
  uint64_t v124 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID;
  v22();
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) = 1;
  uint64_t v123 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor) = SFDeviceColorCodeUnknown;
  uint64_t v126 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages) = _swiftEmptyArrayStorage;
  uint64_t v23 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
  *uint64_t v23 = 0;
  v23[1] = 0xE000000000000000;
  unint64_t v24 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  *unint64_t v24 = 0;
  v24[1] = 0;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories) = _swiftEmptyArrayStorage;
  uint64_t v25 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  void *v25 = 0;
  v25[1] = 0xE000000000000000;
  NSString v26 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
  *NSString v26 = 0;
  v26[1] = 0xE000000000000000;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo) = 0;
  uint64_t v128 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_allowsRandomVoiceSelection) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession) = 0;
  uint64_t v27 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation;
  *(_OWORD *)uint64_t v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_OWORD *)(v27 + 32) = 0u;
  *(void *)(v27 + 48) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles) = &_swiftEmptyDictionarySingleton;
  uint64_t v28 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage;
  uint64_t v29 = type metadata accessor for AdjustedImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImageflags) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods) = 0;
  id v30 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  *id v30 = 0;
  v30[1] = 0xE000000000000000;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showHomepodSoftwareUpdate) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homePodProductVersion) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_isHomeInHH2) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showCannotCancelSU) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_airDropStatus) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_voiceRecognitionEnabled) = 0;
  id v31 = (void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sysdropPath);
  *id v31 = 0;
  v31[1] = 0;
  uint64_t v131 = 0xD000000000000010;
  unint64_t v132 = 0x80000001000B67D0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v32 = sub_10005513C((uint64_t)v134), (v33 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v32, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    UUID.init()();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v15, v9);
    goto LABEL_12;
  }
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    UUID.init()();
    sub_10000F674((uint64_t)v8, &qword_1000EEF28);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v13, v9);
  }
  else
  {
    id v34 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v34(v13, v8, v9);
    v34((char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier), v13, v9);
  }
LABEL_12:
  *(void *)&long long v135 = 0x6F6973726556736FLL;
  *((void *)&v135 + 1) = 0xE90000000000006ELL;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v35 = sub_10005513C((uint64_t)v134), (v36 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_20;
  }
  if (!swift_dynamicCast())
  {
LABEL_20:
    char v37 = 0;
    goto LABEL_21;
  }
  char v37 = v131;
LABEL_21:
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_osVersion) = v37;
  uint64_t v131 = 0x556E6F6973736573;
  unint64_t v132 = 0xEB00000000444955;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v38 = sub_10005513C((uint64_t)v134), (v39 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v38, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (*((void *)&v136 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v40 = v125;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v41 = v124;
      swift_beginAccess();
      sub_100013664(v40, v41, &qword_1000EEF28);
      swift_endAccess();
    }
  }
  else
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
  }
  *(void *)&long long v135 = 1769173874;
  *((void *)&v135 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v42 = sub_10005513C((uint64_t)v134), (v43 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v42, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_37;
  }
  if (!swift_dynamicCast())
  {
LABEL_37:
    int v44 = 0;
    goto LABEL_38;
  }
  int v44 = v131;
LABEL_38:
  uint64_t v45 = v127;
  *Swift::String v127 = v44;
  *((unsigned char *)v45 + 4) = 0;
  *(void *)&long long v135 = 0x5372656767697274;
  *((void *)&v135 + 1) = 0xEB00000000736365;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v46 = sub_10005513C((uint64_t)v134), (v47 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v46, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_46;
  }
  if (!swift_dynamicCast())
  {
LABEL_46:
    int v48 = 0;
    goto LABEL_47;
  }
  int v48 = v131;
LABEL_47:
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_triggerSeconds) = v48;
  *(void *)&long long v135 = 0xD000000000000010;
  *((void *)&v135 + 1) = 0x80000001000B7840;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v49 = sub_10005513C((uint64_t)v134), (v50 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v49, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_55;
  }
  if (!swift_dynamicCast())
  {
LABEL_55:
    char v51 = 0;
    goto LABEL_56;
  }
  char v51 = v131;
LABEL_56:
  *(unsigned char *)(v2 + v128) = v51;
  *(void *)&long long v135 = 0x6F4D656369766564;
  *((void *)&v135 + 1) = 0xEF65646F436C6564;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v52 = sub_10005513C((uint64_t)v134), (v53 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v52, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_64;
  }
  if (!swift_dynamicCast())
  {
LABEL_64:
    char v54 = 0;
    goto LABEL_65;
  }
  char v54 = v131;
LABEL_65:
  uint64_t v55 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) = v54;
  *(void *)&long long v135 = 0x646F43726F6C6F63;
  *((void *)&v135 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v56 = sub_10005513C((uint64_t)v134), (v57 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v56, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_73;
  }
  if (!swift_dynamicCast())
  {
LABEL_73:
    char v58 = 2;
    goto LABEL_74;
  }
  char v58 = v131;
LABEL_74:
  uint64_t v128 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode) = v58;
  *(void *)&long long v135 = 0x6C43656369766564;
  *((void *)&v135 + 1) = 0xEF65646F43737361;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v59 = sub_10005513C((uint64_t)v134), (v60 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v59, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  sub_10000F474((uint64_t)v134);
  if (*((void *)&v136 + 1))
  {
    int v61 = swift_dynamicCast();
    if (v61) {
      LOBYTE(v61) = v131;
    }
  }
  else
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    LOBYTE(v61) = 0;
  }
  id v62 = sub_1000072FC(v61);
  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v65 = v64;

  id v66 = [self sharedConnection];
  if (!v66) {
    __break(1u);
  }
  id v67 = v66;
  unsigned int v68 = [v66 effectiveBoolValueForSetting:MCFeatureCameraAllowed];

  *(unsigned char *)(v2 + 68) = v68 != 2;
  NSString v69 = String._bridgeToObjectiveC()();
  NSString v70 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressDetail) = Int64 != 0;
  *(void *)(v2 + v126) = mach_absolute_time();
  *(unsigned char *)(v2 + 69) = sub_100007294();
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = 0;
  id v72 = objc_allocWithZone((Class)NSRegularExpression);
  Class v73 = sub_100053158(0xD000000000000010, 0x80000001000B7CE0, 1);
  uint64_t v131 = 0x6172615074736574;
  unint64_t v132 = 0xEA0000000000736DLL;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v74 = sub_10005513C((uint64_t)v134), (v75 & 1) != 0))
  {
    sub_10000F578(*(void *)(a1 + 56) + 32 * v74, (uint64_t)&v135);
  }
  else
  {
    long long v135 = 0u;
    long long v136 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v134);
  uint64_t v76 = (void *)&unk_1000ED000;
  uint64_t v125 = v63;
  if (!*((void *)&v136 + 1))
  {
    sub_10000F674((uint64_t)&v135, &qword_1000EE410);
    goto LABEL_104;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_104:
    uint64_t v98 = v128;
    goto LABEL_105;
  }
  id v78 = (id)v131;
  uint64_t v77 = (void *)v132;
  NSString v79 = String._bridgeToObjectiveC()();
  *(void *)&long long v135 = 15;
  v134[0] = v78;
  v134[1] = v77;
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE4A8);
  sub_100040E58();
  sub_100040EB4();
  uint64_t v80 = _NSRange.init<A, B>(_:in:)();
  Swift::String v127 = v73;
  id v82 = [v73 firstMatchInString:v79 options:0 range:v80];

  if (v82)
  {
    uint64_t v126 = v55;
    [v82 rangeAtIndex:1];
    Range<>.init(_:in:)();
    if (v83)
    {
      __break(1u);
      uint64_t result = swift_unexpectedError();
      __break(1u);
      return result;
    }
    uint64_t v84 = String.subscript.getter();
    unint64_t v86 = v85;
    unint64_t v88 = v87;
    unint64_t v90 = v89;
    swift_bridgeObjectRelease();
    if ((v84 ^ v86) >> 14)
    {
      uint64_t v91 = sub_1000535CC(v84, v86, v88, v90, 10);
      if ((v91 & 0x10000) != 0) {
        LOWORD(v91) = sub_100053234(v84, v86, v88, v90, 10);
      }
      __int16 v92 = v91;
      swift_bridgeObjectRelease();
      if ((v92 & 0x100) == 0) {
        goto LABEL_96;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    LOBYTE(v92) = 0;
LABEL_96:
    uint64_t v93 = v123;
    *(unsigned char *)(v2 + v123) = v92;
    uint64_t v76 = &unk_1000ED000;
    if (qword_1000ED768 != -1) {
      swift_once();
    }
    uint64_t v94 = type metadata accessor for Logger();
    sub_1000133A0(v94, (uint64_t)qword_1000EE628);
    swift_retain();
    id v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      id v97 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v97 = 16777472;
      uint64_t v76 = (void *)&unk_1000ED000;
      LOBYTE(v134[0]) = *(unsigned char *)(v2 + v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "HomePodSetupModel: stereoCounterpartColor =  %hhu", v97, 5u);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    uint64_t v55 = v126;
    Class v73 = v127;
    goto LABEL_104;
  }
  swift_bridgeObjectRelease();
  Class v73 = v127;
  uint64_t v98 = v128;
  uint64_t v76 = (void *)&unk_1000ED000;
LABEL_105:
  sub_1000536C4();
  v134[0] = (id)NSString.init(stringLiteral:)();
  *(void *)&long long v135 = NSString.init(stringLiteral:)();
  uint64_t v131 = NSString.init(stringLiteral:)();
  id v130 = [objc_allocWithZone((Class)NSBundle) init];
  if (*(unsigned __int8 *)(v2 + v55) <= 1u) {
    intptr_t v99 = 1;
  }
  else {
    intptr_t v99 = *(unsigned __int8 *)(v2 + v55);
  }
  sub_100007C18(v99, *(unsigned __int8 *)(v2 + v98), 13, (id *)&v135, 0, (id *)&v131, 0, v134, 0, 0, &v130);
  id v100 = v130;
  uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v102 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName);
  uint64_t *v102 = v101;
  v102[1] = v103;
  uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v105 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
  *id v105 = v104;
  v105[1] = v106;
  uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Class v108 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  *Class v108 = v107;
  v108[1] = v109;
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle) = v100;
  id v110 = v100;
  uint64_t v111 = sub_10004E8D0();
  unint64_t v113 = v112;
  if (v76[237] != -1) {
    swift_once();
  }
  uint64_t v114 = type metadata accessor for Logger();
  sub_1000133A0(v114, (uint64_t)qword_1000EE628);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v115 = Logger.logObject.getter();
  os_log_type_t v116 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v115, v116))
  {
    uint64_t v117 = swift_slowAlloc();
    uint64_t v133 = swift_slowAlloc();
    *(_DWORD *)uint64_t v117 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_100048718(v125, v65, &v133);
    Swift::String v127 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v117 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_100048718(v111, v113, &v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v117 + 22) = 2080;
    swift_retain();
    uint64_t v118 = sub_10004E8D0();
    unint64_t v120 = v119;
    swift_release();
    uint64_t v129 = sub_100048718(v118, v120, &v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v115, v116, "HomePodSetupModel: Created running on %s=%s info: %s", (uint8_t *)v117, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  return v2;
}

uint64_t sub_10004E8D0()
{
  uint64_t v1 = v0;
  uint64_t v299 = sub_10000EE48(&qword_1000EE3C0);
  uint64_t v2 = __chkstk_darwin(v299);
  uint64_t v298 = (uint64_t)&v295 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v297 = (uint64_t)&v295 - v4;
  uint64_t v295 = sub_10000EE48(&qword_1000EEF28);
  uint64_t v5 = __chkstk_darwin(v295);
  uint64_t v7 = (char *)&v295 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v295 - v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v295 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v295 - v15;
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v296 = 0xD000000000000011;
  v301[0] = 0xD000000000000011;
  v301[1] = 0x80000001000B7B20;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17(v16, v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v10);
  v17(v14, (uint64_t)v16, v10);
  uint64_t v18 = String.init<A>(reflecting:)();
  id v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v21._uint64_t countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = v301[0];
  unint64_t v24 = (void *)v301[1];
  uint64_t v300 = 0xD000000000000013;
  v301[0] = 0xD000000000000013;
  v301[1] = 0x80000001000B7B00;
  v23._object = v24;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  uint64_t v26 = v301[0];
  uint64_t v25 = v301[1];
  strcpy((char *)v301, "appleId=");
  BYTE1(v301[1]) = 0;
  WORD1(v301[1]) = 0;
  HIDWORD(v301[1]) = -402653184;
  uint64_t v27 = *(void *)(v0 + 24);
  uint64_t v306 = *(void *)(v0 + 16);
  uint64_t v307 = v27;
  swift_bridgeObjectRetain();
  sub_10000EE48((uint64_t *)&unk_1000EE320);
  v28._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 32;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  uint64_t v30 = v301[0];
  id v31 = (void *)v301[1];
  v301[0] = v26;
  v301[1] = v25;
  swift_bridgeObjectRetain();
  v32._uint64_t countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v301[0];
  uint64_t v33 = v301[1];
  strcpy((char *)v301, "iCloudId=");
  WORD1(v301[1]) = 0;
  HIDWORD(v301[1]) = -385875968;
  uint64_t v35 = *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId + 8);
  uint64_t v306 = *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  uint64_t v307 = v35;
  swift_bridgeObjectRetain();
  v36._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  uint64_t v38 = v301[0];
  char v39 = (void *)v301[1];
  v301[0] = v34;
  v301[1] = v33;
  swift_bridgeObjectRetain();
  v40._uint64_t countAndFlagsBits = v38;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v301[0];
  uint64_t v41 = v301[1];
  strcpy((char *)v301, "iTunesId=");
  WORD1(v301[1]) = 0;
  HIDWORD(v301[1]) = -385875968;
  uint64_t v43 = *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId + 8);
  uint64_t v306 = *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  uint64_t v307 = v43;
  swift_bridgeObjectRetain();
  v44._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 32;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  uint64_t v46 = v301[0];
  char v47 = (void *)v301[1];
  v301[0] = v42;
  v301[1] = v41;
  swift_bridgeObjectRetain();
  v48._uint64_t countAndFlagsBits = v46;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = v301[0];
  uint64_t v49 = v301[1];
  strcpy((char *)v301, "osVersion=");
  BYTE3(v301[1]) = 0;
  HIDWORD(v301[1]) = -369098752;
  LOBYTE(v306) = *(unsigned char *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_osVersion);
  type metadata accessor for SFOSVersion(0);
  v51._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 32;
  v52._object = (void *)0xE100000000000000;
  String.append(_:)(v52);
  uint64_t v53 = v301[0];
  char v54 = (void *)v301[1];
  v301[0] = v50;
  v301[1] = v49;
  swift_bridgeObjectRetain();
  v55._uint64_t countAndFlagsBits = v53;
  v55._object = v54;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = v301[0];
  uint64_t v56 = v301[1];
  strcpy((char *)v301, "sessionUUID=");
  BYTE5(v301[1]) = 0;
  HIWORD(v301[1]) = -5120;
  uint64_t v58 = v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID;
  swift_beginAccess();
  sub_10000FD94(v58, (uint64_t)v9, &qword_1000EEF28);
  sub_10000FD94((uint64_t)v9, (uint64_t)v7, &qword_1000EEF28);
  uint64_t v59 = String.init<A>(reflecting:)();
  int v61 = v60;
  sub_10000F674((uint64_t)v9, &qword_1000EEF28);
  v62._uint64_t countAndFlagsBits = v59;
  v62._object = v61;
  String.append(_:)(v62);
  swift_bridgeObjectRelease();
  v63._uint64_t countAndFlagsBits = 32;
  v63._object = (void *)0xE100000000000000;
  String.append(_:)(v63);
  uint64_t v64 = v301[0];
  unint64_t v65 = (void *)v301[1];
  v301[0] = v57;
  v301[1] = v56;
  swift_bridgeObjectRetain();
  v66._uint64_t countAndFlagsBits = v64;
  v66._object = v65;
  String.append(_:)(v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = v301[0];
  uint64_t v67 = v301[1];
  v301[0] = 0x3D69737372;
  v301[1] = 0xE500000000000000;
  char v69 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi + 4);
  LODWORD(v304) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi);
  BYTE4(v304) = v69;
  sub_10000EE48(&qword_1000EEF30);
  v70._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v70);
  swift_bridgeObjectRelease();
  v71._uint64_t countAndFlagsBits = 32;
  v71._object = (void *)0xE100000000000000;
  String.append(_:)(v71);
  uint64_t v72 = v301[0];
  Class v73 = (void *)v301[1];
  v301[0] = v68;
  v301[1] = v67;
  swift_bridgeObjectRetain();
  v74._uint64_t countAndFlagsBits = v72;
  v74._object = v73;
  String.append(_:)(v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v76 = v301[0];
  uint64_t v75 = v301[1];
  strcpy((char *)v301, "badPINCount=");
  BYTE5(v301[1]) = 0;
  HIWORD(v301[1]) = -5120;
  LODWORD(v304) = *(_DWORD *)(v1 + 64);
  v77._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v77);
  swift_bridgeObjectRelease();
  v78._uint64_t countAndFlagsBits = 32;
  v78._object = (void *)0xE100000000000000;
  String.append(_:)(v78);
  uint64_t v79 = v301[0];
  uint64_t v80 = (void *)v301[1];
  v301[0] = v76;
  v301[1] = v75;
  swift_bridgeObjectRetain();
  v81._uint64_t countAndFlagsBits = v79;
  v81._object = v80;
  String.append(_:)(v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v83 = v301[0];
  uint64_t v82 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000012;
  v301[1] = 0x80000001000B7B40;
  id v304 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks);
  v84._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v84);
  swift_bridgeObjectRelease();
  v85._uint64_t countAndFlagsBits = 32;
  v85._object = (void *)0xE100000000000000;
  String.append(_:)(v85);
  uint64_t v86 = v301[0];
  unint64_t v87 = (void *)v301[1];
  v301[0] = v83;
  v301[1] = v82;
  swift_bridgeObjectRetain();
  v88._uint64_t countAndFlagsBits = v86;
  v88._object = v87;
  String.append(_:)(v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v90 = v301[0];
  uint64_t v89 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000014;
  v301[1] = 0x80000001000B7B60;
  char v91 = *(unsigned char *)(v1 + 36);
  LODWORD(v304) = *(_DWORD *)(v1 + 32);
  BYTE4(v304) = v91;
  sub_10000EE48(&qword_1000EEF38);
  v92._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v92);
  swift_bridgeObjectRelease();
  v93._uint64_t countAndFlagsBits = 32;
  v93._object = (void *)0xE100000000000000;
  String.append(_:)(v93);
  uint64_t v94 = v301[0];
  id v95 = (void *)v301[1];
  v301[0] = v90;
  v301[1] = v89;
  swift_bridgeObjectRetain();
  v96._uint64_t countAndFlagsBits = v94;
  v96._object = v95;
  String.append(_:)(v96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v98 = v301[0];
  uint64_t v97 = v301[1];
  strcpy((char *)v301, "dismissType=");
  BYTE5(v301[1]) = 0;
  HIWORD(v301[1]) = -5120;
  char v99 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType + 4);
  LODWORD(v304) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType);
  BYTE4(v304) = v99;
  sub_10000EE48(&qword_1000EEF40);
  v100._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v100);
  swift_bridgeObjectRelease();
  v101._uint64_t countAndFlagsBits = 32;
  v101._object = (void *)0xE100000000000000;
  String.append(_:)(v101);
  uint64_t v102 = v301[0];
  uint64_t v103 = (void *)v301[1];
  v301[0] = v98;
  v301[1] = v97;
  swift_bridgeObjectRetain();
  v104._uint64_t countAndFlagsBits = v102;
  v104._object = v103;
  String.append(_:)(v104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v106 = v301[0];
  uint64_t v105 = v301[1];
  v301[0] = 0x3D726F727265;
  v301[1] = 0xE600000000000000;
  id v304 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
  id v107 = v304;
  sub_10000EE48(&qword_1000EEF48);
  v108._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v108);
  swift_bridgeObjectRelease();
  v109._uint64_t countAndFlagsBits = 32;
  v109._object = (void *)0xE100000000000000;
  String.append(_:)(v109);
  uint64_t v110 = v301[0];
  uint64_t v111 = (void *)v301[1];
  v301[0] = v106;
  v301[1] = v105;
  swift_bridgeObjectRetain();
  v112._uint64_t countAndFlagsBits = v110;
  v112._object = v111;
  String.append(_:)(v112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v114 = v301[0];
  uint64_t v113 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000016;
  v301[1] = 0x80000001000B7B80;
  LOBYTE(v304) = *(unsigned char *)(v1 + 69);
  v115._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v115);
  swift_bridgeObjectRelease();
  v116._uint64_t countAndFlagsBits = 32;
  v116._object = (void *)0xE100000000000000;
  String.append(_:)(v116);
  uint64_t v117 = v301[0];
  uint64_t v118 = (void *)v301[1];
  v301[0] = v114;
  v301[1] = v113;
  swift_bridgeObjectRetain();
  v119._uint64_t countAndFlagsBits = v117;
  v119._object = v118;
  String.append(_:)(v119);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v121 = v301[0];
  uint64_t v120 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000015;
  v301[1] = 0x80000001000B7BA0;
  sub_100052754(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode));
  v122._uint64_t countAndFlagsBits = String.init(cString:)();
  String.append(_:)(v122);
  swift_bridgeObjectRelease();
  v123._uint64_t countAndFlagsBits = 32;
  v123._object = (void *)0xE100000000000000;
  String.append(_:)(v123);
  uint64_t v124 = v301[0];
  uint64_t v125 = (void *)v301[1];
  v301[0] = v121;
  v301[1] = v120;
  swift_bridgeObjectRetain();
  v126._uint64_t countAndFlagsBits = v124;
  v126._object = v125;
  String.append(_:)(v126);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v128 = v301[0];
  uint64_t v127 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000015;
  v301[1] = 0x80000001000B7BC0;
  LOBYTE(v304) = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  v129._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  v130._uint64_t countAndFlagsBits = 32;
  v130._object = (void *)0xE100000000000000;
  String.append(_:)(v130);
  uint64_t v131 = v301[0];
  unint64_t v132 = (void *)v301[1];
  v301[0] = v128;
  v301[1] = v127;
  swift_bridgeObjectRetain();
  v133._uint64_t countAndFlagsBits = v131;
  v133._object = v132;
  String.append(_:)(v133);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v135 = v301[0];
  uint64_t v134 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v301[0] = 0x5372656767697274;
  v301[1] = 0xEF3D73646E6F6365;
  LODWORD(v304) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_triggerSeconds);
  v136._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v136);
  swift_bridgeObjectRelease();
  v137._uint64_t countAndFlagsBits = 32;
  v137._object = (void *)0xE100000000000000;
  String.append(_:)(v137);
  uint64_t v138 = v301[0];
  uint64_t v139 = (void *)v301[1];
  v301[0] = v135;
  v301[1] = v134;
  swift_bridgeObjectRetain();
  v140._uint64_t countAndFlagsBits = v138;
  v140._object = v139;
  String.append(_:)(v140);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v142 = v301[0];
  uint64_t v141 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v301[0] = 0x73736572676F7270;
  v301[1] = 0xEF3D6C6961746544;
  LOBYTE(v304) = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressDetail);
  v143._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v143);
  swift_bridgeObjectRelease();
  v144._uint64_t countAndFlagsBits = 32;
  v144._object = (void *)0xE100000000000000;
  String.append(_:)(v144);
  uint64_t v145 = v301[0];
  Swift::String v146 = (void *)v301[1];
  v301[0] = v142;
  v301[1] = v141;
  swift_bridgeObjectRetain();
  v147._uint64_t countAndFlagsBits = v145;
  v147._object = v146;
  String.append(_:)(v147);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v149 = v301[0];
  uint64_t v148 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v301, "progressEvent=");
  HIBYTE(v301[1]) = -18;
  sub_10005281C(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent));
  id v304 = (id)String.init(cString:)();
  uint64_t v305 = v150;
  v151._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v151);
  swift_bridgeObjectRelease();
  v152._uint64_t countAndFlagsBits = 32;
  v152._object = (void *)0xE100000000000000;
  String.append(_:)(v152);
  uint64_t v153 = v301[0];
  v154 = (void *)v301[1];
  v301[0] = v149;
  v301[1] = v148;
  swift_bridgeObjectRetain();
  v155._uint64_t countAndFlagsBits = v153;
  v155._object = v154;
  String.append(_:)(v155);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v157 = v301[0];
  uint64_t v156 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v301, "cameraAllowed=");
  HIBYTE(v301[1]) = -18;
  LOBYTE(v304) = *(unsigned char *)(v1 + 68);
  v158._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v158);
  swift_bridgeObjectRelease();
  v159._uint64_t countAndFlagsBits = 32;
  v159._object = (void *)0xE100000000000000;
  String.append(_:)(v159);
  uint64_t v160 = v301[0];
  Swift::String v161 = (void *)v301[1];
  v301[0] = v157;
  v301[1] = v156;
  swift_bridgeObjectRetain();
  v162._uint64_t countAndFlagsBits = v160;
  v162._object = v161;
  String.append(_:)(v162);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v164 = v301[0];
  uint64_t v163 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v301[0] = 0x6C62616C69617661;
  v301[1] = 0xEF3D73656D6F4865;
  id v304 = *(id *)(v1 + 40);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EEF50);
  v165._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v165);
  swift_bridgeObjectRelease();
  v166._uint64_t countAndFlagsBits = 32;
  v166._object = (void *)0xE100000000000000;
  String.append(_:)(v166);
  uint64_t v167 = v301[0];
  uint64_t v168 = (void *)v301[1];
  v301[0] = v164;
  v301[1] = v163;
  swift_bridgeObjectRetain();
  v169._uint64_t countAndFlagsBits = v167;
  v169._object = v168;
  String.append(_:)(v169);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v171 = v301[0];
  uint64_t v170 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v172 = v296;
  v301[0] = v296;
  v301[1] = 0x80000001000B7BE0;
  id v304 = *(id *)(v1 + 72);
  v173._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v173);
  swift_bridgeObjectRelease();
  v174._uint64_t countAndFlagsBits = 32;
  v174._object = (void *)0xE100000000000000;
  String.append(_:)(v174);
  uint64_t v175 = v301[0];
  uint64_t v176 = (void *)v301[1];
  v301[0] = v171;
  v301[1] = v170;
  swift_bridgeObjectRetain();
  v177._uint64_t countAndFlagsBits = v175;
  v177._object = v176;
  String.append(_:)(v177);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v179 = v301[0];
  uint64_t v178 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v301, "existingRooms=");
  HIBYTE(v301[1]) = -18;
  id v304 = *(id *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EEF58);
  v180._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v180);
  swift_bridgeObjectRelease();
  v181._uint64_t countAndFlagsBits = 32;
  v181._object = (void *)0xE100000000000000;
  String.append(_:)(v181);
  uint64_t v182 = v301[0];
  uint64_t v183 = (void *)v301[1];
  v301[0] = v179;
  v301[1] = v178;
  swift_bridgeObjectRetain();
  v184._uint64_t countAndFlagsBits = v182;
  v184._object = v183;
  String.append(_:)(v184);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v186 = v301[0];
  uint64_t v185 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000015;
  v301[1] = 0x80000001000B7C00;
  uint64_t v187 = v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  swift_beginAccess();
  uint64_t v188 = v297;
  sub_10000FD94(v187, v297, &qword_1000EE3C0);
  sub_10000FD94(v188, v298, &qword_1000EE3C0);
  uint64_t v189 = String.init<A>(reflecting:)();
  uint64_t v191 = v190;
  sub_10000F674(v188, &qword_1000EE3C0);
  v192._uint64_t countAndFlagsBits = v189;
  v192._object = v191;
  String.append(_:)(v192);
  swift_bridgeObjectRelease();
  v193._uint64_t countAndFlagsBits = 32;
  v193._object = (void *)0xE100000000000000;
  String.append(_:)(v193);
  uint64_t v194 = v301[0];
  uint64_t v195 = (void *)v301[1];
  v301[0] = v186;
  v301[1] = v185;
  swift_bridgeObjectRetain();
  v196._uint64_t countAndFlagsBits = v194;
  v196._object = v195;
  String.append(_:)(v196);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v198 = v301[0];
  uint64_t v197 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v301[0] = 0x6574736567677573;
  v301[1] = 0xEF3D736D6F6F5264;
  uint64_t v302 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  v199._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v199);
  swift_bridgeObjectRelease();
  v200._uint64_t countAndFlagsBits = 32;
  v200._object = (void *)0xE100000000000000;
  String.append(_:)(v200);
  uint64_t v201 = v301[0];
  uint64_t v202 = (void *)v301[1];
  v301[0] = v198;
  v301[1] = v197;
  swift_bridgeObjectRetain();
  v203._uint64_t countAndFlagsBits = v201;
  v203._object = v202;
  String.append(_:)(v203);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v205 = v301[0];
  uint64_t v204 = v301[1];
  strcpy((char *)v301, "movieName=");
  BYTE3(v301[1]) = 0;
  HIDWORD(v301[1]) = -369098752;
  unint64_t v206 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName + 8);
  uint64_t v302 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName);
  unint64_t v303 = v206;
  swift_bridgeObjectRetain();
  v207._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v207);
  swift_bridgeObjectRelease();
  v208._uint64_t countAndFlagsBits = 32;
  v208._object = (void *)0xE100000000000000;
  String.append(_:)(v208);
  uint64_t v209 = v301[0];
  v210 = (void *)v301[1];
  v301[0] = v205;
  v301[1] = v204;
  swift_bridgeObjectRetain();
  v211._uint64_t countAndFlagsBits = v209;
  v211._object = v210;
  String.append(_:)(v211);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v213 = v301[0];
  uint64_t v212 = v301[1];
  strcpy((char *)v301, "imageName=");
  BYTE3(v301[1]) = 0;
  HIDWORD(v301[1]) = -369098752;
  unint64_t v214 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8);
  uint64_t v302 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
  unint64_t v303 = v214;
  swift_bridgeObjectRetain();
  v215._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v215);
  swift_bridgeObjectRelease();
  v216._uint64_t countAndFlagsBits = 32;
  v216._object = (void *)0xE100000000000000;
  String.append(_:)(v216);
  uint64_t v217 = v301[0];
  v218 = (void *)v301[1];
  v301[0] = v213;
  v301[1] = v212;
  swift_bridgeObjectRetain();
  v219._uint64_t countAndFlagsBits = v217;
  v219._object = v218;
  String.append(_:)(v219);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v221 = v301[0];
  uint64_t v220 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v301[0] = v172;
  v301[1] = 0x80000001000B7C20;
  LOBYTE(v302) = sub_10004D328() & 1;
  v222._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v222);
  swift_bridgeObjectRelease();
  v223._uint64_t countAndFlagsBits = 32;
  v223._object = (void *)0xE100000000000000;
  String.append(_:)(v223);
  uint64_t v224 = v301[0];
  v225 = (void *)v301[1];
  v301[0] = v221;
  v301[1] = v220;
  swift_bridgeObjectRetain();
  v226._uint64_t countAndFlagsBits = v224;
  v226._object = v225;
  String.append(_:)(v226);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v228 = v301[0];
  uint64_t v227 = v301[1];
  strcpy((char *)v301, "productName=");
  BYTE5(v301[1]) = 0;
  HIWORD(v301[1]) = -5120;
  unint64_t v229 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8);
  uint64_t v302 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  unint64_t v303 = v229;
  swift_bridgeObjectRetain();
  v230._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v230);
  swift_bridgeObjectRelease();
  v231._uint64_t countAndFlagsBits = 32;
  v231._object = (void *)0xE100000000000000;
  String.append(_:)(v231);
  uint64_t v232 = v301[0];
  v233 = (void *)v301[1];
  v301[0] = v228;
  v301[1] = v227;
  swift_bridgeObjectRetain();
  v234._uint64_t countAndFlagsBits = v232;
  v234._object = v233;
  String.append(_:)(v234);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v236 = v301[0];
  uint64_t v235 = v301[1];
  strcpy((char *)v301, "stereoRole=");
  HIDWORD(v301[1]) = -352321536;
  sub_100053134(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole));
  v237._uint64_t countAndFlagsBits = String.init(cString:)();
  String.append(_:)(v237);
  swift_bridgeObjectRelease();
  v238._uint64_t countAndFlagsBits = 32;
  v238._object = (void *)0xE100000000000000;
  String.append(_:)(v238);
  uint64_t v239 = v301[0];
  v240 = (void *)v301[1];
  v301[0] = v236;
  v301[1] = v235;
  swift_bridgeObjectRetain();
  v241._uint64_t countAndFlagsBits = v239;
  v241._object = v240;
  String.append(_:)(v241);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v243 = v301[0];
  uint64_t v242 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000017;
  v301[1] = 0x80000001000B7C40;
  LOBYTE(v302) = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
  v244._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v244);
  swift_bridgeObjectRelease();
  v245._uint64_t countAndFlagsBits = 32;
  v245._object = (void *)0xE100000000000000;
  String.append(_:)(v245);
  uint64_t v246 = v301[0];
  v247 = (void *)v301[1];
  v301[0] = v243;
  v301[1] = v242;
  swift_bridgeObjectRetain();
  v248._uint64_t countAndFlagsBits = v246;
  v248._object = v247;
  String.append(_:)(v248);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v250 = v301[0];
  uint64_t v249 = v301[1];
  strcpy((char *)v301, "deviceGUID=");
  HIDWORD(v301[1]) = -352321536;
  unint64_t v251 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
  uint64_t v302 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  unint64_t v303 = v251;
  swift_bridgeObjectRetain();
  v252._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v252);
  swift_bridgeObjectRelease();
  v253._uint64_t countAndFlagsBits = 32;
  v253._object = (void *)0xE100000000000000;
  String.append(_:)(v253);
  uint64_t v254 = v301[0];
  v255 = (void *)v301[1];
  v301[0] = v250;
  v301[1] = v249;
  swift_bridgeObjectRetain();
  v256._uint64_t countAndFlagsBits = v254;
  v256._object = v255;
  String.append(_:)(v256);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v258 = v301[0];
  uint64_t v257 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  uint64_t v259 = v300;
  v301[0] = v300;
  v301[1] = 0x80000001000B7C60;
  unint64_t v260 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
  uint64_t v302 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
  unint64_t v303 = v260;
  swift_bridgeObjectRetain();
  v261._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v261);
  swift_bridgeObjectRelease();
  v262._uint64_t countAndFlagsBits = 32;
  v262._object = (void *)0xE100000000000000;
  String.append(_:)(v262);
  uint64_t v263 = v301[0];
  v264 = (void *)v301[1];
  v301[0] = v258;
  v301[1] = v257;
  swift_bridgeObjectRetain();
  v265._uint64_t countAndFlagsBits = v263;
  v265._object = v264;
  String.append(_:)(v265);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v267 = v301[0];
  uint64_t v266 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000015;
  v301[1] = 0x80000001000B7C80;
  uint64_t v302 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories);
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EEF60);
  v268._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v268);
  swift_bridgeObjectRelease();
  v269._uint64_t countAndFlagsBits = 32;
  v269._object = (void *)0xE100000000000000;
  String.append(_:)(v269);
  uint64_t v270 = v301[0];
  v271 = (void *)v301[1];
  v301[0] = v267;
  v301[1] = v266;
  swift_bridgeObjectRetain();
  v272._uint64_t countAndFlagsBits = v270;
  v272._object = v271;
  String.append(_:)(v272);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v274 = v301[0];
  uint64_t v273 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  uint64_t v302 = v259;
  unint64_t v303 = 0x80000001000B7CA0;
  uint64_t v275 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
  uint64_t v276 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 16);
  uint64_t v277 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 24);
  uint64_t v278 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 32);
  uint64_t v279 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 40);
  uint64_t v280 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 48);
  v301[0] = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
  v301[1] = v275;
  v301[2] = v276;
  v301[3] = v277;
  v301[4] = v278;
  v301[5] = v279;
  v301[6] = v280;
  sub_100015374(v301[0], v275);
  sub_10000EE48(&qword_1000EEF68);
  v281._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v281);
  swift_bridgeObjectRelease();
  v282._uint64_t countAndFlagsBits = 32;
  v282._object = (void *)0xE100000000000000;
  String.append(_:)(v282);
  uint64_t v283 = v302;
  v284 = (void *)v303;
  v301[0] = v274;
  v301[1] = v273;
  swift_bridgeObjectRetain();
  v285._uint64_t countAndFlagsBits = v283;
  v285._object = v284;
  String.append(_:)(v285);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v287 = v301[0];
  uint64_t v286 = v301[1];
  v301[0] = 0;
  v301[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v301[0] = 0xD000000000000019;
  v301[1] = 0x80000001000B7CC0;
  LOBYTE(v302) = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService);
  v288._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v288);
  swift_bridgeObjectRelease();
  v289._uint64_t countAndFlagsBits = 32;
  v289._object = (void *)0xE100000000000000;
  String.append(_:)(v289);
  uint64_t v290 = v301[0];
  v291 = (void *)v301[1];
  v301[0] = v287;
  v301[1] = v286;
  swift_bridgeObjectRetain();
  v292._uint64_t countAndFlagsBits = v290;
  v292._object = v291;
  String.append(_:)(v292);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v293._uint64_t countAndFlagsBits = 62;
  v293._object = (void *)0xE100000000000000;
  String.append(_:)(v293);
  swift_bridgeObjectRelease();
  return v301[0];
}

uint64_t sub_100050098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  if (*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8))
  {
    uint64_t v4 = *v3;
  }
  else if (a2)
  {
    uint64_t v4 = a1;
    *uint64_t v3 = a1;
    v3[1] = a2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1000ED768 != -1) {
      swift_once();
    }
    uint64_t v4 = 0x53552D6E65;
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000133A0(v5, (uint64_t)qword_1000EE628);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupModel: #### userSelectedSiriLanguage called but selectedSiriLanguage and defaultValue are both nil, falling back to English", v8, 2u);
      swift_slowDealloc();
    }
  }
  swift_bridgeObjectRetain();
  return v4;
}

void sub_1000501E0(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  int v131 = a1;
  uint64_t v7 = sub_10000EE48(&qword_1000EDF98);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  Swift::String v126 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v110 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v129 = *(void *)(v12 - 8);
  uint64_t v130 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v127 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v128 = (char *)&v110 - v15;
  uint64_t v16 = sub_10000EE48(&qword_1000EE040);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v125 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v124 = (uint64_t)&v110 - v20;
  __chkstk_darwin(v19);
  Swift::String v22 = (char *)&v110 - v21;
  uint64_t v23 = type metadata accessor for AdjustedImage(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  Swift::String v123 = (void **)((char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  Swift::String v28 = (char *)&v110 - v27;
  uint64_t v122 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
  int v29 = *(_DWORD *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole);
  int v30 = ((v29 & 0xFFFFFFFE) == 2) | a2;
  unsigned int v132 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  uint64_t v31 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  uint64_t v32 = 13;
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) != 5)
  {
    uint64_t v32 = (v131 & 1) != 0 ? 1037 : 13;
    if (((v29 & 0xFFFFFFFE) == 2) | a2 & 1)
    {
      if (v29 == 2) {
        int v33 = 96;
      }
      else {
        int v33 = 4192;
      }
      unsigned int v34 = v33 | v32;
      if (v29 == 3) {
        unsigned int v35 = v32 | 0x860;
      }
      else {
        unsigned int v35 = v34;
      }
      if (v132 == *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor)) {
        uint64_t v32 = v32 | 0x20;
      }
      else {
        uint64_t v32 = v35;
      }
    }
  }
  int v121 = v30;
  sub_1000511DC(v32, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    sub_10003DD28((uint64_t)v22, (uint64_t)v28);
    sub_10003DD28((uint64_t)v28, a3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(a3, 0, 1, v23);
    return;
  }
  uint64_t v120 = a3;
  sub_10000F674((uint64_t)v22, &qword_1000EE040);
  sub_1000536C4();
  v136[0] = (id)NSString.init(stringLiteral:)();
  if (*(unsigned __int8 *)(v4 + v31) <= 1u) {
    intptr_t v36 = 1;
  }
  else {
    intptr_t v36 = *(unsigned __int8 *)(v4 + v31);
  }
  LODWORD(v116) = v36;
  sub_100007BE0(v36, v132, v32, v136, 0, 0, 0, 0, 0);
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v134 = v37;
  unint64_t v135 = v38;
  uint64_t v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0) {
    uint64_t v39 = v37 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v119 = v23;
  uint64_t v118 = v24;
  if (!v39)
  {
    swift_bridgeObjectRelease();
    unint64_t v40 = *(void *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8);
    uint64_t v134 = *(void *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
    unint64_t v135 = v40;
    swift_bridgeObjectRetain();
  }
  uint64_t v41 = self;
  swift_bridgeObjectRetain();
  id v42 = [v41 configurationWithPointSize:72.0];
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::String v44 = CAShapeLayer_ptr;
  Swift::String v45 = self;
  id v46 = [v45 systemImageNamed:v43 withConfiguration:v42];

  id v47 = v46;
  if (!v46)
  {
    if (qword_1000ED768 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_1000133A0(v48, (uint64_t)qword_1000EE628);
    uint64_t v49 = v134;
    unint64_t v50 = v135;
    swift_bridgeObjectRetain_n();
    Swift::String v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    BOOL v53 = os_log_type_enabled(v51, v52);
    id v117 = v45;
    if (v53)
    {
      char v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      v137[0] = v115;
      *(_DWORD *)char v54 = 136315138;
      uint64_t v114 = (void (*)(uint64_t, char *, uint64_t))(v54 + 4);
      swift_bridgeObjectRetain();
      v136[1] = (id)sub_100048718(v49, v50, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "HomePodSetupViewModel: could not find a device image as systemName so looking for %s", v54, 0xCu);
      swift_arrayDestroy();
      Swift::String v44 = CAShapeLayer_ptr;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    id v55 = objc_allocWithZone((Class)v44[83]);
    swift_bridgeObjectRetain();
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v57 = [v55 initWithContentsOfFile:v56];

    if (!v57)
    {
      swift_bridgeObjectRetain();
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v57 = [v117 imageNamed:v58];

      if (!v57)
      {
        swift_bridgeObjectRelease();
        uint64_t v90 = 0;
        goto LABEL_54;
      }
    }
    id v47 = v57;
  }
  LODWORD(v117) = v32;
  uint64_t v32 = (uint64_t)v47;
  uint64_t v59 = *(void **)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
  uint64_t v60 = SFDeviceAssetNameAdjustments;
  id v61 = v46;
  id v62 = [v59 URLForResource:v60 withExtension:0];
  if (!v62)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))(v11, 1, 1, v130);
    goto LABEL_53;
  }
  Swift::String v63 = v62;
  uint64_t v64 = v127;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v65 = v129;
  uint64_t v66 = v130;
  uint64_t v68 = v129 + 32;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v129 + 32);
  v67(v11, v64, v130);
  char v69 = *(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56);
  v69(v11, 0, 1, v66);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v11, 1, v66) == 1)
  {
LABEL_53:
    swift_bridgeObjectRelease();
    uint64_t v90 = v32;

    sub_10000F674((uint64_t)v11, &qword_1000EDF98);
    LODWORD(v32) = v117;
LABEL_54:
    if (qword_1000ED768 != -1) {
      swift_once();
    }
    uint64_t v91 = type metadata accessor for Logger();
    sub_1000133A0(v91, (uint64_t)qword_1000EE628);
    Swift::String v92 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = swift_slowAlloc();
      id v95 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v94 = 67109890;
      LODWORD(v137[0]) = v116;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v94 + 8) = 256;
      LOBYTE(v137[0]) = v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v94 + 11) = 1024;
      LODWORD(v137[0]) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v94 + 17) = 2112;
      swift_beginAccess();
      id v96 = v136[0];
      id v133 = v136[0];
      id v97 = v136[0];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v95 = v96;
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "HomePodSetupViewModel: could not find a device image for asset: %u for deviceColorCode: %hhu and flags: %u named: %@ returning a blank image.", (uint8_t *)v94, 0x1Bu);
      sub_10000EE48(&qword_1000EDEB0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v98 = v90;
    }
    else
    {
      uint64_t v98 = v92;
      Swift::String v92 = v90;
    }
    uint64_t v99 = v120;
    uint64_t v100 = v119;

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v99, 1, 1, v100);
    goto LABEL_65;
  }
  uint64_t v115 = (uint64_t)v69;
  uint64_t v127 = (char *)(v65 + 56);
  v67(v128, v11, v66);
  if (qword_1000ED768 != -1) {
    swift_once();
  }
  uint64_t v113 = v68;
  uint64_t v114 = (void (*)(uint64_t, char *, uint64_t))v67;
  uint64_t v70 = type metadata accessor for Logger();
  sub_1000133A0(v70, (uint64_t)qword_1000EE628);
  uint64_t v72 = v134;
  unint64_t v71 = v135;
  id v73 = (id)v32;
  swift_retain_n();
  id v74 = v73;
  swift_bridgeObjectRetain();
  uint64_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.default.getter();
  unsigned int v77 = v76;
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v78 = swift_slowAlloc();
    uint64_t v79 = (void *)swift_slowAlloc();
    uint64_t v110 = v79;
    uint64_t v112 = swift_slowAlloc();
    v137[0] = v112;
    *(_DWORD *)uint64_t v78 = 136316674;
    swift_bridgeObjectRetain();
    id v133 = (id)sub_100048718(v72, v71, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v78 + 12) = 2112;
    id v133 = v74;
    id v80 = v74;
    id v111 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v79 = v74;

    *(_WORD *)(v78 + 22) = 1024;
    LODWORD(v133) = v116;
    Swift::String v116 = (char *)&v133 + 4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v78 + 28) = 256;
    LOBYTE(v133) = v132;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v78 + 31) = 2080;
    char v81 = v131;
    if (v131) {
      uint64_t v82 = 28271;
    }
    else {
      uint64_t v82 = 6710895;
    }
    unsigned int v132 = v77;
    if (v131) {
      unint64_t v83 = 0xE200000000000000;
    }
    else {
      unint64_t v83 = 0xE300000000000000;
    }
    id v133 = (id)sub_100048718(v82, v83, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 41) = 2080;
    if (v121) {
      uint64_t v84 = 28271;
    }
    else {
      uint64_t v84 = 6710895;
    }
    if (v121) {
      unint64_t v85 = 0xE200000000000000;
    }
    else {
      unint64_t v85 = 0xE300000000000000;
    }
    id v133 = (id)sub_100048718(v84, v85, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 51) = 1024;
    int v86 = *(_DWORD *)(v4 + v122);
    swift_release();
    LODWORD(v133) = v86;
    uint64_t v66 = v130;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v132, "HomePodSetupViewModel: adjustedProductImage returning image named: %s with details: %@  product: %u %hhu withTV: %s withStereo: %s, StereoRole: %d", (uint8_t *)v78, 0x39u);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v87 = v119;
    uint64_t v88 = v118;
    uint64_t v89 = (uint64_t)v126;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v87 = v119;
    uint64_t v88 = v118;
    uint64_t v89 = (uint64_t)v126;
    char v81 = v131;
  }
  int v101 = (int)v117;
  uint64_t v102 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v115;
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v66);
    uint64_t v103 = 1;
  }
  else
  {
    v114(v89, v128, v66);
    uint64_t v103 = 0;
  }
  v102(v89, v103, 1, v66);
  uint64_t v104 = (uint64_t)v123;
  *Swift::String v123 = v74;
  sub_10003D270(v89, v104 + *(int *)(v87 + 20), &qword_1000EDF98);
  *(_DWORD *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImageflags) = v101;
  uint64_t v105 = v124;
  sub_100053BB0(v104, v124);
  uint64_t v106 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56);
  v106(v105, 0, 1, v87);
  uint64_t v107 = v125;
  sub_10003D270(v105, v125, &qword_1000EE040);
  uint64_t v108 = v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage;
  swift_beginAccess();
  sub_100013664(v107, v108, &qword_1000EE040);
  swift_endAccess();
  uint64_t v109 = v120;
  sub_10003DD28(v104, v120);
  v106(v109, 0, 1, v87);
LABEL_65:
}

uint64_t sub_1000511DC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AdjustedImage(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImageflags) != a1) {
    goto LABEL_4;
  }
  uint64_t v12 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage;
  swift_beginAccess();
  sub_10000FD94(v12, (uint64_t)v7, &qword_1000EE040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10000F674((uint64_t)v7, &qword_1000EE040);
LABEL_4:
    uint64_t v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v13, 1, v8);
  }
  sub_10003DD28((uint64_t)v7, (uint64_t)v11);
  if (qword_1000ED768 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000133A0(v14, (uint64_t)qword_1000EE628);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupModel: adjustedProductImage returning cached image.", v17, 2u);
    swift_slowDealloc();
  }

  sub_10003DD28((uint64_t)v11, a2);
  uint64_t v13 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v13, 1, v8);
}

uint64_t sub_100051454()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000F674(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath, &qword_1000EE3C0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000F674(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID, &qword_1000EEF28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100015274(*(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation), *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8));
  swift_bridgeObjectRelease();
  sub_10000F674(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage, &qword_1000EE040);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10005169C()
{
  sub_100051454();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000516F4()
{
  return type metadata accessor for HomePodSetupModel();
}

uint64_t type metadata accessor for HomePodSetupModel()
{
  uint64_t result = qword_1000EE668;
  if (!qword_1000EE668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100051748()
{
  sub_1000519EC(319, &qword_1000EE678, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      sub_1000519EC(319, (unint64_t *)&unk_1000EE680, (void (*)(uint64_t))&type metadata accessor for UUID);
      if (v2 <= 0x3F)
      {
        sub_1000519EC(319, &qword_1000EE0C0, (void (*)(uint64_t))type metadata accessor for AdjustedImage);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1000519EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for HomePodSetupTestMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomePodSetupTestMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100051B9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupTestMode()
{
  return &type metadata for HomePodSetupTestMode;
}

unint64_t sub_100051BD8()
{
  unint64_t result = qword_1000EEF20;
  if (!qword_1000EEF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EEF20);
  }
  return result;
}

uint64_t sub_100051C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EEF28);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  BOOL v7 = (char *)&v136 - v6;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v136 - v13;
  uint64_t v139 = 0;
  unint64_t v140 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v139 = 0xD000000000000011;
  unint64_t v140 = 0x80000001000B7B20;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v14, v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v8);
  v15(v12, (uint64_t)v14, v8);
  uint64_t v16 = String.init<A>(reflecting:)();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v19._uint64_t countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 32;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = v139;
  Swift::String v22 = (void *)v140;
  unint64_t v136 = 0xD000000000000013;
  uint64_t v139 = 0xD000000000000013;
  unint64_t v140 = 0x80000001000B7B00;
  v21._object = v22;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  uint64_t v24 = v139;
  unint64_t v23 = v140;
  strcpy((char *)v141, "sessionUUID=");
  BYTE5(v141[1]) = 0;
  HIWORD(v141[1]) = -5120;
  uint64_t v25 = v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID;
  swift_beginAccess();
  sub_10000FD94(v25, (uint64_t)v7, &qword_1000EEF28);
  sub_10000FD94((uint64_t)v7, (uint64_t)v5, &qword_1000EEF28);
  uint64_t v26 = String.init<A>(reflecting:)();
  Swift::String v28 = v27;
  sub_10000F674((uint64_t)v7, &qword_1000EEF28);
  v29._uint64_t countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  uint64_t v31 = v141[0];
  uint64_t v32 = (void *)v141[1];
  v141[0] = v24;
  v141[1] = v23;
  swift_bridgeObjectRetain();
  v33._uint64_t countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = v141[0];
  uint64_t v34 = v141[1];
  v141[0] = 0x3D69737372;
  v141[1] = 0xE500000000000000;
  char v36 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi + 4);
  LODWORD(v137) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi);
  BYTE4(v137) = v36;
  sub_10000EE48(&qword_1000EEF30);
  v37._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 32;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  uint64_t v39 = v141[0];
  unint64_t v40 = (void *)v141[1];
  v141[0] = v35;
  v141[1] = v34;
  swift_bridgeObjectRetain();
  v41._uint64_t countAndFlagsBits = v39;
  v41._object = v40;
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v141[0];
  uint64_t v42 = v141[1];
  strcpy((char *)v141, "dismissType=");
  BYTE5(v141[1]) = 0;
  HIWORD(v141[1]) = -5120;
  char v44 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType + 4);
  LODWORD(v137) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType);
  BYTE4(v137) = v44;
  sub_10000EE48(&qword_1000EEF40);
  v45._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 32;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  uint64_t v47 = v141[0];
  uint64_t v48 = (void *)v141[1];
  v141[0] = v43;
  v141[1] = v42;
  swift_bridgeObjectRetain();
  v49._uint64_t countAndFlagsBits = v47;
  v49._object = v48;
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v141[0];
  uint64_t v50 = v141[1];
  v141[0] = 0x3D726F727265;
  v141[1] = 0xE600000000000000;
  id v137 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
  id v52 = v137;
  sub_10000EE48(&qword_1000EEF48);
  v53._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  v54._uint64_t countAndFlagsBits = 32;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  uint64_t v55 = v141[0];
  NSString v56 = (void *)v141[1];
  v141[0] = v51;
  v141[1] = v50;
  swift_bridgeObjectRetain();
  v57._uint64_t countAndFlagsBits = v55;
  v57._object = v56;
  String.append(_:)(v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v59 = v141[0];
  uint64_t v58 = v141[1];
  v141[0] = 0;
  v141[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v141[0] = 0xD000000000000015;
  v141[1] = 0x80000001000B7BA0;
  sub_100052754(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode));
  v60._uint64_t countAndFlagsBits = String.init(cString:)();
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 32;
  v61._object = (void *)0xE100000000000000;
  String.append(_:)(v61);
  uint64_t v62 = v141[0];
  Swift::String v63 = (void *)v141[1];
  v141[0] = v59;
  v141[1] = v58;
  swift_bridgeObjectRetain();
  v64._uint64_t countAndFlagsBits = v62;
  v64._object = v63;
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = v141[0];
  uint64_t v65 = v141[1];
  v141[0] = 0;
  v141[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v141[0] = 0xD000000000000015;
  v141[1] = 0x80000001000B7BC0;
  LOBYTE(v137) = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  v67._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v67);
  swift_bridgeObjectRelease();
  v68._uint64_t countAndFlagsBits = 32;
  v68._object = (void *)0xE100000000000000;
  String.append(_:)(v68);
  uint64_t v69 = v141[0];
  uint64_t v70 = (void *)v141[1];
  v141[0] = v66;
  v141[1] = v65;
  swift_bridgeObjectRetain();
  v71._uint64_t countAndFlagsBits = v69;
  v71._object = v70;
  String.append(_:)(v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = v141[0];
  uint64_t v72 = v141[1];
  v141[0] = 0;
  v141[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v141, "progressEvent=");
  HIBYTE(v141[1]) = -18;
  sub_10005281C(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent));
  id v137 = (id)String.init(cString:)();
  uint64_t v138 = v74;
  v75._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v75);
  swift_bridgeObjectRelease();
  v76._uint64_t countAndFlagsBits = 32;
  v76._object = (void *)0xE100000000000000;
  String.append(_:)(v76);
  uint64_t v77 = v141[0];
  uint64_t v78 = (void *)v141[1];
  v141[0] = v73;
  v141[1] = v72;
  swift_bridgeObjectRetain();
  v79._uint64_t countAndFlagsBits = v77;
  v79._object = v78;
  String.append(_:)(v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = v141[0];
  uint64_t v80 = v141[1];
  strcpy((char *)v141, "productName=");
  BYTE5(v141[1]) = 0;
  HIWORD(v141[1]) = -5120;
  uint64_t v82 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8);
  id v137 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  uint64_t v138 = v82;
  swift_bridgeObjectRetain();
  v83._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v83);
  swift_bridgeObjectRelease();
  v84._uint64_t countAndFlagsBits = 32;
  v84._object = (void *)0xE100000000000000;
  String.append(_:)(v84);
  uint64_t v85 = v141[0];
  int v86 = (void *)v141[1];
  v141[0] = v81;
  v141[1] = v80;
  swift_bridgeObjectRetain();
  v87._uint64_t countAndFlagsBits = v85;
  v87._object = v86;
  String.append(_:)(v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v89 = v141[0];
  uint64_t v88 = v141[1];
  strcpy((char *)v141, "stereoRole=");
  HIDWORD(v141[1]) = -352321536;
  sub_100053134(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole));
  id v137 = (id)String.init(cString:)();
  uint64_t v138 = v90;
  v91._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v91);
  swift_bridgeObjectRelease();
  v92._uint64_t countAndFlagsBits = 32;
  v92._object = (void *)0xE100000000000000;
  String.append(_:)(v92);
  uint64_t v93 = v141[0];
  uint64_t v94 = (void *)v141[1];
  v141[0] = v89;
  v141[1] = v88;
  swift_bridgeObjectRetain();
  v95._uint64_t countAndFlagsBits = v93;
  v95._object = v94;
  String.append(_:)(v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v97 = v141[0];
  uint64_t v96 = v141[1];
  v141[0] = 0;
  v141[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v141[0] = 0xD000000000000017;
  v141[1] = 0x80000001000B7C40;
  LOBYTE(v137) = *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
  v98._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v98);
  swift_bridgeObjectRelease();
  v99._uint64_t countAndFlagsBits = 32;
  v99._object = (void *)0xE100000000000000;
  String.append(_:)(v99);
  uint64_t v100 = v141[0];
  int v101 = (void *)v141[1];
  v141[0] = v97;
  v141[1] = v96;
  swift_bridgeObjectRetain();
  v102._uint64_t countAndFlagsBits = v100;
  v102._object = v101;
  String.append(_:)(v102);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v104 = v141[0];
  uint64_t v103 = v141[1];
  strcpy((char *)v141, "deviceGUID=");
  HIDWORD(v141[1]) = -352321536;
  uint64_t v105 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
  id v137 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  uint64_t v138 = v105;
  swift_bridgeObjectRetain();
  v106._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v106);
  swift_bridgeObjectRelease();
  v107._uint64_t countAndFlagsBits = 32;
  v107._object = (void *)0xE100000000000000;
  String.append(_:)(v107);
  uint64_t v108 = v141[0];
  uint64_t v109 = (void *)v141[1];
  v141[0] = v104;
  v141[1] = v103;
  swift_bridgeObjectRetain();
  v110._uint64_t countAndFlagsBits = v108;
  v110._object = v109;
  String.append(_:)(v110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v112 = v141[0];
  uint64_t v111 = v141[1];
  v141[0] = 0;
  v141[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v141[0] = v136;
  v141[1] = 0x80000001000B7C60;
  uint64_t v113 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
  id v137 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
  uint64_t v138 = v113;
  swift_bridgeObjectRetain();
  v114._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v114);
  swift_bridgeObjectRelease();
  v115._uint64_t countAndFlagsBits = 32;
  v115._object = (void *)0xE100000000000000;
  String.append(_:)(v115);
  uint64_t v116 = v141[0];
  id v117 = (void *)v141[1];
  v141[0] = v112;
  v141[1] = v111;
  swift_bridgeObjectRetain();
  v118._uint64_t countAndFlagsBits = v116;
  v118._object = v117;
  String.append(_:)(v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v120 = v141[0];
  uint64_t v119 = v141[1];
  strcpy((char *)v141, "imageName=");
  BYTE3(v141[1]) = 0;
  HIDWORD(v141[1]) = -369098752;
  uint64_t v121 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8);
  id v137 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
  uint64_t v138 = v121;
  swift_bridgeObjectRetain();
  v122._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v122);
  swift_bridgeObjectRelease();
  v123._uint64_t countAndFlagsBits = 32;
  v123._object = (void *)0xE100000000000000;
  String.append(_:)(v123);
  uint64_t v124 = v141[0];
  uint64_t v125 = (void *)v141[1];
  v141[0] = v120;
  v141[1] = v119;
  swift_bridgeObjectRetain();
  v126._uint64_t countAndFlagsBits = v124;
  v126._object = v125;
  String.append(_:)(v126);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v128 = v141[0];
  uint64_t v127 = v141[1];
  v141[0] = 0;
  v141[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v141[0] = 0xD000000000000011;
  v141[1] = 0x80000001000B7C20;
  LOBYTE(v137) = sub_10004D328() & 1;
  v129._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  v130._uint64_t countAndFlagsBits = 32;
  v130._object = (void *)0xE100000000000000;
  String.append(_:)(v130);
  uint64_t v131 = v141[0];
  unsigned int v132 = (void *)v141[1];
  v141[0] = v128;
  v141[1] = v127;
  swift_bridgeObjectRetain();
  v133._uint64_t countAndFlagsBits = v131;
  v133._object = v132;
  String.append(_:)(v133);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v134._uint64_t countAndFlagsBits = 62;
  v134._object = (void *)0xE100000000000000;
  String.append(_:)(v134);
  swift_bridgeObjectRelease();
  return v141[0];
}

uint64_t sub_100052730()
{
  return sub_10004E8D0();
}

const char *sub_100052754(int a1)
{
  unint64_t result = "Unknown";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = "D22ish";
      break;
    case 2:
      unint64_t result = "SEish";
      break;
    case 3:
      unint64_t result = "J3XXish";
      break;
    case 4:
      unint64_t result = "N112ish";
      break;
    case 5:
      unint64_t result = "B520ish";
      break;
    case 6:
      unint64_t result = "B620ish";
      break;
    case 7:
      unint64_t result = "J255ish";
      break;
    default:
      unint64_t result = "?";
      break;
  }
  return result;
}

const char *sub_10005281C(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        unint64_t result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        unint64_t result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        unint64_t result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        unint64_t result = "SU-No-SetupCancelled";
        break;
      case 904:
        unint64_t result = "SU-No-SetupObliterate";
        break;
      case 905:
        unint64_t result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        unint64_t result = "SysDrop AirDrop Event";
        break;
      case 907:
        unint64_t result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        unint64_t result = "SysDrop Cancel Event";
        break;
      case 909:
        unint64_t result = "File Transfer Progress Event";
        break;
      case 910:
        unint64_t result = "File Transfer Completed Event";
        break;
      case 911:
        unint64_t result = "iOSWiFiSetup";
        break;
      case 912:
        unint64_t result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        unint64_t result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            unint64_t result = "AuthAccountsStart";
            break;
          case 803:
            unint64_t result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            unint64_t result = "AuthAccountsStoreProgress";
            break;
          case 805:
            unint64_t result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          unint64_t result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          unint64_t result = "TVLSFinish";
          break;
        case 270:
          unint64_t result = "TVLSEstimateStart";
          break;
        case 272:
          unint64_t result = "TVLSEstimateFinal";
          break;
        case 274:
          unint64_t result = "TVLSEstimateFailed";
          break;
        case 276:
          unint64_t result = "TVLSTryAgain";
          break;
        case 277:
          unint64_t result = "TVLSToneBegan";
          break;
        case 278:
          unint64_t result = "TVLCalStart";
          break;
        case 279:
          unint64_t result = "TVLCalStep";
          break;
        case 280:
          unint64_t result = "TVLCalFailed";
          break;
        case 281:
          unint64_t result = "TVLCalTryAgain";
          break;
        case 282:
          unint64_t result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          unint64_t result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            unint64_t result = "iCloudStart";
          }
          else
          {
            if (a1 != 224) {
              return "?";
            }
            unint64_t result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }
        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              unint64_t result = "Error";
              break;
            case 31:
              unint64_t result = "SessionStarted";
              break;
            case 32:
              unint64_t result = "SessionEnded";
              break;
            case 33:
              unint64_t result = "SessionSecured";
              break;
            case 35:
              unint64_t result = "ConnectStart";
              break;
            case 40:
              unint64_t result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        unint64_t result = "BasicConfigStart";
        break;
      case 'Z':
        unint64_t result = "BasicConfigFinish";
        break;
      case '\\':
        unint64_t result = "StepStart";
        break;
      case '^':
        unint64_t result = "StepFinish";
        break;
      case '_':
        unint64_t result = "PreFinish";
        break;
        unint64_t result = "SetupFinished";
        break;
      case 'a':
        unint64_t result = "SetupResumed";
        break;
      case 'b':
        unint64_t result = "SetupSuspend";
        break;
      case 'c':
        unint64_t result = "SetupPeerSWUpdate";
        break;
      case 'd':
        unint64_t result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

const char *sub_100053134(unsigned int a1)
{
  if (a1 > 3) {
    return "?";
  }
  else {
    return off_1000DBB70[a1];
  }
}

id sub_100053158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_100053234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_100053704();
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1000A5C3C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unsigned __int16 v13 = (unsigned __int16)sub_100053324(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 & 0x1FF;
}

unsigned __int8 *sub_100053324(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000535CC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    int v13 = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    char v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    char v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    char v11 = (void *)_StringObject.sharedUTF8.getter();
  }
  uint64_t result = sub_100053758((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = BYTE1(result) & 1;
    int v13 = result | ((BYTE1(result) & 1) << 8);
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
    return v13 | (LOBYTE(v14[0]) << 16);
  }
  return result;
}

uint64_t sub_1000536A4(unsigned int a1)
{
  if (a1 > 0x10) {
    return 16;
  }
  else {
    return byte_1000B0E8C[a1];
  }
}

unint64_t sub_1000536C4()
{
  unint64_t result = qword_1000EEF70;
  if (!qword_1000EEF70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EEF70);
  }
  return result;
}

unint64_t sub_100053704()
{
  unint64_t result = qword_1000EEF78;
  if (!qword_1000EEF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EEF78);
  }
  return result;
}

uint64_t sub_100053758(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_100048C20(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  unint64_t result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_100048C20(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_100048C20(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  unint64_t result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  unsigned int v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unsigned int v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v32 = a6 + 55;
        }
        else
        {
          unsigned __int8 v31 = 97;
          unsigned __int8 v32 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v33 = a6 + 48;
        }
        else {
          unsigned __int8 v33 = 58;
        }
        if (v19)
        {
          LOBYTE(v24) = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v33)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                unsigned __int8 v29 = 0;
                int v30 = 1;
                if (v36 < 0x61 || v36 >= v31) {
                  return v29 | (v30 << 8);
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            if (((v24 * (unsigned __int16)a6) & 0xFF00) != 0) {
              goto LABEL_96;
            }
            unsigned int v24 = (v24 * a6) + (v36 + v37);
            if ((v24 >> 8)) {
              goto LABEL_96;
            }
            ++v34;
            --v35;
          }
          while (v35);
LABEL_72:
          int v30 = 0;
          unsigned __int8 v29 = v24;
          return v29 | (v30 << 8);
        }
        goto LABEL_95;
      }
LABEL_96:
      unsigned __int8 v29 = 0;
      int v30 = 1;
      return v29 | (v30 << 8);
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v38 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = a6 + 55;
      }
      else
      {
        unsigned __int8 v38 = 97;
        unsigned __int8 v39 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v40 = a6 + 48;
      }
      else {
        unsigned __int8 v40 = 58;
      }
      if (v19)
      {
        LOBYTE(v41) = 0;
        do
        {
          unsigned int v42 = *v19;
          if (v42 < 0x30 || v42 >= v40)
          {
            if (v42 < 0x41 || v42 >= v39)
            {
              unsigned __int8 v29 = 0;
              int v30 = 1;
              if (v42 < 0x61 || v42 >= v38) {
                return v29 | (v30 << 8);
              }
              char v43 = -87;
            }
            else
            {
              char v43 = -55;
            }
          }
          else
          {
            char v43 = -48;
          }
          if (((v41 * (unsigned __int16)a6) & 0xFF00) != 0) {
            goto LABEL_96;
          }
          unsigned int v41 = (v41 * a6) + (v42 + v43);
          if ((v41 >> 8)) {
            goto LABEL_96;
          }
          ++v19;
          --result;
        }
        while (result);
        int v30 = 0;
        unsigned __int8 v29 = v41;
        return v29 | (v30 << 8);
      }
      goto LABEL_95;
    }
    goto LABEL_96;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        LOBYTE(v24) = 0;
        unsigned int v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned __int8 v29 = 0;
              int v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | (v30 << 8);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (((v24 * (unsigned __int16)a6) & 0xFF00) != 0) {
            goto LABEL_96;
          }
          unsigned int v24 = (v24 * a6) - (v27 + v28);
          if ((v24 & 0xFFFFFF00) != 0) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_72;
          }
        }
      }
LABEL_95:
      unsigned __int8 v29 = 0;
      int v30 = 0;
      return v29 | (v30 << 8);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_100053BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdjustedImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SFPairingFlags()
{
  return &type metadata for SFPairingFlags;
}

void *sub_100053C24()
{
  unint64_t result = sub_100053C44();
  qword_1000F3B80 = (uint64_t)result;
  return result;
}

void *sub_100053C44()
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(6899277, 0xE300000000000000, 1u, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  char v1 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x656D75736552, 0xE600000000000000, 2u, v1);
  swift_bridgeObjectRelease();
  char v2 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6D6574737953, 0xE600000000000000, 4u, v2);
  swift_bridgeObjectRelease();
  char v3 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6369766544726550, 0xE900000000000065, 8u, v3);
  swift_bridgeObjectRelease();
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6E6569736E617254, 0xE900000000000074, 0x10u, v4);
  swift_bridgeObjectRelease();
  char v5 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(1868983881, 0xE400000000000000, 0x20u, v5);
  swift_bridgeObjectRelease();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x7373655372657355, 0xEB000000006E6F69, 0x40u, v6);
  swift_bridgeObjectRelease();
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x556E49746C697542, 0xE900000000000049, 0x80u, v7);
  swift_bridgeObjectRelease();
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6C6175736956, 0xE600000000000000, 0x100u, v8);
  swift_bridgeObjectRelease();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(4408910, 0xE300000000000000, 0x200u, v9);
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(1769105747, 0xE400000000000000, 0x400u, v10);
  swift_bridgeObjectRelease();
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6F69647541, 0xE500000000000000, 0x800u, v11);
  swift_bridgeObjectRelease();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x4449656C707041, 0xE700000000000000, 0x1000u, v12);
  swift_bridgeObjectRelease();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x496874754169464DLL, 0xE900000000000043, 0x2000u, v13);
  swift_bridgeObjectRelease();
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x7774666F5369464DLL, 0xEF74726543657261, 0x4000u, v14);
  swift_bridgeObjectRelease();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6E656B6F5469464DLL, 0xE800000000000000, 0x8000u, v15);
  swift_bridgeObjectRelease();
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x636572726F636E49, 0xE900000000000074, 0x10000u, v16);
  swift_bridgeObjectRelease();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x656C74746F726854, 0xE800000000000000, 0x20000u, v17);
  swift_bridgeObjectRelease();
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x686374614DLL, 0xE500000000000000, 0x40000u, v18);
  swift_bridgeObjectRelease();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x7465736552, 0xE500000000000000, 0x80000u, v19);
  swift_bridgeObjectRelease();
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0xD000000000000012, 0x80000001000B81E0, 0x100000u, v20);
  swift_bridgeObjectRelease();
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0xD000000000000013, 0x80000001000B8200, 0x200000u, v21);
  swift_bridgeObjectRelease();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x74694B656D6F48, 0xE700000000000000, 0x400000u, v22);
  swift_bridgeObjectRelease();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x6552657571696E55, 0xEC000000656D7573, 0x800000u, v23);
  swift_bridgeObjectRelease();
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x74655374696C7053, 0xEA00000000007075, 0x1000000u, v24);
  swift_bridgeObjectRelease();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0xD000000000000010, 0x80000001000B8220, 0x2000000u, v25);
  swift_bridgeObjectRelease();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x5574694B656D6F48, 0xEB00000000726573, 0x4000000u, v26);
  swift_bridgeObjectRelease();
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x615063696C627550, 0xEE0064726F777373, 0x8000000u, v27);
  swift_bridgeObjectRelease();
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x566874754169464DLL, 0xE900000000000033, 0x10000000u, v28);
  swift_bridgeObjectRelease();
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0xD000000000000012, 0x80000001000B8240, 0x20000000u, v29);
  swift_bridgeObjectRelease();
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056BA0(0x69687372656E774FLL, 0xEE00666F6F725070, 0x40000000u, v30);
  swift_bridgeObjectRelease();
  return &_swiftEmptyDictionarySingleton;
}

unint64_t sub_1000543E8(int a1)
{
  if (qword_1000ED770 != -1) {
LABEL_36:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v2 = qword_1000F3B80;
  uint64_t v3 = qword_1000F3B80 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(qword_1000F3B80 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(qword_1000F3B80 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  char v10 = _swiftEmptyArrayStorage;
  while (v6)
  {
    unint64_t v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v12 = v11 | (v9 << 6);
LABEL_26:
    Swift::UInt32 v16 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v12);
    if ((v16 & ~a1) == 0)
    {
      swift_beginAccess();
      uint64_t v17 = qword_1000F3B80;
      if (*(void *)(qword_1000F3B80 + 16) && (unint64_t v18 = sub_1000552D8(v16), (v19 & 1) != 0))
      {
        char v20 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v18);
        uint64_t v21 = v20[1];
        uint64_t v30 = *v20;
        swift_endAccess();
        swift_bridgeObjectRetain();
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          unint64_t result = (unint64_t)sub_100054F1C(0, v10[2] + 1, 1, v10);
          char v10 = (void *)result;
        }
        char v22 = v10;
        unint64_t v23 = v10[2];
        char v24 = v22;
        unint64_t v25 = v22[3];
        if (v23 >= v25 >> 1)
        {
          unint64_t result = (unint64_t)sub_100054F1C((void *)(v25 > 1), v23 + 1, 1, v24);
          char v24 = (void *)result;
        }
        v24[2] = v23 + 1;
        char v26 = &v24[2 * v23];
        char v10 = v24;
        v26[4] = v30;
        v26[5] = v21;
      }
      else
      {
        unint64_t result = swift_endAccess();
      }
    }
  }
  int64_t v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v13 >= v7) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v13);
  ++v9;
  if (v14) {
    goto LABEL_25;
  }
  int64_t v9 = v13 + 1;
  if (v13 + 1 >= v7) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v9);
  if (v14) {
    goto LABEL_25;
  }
  int64_t v9 = v13 + 2;
  if (v13 + 2 >= v7) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v9);
  if (v14) {
    goto LABEL_25;
  }
  int64_t v9 = v13 + 3;
  if (v13 + 3 >= v7) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v9);
  if (v14) {
    goto LABEL_25;
  }
  int64_t v9 = v13 + 4;
  if (v13 + 4 >= v7) {
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v9);
  if (v14)
  {
LABEL_25:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_26;
  }
  int64_t v15 = v13 + 5;
  if (v15 >= v7)
  {
LABEL_34:
    swift_release();
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._uint64_t countAndFlagsBits = 8233;
    v28._object = (void *)0xE200000000000000;
    String.append(_:)(v28);
    v29._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0xD000000000000019;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

_DWORD *sub_100054734@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100054740()
{
  return sub_1000543E8(*v0);
}

void sub_100054748(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_100054750@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_100054764@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_100054778@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10005478C(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1000547BC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1000547E8@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_10005480C(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_100054820(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_100054834(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_100054848@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10005485C(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_100054870(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_100054884(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_100054898()
{
  return *v0 == 0;
}

_DWORD *sub_1000548A8(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1000548BC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_100057900(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_100054900()
{
  unint64_t result = qword_1000EEF80;
  if (!qword_1000EEF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EEF80);
  }
  return result;
}

unint64_t sub_100054958()
{
  unint64_t result = qword_1000EEF88;
  if (!qword_1000EEF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EEF88);
  }
  return result;
}

unint64_t sub_1000549B0()
{
  unint64_t result = qword_1000EEF90;
  if (!qword_1000EEF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EEF90);
  }
  return result;
}

unint64_t sub_100054A08()
{
  unint64_t result = qword_1000EEF98;
  if (!qword_1000EEF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EEF98);
  }
  return result;
}

uint64_t sub_100054A5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000EE48(&qword_1000EEFB0);
  uint64_t v10 = *(void *)(type metadata accessor for URLQueryItem() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for URLQueryItem() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000577A8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

char *sub_100054CC4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_100054D04(a1, a2, a3, a4, &qword_1000EFF70, (void (*)(void, int64_t, char *, char *))sub_100057970);
}

char *sub_100054CE4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_100054D04(a1, a2, a3, a4, &qword_1000EE3B8, (void (*)(void, int64_t, char *, char *))sub_100057A64);
}

char *sub_100054D04(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, void (*a6)(void, int64_t, char *, char *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      int64_t v12 = *((void *)a4 + 2);
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_10000EE48(a5);
      int64_t v13 = (char *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 1;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 5);
      uint64_t v16 = v13 + 32;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v13 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v16 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[32 * v11 + 32]) {
          memmove(v16, a4 + 32, 32 * v11);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_100054E20(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000EE48(&qword_1000EEFC8);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100057B70(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100054F1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000EE48(&qword_1000EEFA0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100057C58(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10005502C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000EE48((uint64_t *)&unk_1000EFF80);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100057D4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_10005513C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_1000553D4(a1, v4);
}

unint64_t sub_100055184(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10005549C(a1, a2, v4);
}

unint64_t sub_1000551FC(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_100055580(a1, v2);
}

unint64_t sub_100055290(unsigned __int8 a1)
{
  uint64_t v2 = static Hasher._hash(seed:bytes:count:)();

  return sub_1000556F8(a1, v2);
}

unint64_t sub_1000552D8(Swift::UInt32 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_100055798(a1, v2);
}

unint64_t sub_100055344(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_100055580(a1, v2);
}

unint64_t sub_1000553D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100015310(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10000F474((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10005549C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    int64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100055580(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1000556F8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100055798(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100055834(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000EE48(&qword_1000EDB70);
  char v43 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unsigned __int8 v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v41) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v42 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v42 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v42 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v41) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v42 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (v43)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v46 = *(void *)(v25 + 32);
      long long v44 = v26;
      long long v45 = v27;
      Swift::String v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
    }
    else
    {
      sub_100015310(v25, (uint64_t)&v44);
      unsigned __int8 v31 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
      uint64_t v29 = *v31;
      uint64_t v30 = v31[1];
      swift_bridgeObjectRetain();
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v11 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v44;
    long long v17 = v45;
    *(void *)(v15 + 32) = v46;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    char v18 = (void *)(*(void *)(v7 + 56) + 16 * v14);
    void *v18 = v29;
    v18[1] = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v22 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100055B64(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000EE48(&qword_1000ED9A8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_10000F464((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_100015310(v25, (uint64_t)&v38);
      sub_10000F578(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_10000F464(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100055E7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000EE48(&qword_1000EDA28);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v40) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v41 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    uint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 48 * v20;
    if (v42)
    {
      long long v29 = *(_OWORD *)v28;
      long long v30 = *(_OWORD *)(v28 + 32);
      long long v44 = *(_OWORD *)(v28 + 16);
      long long v45 = v30;
      long long v43 = v29;
    }
    else
    {
      sub_100016FA4((char *)v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v27;
    v15[1] = v26;
    uint64_t v16 = (_OWORD *)(*(void *)(v7 + 56) + 48 * v14);
    long long v17 = v43;
    long long v18 = v45;
    v16[1] = v44;
    _OWORD v16[2] = v18;
    _OWORD *v16 = v17;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v22 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000561B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000EE48(&qword_1000EEFA8);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v27);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      long long v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *long long v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10005649C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000EE48(&qword_1000EEFC0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v31 = v3;
    int64_t v8 = 0;
    int64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v32 = -1 << v30;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void **)(*(void *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        id v29 = v28;
      }
      uint64_t result = static Hasher._hash(seed:bytes:count:)();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100056758(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10005513C(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100056E94();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_100055834(v15, a4 & 1);
  unint64_t v21 = sub_10005513C(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_16:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_100015310(a3, (uint64_t)v30);
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = v18[6] + 40 * v12;
  uint64_t v24 = v31;
  long long v25 = v30[1];
  *(_OWORD *)uint64_t v23 = v30[0];
  *(_OWORD *)(v23 + 16) = v25;
  *(void *)(v23 + 32) = v24;
  uint64_t v26 = (void *)(v18[7] + 16 * v12);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18[2] = v29;
  return result;
}

_OWORD *sub_1000568C4(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  int64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10005513C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100057078();
      goto LABEL_7;
    }
    sub_100055B64(v13, a3 & 1);
    unint64_t v19 = sub_10005513C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100015310(a2, (uint64_t)v21);
      return sub_100056E18(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_10000E470((uint64_t)v17);

  return sub_10000F464(a1, v17);
}

uint64_t sub_100056A10(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100055184(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100057260();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 48 * v12;
      return sub_100057E40((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_100055E7C(v15, a4 & 1);
  unint64_t v21 = sub_100055184(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = (_OWORD *)(v18[7] + 48 * v12);
  long long v25 = *a1;
  long long v26 = a1[2];
  v24[1] = a1[1];
  v24[2] = v26;
  *uint64_t v24 = v25;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100056BA0(uint64_t a1, uint64_t a2, Swift::UInt32 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000552D8(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100057454();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000561B4(result, a4 & 1);
  uint64_t result = sub_1000552D8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100056CE0(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100055290(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_100057604();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      _OWORD v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_10005649C(v13, a3 & 1);
  unint64_t v18 = sub_100055290(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

_OWORD *sub_100056E18(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_10000F464(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_100056E94()
{
  uint64_t v1 = v0;
  sub_10000EE48(&qword_1000EDB70);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    sub_100015310(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v26);
    char v16 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(v4 + 48) + 40 * v15;
    uint64_t v20 = v27;
    long long v21 = v26[1];
    *(_OWORD *)uint64_t v19 = v26[0];
    *(_OWORD *)(v19 + 16) = v21;
    *(void *)(v19 + 32) = v20;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + 16 * v15);
    void *v22 = v18;
    v22[1] = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100057078()
{
  uint64_t v1 = v0;
  sub_10000EE48(&qword_1000ED9A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_100015310(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_10000F578(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_10000F464(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100057260()
{
  uint64_t v1 = v0;
  sub_10000EE48(&qword_1000EDA28);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v28 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    sub_100016FA4((char *)(*(void *)(v2 + 56) + 48 * v15), (uint64_t)v29);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    unint64_t v22 = (_OWORD *)(*(void *)(v4 + 56) + v20);
    long long v24 = v29[1];
    long long v23 = v29[2];
    _OWORD *v22 = v29[0];
    v22[1] = v24;
    void v22[2] = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100057454()
{
  uint64_t v1 = v0;
  sub_10000EE48(&qword_1000EEFA8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    unint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    void *v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100057604()
{
  uint64_t v1 = v0;
  sub_10000EE48(&qword_1000EEFC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1000577A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for URLQueryItem() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100057900(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  uint64_t v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100057938(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100057970(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100057A64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_10000EE48(&qword_1000EEFB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100057B70(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100057C58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100057D4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100057E40(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_100057EA0()
{
  uint64_t v1 = v0;
  v116.receiver = v0;
  v116.super_class = (Class)type metadata accessor for ScannerViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v3 = v2;
  [v2 setClipsToBounds:1];

  id v4 = [v1 contentView];
  unint64_t v5 = self;
  id v6 = [v5 clearColor];
  [v4 setBackgroundColor:v6];

  id v7 = [v1 contentView];
  [v7 setOpaque:0];

  id v8 = [v1 contentView];
  id v9 = [v8 titleView];

  if (v9)
  {
    id v10 = [v5 clearColor];
    [v9 setBackgroundColor:v10];
  }
  id v11 = [v1 contentView];
  id v12 = [v11 titleView];

  if (v12)
  {
    [v12 setOpaque:0];
  }
  int64_t v13 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_scannerEngineViewController];
  [v1 addChildViewController:v13];
  id v14 = [v13 view];
  if (!v14) {
    goto LABEL_33;
  }
  unint64_t v15 = v14;
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v16 = [v1 view];
  if (!v16)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  int64_t v17 = v16;
  id v18 = [v13 view];
  if (!v18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  int64_t v19 = v18;
  [v17 addSubview:v18];

  uint64_t v20 = *(char **)&v1[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_viewfinderViewController];
  [v1 addChildViewController:v20];
  id v21 = [v20 view];
  if (!v21)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v22 = v21;
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v23 = [v1 view];
  if (!v23)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unint64_t v24 = v23;
  id v25 = [v20 view];
  if (!v25)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  unint64_t v26 = v25;
  [v24 addSubview:v25];

  id v27 = [objc_allocWithZone((Class)UIView) init];
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v28 = [v5 clearColor];
  [v27 setBackgroundColor:v28];

  [v27 setOpaque:0];
  id v29 = [v1 contentView];
  [v29 addSubview:v27];

  uint64_t v30 = OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v;
  PRXCardDefaultSize();
  double v32 = v31;
  double v33 = *(double *)(*(void *)&v20[v30]
                  + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth);
  id v34 = [v1 contentView];
  id v35 = [v34 mainContentGuide];

  sub_10000EE48(&qword_1000EF140);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1000B10B0;
  id v37 = [v13 view];
  if (!v37)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v38 = v37;
  id v39 = [v37 leftAnchor];

  id v40 = [v1 view];
  if (!v40)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v41 = v40;
  id v42 = [v40 leftAnchor];

  id v43 = [v39 constraintEqualToAnchor:v42];
  *(void *)(v36 + 32) = v43;
  id v44 = [v13 view];
  if (!v44)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  long long v45 = v44;
  id v46 = [v44 rightAnchor];

  id v47 = [v1 view];
  if (!v47)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v48 = v47;
  id v49 = [v47 rightAnchor];

  id v50 = [v46 constraintEqualToAnchor:v49];
  *(void *)(v36 + 40) = v50;
  id v51 = [v13 view];
  if (!v51)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  id v52 = v51;
  id v53 = [v51 heightAnchor];

  id v54 = [v1 view];
  if (!v54)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v55 = v54;
  id v56 = [v54 heightAnchor];

  id v57 = [v53 constraintEqualToAnchor:v56 multiplier:2.0];
  *(void *)(v36 + 48) = v57;
  id v58 = [v13 view];
  if (!v58)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v59 = v58;
  id v60 = [v58 centerYAnchor];

  id v61 = [v1 view];
  if (!v61)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v62 = v61;
  id v63 = [v61 centerYAnchor];

  id v64 = [v60 constraintEqualToAnchor:v63];
  *(void *)(v36 + 56) = v64;
  id v65 = [v20 view];
  if (!v65)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v66 = v65;
  id v67 = [v65 leftAnchor];

  id v68 = [v1 view];
  if (!v68)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v69 = v68;
  id v70 = [v68 leftAnchor];

  id v71 = [v67 constraintEqualToAnchor:v70];
  *(void *)(v36 + 64) = v71;
  id v72 = [v20 view];
  if (!v72)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v73 = v72;
  id v74 = [v72 rightAnchor];

  id v75 = [v1 view];
  if (!v75)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  Swift::String v76 = v75;
  id v77 = [v75 rightAnchor];

  id v78 = [v74 constraintEqualToAnchor:v77];
  *(void *)(v36 + 72) = v78;
  id v79 = [v20 view];
  if (!v79)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v80 = v79;
  id v81 = [v79 heightAnchor];

  id v82 = [v1 view];
  if (!v82)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  Swift::String v83 = v82;
  id v84 = [v82 heightAnchor];

  id v85 = [v81 constraintEqualToAnchor:v84 multiplier:3.0];
  *(void *)(v36 + 80) = v85;
  id v86 = [v20 view];
  if (!v86)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  Swift::String v87 = v86;
  double v88 = v32 * 0.6 + v33 + v33;
  id v115 = self;
  id v89 = [v87 centerYAnchor];

  id v90 = [v35 bottomAnchor];
  id v91 = [v89 constraintEqualToAnchor:v90 constant:v88 * -0.5];

  *(void *)(v36 + 88) = v91;
  id v92 = [v27 heightAnchor];
  id v93 = [v92 constraintEqualToConstant:v88];

  *(void *)(v36 + 96) = v93;
  id v94 = [v27 topAnchor];
  id v95 = [v35 topAnchor];
  id v96 = [v94 constraintEqualToAnchor:v95];

  *(void *)(v36 + 104) = v96;
  id v97 = [v27 bottomAnchor];
  id v98 = [v35 bottomAnchor];
  id v99 = [v97 constraintEqualToAnchor:v98];

  *(void *)(v36 + 112) = v99;
  id v100 = [v27 leadingAnchor];
  id v101 = [v35 leadingAnchor];
  id v102 = [v100 constraintEqualToAnchor:v101];

  *(void *)(v36 + 120) = v102;
  id v103 = [v27 trailingAnchor];
  id v104 = [v35 trailingAnchor];
  id v105 = [v103 constraintEqualToAnchor:v104];

  *(void *)(v36 + 128) = v105;
  specialized Array._endMutation()();
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v115 activateConstraints:isa];

  id v107 = [v1 view];
  if (!v107)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v108 = v107;
  id v109 = [v20 view];
  if (!v109)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  Swift::String v110 = v109;
  [v108 sendSubviewToBack:v109];

  id v111 = [v1 view];
  if (!v111)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v112 = v111;
  id v113 = [v13 view];
  if (v113)
  {
    Swift::String v114 = v113;
    [v112 sendSubviewToBack:v113];

    return;
  }
LABEL_57:
  __break(1u);
}

id sub_100058D0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScannerViewController();
  [super dealloc];
}

uint64_t sub_100058DD4()
{
  return type metadata accessor for ScannerViewController();
}

uint64_t type metadata accessor for ScannerViewController()
{
  uint64_t result = qword_1000EF008;
  if (!qword_1000EF008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100058E28()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for HomePodSetupWiFiInfoTableView.InfoElement()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HomePodSetupWiFiInfoTableView.InfoElement(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HomePodSetupWiFiInfoTableView.InfoElement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HomePodSetupWiFiInfoTableView.InfoElement(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for HomePodSetupWiFiInfoTableView.InfoElement(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePodSetupWiFiInfoTableView.InfoElement(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupWiFiInfoTableView.InfoElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriLanguage()
{
  return &type metadata for SiriLanguage;
}

uint64_t sub_1000590A8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF018);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF018);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100059170(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_1000591A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1000591E0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    char v3 = 1;
  }
  else {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_10005922C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_100059250(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

unint64_t sub_1000592F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x7A696C61636F6C20;
  v9._object = (void *)0xEF3D656D614E6465;
  String.append(_:)(v9);
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = a3;
  v10._object = a4;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0xD000000000000013;
}

unint64_t sub_1000593EC()
{
  return sub_1000592F4(*(void *)v0, *(void **)(v0 + 8), *(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1000593FC()
{
  unint64_t result = qword_1000EF030;
  if (!qword_1000EF030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EF030);
  }
  return result;
}

Swift::Int sub_100059450(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10005A0FC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000594BC(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000594BC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100059BA8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v109 = result;
  Swift::String v106 = a1;
  if (v3 < 2)
  {
    Swift::String v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      Swift::String v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      id v98 = v11;
      uint64_t v108 = v8;
      if (v12 >= 2)
      {
        uint64_t v99 = *v106;
        do
        {
          unint64_t v100 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v99) {
            goto LABEL_159;
          }
          id v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v12 + 24];
          sub_100059C84((char *)(v99 + 32 * v102), (char *)(v99 + 32 * *(void *)&v98[16 * v12 + 16]), v99 + 32 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v101 = sub_10005A0E8((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_149;
          }
          id v104 = &v101[16 * v100 + 32];
          *(void *)id v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v12 > v105) {
            goto LABEL_150;
          }
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          id v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v108[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v108 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v107 = *a1 + 24;
  Swift::String v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v110 = v3;
  uint64_t v111 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = v10 + 32 * v9;
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = *(void *)(v14 + 24);
    uint64_t v17 = v10 + 32 * v13;
    if (v15 == *(void *)(v17 + 16) && v16 == *(void *)(v17 + 24))
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    id v21 = (void *)(v107 + 32 * v20);
    do
    {
      uint64_t v23 = v10 + 32 * v9;
      if (*(v21 - 1) == *(void *)(v23 + 16) && *v21 == *(void *)(v23 + 24))
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      Swift::Int v22 = v20 + 1;
      v21 += 4;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 32 * v20;
        uint64_t v26 = 32 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            id v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            long long v31 = *(_OWORD *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 16);
            uint64_t v33 = *(void *)(v10 + v26 + 24);
            long long v34 = *(_OWORD *)(v10 + v25 - 16);
            *id v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(_OWORD *)(v30 - 32) = v31;
            *(void *)(v30 - 16) = v32;
            *(void *)(v30 - 8) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v109) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v11 = sub_100059F30(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v49 = *((void *)v11 + 2);
    unint64_t v48 = *((void *)v11 + 3);
    unint64_t v12 = v49 + 1;
    if (v49 >= v48 >> 1) {
      Swift::String v11 = sub_100059F30((char *)(v48 > 1), v49 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v50 = v11 + 32;
    id v51 = &v11[16 * v49 + 32];
    *(void *)id v51 = v13;
    *((void *)v51 + 1) = v9;
    if (v49)
    {
      uint64_t v10 = v111;
      while (1)
      {
        unint64_t v52 = v12 - 1;
        if (v12 >= 4)
        {
          id v57 = &v50[16 * v12];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_135;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_136;
          }
          unint64_t v64 = v12 - 2;
          id v65 = &v50[16 * v12 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_138;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_141;
          }
          if (v69 >= v60)
          {
            Swift::String v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_145;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v81 = *((void *)v11 + 4);
            uint64_t v82 = *((void *)v11 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_99;
          }
          uint64_t v54 = *((void *)v11 + 4);
          uint64_t v53 = *((void *)v11 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_137;
        }
        unint64_t v64 = v12 - 2;
        id v70 = &v50[16 * v12 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_140;
        }
        Swift::String v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_143;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_144;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_105:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v75) {
          goto LABEL_139;
        }
        Swift::String v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_142;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v92 = v10;
        id v93 = &v50[16 * v91];
        uint64_t v94 = *(void *)v93;
        id v95 = &v50[16 * v52];
        uint64_t v96 = *((void *)v95 + 1);
        sub_100059C84((char *)(v92 + 32 * *(void *)v93), (char *)(v92 + 32 * *(void *)v95), v92 + 32 * v96, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v96 < v94) {
          goto LABEL_132;
        }
        if (v52 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)id v93 = v94;
        *(void *)&v50[16 * v91 + 8] = v96;
        unint64_t v97 = *((void *)v11 + 2);
        if (v52 >= v97) {
          goto LABEL_134;
        }
        unint64_t v12 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((void *)v11 + 2) = v97 - 1;
        BOOL v80 = v97 > 2;
        uint64_t v10 = v111;
        if (!v80) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v111;
LABEL_15:
    Swift::Int v3 = v110;
    if (v9 >= v110)
    {
      Swift::String v8 = v108;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v109)) {
    goto LABEL_153;
  }
  if (v13 + v109 >= v3) {
    Swift::Int v35 = v3;
  }
  else {
    Swift::Int v35 = v13 + v109;
  }
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      uint64_t v36 = (uint64_t *)(v107 + 32 * v9);
      do
      {
        uint64_t v37 = v10 + 32 * v9;
        uint64_t v38 = *(void *)(v37 + 16);
        uint64_t v39 = *(void *)(v37 + 24);
        Swift::Int v40 = v13;
        uint64_t v41 = v36;
        do
        {
          BOOL v42 = v38 == *(v41 - 5) && v39 == *(v41 - 4);
          if (v42 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          id v43 = v41 - 3;
          uint64_t v39 = *v41;
          long long v45 = *(_OWORD *)(v41 - 7);
          long long v44 = *(_OWORD *)(v41 - 5);
          *(v41 - 4) = *v41;
          v41 -= 4;
          uint64_t v46 = v41[1];
          uint64_t v47 = v41[2];
          uint64_t v38 = v41[3];
          *(_OWORD *)id v43 = v45;
          *((_OWORD *)v43 + 1) = v44;
          *(v41 - 3) = v46;
          *(v41 - 2) = v47;
          *(v41 - 1) = v38;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 4;
      }
      while (v9 != v35);
      Swift::Int v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100059BA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    uint64_t v9 = v7 + 32 * v4;
    Swift::Int result = *(void *)(v9 + 16);
    uint64_t v10 = *(void *)(v9 + 24);
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 5) && v10 == *(v12 - 4);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = v12 - 3;
      uint64_t v10 = *v12;
      long long v16 = *(_OWORD *)(v12 - 7);
      long long v15 = *(_OWORD *)(v12 - 5);
      *(v12 - 4) = *v12;
      v12 -= 4;
      uint64_t v17 = v12[1];
      uint64_t v18 = v12[2];
      Swift::Int result = v12[3];
      *(_OWORD *)uint64_t v14 = v16;
      *((_OWORD *)v14 + 1) = v15;
      *(v12 - 3) = v17;
      *(v12 - 2) = v18;
      *(v12 - 1) = result;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100059C84(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  uint64_t v30 = __src;
  id v29 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      Swift::Int v20 = &v4[32 * v13];
      Swift::Int v28 = v20;
      uint64_t v30 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        id v21 = (char *)(a3 - 32);
        do
        {
          Swift::Int v22 = v21 + 32;
          BOOL v23 = *((void *)v20 - 2) == *((void *)v6 - 2) && *((void *)v20 - 1) == *((void *)v6 - 1);
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            Swift::Int v28 = v20 - 32;
            if (v22 < v20 || v21 >= v20 || v22 != v20)
            {
              long long v26 = *((_OWORD *)v20 - 1);
              *(_OWORD *)id v21 = *((_OWORD *)v20 - 2);
              *((_OWORD *)v21 + 1) = v26;
            }
            unint64_t v24 = v6;
            v20 -= 32;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            unint64_t v24 = v6 - 32;
            if (v22 != v6 || v21 >= v6)
            {
              long long v25 = *((_OWORD *)v6 - 1);
              *(_OWORD *)id v21 = *(_OWORD *)v24;
              *((_OWORD *)v21 + 1) = v25;
            }
            uint64_t v30 = v6 - 32;
            if (v24 <= v7) {
              break;
            }
          }
          v21 -= 32;
          uint64_t v6 = v24;
        }
        while (v20 > v4);
      }
LABEL_52:
      sub_10005A02C((void **)&v30, &v29, &v28);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    uint64_t v14 = &v4[32 * v10];
    Swift::Int v28 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      long long v15 = v4;
      while (1)
      {
        BOOL v16 = *((void *)v6 + 2) == *((void *)v15 + 2) && *((void *)v6 + 3) == *((void *)v15 + 3);
        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v4 = v15 + 32;
          uint64_t v18 = v15;
          uint64_t v17 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4) {
              goto LABEL_26;
            }
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          uint64_t v17 = v6 + 32;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_26;
          }
        }
        long long v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
        *((_OWORD *)v7 + 1) = v19;
LABEL_26:
        v7 += 32;
        if (v15 < v14)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        id v29 = v4;
        uint64_t v30 = v7;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100059F30(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48(&qword_1000EF038);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10005A02C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_10005A0E8(uint64_t a1)
{
  return sub_100059F30(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10005A0FC(uint64_t a1)
{
  return sub_10008EFE8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10005A110(uint64_t a1, unint64_t a2)
{
  id v4 = [self sharedInstance];
  uint64_t v5 = v4;
  if (v4
    && (id v6 = v4,
        NSString v7 = String._bridgeToObjectiveC()(),
        NSString v8 = String._bridgeToObjectiveC()(),
        id v9 = [v6 localizedNameForSiriLanguage:v7 inDisplayLanguage:v8],
        v6,
        v7,
        v8,
        v9))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    if (qword_1000ED778 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000EF018);
    swift_bridgeObjectRetain();
    int64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_100048718(a1, a2, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "SiriLanguage: No localization found for language code: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return a1;
}

uint64_t sub_10005A384(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    Swift::Int v3 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = *(v2 - 1);
      unint64_t v6 = *v2;
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_10005A110(v5, v6);
      if (v8)
      {
        uint64_t v11 = v7;
        uint64_t v12 = v8;
        uint64_t v13 = v9;
        uint64_t v14 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::Int v3 = sub_10005502C(0, v3[2] + 1, 1, v3);
        }
        unint64_t v16 = v3[2];
        unint64_t v15 = v3[3];
        if (v16 >= v15 >> 1) {
          Swift::Int v3 = sub_10005502C((void *)(v15 > 1), v16 + 1, 1, v3);
        }
        void v3[2] = v16 + 1;
        id v4 = &v3[4 * v16];
        v4[4] = v11;
        v4[5] = v12;
        v4[6] = v13;
        v4[7] = v14;
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Int v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = v3;
  swift_bridgeObjectRetain();
  sub_100059450((uint64_t *)&v18);
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

unint64_t sub_10005A4D4(char a1)
{
  unint64_t result = 0x4C45434E4143;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 1162760004;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x425F50555F544553;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0x45554E49544E4F43;
      break;
    case 12:
      unint64_t result = 0x485F455441445055;
      break;
    case 13:
      unint64_t result = 0xD000000000000024;
      break;
    case 14:
      unint64_t result = 0xD000000000000025;
      break;
    case 15:
      unint64_t result = 0x5F524553555F4948;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    case 17:
      unint64_t result = 0xD000000000000016;
      break;
    case 18:
      unint64_t result = 0xD000000000000017;
      break;
    case 19:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 20:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 21:
      unint64_t result = 0xD000000000000014;
      break;
    case 22:
      unint64_t result = 0xD000000000000012;
      break;
    case 23:
      unint64_t result = 0xD000000000000015;
      break;
    case 24:
      unint64_t result = 0xD000000000000018;
      break;
    case 25:
      unint64_t result = 0xD000000000000023;
      break;
    case 26:
      unint64_t result = 0xD000000000000026;
      break;
    case 27:
      unint64_t result = 0xD000000000000021;
      break;
    case 28:
      unint64_t result = 0xD000000000000020;
      break;
    case 29:
      unint64_t result = 0xD000000000000023;
      break;
    case 30:
      unint64_t result = 0xD000000000000019;
      break;
    case 31:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 32:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 33:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 34:
    case 37:
    case 55:
    case 59:
    case 62:
    case 65:
    case 78:
    case 79:
    case 88:
    case 101:
    case 107:
    case -124:
    case -111:
    case -110:
    case -81:
    case -78:
      unint64_t result = 0xD000000000000022;
      break;
    case 35:
      unint64_t result = 0xD000000000000021;
      break;
    case 36:
      unint64_t result = 0xD000000000000027;
      break;
    case 38:
      unint64_t result = 0xD000000000000021;
      break;
    case 39:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 40:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 41:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 42:
      unint64_t result = 0xD000000000000027;
      break;
    case 43:
      unint64_t result = 0xD000000000000024;
      break;
    case 44:
      unint64_t result = 0xD000000000000023;
      break;
    case 45:
      unint64_t result = 0xD000000000000025;
      break;
    case 46:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 47:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 48:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 49:
      unint64_t result = 0xD000000000000024;
      break;
    case 50:
      unint64_t result = 0xD000000000000025;
      break;
    case 51:
      unint64_t result = 0xD000000000000027;
      break;
    case 52:
      unint64_t result = 0xD000000000000023;
      break;
    case 53:
      unint64_t result = 0xD000000000000024;
      break;
    case 54:
      unint64_t result = 0xD000000000000030;
      break;
    case 56:
      unint64_t result = 0xD000000000000021;
      break;
    case 57:
      unint64_t result = 0xD000000000000021;
      break;
    case 58:
      unint64_t result = 0xD000000000000021;
      break;
    case 60:
      unint64_t result = 0xD000000000000024;
      break;
    case 61:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 63:
      unint64_t result = 0xD000000000000020;
      break;
    case 64:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 66:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 67:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 68:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 69:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 70:
      unint64_t result = 0xD000000000000031;
      break;
    case 71:
      unint64_t result = 0xD000000000000037;
      break;
    case 72:
      unint64_t result = 0xD000000000000028;
      break;
    case 73:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 74:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 75:
      unint64_t result = 0xD000000000000029;
      break;
    case 76:
      unint64_t result = 0xD000000000000020;
      break;
    case 77:
      unint64_t result = 0xD000000000000023;
      break;
    case 80:
      unint64_t result = 0xD000000000000025;
      break;
    case 81:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 82:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 83:
      unint64_t result = 0xD000000000000017;
      break;
    case 84:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 85:
      unint64_t result = 0xD000000000000019;
      break;
    case 86:
      unint64_t result = 0x574F4E5F544F4ELL;
      break;
    case 87:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 89:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 90:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 91:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 92:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 93:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 94:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 95:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 96:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 97:
      unint64_t result = 0xD000000000000021;
      break;
    case 98:
      unint64_t result = 0xD000000000000021;
      break;
    case 99:
      unint64_t result = 0xD000000000000023;
      break;
    case 100:
      unint64_t result = 0xD000000000000023;
      break;
    case 102:
      unint64_t result = 0xD000000000000025;
      break;
    case 103:
      unint64_t result = 0xD000000000000024;
      break;
    case 104:
      unint64_t result = 0xD000000000000024;
      break;
    case 105:
      unint64_t result = 0xD000000000000020;
      break;
    case 106:
      unint64_t result = 0xD000000000000021;
      break;
    case 108:
      unint64_t result = 0xD000000000000020;
      break;
    case 109:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 110:
      unint64_t result = 0xD000000000000020;
      break;
    case 111:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 112:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 113:
      unint64_t result = 0xD000000000000024;
      break;
    case 114:
      unint64_t result = 0xD000000000000025;
      break;
    case 115:
      unint64_t result = 0xD000000000000025;
      break;
    case 116:
      unint64_t result = 0xD000000000000026;
      break;
    case 117:
      unint64_t result = 0xD000000000000017;
      break;
    case 118:
      unint64_t result = 0xD000000000000024;
      break;
    case 119:
      unint64_t result = 0xD000000000000023;
      break;
    case 120:
      unint64_t result = 0xD000000000000026;
      break;
    case 121:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 122:
      unint64_t result = 0xD000000000000020;
      break;
    case 123:
      unint64_t result = 0xD000000000000025;
      break;
    case 124:
      unint64_t result = 0xD000000000000021;
      break;
    case 125:
      unint64_t result = 0x4F4D5F4E5241454CLL;
      break;
    case 126:
      unint64_t result = 1346980691;
      break;
    case 127:
      unint64_t result = 0xD000000000000019;
      break;
    case -128:
      unint64_t result = 0xD000000000000017;
      break;
    case -127:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case -126:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case -125:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case -123:
      unint64_t result = 0xD000000000000025;
      break;
    case -122:
      unint64_t result = 0xD000000000000024;
      break;
    case -121:
      unint64_t result = 0xD000000000000028;
      break;
    case -120:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case -119:
      unint64_t result = 0xD000000000000021;
      break;
    case -118:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case -117:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case -116:
      unint64_t result = 0xD000000000000029;
      break;
    case -115:
      unint64_t result = 0xD000000000000023;
      break;
    case -114:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -113:
      unint64_t result = 0xD000000000000020;
      break;
    case -112:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -109:
      unint64_t result = 0xD000000000000026;
      break;
    case -108:
      unint64_t result = 0xD000000000000020;
      break;
    case -107:
      unint64_t result = 0xD000000000000020;
      break;
    case -106:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -105:
      unint64_t result = 0xD000000000000020;
      break;
    case -104:
    case -102:
      unint64_t result = 0x53534552474F5250;
      break;
    case -103:
      unint64_t result = 0xD000000000000013;
      break;
    case -101:
      unint64_t result = 0xD000000000000011;
      break;
    case -100:
      unint64_t result = 0xD000000000000010;
      break;
    case -99:
      unint64_t result = 0xD000000000000010;
      break;
    case -98:
      unint64_t result = 0xD000000000000025;
      break;
    case -97:
      unint64_t result = 0xD000000000000028;
      break;
    case -96:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -95:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case -94:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case -93:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case -92:
      unint64_t result = 0xD000000000000020;
      break;
    case -91:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case -90:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case -89:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case -88:
      unint64_t result = 0xD000000000000018;
      break;
    case -87:
      unint64_t result = 0xD000000000000015;
      break;
    case -86:
      unint64_t result = 0xD000000000000018;
      break;
    case -85:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -84:
      unint64_t result = 0xD000000000000012;
      break;
    case -83:
      unint64_t result = 0xD000000000000015;
      break;
    case -82:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case -80:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case -79:
      unint64_t result = 0xD000000000000012;
      break;
    case -77:
      unint64_t result = 0xD000000000000025;
      break;
    case -76:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case -75:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case -74:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -73:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10005B8B8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF040);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF040);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  Swift::Int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

char *sub_10005B980(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionPresenter] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceOptionsView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voicePreviewer] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceOptionsViewHeightConstraint] = 0;
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_currentVoiceSelection] = 0;
  v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_allowsRandomSelection] = 2;
  uint64_t v7 = &v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_viewModel];
  uint64_t v8 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController] = 0;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController();
  [super initWithContentView:0];
  id v10 = objc_allocWithZone((Class)VTUIVoiceSelectionViewController);
  uint64_t v11 = (char *)v9;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 initCompactWithRecognitionLanguage:v12 allowsRandomSelection:a3 & 1 customVoicePreviewer:a4 delegate:v11];

  uint64_t v14 = *(void **)&v11[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController];
  *(void *)&v11[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController] = v13;

  return v11;
}

void sub_10005BB20()
{
  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController();
  [super viewDidLoad];
  if (qword_1000ED780 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000133A0(v1, (uint64_t)qword_1000EF040);
  uint64_t v2 = v0;
  Swift::Int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    unint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePod Setup %@ viewDidLoad", v5, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    Swift::Int v3 = v2;
  }

  uint64_t v8 = *(Class *)((char *)&v2->isa
                + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController);
  if (v8)
  {
    id v9 = v8;
    id v10 = [v9 view];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 setTranslatesAutoresizingMaskIntoConstraints:0];

      id v12 = [v2 contentView];
      id v13 = [v9 view];
      if (v13)
      {
        uint64_t v14 = v13;
        [v12 addSubview:v13];

        id v15 = [v2 contentView];
        id v16 = [v15 mainContentGuide];

        sub_10000EE48(&qword_1000EF140);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1000B0BC0;
        id v18 = [v9 view];
        if (v18)
        {
          long long v19 = v18;
          id v20 = [v18 topAnchor];

          id v21 = [v16 topAnchor];
          id v22 = [v20 constraintEqualToAnchor:v21 constant:-PRXCardDefaultLayoutMargins[0]];

          *(void *)(v17 + 32) = v22;
          id v23 = [v9 view];
          if (v23)
          {
            unint64_t v24 = v23;
            id v25 = [v23 bottomAnchor];

            id v26 = [v16 bottomAnchor];
            id v27 = [v25 constraintEqualToAnchor:v26];

            *(void *)(v17 + 40) = v27;
            id v28 = [v9 view];
            if (v28)
            {
              id v29 = v28;
              id v30 = [v28 leadingAnchor];

              id v31 = [v16 leadingAnchor];
              id v32 = [v30 constraintEqualToAnchor:v31 constant:-PRXCardDefaultLayoutMargins[1]];

              *(void *)(v17 + 48) = v32;
              id v33 = [v9 view];
              if (v33)
              {
                long long v34 = v33;
                Swift::Int v35 = self;
                id v36 = [v34 trailingAnchor];

                id v37 = [v16 trailingAnchor];
                id v38 = [v36 constraintEqualToAnchor:v37 constant:PRXCardDefaultLayoutMargins[3]];

                *(void *)(v17 + 56) = v38;
                specialized Array._endMutation()();
                sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v35 activateConstraints:isa];

                [v2 addChildViewController:v9];
                [v9 didMoveToParentViewController:v2];
                sub_10005C40C();

                return;
              }
LABEL_20:
              __break(1u);
              return;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_10005C1E8(char a1, SEL *a2, const char *a3)
{
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController();
  [super a1 & 1];
  if (qword_1000ED780 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF040);
  uint64_t v8 = v3;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v12 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, a3, v11, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v9 = v8;
  }
}

void sub_10005C40C()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 continueButton];
    [v3 setBackgroundImage:0 forState:0];
    os_log_type_t v4 = self;
    id v5 = v3;
    id v6 = [v4 secondarySystemBackgroundColor];
    [v5 setBackgroundColor:v6];

    [v5 _setContinuousCornerRadius:PRXProminentButtonCornerRadius];
    id v7 = [v5 titleLabel];
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [self defaultMetrics];
      id v10 = [self systemFontOfSize:17.0 weight:UIFontWeightMedium];
      id v11 = [v9 scaledFontForFont:v10];

      [v8 setFont:v11];
    }
    id v12 = [v4 labelColor];
    [v5 setTitleColor:v12 forState:0];

    id v13 = [v4 secondaryLabelColor];
    [v5 setTitleColor:v13 forState:2];
  }
}

id sub_10005C688()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController();
  [super dealloc];
}

uint64_t sub_10005C76C()
{
  return type metadata accessor for HomePodSetupSiriVoiceSelectionViewController();
}

uint64_t type metadata accessor for HomePodSetupSiriVoiceSelectionViewController()
{
  uint64_t result = qword_1000EF0B8;
  if (!qword_1000EF0B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005C7C0()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10005C878(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_10005C8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005C9A4(a3);
}

uint64_t sub_10005C9A4(uint64_t a1)
{
  uint64_t v3 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED780 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EF040);
  id v7 = v1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v16[0] = a1;
    id v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)id v10 = 138412290;
    v16[1] = v7;
    id v12 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v7;

    a1 = v16[0];
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePod Setup %@ presenter:didUpdate", v10, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1000133D8(a1, (uint64_t)v5);
  uint64_t v13 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  uint64_t v14 = (uint64_t)v7 + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v5, v14, &qword_1000EF130);
  return swift_endAccess();
}

uint64_t sub_10005CC1C(void *a1)
{
  if (qword_1000ED780 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF040);
  id v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_10003DD8C(0, (unint64_t *)&qword_1000EF138);
    id v7 = v3;
    uint64_t v8 = String.init<A>(reflecting:)();
    *(void *)id v12 = sub_100048718(v8, v9, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Siri voice was chosen: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    v13[3] = &type metadata for VoiceOption;
    v13[4] = &off_1000DC048;
    v13[0] = v3;
    memset(&v12[8], 0, 40);
    v12[0] = 1;
    id v11 = v3;
    sub_100013664((uint64_t)v13, (uint64_t)&v12[8], &qword_1000ED970);
    v14[0] = *(_OWORD *)v12;
    v14[1] = *(_OWORD *)&v12[16];
    void v14[2] = *(_OWORD *)&v12[32];
    sub_10007A7CC(v14);

    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v14);
  }
  return result;
}

uint64_t sub_10005CE90()
{
  if (qword_1000ED780 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EF040);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Siri voice requests dismissal", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10007A560(5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10005CFB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF148);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF148);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10005D078()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (void *)((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (char *)v38 - v10;
  id v12 = (objc_class *)type metadata accessor for HomePodSetupPINEntryViewController();
  v42.receiver = v1;
  v42.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_viewModel];
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED788 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF148);
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupPINEntry: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED788 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF148);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    long long v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)id v21 = 136315138;
      v38[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_100048718(v23, v22, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupPINEntry: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    NSString v24 = String._bridgeToObjectiveC()();
    [v1 setTitle:v24];

    NSString v25 = String._bridgeToObjectiveC()();
    [v1 setSubtitle:v25];

    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = swift_bridgeObjectRetain();
    sub_1000932E0(v27, (uint64_t)sub_10005F188, v26);
    swift_bridgeObjectRelease();
    swift_release();
    id v28 = &v11[v5[9]];
    uint64_t v30 = *(void *)v28;
    uint64_t v29 = *((void *)v28 + 1);
    id v31 = &v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_activityIndicatorTitle];
    *(void *)id v31 = v30;
    *((void *)v31 + 1) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)&v11[v5[18]];
    [v1 setDismissalType:v32];
    if ((v32 & 2) == 0 && *(void *)&v11[v5[19] + 8])
    {
      NSString v33 = String._bridgeToObjectiveC()();
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = String._bridgeToObjectiveC()();
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = [v1 dismissalConfirmationActionWithTitle:v33 message:v34 confirmButtonTitle:v35 cancelButtonTitle:v36];

      [v1 setDismissButtonAction:v37];
    }
    sub_10001712C((uint64_t)v11);
  }
}

void sub_10005D5F0(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED788 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF148);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    sub_100048718(v6, v7, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupPINEntry: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (sub_1000106E8(v1) == 0x7361506B61657073 && v8 == 0xED000065646F6373)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return;
    }
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (void *)Strong;
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 showActivityIndicatorWithStatus:v12];

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v11;
      id v14 = v11;
      sub_10009EB90((uint64_t)sub_10005F190, v13);

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10005D940(char a1)
{
  uint64_t v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for HomePodSetupPINEntryViewController();
  [super viewDidAppear:a1 & 1];
  if (qword_1000ED788 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EF148);
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupPINEntry: viewDidAppear", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    id v10 = v2;
    sub_10009E754((uint64_t)sub_10005F120, v9);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10005DAB8(void *a1)
{
  id v38 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v1 - 8);
  uint64_t v43 = v1;
  __chkstk_darwin(v1);
  uint64_t v40 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTimeInterval();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  NSString v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v34 - v13;
  if (qword_1000ED788 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000133A0(v15, (uint64_t)qword_1000EF148);
  os_log_type_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "HomePodSetupPINEntry: viewDidAppear:Speaking of the Pincode with instructions Completed", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t result = IsAppleInternalBuild();
  if (result)
  {
    if (qword_1000ED740 != -1) {
      uint64_t result = swift_once();
    }
    unint64_t v20 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
    if ((v20 & 0x2000000000000000) != 0) {
      uint64_t v21 = HIBYTE(v20) & 0xF;
    }
    else {
      uint64_t v21 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode) & 0xFFFFFFFFFFFFLL;
    }
    if (v21)
    {
      unint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        NSString v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "HomePodSetupPINEntry: viewDidAppear:Automatically enter the passcode.", v24, 2u);
        swift_slowDealloc();
      }

      sub_1000150E4();
      uint64_t v35 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      *uint64_t v8 = 2;
      (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v5);
      + infix(_:_:)();
      (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v25 = v37;
      uint64_t v26 = *(void (**)(char *, uint64_t))(v36 + 8);
      v26(v12, v37);
      uint64_t v27 = swift_allocObject();
      id v28 = v38;
      *(void *)(v27 + 16) = v38;
      aBlock[4] = sub_10005F128;
      aBlock[5] = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100089B18;
      aBlock[3] = &unk_1000DBD00;
      uint64_t v29 = _Block_copy(aBlock);
      id v30 = v28;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10001512C();
      sub_10000EE48(&qword_1000EDEA0);
      sub_100015184();
      id v31 = v40;
      uint64_t v32 = v43;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      NSString v33 = (void *)v35;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v32);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v41);
      return ((uint64_t (*)(char *, uint64_t))v26)(v14, v25);
    }
  }
  return result;
}

uint64_t sub_10005E074(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2);
  uint64_t v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  id v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v16 = (char *)&v29 - v15;
  id v31 = a1;
  id v17 = [a1 passcodeEntryView];
  if (qword_1000ED740 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setText:v18];

  sub_1000150E4();
  uint64_t v29 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *uint64_t v9 = 2;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchTimeInterval.seconds(_:), v6);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  long long v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v31;
  *(void *)(v20 + 16) = v31;
  aBlock[4] = sub_10005F148;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089B18;
  aBlock[3] = &unk_1000DBD50;
  unint64_t v22 = _Block_copy(aBlock);
  id v23 = v21;
  swift_release();
  NSString v24 = v30;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001512C();
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  uint64_t v25 = v34;
  uint64_t v26 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v27 = (void *)v29;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

void sub_10005E54C(void *a1)
{
  id v2 = [a1 passcodeEntryView];
  [a1 didCompleteTextEntry:v2];
}

uint64_t sub_10005E608(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED788 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000133A0(v10, (uint64_t)qword_1000EF148);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "HomePodSetupPINEntry: Speaking of the Pincode Completed", v13, 2u);
    swift_slowDealloc();
  }

  sub_1000150E4();
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  aBlock[4] = sub_10005F198;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089B18;
  aBlock[3] = &unk_1000DBDF0;
  os_log_type_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001512C();
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10005E938(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED788 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EF148);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupPINEntry: didCompleteTextEntry called", v7, 2u);
    swift_slowDealloc();
  }

  NSString v8 = String._bridgeToObjectiveC()();
  [v2 showActivityIndicatorWithStatus:v8];

  id v9 = [a1 text];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (swift_unknownObjectWeakLoadStrong())
  {
    v16[3] = &type metadata for SimpleOption;
    void v16[4] = &off_1000DAEC0;
    uint64_t v13 = (void *)swift_allocObject();
    *(void *)&v15[40] = 0;
    v16[0] = v13;
    _OWORD v13[2] = 0x7972746E456E6970;
    v13[3] = 0xE800000000000000;
    v13[4] = v10;
    void v13[5] = v12;
    v13[6] = v10;
    v13[7] = v12;
    memset(&v15[8], 0, 32);
    v15[0] = 3;
    swift_bridgeObjectRetain();
    sub_100013664((uint64_t)v16, (uint64_t)&v15[8], &qword_1000ED970);
    v17[0] = *(_OWORD *)v15;
    v17[1] = *(_OWORD *)&v15[16];
    v17[2] = *(_OWORD *)&v15[32];
    sub_10007A7CC(v17);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v17);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

id sub_10005ECA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupPINEntryViewController();
  [super dealloc];
}

uint64_t sub_10005ED38()
{
  return type metadata accessor for HomePodSetupPINEntryViewController();
}

uint64_t type metadata accessor for HomePodSetupPINEntryViewController()
{
  uint64_t result = qword_1000EF198;
  if (!qword_1000EF198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005ED8C()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10005EE30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_10005EE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10005EE84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED788 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF148);
  NSString v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupPINEntry: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  if ([v2 isViewLoaded])
  {
    NSString v13 = String._bridgeToObjectiveC()();
    [v2 setTitle:v13];

    NSString v14 = String._bridgeToObjectiveC()();
    [v2 setSubtitle:v14];
  }
}

uint64_t sub_10005F0A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10005F0E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005F120()
{
  return sub_10005DAB8(*(void **)(v0 + 16));
}

uint64_t sub_10005F128()
{
  return sub_10005E074(*(void **)(v0 + 16));
}

uint64_t sub_10005F130(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005F140()
{
  return swift_release();
}

void sub_10005F148()
{
  sub_10005E54C(*(void **)(v0 + 16));
}

uint64_t sub_10005F150()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10005F188(char *a1)
{
}

uint64_t sub_10005F190()
{
  return sub_10005E608(*(void **)(v0 + 16));
}

id sub_10005F198()
{
  return [*(id *)(v0 + 16) hideActivityIndicator];
}

uint64_t sub_10005F1C8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF1A8);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF1A8);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10005F290()
{
  qword_1000F3BA8 = 0x4028000000000000;
}

void sub_10005F2A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  os_log_type_t v9 = (uint64_t *)((char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v45 - v10;
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupFeatureListViewController();
  v47.receiver = v1;
  v47.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel];
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED790 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF1A8);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupFeatureListViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED790 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF1A8);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    long long v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    v45[0] = (uint64_t)v11;
    if (v21)
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)unint64_t v22 = 136315138;
      uint64_t v24 = *v9;
      unint64_t v23 = v9[1];
      swift_bridgeObjectRetain();
      v45[1] = sub_100048718(v24, v23, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupFeatureListViewController: viewDidLoad with title %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_stackView];
    [v25 setAxis:1];
    [v25 setAlignment:3];
    [v25 setDistribution:3];
    if (qword_1000ED798 != -1) {
      swift_once();
    }
    [v25 setSpacing:*(double *)&qword_1000F3BA8, v45[0]];
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v26 = [v1 contentView];
    [v26 addSubview:v25];

    id v27 = [v1 contentView];
    id v28 = [v27 mainContentGuide];

    uint64_t v29 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1000B0BC0;
    id v31 = [v25 topAnchor];
    id v32 = [v28 topAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32];

    *(void *)(v30 + 32) = v33;
    id v34 = [v25 bottomAnchor];
    id v35 = [v28 bottomAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35 constant:-*(double *)&qword_1000F3BA8];

    *(void *)(v30 + 40) = v36;
    id v37 = [v25 leadingAnchor];
    id v38 = [v28 leadingAnchor];
    id v39 = [v37 constraintEqualToAnchor:v38];

    *(void *)(v30 + 48) = v39;
    id v40 = [v25 trailingAnchor];
    id v41 = [v28 trailingAnchor];
    id v42 = [v40 constraintEqualToAnchor:v41];

    *(void *)(v30 + 56) = v42;
    uint64_t v46 = v30;
    specialized Array._endMutation()();
    sub_100017190();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v29 activateConstraints:isa];

    uint64_t v44 = v45[0];
    sub_10005FA64(v45[0]);

    sub_10001712C(v44);
  }
}

uint64_t sub_10005FA64(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HomePodSetupViewModel(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v6 = String._bridgeToObjectiveC()();
  [v1 setTitle:v6];

  NSString v7 = String._bridgeToObjectiveC()();
  uint64_t v67 = v1;
  [v1 setSubtitle:v7];

  uint64_t v8 = *(int *)(v3 + 60);
  uint64_t v60 = a1;
  unint64_t v9 = *(void *)(a1 + v8);
  if (v9 >> 62) {
    goto LABEL_34;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v11 = &v67[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_features];
    uint64_t v66 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_stackView;
    uint64_t v65 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_lastFeatureView;
    unint64_t v73 = v9 & 0xC000000000000001;
    swift_beginAccess();
    unint64_t v12 = 0;
    uint64_t v62 = v9 & 0xFFFFFFFFFFFFFF8;
    unint64_t v61 = v9 + 32;
    unint64_t v64 = v78;
    long long v63 = xmmword_1000B08A0;
    uint64_t v71 = v5;
    uint64_t v72 = v3;
    uint64_t v69 = v10;
    unint64_t v70 = v9;
    uint64_t v68 = v11;
    while (1)
    {
      if (v73)
      {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v12 >= *(void *)(v62 + 16)) {
          goto LABEL_33;
        }
        id v14 = *(id *)(v61 + 8 * v12);
      }
      id v76 = v14;
      BOOL v15 = __OFADD__(v12, 1);
      unint64_t v16 = v12 + 1;
      if (v15) {
        break;
      }
      unint64_t v74 = v16;
      uint64_t v17 = *v11;
      if (*v11 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (v3)
        {
LABEL_14:
          unint64_t v75 = v17 & 0xC000000000000001;
          uint64_t v5 = 4;
          while (1)
          {
            unint64_t v9 = v5 - 4;
            id v18 = v75 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v17 + 8 * v5);
            long long v19 = v18;
            uint64_t v20 = v5 - 3;
            if (__OFADD__(v9, 1)) {
              break;
            }
            id v21 = [v18 title];
            uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v24 = v23;

            id v25 = [v76 title];
            uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v28 = v27;

            if (v22 == v26 && v24 == v28)
            {
              swift_bridgeObjectRelease_n();

LABEL_5:
              uint64_t v13 = v69;
              swift_bridgeObjectRelease_n();
              uint64_t v5 = v71;
              uint64_t v3 = v72;
              unint64_t v9 = v70;
              uint64_t v11 = v68;
              goto LABEL_6;
            }
            char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v30) {
              goto LABEL_5;
            }
            ++v5;
            if (v20 == v3) {
              goto LABEL_25;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v3 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v3) {
          goto LABEL_14;
        }
      }
LABEL_25:
      swift_bridgeObjectRelease_n();
      id v31 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupFeatureView());
      id v32 = v76;
      id v33 = sub_100017208(v32);
      [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v34 = v67;
      id v35 = *(void **)&v67[v66];
      [v35 addArrangedSubview:v33];
      id v36 = self;
      sub_10000EE48(&qword_1000EF140);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v63;
      id v38 = [v33 leadingAnchor];
      id v39 = [v35 leadingAnchor];
      id v40 = [v38 constraintEqualToAnchor:v39];

      *(void *)(v37 + 32) = v40;
      id v41 = [v33 trailingAnchor];
      id v42 = [v35 trailingAnchor];
      id v43 = [v41 constraintEqualToAnchor:v42];

      *(void *)(v37 + 40) = v43;
      aBlock[0] = v37;
      specialized Array._endMutation()();
      sub_100017190();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v36 activateConstraints:isa];

      [v33 setAlpha:0.0];
      long long v45 = self;
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v33;
      v78[2] = sub_100060870;
      v78[3] = v46;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v78[0] = sub_100089B18;
      v78[1] = &unk_1000DBE68;
      objc_super v47 = _Block_copy(aBlock);
      unint64_t v48 = v33;
      swift_release();
      [v45 animateWithDuration:v47 animations:0.5];
      _Block_release(v47);
      unint64_t v49 = *(void **)&v34[v65];
      *(void *)&v34[v65] = v48;
      id v50 = v48;

      id v51 = v68;
      swift_beginAccess();
      id v52 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      uint64_t v5 = v71;
      uint64_t v3 = v72;
      uint64_t v13 = v69;
      unint64_t v9 = v70;
      uint64_t v11 = v51;
LABEL_6:
      unint64_t v12 = v74;

      if (v12 == v13) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
  }
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v53 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_buttonsAdded;
  char v54 = v67[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_buttonsAdded];
  sub_1000133D8(v60, v5);
  if (v54) {
    return sub_10001712C(v5);
  }
  uint64_t v56 = *(void *)(*(void *)(v5 + *(int *)(v3 + 40)) + 16);
  uint64_t result = sub_10001712C(v5);
  if (v56)
  {
    v67[v53] = 1;
    uint64_t v57 = *(void *)(v60 + *(int *)(v3 + 40));
    uint64_t v58 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000932E0(v57, (uint64_t)sub_1000608D4, v58);
    return swift_release();
  }
  return result;
}

void sub_1000601C8(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED790 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF1A8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)uint64_t v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupFeatureListViewController: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      void v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

id sub_100060434()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupFeatureListViewController();
  return [super dealloc];
}

uint64_t sub_1000604E8()
{
  return type metadata accessor for HomePodSetupFeatureListViewController();
}

uint64_t type metadata accessor for HomePodSetupFeatureListViewController()
{
  uint64_t result = qword_1000EF208;
  if (!qword_1000EF208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006053C()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100060604(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_100060650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100060658(a3);
}

id sub_100060658(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED790 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF1A8);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupFeatureListViewController: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result) {
    return (id)sub_10005FA64(a1);
  }
  return result;
}

uint64_t sub_100060838()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100060870()
{
  return [*(id *)(v0 + 16) setAlpha:1.0];
}

uint64_t sub_100060884(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100060894()
{
  return swift_release();
}

uint64_t sub_10006089C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000608D4(char *a1)
{
}

id sub_1000608DC(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_buttonsAdded] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_features] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_lastFeatureView] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel];
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_stackView;
  id v6 = objc_allocWithZone((Class)UIStackView);
  uint64_t v7 = v1;
  *(void *)&v1[v5] = [v6 init];

  v9.receiver = v7;
  v9.super_class = (Class)type metadata accessor for HomePodSetupFeatureListViewController();
  return [super initWithContentView:a1];
}

uint64_t sub_1000609FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF220);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF220);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100060AC4(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel];
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_marketingItem] = a1;
  id v5 = objc_allocWithZone((Class)PRXCardContentView);
  id v6 = a1;
  id v7 = [v5 init];
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for HomePodSetupAMSUpsellViewController();
  [super initWithContentView:v7];

  id v9 = v8;
  sub_1000610A8();

  return v9;
}

void sub_100060BDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (void *)((char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  objc_super v11 = (char *)v24 - v10;
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupAMSUpsellViewController();
  v28.receiver = v1;
  v28.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED7A0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF220);
    BOOL v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupAMSUpsellViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED7A0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF220);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    long long v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v27 = v25;
      *(_DWORD *)id v21 = 136315138;
      v24[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_100048718(v23, v22, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupAMSUpsellViewController: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    [v1 setDismissalType:*(void *)&v11[*(int *)(v5 + 72)]];
    sub_100061678();
    sub_10001712C((uint64_t)v11);
  }
}

void sub_1000610A8()
{
  sub_10003DD8C(0, &qword_1000EF2E8);
  id v1 = [(id)swift_getObjCClassFromMetadata() createBagForSubProfile];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [objc_allocWithZone((Class)AMSUIMarketingItemViewController) initWithMarketingItem:*(void *)&v0[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_marketingItem] bag:v1];
    [v3 setDelegate:v0];
    [v3 setAnonymousMetrics:1];
    uint64_t v4 = self;
    id v5 = v3;
    id v6 = [v4 ams_sharedAccountStore];
    id v7 = [v6 ams_activeiTunesAccount];

    [v5 setAccount:v7];
    id v8 = [v5 preload];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v0;
    *(void *)(v9 + 24) = v5;
    v13[4] = sub_100062460;
    void v13[5] = v9;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    _OWORD v13[2] = sub_100068F90;
    v13[3] = &unk_1000DBF08;
    uint64_t v10 = _Block_copy(v13);
    id v11 = v5;
    uint64_t v12 = v0;
    swift_release();
    [v8 addFinishBlock:v10];
    _Block_release(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_1000612B0(uint64_t a1, uint64_t a2, char *a3, void *a4)
{
  id v5 = &unk_1000ED000;
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000ED7A0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000133A0(v6, (uint64_t)qword_1000EF220);
    swift_errorRetain();
    swift_errorRetain();
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_errorRetain();
      sub_10000EE48((uint64_t *)&unk_1000EF2F0);
      uint64_t v10 = String.init<A>(describing:)();
      sub_100048718(v10, v11, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupAMSUpsellViewController: preload error: %s", v9, 0xCu);
      swift_arrayDestroy();
      id v5 = (void *)&unk_1000ED000;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_13;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1000ED7A0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000133A0(v13, (uint64_t)qword_1000EF220);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupAMSUpsellViewController: preload success", v16, 2u);
      swift_slowDealloc();
    }

    id v7 = *(NSObject **)&a3[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic];
    *(void *)&a3[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic] = a4;
    id v17 = a4;
  }

LABEL_13:
  if (v5[244] != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1000133A0(v18, (uint64_t)qword_1000EF220);
  long long v19 = a3;
  os_log_type_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 67109120;
    LODWORD(v23) = *(Class *)((char *)&v19->isa
                            + OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic) != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "HomePodSetupAMSUpsellViewController: view controller preload complete: %{BOOL}d", v22, 8u);
    swift_slowDealloc();
  }
  else
  {

    os_log_type_t v20 = v19;
  }
}

void sub_100061678()
{
  id v1 = v0;
  if (qword_1000ED7A0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF220);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupAMSUpsellViewController: AppleMusic show StoreKit view\n", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic];
  if (v6)
  {
    id v7 = v6;
    id v8 = [v7 view];
    [v0 addChildViewController:v7];
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v9 = [v0 contentView];
    [v9 addSubview:v8];

    id v10 = [v1 contentView];
    [v10 cardStyle];

    id v11 = [v1 traitCollection];
    [v11 prx_cardSizeClass];

    PRXCardPreferredSize();
    double v13 = v12;
    id v14 = [v1 contentView];
    uint64_t v37 = [v14 mainContentGuide];

    os_log_type_t v15 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1000B1350;
    id v17 = [v1 contentView];
    id v18 = [v17 heightAnchor];

    id v19 = [v18 constraintEqualToConstant:v13];
    *(void *)(v16 + 32) = v19;
    id v20 = [v8 heightAnchor];
    id v21 = [v20 constraintEqualToConstant:v13];

    *(void *)(v16 + 40) = v21;
    id v22 = [v8 topAnchor];
    id v23 = [v37 topAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v16 + 48) = v24;
    id v25 = [v8 leadingAnchor];
    id v26 = [v37 leadingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    *(void *)(v16 + 56) = v27;
    id v28 = [v8 trailingAnchor];
    id v29 = [v37 trailingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    *(void *)(v16 + 64) = v30;
    id v31 = [v8 bottomAnchor];
    id v32 = [v37 bottomAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32];

    *(void *)(v16 + 72) = v33;
    specialized Array._endMutation()();
    sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v15 activateConstraints:isa];

    [v7 didMoveToParentViewController:v1];
  }
  else
  {
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v35))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v35, "HomePodSetupAMSUpsellViewController: AppleMusic controller was not initilized properly", v36, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_100061C0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupAMSUpsellViewController();
  [super dealloc];
}

uint64_t sub_100061CB0()
{
  return type metadata accessor for HomePodSetupAMSUpsellViewController();
}

uint64_t type metadata accessor for HomePodSetupAMSUpsellViewController()
{
  uint64_t result = qword_1000EF268;
  if (!qword_1000EF268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100061D04()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100061DB8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_100061E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100062230(a3);
}

uint64_t sub_100061E0C(void *a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v4 = v3;
  *(void *)&v27[0] = a3;
  swift_errorRetain();
  sub_10000EE48((uint64_t *)&unk_1000EF710);
  uint64_t v7 = String.init<A>(describing:)();
  unint64_t v9 = v8;
  if (a2)
  {
    uint64_t v10 = Dictionary.description.getter();
    unint64_t v12 = v11;
  }
  else
  {
    unint64_t v12 = 0xE400000000000000;
    uint64_t v10 = 1701736270;
  }
  if (qword_1000ED7A0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000133A0(v13, (uint64_t)qword_1000EF220);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    id v23 = a1;
    uint64_t v16 = v4;
    uint64_t v17 = v7;
    uint64_t v18 = swift_slowAlloc();
    *(void *)&v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    sub_100048718(v10, v12, (uint64_t *)v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v19 = v17;
    os_log_type_t v4 = v16;
    a1 = v23;
    *(void *)id v24 = sub_100048718(v19, v9, (uint64_t *)v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupAMSUpsellViewController: delegate didResolveWith called results: %s with error:%s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  [a1 willMoveToParentViewController:0];
  id v20 = [a1 view];
  [v20 removeFromSuperview];

  id v21 = [v4 presentingViewController];
  [v21 removeFromParentViewController];

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    memset(&v24[8], 0, 40);
    v24[0] = 1;
    sub_100013664((uint64_t)v25, (uint64_t)&v24[8], &qword_1000ED970);
    v27[0] = *(_OWORD *)v24;
    v27[1] = *(_OWORD *)&v24[16];
    _OWORD v27[2] = *(_OWORD *)&v24[32];
    sub_10007A7CC(v27);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v27);
  }
  return result;
}

id sub_100062230(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED7A0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF220);
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupAMSUpsellViewController: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result) {
    return [v2 setDismissalType:*(void *)(a1 + *(int *)(v11 + 72))];
  }
  return result;
}

uint64_t sub_100062420()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100062460(uint64_t a1, uint64_t a2)
{
  sub_1000612B0(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100062468(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100062478()
{
  return swift_release();
}

uint64_t sub_100062480()
{
  if ([v0 _remoteViewControllerProxy])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_100063D54((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    sub_10000EE48(&qword_1000EF3E8);
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10000F674((uint64_t)v4, &qword_1000EE410);
    return 0;
  }
}

void sub_1000625D4(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  id v3 = (void *)sub_100062480();
  if (v3)
  {
    [v3 setStatusBarHidden:1 withDuration:0.3];
    swift_unknownObjectRelease();
  }
  type metadata accessor for SoftwareUpdateRequiredViewController();
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v5 = [v1 presentProxCardFlowWithDelegate:v1 initialViewController:v4];
}

uint64_t type metadata accessor for SoftwareUpdateRequiredFlow()
{
  return self;
}

double sub_10006280C()
{
  double result = 30.0 - PRXMainContentMargin;
  *(double *)&qword_1000EF300 = 30.0 - PRXMainContentMargin;
  return result;
}

void sub_10006282C()
{
  qword_1000EF308 = 0x405A000000000000;
}

void sub_10006283C()
{
  qword_1000EF310 = 0x4043000000000000;
}

void sub_10006284C()
{
  qword_1000EF318 = 0x4026000000000000;
}

void sub_10006285C()
{
  qword_1000EF320 = 0x4039000000000000;
}

void sub_10006286C()
{
  id v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = sub_100007334(v2);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v4];

  void v16[6] = 0xD000000000000018;
  v16[7] = 0x80000001000B8C60;
  if (PRXIsPad())
  {
    uint64_t v5 = 0x534F444150495FLL;
    unint64_t v6 = 0xE700000000000000;
  }
  else
  {
    uint64_t v5 = 1397705055;
    unint64_t v6 = 0xE400000000000000;
  }
  String.append(_:)(*(Swift::String *)&v5);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setSubtitle:v9];

  [v1 setDismissalType:1];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100007334(v10);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  swift_retain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  void v16[4] = sub_100063DF4;
  void v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_100041068;
  v16[3] = &unk_1000DBF58;
  uint64_t v14 = _Block_copy(v16);
  id v15 = [self actionWithTitle:v13 style:0 handler:v14];

  _Block_release(v14);
  swift_release();
  swift_release();

  sub_100062FBC();
}

void sub_100062B68()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v2[4] = sub_100062C20;
  v2[5] = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 1107296256;
  _OWORD v2[2] = sub_100089B18;
  v2[3] = &unk_1000DBF80;
  id v1 = _Block_copy(v2);
  [Strong dismissViewControllerAnimated:1 completion:v1];
  _Block_release(v1);
}

uint64_t sub_100062C20()
{
  uint64_t v0 = sub_10000EE48(&qword_1000EDF98);
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_10000F674((uint64_t)v2, &qword_1000EDF98);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = [self defaultWorkspace];
  if (v8)
  {
    NSString v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    uint64_t v12 = v11;
    id v13 = sub_100007668();
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v25 = 0;
    unsigned __int8 v15 = [v10 openSensitiveURL:v12 withOptions:isa error:&v25];

    if (v15)
    {
      uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
      id v17 = v25;
      return v16(v6, v3);
    }
    id v18 = v25;
    uint64_t v19 = _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10000EE48((uint64_t *)&unk_1000EF400);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1000B0850;
    id v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v21._object = (void *)0x80000001000B8CD0;
    v21._uint64_t countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v21);
    v24[1] = v19;
    sub_10000EE48((uint64_t *)&unk_1000EF2F0);
    _print_unlocked<A, B>(_:_:)();
    id v22 = v25;
    unint64_t v23 = v26;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v23;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100062FBC()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UILayoutGuide) init];
  id v3 = [v0 contentView];
  [v3 addLayoutGuide:v2];

  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 imageNamed:v5];

  uint64_t v78 = v6;
  id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v6];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = [v1 contentView];
  [v8 addSubview:v7];

  id v9 = [objc_allocWithZone((Class)UIView) init];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v10 = self;
  id v11 = [v10 systemRedColor];
  [v9 setBackgroundColor:v11];

  id v12 = [v9 layer];
  if (qword_1000ED7B8 != -1) {
    swift_once();
  }
  [v12 setCornerRadius:*(double *)&qword_1000EF310 * 0.5];

  id v13 = [v1 contentView];
  [v13 addSubview:v9];

  id v14 = [objc_allocWithZone((Class)UILabel) init];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  unsigned __int8 v15 = self;
  sub_10003DD8C(0, (unint64_t *)&unk_1000EF3F0);
  Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  NSString v17 = [v15 localizedStringFromNumber:isa numberStyle:0];

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v14 setText:v17];

  id v18 = [v10 whiteColor];
  [v14 setTextColor:v18];

  [v14 setTextAlignment:1];
  id v19 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleCaption1];
  id v20 = [v19 fontDescriptorWithSymbolicTraits:2];

  if (v20)
  {
    uint64_t v21 = qword_1000ED7C8;
    id v22 = v20;
    if (v21 != -1) {
      swift_once();
    }
    id v23 = [self fontWithDescriptor:v22 size:*(double *)&qword_1000EF320];

    [v14 setFont:v23];
  }
  [v9 addSubview:v14];
  double v24 = 0.0;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC14HDSViewService36SoftwareUpdateRequiredViewController_offsetIcon) == 1)
  {
    if (qword_1000ED7A8 != -1) {
      swift_once();
    }
    double v24 = *(double *)&qword_1000EF300;
  }
  id v25 = [v1 contentView];
  id v26 = [v25 mainContentGuide];

  id v77 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000B13E0;
  id v28 = [v2 centerXAnchor];
  id v29 = [v26 centerXAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v27 + 32) = v30;
  id v31 = [v2 topAnchor];
  id v32 = [v26 topAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 constant:v24];

  *(void *)(v27 + 40) = v33;
  id v34 = [v2 bottomAnchor];
  id v35 = [v26 bottomAnchor];
  id v36 = [v34 constraintLessThanOrEqualToAnchor:v35];

  *(void *)(v27 + 48) = v36;
  id v37 = [v7 leadingAnchor];
  id v38 = [v2 leadingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v27 + 56) = v39;
  id v40 = [v7 trailingAnchor];
  id v41 = [v2 trailingAnchor];
  if (qword_1000ED7C0 != -1) {
    swift_once();
  }
  id v42 = [v40 constraintEqualToAnchor:v41 constant:-*(double *)&qword_1000EF318];

  *(void *)(v27 + 64) = v42;
  id v43 = [v7 topAnchor];
  id v44 = [v2 topAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:*(double *)&qword_1000EF318];

  *(void *)(v27 + 72) = v45;
  id v46 = [v7 bottomAnchor];
  id v47 = [v2 bottomAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v27 + 80) = v48;
  id v49 = [v7 widthAnchor];
  if (qword_1000ED7B0 != -1) {
    swift_once();
  }
  id v50 = [v49 constraintEqualToConstant:*(double *)&qword_1000EF308];

  *(void *)(v27 + 88) = v50;
  id v51 = [v7 heightAnchor];
  id v52 = [v7 widthAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v27 + 96) = v53;
  id v54 = [v9 topAnchor];
  id v55 = [v2 topAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55];

  *(void *)(v27 + 104) = v56;
  id v57 = [v9 trailingAnchor];
  id v58 = [v2 trailingAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  *(void *)(v27 + 112) = v59;
  id v60 = [v9 widthAnchor];
  id v61 = [v60 constraintEqualToConstant:*(double *)&qword_1000EF310];

  *(void *)(v27 + 120) = v61;
  id v62 = [v9 heightAnchor];
  id v63 = [v9 widthAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v27 + 128) = v64;
  id v65 = [v14 leadingAnchor];
  id v66 = [v9 leadingAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66];

  *(void *)(v27 + 136) = v67;
  id v68 = [v14 topAnchor];
  id v69 = [v9 topAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69];

  *(void *)(v27 + 144) = v70;
  id v71 = [v14 bottomAnchor];
  id v72 = [v9 bottomAnchor];
  id v73 = [v71 constraintEqualToAnchor:v72];

  *(void *)(v27 + 152) = v73;
  id v74 = [v14 trailingAnchor];
  id v75 = [v9 trailingAnchor];
  id v76 = [v74 constraintEqualToAnchor:v75];

  *(void *)(v27 + 160) = v76;
  specialized Array._endMutation()();
  sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
  Class v79 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v77 activateConstraints:v79];
}

id sub_100063C70()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for SoftwareUpdateRequiredViewController()
{
  return self;
}

uint64_t sub_100063D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063DBC()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100063DF4()
{
}

uint64_t sub_100063DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063E0C()
{
  return swift_release();
}

uint64_t sub_100063E1C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000F3BD8);
  sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100063EA0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF410);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF410);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100063F68(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (void *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000150E4();
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    swift_getObjectType();
    uint64_t v9 = swift_conformsToProtocol2();
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v9) {
      id v11 = a1;
    }
    else {
      id v11 = 0;
    }
    if (v11)
    {
      id v12 = *(void (**)(void *, uint64_t))(v2
                                                   + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation);
      if (v12)
      {
        id v13 = a1;
        sub_1000647BC((uint64_t)v12);
        v12(v11, v10);
        sub_1000647CC((uint64_t)v12);
      }
    }
    uint64_t v14 = OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController;
    unsigned __int8 v15 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController);
    if (v15)
    {
      [v15 pushViewController:a1 animated:1];
    }
    else
    {
      v22[1] = &OBJC_PROTOCOL___PRXCardContentProviding;
      uint64_t v16 = swift_dynamicCastObjCProtocolConditional();
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        id v19 = a1;
        if (Strong)
        {
          id v20 = [Strong presentProxCardFlowWithDelegate:v2 initialViewController:v17];
        }
        else
        {
          id v20 = 0;
        }
        uint64_t v21 = *(void **)(v2 + v14);
        *(void *)(v2 + v14) = v20;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1000641B8(int a1, char a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  char v8 = (uint64_t *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) & 1) == 0)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) = 1;
    if (qword_1000ED7D8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000133A0(v9, (uint64_t)qword_1000EF410);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109376;
      v18[3] = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 8) = 1024;
      v18[2] = a2 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupRouter: dismiss with type %d, animated: %{BOOL}d", (uint8_t *)v12, 0xEu);
      swift_slowDealloc();
    }

    id v13 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController);
    if (v13)
    {
      sub_1000150E4();
      uint64_t v14 = v13;
      *char v8 = static OS_dispatch_queue.main.getter();
      (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
      char v15 = _dispatchPreconditionTest(_:)();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
      if ((v15 & 1) == 0)
      {
        __break(1u);
        return;
      }
      [v14 dismissViewControllerAnimated:a2 & 1 completion:0];
    }
    else
    {
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v16, "HomePodSetupRouter: dismiss attempted while navigationController is nil", v17, 2u);
        swift_slowDealloc();
      }
    }
  }
}

id sub_1000644A0()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss];
  void *v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation];
  *uint64_t v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_blockHardwareButtons] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_homePressed] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for HomePodSetupRouter();
  return [super init];
}

id sub_10006455C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupRouter();
  return [super dealloc];
}

uint64_t type metadata accessor for HomePodSetupRouter()
{
  return self;
}

void sub_100064628()
{
  uint64_t v1 = v0;
  if (qword_1000ED7D8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF410);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupRouter: proxCardFlowDidDismiss called dismissing the flow", v5, 2u);
    swift_slowDealloc();
  }

  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) & 1) == 0) {
    sub_1000641B8(0, 1);
  }
  uint64_t v6 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    sub_1000647CC((uint64_t)v6);
  }
}

uint64_t sub_1000647BC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000647CC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

char *sub_100064880()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_stackView;
  id v2 = objc_allocWithZone((Class)UIStackView);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel;
  *(void *)&v3[v6] = [objc_allocWithZone((Class)UILabel) init];

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for StereoPairButton();
  uint64_t v7 = (char *)[v15 initWithFrame:0.0, 0.0, 0.0, 0.0];
  char v8 = *(void **)&v7[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
  uint64_t v9 = v7;
  id v10 = v8;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setText:v11];

  id v12 = *(id *)&v9[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel];
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setText:v13];

  sub_100064B5C();
  return v9;
}

id sub_100064A2C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_stackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UILabel) init];

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for StereoPairButton();
  [super initWithCoder:a1];
  id v10 = v9;
  if (v9)
  {
    id v11 = v9;
    sub_100064B5C();
  }
  return v10;
}

id sub_100064B5C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_stackView];
  [v2 setAxis:1];
  [v2 setSpacing:6.0];
  [v2 setUserInteractionEnabled:0];
  [v0 addSubviewToBounds:v2 with:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle];
  [v2 addArrangedSubview:v3];
  id v4 = [v3 layer];
  [v4 setBorderWidth:2.0];

  sub_100083254(1.0, 1.0, 750.0);
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel];
  id v6 = [self systemFontOfSize:36.0 weight:UIFontWeightSemibold];
  [v5 setFont:v6];

  [v5 setTextAlignment:1];
  sub_1000833B4(v5, 0.0, 0.0);
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
  [v7 setTextAlignment:1];

  return [v2 addArrangedSubview:v7];
}

void sub_100064D18()
{
  unsigned int v1 = [v0 isHighlighted];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel];
  uint64_t v3 = self;
  id v4 = v3;
  if (v1)
  {
    id v5 = [v3 systemBackgroundColor];
    [v2 setTextColor:v5];

    id v6 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
    id v7 = [v4 systemBlueColor];
    [v6 setTextColor:v7];

    uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle];
    id v9 = [v4 systemBlueColor];
    [v8 setBackgroundColor:v9];

    id v10 = [v8 layer];
    id v11 = [v4 systemBlueColor];
  }
  else
  {
    id v12 = [v3 systemGrayColor];
    [v2 setTextColor:v12];

    objc_super v13 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
    id v14 = [v4 systemGrayColor];
    [v13 setTextColor:v14];

    objc_super v15 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle];
    id v16 = [v4 clearColor];
    [v15 setBackgroundColor:v16];

    id v10 = [v15 layer];
    id v11 = [v4 systemGrayColor];
  }
  id v17 = [v11 CGColor];

  [v10 setBorderColor:v17];
}

id sub_10006507C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StereoPairButton();
  return [super dealloc];
}

uint64_t type metadata accessor for StereoPairButton()
{
  return self;
}

id sub_100065140()
{
  id result = [*v0 name];
  if (result)
  {
    objc_super v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000651A0()
{
  uint64_t result = (uint64_t)[*v0 name];
  if (result)
  {
    objc_super v2 = (void *)result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = v4;

    v6._uint64_t countAndFlagsBits = v3;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    return 0x666E696563696F76;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100065238(void *a1)
{
  v23._uint64_t countAndFlagsBits = 1031365995;
  v23._object = (void *)0xE400000000000000;
  id result = [a1 name];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v6 = v5;

    v7._uint64_t countAndFlagsBits = v4;
    v7._object = v6;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 32;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    v10._uint64_t countAndFlagsBits = v23._countAndFlagsBits;
    object = v23._object;
    strcpy((char *)&v23, "<VoiceOption ");
    HIWORD(v23._object) = -4864;
    v10._object = object;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v23._countAndFlagsBits;
    id v12 = v23._object;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    strcpy((char *)&v23, "displayValue=");
    HIWORD(v23._object) = -4864;
    id result = [a1 name:0x666E696563696F76, 0xEA00000000005F6FLL];
    if (result)
    {
      id v14 = result;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      v15._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      v16._uint64_t countAndFlagsBits = 32;
      v16._object = (void *)0xE100000000000000;
      String.append(_:)(v16);
      swift_bridgeObjectRetain();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      strcpy((char *)&v23, "voiceInfo=");
      BYTE3(v23._object) = 0;
      HIDWORD(v23._object) = -369098752;
      sub_100065500();
      id v17 = a1;
      v18._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 32;
      v19._object = (void *)0xE100000000000000;
      String.append(_:)(v19);
      id v20 = v23._object;
      v23._object = v12;
      swift_bridgeObjectRetain();
      v21._uint64_t countAndFlagsBits = v23._countAndFlagsBits;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v22._uint64_t countAndFlagsBits = 62;
      v22._object = (void *)0xE100000000000000;
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      return (id)countAndFlagsBits;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000654F8()
{
  return sub_100065238(*v0);
}

unint64_t sub_100065500()
{
  unint64_t result = qword_1000EF138;
  if (!qword_1000EF138)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EF138);
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceOption()
{
  return &type metadata for VoiceOption;
}

uint64_t getEnumTagSinglePayload for AppleAccountFeatureFlags(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AppleAccountFeatureFlags(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100065640);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountFeatureFlags()
{
  return &type metadata for AppleAccountFeatureFlags;
}

uint64_t getEnumTagSinglePayload for HomeDeviceSetupFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomeDeviceSetupFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000657D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeDeviceSetupFeatureFlags()
{
  return &type metadata for HomeDeviceSetupFeatureFlags;
}

uint64_t getEnumTagSinglePayload for SharingFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharingFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100065968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100065990(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SharingFeatureFlags()
{
  return &type metadata for SharingFeatureFlags;
}

unint64_t sub_1000659B0()
{
  unint64_t result = qword_1000EF538;
  if (!qword_1000EF538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EF538);
  }
  return result;
}

Swift::Int sub_100065A04()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100065A4C()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100065A78()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

const char *sub_100065ABC()
{
  return "HomeDeviceSetup";
}

const char *sub_100065AD0()
{
  Swift::UInt v1 = "sysdrop";
  if (*v0 != 1) {
    Swift::UInt v1 = "sysdrop_rp";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "psg_support";
  }
}

BOOL sub_100065B18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_100065B34()
{
  unint64_t result = qword_1000EF540;
  if (!qword_1000EF540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EF540);
  }
  return result;
}

unint64_t sub_100065B8C()
{
  unint64_t result = qword_1000EF548;
  if (!qword_1000EF548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EF548);
  }
  return result;
}

const char *sub_100065BE0()
{
  return "Sharing";
}

const char *sub_100065BF4()
{
  if (*v0) {
    return "HomePodUseAMSEarly";
  }
  else {
    return "HomePodUseAMS";
  }
}

uint64_t sub_100065C24()
{
  return 1;
}

Swift::Int sub_100065C2C()
{
  return Hasher._finalize()();
}

void sub_100065C70()
{
}

Swift::Int sub_100065C98()
{
  return Hasher._finalize()();
}

const char *sub_100065CD8()
{
  return "AppleAccount";
}

const char *sub_100065CEC()
{
  return "AABranding";
}

uint64_t sub_100065D00()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF550);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF550);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100065DC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v9 = (void *)((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (char *)v32 - v10;
  id v12 = (objc_class *)type metadata accessor for HomePodSetupPickerViewController();
  v36.receiver = v1;
  v36.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED7E0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF550);
    Swift::String v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupPicker: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED7E0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF550);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    Swift::String v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      Swift::String v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v35 = v33;
      *(_DWORD *)Swift::String v21 = 136315138;
      v32[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_100048718(v23, v22, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupPicker: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    sub_10006675C((uint64_t)v11);
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_1000932E0(v25, (uint64_t)sub_100066FAC, v24);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v26 = *(void *)&v11[*(int *)(v5 + 72)];
    if ((v26 & 2) == 0 && *(void *)&v11[*(int *)(v5 + 76) + 8])
    {
      NSString v27 = String._bridgeToObjectiveC()();
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = [v1 dismissalConfirmationActionWithTitle:v27 message:v28 confirmButtonTitle:v29 cancelButtonTitle:v30];

      [v1 setDismissButtonAction:v31];
    }
    [v1 setDismissalType:v26];
    sub_10001712C((uint64_t)v11);
  }
}

char *sub_1000662E4(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  unint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v3 = result;
  id v4 = [result contentView];
  id v5 = [v4 pickerView];

  unint64_t v6 = (unint64_t)[v5 selectedRowInComponent:0];
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options];
  if (v6 >= *(void *)(v7 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_10003DE98(v7 + 40 * v6 + 32, (uint64_t)v27);
  if (qword_1000ED7E0 != -1) {
LABEL_15:
  }
    swift_once();
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000133A0(v8, (uint64_t)qword_1000EF550);
  sub_10003DE98((uint64_t)v27, (uint64_t)&v24);
  Swift::String v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(void *)unint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    unint64_t v12 = sub_1000106E8(v1);
    v23[0] = sub_100048718(v12, v13, (uint64_t *)v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v15 = *((void *)&v25 + 1);
    uint64_t v14 = v26;
    sub_10000F6E8(&v24, *((uint64_t *)&v25 + 1));
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
    v23[0] = sub_100048718(v16, v17, (uint64_t *)v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000E470((uint64_t)&v24);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "HomePodSetupPicker: User tapped on button: %s with selected option '%s'", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000E470((uint64_t)&v24);
  }

  uint64_t v18 = v28;
  uint64_t v19 = v29;
  os_log_type_t v20 = sub_10000F6E8(v27, v28);
  v23[3] = v18;
  v23[4] = *(void *)(v19 + 8);
  Swift::String v21 = sub_100066FB4(v23);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  memset(&v22[8], 0, 40);
  v22[0] = v1;
  sub_100013664((uint64_t)v23, (uint64_t)&v22[8], &qword_1000ED970);
  long long v24 = *(_OWORD *)v22;
  long long v25 = *(_OWORD *)&v22[16];
  long long v26 = *(_OWORD *)&v22[32];
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10007A7CC(&v24);

    swift_unknownObjectRelease();
    sub_1000136C8((uint64_t)&v24);
  }
  else
  {
    sub_1000136C8((uint64_t)&v24);
  }
  return (char *)sub_10000E470((uint64_t)v27);
}

void sub_10006675C(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setTitle:v4];

  NSString v5 = String._bridgeToObjectiveC()();
  [v2 setSubtitle:v5];

  uint64_t v6 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options;
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options] = *(void *)(a1 + *(int *)(v6 + 48));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10000FD94(a1 + *(int *)(v6 + 52), (uint64_t)&v24, &qword_1000EE300);
  if (!v25)
  {
    sub_10000F674((uint64_t)&v24, &qword_1000EE300);
    goto LABEL_13;
  }
  sub_10000F6D0(&v24, (uint64_t)v26);
  uint64_t v8 = *(void *)&v2[v7];
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_11:
    sub_10000E470((uint64_t)v26);
LABEL_13:
    uint64_t v11 = 0;
    goto LABEL_17;
  }
  os_log_type_t v10 = (void *)(v8 + 32);
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  while (1)
  {
    uint64_t v13 = v10[3];
    uint64_t v12 = v10[4];
    sub_10000F6E8(v10, v13);
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 8))(v13);
    uint64_t v16 = v15;
    uint64_t v18 = v27;
    uint64_t v17 = v28;
    sub_10000F6E8(v26, v27);
    if (v14 == (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 8))(v18) && v16 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21) {
      break;
    }
    ++v11;
    v10 += 5;
    if (v9 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  sub_10000E470((uint64_t)v26);
LABEL_17:
  id v22 = [v2 contentView];
  id v23 = [v22 pickerView];

  [v23 selectRow:v11 inComponent:0 animated:0];
}

id sub_100066BB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupPickerViewController();
  return [super dealloc];
}

uint64_t sub_100066C44()
{
  return type metadata accessor for HomePodSetupPickerViewController();
}

uint64_t type metadata accessor for HomePodSetupPickerViewController()
{
  uint64_t result = qword_1000EF5A0;
  if (!qword_1000EF5A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100066C98()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100066D40(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_100066D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100066D94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED7E0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF550);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupPicker: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  if ([v2 isViewLoaded]) {
    sub_10006675C(a1);
  }
}

uint64_t sub_100066F74()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

char *sub_100066FAC(char *a1)
{
  return sub_1000662E4(a1);
}

uint64_t *sub_100066FB4(uint64_t *a1)
{
  char v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t destroy for DismissalConfirmationInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DismissalConfirmationInformation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DismissalConfirmationInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for DismissalConfirmationInformation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for DismissalConfirmationInformation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DismissalConfirmationInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DismissalConfirmationInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DismissalConfirmationInformation()
{
  return &type metadata for DismissalConfirmationInformation;
}

uint64_t sub_1000672FC(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  _OWORD v9[2] = a2[2];
  _OWORD v9[3] = v5;
  v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_100067358(v8, v9) & 1;
}

uint64_t sub_100067358(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5]
        || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v9 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7])
        {
          return 1;
        }
        else
        {
          return _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
    }
  }
  return result;
}

void sub_100067438(uint64_t *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (id)CUAddSuffixForCurrentDeviceClass();

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    v4._uint64_t countAndFlagsBits = 0x444F50454D4F485FLL;
    v4._object = (void *)0xE800000000000000;
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = sub_100007334(v5);

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = sub_100007334(v10);

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();

    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = sub_100007334(v15);

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = sub_100007334(v20);

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    *a1 = v7;
    a1[1] = v9;
    a1[2] = v12;
    a1[3] = v14;
    a1[4] = v17;
    a1[5] = v19;
    a1[6] = v22;
    a1[7] = v24;
    a1[8] = 0;
    a1[9] = 0xE000000000000000;
  }
  else
  {
    __break(1u);
  }
}

void sub_100067630(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_100007334(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10000EE48(&qword_1000EE398);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000B0850;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10003D0C8();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v9 = String.init(format:_:)();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100007334(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100007334(v17);

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = sub_100007334(v22);

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *a3 = v14;
  a3[1] = v16;
  a3[2] = v9;
  a3[3] = v11;
  a3[4] = v19;
  a3[5] = v21;
  a3[6] = v24;
  a3[7] = v26;
  a3[8] = 0;
  a3[9] = 0xE000000000000000;
}

void sub_10006780C()
{
  char v1 = v0;
  v44.receiver = v0;
  v44.super_class = (Class)type metadata accessor for HomePodPrivacyConsentViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v3 = v2;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v4 = [objc_allocWithZone((Class)type metadata accessor for HomePodSetupPrivacyConsentView()) init];
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService35HomePodPrivacyConsentViewController_consentView;
  NSString v6 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodPrivacyConsentViewController_consentView];
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodPrivacyConsentViewController_consentView] = v4;
  id v7 = v4;

  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = [v1 view];
  if (!v8)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v9 = v8;
  [v8 addSubview:v7];

  sub_10000EE48(&qword_1000EF140);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000B0B90;
  id v11 = [v7 topAnchor];
  id v12 = [v1 view];
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v13 = v12;
  id v14 = [v12 topAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v10 + 32) = v15;
  id v16 = [v7 leadingAnchor];
  id v17 = [v1 view];
  if (!v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v18 = v17;
  id v19 = [v17 leadingAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19];
  *(void *)(v10 + 40) = v20;
  id v21 = [v7 bottomAnchor];
  id v22 = [v1 view];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v23 = v22;
  id v24 = [v22 bottomAnchor];

  id v25 = [v21 constraintEqualToAnchor:v24];
  *(void *)(v10 + 48) = v25;
  id v26 = [v7 trailingAnchor];
  id v27 = [v1 view];
  if (!v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v28 = v27;
  id v29 = [v27 trailingAnchor];

  id v30 = [v26 constraintEqualToAnchor:v29];
  *(void *)(v10 + 56) = v30;
  id v31 = [v7 heightAnchor];
  id v32 = [v1 view];
  if (!v32)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v33 = v32;
  uint64_t v34 = self;
  id v35 = [v33 heightAnchor];

  id v36 = [v31 constraintEqualToAnchor:v35];
  *(void *)(v10 + 64) = v36;
  specialized Array._endMutation()();
  sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:isa];

  uint64_t v38 = *(void *)&v1[v5];
  if (v38)
  {
    id v39 = *(void **)(v38 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_doneButton);
    sub_10003DD8C(0, &qword_1000EE548);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v1;
    id v41 = v39;
    id v42 = v1;
    id v43 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    [v41 addAction:v43 forControlEvents:64];
  }
}

id sub_100067E30()
{
  return sub_100068BA0(type metadata accessor for HomePodPrivacyConsentViewController);
}

uint64_t type metadata accessor for HomePodPrivacyConsentViewController()
{
  return self;
}

void sub_100067E7C()
{
  qword_1000EF5B0 = 0x4024000000000000;
}

void sub_100067E8C()
{
  qword_1000EF5B8 = 0x4024000000000000;
}

void sub_100067E9C()
{
  qword_1000EF5C0 = 0x4034000000000000;
}

char *sub_100067EAC()
{
  char v1 = self;
  id v2 = v0;
  id v3 = [v1 buttonWithType:1];
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_doneButton] = v3;
  id v4 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:0];
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_titleLabel] = v4;
  id v5 = [objc_allocWithZone((Class)PRXTextView) initWithStyle:3];
  *(void *)&v2[OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_textView] = v5;

  v92.receiver = v2;
  v92.super_class = (Class)type metadata accessor for HomePodSetupPrivacyConsentView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v7 = self;
  id v8 = (char *)v6;
  id v9 = [v7 systemBackgroundColor];
  [v8 setBackgroundColor:v9];

  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v10 = OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_doneButton;
  id v11 = *(void **)&v8[OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_doneButton];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v12 = v11;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100007334(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setTitle:v15 forState:0];

  id v16 = *(id *)&v8[v10];
  id v17 = [v7 systemBackgroundColor];
  [v16 setBackgroundColor:v17];

  uint64_t v18 = OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_titleLabel;
  id v19 = *(void **)&v8[OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_titleLabel];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = v19;
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setText:v23];

  id v24 = *(void **)&v8[v18];
  [v24 setAdjustsFontSizeToFitWidth:1];
  [v24 setTextAlignment:1];
  id v25 = v24;
  id v26 = [v7 secondarySystemBackgroundColor];
  [v25 setBackgroundColor:v26];

  id v27 = [*(id *)&v8[v18] layer];
  [v27 setCornerRadius:10.0];

  id v28 = [*(id *)&v8[v18] layer];
  [v28 setMasksToBounds:1];

  uint64_t v29 = OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_textView;
  id v30 = *(void **)&v8[OBJC_IVAR____TtC14HDSViewService30HomePodSetupPrivacyConsentView_textView];
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v31 = v30;
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = sub_100007334(v32);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v34._uint64_t countAndFlagsBits = 2570;
  v34._object = (void *)0xE200000000000000;
  String.append(_:)(v34);
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = sub_100007334(v35);

  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v39 = v38;

  v40._uint64_t countAndFlagsBits = v37;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v41];

  id v42 = *(void **)&v8[v29];
  [v42 setTextAlignment:0];
  id v43 = v42;
  id v44 = [v7 secondarySystemBackgroundColor];
  [v43 setBackgroundColor:v44];

  id v45 = [*(id *)&v8[v29] textContainer];
  [v45 setLineBreakMode:0];

  id v46 = *(id *)&v8[v29];
  id v47 = [v7 labelColor];
  [v46 setTextColor:v47];

  id v48 = *(void **)&v8[v29];
  [v48 setTextContainerInset:30.0, 20.0, 10.0, 20.0];
  [v48 setScrollEnabled:1];
  id v49 = self;
  id v50 = v48;
  id v51 = [v49 preferredFontForTextStyle:UIFontTextStyleBody];
  [v50 setFont:v51];

  id v52 = [*(id *)&v8[v29] layer];
  [v52 setCornerRadius:10.0];

  id v53 = [*(id *)&v8[v29] layer];
  [v53 setMasksToBounds:1];

  id v54 = *(void **)&v8[v10];
  [v8 addSubview:v54];
  [v8 addSubview:*(void *)&v8[v18]];
  [v8 addSubview:*(void *)&v8[v29]];
  id v91 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1000B0820;
  id v56 = [v54 topAnchor];
  id v57 = [v8 topAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57 constant:0.0];

  *(void *)(v55 + 32) = v58;
  id v59 = [*(id *)&v8[v10] leadingAnchor];
  id v60 = [v8 leadingAnchor];
  if (qword_1000ED7E8 != -1) {
    swift_once();
  }
  id v61 = [v59 constraintEqualToAnchor:v60 constant:*(double *)&qword_1000EF5B0];

  *(void *)(v55 + 40) = v61;
  id v62 = [*(id *)&v8[v10] widthAnchor];
  id v63 = [v62 constraintEqualToConstant:60.0];

  *(void *)(v55 + 48) = v63;
  id v64 = [*(id *)&v8[v10] heightAnchor];
  id v65 = [v64 constraintEqualToConstant:40.0];

  *(void *)(v55 + 56) = v65;
  id v66 = [*(id *)&v8[v18] topAnchor];
  id v67 = [*(id *)&v8[v10] bottomAnchor];
  id v68 = [v66 constraintEqualToAnchor:v67 constant:0.0];

  *(void *)(v55 + 64) = v68;
  id v69 = [*(id *)&v8[v18] leadingAnchor];
  id v70 = [v8 leadingAnchor];
  id v71 = [v69 constraintEqualToAnchor:v70 constant:*(double *)&qword_1000EF5B0];

  *(void *)(v55 + 72) = v71;
  id v72 = [*(id *)&v8[v18] trailingAnchor];
  id v73 = [v8 trailingAnchor];
  id v74 = [v72 constraintEqualToAnchor:v73 constant:-*(double *)&qword_1000EF5B0];

  *(void *)(v55 + 80) = v74;
  id v75 = [*(id *)&v8[v18] heightAnchor];
  id v76 = [v75 constraintEqualToConstant:100.0];

  *(void *)(v55 + 88) = v76;
  id v77 = [*(id *)&v8[v29] topAnchor];
  id v78 = [*(id *)&v8[v18] bottomAnchor];
  if (qword_1000ED7F0 != -1) {
    swift_once();
  }
  id v79 = [v77 constraintEqualToAnchor:v78 constant:*(double *)&qword_1000EF5B8];

  *(void *)(v55 + 96) = v79;
  id v80 = [*(id *)&v8[v29] leadingAnchor];
  id v81 = [v8 leadingAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81 constant:*(double *)&qword_1000EF5B0];

  *(void *)(v55 + 104) = v82;
  id v83 = [*(id *)&v8[v29] bottomAnchor];
  id v84 = [v8 bottomAnchor];
  if (qword_1000ED7F8 != -1) {
    swift_once();
  }
  id v85 = [v83 constraintEqualToAnchor:v84 constant:-*(double *)&qword_1000EF5C0];

  *(void *)(v55 + 112) = v85;
  id v86 = [*(id *)&v8[v29] trailingAnchor];
  id v87 = [v8 trailingAnchor];
  id v88 = [v86 constraintEqualToAnchor:v87 constant:-*(double *)&qword_1000EF5B0];

  *(void *)(v55 + 120) = v88;
  specialized Array._endMutation()();
  sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v91 activateConstraints:isa];

  return v8;
}

id sub_100068B88()
{
  return sub_100068BA0(type metadata accessor for HomePodSetupPrivacyConsentView);
}

id sub_100068BA0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for HomePodSetupPrivacyConsentView()
{
  return self;
}

uint64_t sub_100068C58()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100068C90()
{
  String.append(_:)(*v0);
  return 0x65676175676E616CLL;
}

unint64_t sub_100068CE0(uint64_t a1, uint64_t a2)
{
  strcpy((char *)&v12, "language_");
  String.append(_:)(*(Swift::String *)&a1);
  v2._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 32;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 1031365995;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v11, "displayValue=");
  HIWORD(v11._object) = -4864;
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 32;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRetain();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v12, "siriLanguage=");
  HIWORD(v12._object) = -4864;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRetain();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = 62;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

unint64_t sub_100068F74()
{
  return sub_100068CE0(*v0, v0[1]);
}

ValueMetadata *type metadata accessor for LanguageOption()
{
  return &type metadata for LanguageOption;
}

void sub_100068F90(uint64_t a1, uint64_t a2, void *a3)
{
  Swift::String v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100069008()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF640);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF640);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000690D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v9 = (void *)((char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  Swift::String v11 = (char *)v24 - v10;
  Swift::String v12 = (objc_class *)type metadata accessor for HomePodSetupAppleMusicViewController();
  v28.receiver = v1;
  v28.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED800 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF640);
    NSString v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupAppleMusicViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED800 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF640);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      NSString v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v27 = v25;
      *(_DWORD *)NSString v21 = 136315138;
      v24[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_100048718(v23, v22, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupAppleMusicViewController: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    [v1 setDismissalType:*(void *)&v11[*(int *)(v5 + 72)]];
    sub_10001712C((uint64_t)v11);
  }
}

void sub_100069504(char a1)
{
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for HomePodSetupAppleMusicViewController();
  [super viewWillAppear:a1 & 1];
  id v21 = [objc_allocWithZone((Class)SKCloudServiceSetupViewController) init];
  [v21 setDelegate:v1];
  sub_10000EE48((uint64_t *)&unk_1000EF700);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000B18A0;
  *(void *)(inited + 32) = SKCloudServiceSetupOptionsActionKey;
  type metadata accessor for SKCloudServiceSetupAction(0);
  *(void *)(inited + 40) = SKCloudServiceSetupActionSubscribe;
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 72) = SKCloudServiceSetupOptionsMessageIdentifierKey;
  type metadata accessor for SKCloudServiceSetupMessageIdentifier(0);
  *(void *)(inited + 80) = SKCloudServiceSetupMessageIdentifierJoin;
  uint64_t v5 = (void *)_SKCloudServiceSetupOptionsAudioAccessorySerialNumberKey;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 112) = v5;
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceSerialNumber + 8];
  *(void *)(inited + 120) = *(void *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceSerialNumber];
  *(void *)(inited + 128) = v7;
  uint64_t v8 = (void *)_SKCloudServiceSetupOptionsAudioAccessoryUniqueDeviceIdentifierKey;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = v8;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceGUID];
  uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceGUID + 8];
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 160) = v9;
  *(void *)(inited + 168) = v10;
  Swift::String v11 = SKCloudServiceSetupOptionsActionKey;
  Swift::String v12 = SKCloudServiceSetupActionSubscribe;
  uint64_t v13 = SKCloudServiceSetupOptionsMessageIdentifierKey;
  uint64_t v14 = SKCloudServiceSetupMessageIdentifierJoin;
  id v15 = v5;
  swift_bridgeObjectRetain();
  id v16 = v8;
  swift_bridgeObjectRetain();
  sub_10000E0E8(inited);
  type metadata accessor for SKCloudServiceSetupOptionsKey(0);
  sub_10006A9FC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10006AA8C;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100068F90;
  aBlock[3] = &unk_1000DC408;
  id v19 = _Block_copy(aBlock);
  swift_release();
  [v21 loadWithOptions:isa completionHandler:v19];
  _Block_release(v19);

  os_log_type_t v20 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic];
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic] = v21;
}

void sub_100069798()
{
  if (qword_1000ED800 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EF640);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    v8[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 8) = 2080;
    sub_10000EE48((uint64_t *)&unk_1000EF710);
    uint64_t v4 = Optional.debugDescription.getter();
    sub_100048718(v4, v5, v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "HomePodSetupAppleMusicViewController: AppleMusic load view Controller completion called with results:%{BOOL}d error:%s", (uint8_t *)v3, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    sub_100069A98();
  }
}

void sub_100069A98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(NSObject **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED800 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000133A0(v9, (uint64_t)qword_1000EF640);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    Swift::String v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupAppleMusicViewController: AppleMusic show StoreKit view\n", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic];
  if (v13)
  {
    id v14 = v13;
    id v15 = [v14 view];
    if (v15)
    {
      id v16 = v15;
      id v56 = v8;
      [v0 addChildViewController:v14];
      id v17 = [v0 contentView];
      [v17 addSubview:v16];

      [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v18 = [v1 contentView];
      [v18 cardStyle];

      id v19 = [v1 traitCollection];
      [v19 prx_cardSizeClass];
      os_log_t v59 = v6;

      PRXCardPreferredSize();
      double v21 = v20;
      id v58 = self;
      sub_10000EE48(&qword_1000EF140);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1000B0B90;
      id v23 = [v1 contentView];
      id v24 = [v23 heightAnchor];

      id v25 = [v24 constraintEqualToConstant:v21];
      *(void *)(v22 + 32) = v25;
      id v26 = [v16 topAnchor];
      uint64_t v57 = v5;
      id v27 = [v1 contentView];
      id v28 = [v27 topAnchor];

      id v29 = [v26 constraintEqualToAnchor:v28];
      *(void *)(v22 + 40) = v29;
      id v30 = [v16 bottomAnchor];
      id v31 = [v1 contentView];
      id v32 = [v31 bottomAnchor];

      id v33 = [v30 constraintEqualToAnchor:v32];
      *(void *)(v22 + 48) = v33;
      id v34 = [v16 leadingAnchor];
      id v35 = [v1 contentView];
      id v36 = [v35 leadingAnchor];

      id v37 = [v34 constraintEqualToAnchor:v36];
      *(void *)(v22 + 56) = v37;
      id v38 = [v16 trailingAnchor];
      uint64_t v39 = v57;
      id v40 = [v1 contentView];
      id v41 = [v40 trailingAnchor];

      id v42 = [v38 constraintEqualToAnchor:v41];
      *(void *)(v22 + 64) = v42;
      uint64_t v60 = v22;
      specialized Array._endMutation()();
      sub_100017190();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v58 activateConstraints:isa];

      [v14 didMoveToParentViewController:v1];
      uint64_t v44 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel;
      swift_beginAccess();
      sub_100017000(v44, (uint64_t)v4);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v59[6].isa)(v4, 1, v39) == 1)
      {

        sub_100017068((uint64_t)v4);
      }
      else
      {
        uint64_t v48 = (uint64_t)v56;
        sub_1000170C8((uint64_t)v4, (uint64_t)v56);
        if ((*(unsigned char *)(v48 + *(int *)(v39 + 72)) & 2) != 0 || (uint64_t v49 = v48 + *(int *)(v39 + 76), !*(void *)(v49 + 8)))
        {
        }
        else
        {
          os_log_t v59 = *(os_log_t *)(v49 + 40);
          NSString v50 = String._bridgeToObjectiveC()();
          NSString v51 = String._bridgeToObjectiveC()();
          NSString v52 = String._bridgeToObjectiveC()();
          NSString v53 = String._bridgeToObjectiveC()();
          id v54 = [v1 dismissalConfirmationActionWithTitle:v50 message:v51 confirmButtonTitle:v52 cancelButtonTitle:v53];

          [v1 setDismissButtonAction:v54];
        }
        sub_10001712C(v48);
      }
      return;
    }
  }
  os_log_t v59 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v59, v45))
  {
    id v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v45, "HomePodSetupAppleMusicViewController: AppleMusic controller was not initilized properly", v46, 2u);
    swift_slowDealloc();
  }
  os_log_t v47 = v59;
}

id sub_10006A25C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupAppleMusicViewController();
  return [super dealloc];
}

uint64_t sub_10006A318()
{
  return type metadata accessor for HomePodSetupAppleMusicViewController();
}

uint64_t type metadata accessor for HomePodSetupAppleMusicViewController()
{
  uint64_t result = qword_1000EF688;
  if (!qword_1000EF688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006A36C()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10006A41C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_10006A468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006A80C(a3);
}

void sub_10006A470()
{
  uint64_t v1 = v0;
  if (qword_1000ED800 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF640);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupAppleMusicViewController: AppleMusic hide StoreKit view\n", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic];
  if (v6)
  {
    Swift::String v12 = v6;
    [v12 willMoveToParentViewController:0];
    id v7 = [v12 view];
    if (!v7)
    {
      __break(1u);
      return;
    }
    uint64_t v8 = v7;
    [v7 removeFromSuperview];

    id v9 = [v1 presentingViewController];
    [v9 removeFromParentViewController];

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
      memset(&v13[8], 0, 40);
      v13[0] = 1;
      sub_100013664((uint64_t)v14, (uint64_t)&v13[8], &qword_1000ED970);
      v16[0] = *(_OWORD *)v13;
      v16[1] = *(_OWORD *)&v13[16];
      _OWORD v16[2] = *(_OWORD *)&v13[32];
      sub_10007A7CC(v16);

      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v16);
      return;
    }
  }
  else
  {
    Swift::String v12 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v10, "HomePodSetupAppleMusicViewController: AppleMusic controller was not initilized properly", v11, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_10006A80C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED800 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF640);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupAppleMusicViewController: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result) {
    return [v2 setDismissalType:*(void *)(a1 + *(int *)(v11 + 72))];
  }
  return result;
}

unint64_t sub_10006A9FC()
{
  unint64_t result = qword_1000EDB40;
  if (!qword_1000EDB40)
  {
    type metadata accessor for SKCloudServiceSetupOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EDB40);
  }
  return result;
}

uint64_t sub_10006AA54()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006AA8C()
{
}

uint64_t sub_10006AA94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006AAA4()
{
  return swift_release();
}

uint64_t sub_10006AAAC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF720);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF720);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10006AB74()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  os_log_type_t v9 = (uint64_t *)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t)&v61 - v10;
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupLeftRightViewController();
  v68.receiver = v1;
  v68.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel];
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED808 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF720);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupLeftRight: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, v11);
    if (qword_1000ED808 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF720);
    sub_1000133D8(v11, (uint64_t)v9);
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v65 = v5;
    if (v21)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      id v64 = v1;
      uint64_t v24 = *v9;
      unint64_t v23 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_100048718(v24, v23, &v67);
      uint64_t v1 = v64;
      uint64_t v5 = v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupLeftRight: viewDidLoad with title %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    NSString v25 = String._bridgeToObjectiveC()();
    [v1 setTitle:v25];

    NSString v26 = String._bridgeToObjectiveC()();
    [v1 setSubtitle:v26];

    id v64 = (char *)*(int *)(v5 + 72);
    [v1 setDismissalType:*(void *)&v64[v11]];
    id v27 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_buttonStackView];
    [v27 setAxis:0];
    [v27 setSpacing:20.0];
    id v28 = [v1 contentView];
    [v28 addSubview:v27];

    id v29 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_leftButton];
    id v30 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v31 = swift_allocObject();
    long long v61 = xmmword_1000B0690;
    *(_OWORD *)(v31 + 16) = xmmword_1000B0690;
    id v32 = [v29 widthAnchor];
    id v33 = [v32 constraintEqualToConstant:96.0];

    *(void *)(v31 + 32) = v33;
    uint64_t v67 = v31;
    specialized Array._endMutation()();
    unint64_t v63 = sub_100017190();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v62 = v30;
    [v30 activateConstraints:isa];

    [v29 addTarget:v1 action:"leftButtonPressed:" forControlEvents:64];
    [v27 addArrangedSubview:v29];
    id v35 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_rightButton];
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v61;
    id v37 = [v35 widthAnchor];
    id v38 = [v37 constraintEqualToConstant:96.0];

    *(void *)(v36 + 32) = v38;
    uint64_t v67 = v36;
    specialized Array._endMutation()();
    Class v39 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v30 activateConstraints:v39];

    [v35 addTarget:v1 action:"rightButtonPressed:" forControlEvents:64];
    [v27 addArrangedSubview:v35];
    id v40 = [v1 contentView];
    id v41 = [v40 mainContentGuide];

    [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1000B1940;
    id v43 = [v27 topAnchor];
    id v44 = [v41 topAnchor];
    id v45 = [v43 constraintGreaterThanOrEqualToAnchor:v44];

    *(void *)(v42 + 32) = v45;
    id v46 = [v27 centerYAnchor];
    id v47 = [v41 centerYAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47];

    *(void *)(v42 + 40) = v48;
    uint64_t v49 = v65;
    id v50 = [v27 centerXAnchor];
    id v51 = [v41 centerXAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51];

    *(void *)(v42 + 48) = v52;
    uint64_t v67 = v42;
    specialized Array._endMutation()();
    Class v53 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v62 activateConstraints:v53];

    uint64_t v54 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v55 = swift_bridgeObjectRetain();
    sub_1000932E0(v55, (uint64_t)sub_10006C2CC, v54);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v64[v11] & 2) != 0 || !*(void *)(v11 + *(int *)(v49 + 76) + 8))
    {
    }
    else
    {
      NSString v56 = String._bridgeToObjectiveC()();
      NSString v57 = String._bridgeToObjectiveC()();
      NSString v58 = String._bridgeToObjectiveC()();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = [v1 dismissalConfirmationActionWithTitle:v56 message:v57 confirmButtonTitle:v58 cancelButtonTitle:v59];

      [v1 setDismissButtonAction:v60];
    }
    sub_10001712C(v11);
  }
}

void sub_10006B510(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED808 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF720);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)uint64_t v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupLeftRight: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      _OWORD v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

id sub_10006B914()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupLeftRightViewController();
  return [super dealloc];
}

uint64_t sub_10006B9C8()
{
  return type metadata accessor for HomePodSetupLeftRightViewController();
}

uint64_t type metadata accessor for HomePodSetupLeftRightViewController()
{
  uint64_t result = qword_1000EF780;
  if (!qword_1000EF780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006BA1C()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10006BAC8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_10006BB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006BB1C(a3);
}

id sub_10006BB1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED808 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF720);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupLeftRight: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    [v2 setTitle:v14];

    NSString v15 = String._bridgeToObjectiveC()();
    [v2 setSubtitle:v15];

    return [v2 setDismissalType:*(void *)(a1 + *(int *)(v11 + 72))];
  }
  return result;
}

uint64_t sub_10006BD54()
{
  if (qword_1000ED808 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EF720);
  char v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "HomePodSetupLeftRight: User tapped on left speaker button", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    memset(&v5[8], 0, 40);
    v5[0] = 6;
    sub_100013664((uint64_t)v6, (uint64_t)&v5[8], &qword_1000ED970);
    v8[0] = *(_OWORD *)v5;
    v8[1] = *(_OWORD *)&v5[16];
    v8[2] = *(_OWORD *)&v5[32];
    sub_10007A7CC(v8);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v8);
  }
  return result;
}

uint64_t sub_10006BEB0()
{
  if (qword_1000ED808 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EF720);
  char v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "HomePodSetupLeftRight: User tapped on right speaker button", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    memset(&v5[8], 0, 40);
    v5[0] = 7;
    sub_100013664((uint64_t)v6, (uint64_t)&v5[8], &qword_1000ED970);
    v8[0] = *(_OWORD *)v5;
    v8[1] = *(_OWORD *)&v5[16];
    v8[2] = *(_OWORD *)&v5[32];
    sub_10007A7CC(v8);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v8);
  }
  return result;
}

id sub_10006C00C(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_buttonStackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_leftButton;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = sub_100007334(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = sub_100007334(v9);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = (objc_class *)type metadata accessor for StereoPairButton();
  id v12 = objc_allocWithZone(v11);
  *(void *)&v5[v6] = sub_100064880();
  uint64_t v13 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_rightButton;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_100007334(v14);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = sub_100007334(v16);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v18 = objc_allocWithZone(v11);
  *(void *)&v5[v13] = sub_100064880();
  id v19 = &v5[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel];
  uint64_t v20 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);

  v22.receiver = v5;
  v22.super_class = (Class)type metadata accessor for HomePodSetupLeftRightViewController();
  return [super initWithContentView:a1];
}

uint64_t sub_10006C294()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006C2CC(char *a1)
{
}

uint64_t sub_10006C2D4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF790);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF790);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10006C39C()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v1 - 8);
  uint64_t v74 = (uint64_t)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for AdjustedImage(0);
  uint64_t v3 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  id v15 = (char *)&v69 - v14;
  NSString v16 = (objc_class *)type metadata accessor for HomePodSetupSiriWelcomeViewController();
  v78.receiver = v0;
  v78.super_class = v16;
  [super viewDidLoad];
  uint64_t v17 = (uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v17, (uint64_t)v8, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) != 1)
  {
    id v70 = v5;
    uint64_t v71 = v3;
    id v72 = v0;
    sub_10006E308((uint64_t)v8, (uint64_t)v15, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000ED810 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1000133A0(v22, (uint64_t)qword_1000EF790);
    id v73 = v15;
    sub_1000133D8((uint64_t)v15, (uint64_t)v13);
    unint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      NSString v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)NSString v25 = 136315138;
      uint64_t v27 = *v13;
      unint64_t v26 = v13[1];
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_100048718(v27, v26, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10006E370((uint64_t)v13, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupSiriWelcome: viewDidLoad with title %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10006E370((uint64_t)v13, type metadata accessor for HomePodSetupViewModel);
    }

    id v29 = v72;
    uint64_t v28 = (uint64_t)v73;
    sub_10006D260((uint64_t)v73);
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1000932E0(v31, (uint64_t)sub_10006E300, v30);
    swift_bridgeObjectRelease();
    swift_release();
    if ((*(unsigned char *)(v28 + v9[18]) & 2) == 0 && *(void *)(v28 + v9[19] + 8))
    {
      NSString v32 = String._bridgeToObjectiveC()();
      NSString v33 = String._bridgeToObjectiveC()();
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = String._bridgeToObjectiveC()();
      id v36 = [v29 dismissalConfirmationActionWithTitle:v32 message:v33 confirmButtonTitle:v34 cancelButtonTitle:v35];

      [v29 setDismissButtonAction:v36];
    }
    uint64_t v37 = v74;
    sub_10000FD94(v28 + v9[27], v74, &qword_1000EE040);
    uint64_t v38 = v75;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v37, 1, v75) != 1)
    {
      id v46 = v70;
      sub_10006E308(v37, (uint64_t)v70, type metadata accessor for AdjustedImage);
      id v40 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v46];
      sub_100083920((uint64_t)v46 + *(int *)(v38 + 20));
      [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v47 = [v29 contentView];
      [v47 addSubview:v40];

      sub_10006E370((uint64_t)v46, type metadata accessor for AdjustedImage);
      goto LABEL_24;
    }
    sub_10000F674(v37, &qword_1000EE040);
    id v39 = [objc_allocWithZone((Class)UIImageView) init];
    id v40 = v39;
    unint64_t v41 = *(void *)(v28 + v9[11]);
    if (v41 >> 62)
    {
      id v68 = v39;
      swift_bridgeObjectRetain();
      uint64_t v42 = (void *)_CocoaArrayWrapper.endIndex.getter();
      if (v42) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v42 = *(void **)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v43 = v39;
      swift_bridgeObjectRetain();
      if (v42)
      {
LABEL_18:
        if ((v41 & 0xC000000000000001) != 0)
        {
          id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v44 = *(id *)(v41 + 32);
        }
        uint64_t v42 = v44;
      }
    }
    swift_bridgeObjectRelease();
    [v40 setImage:v42];

    id v45 = [v29 contentView];
    [v45 addSubview:v40];

LABEL_24:
    id v48 = [v29 contentView];
    id v49 = [v48 mainContentGuide];

    id v50 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_1000B0B90;
    id v52 = [v40 topAnchor];
    id v53 = [v49 topAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    *(void *)(v51 + 32) = v54;
    id v55 = [v40 leadingAnchor];
    id v56 = [v49 leadingAnchor];
    id v57 = [v55 constraintGreaterThanOrEqualToAnchor:v56];

    *(void *)(v51 + 40) = v57;
    id v58 = [v40 trailingAnchor];
    id v59 = [v49 trailingAnchor];
    id v60 = [v58 constraintLessThanOrEqualToAnchor:v59];

    *(void *)(v51 + 48) = v60;
    id v61 = [v40 centerXAnchor];
    id v62 = [v49 centerXAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    *(void *)(v51 + 56) = v63;
    id v64 = [v40 bottomAnchor];
    id v65 = [v49 bottomAnchor];
    id v66 = [v64 constraintEqualToAnchor:v65];

    *(void *)(v51 + 64) = v66;
    uint64_t v77 = v51;
    specialized Array._endMutation()();
    sub_100017190();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v50 activateConstraints:isa];

    sub_10006E370(v28, type metadata accessor for HomePodSetupViewModel);
    return;
  }
  sub_10000F674((uint64_t)v8, &qword_1000EF130);
  if (qword_1000ED810 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1000133A0(v18, (uint64_t)qword_1000EF790);
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    BOOL v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupSiriWelcome: viewDidLoad failed because viewModel not set.", v21, 2u);
    swift_slowDealloc();
  }
}

void sub_10006CE4C(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED810 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF790);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)uint64_t v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupSiriWelcome: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      _OWORD v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

id sub_10006D260(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = a1 + *(int *)(v5 + 68);
  if (*(unsigned char *)(v8 + 4)) {
    int v9 = 0;
  }
  else {
    int v9 = *(_DWORD *)v8;
  }
  sub_10006D9B0(v9);
  uint64_t v10 = String.init(cString:)();
  unint64_t v12 = v11;
  if (qword_1000ED810 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000133A0(v13, (uint64_t)qword_1000EF790);
  sub_1000133D8(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v23;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v22 = v10;
    os_log_type_t v24 = v2;
    uint64_t v17 = *v7;
    unint64_t v18 = v7[1];
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100048718(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10006E370((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100048718(v22, v12, &v26);
    uint64_t v2 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupSiriWelcome: configureUI called with title %s progressEvent=%s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10006E370((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);

    swift_bridgeObjectRelease_n();
  }
  NSString v19 = String._bridgeToObjectiveC()();
  [v2 setTitle:v19];

  return [v2 setDismissalType:*(void *)(a1 + *(int *)(v4 + 72))];
}

id sub_10006D60C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupSiriWelcomeViewController();
  return [super dealloc];
}

uint64_t sub_10006D68C()
{
  return type metadata accessor for HomePodSetupSiriWelcomeViewController();
}

uint64_t type metadata accessor for HomePodSetupSiriWelcomeViewController()
{
  uint64_t result = qword_1000EF7D8;
  if (!qword_1000EF7D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006D6E0()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10006D77C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_10006D7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006D7D0(a3);
}

id sub_10006D7D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED810 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000EF790);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupSiriWelcome: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result) {
    return sub_10006D260(a1);
  }
  return result;
}

const char *sub_10006D9B0(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        id result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        id result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        id result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        id result = "SU-No-SetupCancelled";
        break;
      case 904:
        id result = "SU-No-SetupObliterate";
        break;
      case 905:
        id result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        id result = "SysDrop AirDrop Event";
        break;
      case 907:
        id result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        id result = "SysDrop Cancel Event";
        break;
      case 909:
        id result = "File Transfer Progress Event";
        break;
      case 910:
        id result = "File Transfer Completed Event";
        break;
      case 911:
        id result = "iOSWiFiSetup";
        break;
      case 912:
        id result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        id result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            id result = "AuthAccountsStart";
            break;
          case 803:
            id result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            id result = "AuthAccountsStoreProgress";
            break;
          case 805:
            id result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          id result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          id result = "TVLSFinish";
          break;
        case 270:
          id result = "TVLSEstimateStart";
          break;
        case 272:
          id result = "TVLSEstimateFinal";
          break;
        case 274:
          id result = "TVLSEstimateFailed";
          break;
        case 276:
          id result = "TVLSTryAgain";
          break;
        case 277:
          id result = "TVLSToneBegan";
          break;
        case 278:
          id result = "TVLCalStart";
          break;
        case 279:
          id result = "TVLCalStep";
          break;
        case 280:
          id result = "TVLCalFailed";
          break;
        case 281:
          id result = "TVLCalTryAgain";
          break;
        case 282:
          id result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          id result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            id result = "iCloudStart";
          }
          else
          {
            if (a1 != 224) {
              return "?";
            }
            id result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }
        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              id result = "Error";
              break;
            case 31:
              id result = "SessionStarted";
              break;
            case 32:
              id result = "SessionEnded";
              break;
            case 33:
              id result = "SessionSecured";
              break;
            case 35:
              id result = "ConnectStart";
              break;
            case 40:
              id result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        id result = "BasicConfigStart";
        break;
      case 'Z':
        id result = "BasicConfigFinish";
        break;
      case '\\':
        id result = "StepStart";
        break;
      case '^':
        id result = "StepFinish";
        break;
      case '_':
        id result = "PreFinish";
        break;
        id result = "SetupFinished";
        break;
      case 'a':
        id result = "SetupResumed";
        break;
      case 'b':
        id result = "SetupSuspend";
        break;
      case 'c':
        id result = "SetupPeerSWUpdate";
        break;
      case 'd':
        id result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_10006E2C8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006E300(char *a1)
{
}

uint64_t sub_10006E308(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006E370(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006E3D0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF7E8);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF7E8);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10006E498()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  sub_10001343C(v0, qword_1000EF800);
  *(void *)sub_1000133A0(v0, (uint64_t)qword_1000EF800) = 1;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

id sub_10006E528(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  int v3 = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = &v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel];
  uint64_t v9 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  id v10 = objc_allocWithZone((Class)type metadata accessor for SVSHomePodIDViewController());
  uint64_t v11 = (char *)sub_1000913B0(v3 == 5);
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1000133A0(v4, (uint64_t)qword_1000EF7E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  id v13 = sub_100070304(v11, (uint64_t)v7, v2);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  os_log_type_t v15 = (void (**)())&v11[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  uint64_t v16 = *(void *)&v11[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *os_log_type_t v15 = sub_1000706B0;
  v15[1] = (void (*)())v14;
  sub_1000647CC(v16);

  return v13;
}

void sub_10006E72C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10006F950();
  }
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF7E8);
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupBaseScannerViewController handler called", v5, 2u);
    swift_slowDealloc();
  }
}

void sub_10006E83C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v32 - v10;
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupVisualAuthViewController();
  v36.receiver = v1;
  v36.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100017068((uint64_t)v4);
    if (qword_1000ED818 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF7E8);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupVisualAuthViewController: failed in viewDidLoad because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED818 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF7E8);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    NSString v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v35 = v33;
      *(_DWORD *)uint64_t v21 = 136315138;
      v32[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_100048718(v23, v22, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupVisualAuthViewController: viewDidLoad called with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_1000932E0(v25, (uint64_t)sub_100070734, v24);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v26 = *(void *)&v11[*(int *)(v5 + 72)];
    [v1 setDismissalType:v26];
    if ((v26 & 2) == 0 && *(void *)&v11[*(int *)(v5 + 76) + 8])
    {
      NSString v27 = String._bridgeToObjectiveC()();
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = [v1 dismissalConfirmationActionWithTitle:v27 message:v28 confirmButtonTitle:v29 cancelButtonTitle:v30];

      [v1 setDismissButtonAction:v31];
    }
    sub_10001712C((uint64_t)v11);
  }
}

void sub_10006ED40(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF7E8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)uint64_t v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupVisualAuthViewController: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      _OWORD v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

uint64_t sub_10006EFAC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  id v47 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v48 = (char *)v43 - v16;
  uint64_t v17 = (objc_class *)type metadata accessor for HomePodSetupVisualAuthViewController();
  v56.receiver = v2;
  v56.super_class = v17;
  [super viewWillAppear:a1 & 1];
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = sub_1000133A0(v18, (uint64_t)qword_1000EF7E8);
  os_log_type_t v20 = v2;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v44 = v10;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v45 = v9;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v46 = v4;
    v43[0] = v25;
    v43[1] = v19;
    *(_DWORD *)uint64_t v24 = 138412290;
    aBlock[0] = v20;
    uint64_t v26 = v6;
    NSString v27 = v20;
    uint64_t v10 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)v43[0] = v20;

    unint64_t v6 = v26;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "HomePod Setup %@ viewWillAppear", v24, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    uint64_t v4 = v46;
    swift_slowDealloc();
    uint64_t v9 = v45;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v21 = v20;
  }

  uint64_t result = IsAppleInternalBuild();
  if (result)
  {
    if (qword_1000ED740 != -1) {
      uint64_t result = swift_once();
    }
    unint64_t v29 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
    if ((v29 & 0x2000000000000000) != 0) {
      uint64_t v30 = HIBYTE(v29) & 0xF;
    }
    else {
      uint64_t v30 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode) & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      id v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "HomePodSetupVisualAuthViewController: hasForcedPasscode so selecting manual pairing button.", v33, 2u);
        swift_slowDealloc();
      }

      sub_1000150E4();
      uint64_t v46 = static OS_dispatch_queue.main.getter();
      uint64_t v34 = v47;
      static DispatchTime.now()();
      void *v12 = 2;
      (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v9);
      uint64_t v35 = v48;
      + infix(_:_:)();
      (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v36 = v50;
      uint64_t v37 = *(void (**)(char *, uint64_t))(v49 + 8);
      v37(v34, v50);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v20;
      aBlock[4] = sub_100070710;
      aBlock[5] = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100089B18;
      aBlock[3] = &unk_1000DC588;
      id v39 = _Block_copy(aBlock);
      id v40 = v20;
      swift_release();
      unint64_t v41 = v51;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10001512C();
      sub_10000EE48(&qword_1000EDEA0);
      sub_100015184();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v42 = (void *)v46;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v53);
      return ((uint64_t (*)(char *, uint64_t))v37)(v35, v36);
    }
  }
  return result;
}

void sub_10006F73C(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for HomePodSetupVisualAuthViewController();
  [super viewDidDisappear:a1 & 1];
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000133A0(v3, (uint64_t)qword_1000EF7E8);
  uint64_t v4 = v1;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    uint64_t v9 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v4;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePod Setup %@ viewDidDisappear", v7, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v5 = v4;
  }
}

uint64_t sub_10006F950()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  objc_super v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - v11;
  sub_10008C85C();
  sub_1000150E4();
  uint64_t v19 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  if (qword_1000ED820 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for DispatchTimeInterval();
  sub_1000133A0(v13, (uint64_t)qword_1000EF800);
  + infix(_:_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000706B8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100089B18;
  aBlock[3] = &unk_1000DC538;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001512C();
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v17 = (void *)v19;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

void sub_10006FD10()
{
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EF7E8);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "HomePodSetupVisualAuthViewController: detectedHomePod so selecting primary button.", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      uint64_t v9 = 0;
      memset(v8, 0, sizeof(v8));
      memset(&v7[8], 0, 40);
      v7[0] = 1;
      sub_100013664((uint64_t)v8, (uint64_t)&v7[8], &qword_1000ED970);
      v10[0] = *(_OWORD *)v7;
      v10[1] = *(_OWORD *)&v7[16];
      v10[2] = *(_OWORD *)&v7[32];
      sub_10007A7CC(v10);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v10);
    }
  }
}

uint64_t sub_10006FE94()
{
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EF7E8);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "HomePodSetupVisualAuthViewController: User tapped on manual pairing button.", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    memset(&v5[8], 0, 40);
    v5[0] = 2;
    sub_100013664((uint64_t)v6, (uint64_t)&v5[8], &qword_1000ED970);
    v8[0] = *(_OWORD *)v5;
    v8[1] = *(_OWORD *)&v5[16];
    _OWORD v8[2] = *(_OWORD *)&v5[32];
    sub_10007A7CC(v8);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v8);
  }
  return result;
}

uint64_t sub_10006FFF0()
{
  sub_10001371C(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel;

  return sub_100017068(v1);
}

id sub_100070030()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupVisualAuthViewController();
  [super dealloc];
}

uint64_t sub_1000700B4()
{
  return type metadata accessor for HomePodSetupVisualAuthViewController();
}

uint64_t type metadata accessor for HomePodSetupVisualAuthViewController()
{
  uint64_t result = qword_1000EF840;
  if (!qword_1000EF840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100070108()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1000701A4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_1000701F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id sub_1000701F8()
{
  uint64_t v1 = v0;
  if (qword_1000ED818 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF7E8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SVSHomePodIDViewController: start was called", v5, 2u);
    swift_slowDealloc();
  }

  SVSHomePodIDViewController.configureEngine()();
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine);

  return [v6 preheat];
}

id sub_100070304(void *a1, uint64_t a2, char *a3)
{
  uint64_t v6 = &a3[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_log];
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  type metadata accessor for SVSLPCActivityIndicatorViewController();
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_super v10 = a3;
  id v11 = [v9 init];
  *(void *)&v10[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_viewfinderViewController] = v11;
  uint64_t v12 = &v10[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_scannerEngineViewController];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = &off_1000DC4D0;
  id v13 = a1;

  id v14 = [objc_allocWithZone((Class)PRXCardContentView) initWithCardStyle:0];
  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for ScannerViewController();
  [super initWithContentView:v14];

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v15;
}

void sub_10007047C(uint64_t a1)
{
  uint64_t v3 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000133D8(a1, (uint64_t)v5);
  uint64_t v6 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v5, v7, &qword_1000EF130);
  swift_endAccess();
  NSString v8 = String._bridgeToObjectiveC()();
  [v1 setTitle:v8];

  id v9 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  if (v11)
  {
    id v12 = objc_allocWithZone((Class)PRXLabel);
    id v13 = v11;
    id v14 = [v12 initWithStyle:1];
    [v14 setAttributedText:v13];
    id v15 = [v1 contentView];
    [v15 setSubtitleLabel:v14];
  }
}

uint64_t sub_100070678()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000706B0()
{
}

void sub_1000706B8()
{
}

uint64_t sub_1000706C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000706D0()
{
  return swift_release();
}

uint64_t sub_1000706D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100070710()
{
  return sub_10006FE94();
}

void sub_100070734(char *a1)
{
}

void sub_100070744(double a1)
{
  id v3 = [v1 contentView];
  id v4 = [v3 auxiliaryViews];

  if (!v4) {
    goto LABEL_13;
  }
  sub_100070880();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_11;
  }
LABEL_4:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      id v9 = v8;
      [v8 setAlpha:a1];
    }
    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

unint64_t sub_100070880()
{
  unint64_t result = qword_1000EF850[0];
  if (!qword_1000EF850[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1000EF850);
  }
  return result;
}

uint64_t sub_1000708C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000708C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100070970(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    id v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    id v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v11 = *v12;
    uint64_t v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_100070A94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_100070B10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_100070BB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_100070C68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_100070CF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_100070D90(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 24) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100070F38(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 24) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1000711A0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for PRXActionInfo()
{
  return sub_1000711E0();
}

uint64_t sub_1000711E0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100071210()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF8D8);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF8D8);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000712D8()
{
  qword_1000EF8F0 = 0x4024000000000000;
}

void sub_1000712E8()
{
  qword_1000EF8F8 = 0xC02E000000000000;
}

void sub_1000712F8()
{
  qword_1000EF900 = 0x4046800000000000;
}

void sub_10007130C()
{
  qword_1000EF908 = 0x404C800000000000;
}

void sub_100071320()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  BOOL v11 = (char *)v31 - v10;
  unsigned int v12 = (objc_class *)type metadata accessor for HomePodSetupStereoViewController();
  v35.receiver = v1;
  v35.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED828 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EF8D8);
    int v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupStereoViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000757E0((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000ED828 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EF8D8);
    sub_100075778((uint64_t)v11, (uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v34 = v32;
      *(_DWORD *)uint64_t v21 = 136315138;
      v31[1] = v21 + 4;
      uint64_t v23 = *v9;
      unint64_t v22 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_100048718(v23, v22, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100075848((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupStereoViewController: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100075848((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    (*(void (**)(char *))((swift_isaMask & *v1) + 0xD8))(v11);
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_1000932E0(v25, (uint64_t)sub_1000758E0, v24);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v11[*(int *)(v5 + 72)] & 2) == 0 && *(void *)&v11[*(int *)(v5 + 76) + 8])
    {
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v1 dismissalConfirmationActionWithTitle:v26 message:v27 confirmButtonTitle:v28 cancelButtonTitle:v29];

      [v1 setDismissButtonAction:v30];
    }
    sub_100075848((uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
  }
}

void sub_1000718BC(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED828 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF8D8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)BOOL v11 = sub_100048718(v6, v7, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupStereoViewController: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      memset(&v11[8], 0, 40);
      v11[0] = v1;
      sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
      v14[0] = *(_OWORD *)v11;
      v14[1] = *(_OWORD *)&v11[16];
      _OWORD v14[2] = *(_OWORD *)&v11[32];
      sub_10007A7CC(v14);
      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v14);
    }
  }
}

void sub_100071BB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000EE48(&qword_1000EF130);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v16 = (char *)&v62 - v15;
  uint64_t v17 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_isConfigured]) {
    return;
  }
  id v65 = v6;
  id v66 = v10;
  uint64_t v67 = v8;
  v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_isConfigured] = 1;
  NSString v20 = String._bridgeToObjectiveC()();
  [v2 setTitle:v20];

  NSString v21 = String._bridgeToObjectiveC()();
  [v2 setSubtitle:v21];

  unint64_t v22 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  [v2 setDismissalType:*(void *)(a1 + v22[18])];
  uint64_t v23 = (uint64_t *)(a1 + v22[7]);
  uint64_t v25 = *v23;
  unint64_t v24 = v23[1];
  uint64_t v26 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v26 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    id v27 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:1];
    NSString v28 = String._bridgeToObjectiveC()();
    [v27 setText:v28];

    [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v2 view];
    if (!v29)
    {
      __break(1u);
      return;
    }
    id v30 = v29;
    [v29 addSubview:v27];

    id v31 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel];
    *(void *)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel] = v27;
  }
  id v68 = v14;
  uint64_t v69 = v2;
  uint64_t v70 = v7;
  uint64_t v32 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess();
  sub_10000FD94(v32, (uint64_t)v16, &qword_1000EF130);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, int *))(*((void *)v22 - 1) + 48);
  if (v33(v16, 1, v22)
    || (uint64_t v34 = &v16[v22[48]],
        uint64_t v35 = v67 + 48,
        uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48),
        v36(v34, 1, v70)))
  {
    sub_10000F674((uint64_t)v16, &qword_1000EF130);
    uint64_t v37 = type metadata accessor for AdjustedImage(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v19, 1, 1, v37);
    goto LABEL_10;
  }
  id v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
  uint64_t v64 = v35;
  uint64_t v44 = (uint64_t)v34;
  uint64_t v45 = (uint64_t)v66;
  sub_100075778(v44, (uint64_t)v66, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  sub_10000F674((uint64_t)v16, &qword_1000EF130);
  sub_10000FD94(v45 + *(int *)(v70 + 20), (uint64_t)v19, &qword_1000EE040);
  sub_100075848(v45, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  uint64_t v46 = type metadata accessor for AdjustedImage(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v19, 1, v46) == 1)
  {
LABEL_10:
    sub_10000F674((uint64_t)v19, &qword_1000EE040);
    uint64_t v38 = (uint64_t)v68;
    sub_10000FD94(v32, (uint64_t)v68, &qword_1000EF130);
    if (v33((char *)v38, 1, v22)
      || (uint64_t v39 = v38 + v22[48], (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v39, 1, v70)))
    {
      sub_10000F674(v38, &qword_1000EF130);
LABEL_13:
      if (qword_1000ED828 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_1000133A0(v40, (uint64_t)qword_1000EF8D8);
      unint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        id v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "HomePodSetupStereoViewController configureUI: stereoPairImages does not have a right, using single stereo constraints", v43, 2u);
        swift_slowDealloc();
      }

      sub_100072484();
      return;
    }
    uint64_t v53 = (uint64_t)v66;
    sub_100075778(v39, (uint64_t)v66, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    sub_10000F674(v38, &qword_1000EF130);
    uint64_t v54 = *(void **)(v53 + *(int *)(v70 + 24));
    id v55 = v54;
    sub_100075848(v53, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    if (!v54) {
      goto LABEL_13;
    }

    if (qword_1000ED828 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_1000133A0(v56, (uint64_t)qword_1000EF8D8);
    id v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v57, v58))
    {
LABEL_36:

      sub_1000735B8();
      return;
    }
    id v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v59 = 0;
    id v60 = "HomePodSetupStereoViewController configureUI: stereoPairImages has no right image but has an appleTV";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v57, v58, v60, v59, 2u);
    swift_slowDealloc();
    goto LABEL_36;
  }
  sub_10000F674((uint64_t)v19, &qword_1000EE040);
  uint64_t v47 = (uint64_t)v65;
  sub_10000FD94(a1 + v22[48], (uint64_t)v65, &qword_1000EE048);
  int v48 = v63(v47, 1, v70);
  sub_10000F674(v47, &qword_1000EE048);
  if (v48 != 1)
  {
    if (qword_1000ED828 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_1000133A0(v61, (uint64_t)qword_1000EF8D8);
    id v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v57, v58)) {
      goto LABEL_36;
    }
    id v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v59 = 0;
    id v60 = "HomePodSetupStereoViewController configureUI: stereoPairImages has a right, using pair stereo constraints";
    goto LABEL_35;
  }
  if (qword_1000ED828 != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  sub_1000133A0(v49, (uint64_t)qword_1000EF8D8);
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "No stereo images found", v52, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100072484()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AdjustedImage(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v130 = (id *)((char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000EE48(&qword_1000EF130);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v126 - v11;
  uint64_t v13 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v129 = v0;
  uint64_t v18 = (uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  uint64_t v19 = v15;
  swift_beginAccess();
  sub_10000FD94(v18, (uint64_t)v12, &qword_1000EF130);
  NSString v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v20(v12, 1, v19) == 1)
  {
    NSString v21 = &qword_1000EF130;
    uint64_t v22 = (uint64_t)v12;
    return sub_10000F674(v22, v21);
  }
  sub_1000757E0((uint64_t)v12, (uint64_t)v17, type metadata accessor for HomePodSetupViewModel);
  sub_10000FD94(v18, (uint64_t)v10, &qword_1000EF130);
  if (v20(v10, 1, v19))
  {
    sub_10000F674((uint64_t)v10, &qword_1000EF130);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
LABEL_6:
    sub_100075848((uint64_t)v17, type metadata accessor for HomePodSetupViewModel);
    NSString v21 = &qword_1000EE040;
    uint64_t v22 = (uint64_t)v3;
    return sub_10000F674(v22, v21);
  }
  sub_10000FD94((uint64_t)&v10[*(int *)(v19 + 108)], (uint64_t)v3, &qword_1000EE040);
  sub_10000F674((uint64_t)v10, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    goto LABEL_6;
  }
  uint64_t v127 = v19;
  uint64_t v128 = v17;
  unint64_t v24 = v130;
  sub_1000757E0((uint64_t)v3, (uint64_t)v130, type metadata accessor for AdjustedImage);
  if (qword_1000ED828 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_1000133A0(v25, (uint64_t)qword_1000EF8D8);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  id v29 = v129;
  if (v28)
  {
    id v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "HomePodSetupStereoViewController setUpFixedLayout, Setting up a single stereo image view", v30, 2u);
    swift_slowDealloc();
  }

  id v31 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v24];
  sub_100083920((uint64_t)v24 + *(int *)(v4 + 20));
  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v32 = &selRef_loadTemplate_;
  id v33 = [v29 contentView];
  [v33 addSubview:v31];

  unint64_t v132 = (unint64_t)_swiftEmptyArrayStorage;
  int v34 = v128[*(int *)(v127 + 112)];
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  id v126 = v31;
  if (v34 == 1)
  {
    if (v37)
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "HomePodSetupStereoViewController setUpFixedLayout using useSoloHomePodConstraints constraints", v38, 2u);
      swift_slowDealloc();
    }

    id v39 = [objc_allocWithZone((Class)UILayoutGuide) init];
    id v40 = [v29 contentView];
    [v40 addLayoutGuide:v39];

    id v41 = [v29 contentView];
    id v42 = [v41 mainContentGuide];

    sub_10000EE48(&qword_1000EF140);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1000B0AD0;
    id v44 = [v39 topAnchor];
    id v45 = [v42 topAnchor];
    id v46 = [v44 constraintGreaterThanOrEqualToAnchor:v45];

    *(void *)(v43 + 32) = v46;
    id v47 = [v39 bottomAnchor];
    id v48 = [v42 bottomAnchor];
    id v49 = [v47 constraintLessThanOrEqualToAnchor:v48];

    *(void *)(v43 + 40) = v49;
    id v50 = [v39 centerYAnchor];
    id v51 = [v42 centerYAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51];

    *(void *)(v43 + 48) = v52;
    id v53 = [v39 leadingAnchor];
    id v54 = [v42 leadingAnchor];
    id v55 = [v53 constraintEqualToAnchor:v54];

    *(void *)(v43 + 56) = v55;
    id v56 = [v39 trailingAnchor];
    id v57 = [v42 trailingAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57];

    *(void *)(v43 + 64) = v58;
    id v59 = [v39 heightAnchor];
    uint64_t v61 = v127;
    uint64_t v60 = (uint64_t)v128;
    double v62 = *(double *)&v128[*(int *)(v127 + 116)];
    id v63 = [v59 constraintEqualToConstant:v62];

    *(void *)(v43 + 72) = v63;
    id v64 = v126;
    id v65 = [v126 centerYAnchor];
    id v66 = [v39 centerYAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v43 + 80) = v67;
    id v68 = [v64 centerXAnchor];
    id v69 = [v39 centerXAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69];

    *(void *)(v43 + 88) = v70;
    uint64_t v32 = &selRef_loadTemplate_;
    id v71 = [v64 heightAnchor];
    id v72 = [v71 constraintEqualToConstant:v62];

    *(void *)(v43 + 96) = v72;
    id v31 = v64;
    id v73 = [v64 widthAnchor];
    id v74 = [v73 constraintEqualToConstant:*(double *)(v60 + *(int *)(v61 + 120))];

    *(void *)(v43 + 104) = v74;
    uint64_t v131 = v43;
    specialized Array._endMutation()();
    uint64_t v75 = (void *)v131;

    uint64_t v76 = v60;
    id v29 = v129;
  }
  else
  {
    if (v37)
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "HomePodSetupStereoViewController setUpFixedLayout NOT using useSoloHomePodConstraints constraints", v77, 2u);
      swift_slowDealloc();
    }

    sub_10000EE48(&qword_1000EF140);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_1000B1940;
    id v79 = [v31 centerXAnchor];
    id v80 = [v29 contentView];
    id v81 = [v80 mainContentGuide];

    id v82 = [v81 centerXAnchor];
    id v83 = [v79 constraintEqualToAnchor:v82];

    *(void *)(v78 + 32) = v83;
    id v84 = [v31 topAnchor];
    id v85 = [v29 contentView];
    id v86 = [v85 mainContentGuide];

    id v87 = [v86 topAnchor];
    id v88 = [v84 constraintGreaterThanOrEqualToAnchor:v87];

    *(void *)(v78 + 40) = v88;
    id v89 = [v31 bottomAnchor];
    id v90 = [v29 contentView];
    id v91 = [v90 mainContentGuide];

    id v92 = [v91 bottomAnchor];
    id v93 = [v89 constraintLessThanOrEqualToAnchor:v92];

    *(void *)(v78 + 48) = v93;
    uint64_t v131 = v78;
    specialized Array._endMutation()();
    uint64_t v75 = (void *)v131;
    uint64_t v76 = (uint64_t)v128;
  }
  uint64_t v94 = (uint64_t)v130;
  unint64_t v132 = (unint64_t)v75;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v29) + 0xA0))())
  {
    id v95 = [v31 centerYAnchor];
    id v96 = [v29 v32[277]];
    id v97 = [v96 mainContentGuide];

    id v98 = [v97 centerYAnchor];
    id v99 = [v95 constraintEqualToAnchor:v98];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  unint64_t v100 = *(void **)((char *)v29 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel);
  if (v100)
  {
    id v101 = v100;
    id v102 = [v101 leadingAnchor];
    id v103 = [v29 v32[277]];
    id v104 = [v103 mainContentGuide];

    id v105 = [v104 leadingAnchor];
    Swift::String v129 = [v102 constraintEqualToAnchor:v105];

    id v106 = [v101 trailingAnchor];
    id v107 = [v29 v32[277]];
    id v108 = [v107 mainContentGuide];

    id v109 = [v108 trailingAnchor];
    id v110 = [v106 constraintEqualToAnchor:v109];

    id v111 = [v101 topAnchor];
    p_name = &stru_1000E6FF8.name;
    id v113 = [v31 bottomAnchor];
    id v114 = [v111 constraintEqualToAnchor:v113 constant:10.0];

    id v115 = [v101 bottomAnchor];
    id v116 = [v29 v32[277]];
    id v117 = [v116 mainContentGuide];

    id v118 = [v117 bottomAnchor];
    id v119 = [v115 constraintEqualToAnchor:v118];

    if (v132 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v120 = *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v94 = (uint64_t)v130;
    if (__OFADD__(v120, 4))
    {
      __break(1u);
    }
    else
    {
      sub_100075434(v120 + 4);
      specialized Array._endMutation()();
      p_name = v129;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_28:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v121 = v110;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v122 = v114;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v123 = v119;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        uint64_t v76 = (uint64_t)v128;
        id v31 = v126;
        goto LABEL_35;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_28;
  }
LABEL_35:
  uint64_t v124 = self;
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v124 activateConstraints:isa];

  sub_100075848(v94, type metadata accessor for AdjustedImage);
  return sub_100075848(v76, type metadata accessor for HomePodSetupViewModel);
}

uint64_t sub_1000735B8()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EE040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v182 = (char *)v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v181 = (uint64_t)v173 - v5;
  __chkstk_darwin(v4);
  uint64_t v183 = (char *)v173 - v6;
  uint64_t v7 = (int *)type metadata accessor for AdjustedImage(0);
  uint64_t v184 = *((void *)v7 - 1);
  uint64_t v185 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000EE48(&qword_1000EE048);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  NSString v20 = (char *)v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v173 - v21;
  uint64_t v23 = (uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v23, (uint64_t)v12, &qword_1000EF130);
  uint64_t v24 = type metadata accessor for HomePodSetupViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v12, 1, v24))
  {
    sub_10000F674((uint64_t)v12, &qword_1000EF130);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    return sub_10000F674((uint64_t)v15, &qword_1000EE048);
  }
  uint64_t v175 = v20;
  uint64_t v176 = v9;
  uint64_t v25 = v0;
  uint64_t v26 = v185;
  uint64_t v179 = v22;
  sub_10000FD94((uint64_t)&v12[*(int *)(v24 + 192)], (uint64_t)v15, &qword_1000EE048);
  sub_10000F674((uint64_t)v12, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_10000F674((uint64_t)v15, &qword_1000EE048);
  }
  uint64_t v177 = v16;
  BOOL v28 = v179;
  sub_1000757E0((uint64_t)v15, (uint64_t)v179, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  if (qword_1000ED828 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  v173[1] = sub_1000133A0(v29, (uint64_t)qword_1000EF8D8);
  id v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "HomePodSetupStereoViewController setUpCompositeLayout started", v32, 2u);
    swift_slowDealloc();
  }

  id v33 = [objc_allocWithZone((Class)UIView) init];
  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v34 = [v25 contentView];
  [v34 addSubview:v33];

  id v35 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v28];
  sub_100083920((uint64_t)v28 + v26[5]);
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v33 addSubview:v35];
  sub_10000EE48(&qword_1000EF140);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1000B1350;
  id v37 = [v35 leftAnchor];
  id v38 = [v33 leftAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v36 + 32) = v39;
  id v178 = v35;
  id v40 = [v35 topAnchor];
  id v41 = [v33 topAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  *(void *)(v36 + 40) = v42;
  id v43 = [v33 leftAnchor];
  id v44 = [v25 contentView];
  id v45 = [v44 mainContentGuide];

  id v46 = [v45 leftAnchor];
  id v47 = [v43 constraintGreaterThanOrEqualToAnchor:v46];

  *(void *)(v36 + 48) = v47;
  id v48 = [v33 rightAnchor];
  id v49 = [v25 contentView];
  id v50 = [v49 mainContentGuide];

  id v51 = [v50 rightAnchor];
  id v52 = [v48 constraintLessThanOrEqualToAnchor:v51];

  *(void *)(v36 + 56) = v52;
  id v53 = [v33 bottomAnchor];
  id v54 = [v25 contentView];
  id v55 = [v54 mainContentGuide];

  id v56 = [v55 bottomAnchor];
  id v57 = [v53 constraintLessThanOrEqualToAnchor:v56];

  *(void *)(v36 + 64) = v57;
  id v58 = [v33 centerXAnchor];
  id v59 = [v25 contentView];
  id v60 = [v59 mainContentGuide];

  id v61 = [v60 centerXAnchor];
  id v62 = [v58 constraintEqualToAnchor:v61];

  *(void *)(v36 + 72) = v62;
  unint64_t v186 = v36;
  uint64_t v63 = specialized Array._endMutation()();
  LOBYTE(v61) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v25) + 0xA0))(v63);
  id v64 = [v33 topAnchor];
  Swift::String v174 = (char *)v25;
  id v65 = [v25 contentView];
  id v66 = [v65 mainContentGuide];

  id v67 = [v66 topAnchor];
  id v180 = v33;
  if (v61)
  {
    id v68 = [v64 constraintGreaterThanOrEqualToAnchor:v67];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v69 = v177;
    uint64_t v70 = (uint64_t)v183;
    if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v64 = [v33 centerYAnchor];
    id v71 = [v174 contentView];
    id v72 = [v71 mainContentGuide];

    id v67 = [v72 centerYAnchor];
    id v73 = [v64 constraintEqualToAnchor:v67];
  }
  else
  {
    uint64_t v69 = v177;
    uint64_t v70 = (uint64_t)v183;
    if (qword_1000ED838 != -1) {
      swift_once();
    }
    id v73 = [v64 constraintEqualToAnchor:v67 constant:*(double *)&qword_1000EF8F8];
  }
  id v74 = v73;

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v75 = v185;
  uint64_t v76 = (uint64_t)v179;
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  uint64_t v77 = v184;
  specialized Array._endMutation()();
  uint64_t v184 = v76 + *(int *)(v69 + 20);
  sub_10000FD94(v184, v70, &qword_1000EE040);
  uint64_t v185 = *(int **)(v77 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v185)(v70, 1, v75) == 1)
  {
    sub_10000F674(v70, &qword_1000EE040);
    goto LABEL_32;
  }
  uint64_t v78 = v176;
  sub_1000757E0(v70, (uint64_t)v176, type metadata accessor for AdjustedImage);
  id v79 = Logger.logObject.getter();
  os_log_type_t v80 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v79, v80))
  {
    id v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v81 = 0;
    _os_log_impl((void *)&_mh_execute_header, v79, v80, "HomePodSetupStereoViewController: stereoImags has right image", v81, 2u);
    swift_slowDealloc();
  }

  id v82 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v78];
  sub_100083920((uint64_t)v78 + v75[5]);
  [v82 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v83 = v180;
  [v180 addSubview:v82];
  id v84 = [v82 topAnchor];
  id v85 = v178;
  id v86 = [v178 topAnchor];
  id v87 = [v84 constraintEqualToAnchor:v86];

  id v88 = [v82 leftAnchor];
  id v89 = [v85 rightAnchor];
  if (qword_1000ED830 != -1) {
    swift_once();
  }
  id v90 = [v88 constraintEqualToAnchor:v89 constant:*(double *)&qword_1000EF8F0];

  id v91 = [v82 rightAnchor];
  id v92 = [v83 rightAnchor];
  id v93 = [v91 constraintEqualToAnchor:v92];

  id v94 = (id)v186;
  if (!(v186 >> 62))
  {
    uint64_t v95 = *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v96 = v95 + 3;
    if (!__OFADD__(v95, 3)) {
      goto LABEL_26;
    }
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  swift_bridgeObjectRetain();
  uint64_t v171 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v96 = v171 + 3;
  if (__OFADD__(v171, 3)) {
    goto LABEL_85;
  }
LABEL_26:
  sub_100075434(v96);
  specialized Array._endMutation()();
  id v94 = v87;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_86:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v97 = v90;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v98 = v93;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  sub_100075848((uint64_t)v176, type metadata accessor for AdjustedImage);
  uint64_t v76 = (uint64_t)v179;
  uint64_t v69 = v177;
LABEL_32:
  id v99 = *(void **)(v76 + *(int *)(v69 + 24));
  if (!v99)
  {
    id v129 = [v178 bottomAnchor];
    id v130 = [v180 bottomAnchor];
    id v131 = [v129 constraintEqualToAnchor:v130];

    id v100 = v131;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v128 = (uint64_t)v182;
    id v108 = v174;
    goto LABEL_57;
  }
  id v100 = v99;
  id v101 = Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v101, v102))
  {
    id v103 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v103 = 0;
    _os_log_impl((void *)&_mh_execute_header, v101, v102, "HomePodSetupStereoViewController createStereoPairImages: stereoImags has apple tv image", v103, 2u);
    swift_slowDealloc();
  }

  id v104 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:v100];
  [v104 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v105 = v180;
  [v180 addSubview:v104];
  id v106 = [v104 centerYAnchor];
  id v107 = [v178 centerYAnchor];
  id v108 = v174;
  if (qword_1000ED840 != -1) {
    swift_once();
  }
  id v109 = [v106 constraintEqualToAnchor:v107 constant:*(double *)&qword_1000EF900];

  id v110 = [v104 bottomAnchor];
  id v111 = [v105 bottomAnchor];
  id v112 = [v110 constraintEqualToAnchor:v111];

  if (!(v186 >> 62))
  {
    uint64_t v113 = *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v114 = v113 + 2;
    if (!__OFADD__(v113, 2)) {
      goto LABEL_39;
    }
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  swift_bridgeObjectRetain();
  uint64_t v169 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v114 = v169 + 2;
  if (__OFADD__(v169, 2)) {
    goto LABEL_77;
  }
LABEL_39:
  sub_100075434(v114);
  specialized Array._endMutation()();
  id v109 = v109;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_78:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v115 = v112;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v116 = v181;
  sub_10000FD94(v184, v181, &qword_1000EE040);
  int v117 = ((uint64_t (*)(uint64_t, uint64_t, int *))v185)(v116, 1, v75);
  sub_10000F674(v116, &qword_1000EE040);
  id v118 = [v104 centerXAnchor];
  if (v117 == 1)
  {
    id v119 = [v178 centerXAnchor];
    id v120 = v180;
    if (qword_1000ED848 != -1) {
      swift_once();
    }
    id v121 = [v118 constraintEqualToAnchor:v119 constant:*(double *)&qword_1000EF908];

    id v122 = [v104 rightAnchor];
    id v123 = [v120 rightAnchor];
    id v124 = [v122 constraintEqualToAnchor:v123];

    if (v186 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v172 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v126 = v172 + 2;
      if (!__OFADD__(v172, 2))
      {
LABEL_47:
        sub_100075434(v126);
        specialized Array._endMutation()();
        id v121 = v121;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_48:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v127 = v124;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          uint64_t v128 = (uint64_t)v182;
          uint64_t v69 = v177;
          goto LABEL_57;
        }
LABEL_90:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v125 = *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v126 = v125 + 2;
      if (!__OFADD__(v125, 2)) {
        goto LABEL_47;
      }
    }
    __break(1u);
    goto LABEL_90;
  }
  id v132 = [v180 centerXAnchor];
  id v133 = [v118 constraintEqualToAnchor:v132];

  id v134 = v133;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v69 = v177;
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v128 = (uint64_t)v182;
LABEL_57:

  sub_10000FD94(v184, v128, &qword_1000EE040);
  int v135 = ((uint64_t (*)(uint64_t, uint64_t, int *))v185)(v128, 1, v75);
  sub_10000F674(v128, &qword_1000EE040);
  uint64_t v136 = (uint64_t)v175;
  sub_100075778(v76, (uint64_t)v175, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  if (v135 == 1)
  {
    uint64_t v137 = *(void *)(v136 + *(int *)(v69 + 24));
    sub_100075848(v136, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    id v138 = v180;
    if (!v137)
    {
      id v139 = [v178 rightAnchor];
      id v140 = [v138 rightAnchor];
      id v141 = [v139 constraintEqualToAnchor:v140];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  else
  {
    sub_100075848(v136, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    id v138 = v180;
  }
  uint64_t v142 = *(void **)&v108[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel];
  if (!v142) {
    goto LABEL_74;
  }
  id v143 = v142;
  id v144 = [v143 leadingAnchor];
  id v145 = [v108 contentView];
  id v146 = [v145 mainContentGuide];

  id v147 = [v146 leadingAnchor];
  uint64_t v185 = (int *)[v144 constraintEqualToAnchor:v147];

  id v148 = [v143 trailingAnchor];
  id v149 = [v108 contentView];
  id v150 = [v149 mainContentGuide];

  id v151 = [v150 trailingAnchor];
  id v152 = [v148 constraintEqualToAnchor:v151];

  p_name = &stru_1000E6FF8.name;
  id v154 = [v143 bottomAnchor];
  id v155 = [v108 contentView];
  id v156 = [v155 mainContentGuide];

  id v157 = [v156 bottomAnchor];
  id v158 = [v154 constraintEqualToAnchor:v157];

  id v159 = [v143 topAnchor];
  id v160 = [v180 bottomAnchor];
  id v161 = [v159 constraintEqualToAnchor:v160 constant:10.0];

  if (!(v186 >> 62))
  {
    uint64_t v162 = *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v163 = v162 + 4;
    if (!__OFADD__(v162, 4)) {
      goto LABEL_66;
    }
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  swift_bridgeObjectRetain();
  uint64_t v170 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v163 = v170 + 4;
  if (__OFADD__(v170, 4)) {
    goto LABEL_81;
  }
LABEL_66:
  sub_100075434(v163);
  specialized Array._endMutation()();
  p_name = v185;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_82:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v164 = v152;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v165 = v158;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v166 = v161;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v76 = (uint64_t)v179;
  id v138 = v180;
LABEL_74:
  uint64_t v167 = self;
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v167 activateConstraints:isa];

  return sub_100075848(v76, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
}

id sub_10007515C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupStereoViewController();
  return [super dealloc];
}

uint64_t sub_1000751F8()
{
  return type metadata accessor for HomePodSetupStereoViewController();
}

uint64_t type metadata accessor for HomePodSetupStereoViewController()
{
  uint64_t result = qword_1000EF948;
  if (!qword_1000EF948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007524C()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1000752FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_100075348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000754F4(a3);
}

uint64_t sub_100075350(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 4;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

uint64_t sub_1000753B0@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1000753E0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_10007540C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100075434(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t *v1 = result;
  }
  return result;
}

id sub_1000754F4(uint64_t a1)
{
  uint64_t v3 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED828 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EF8D8);
  uint64_t v7 = v1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109120;
    _OWORD v14[2] = [v7 isViewLoaded];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupStereoViewController: presenter:didUpdate viewModel, isViewloaded = %{BOOL}d", v10, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100075778(a1, (uint64_t)v5, type metadata accessor for HomePodSetupViewModel);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
  uint64_t v12 = (uint64_t)v7 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v5, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v7 isViewLoaded];
  if (result) {
    return (id)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0xD8))(a1);
  }
  return result;
}

uint64_t sub_100075778(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000757E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100075848(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000758A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000758E0(char *a1)
{
}

uint64_t sub_1000758E8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF958);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF958);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1000759B0()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView);
  }
  else
  {
    type metadata accessor for HomePodSetupWiFiInfoTableView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100075A28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EDF98);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v44 - v6;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupIntroViewController();
  v51.receiver = v1;
  v51.super_class = v12;
  [super viewDidLoad];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t Int64 = CFPrefs_GetInt64();

  if (Int64)
  {
    id v16 = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
    [v16 notificationOccurred:0];
    goto LABEL_16;
  }
  id v17 = [objc_allocWithZone((Class)CUAudioPlayer) init];
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setLabel:v18];

  [v17 setEnableSmartRouting:2];
  [v17 activate];
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [self bundleWithIdentifier:v19];

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_9:
    sub_1000774D4((uint64_t)v7);
    if (qword_1000ED850 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_1000133A0(v27, (uint64_t)qword_1000EF958);
    BOOL v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)id v30 = 136315138;
      v44[1] = sub_100048718(0xD00000000000001CLL, 0x80000001000B95F0, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "HomePodSetupIntro: viewDidLoad could not locate the audio file %s ", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    goto LABEL_15;
  }
  uint64_t v21 = v9;
  v44[0] = v20;
  id v22 = v20;
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 URLForResource:v23 withExtension:0];

  if (v24)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v5, v25, 1, v8);
  sub_100077534((uint64_t)v5, (uint64_t)v7);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v8);
  id v20 = (id)v44[0];
  if (v26 == 1) {
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v11, v7, v8);
  URL._bridgeToObjectiveC()(v31);
  id v33 = v32;
  [v17 playURL:v32 completion:0];

  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
LABEL_15:
  id v16 = *(id *)&v1[OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_audioPlayer];
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_audioPlayer] = v17;

LABEL_16:
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v35 = String._bridgeToObjectiveC()();
  id v49 = sub_1000774C4;
  uint64_t v50 = v34;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  id v47 = sub_100041068;
  id v48 = &unk_1000DC7C0;
  uint64_t v36 = _Block_copy(&aBlock);
  id v37 = [self actionWithTitle:v35 style:0 handler:v36];

  _Block_release(v36);
  swift_release();
  swift_release();
  [v1 setInfoButtonAction:v37];

  id v38 = [v1 infoButton];
  if (v38)
  {
    id v39 = v38;
    [v38 setAlpha:0.0];
  }
  id v40 = sub_1000759B0();
  [v40 setAlpha:0.0];

  id v41 = self;
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v49 = sub_1000774CC;
  uint64_t v50 = v42;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  id v47 = sub_100089B18;
  id v48 = &unk_1000DC7E8;
  id v43 = _Block_copy(&aBlock);
  swift_release();
  [v41 animateWithDuration:65538 delay:v43 options:0 animations:0.7 completion:8.0];
  _Block_release(v43);
}

void sub_1000761B4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong handleTapOnInfoButton];
  }
}

void sub_100076210()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong infoButton];

    if (v2)
    {
      [v2 setAlpha:1.0];
    }
  }
}

uint64_t sub_1000763F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for HomePodSetupViewModel(0) + 40));
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000932E0(v1, (uint64_t)sub_1000773D4, v2);

  return swift_release();
}

void sub_100076484(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF958);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)uint64_t v15 = sub_100048718(v6, v7, (uint64_t *)v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupIntro: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 showActivityIndicatorWithStatus:v10];

    id v11 = [v9 infoButton];
    char v12 = 1;
    if (v11)
    {
      NSString v13 = v11;
      unsigned int v14 = [v11 isActive];

      if (v14) {
        char v12 = 2;
      }
      else {
        char v12 = 1;
      }
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v17 = 0;
      memset(v16, 0, sizeof(v16));
      memset(&v15[8], 0, 40);
      v15[0] = v12;
      sub_10000F510((uint64_t)v16, (uint64_t)&v15[8]);
      v18[0] = *(_OWORD *)v15;
      v18[1] = *(_OWORD *)&v15[16];
      v18[2] = *(_OWORD *)&v15[32];
      sub_10007A7CC(v18);

      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)v18);
    }
    else
    {
    }
  }
}

void sub_10007679C()
{
  char v1 = v0;
  if (qword_1000ED850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF958);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupIntro: user tapped on the info button.", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = sub_1000759B0();
  [v6 setSeparatorStyle:0];

  id v7 = sub_1000759B0();
  sub_100095978();

  sub_100076F08();
  uint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  NSString v23 = sub_100077488;
  uint64_t v24 = v9;
  NSString v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_100089B18;
  id v22 = &unk_1000DC748;
  NSString v10 = _Block_copy(&v19);
  id v11 = v1;
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  NSString v23 = sub_100077490;
  uint64_t v24 = v12;
  NSString v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_10009A4B8;
  id v22 = &unk_1000DC798;
  NSString v13 = _Block_copy(&v19);
  unsigned int v14 = v11;
  swift_release();
  [v8 animateWithDuration:v10 animations:v13 completion:0.5];
  _Block_release(v13);
  _Block_release(v10);
  id v15 = sub_1000759B0();
  [v15 setHidden:0];

  if (v14[OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_loadedInfo])
  {
    id v16 = sub_1000759B0();
    sub_100095CB8();
LABEL_10:

    return;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    char v18 = sub_10009D32C((uint64_t)sub_1000774BC, v17);
    swift_unknownObjectRelease();
    swift_release_n();
    if ((v18 & 1) == 0)
    {
      id v16 = String._bridgeToObjectiveC()();
      [v14 showActivityIndicatorWithStatus:v16];
      goto LABEL_10;
    }
  }
}

void sub_100076B10(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView);
  if (v2) {
    [v2 setAlpha:0.0];
  }
  id v3 = sub_1000759B0();
  [v3 setAlpha:1.0];

  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_loadedInfo) & 1) == 0) {
    sub_100070744(0.0);
  }
}

void sub_100076B8C(uint64_t *a1)
{
  if (qword_1000ED850 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EF958);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupIntro: Request for PreAuth completed.", v5, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = Strong;
    *((unsigned char *)Strong + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_loadedInfo) = 1;
    [Strong hideActivityIndicator];
    sub_100070744(1.0);
    id v8 = sub_1000759B0();
    sub_100095B34(a1);
  }
}

void sub_100076CE0()
{
  char v1 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView];
  if (v1) {
    [v1 setHidden:0];
  }
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  NSString v13 = sub_100077414;
  uint64_t v14 = v3;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  id v11 = sub_100089B18;
  uint64_t v12 = &unk_1000DC6A8;
  os_log_type_t v4 = _Block_copy(&v9);
  uint64_t v5 = v0;
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  NSString v13 = sub_100077434;
  uint64_t v14 = v6;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  id v11 = sub_10009A4B8;
  uint64_t v12 = &unk_1000DC6F8;
  id v7 = _Block_copy(&v9);
  id v8 = v5;
  swift_release();
  [v2 animateWithDuration:v4 animations:v7 completion:0.5];
  _Block_release(v7);
  _Block_release(v4);
}

id sub_100076E88(uint64_t a1)
{
  id v2 = sub_1000759B0();
  [v2 setAlpha:0.0];

  id result = *(id *)(a1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView);
  if (result)
  {
    return [result setAlpha:1.0];
  }
  return result;
}

void sub_100076F08()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView;
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView);
  id v3 = sub_1000759B0();
  [v2 addSubview:v3];

  id v4 = [*(id *)(v0 + v1) mainContentGuide];
  uint64_t v5 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000B0BC0;
  id v7 = sub_1000759B0();
  id v8 = [v7 topAnchor];

  id v9 = [v4 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v6 + 32) = v10;
  id v11 = sub_1000759B0();
  id v12 = [v11 bottomAnchor];

  id v13 = [v4 bottomAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v6 + 40) = v14;
  id v15 = sub_1000759B0();
  id v16 = [v15 leadingAnchor];

  id v17 = [v4 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v6 + 48) = v18;
  id v19 = sub_1000759B0();
  id v20 = [v19 trailingAnchor];

  id v21 = [v4 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v6 + 56) = v22;
  specialized Array._endMutation()();
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];
}

void sub_100077234()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView);
}

id sub_100077274()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupIntroViewController();
  return [super dealloc];
}

uint64_t sub_1000772F8()
{
  return type metadata accessor for HomePodSetupIntroViewController();
}

uint64_t type metadata accessor for HomePodSetupIntroViewController()
{
  uint64_t result = qword_1000EF9A0;
  if (!qword_1000EF9A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007734C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10007739C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000773D4(char *a1)
{
}

uint64_t sub_1000773DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100077414()
{
  return sub_100076E88(*(void *)(v0 + 16));
}

uint64_t sub_10007741C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007742C()
{
  return swift_release();
}

void sub_100077434()
{
  id v0 = sub_1000759B0();
  [v0 setHidden:1];
}

void sub_100077488()
{
  sub_100076B10(*(void *)(v0 + 16));
}

id sub_100077490()
{
  id result = *(id *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView);
  if (result) {
    return [result setHidden:1];
  }
  return result;
}

void sub_1000774BC(uint64_t *a1)
{
}

void sub_1000774C4()
{
}

void sub_1000774CC()
{
}

uint64_t sub_1000774D4(uint64_t a1)
{
  uint64_t v2 = sub_10000EE48(&qword_1000EDF98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100077534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EDF98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000775D0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10007876C();
    sub_1000787AC();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v16 = v2;
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
    goto LABEL_29;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v17 + 8 * v13);
      uint64_t v11 = v3 + 1;
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14)
      {
LABEL_28:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
        id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v12)
        {
          do
          {
            if (objc_msgSend(v12, "events", v16) == (id)16) {
              break;
            }

            uint64_t v3 = v11;
            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            sub_10007876C();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v12 = v23;
            swift_unknownObjectRelease();
            uint64_t v11 = v3;
            uint64_t v9 = v4;
          }
          while (v23);
        }
        goto LABEL_33;
      }
      uint64_t v11 = v3 + 5;
      if (v3 + 5 < v8)
      {
        unint64_t v14 = *(void *)(v17 + 8 * v11);
        if (!v14)
        {
          uint64_t v15 = v3 + 6;
          while (v8 != v15)
          {
            unint64_t v14 = *(void *)(v17 + 8 * v15++);
            if (v14)
            {
              uint64_t v11 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_10001536C();
    return;
  }
  __break(1u);
}

uint64_t sub_100077874()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EF9B0);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EF9B0);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100077A84(void *a1, void (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  id v5 = [a1 userInfo];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v7 = sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
  }
  if (qword_1000ED858 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000133A0(v8, (uint64_t)qword_1000EF9B0);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    id v12 = sub_100077D28();
    sub_100048718((uint64_t)v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePod Setup Flow being configured with user info: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = sub_100099744();
  type metadata accessor for HomePodSetupPresenter();
  swift_allocObject();
  uint64_t v15 = sub_100079D78(v7, v14);
  uint64_t v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter);
  uint64_t *v16 = v15;
  v16[1] = (uint64_t)&off_1000DC918;
  swift_retain();
  uint64_t result = swift_unknownObjectRelease();
  if (a2)
  {
    a2(result);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100077D28()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = self;
  swift_bridgeObjectRetain();
  sub_10000EE48(&qword_1000EE4D0);
  id v15 = 0;
  id v2 = [v1 dataWithJSONObject:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)() options:1 error:&v15];
  swift_unknownObjectRelease();
  id v3 = v15;
  if (!v2)
  {
    os_log_type_t v10 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v11._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v11._object = (void *)0x80000001000B9680;
    String.append(_:)(v11);
    sub_10000EE48((uint64_t *)&unk_1000EF2F0);
    _print_unlocked<A, B>(_:_:)();
    v12._object = (void *)0x80000001000B96A0;
    v12._uint64_t countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v12);
    _print_unlocked<A, B>(_:_:)();
    swift_errorRelease();
    return v15;
  }
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  static String.Encoding.utf8.getter();
  uint64_t v7 = String.init(data:encoding:)();
  if (!v8)
  {
    id v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v13._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v13._object = (void *)0x80000001000B96C0;
    String.append(_:)(v13);
    _print_unlocked<A, B>(_:_:)();
    sub_100078844(v4, v6);
    return v15;
  }
  uint64_t v9 = v7;
  sub_100078844(v4, v6);
  return (id)v9;
}

void sub_1000780AC(char a1)
{
  id v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  if (*(void *)&v2[OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter])
  {
    uint64_t v4 = qword_1000ED858;
    swift_unknownObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000133A0(v5, (uint64_t)qword_1000EF9B0);
    unint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePodSetupFlowViewController: HomePod Setup Flow viewDidAppear", v8, 2u);
      swift_slowDealloc();
    }

    sub_10007A2AC((uint64_t)v2);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1000ED858 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000133A0(v9, (uint64_t)qword_1000EF9B0);
    os_log_type_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      Swift::String v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupFlowViewController: viewDidAppear called with no presenter - configure not called", v12, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000782F4(char a1)
{
  id v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1000ED858 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000133A0(v5, (uint64_t)qword_1000EF9B0);
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePodSetupFlowViewController: HomePod Setup Flow viewDidDisappear", v8, 2u);
    swift_slowDealloc();
  }

  if (*(void *)&v2[OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter])
  {
    swift_unknownObjectRetain();
    sub_10007A560(21);
    swift_unknownObjectRelease();
  }
  v10.receiver = v2;
  v10.super_class = ObjectType;
  [super viewDidDisappear:a1 & 1];
  id v9 = [self sharedApplication];
  [v9 terminateWithSuccess];
}

void sub_10007854C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1000775D0(v3);
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();

    if (v5)
    {
      if (qword_1000ED858 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_1000133A0(v6, (uint64_t)qword_1000EF9B0);
      os_log_type_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        id v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePodSetupFlowViewController: Home button was pressed - dismissing setup", v9, 2u);
        swift_slowDealloc();
      }

      if (*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter))
      {
        swift_unknownObjectRetain();
        sub_10007A560(4);
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100078728()
{
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for HomePodSetupFlowViewController()
{
  return self;
}

unint64_t sub_10007876C()
{
  unint64_t result = qword_1000EF9F8;
  if (!qword_1000EF9F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EF9F8);
  }
  return result;
}

unint64_t sub_1000787AC()
{
  unint64_t result = qword_1000EFA00;
  if (!qword_1000EFA00)
  {
    sub_10007876C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EFA00);
  }
  return result;
}

uint64_t sub_100078804()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007883C()
{
  return sub_100090EDC(*(void *)(v0 + 16));
}

uint64_t sub_100078844(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10007889C()
{
  id v1 = [*v0 name];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_1000788F4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [*v0 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = UUID.uuidString.getter();
  os_log_type_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v11[0] = 0x5F646F70656D6F68;
  v11[1] = 0xE800000000000000;
  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  return v11[0];
}

uint64_t sub_100078A24(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = 1031365995;
  v38[1] = 0xE400000000000000;
  id v6 = [a1 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = UUID.uuidString.getter();
  Swift::String v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v36 = 0x5F646F70656D6F68;
  unint64_t v37 = 0xE800000000000000;
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = v38[0];
  uint64_t v14 = (void *)v38[1];
  v38[0] = 0x646F50656D6F483CLL;
  v38[1] = 0xEF206E6F6974704FLL;
  v13._object = v14;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = v38[0];
  uint64_t v15 = v38[1];
  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v38, "displayValue=");
  HIWORD(v38[1]) = -4864;
  id v17 = [a1 name];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  uint64_t v36 = v18;
  unint64_t v37 = v20;
  v21._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  uint64_t v23 = v38[0];
  uint64_t v24 = (void *)v38[1];
  v38[0] = v16;
  v38[1] = v15;
  swift_bridgeObjectRetain();
  v25._uint64_t countAndFlagsBits = v23;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v38[0];
  uint64_t v26 = v38[1];
  strcpy((char *)v38, "homePod=");
  BYTE1(v38[1]) = 0;
  WORD1(v38[1]) = 0;
  HIDWORD(v38[1]) = -402653184;
  uint64_t v36 = (uint64_t)a1;
  sub_100078D58();
  id v28 = a1;
  v29._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  uint64_t v31 = v38[0];
  uint64_t v32 = (void *)v38[1];
  v38[0] = v27;
  v38[1] = v26;
  swift_bridgeObjectRetain();
  v33._uint64_t countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v34._uint64_t countAndFlagsBits = 62;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  return v38[0];
}

uint64_t sub_100078D50()
{
  return sub_100078A24(*v0);
}

unint64_t sub_100078D58()
{
  unint64_t result = qword_1000EFA08;
  if (!qword_1000EFA08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000EFA08);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodOption()
{
  return &type metadata for HomePodOption;
}

unint64_t sub_100078DA8(char a1)
{
  unint64_t result = 0x49557472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D6F486B636970;
      break;
    case 2:
      unint64_t result = 0x6D6F6F526B636970;
      break;
    case 3:
      unint64_t result = 0x73736572676F7270;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    case 8:
      unint64_t result = 0x55664F736D726574;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0x7265764569726973;
      break;
    case 11:
      unint64_t result = 0x6953656C62616E65;
      break;
    case 12:
      unint64_t result = 0x636C655769726973;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 14:
      unint64_t result = 0x4D6B734169726973;
      break;
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    case 16:
      unint64_t result = 0x615044454C746567;
      break;
    case 17:
      unint64_t result = 0x4E49507265746E65;
      break;
    case 18:
      unint64_t result = 0x61506F6572657473;
      break;
    case 19:
      unint64_t result = 0xD000000000000013;
      break;
    case 20:
      unint64_t result = 0xD000000000000015;
      break;
    case 21:
      unint64_t result = 0xD000000000000011;
      break;
    case 22:
      unint64_t result = 0xD000000000000010;
      break;
    case 23:
      unint64_t result = 0x6F63655269726973;
      break;
    case 24:
      unint64_t result = 0xD000000000000013;
      break;
    case 25:
      unint64_t result = 0xD000000000000010;
      break;
    case 26:
      unint64_t result = 0xD000000000000018;
      break;
    case 27:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 28:
    case 35:
    case 37:
    case 42:
    case 53:
    case 62:
      unint64_t result = 0xD000000000000019;
      break;
    case 29:
      unint64_t result = 0xD000000000000014;
      break;
    case 30:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 31:
      unint64_t result = 0xD000000000000018;
      break;
    case 32:
      unint64_t result = 0xD000000000000017;
      break;
    case 33:
      unint64_t result = 0xD000000000000015;
      break;
    case 34:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 36:
      unint64_t result = 0xD000000000000018;
      break;
    case 38:
      unint64_t result = 0xD000000000000024;
      break;
    case 39:
      unint64_t result = 0xD000000000000011;
      break;
    case 40:
      unint64_t result = 0xD000000000000016;
      break;
    case 41:
      unint64_t result = 0xD000000000000011;
      break;
    case 43:
      unint64_t result = 0xD000000000000017;
      break;
    case 44:
      unint64_t result = 0xD000000000000018;
      break;
    case 45:
      unint64_t result = 0x756F525032506F6ELL;
      break;
    case 46:
      unint64_t result = 1701736292;
      break;
    case 47:
      unint64_t result = 0x6F727245656E6F64;
      break;
    case 48:
      unint64_t result = 1953069157;
      break;
    case 49:
      unint64_t result = 0xD000000000000017;
      break;
    case 50:
      unint64_t result = 0xD000000000000021;
      break;
    case 51:
      unint64_t result = 0xD000000000000013;
      break;
    case 52:
      unint64_t result = 0xD000000000000015;
      break;
    case 54:
      unint64_t result = 0xD000000000000018;
      break;
    case 55:
      unint64_t result = 0xD000000000000014;
      break;
    case 56:
      unint64_t result = 0x6E69616741797274;
      break;
    case 57:
      unint64_t result = 0x657355776F68;
      break;
    case 58:
      unint64_t result = 0x7365726975716572;
      break;
    case 59:
      unint64_t result = 0xD000000000000020;
      break;
    case 60:
      unint64_t result = 0xD000000000000026;
      break;
    case 61:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000794DC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EFA10);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EFA10);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000795A4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_100078DA8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_100078DA8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100079630()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_100078DA8(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100079694()
{
  sub_100078DA8(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000796E8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_100078DA8(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100079748@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000824EC();
  *a1 = result;
  return result;
}

unint64_t sub_100079778@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100078DA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000797A4()
{
  return sub_100078DA8(*v0);
}

uint64_t sub_1000797AC()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (uint64_t *)((char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EFA10);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  uint64_t v7 = &unk_1000F3000;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v22[0] = v20;
    *(_DWORD *)uint64_t v8 = 136315394;
    unint64_t v9 = sub_100078DA8(*(unsigned char *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    uint64_t v21 = sub_100048718(v9, v10, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_retain();
    uint64_t v11 = sub_100051C2C();
    unint64_t v13 = v12;
    swift_release();
    uint64_t v21 = sub_100048718(v11, v13, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v7 = (void *)&unk_1000F3000;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter: Delegate set with State: %s Model: %s and we build a new viewModel.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  char v14 = *(unsigned char *)(v0 + v7[395]);
  uint64_t v15 = swift_retain();
  LOBYTE(v22[0]) = 1;
  sub_10001F674(v15, v14, 0x100000000uLL, 0, v3);
  swift_release();
  uint64_t v16 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 0, 1, v16);
  uint64_t v17 = v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess();
  sub_100082FD8((uint64_t)v3, v17);
  swift_endAccess();
  sub_100079AF8();
  return sub_10000F674((uint64_t)v3, &qword_1000EF130);
}

uint64_t sub_100079AF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess();
  sub_10000FD94(v9, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10000F674((uint64_t)v4, &qword_1000EF130);
  }
  sub_1000170C8((uint64_t)v4, (uint64_t)v8);
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000133A0(v11, (uint64_t)qword_1000EFA10);
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter: a viewmodel was set", v14, 2u);
    swift_slowDealloc();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v15 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v15 + 32))(v1, &off_1000DC918, v8, ObjectType, v15);
    swift_unknownObjectRelease();
  }
  return sub_10001712C((uint64_t)v8);
}

uint64_t sub_100079D78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  uint64_t v7 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_askSiriStatesPresented) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_finalScreenOfSetupFlowDisplayed) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_currentViewController) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_softwareUpdateForHomepodPresented) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_noP2PRouterPresented) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_appleMusicPromotionPresented) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController) = a2;
  id v8 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupRouter());
  swift_unknownObjectRetain();
  id v9 = [v8 init];
  unint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_router);
  *unint64_t v10 = v9;
  v10[1] = &off_1000DBFA8;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = 0;
  type metadata accessor for HomePodSetupInteractor();
  swift_allocObject();
  uint64_t v11 = (char *)v9;
  unint64_t v12 = sub_10009A704(a1);
  os_log_type_t v13 = (uint64_t **)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  void *v13 = v12;
  v13[1] = (uint64_t *)&off_1000DD6B0;
  v12[5] = (uint64_t)&off_1000DC978;
  swift_unknownObjectWeakAssign();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void (**)())&v11[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss];
  uint64_t v16 = *(void *)&v11[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss];
  *uint64_t v15 = sub_10008320C;
  v15[1] = (void (*)())v14;
  swift_retain();
  sub_1000647CC(v16);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (uint64_t (**)(uint64_t, uint64_t))&v11[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation];
  uint64_t v19 = *(void *)&v11[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation];
  void *v18 = sub_100083214;
  v18[1] = (uint64_t (*)(uint64_t, uint64_t))v17;
  swift_retain();
  sub_1000647CC(v19);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

void sub_10007A00C()
{
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000EFA10);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupPresenter: didDismiss called", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
    if (v5)
    {
      [*(id *)(Strong + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController) dismiss];
      [v5 invalidate];
    }
    swift_release();
  }
  else
  {
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupPresenter: didDismiss failed, self is nil", v8, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10007A1C4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + 24) = a2;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRetain();
    sub_1000797AC();
    swift_release();
    swift_unknownObjectRelease();
  }
  swift_beginAccess();
  uint64_t v4 = swift_weakLoadStrong();
  if (v4) {
    uint64_t v5 = &off_1000DC918;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a2 + 16))(v4, v5, ObjectType, a2);
}

void sub_10007A2AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000133A0(v8, (uint64_t)qword_1000EFA10);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: beginFlow called.", v11, 2u);
    swift_slowDealloc();
  }

  sub_1000150E4();
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  swift_unknownObjectWeakAssign();
  [*(id *)(v13 + 80) setPresentingViewController:a1];
  swift_unknownObjectWeakAssign();
  if (!IsAppleInternalBuild()) {
    goto LABEL_10;
  }
  if (qword_1000ED740 != -1) {
    goto LABEL_14;
  }
LABEL_8:
  *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState) = 0;
  char v14 = sub_10009F508();
  if (v14 != 63) {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = v14;
  }
LABEL_10:
  if (sub_10009F1E0())
  {
    sub_10009F9D8(-71146);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = 58;
  }
  sub_10007E644();
}

id sub_10007A560(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
  if (v4)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setIdleTimerDisabled:0 forReason:v5];
  }
  if ((*(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_router)
                 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) & 1) == 0)
  {
    if (qword_1000ED860 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000133A0(v6, (uint64_t)qword_1000EFA10);
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupFlowViewController: disappeared without dismiss (device locked?)...dismissing UI", v9, 2u);
      swift_slowDealloc();
    }

    sub_1000641B8(a1, a1 != 19);
  }
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  sub_10009F8CC(a1);
  [*(id *)(v10 + 80) invalidate];
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000133A0(v11, (uint64_t)qword_1000F0390);
  char v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "HomePodSetup: 'Hello Siri' trigger re-enabled because cancelDeviceSetup was called.", v14, 2u);
    swift_slowDealloc();
  }

  uint64_t v15 = self;

  return [v15 requestPhraseSpotterBypassing:0 timeout:0.0];
}

void sub_10007A7CC(NSObject *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EDF98);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  os_log_type_t v7 = (char *)&v213 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v219 = (uint8_t *)&v213 - v8;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v214 = (char *)&v213 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v14 = (char *)&v213 - v13;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v221 = *(void *)(v15 - 8);
  uint64_t v222 = v15;
  __chkstk_darwin(v15);
  uint64_t v220 = (char **)((char *)&v213 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v216 = v9;
  uint64_t v17 = sub_1000133A0(v9, (uint64_t)qword_1000EFA10);
  swift_retain_n();
  uint64_t v224 = v17;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  Swift::String v223 = a1;
  uint64_t v215 = v10;
  uint64_t v213 = v14;
  uint64_t v217 = v7;
  if (v20)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    *(void *)&long long aBlock = v22;
    unint64_t v23 = sub_100078DA8(*(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v226[0] = (id)sub_100048718(v23, v24, (uint64_t *)&aBlock);
    a1 = v223;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: step completed called with state: %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100016FA4((char *)a1, (uint64_t)&aBlock);
  Swift::String v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    id v28 = (void *)swift_slowAlloc();
    uint64_t v218 = v2;
    v226[0] = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    unint64_t v29 = sub_10000CD54();
    uint64_t v225 = sub_100048718(v29, v30, (uint64_t *)v226);
    a1 = v223;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000136C8((uint64_t)&aBlock);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: stepResult: %s", v27, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v218;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000136C8((uint64_t)&aBlock);
  }

  sub_1000150E4();
  uint64_t v31 = static OS_dispatch_queue.main.getter();
  Swift::String v33 = v220;
  uint64_t v32 = v221;
  *uint64_t v220 = v31;
  uint64_t v34 = v222;
  (*(void (**)(void *, void, uint64_t))(v32 + 104))(v33, enum case for DispatchPredicate.onQueue(_:), v222);
  char v35 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v32 + 8))(v33, v34);
  if ((v35 & 1) == 0)
  {
    __break(1u);
LABEL_281:
    swift_once();
    goto LABEL_12;
  }
  if (!IsAppleInternalBuild()) {
    goto LABEL_17;
  }
  if (qword_1000ED740 != -1) {
    goto LABEL_281;
  }
LABEL_12:
  sub_10003EB60((uint64_t)a1, *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  if (sub_1000106E8((char)a1->isa) == 0x754274726F706572 && v36 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    sub_1000809C0();
    goto LABEL_17;
  }
  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v38 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  uint64_t v39 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
  switch(*(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state))
  {
    case 1:
      sub_10000FD94((uint64_t)&a1[1], (uint64_t)&aBlock, &qword_1000ED970);
      if (*((void *)&v229 + 1))
      {
        sub_10000EE48(&qword_1000ED978);
        if (swift_dynamicCast())
        {
          id v74 = v226[0];
          id v75 = [v226[0] name];
          uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v77;

          sub_10009D6B0(v76, v78);
          swift_bridgeObjectRelease();
          goto LABEL_250;
        }
      }
      else
      {
        sub_10000F674((uint64_t)&aBlock, &qword_1000ED970);
      }
      id v154 = Logger.logObject.getter();
      os_log_type_t v155 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v154, v155)) {
        goto LABEL_238;
      }
      id v156 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v156 = 0;
      id v157 = "HomePodSetupPresenter: setupStepCompleted for pickHome was called but no home name was giving";
      goto LABEL_237;
    case 2:
      sub_10000FD94((uint64_t)&a1[1], (uint64_t)&aBlock, &qword_1000ED970);
      if (*((void *)&v229 + 1))
      {
        sub_10000EE48(&qword_1000ED978);
        if (swift_dynamicCast())
        {
          sub_10009D7FC();
          goto LABEL_82;
        }
      }
      else
      {
        sub_10000F674((uint64_t)&aBlock, &qword_1000ED970);
      }
      id v154 = Logger.logObject.getter();
      os_log_type_t v155 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v154, v155)) {
        goto LABEL_238;
      }
      id v156 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v156 = 0;
      id v157 = "HomePodSetupPresenter: setupStepCompleted for pickRoom was called but no room name was giving";
      goto LABEL_237;
    case 3:
    case 0xC:
    case 0xD:
    case 0x3A:
      goto LABEL_250;
    case 4:
      char isa = (char)a1->isa;
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v80 == 0xE700000000000000) {
        goto LABEL_57;
      }
      char v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v81) {
        goto LABEL_18;
      }
      if (sub_1000106E8(isa) == 0xD000000000000014 && v82 == 0x80000001000B3850)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v196 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v196 & 1) == 0) {
          goto LABEL_250;
        }
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) cancelSoftwareUpdateNoSetup:v213];
      goto LABEL_250;
    case 5:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v83 == 0xE700000000000000)
      {
LABEL_57:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      char v134 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v134) {
        goto LABEL_18;
      }
      goto LABEL_250;
    case 6:
      if (sub_1000106E8((char)a1->isa) == 0x6565726761 && v84 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) soundRecognitionAgreed:v213];
      goto LABEL_250;
    case 7:
      char v85 = (char)a1->isa;
      if (sub_1000106E8((char)a1->isa) == 0x6565726761 && v86 == 0xE500000000000000) {
        goto LABEL_63;
      }
      char v135 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v135 & 1) == 0)
      {
        if (sub_1000106E8(v85) == 0x7972616D697270 && v136 == 0xE700000000000000)
        {
LABEL_63:
          swift_bridgeObjectRelease();
        }
        else
        {
          _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) automaticSoftwareUpdatesAgreed:v213];
      goto LABEL_250;
    case 8:
      char v87 = (char)a1->isa;
      if (sub_1000106E8((char)a1->isa) == 0x6565726761 && v88 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v137 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v137 & 1) == 0)
        {
          if (sub_1000106E8(v87) == 0x7972616D697270 && v138 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v202 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v202 & 1) == 0) {
              goto LABEL_18;
            }
          }
          Swift::String v203 = Logger.logObject.getter();
          os_log_type_t v204 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v203, v204))
          {
            uint64_t v205 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v205 = 0;
            _os_log_impl((void *)&_mh_execute_header, v203, v204, "HomePodSetupPresenter: ****** automation had 'default' as the button for terms of use! *** ", v205, 2u);
            swift_slowDealloc();
          }
        }
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) termsAgreed:v213];
      goto LABEL_250;
    case 9:
      char v89 = (char)a1->isa;
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v90 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v139 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v139 & 1) == 0)
        {
          if (sub_1000106E8(v89) == 0x7261646E6F636573 && v158 == 0xE900000000000079)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v207 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v207 & 1) == 0) {
              goto LABEL_250;
            }
          }
          id v140 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession);
          if (!v140) {
            goto LABEL_250;
          }
LABEL_172:
          [v140 personalRequestsEnabled:v213];
          goto LABEL_250;
        }
      }
      id v140 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession);
      if (!v140) {
        goto LABEL_250;
      }
      goto LABEL_172;
    case 0xA:
      sub_10009DC44();
      goto LABEL_250;
    case 0xB:
      sub_10009DC6C();
      goto LABEL_250;
    case 0xE:
      swift_retain();
      char v91 = sub_10004D328();
      swift_release();
      if ((v91 & 1) == 0) {
        goto LABEL_194;
      }
      *(unsigned char *)(v2 + v38) = 49;
      goto LABEL_250;
    case 0xF:
      id v92 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80);
      goto LABEL_204;
    case 0x10:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v93 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v141 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v141 & 1) == 0) {
          goto LABEL_209;
        }
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) ledPasscodeMatched:v213];
      goto LABEL_250;
    case 0x11:
      sub_10000FD94((uint64_t)&a1[1], (uint64_t)v226, &qword_1000ED970);
      if (v227)
      {
        sub_10000EE48(&qword_1000ED978);
        if (swift_dynamicCast())
        {
          long long v94 = v230;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (String.count.getter() == 4)
          {
            sub_10009EE78(v94, *((unint64_t *)&v94 + 1));
LABEL_82:
            swift_bridgeObjectRelease();
            goto LABEL_250;
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_10000F674((uint64_t)v226, &qword_1000ED970);
      }
      id v154 = Logger.logObject.getter();
      os_log_type_t v155 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v154, v155))
      {
        id v156 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v156 = 0;
        id v157 = "HomePodSetupPresenter: some how we are at .enterPincode and yet we don't have a four digit pincode! Likel"
               "y recongized HomePod after user chose manual entry button.";
LABEL_237:
        _os_log_impl((void *)&_mh_execute_header, v154, v155, v157, v156, 2u);
        swift_slowDealloc();
      }
LABEL_238:

      goto LABEL_250;
    case 0x12:
      if (sub_1000106E8((char)a1->isa) == 0x6F6572657473 && v95 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v142 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v142 & 1) == 0)
        {
          sub_10009E218(1);
          goto LABEL_250;
        }
      }
      *(unsigned char *)(v2 + v38) = 21;
      goto LABEL_250;
    case 0x13:
      sub_10000FD94((uint64_t)&a1[1], (uint64_t)&aBlock, &qword_1000ED970);
      if (!*((void *)&v229 + 1)) {
        goto LABEL_155;
      }
      sub_10000EE48(&qword_1000ED978);
      if (swift_dynamicCast())
      {
        id v96 = v226[0];
        sub_10009E110((uint64_t)v96);
      }
      goto LABEL_250;
    case 0x14:
      sub_10000FD94((uint64_t)&a1[1], (uint64_t)&aBlock, &qword_1000ED970);
      if (!*((void *)&v229 + 1))
      {
LABEL_155:
        sub_10000F674((uint64_t)&aBlock, &qword_1000ED970);
        goto LABEL_250;
      }
      sub_10000EE48(&qword_1000ED978);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_250;
      }
      id v97 = v226[0];
      if (sub_1000106E8((char)a1->isa) == 0x7261646E6F636573 && v98 == 0xE900000000000079)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v173 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v173 & 1) == 0)
        {
          [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) stereoMultiplePicked:v97];

          goto LABEL_250;
        }
      }
      uint64_t v222 = v39;
      uint64_t v218 = v2;
      Swift::String v174 = Logger.logObject.getter();
      os_log_type_t v175 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v174, v175))
      {
        uint64_t v176 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v176 = 0;
        _os_log_impl((void *)&_mh_execute_header, v174, v175, "HomePodSetupPresenter: pickHomePodToPairWith identify HomePod", v176, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, NSObject *, uint64_t))(v215 + 16))(v213, v224, v216);
      uint64_t v177 = swift_allocObject();
      *(void *)(v177 + 16) = v97;
      uint64_t v224 = v97;
      id v178 = Logger.logObject.getter();
      os_log_type_t v179 = static os_log_type_t.default.getter();
      uint64_t v180 = swift_allocObject();
      *(unsigned char *)(v180 + 16) = 32;
      uint64_t v181 = swift_allocObject();
      *(unsigned char *)(v181 + 16) = 8;
      uint64_t v182 = swift_allocObject();
      *(void *)(v182 + 16) = sub_1000831D4;
      *(void *)(v182 + 24) = v177;
      uint64_t v183 = swift_allocObject();
      *(void *)(v183 + 16) = sub_1000831FC;
      *(void *)(v183 + 24) = v182;
      sub_10000EE48(&qword_1000EFD60);
      uint64_t v184 = swift_allocObject();
      *(_OWORD *)(v184 + 16) = xmmword_1000B0870;
      *(void *)(v184 + 32) = sub_10008321C;
      *(void *)(v184 + 40) = v180;
      *(void *)(v184 + 48) = sub_10008321C;
      *(void *)(v184 + 56) = v181;
      *(void *)(v184 + 64) = sub_100083204;
      *(void *)(v184 + 72) = v183;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      int v185 = v179;
      Swift::String v223 = v178;
      if (os_log_type_enabled(v178, v179))
      {
        unint64_t v186 = (uint8_t *)swift_slowAlloc();
        uint64_t v221 = swift_slowAlloc();
        *(void *)&long long aBlock = v221;
        *(_WORD *)unint64_t v186 = 258;
        v186[2] = 32;
        swift_release();
        v186[3] = 8;
        swift_release();
        Swift::String v219 = v186 + 4;
        LODWORD(v220) = v185;
        uint64_t v187 = v224;
        id v188 = [v224 name];
        uint64_t v189 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v191 = v190;

        v226[0] = (id)sub_100048718(v189, v191, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::String v192 = v223;
        Swift::String v193 = v187;
        _os_log_impl((void *)&_mh_execute_header, v223, (os_log_type_t)v220, "HomePodSetupPresenter: pickHomePodToPairWith %s", v186, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        Swift::String v193 = v224;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v215 + 8))(v213, v216);
      uint64_t v2 = v218;
      [*(id *)(*(void *)(v218 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) identifyHomePod:v193];

      LOBYTE(v39) = v222;
      goto LABEL_250;
    case 0x15:
      int isa_low = LOBYTE(a1->isa);
      if (isa_low == 7) {
        unsigned int v100 = 3;
      }
      else {
        unsigned int v100 = 1;
      }
      if (isa_low == 6) {
        uint64_t v101 = 2;
      }
      else {
        uint64_t v101 = v100;
      }
      sub_10009E218(v101);
      goto LABEL_250;
    case 0x16:
      sub_10000FD94((uint64_t)&a1[1], (uint64_t)&aBlock, &qword_1000ED970);
      if (*((void *)&v229 + 1))
      {
        sub_10000EE48(&qword_1000ED978);
        if (swift_dynamicCast())
        {
          uint64_t v222 = v39;
          uint64_t v102 = v2;
          id v104 = v226[0];
          id v103 = v226[1];
          id v106 = v226[2];
          unint64_t v105 = v227;
          if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v107 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_245:
            uint64_t v195 = (uint64_t)v104;
            uint64_t v2 = v102;
            sub_10009E400(v195, (uint64_t)v103, (uint64_t)v106, v105);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LOBYTE(v39) = v222;
            goto LABEL_250;
          }
          char v194 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v194) {
            goto LABEL_245;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v2 = v102;
          LOBYTE(v39) = v222;
        }
      }
      else
      {
        sub_10000F674((uint64_t)&aBlock, &qword_1000ED970);
      }
      sub_10009E658();
      goto LABEL_250;
    case 0x17:
      if (sub_1000106E8((char)a1->isa) == 0x4D5264756F6C4369 && v108 == 0xE900000000000056)
      {
        swift_bridgeObjectRelease();
LABEL_178:
        [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) siriForiCloudRecognizeAnswered:v213];
        goto LABEL_250;
      }
      char v143 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v143) {
        goto LABEL_178;
      }
      uint64_t v222 = v39;
      uint64_t v218 = v2;
      (*(void (**)(char *, NSObject *, uint64_t))(v215 + 16))(v214, v224, v216);
      sub_100016FA4((char *)a1, (uint64_t)&aBlock);
      sub_100016FA4((char *)&aBlock, (uint64_t)v226);
      id v159 = (_OWORD *)swift_allocObject();
      long long v160 = v229;
      v159[1] = aBlock;
      v159[2] = v160;
      v159[3] = v230;
      uint64_t v224 = Logger.logObject.getter();
      LODWORD(v221) = static os_log_type_t.debug.getter();
      uint64_t v161 = swift_allocObject();
      *(unsigned char *)(v161 + 16) = 0;
      uint64_t v162 = swift_allocObject();
      *(unsigned char *)(v162 + 16) = 4;
      uint64_t v163 = swift_allocObject();
      *(void *)(v163 + 16) = sub_10008311C;
      *(void *)(v163 + 24) = v159;
      uint64_t v164 = swift_allocObject();
      *(void *)(v164 + 16) = sub_10008317C;
      *(void *)(v164 + 24) = v163;
      uint64_t v165 = swift_allocObject();
      *(void *)(v165 + 16) = sub_100083184;
      *(void *)(v165 + 24) = v164;
      uint64_t v166 = swift_allocObject();
      *(void *)(v166 + 16) = sub_10008318C;
      *(void *)(v166 + 24) = v165;
      sub_10000EE48(&qword_1000EFD60);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000B0870;
      *(void *)(inited + 32) = sub_10008321C;
      *(void *)(inited + 40) = v161;
      *(void *)(inited + 48) = sub_10008321C;
      *(void *)(inited + 56) = v162;
      *(void *)(inited + 64) = sub_100083194;
      *(void *)(inited + 72) = v166;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v220 = (void *)v161;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v168 = v224;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v168, (os_log_type_t)v221))
      {
        uint64_t v169 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v169 = 256;
        v169[2] = 0;
        swift_release();
        v169[3] = 4;
        swift_release();
        if (sub_1000106E8((char)v226[0]) == 0xD000000000000010 && v170 == 0x80000001000B3870)
        {
          swift_release();
          swift_bridgeObjectRelease();
          int v171 = 1;
        }
        else
        {
          char v209 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_release();
          swift_bridgeObjectRelease();
          int v171 = v209 & 1;
        }
        swift_release();
        swift_release();
        sub_1000136C8((uint64_t)v226);
        LODWORD(aBlock) = v171;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_release();
        v210 = v224;
        _os_log_impl((void *)&_mh_execute_header, v224, (os_log_type_t)v221, "HomePodSetupPresenter: .siriRecognize (aka RMV) set to %{BOOL}d", v169, 8u);
        swift_slowDealloc();

        LOBYTE(v39) = v222;
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        sub_1000136C8((uint64_t)v226);

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        LOBYTE(v39) = v222;
      }
      (*(void (**)(char *, uint64_t))(v215 + 8))(v214, v216);
      uint64_t v2 = v218;
      uint64_t v211 = *(void *)(v218 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
      if (sub_1000106E8((char)v223->isa) == 0xD000000000000010 && v212 == 0x80000001000B3870)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      [*(id *)(v211 + 80) recognizeVoiceAnswered:v213];
      goto LABEL_250;
    case 0x18:
      *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_appleMusicPromotionPresented) = 1;
      sub_10009DC58();
      *((void *)&v229 + 1) = &type metadata for SharingFeatureFlags;
      unint64_t v109 = sub_100082540();
      *(void *)&long long v230 = v109;
      LOBYTE(aBlock) = 0;
      char v110 = isFeatureEnabled(_:)();
      sub_10000E470((uint64_t)&aBlock);
      if ((v110 & 1) == 0) {
        goto LABEL_194;
      }
      *((void *)&v229 + 1) = &type metadata for SharingFeatureFlags;
      *(void *)&long long v230 = v109;
      LOBYTE(aBlock) = 1;
      char v111 = isFeatureEnabled(_:)();
      sub_10000E470((uint64_t)&aBlock);
      if (v111) {
        goto LABEL_194;
      }
      goto LABEL_193;
    case 0x19:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v112 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        char v113 = 1;
      }
      else
      {
        char v113 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      sub_10009DD80(v113 & 1);
      goto LABEL_250;
    case 0x1A:
      char v114 = (char)a1->isa;
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v115 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_182:
        [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) homePodLoggingProfileSelected:v213];
        goto LABEL_250;
      }
      char v144 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v144) {
        goto LABEL_182;
      }
      if (sub_1000106E8(v114) == 0x7261646E6F636573 && v172 == 0xE900000000000079)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v208 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v208 & 1) == 0) {
          goto LABEL_250;
        }
      }
      uint64_t v44 = 0xD000000000000030;
      id v121 = "prefs:root=General&path=ManagedConfigurationList";
LABEL_188:
      unint64_t v146 = (unint64_t)(v121 - 32) | 0x8000000000000000;
      int v147 = 5;
LABEL_189:
      sub_10007DE90(v147, v44, v146);
      goto LABEL_250;
    case 0x1B:
    case 0x28:
    case 0x29:
    case 0x2B:
    case 0x3C:
    case 0x3D:
    case 0x3E:
      goto LABEL_18;
    case 0x1C:
      if (sub_1000106E8((char)a1->isa) == 0x655373656E755469 && v116 == 0xEE0073676E697474)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v145 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v145 & 1) == 0)
        {
LABEL_127:
          [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) homeAppInstallChoice:v213];
          goto LABEL_250;
        }
      }
      uint64_t v44 = 0xD000000000000033;
      id v45 = "prefs:root=APPLE_ACCOUNT&path=PASSWORD_AND_SECURITY";
LABEL_185:
      unint64_t v146 = (unint64_t)(v45 - 32) | 0x8000000000000000;
      int v147 = 13;
      goto LABEL_189;
    case 0x1D:
      if (sub_1000106E8((char)a1->isa) == 0x655373656E755469 && v117 == 0xEE0073676E697474)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v148 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v148 & 1) == 0)
        {
          [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) skipiTunesSignIn];
          goto LABEL_250;
        }
      }
      uint64_t v44 = 0xD00000000000002BLL;
      id v121 = "prefs:root=APPLE_ACCOUNT&path=STORE_SERVICE";
      goto LABEL_188;
    case 0x1E:
      uint64_t v118 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
      if (sub_1000106E8((char)a1->isa) == 0x6F4C6E4F6E727574 && v119 == 0xEE006E6F69746163)
      {
        swift_bridgeObjectRelease();
        char v120 = 1;
      }
      else
      {
        char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(*(void *)(v118 + 48)
               + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) = v120 & 1;
      [*(id *)(v118 + 80) locationEnable:v213];
      goto LABEL_250;
    case 0x1F:
      goto LABEL_127;
    case 0x20:
    case 0x21:
    case 0x22:
    case 0x23:
    case 0x2C:
      id v41 = [objc_allocWithZone((Class)SFClient) init];
      *(void *)&long long v230 = sub_10007D8EC;
      *((void *)&v230 + 1) = 0;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v229 = sub_10007DB88;
      *((void *)&v229 + 1) = &unk_1000DCBE8;
      uint64_t v42 = _Block_copy(&aBlock);
      [v41 reenableProxCardType:100 completion:v42];
      _Block_release(v42);
      if (sub_1000106E8((char)a1->isa) == 0xD000000000000016 && v43 == 0x80000001000B3890)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v46)
      {
LABEL_25:
        Swift::String v223 = v41;
        uint64_t v47 = (uint64_t)v219;
        URL.init(string:)();
        id v48 = [self defaultWorkspace];
        if (!v48)
        {
          __break(1u);
          JUMPOUT(0x10007D47CLL);
        }
        id v49 = v48;
        uint64_t v50 = v47;
        uint64_t v51 = (uint64_t)v217;
        sub_10000FD94(v50, (uint64_t)v217, &qword_1000EDF98);
        uint64_t v52 = type metadata accessor for URL();
        uint64_t v53 = *(void *)(v52 - 8);
        id v55 = 0;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) != 1)
        {
          URL._bridgeToObjectiveC()(v54);
          id v55 = v56;
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
        }
        uint64_t v222 = v39;
        sub_10000DBF8((uint64_t)_swiftEmptyArrayStorage);
        Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        unsigned __int8 v58 = [v49 openURL:v55 withOptions:v57];

        id v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.default.getter();
        if (v58)
        {
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 32;
          uint64_t v62 = swift_allocObject();
          *(unsigned char *)(v62 + 16) = 8;
          sub_10000EE48(&qword_1000EFD60);
          uint64_t v63 = swift_initStackObject();
          *(_OWORD *)(v63 + 16) = xmmword_1000B0870;
          *(void *)(v63 + 32) = sub_10008321C;
          *(void *)(v63 + 40) = v61;
          *(void *)(v63 + 48) = sub_10008321C;
          *(void *)(v63 + 56) = v62;
          *(void *)(v63 + 64) = sub_100081FF0;
          *(void *)(v63 + 72) = 0;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          os_log_type_t v64 = v60;
          if (os_log_type_enabled(v59, v60))
          {
            id v65 = (uint8_t *)swift_slowAlloc();
            uint64_t v66 = swift_slowAlloc();
            uint64_t v218 = v2;
            *(void *)&long long aBlock = v66;
            *(_WORD *)id v65 = 258;
            v65[2] = 32;
            swift_release();
            v65[3] = 8;
            swift_release();
            v226[0] = (id)sub_100048718(0xD00000000000005ELL, 0x80000001000B9A50, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            id v67 = "HomePodSetupIconContent: opening kbartible for %s";
LABEL_36:
            _os_log_impl((void *)&_mh_execute_header, v59, v64, v67, v65, 0xCu);
            swift_arrayDestroy();
            uint64_t v2 = v218;
            swift_slowDealloc();
            swift_slowDealloc();
LABEL_38:

            sub_10000F674((uint64_t)v219, &qword_1000EDF98);
            LOBYTE(v39) = v222;
            goto LABEL_250;
          }
        }
        else
        {
          uint64_t v69 = swift_allocObject();
          *(unsigned char *)(v69 + 16) = 32;
          uint64_t v70 = swift_allocObject();
          *(unsigned char *)(v70 + 16) = 8;
          sub_10000EE48(&qword_1000EFD60);
          uint64_t v71 = swift_initStackObject();
          *(_OWORD *)(v71 + 16) = xmmword_1000B0870;
          *(void *)(v71 + 32) = sub_1000830A4;
          *(void *)(v71 + 40) = v69;
          *(void *)(v71 + 48) = sub_10008321C;
          *(void *)(v71 + 56) = v70;
          *(void *)(v71 + 64) = sub_100081FF0;
          *(void *)(v71 + 72) = 0;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          os_log_type_t v64 = v60;
          if (os_log_type_enabled(v59, v60))
          {
            id v65 = (uint8_t *)swift_slowAlloc();
            uint64_t v72 = swift_slowAlloc();
            uint64_t v218 = v2;
            *(void *)&long long aBlock = v72;
            *(_WORD *)id v65 = 258;
            v65[2] = 32;
            swift_release();
            v65[3] = 8;
            swift_release();
            v226[0] = (id)sub_100048718(0xD00000000000005ELL, 0x80000001000B9A50, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            id v67 = "HomePodSetupIconContent: unable to open URL %s";
            goto LABEL_36;
          }
        }
        swift_release();
        swift_release();
        goto LABEL_38;
      }
      sub_10007DE90(12, 0x6F723A7366657270, 0xEF494649573D746FLL);

      goto LABEL_250;
    case 0x24:
    case 0x26:
    case 0x27:
      uint64_t v44 = 0xD00000000000002CLL;
      id v45 = "prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE";
      goto LABEL_185;
    case 0x25:
      uint64_t v44 = 0xD00000000000004DLL;
      id v45 = "prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/com.apple.Dataclass.KeychainSync";
      goto LABEL_185;
    case 0x2A:
      uint64_t v44 = 0xD000000000000011;
      id v121 = "com.apple.Home://";
      goto LABEL_188;
    case 0x2D:
      *(unsigned char *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_noP2PRouterPresented) = 1;
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v122 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v149 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v149 & 1) == 0)
        {
LABEL_194:
          *(unsigned char *)(v2 + v38) = sub_10007DBF4((char *)a1);
          goto LABEL_250;
        }
      }
LABEL_193:
      *(unsigned char *)(v2 + v38) = 48;
      goto LABEL_250;
    case 0x2E:
    case 0x31:
      goto LABEL_194;
    case 0x2F:
      goto LABEL_193;
    case 0x30:
      int v40 = 0;
      goto LABEL_19;
    case 0x32:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v123 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) softwareUpdateAgreed:v213];
      goto LABEL_250;
    case 0x33:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v124 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v150 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v150 & 1) == 0) {
          goto LABEL_250;
        }
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) captiveConfirmed:v213];
      goto LABEL_250;
    case 0x34:
      int v125 = LOBYTE(a1->isa);
      if (v125 == 32) {
        goto LABEL_154;
      }
      if (v125 != 31) {
        goto LABEL_250;
      }
      goto LABEL_18;
    case 0x35:
      switch(LOBYTE(a1->isa))
      {
        case 0x1A:
          id v126 = [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) sysDropSession];
          [v126 enableAirDropForEveryone];

          break;
        case 0x1B:
          [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) startAirDropSysdiagnose];
          break;
        case 0x1E:
        case 0x1F:
          goto LABEL_18;
        case 0x20:
          goto LABEL_154;
        default:
          goto LABEL_250;
      }
      goto LABEL_250;
    case 0x36:
    case 0x37:
      int v68 = LOBYTE(a1->isa);
      if ((v68 - 30) < 2) {
        goto LABEL_18;
      }
      if (v68 != 32) {
        goto LABEL_250;
      }
LABEL_154:
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) setSysDropMode:0 v213];
      goto LABEL_18;
    case 0x38:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v127 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v151 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v151 & 1) == 0)
        {
LABEL_209:
          [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) skipAudioPasscode:v213];
          goto LABEL_250;
        }
      }
      [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) playAudioPasscodeAgain:v213];
      *(unsigned char *)(v2 + v38) = 16;
      goto LABEL_250;
    case 0x39:
      uint64_t v128 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v129 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        char v130 = 1;
      }
      else
      {
        char v130 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
      sub_10009DF44(v130 & 1);
      if ([*(id *)(v128 + 80) hasExistingHomePod])
      {
        id v92 = *(void **)(v128 + 80);
LABEL_204:
        [v92 shareSettingsAgreed:v213];
      }
      else
      {
        *(unsigned char *)(v2 + v38) = 15;
      }
      goto LABEL_250;
    case 0x3B:
      char v131 = (char)a1->isa;
      if (sub_1000106E8((char)a1->isa) == 0x6565726761 && v132 == 0xE500000000000000) {
        goto LABEL_153;
      }
      char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v152) {
        goto LABEL_262;
      }
      if (sub_1000106E8(v131) == 0x7972616D697270 && v153 == 0xE700000000000000)
      {
LABEL_153:
        swift_bridgeObjectRelease();
LABEL_262:
        [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) homePodSoftwareUpdateNonSetupAcknowledged:v213];
        goto LABEL_250;
      }
      char v206 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v206) {
        goto LABEL_262;
      }
LABEL_18:
      int v40 = 5;
LABEL_19:
      sub_1000641B8(v40, 1);
LABEL_250:
      unint64_t v197 = sub_100078DA8(*(unsigned char *)(v2 + v38));
      uint64_t v199 = v198;
      if (v197 == sub_100078DA8(v39) && v199 == v200)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v201 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v201 & 1) == 0) {
          sub_10007E644();
        }
      }
      return;
    default:
      if (sub_1000106E8((char)a1->isa) == 0x7972616D697270 && v73 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v133 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v133 & 1) == 0) {
          goto LABEL_250;
        }
      }
      sub_10007D594();
      goto LABEL_250;
  }
}

void sub_10007D594()
{
  uint64_t v1 = v0;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EFA10);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupPresenter: request start device setup process", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 setIdleTimerDisabled:1 forReason:v7];
  }
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  sub_1000133A0(v2, (uint64_t)qword_1000F0390);
  swift_retain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetup: 'Hello Siri' trigger disabled for %f seconds", v10, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  [self requestPhraseSpotterBypassing:1 timeout:300.0];
  sub_10009CFC8();
}

uint64_t sub_10007D80C(void *a1)
{
  id v1 = [a1 name];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_10007D860(char *a1)
{
  if (sub_1000106E8(*a1) == 0xD000000000000010 && v1 == 0x80000001000B3870)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_10007D8EC(uint64_t a1)
{
  if (a1)
  {
    if (qword_1000ED860 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000133A0(v1, (uint64_t)qword_1000EFA10);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      char v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)char v3 = 136315138;
      sub_10000EE48((uint64_t *)&unk_1000EF710);
      uint64_t v4 = Optional.debugDescription.getter();
      sub_100048718(v4, v5, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "HomePodSetupPresenter: ### Re-enable B238Setup after WiFi failed: %s", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1000ED860 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000133A0(v6, (uint64_t)qword_1000EFA10);
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "HomePodSetupPresenter: Re-enabling B238Setup after WiFi connects", v8, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10007DB88(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_10007DBF4(char *a1)
{
  if (sub_1000106E8(*a1) == 0x7972616D697270 && v2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v4) {
    return 48;
  }
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  uint64_t v6 = *(void *)(v5 + 48);
  if (*(_DWORD *)(v6 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) != 3
    || (*(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_noP2PRouterPresented) & 1) != 0)
  {
    if (*(void *)(v6 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem))
    {
      if (*(unsigned char *)(v6 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) == 1
        && (*(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_appleMusicPromotionPresented) & 1) == 0)
      {
        os_log_type_t v7 = *(char **)(v5 + 136);
        if (v7)
        {
          if (*(void *)&v7[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic])
          {
            uint64_t v8 = qword_1000ED860;
            os_log_type_t v9 = v7;
            if (v8 != -1) {
              swift_once();
            }
            uint64_t v10 = type metadata accessor for Logger();
            sub_1000133A0(v10, (uint64_t)qword_1000EFA10);
            uint64_t v11 = Logger.logObject.getter();
            os_log_type_t v12 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v11, v12))
            {
              uint64_t v13 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v13 = 0;
              _os_log_impl((void *)&_mh_execute_header, v11, v12, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: stateForLastScreens .appleMusicPromotion", v13, 2u);
              swift_slowDealloc();
            }

            return 24;
          }
        }
      }
    }
    return 48;
  }
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000133A0(v15, (uint64_t)qword_1000EFA10);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: stateForLastScreens .noP2PRouter", v18, 2u);
    swift_slowDealloc();
  }

  return 45;
}

void sub_10007DE90(int a1, uint64_t a2, unint64_t a3)
{
  sub_10000EE48(&qword_1000EDF98);
  uint64_t v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v34 - v9;
  sub_1000641B8(a1, a1 != 19);
  if (a3)
  {
    if (qword_1000ED860 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    uint64_t v12 = sub_1000133A0(v11, (uint64_t)qword_1000EFA10);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      v34[1] = v12;
      uint64_t v16 = (uint8_t *)v15;
      id v35 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      _OWORD v34[2] = sub_100048718(a2, a3, (uint64_t *)&v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: Attempting to open settings: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    URL.init(string:)();
    id v17 = [self defaultWorkspace];
    if (!v17) {
      goto LABEL_11;
    }
    uint64_t v18 = v17;
    sub_10000FD94((uint64_t)v10, (uint64_t)v8, &qword_1000EDF98);
    uint64_t v19 = type metadata accessor for URL();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v22 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19) != 1)
    {
      URL._bridgeToObjectiveC()(v21);
      uint64_t v22 = v23;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
    }
    sub_10000DBF8((uint64_t)&_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v35 = 0;
    unsigned int v25 = [v18 openSensitiveURL:v22 withOptions:isa error:&v35];

    id v26 = v35;
    if (!v25)
    {
      uint64_t v27 = v26;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_10000F674((uint64_t)v10, &qword_1000EDF98);
      id v28 = (id)_convertErrorToNSError(_:)();
      unint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138412290;
        id v35 = v28;
        id v33 = v28;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v32 = v28;

        _os_log_impl((void *)&_mh_execute_header, v29, v30, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupPresenter: Open Settings failed {error: %@}", v31, 0xCu);
        sub_10000EE48(&qword_1000EDEB0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
      }
    }
    else
    {
LABEL_11:
      sub_10000F674((uint64_t)v10, &qword_1000EDF98);
    }
  }
}

uint64_t sub_10007E3BC(char a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = a1;
  unint64_t v4 = sub_100078DA8(a1);
  unint64_t v5 = v3;
  if (v4 == 1701736292 && v3 == 0xE400000000000000) {
    goto LABEL_3;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v7) {
    return sub_10007E644(v6);
  }
  if (v4 == 0x6F727245656E6F64 && v5 == 0xE900000000000072)
  {
LABEL_3:
    uint64_t v6 = swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v6 = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
      *(void *)(v9 + 88) = v4;
      *(void *)(v9 + 96) = v5;
      swift_bridgeObjectRelease();
      *(void *)(v9 + 104) = mach_absolute_time();
      *(unsigned char *)(v9 + 112) = 0;
      if (qword_1000ED860 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_1000133A0(v10, (uint64_t)qword_1000EFA10);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315138;
        sub_100048718(v4, v5, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter presentCurrentTask viewController: %s", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
  }
  return sub_10007E644(v6);
}

void sub_10007E644()
{
  uint64_t v1 = v0;
  if (IsAppleInternalBuild()) {
    sub_10007EE24();
  }
  uint64_t v2 = sub_1000803A4(*(unsigned char *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  if (v2)
  {
    unint64_t v3 = v2;
    sub_100063F68(v2);
    unint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_currentViewController);
    *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_currentViewController) = v3;
    char v7 = v3;

    [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) setPresentingChildViewController:v7];
  }
  else
  {
    uint64_t v5 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48)
       + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType;
    if (*(unsigned char *)(v5 + 4)) {
      int v6 = 0;
    }
    else {
      int v6 = *(_DWORD *)v5;
    }
    sub_1000641B8(v6, v6 != 19);
  }
}

uint64_t sub_10007E75C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_log_type_t v14 = (char *)&v34 - v13;
  uint64_t result = IsAppleInternalBuild();
  if (result)
  {
    uint64_t v41 = v9;
    if (qword_1000ED740 != -1) {
      swift_once();
    }
    sub_10003FFC4(*(unsigned char *)(v42 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state), (uint64_t)&v45);
    if ((void)v47 == 1)
    {
      return sub_10000F674((uint64_t)&v45, &qword_1000EE4A0);
    }
    else
    {
      uint64_t v36 = v8;
      uint64_t v37 = v5;
      v48[0] = v45;
      v48[1] = v46;
      v48[2] = v47;
      if (qword_1000ED860 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_1000133A0(v16, (uint64_t)qword_1000EFA10);
      sub_100016FA4((char *)v48, (uint64_t)&v45);
      id v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      BOOL v19 = os_log_type_enabled(v17, v18);
      uint64_t v40 = v1;
      uint64_t v39 = v4;
      uint64_t v38 = v3;
      if (v19)
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v35 = v0;
        aBlock[0] = v21;
        *(_DWORD *)uint64_t v20 = 136315138;
        unint64_t v22 = sub_10000CD54();
        uint64_t v43 = sub_100048718(v22, v23, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1000136C8((uint64_t)&v45);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupPresenter: Found Automation stepResult: %s", v20, 0xCu);
        swift_arrayDestroy();
        uint64_t v0 = v35;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1000136C8((uint64_t)&v45);
      }

      sub_1000150E4();
      uint64_t v35 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      if (qword_1000ED868 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for DispatchTimeInterval();
      sub_1000133A0(v24, (uint64_t)qword_1000EFA28);
      + infix(_:_:)();
      unsigned int v25 = *(void (**)(char *, uint64_t))(v41 + 8);
      id v26 = v12;
      uint64_t v27 = v36;
      v25(v26, v36);
      uint64_t v28 = swift_allocObject();
      swift_weakInit();
      sub_100016FA4((char *)v48, (uint64_t)&v45);
      uint64_t v29 = swift_allocObject();
      long long v30 = v46;
      *(_OWORD *)(v29 + 24) = v45;
      *(void *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 40) = v30;
      *(_OWORD *)(v29 + 56) = v47;
      aBlock[4] = (uint64_t)sub_100083088;
      aBlock[5] = v29;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = (uint64_t)sub_100089B18;
      aBlock[3] = (uint64_t)&unk_1000DCBC0;
      uint64_t v31 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      *(void *)&long long v45 = _swiftEmptyArrayStorage;
      sub_1000825EC((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000EE48(&qword_1000EDEA0);
      sub_100015184();
      uint64_t v32 = v38;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v33 = (void *)v35;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v0);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v39);
      v25(v14, v27);
      return sub_1000136C8((uint64_t)v48);
    }
  }
  return result;
}

uint64_t sub_10007EDC4(uint64_t a1, NSObject *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10007A7CC(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10007EE24()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v78 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v77 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for DispatchTimeInterval();
  uint64_t v75 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  id v92 = (uint64_t *)((char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  char v81 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v99 = (char *)&v74 - v10;
  if (qword_1000ED740 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1000F3968;
  uint64_t v12 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState;
  uint64_t v13 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState);
  uint64_t v14 = qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence;
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)(*(void *)v14 + 16);
  if (v16 >= v13 && v16 != 0)
  {
    if (v13 < v16)
    {
      if (v13 < 0)
      {
        __break(1u);
      }
      else
      {
        uint64_t v18 = *(void *)(v11 + v12);
        BOOL v19 = __OFADD__(v18, 1);
        uint64_t v20 = v18 + 1;
        if (!v19)
        {
          char v21 = *(unsigned char *)(*(void *)v14 + v13 + 32);
          *(void *)(v11 + v12) = v20;
LABEL_12:
          *(unsigned char *)(v95 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = v21;
          uint64_t v16 = *(void *)(*(void *)v14 + 16);
          goto LABEL_13;
        }
      }
      __break(1u);
      return result;
    }
    char v21 = 0;
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v94 = v7;
  BOOL v22 = v16 < *(void *)(v11 + v12) || v16 == 0;
  unint64_t v23 = v99;
  if (v22
    && !*(unsigned char *)(v11 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode)
    && !*(void *)(v11 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
  {
    return result;
  }
  uint64_t v82 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  unint64_t v24 = sub_100078DA8(*(unsigned char *)(v95 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  uint64_t v91 = v3;
  if (v24 == 0x636C655769726973 && v25 == 0xEB00000000656D6FLL)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    sub_10000EE48(&qword_1000EFD48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000AF6D0;
    *(void *)(inited + 32) = 0x7478655469726973;
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = 0xD00000000000001CLL;
    *(void *)(inited + 56) = 0x80000001000B9930;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = 0x495469726973;
    *(void *)(inited + 88) = 0xE600000000000000;
    sub_10000EE48(&qword_1000EFD50);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1000B1BE0;
    *(void *)(v29 + 32) = sub_10000DD30((uint64_t)&off_1000DA1B8);
    *(void *)(v29 + 40) = sub_10000DD30((uint64_t)&off_1000DA220);
    *(void *)(v29 + 48) = sub_10000DD30((uint64_t)&off_1000DA288);
    *(void *)(v29 + 56) = sub_10000DD30((uint64_t)&off_1000DA2F0);
    *(void *)(v29 + 64) = sub_10000DD30((uint64_t)&off_1000DA358);
    *(void *)(v29 + 72) = sub_10000DD30((uint64_t)&off_1000DA3C0);
    *(void *)(inited + 120) = sub_10000EE48(&qword_1000EFD58);
    *(void *)(inited + 96) = v29;
    unint64_t v30 = sub_10000DBF8(inited);
    sub_1000150E4();
    uint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v32 = v5;
    id v33 = v2;
    uint64_t v34 = v0;
    uint64_t v35 = v81;
    static DispatchTime.now()();
    uint64_t v36 = v92;
    uint64_t *v92 = 1;
    uint64_t v37 = v75;
    uint64_t v38 = v93;
    (*(void (**)(uint64_t *, void, uint64_t))(v75 + 104))(v36, enum case for DispatchTimeInterval.seconds(_:), v93);
    + infix(_:_:)();
    (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v36, v38);
    uint64_t v39 = *(void (**)(char *, uint64_t))(v76 + 8);
    uint64_t v40 = v35;
    uint64_t v0 = v34;
    uint64_t v2 = v33;
    uint64_t v5 = v32;
    v39(v40, v94);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v95;
    *(void *)(v41 + 24) = v30;
    id v104 = sub_1000826B8;
    uint64_t v105 = v41;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v101 = 1107296256;
    uint64_t v102 = sub_100089B18;
    id v103 = &unk_1000DCB70;
    uint64_t v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000825EC((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000EE48(&qword_1000EDEA0);
    sub_100015184();
    uint64_t v3 = v91;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    uint64_t v43 = v42;
    uint64_t v27 = v94;
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v2, v0);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v3);
    v39(v99, v27);
    unint64_t v23 = v99;
    goto LABEL_25;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = v94;
  if (v26) {
    goto LABEL_24;
  }
LABEL_25:
  id v79 = v5;
  uint64_t v80 = v2;
  uint64_t v98 = v0;
  if (sub_100078DA8(*(unsigned char *)(v95 + v82)) == 0x73736572676F7270 && v44 == 0xEA00000000004955)
  {
    swift_bridgeObjectRelease();
    long long v45 = v80;
    long long v46 = v79;
    long long v47 = v81;
    goto LABEL_29;
  }
  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  long long v45 = v80;
  long long v46 = v79;
  long long v47 = v81;
  if (v48)
  {
LABEL_29:
    unint64_t v90 = sub_1000150E4();
    uint64_t v49 = 0;
    char v89 = (void (**)(uint64_t *, void, uint64_t))(v75 + 104);
    unsigned int v88 = enum case for DispatchTimeInterval.milliseconds(_:);
    char v87 = (void (**)(uint64_t *, uint64_t))(v75 + 8);
    uint64_t v86 = (void (**)(char *, uint64_t))(v76 + 8);
    char v85 = &v102;
    uint64_t v84 = (void (**)(char *, uint64_t))(v78 + 8);
    uint64_t v83 = (void (**)(char *, uint64_t))(v77 + 8);
    uint64_t v50 = 750;
    do
    {
      uint64_t v51 = v46;
      int v52 = *(_DWORD *)((char *)&off_1000DA428 + v49 + 32);
      id v97 = (void (*)(void, void))static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      uint64_t v53 = v92;
      uint64_t *v92 = v50;
      id v54 = v47;
      uint64_t v55 = v93;
      (*v89)(v53, v88, v93);
      + infix(_:_:)();
      (*v87)(v53, v55);
      id v96 = *v86;
      v96(v54, v27);
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v95;
      *(_DWORD *)(v56 + 24) = v52;
      id v104 = sub_10008266C;
      uint64_t v105 = v56;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v101 = 1107296256;
      uint64_t v102 = sub_100089B18;
      id v103 = &unk_1000DCB20;
      Class v57 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_1000825EC((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000EE48(&qword_1000EDEA0);
      sub_100015184();
      long long v47 = v54;
      uint64_t v27 = v94;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      unsigned __int8 v58 = v97;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      id v59 = v57;
      long long v46 = v51;
      uint64_t v60 = v98;
      _Block_release(v59);

      uint64_t v3 = v91;
      (*v84)(v45, v60);
      (*v83)(v46, v3);
      v96(v99, v27);
      unint64_t v23 = v99;
      v50 += 750;
      v49 += 4;
    }
    while (v49 != 24);
  }
  if (sub_100078DA8(*(unsigned char *)(v95 + v82)) == 0xD000000000000013 && v61 == 0x80000001000B3AF0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v62 = v98;
    uint64_t v63 = v80;
    os_log_type_t v64 = v79;
  }
  else
  {
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v62 = v98;
    uint64_t v63 = v80;
    os_log_type_t v64 = v79;
    if ((v65 & 1) == 0) {
      return result;
    }
  }
  if (!*(void *)(*(void *)(*(void *)(v95 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor)
                              + 48)
                  + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem))
  {
    sub_10009F734();
    sub_1000150E4();
    id v99 = (char *)static OS_dispatch_queue.main.getter();
    uint64_t v66 = v81;
    static DispatchTime.now()();
    id v67 = v92;
    uint64_t *v92 = 2;
    uint64_t v68 = v75;
    uint64_t v69 = v93;
    (*(void (**)(uint64_t *, void, uint64_t))(v75 + 104))(v67, enum case for DispatchTimeInterval.seconds(_:), v93);
    + infix(_:_:)();
    (*(void (**)(uint64_t *, uint64_t))(v68 + 8))(v67, v69);
    id v97 = *(void (**)(void, void))(v76 + 8);
    uint64_t v70 = v94;
    v97(v66, v94);
    uint64_t v71 = swift_allocObject();
    swift_weakInit();
    id v104 = sub_1000825CC;
    uint64_t v105 = v71;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v101 = 1107296256;
    uint64_t v102 = sub_100089B18;
    id v103 = &unk_1000DCAD0;
    uint64_t v72 = _Block_copy(&aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000825EC((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000EE48(&qword_1000EDEA0);
    sub_100015184();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v73 = v99;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v72);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v63, v62);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v3);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v97)(v23, v70);
    *(unsigned char *)(v95 + v82) = 0;
  }
  return result;
}

uint64_t sub_10007FD70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  unint64_t v4 = sub_10007FDD8(a2);
  sub_10008205C(v3, 510, v4, a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007FDD8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000EE48(&qword_1000ED9A8);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10000F578(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    _OWORD v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10000F464(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_10000F464(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_10000F464(v36, v37);
    sub_10000F464(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_10000F464(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10001536C();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000801A0(uint64_t a1, int a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_DWORD *)(*(void *)(*(void *)(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48)
            + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
  LOBYTE(a2) = *(unsigned char *)(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
  uint64_t v7 = swift_retain();
  v11[8] = 1;
  sub_10001F674(v7, a2, 0x100000000uLL, 0, v6);
  swift_release();
  uint64_t v8 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess();
  sub_100082FD8((uint64_t)v6, v9);
  swift_endAccess();
  sub_100079AF8();
  return sub_10000F674((uint64_t)v6, &qword_1000EF130);
}

uint64_t sub_100080308()
{
  if (qword_1000ED740 != -1) {
    swift_once();
  }
  *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState) = 0;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10007E644();
    return swift_release();
  }
  return result;
}

char *sub_1000803A4(char a1)
{
  id v2 = 0;
  switch(a1)
  {
    case 1:
    case 2:
    case 20:
    case 22:
      type metadata accessor for HomePodSetupPickerViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 3:
      type metadata accessor for HomePodSetupProgressViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 4:
    case 5:
    case 7:
    case 10:
    case 11:
    case 15:
    case 23:
    case 26:
    case 27:
    case 29:
    case 30:
    case 31:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 45:
    case 47:
    case 49:
    case 50:
    case 52:
    case 53:
    case 55:
    case 56:
    case 57:
    case 59:
    case 60:
    case 61:
      type metadata accessor for HomePodSetupIconContentViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 6:
      type metadata accessor for HomePodSetupSoundRecognitionViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 8:
      type metadata accessor for HomePodSetupDisclaimerViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 9:
      type metadata accessor for HomePodSetupPersonalRequestsViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 12:
    case 13:
      type metadata accessor for HomePodSetupSiriWelcomeViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 14:
    case 28:
      type metadata accessor for HomePodSetupFeatureListViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 16:
      unsigned __int8 v5 = *(unsigned char *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor)
                                + 48)
                    + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
      id v6 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupVisualAuthViewController());
      return (char *)sub_10006E528(v5);
    case 17:
      [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80) skipAudioPasscode];
      type metadata accessor for HomePodSetupPINEntryViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 18:
    case 25:
      type metadata accessor for HomePodSetupStereoViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 19:
      id v7 = [objc_allocWithZone((Class)HomePodSetupSiriVoicePreviewer) init];
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
      [v7 setSession:*(void *)(*(void *)(v8 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession)];
      uint64_t v9 = *(void *)(v8 + 48);
      uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
      uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode + 8);
      char v12 = *(unsigned char *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_allowsRandomVoiceSelection);
      objc_allocWithZone((Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController());
      swift_bridgeObjectRetain();
      return sub_10005B980(v10, v11, v12, v7);
    case 21:
      type metadata accessor for HomePodSetupLeftRightViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 24:
      uint64_t v38 = &type metadata for SharingFeatureFlags;
      unint64_t v39 = sub_100082540();
      v37[0] = 0;
      char v13 = isFeatureEnabled(_:)();
      sub_10000E470((uint64_t)v37);
      uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
      if ((v13 & 1) == 0)
      {
        uint64_t v16 = *(void *)(v14 + 48);
        uint64_t v18 = *(void *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
        uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
        uint64_t v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        unint64_t v22 = (objc_class *)type metadata accessor for HomePodSetupAppleMusicViewController();
        char v23 = (char *)objc_allocWithZone(v22);
        *(void *)&v23[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_presenter + 8] = 0;
        swift_unknownObjectWeakInit();
        unint64_t v24 = &v23[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel];
        uint64_t v25 = type metadata accessor for HomePodSetupViewModel(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
        *(void *)&v23[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic] = 0;
        uint64_t v26 = &v23[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceGUID];
        *(void *)uint64_t v26 = v18;
        *((void *)v26 + 1) = v17;
        int64_t v27 = &v23[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceSerialNumber];
        *(void *)int64_t v27 = v21;
        *((void *)v27 + 1) = v20;
        id v28 = objc_allocWithZone((Class)PRXCardContentView);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v29 = [v28 init];
        v36.receiver = v23;
        v36.super_class = v22;
        [super initWithContentView:v29];

        return (char *)v2;
      }
      if ([*(id *)(v14 + 80) acceptedMusicTerms])
      {
        id v2 = *(id *)(v14 + 136);
        if (v2)
        {
          id v15 = v2;
          return (char *)v2;
        }
        if (qword_1000ED860 != -1) {
          swift_once();
        }
        uint64_t v35 = type metadata accessor for Logger();
        sub_1000133A0(v35, (uint64_t)qword_1000EFA10);
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          long long v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v33 = 0;
          long long v34 = "HomePodSetupPresenter: No marketing item so not showing Music Offer.";
          goto LABEL_36;
        }
      }
      else
      {
        if (qword_1000ED860 != -1) {
          swift_once();
        }
        uint64_t v30 = type metadata accessor for Logger();
        sub_1000133A0(v30, (uint64_t)qword_1000EFA10);
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          long long v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v33 = 0;
          long long v34 = "HomePodSetupPresenter: User did not agree to Apple Music Privacy not showing Music Offer.";
LABEL_36:
          _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
          swift_slowDealloc();
        }
      }

      return 0;
    case 32:
    case 33:
    case 34:
    case 35:
    case 44:
    case 51:
      type metadata accessor for HomePodSetupWiFiErrorViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 46:
    case 62:
      type metadata accessor for HomePodSetupDoneViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 48:
      return (char *)v2;
    case 54:
      type metadata accessor for HomePodSetupFileTransferViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    case 58:
      type metadata accessor for SoftwareUpdateRequiredViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    default:
      type metadata accessor for HomePodSetupIntroViewController();
      return (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  }
}

void sub_1000809C0()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EDF98);
  __chkstk_darwin(v1 - 8);
  uint64_t v82 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v83 = *(void *)(v3 - 8);
  uint64_t v84 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  char v81 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v7 = (unint64_t)&v79 - v6;
  uint64_t v8 = sub_10000EE48(&qword_1000EFD28);
  __chkstk_darwin(v8 - 8);
  uint64_t v86 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLComponents();
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  __chkstk_darwin(v10);
  char v85 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for URLQueryItem();
  uint64_t v12 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v94 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  id v15 = [*(id *)(v14 + 80) mainError];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v96 = 0;
    unint64_t v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    v17._uint64_t countAndFlagsBits = 0xD000000000000028;
    v17._object = (void *)0x80000001000B9900;
    String.append(_:)(v17);
    uint64_t v95 = (uint64_t)v16;
    sub_10000EE48((uint64_t *)&unk_1000EF2F0);
    _print_unlocked<A, B>(_:_:)();
    v18._uint64_t countAndFlagsBits = 10528;
    v18._object = (void *)0xE200000000000000;
    String.append(_:)(v18);
  }
  else
  {
    uint64_t v96 = 0;
    unint64_t v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease();
    uint64_t v96 = 0xD000000000000026;
    unint64_t v97 = 0x80000001000B9890;
    LODWORD(v95) = *(_DWORD *)(*(void *)(v14 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status);
    v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v96;
  unint64_t v21 = v97;
  sub_10000EE48(&qword_1000EFD30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000B1BF0;
  strcpy((char *)(inited + 32), "Classification");
  *(unsigned char *)(inited + 47) = -18;
  *(void *)(inited + 48) = 0x2073756F69726553;
  *(void *)(inited + 56) = 0xEB00000000677542;
  *(void *)(inited + 64) = 0x6E656E6F706D6F43;
  *(void *)(inited + 72) = 0xEB00000000444974;
  *(void *)(inited + 80) = 0x30323833313231;
  *(void *)(inited + 88) = 0xE700000000000000;
  strcpy((char *)(inited + 96), "ComponentName");
  *(_WORD *)(inited + 110) = -4864;
  *(void *)(inited + 112) = 0x69766544656D6F48;
  *(void *)(inited + 120) = 0xEF70757465536563;
  *(void *)(inited + 128) = 0xD000000000000010;
  *(void *)(inited + 136) = 0x80000001000B98C0;
  *(void *)(inited + 144) = 7105601;
  *(void *)(inited + 152) = 0xE300000000000000;
  *(void *)(inited + 160) = 0x7364726F7779654BLL;
  *(void *)(inited + 168) = 0xE800000000000000;
  *(void *)(inited + 176) = 0x393739343937;
  *(void *)(inited + 184) = 0xE600000000000000;
  *(void *)(inited + 192) = 0x6375646F72706552;
  *(void *)(inited + 200) = 0xEF7974696C696269;
  strcpy((char *)(inited + 208), "I Didn't Try");
  *(unsigned char *)(inited + 221) = 0;
  *(_WORD *)(inited + 222) = -5120;
  *(void *)(inited + 224) = 0x656C746954;
  *(void *)(inited + 232) = 0xE500000000000000;
  *(void *)(inited + 240) = v20;
  *(void *)(inited + 248) = v21;
  *(void *)(inited + 256) = 0x656D686361747441;
  *(void *)(inited + 264) = 0xEB0000000073746ELL;
  id v23 = [*(id *)(v14 + 80) sysDropSession];
  id v24 = [v23 fileTransferredSysDiagnosePath];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  *(void *)(inited + 272) = v25;
  *(void *)(inited + 280) = v27;
  unint64_t v28 = sub_10000DAAC(inited);
  if (qword_1000ED860 == -1) {
    goto LABEL_5;
  }
LABEL_53:
  swift_once();
LABEL_5:
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v30 = sub_1000133A0(v29, (uint64_t)qword_1000EFA10);
  swift_bridgeObjectRetain_n();
  uint64_t v87 = v30;
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  unint64_t v80 = v7;
  if (v33)
  {
    long long v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v96 = swift_slowAlloc();
    *(_DWORD *)long long v34 = 136315138;
    id v92 = v34 + 4;
    swift_bridgeObjectRetain();
    uint64_t v35 = Dictionary.description.getter();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v95 = sub_100048718(v35, v37, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "TTR query dict %s", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v38 = *(void *)(v28 + 64);
  unint64_t v90 = v28 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v7 = v40 & v38;
  int64_t v91 = (unint64_t)(v39 + 63) >> 6;
  id v92 = (uint8_t *)(v12 + 32);
  swift_bridgeObjectRetain();
  int64_t v41 = 0;
  uint64_t v42 = _swiftEmptyArrayStorage;
  if (v7)
  {
LABEL_11:
    unint64_t v43 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v44 = v43 | (v41 << 6);
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v45 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v45 >= v91) {
      goto LABEL_41;
    }
    unint64_t v46 = *(void *)(v90 + 8 * v45);
    ++v41;
    if (!v46)
    {
      int64_t v41 = v45 + 1;
      if (v45 + 1 >= v91) {
        goto LABEL_41;
      }
      unint64_t v46 = *(void *)(v90 + 8 * v41);
      if (!v46)
      {
        int64_t v41 = v45 + 2;
        if (v45 + 2 >= v91) {
          goto LABEL_41;
        }
        unint64_t v46 = *(void *)(v90 + 8 * v41);
        if (!v46)
        {
          int64_t v41 = v45 + 3;
          if (v45 + 3 >= v91) {
            goto LABEL_41;
          }
          unint64_t v46 = *(void *)(v90 + 8 * v41);
          if (!v46)
          {
            int64_t v41 = v45 + 4;
            if (v45 + 4 >= v91) {
              goto LABEL_41;
            }
            unint64_t v46 = *(void *)(v90 + 8 * v41);
            if (!v46) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v7 = (v46 - 1) & v46;
    unint64_t v44 = __clz(__rbit64(v46)) + (v41 << 6);
LABEL_30:
    char v48 = (uint64_t *)(*(void *)(v28 + 48) + 16 * v44);
    uint64_t v50 = *v48;
    uint64_t v49 = v48[1];
    uint64_t v51 = *(void *)(v28 + 16);
    swift_bridgeObjectRetain();
    if (v51)
    {
      swift_bridgeObjectRetain();
      sub_100055184(v50, v49);
      if (v52) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = (void *)sub_100054A5C(0, v42[2] + 1, 1, (unint64_t)v42);
    }
    unint64_t v54 = v42[2];
    unint64_t v53 = v42[3];
    if (v54 >= v53 >> 1) {
      uint64_t v42 = (void *)sub_100054A5C(v53 > 1, v54 + 1, 1, (unint64_t)v42);
    }
    void v42[2] = v54 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))((unint64_t)v42+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v54, v94, v93);
    if (v7) {
      goto LABEL_11;
    }
  }
  int64_t v47 = v45 + 5;
  if (v47 >= v91)
  {
LABEL_41:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t)v86;
    URLComponents.init(string:)();
    uint64_t v57 = v88;
    uint64_t v56 = v89;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v55, 1, v89) == 1)
    {
      swift_bridgeObjectRelease();
      sub_10000F674(v55, &qword_1000EFD28);
    }
    else
    {
      unsigned __int8 v58 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v85, v55, v56);
      URLComponents.queryItems.setter();
      uint64_t v59 = (uint64_t)v82;
      URLComponents.url.getter();
      uint64_t v60 = v83;
      uint64_t v61 = v84;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v59, 1, v84) == 1)
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
        sub_10000F674(v59, &qword_1000EDF98);
      }
      else
      {
        unint64_t v62 = v80;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v60 + 32))(v80, v59, v61);
        id v63 = [self sharedApplication];
        URL._bridgeToObjectiveC()(v64);
        uint64_t v66 = v65;
        sub_10000DBD0((uint64_t)_swiftEmptyArrayStorage);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_1000825EC(&qword_1000EDB60, type metadata accessor for OpenExternalURLOptionsKey);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v63 openURL:v66 options:isa completionHandler:0];

        uint64_t v68 = v81;
        (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v81, v62, v61);
        uint64_t v69 = Logger.logObject.getter();
        os_log_type_t v70 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc();
          uint64_t v72 = swift_slowAlloc();
          uint64_t v94 = (char *)&type metadata for Any + 8;
          uint64_t v96 = v72;
          *(_DWORD *)uint64_t v71 = 136315138;
          uint64_t v93 = (uint64_t)(v71 + 4);
          sub_1000825EC(&qword_1000EFD38, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v95 = sub_100048718(v73, v74, &v96);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v75 = *(void (**)(char *, uint64_t))(v60 + 8);
          v75(v81, v61);
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "HomePodSetupPresenter: Open Radar URL: %s", v71, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v75 = *(void (**)(char *, uint64_t))(v60 + 8);
          v75(v68, v61);
        }
        v75((char *)v62, v61);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v89);
      }
    }
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "<loom:ViewService:matchSubmitRadar> HomePodSetupPresenter: Report Bug", v78, 2u);
      swift_slowDealloc();
    }

    return;
  }
  unint64_t v46 = *(void *)(v90 + 8 * v47);
  if (v46)
  {
    int64_t v41 = v47;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v41 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v41 >= v91) {
      goto LABEL_41;
    }
    unint64_t v46 = *(void *)(v90 + 8 * v41);
    ++v47;
    if (v46) {
      goto LABEL_29;
    }
  }
  __break(1u);
}

uint64_t sub_1000817BC()
{
  sub_10001371C(v0 + 16);
  sub_10000F674(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, &qword_1000EF130);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100081854()
{
  sub_1000817BC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000818AC()
{
  return type metadata accessor for HomePodSetupPresenter();
}

uint64_t type metadata accessor for HomePodSetupPresenter()
{
  uint64_t result = qword_1000EFAC0;
  if (!qword_1000EFAC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100081900()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t getEnumTagSinglePayload for HomePodSetupState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC2) {
    goto LABEL_17;
  }
  if (a2 + 62 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 62) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 62;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3F;
  int v8 = v6 - 63;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomePodSetupState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 62 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 62) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC1)
  {
    unsigned int v6 = ((a2 - 194) >> 8) + 1;
    *uint64_t result = a2 + 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100081B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 62;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupState()
{
  return &type metadata for HomePodSetupState;
}

unint64_t sub_100081B74()
{
  unint64_t result = qword_1000EFD20;
  if (!qword_1000EFD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EFD20);
  }
  return result;
}

uint64_t sub_100081BC8()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  sub_10001343C(v0, qword_1000EFA28);
  *(void *)sub_1000133A0(v0, (uint64_t)qword_1000EFA28) = 1;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

uint64_t sub_100081C58(int a1)
{
  if (a1 <= 0)
  {
    if (a1 == -71163)
    {
      return 43;
    }
    else if (a1 == -71138)
    {
      return 44;
    }
    else if (a1)
    {
      return 47;
    }
    else
    {
      swift_retain();
      char v3 = sub_10004D328();
      swift_release();
      if (v3) {
        return 49;
      }
      else {
        return 46;
      }
    }
  }
  else
  {
    int v1 = a1 - 301000;
    uint64_t result = 32;
    switch(v1)
    {
      case 0:
        return result;
      case 4:
        uint64_t result = 34;
        break;
      case 5:
        uint64_t result = 36;
        break;
      case 6:
        uint64_t result = 39;
        break;
      case 10:
        uint64_t result = 40;
        break;
      case 11:
        uint64_t result = 37;
        break;
      case 17:
        uint64_t result = 28;
        break;
      case 18:
        uint64_t result = 41;
        break;
      case 20:
      case 34:
        uint64_t result = 35;
        break;
      case 21:
      case 28:
        uint64_t result = 33;
        break;
      case 24:
        uint64_t result = 42;
        break;
      case 27:
        uint64_t result = 38;
        break;
      default:
        return 47;
    }
  }
  return result;
}

uint64_t sub_100081E18(int a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000EFA10);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)BOOL v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupPresenter: displayError called for state: %d", v7, 8u);
    swift_slowDealloc();
  }

  *(_DWORD *)(*(void *)(*(void *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48)
            + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status) = a1;
  char v8 = 40;
  switch(a1)
  {
    case 301007:
      char v8 = 29;
      break;
    case 301010:
      return sub_10007E3BC(v8);
    case 301017:
      char v8 = 28;
      break;
    case 301019:
      char v8 = 31;
      break;
    case 301022:
      char v8 = 30;
      break;
    default:
      char v8 = 47;
      break;
  }
  return sub_10007E3BC(v8);
}

uint64_t sub_100081FF4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  sub_100048718(0xD00000000000005ELL, 0x80000001000B9A50, a3);
  uint64_t v4 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v4;
  return result;
}

void sub_10008205C(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (void *)((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000150E4();
  uint64_t *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  char v15 = _dispatchPreconditionTest(_:)();
  Swift::String v17 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  uint64_t v16 = v12 + 8;
  v17(v14, v11);
  if (v15)
  {
    uint64_t v18 = *(void *)(a1 + 48);
    *(_DWORD *)(v18 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
    *(void *)(v18 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo) = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1000826C0(a2);
    uint64_t v16 = String.init(cString:)();
    a3 = v19;
    if (qword_1000ED860 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = sub_1000133A0(v20, (uint64_t)qword_1000EFA10);
  swift_bridgeObjectRetain();
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v34 = a4;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v35 = v10;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    v33[1] = v21;
    v37[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_100048718(v16, a3, v37);
    a4 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "HomePodSetupPresenter: Show Siri Welcome screen for event %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v10 = v35;
    swift_slowDealloc();

    if (a2 != 510) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v27 = swift_retain();
    sub_100039DD4(v27, v10);
    swift_release();
    uint64_t v28 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
    uint64_t v29 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
    swift_beginAccess();
    sub_100082FD8((uint64_t)v10, v29);
    swift_endAccess();
    sub_100079AF8();
    sub_10000F674((uint64_t)v10, &qword_1000EF130);
    return;
  }

  swift_bridgeObjectRelease_n();
  if (a2 == 510) {
    goto LABEL_8;
  }
LABEL_5:
  if (a2 == 500)
  {
    sub_10007E3BC(12);
  }
  else
  {
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "HomePodSetupPresenter: Show Siri Welcome screen with an invalid Event Type", v32, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000824EC()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x3F) {
    return 63;
  }
  else {
    return v0;
  }
}

unint64_t sub_100082540()
{
  unint64_t result = qword_1000EFD40;
  if (!qword_1000EFD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000EFD40);
  }
  return result;
}

uint64_t sub_100082594()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000825CC()
{
  return sub_100080308();
}

uint64_t sub_1000825D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000825E4()
{
  return swift_release();
}

uint64_t sub_1000825EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100082634()
{
  swift_release();

  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_10008266C()
{
  return sub_1000801A0(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_100082678()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000826B8()
{
  return sub_10007FD70(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

const char *sub_1000826C0(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        uint64_t result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        uint64_t result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        uint64_t result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        uint64_t result = "SU-No-SetupCancelled";
        break;
      case 904:
        uint64_t result = "SU-No-SetupObliterate";
        break;
      case 905:
        uint64_t result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        uint64_t result = "SysDrop AirDrop Event";
        break;
      case 907:
        uint64_t result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        uint64_t result = "SysDrop Cancel Event";
        break;
      case 909:
        uint64_t result = "File Transfer Progress Event";
        break;
      case 910:
        uint64_t result = "File Transfer Completed Event";
        break;
      case 911:
        uint64_t result = "iOSWiFiSetup";
        break;
      case 912:
        uint64_t result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        uint64_t result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            uint64_t result = "AuthAccountsStart";
            break;
          case 803:
            uint64_t result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            uint64_t result = "AuthAccountsStoreProgress";
            break;
          case 805:
            uint64_t result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          uint64_t result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          uint64_t result = "TVLSFinish";
          break;
        case 270:
          uint64_t result = "TVLSEstimateStart";
          break;
        case 272:
          uint64_t result = "TVLSEstimateFinal";
          break;
        case 274:
          uint64_t result = "TVLSEstimateFailed";
          break;
        case 276:
          uint64_t result = "TVLSTryAgain";
          break;
        case 277:
          uint64_t result = "TVLSToneBegan";
          break;
        case 278:
          uint64_t result = "TVLCalStart";
          break;
        case 279:
          uint64_t result = "TVLCalStep";
          break;
        case 280:
          uint64_t result = "TVLCalFailed";
          break;
        case 281:
          uint64_t result = "TVLCalTryAgain";
          break;
        case 282:
          uint64_t result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          uint64_t result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            uint64_t result = "iCloudStart";
          }
          else
          {
            if (a1 != 224) {
              return "?";
            }
            uint64_t result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }
        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              uint64_t result = "Error";
              break;
            case 31:
              uint64_t result = "SessionStarted";
              break;
            case 32:
              uint64_t result = "SessionEnded";
              break;
            case 33:
              uint64_t result = "SessionSecured";
              break;
            case 35:
              uint64_t result = "ConnectStart";
              break;
            case 40:
              uint64_t result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        uint64_t result = "BasicConfigStart";
        break;
      case 'Z':
        uint64_t result = "BasicConfigFinish";
        break;
      case '\\':
        uint64_t result = "StepStart";
        break;
      case '^':
        uint64_t result = "StepFinish";
        break;
      case '_':
        uint64_t result = "PreFinish";
        break;
        uint64_t result = "SetupFinished";
        break;
      case 'a':
        uint64_t result = "SetupResumed";
        break;
      case 'b':
        uint64_t result = "SetupSuspend";
        break;
      case 'c':
        uint64_t result = "SetupPeerSWUpdate";
        break;
      case 'd':
        uint64_t result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_100082FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100083040()
{
  swift_release();
  if (*(void *)(v0 + 56)) {
    sub_10000E470(v0 + 32);
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100083088()
{
  return sub_10007EDC4(*(void *)(v0 + 16), (v0 + 24));
}

uint64_t sub_100083094()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_1000830A4(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_100048DEC(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1000830AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000830BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000830CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000830DC()
{
  if (*(void *)(v0 + 48)) {
    sub_10000E470(v0 + 24);
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10008311C()
{
  return sub_10007D860((char *)(v0 + 16));
}

uint64_t sub_100083124()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100083134()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100083144()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008317C()
{
  return sub_1000753E0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100083184()
{
  return sub_10007540C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10008318C@<X0>(_DWORD *a1@<X8>)
{
  return sub_1000753B0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100083194(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100075350(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_10008319C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000831D4()
{
  return sub_10007D80C(*(void **)(v0 + 16));
}

uint64_t sub_1000831DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000831EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000831FC()
{
  return sub_100048678(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100083204(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1000486A0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_10008320C()
{
}

uint64_t sub_100083214(uint64_t a1, uint64_t a2)
{
  return sub_10007A1C4(a1, a2);
}

void sub_100083254(double a1, double a2, float a3)
{
  id v7 = [v3 widthAnchor];
  id v8 = [v3 heightAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8 multiplier:a1 / a2];

  *(float *)&double v10 = a3;
  [v9 setPriority:v10];
  uint64_t v11 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000B0690;
  *(void *)(v12 + 32) = v9;
  specialized Array._endMutation()();
  sub_100017190();
  id v13 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 activateConstraints:isa];
}

void sub_1000833B4(void *a1, double a2, double a3)
{
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 addSubview:a1];
  id v7 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000B08A0;
  id v9 = [a1 centerXAnchor];
  id v10 = [v3 centerXAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10 constant:a2];

  *(void *)(v8 + 32) = v11;
  id v12 = [a1 centerYAnchor];
  id v13 = [v3 centerYAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13 constant:a3];

  *(void *)(v8 + 40) = v14;
  specialized Array._endMutation()();
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:isa];
}

id sub_10008357C(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v7 = v6;
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 addSubview:a1];
  id v14 = [a1 topAnchor];
  id v15 = [a2 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:a3];

  id v17 = [a2 rightAnchor];
  id v18 = [a1 rightAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:a6];

  id v20 = [a2 bottomAnchor];
  id v21 = [a1 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:a5];

  id v23 = [a1 leftAnchor];
  id v24 = [a2 leftAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:a4];

  uint64_t v26 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000B0BC0;
  *(void *)(v27 + 32) = v16;
  *(void *)(v27 + 40) = v19;
  *(void *)(v27 + 48) = v22;
  *(void *)(v27 + 56) = v25;
  specialized Array._endMutation()();
  sub_100017190();
  id v28 = v16;
  id v29 = v19;
  id v30 = v22;
  id v31 = v25;
  id v32 = v28;
  id v33 = v29;
  id v34 = v30;
  id v35 = v31;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 activateConstraints:isa];

  return v32;
}

uint64_t sub_100083920(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EDF98);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100083B00(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1000774D4((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  id v12 = [self currentTraitCollection];
  id v13 = [v12 userInterfaceStyle];

  if (v13 == (id)2) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = 2;
  }
  URL._bridgeToObjectiveC()(v14);
  id v17 = v16;
  [v2 updateViewForAssetType:v15 adjustmentsURL:v16];

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100083B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EDF98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100083B68()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000EFD68);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000EFD68);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100083C30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  id v11 = (char *)v44 - v10;
  id v12 = (objc_class *)type metadata accessor for HomePodSetupPersonalRequestsViewController();
  v48.receiver = v1;
  v48.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EFD68);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupPersonalRequestsViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000EFD68);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)id v21 = 136315138;
      v44[1] = v21 + 4;
      int64_t v45 = v11;
      uint64_t v22 = *v9;
      unint64_t v23 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_100048718(v22, v23, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v11 = v45;
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupPersonalRequestsViewController: viewDidLoad with title %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);
    }

    sub_100084314();
    sub_1000857F8((uint64_t)v11);
    if ((v11[*(int *)(v5 + 72)] & 2) == 0 && *(void *)&v11[*(int *)(v5 + 76) + 8])
    {
      NSString v24 = String._bridgeToObjectiveC()();
      NSString v25 = String._bridgeToObjectiveC()();
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = [v1 dismissalConfirmationActionWithTitle:v24 message:v25 confirmButtonTitle:v26 cancelButtonTitle:v27];

      [v1 setDismissButtonAction:v28];
    }
    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v30 = swift_bridgeObjectRetain();
    sub_1000932E0(v30, (uint64_t)sub_10008B7B4, v29);
    swift_bridgeObjectRelease();
    swift_release();
    if (SFDeviceClassCodeGet() == 1)
    {
      NSString v31 = String._bridgeToObjectiveC()();
      id v32 = sub_100007334(v31);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setBottomTrayTitle:v33];
    }
    id v34 = [v1 contentView];
    id v35 = [v34 mainContentGuide];

    id v36 = [v1 tableView];
    id v37 = [v36 bottomAnchor];

    id v38 = [v35 bottomAnchor];
    id v39 = [v37 constraintEqualToAnchor:v38 constant:-10.0];

    uint64_t v40 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1000B0690;
    *(void *)(v41 + 32) = v39;
    uint64_t v47 = v41;
    specialized Array._endMutation()();
    sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
    id v42 = v39;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v40 activateConstraints:isa];

    sub_10001712C((uint64_t)v11);
  }
}

void sub_100084314()
{
  uint64_t v1 = sub_100085DFC(0xD000000000000022, 0x80000001000B9D30);
  if (v2) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    unint64_t v4 = v2;
  }
  else {
    unint64_t v4 = 0xE000000000000000;
  }
  uint64_t v5 = sub_100085DFC(0xD000000000000022, 0x80000001000B9D60);
  if (v6) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = 0xE000000000000000;
  }
  unint64_t v55 = v8;
  uint64_t v57 = v7;
  id v54 = v0;
  uint64_t v9 = sub_100085DFC(0xD000000000000023, 0x80000001000B9D90);
  if (v10) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v10) {
    unint64_t v12 = v10;
  }
  else {
    unint64_t v12 = 0xE000000000000000;
  }
  unint64_t v59 = v12;
  uint64_t v60 = v11;
  uint64_t v13 = sub_100085DFC(0xD00000000000001FLL, 0x80000001000B9DC0);
  if (v14) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    unint64_t v16 = v14;
  }
  else {
    unint64_t v16 = 0xE000000000000000;
  }
  unint64_t v63 = v16;
  uint64_t v64 = v15;
  id v17 = objc_allocWithZone((Class)PRXFeatureIcon);
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 initWithSystemImageNamed:v18];

  os_log_type_t v20 = self;
  id v21 = [v20 systemRedColor];
  [v19 setPlatterColor:v21];

  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000B0850;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v23 = sub_10003D0C8();
  *(void *)(inited + 64) = v23;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v4;
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_10003C0DC(inited, &v66);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  id v24 = v19;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v26 = String._bridgeToObjectiveC()();
  id v65 = self;
  unint64_t v62 = v24;
  id v61 = [v65 featureWithTitle:v25 detailText:v26 icon:v24];

  id v27 = objc_allocWithZone((Class)PRXFeatureIcon);
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v27 initWithSystemImageNamed:v28];

  id v30 = [v20 systemBlueColor];
  [v29 setPlatterColor:v30];

  uint64_t v31 = swift_initStackObject();
  *(_OWORD *)(v31 + 16) = xmmword_1000B0850;
  *(void *)(v31 + 56) = &type metadata for String;
  *(void *)(v31 + 64) = v23;
  *(void *)(v31 + 32) = v57;
  *(void *)(v31 + 40) = v55;
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_10003C0DC(v31, &v66);
  swift_setDeallocating();
  swift_arrayDestroy();
  id v32 = v29;
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v34 = String._bridgeToObjectiveC()();
  unsigned __int8 v58 = v32;
  id v56 = [v65 featureWithTitle:v33 detailText:v34 icon:v32];

  id v35 = objc_allocWithZone((Class)PRXFeatureIcon);
  NSString v36 = String._bridgeToObjectiveC()();
  id v37 = [v35 initWithSystemImageNamed:v36];

  id v38 = [v20 systemYellowColor];
  [v37 setPlatterColor:v38];

  uint64_t v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = xmmword_1000B0850;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = v23;
  *(void *)(v39 + 32) = v60;
  *(void *)(v39 + 40) = v59;
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_10003C0DC(v39, &v66);
  swift_setDeallocating();
  swift_arrayDestroy();
  id v40 = v37;
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v65 featureWithTitle:v41 detailText:v42 icon:v40];

  id v44 = objc_allocWithZone((Class)PRXFeatureIcon);
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v44 initWithSystemImageNamed:v45];

  id v47 = [v20 systemGreenColor];
  [v46 setPlatterColor:v47];

  uint64_t v48 = swift_initStackObject();
  *(_OWORD *)(v48 + 16) = xmmword_1000B0850;
  *(void *)(v48 + 56) = &type metadata for String;
  *(void *)(v48 + 64) = v23;
  *(void *)(v48 + 32) = v64;
  *(void *)(v48 + 40) = v63;
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_10003C0DC(v48, &v66);
  swift_setDeallocating();
  swift_arrayDestroy();
  id v49 = v46;
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v65 featureWithTitle:v50 detailText:v51 icon:v49];

  id v53 = [v54 tableView];
  [v53 setSeparatorStyle:0];
}

void sub_100084B28(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EFD68);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    sub_100048718(v6, v7, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupPersonalRequestsViewController: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_100084CE0(v1);
  }
}

uint64_t sub_100084CE0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EFDC8);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for ClientOrigin();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for RequestOrigin();
  uint64_t result = __chkstk_darwin(v11 - 8);
  if (a1 == 2)
  {
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000133A0(v25, (uint64_t)qword_1000EFD68);
    NSString v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      NSString v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "PersonalRequests Disabled", v28, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (a1 != 1) {
      return result;
    }
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000133A0(v13, (uint64_t)qword_1000EFD68);
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "PersonalRequests Agree button", v16, 2u);
      swift_slowDealloc();
    }

    if (SFDeviceClassCodeGet() == 1)
    {
      id v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        id v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "PersonalRequests get me device", v19, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, enum case for ClientOrigin.other(_:), v7);
      RequestOrigin.init(_:)();
      type metadata accessor for Session();
      swift_allocObject();
      uint64_t v20 = Session.init(_:)();
      uint64_t v21 = type metadata accessor for TaskPriority();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
      type metadata accessor for MainActor();
      swift_retain();
      id v22 = v2;
      uint64_t v23 = static MainActor.shared.getter();
      id v24 = (void *)swift_allocObject();
      void v24[2] = v23;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v20;
      v24[5] = v22;
      sub_100087E78((uint64_t)v6, (uint64_t)&unk_1000EFDD8, (uint64_t)v24);
      swift_release();
      return swift_release();
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v31 = 0;
    memset(v30, 0, sizeof(v30));
    memset(&v29[8], 0, 40);
    v29[0] = 2;
    sub_100013664((uint64_t)v30, (uint64_t)&v29[8], &qword_1000ED970);
    v32[0] = *(_OWORD *)v29;
    v32[1] = *(_OWORD *)&v29[16];
    _OWORD v32[2] = *(_OWORD *)&v29[32];
    sub_10007A7CC(v32);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v32);
  }
  return result;
}

uint64_t sub_1000851F0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  id v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (void (**)(char *, uint64_t))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v28 - v18;
  uint64_t v20 = (objc_class *)type metadata accessor for HomePodSetupPersonalRequestsViewController();
  v35.receiver = v2;
  v35.super_class = v20;
  [super viewDidAppear:a1 & 1];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10007E75C();
    uint64_t result = swift_unknownObjectRelease();
  }
  if (qword_1000ED740 != -1) {
    uint64_t result = swift_once();
  }
  if (*(void *)(*(void *)(qword_1000F3968
                             + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults)
                 + 16)
    || *(unsigned char *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) == 1)
  {
    static DispatchTime.now()();
    void *v12 = 1;
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v9);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    NSString v28 = *(void (**)(char *, uint64_t))(v14 + 8);
    v28(v17, v13);
    sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
    id v22 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v2;
    aBlock[4] = sub_10008B75C;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100089B18;
    aBlock[3] = &unk_1000DCEE0;
    id v24 = _Block_copy(aBlock);
    id v25 = v2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000EE48(&qword_1000EDEA0);
    sub_100015184();
    NSString v26 = v29;
    uint64_t v27 = v33;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
    return ((uint64_t (*)(char *, uint64_t))v28)(v19, v13);
  }
  return result;
}

uint64_t sub_100085708()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    memset(&v1[8], 0, 40);
    v1[0] = 1;
    sub_100013664((uint64_t)v2, (uint64_t)&v1[8], &qword_1000ED970);
    v4[0] = *(_OWORD *)v1;
    v4[1] = *(_OWORD *)&v1[16];
    v4[2] = *(_OWORD *)&v1[32];
    sub_10007A7CC(v4);
    swift_unknownObjectRelease();
    return sub_1000136C8((uint64_t)v4);
  }
  return result;
}

void sub_1000857F8(uint64_t a1)
{
  if ((v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_isConfigured] & 1) == 0)
  {
    v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_isConfigured] = 1;
    NSString v3 = String._bridgeToObjectiveC()();
    [v1 setTitle:v3];

    sub_100085998();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setSubtitle:v4];

    uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
    [v1 setDismissalType:*(void *)(a1 + *(int *)(v5 + 72))];
    uint64_t v6 = (uint64_t *)(a1 + *(int *)(v5 + 28));
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      id v10 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:1];
      NSString v11 = String._bridgeToObjectiveC()();
      [v10 setText:v11];

      [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v12 = [v1 view];
      if (v12)
      {
        uint64_t v13 = v12;
        [v12 addSubview:v10];

        uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_bodyLabel];
        *(void *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_bodyLabel] = v10;
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_100085998()
{
  uint64_t v1 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v1 - 8);
  NSString v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (SFDeviceClassCodeGet() == 1)
  {
    uint64_t v4 = v0 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel;
    swift_beginAccess();
    sub_100017000(v4, (uint64_t)v3);
    uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
    (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
    sub_10000F674((uint64_t)v3, &qword_1000EF130);
  }
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_100007334(v6);

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  return v8;
}

id sub_100085C08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupPersonalRequestsViewController();
  return [super dealloc];
}

uint64_t sub_100085CA4()
{
  return type metadata accessor for HomePodSetupPersonalRequestsViewController();
}

uint64_t type metadata accessor for HomePodSetupPersonalRequestsViewController()
{
  uint64_t result = qword_1000EFDB8;
  if (!qword_1000EFDB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100085CF8()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100085DA8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void sub_100085DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100085DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000EE48(&qword_1000EF130);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel;
  swift_beginAccess();
  sub_100017000(v11, (uint64_t)v10);
  uint64_t v12 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  uint64_t v14 = 0;
  if (!v13(v10, 1, v12))
  {
    uint64_t v14 = *(void *)&v10[*(int *)(v12 + 176) + 8];
    swift_bridgeObjectRetain();
  }
  sub_10000F674((uint64_t)v10, &qword_1000EF130);
  id v15 = [self sharedInstance];
  sub_100017000(v11, (uint64_t)v8);
  if (v13(v8, 1, v12))
  {
    sub_10000F674((uint64_t)v8, &qword_1000EF130);
  }
  else
  {
    int v16 = v8[*(int *)(v12 + 172)];
    sub_10000F674((uint64_t)v8, &qword_1000EF130);
    if (v16 == 1)
    {
      uint64_t v17 = 0x49535F5453554A5FLL;
      unint64_t v18 = 0xEA00000000004952;
      goto LABEL_8;
    }
  }
  uint64_t v17 = 0x5249535F5945485FLL;
  unint64_t v18 = 0xE900000000000049;
LABEL_8:
  uint64_t v36 = v17;
  unint64_t v37 = v18;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  swift_bridgeObjectRetain();
  uint64_t v34 = String.init<A>(_:)();
  uint64_t v35 = v19;
  String.append<A>(contentsOf:)();
  if (!v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  id v20 = v15;
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRetain();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  id v23 = [v20 localizedUIUtteranceForKey:v21 languageCode:v22];

  if (!v23) {
    goto LABEL_18;
  }
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  uint64_t v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (!v27)
  {
LABEL_18:
    id v28 = v20;
    NSString v29 = String._bridgeToObjectiveC()();
    if (v14)
    {
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v30 = 0;
    }
    id v31 = [v28 localizedUIUtteranceForKey:v29 languageCode:v30];

    if (v31)
    {
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

      return v24;
    }
    swift_bridgeObjectRelease();

    return 0;
  }

  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1000861D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  uint64_t v6 = type metadata accessor for PreferenceError();
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Device();
  v5[26] = v7;
  v5[27] = *(void *)(v7 - 8);
  v5[28] = swift_task_alloc();
  uint64_t v8 = swift_task_alloc();
  v5[29] = v8;
  v5[30] = type metadata accessor for MainActor();
  v5[31] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v5[32] = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_10008636C;
  return Session.activeLocationSharingDevice(cached:)(v8, 1);
}

uint64_t sub_10008636C()
{
  uint64_t v2 = (void *)*v1;
  v2[33] = v0;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[34] = v4;
  v2[35] = v3;
  if (v0) {
    uint64_t v5 = sub_100086AB8;
  }
  else {
    uint64_t v5 = sub_1000864CC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000864CC()
{
  swift_release();
  if (Device.isThisDevice.getter())
  {
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000133A0(v1, (uint64_t)qword_1000EFD68);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "PersonalRequests me device is this device\n", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[29];
    uint64_t v6 = v0[26];
    uint64_t v7 = v0[27];

    sub_100086F30();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000133A0(v8, (uint64_t)qword_1000EFD68);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "PersonalRequests ask user to switch me device", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = v0[29];
    uint64_t v13 = v0[26];
    uint64_t v14 = v0[27];
    uint64_t v15 = v0[21];

    sub_100087688(v12, v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100086720()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  if (v0) {
    uint64_t v5 = sub_100086E9C;
  }
  else {
    uint64_t v5 = sub_10008685C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008685C()
{
  swift_release();
  if (Device.isThisDevice.getter())
  {
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000133A0(v1, (uint64_t)qword_1000EFD68);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "PersonalRequests me device is this device\n", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[27];
    uint64_t v5 = v0[28];
    uint64_t v7 = v0[26];

    sub_100086F30();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000133A0(v8, (uint64_t)qword_1000EFD68);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "PersonalRequests ask user to switch me device", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = v0[27];
    uint64_t v12 = v0[28];
    uint64_t v14 = v0[26];
    uint64_t v15 = v0[21];

    sub_100087688(v12, v15);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100086AB8()
{
  *(void *)(v0 + 152) = *(void *)(v0 + 264);
  swift_errorRetain();
  sub_10000EE48((uint64_t *)&unk_1000EF2F0);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 192) + 88))(*(void *)(v0 + 200), *(void *)(v0 + 184)) == enum case for PreferenceError.missingMeDevice(_:))
    {
      swift_errorRelease();
      uint64_t v1 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v1;
      void *v1 = v0;
      v1[1] = sub_100086720;
      uint64_t v2 = *(void *)(v0 + 224);
      return Session.activeLocationSharingDevice(cached:)(v2, 0);
    }
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 184);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_errorRelease();
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EFD68);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 160) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "### PersonalRequests get me device failed: %@\n", v9, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    *(void *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
    *(void *)(v0 + 104) = 0;
    *(unsigned char *)(v0 + 64) = 2;
    sub_100013664(v0 + 112, v0 + 72, &qword_1000ED970);
    long long v12 = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 32) = v12;
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 96);
    sub_10007A7CC((v0 + 16));
    swift_unknownObjectRelease();
    swift_errorRelease();
    sub_1000136C8(v0 + 16);
  }
  else
  {
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100086E9C()
{
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100086F30()
{
  uint64_t v1 = v0;
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EFD68);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "PersonalRequests siriCheck\n", v5, 2u);
    swift_slowDealloc();
  }

  id v43 = [self sharedPreferences];
  if ([v43 assistantIsEnabled]) {
    goto LABEL_8;
  }
  id v6 = [self sharedPreferences];
  if (!v6)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = v6;
  unsigned int v8 = [v6 voiceTriggerEnabled];

  if (v8)
  {
LABEL_8:
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "PersonalRequests Siri enabled, enabling PR\n", v11, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v46 = 0;
      memset(v45, 0, sizeof(v45));
      memset(&v44[8], 0, 40);
      v44[0] = 1;
      sub_100013664((uint64_t)v45, (uint64_t)&v44[8], &qword_1000ED970);
      long long aBlock = *(_OWORD *)v44;
      long long v48 = *(_OWORD *)&v44[16];
      long long v49 = *(_OWORD *)&v44[32];
      sub_10007A7CC(&aBlock);

      swift_unknownObjectRelease();
      sub_1000136C8((uint64_t)&aBlock);
    }
    else
    {
    }
    return;
  }
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = (id)CUAddSuffixForCurrentDeviceClass();

  if (!v13)
  {
LABEL_20:
    __break(1u);
    return;
  }
  id v14 = sub_100007334(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = sub_100007614();

  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v17 = sub_100007334(v16);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [self alertControllerWithTitle:v18 message:v19 preferredStyle:1];

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100007334(v21);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = sub_100007334(v23);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v1;
  *(void *)(v25 + 24) = v20;
  id v26 = v1;
  id v27 = v20;
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v49 = sub_10008B9F8;
  *((void *)&v49 + 1) = v25;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v48 = sub_100041068;
  *((void *)&v48 + 1) = &unk_1000DCF80;
  NSString v29 = _Block_copy(&aBlock);
  swift_release();
  NSString v30 = self;
  id v31 = [v30 actionWithTitle:v28 style:1 handler:v29];
  _Block_release(v29);

  [v27 addAction:v31];
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = sub_100007334(v32);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = sub_100007334(v34);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  uint64_t v36 = (void *)swift_allocObject();
  _OWORD v36[2] = v43;
  v36[3] = v26;
  v36[4] = v27;
  id v37 = v26;
  id v38 = v27;
  id v39 = v43;
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v49 = sub_10008BA64;
  *((void *)&v49 + 1) = v36;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v48 = sub_100041068;
  *((void *)&v48 + 1) = &unk_1000DCFD0;
  NSString v41 = _Block_copy(&aBlock);
  swift_release();
  id v42 = [v30 actionWithTitle:v40 style:0 handler:v41];
  _Block_release(v41);

  [v38 addAction:v42];
  [v38 setPreferredAction:v42];
  [v37 presentViewController:v38 animated:1 completion:0];
}

void sub_100087688(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v2 = sub_10000EE48(&qword_1000EFDC8);
  __chkstk_darwin(v2 - 8);
  NSString v50 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = sub_100007334(v4);

  id v52 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  Device.deviceName.getter();
  swift_bridgeObjectRelease();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_100007614();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10000EE48(&qword_1000EE398);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000AF6D0;
  id v9 = [self currentDevice];
  id v10 = [v9 name];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v14 = sub_10003D0C8();
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  uint64_t v15 = Device.deviceName.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 72) = v15;
  *(void *)(inited + 80) = v16;
  long long aBlock = 0;
  unint64_t v55 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_10003C0DC(inited, (uint64_t *)&aBlock);
  swift_setDeallocating();
  sub_10000EE48(&qword_1000EE400);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [self alertControllerWithTitle:v17 message:v18 preferredStyle:1];

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100007334(v20);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = swift_allocObject();
  id v23 = v53;
  *(void *)(v22 + 16) = v53;
  *(void *)(v22 + 24) = v19;
  id v24 = v23;
  id v25 = v19;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v58 = sub_10008BA70;
  unint64_t v59 = (void *)v22;
  long long aBlock = _NSConcreteStackBlock;
  unint64_t v55 = 1107296256;
  id v56 = sub_100041068;
  uint64_t v57 = &unk_1000DD020;
  id v27 = _Block_copy(&aBlock);
  swift_release();
  NSString v28 = self;
  id v29 = [v28 actionWithTitle:v26 style:1 handler:v27];
  _Block_release(v27);

  id v53 = v29;
  [v25 addAction:v29];
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = (id)CUAddSuffixForCurrentDeviceClass();

  if (v31)
  {
    id v32 = sub_100007334(v31);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = (void *)swift_allocObject();
    uint64_t v34 = v51;
    void v33[2] = v51;
    v33[3] = v25;
    v33[4] = v24;
    id v52 = v24;
    id v35 = v25;
    swift_retain();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v58 = sub_10008BADC;
    unint64_t v59 = v33;
    long long aBlock = _NSConcreteStackBlock;
    unint64_t v55 = 1107296256;
    id v56 = sub_100041068;
    uint64_t v57 = &unk_1000DD070;
    id v37 = _Block_copy(&aBlock);
    swift_release();
    id v38 = [v28 actionWithTitle:v36 style:0 handler:v37];
    _Block_release(v37);

    [v35 addAction:v38];
    [v35 setPreferredAction:v38];
    if (qword_1000ED740 != -1) {
      swift_once();
    }
    if (*(void *)(*(void *)(qword_1000F3968
                               + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults)
                   + 16)
      || *(unsigned char *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) == 1)
    {
      if (qword_1000ED870 != -1) {
        swift_once();
      }
      uint64_t v39 = type metadata accessor for Logger();
      sub_1000133A0(v39, (uint64_t)qword_1000EFD68);
      NSString v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        id v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Me Switch alert: Use button\n", v42, 2u);
        swift_slowDealloc();
      }

      uint64_t v43 = type metadata accessor for TaskPriority();
      uint64_t v44 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v50, 1, 1, v43);
      type metadata accessor for MainActor();
      id v45 = v52;
      id v46 = v35;
      swift_retain();
      uint64_t v47 = static MainActor.shared.getter();
      long long v48 = (void *)swift_allocObject();
      v48[2] = v47;
      v48[3] = &protocol witness table for MainActor;
      _OWORD v48[4] = v34;
      v48[5] = v46;
      v48[6] = v45;
      sub_100089B5C(v44, (uint64_t)&unk_1000EFDE8, (uint64_t)v48);

      swift_release();
    }
    else
    {
      [v52 presentViewController:v35 animated:1 completion:0];
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100087E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10000F674(a1, &qword_1000EFDC8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

id sub_100088000(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EFD68);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Siri Enabled, enabling PR\n", v9, 2u);
    swift_slowDealloc();
  }

  [a2 setAssistantIsEnabled:1];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    memset(&v11[8], 0, 40);
    v11[0] = 1;
    sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
    v14[0] = *(_OWORD *)v11;
    v14[1] = *(_OWORD *)&v11[16];
    _OWORD v14[2] = *(_OWORD *)&v11[32];
    sub_10007A7CC(v14);
    swift_unknownObjectRelease();
    sub_1000136C8((uint64_t)v14);
  }
  return [a4 dismissViewControllerAnimated:1 completion:0 *(void *)v11];
}

id sub_100088198(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EFD68);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a4, v9, 2u);
    swift_slowDealloc();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    memset(&v11[8], 0, 40);
    v11[0] = 2;
    sub_100013664((uint64_t)v12, (uint64_t)&v11[8], &qword_1000ED970);
    v14[0] = *(_OWORD *)v11;
    v14[1] = *(_OWORD *)&v11[16];
    _OWORD v14[2] = *(_OWORD *)&v11[32];
    sub_10007A7CC(v14);
    swift_unknownObjectRelease();
    sub_1000136C8((uint64_t)v14);
  }
  return [a3 dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_100088318(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_10000EE48(&qword_1000EFDC8);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000133A0(v10, (uint64_t)qword_1000EFD68);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Me Switch alert: Use button\n", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  type metadata accessor for MainActor();
  swift_retain();
  id v15 = a3;
  id v16 = a4;
  uint64_t v17 = static MainActor.shared.getter();
  NSString v18 = (void *)swift_allocObject();
  v18[2] = v17;
  _OWORD v18[3] = &protocol witness table for MainActor;
  _DWORD v18[4] = a2;
  v18[5] = v15;
  v18[6] = v16;
  sub_100089B5C((uint64_t)v9, (uint64_t)&unk_1000EFE18, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_100088510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[17] = v8;
  v6[18] = *(void *)(v8 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DeviceWithCompanion();
  v6[20] = v9;
  v6[21] = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  v6[22] = v10;
  sub_10000EE48(&qword_1000EFE00);
  v6[23] = swift_task_alloc();
  v6[24] = type metadata accessor for MainActor();
  v6[25] = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_task_alloc();
  v6[26] = v11;
  void *v11 = v6;
  v11[1] = sub_100088720;
  return Session.thisDeviceWithCompanion()(v10);
}

uint64_t sub_100088720()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0)
  {
    uint64_t v5 = sub_100089374;
  }
  else
  {
    *(void *)(v2 + 224) = v3;
    *(void *)(v2 + 232) = v4;
    uint64_t v5 = sub_100088884;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100088884()
{
  os_log_type_t v41 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v3 = v0[21];
  DeviceWithCompanion.thisDevice.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  uint64_t v5 = type metadata accessor for Device();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    uint64_t v7 = v0[23];
    swift_release();
    sub_10000F674(v7, &qword_1000EFE00);
    uint64_t v8 = type metadata accessor for PreferenceError();
    sub_10008BCA8(&qword_1000EFE08, (void (*)(uint64_t))&type metadata accessor for PreferenceError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for PreferenceError.missingMeDevice(_:), v8);
    swift_willThrow();
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000EFD68);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      v0[9] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "### Me Switch failed: %@", v13, 0xCu);
      sub_10000EE48(&qword_1000EDEB0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v25 = v0[18];
    uint64_t v24 = v0[19];
    uint64_t v26 = v0[16];
    uint64_t v39 = v0[17];
    uint64_t v27 = v0[14];
    uint64_t v28 = v0[15];
    NSString v30 = (void *)v0[12];
    id v29 = (void *)v0[13];
    sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
    id v38 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v29;
    v0[6] = sub_10008BCA4;
    v0[7] = v31;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100089B18;
    v0[5] = &unk_1000DD188;
    id v32 = _Block_copy(v0 + 2);
    id v33 = v30;
    id v34 = v29;
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000EE48(&qword_1000EDEA0);
    sub_100015184();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v32);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v39);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }
  else
  {
    uint64_t v16 = v0[23];
    uint64_t v17 = Device.idsDeviceId.getter();
    unint64_t v19 = v18;
    v0[30] = v18;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    v0[31] = sub_1000133A0(v20, (uint64_t)qword_1000EFD68);
    swift_bridgeObjectRetain_n();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)id v23 = 136315138;
      swift_bridgeObjectRetain();
      v0[10] = sub_100048718(v17, v19, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Me Switch: Setting new device to this device: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v37 = (void *)swift_task_alloc();
    v0[32] = v37;
    *id v37 = v0;
    v37[1] = sub_100088FA0;
    return Session.setActiveLocationSharingDevice(_:)(v17, v19);
  }
}

uint64_t sub_100088FA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_100089740;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_1000890BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000890BC()
{
  swift_release();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Me Switch succeeded", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[15];
  uint64_t v10 = (void *)v0[12];
  uint64_t v9 = (void *)v0[13];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v0[6] = sub_10008BCA4;
  v0[7] = v11;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100089B18;
  v0[5] = &unk_1000DD188;
  os_log_type_t v12 = _Block_copy(v0 + 2);
  id v13 = v10;
  id v14 = v9;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100089374()
{
  swift_release();
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000133A0(v1, (uint64_t)qword_1000EFD68);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "### Me Switch failed: %@", v4, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v9 = v0[16];
  uint64_t v21 = v0[17];
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[15];
  id v13 = (void *)v0[12];
  os_log_type_t v12 = (void *)v0[13];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  v0[6] = sub_10008BCA4;
  v0[7] = v14;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100089B18;
  v0[5] = &unk_1000DD188;
  uint64_t v15 = _Block_copy(v0 + 2);
  id v16 = v13;
  id v17 = v12;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v21);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100089740()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000133A0(v1, (uint64_t)qword_1000EFD68);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "### Me Switch failed: %@", v4, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v9 = v0[16];
  uint64_t v21 = v0[17];
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[15];
  id v13 = (void *)v0[12];
  os_log_type_t v12 = (void *)v0[13];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  v0[6] = sub_10008BCA4;
  v0[7] = v14;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100089B18;
  v0[5] = &unk_1000DD188;
  uint64_t v15 = _Block_copy(v0 + 2);
  id v16 = v13;
  id v17 = v12;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v21);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100089B18(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100089B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000F674(a1, &qword_1000EFDC8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100089D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[17] = v8;
  v6[18] = *(void *)(v8 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DeviceWithCompanion();
  v6[20] = v9;
  v6[21] = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  v6[22] = v10;
  sub_10000EE48(&qword_1000EFE00);
  v6[23] = swift_task_alloc();
  v6[24] = type metadata accessor for MainActor();
  v6[25] = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_task_alloc();
  v6[26] = v11;
  void *v11 = v6;
  v11[1] = sub_100089F18;
  return Session.thisDeviceWithCompanion()(v10);
}

uint64_t sub_100089F18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0)
  {
    uint64_t v5 = sub_10008AB6C;
  }
  else
  {
    *(void *)(v2 + 224) = v3;
    *(void *)(v2 + 232) = v4;
    uint64_t v5 = sub_10008A07C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10008A07C()
{
  os_log_type_t v41 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v3 = v0[21];
  DeviceWithCompanion.thisDevice.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  uint64_t v5 = type metadata accessor for Device();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    uint64_t v7 = v0[23];
    swift_release();
    sub_10000F674(v7, &qword_1000EFE00);
    uint64_t v8 = type metadata accessor for PreferenceError();
    sub_10008BCA8(&qword_1000EFE08, (void (*)(uint64_t))&type metadata accessor for PreferenceError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for PreferenceError.missingMeDevice(_:), v8);
    swift_willThrow();
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000EFD68);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      v0[9] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "### Me Switch failed: %@", v13, 0xCu);
      sub_10000EE48(&qword_1000EDEB0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v25 = v0[18];
    uint64_t v24 = v0[19];
    uint64_t v26 = v0[16];
    uint64_t v39 = v0[17];
    uint64_t v27 = v0[14];
    uint64_t v28 = v0[15];
    NSString v30 = (void *)v0[12];
    id v29 = (void *)v0[13];
    sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
    id v38 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v29;
    v0[6] = sub_10008BCA4;
    v0[7] = v31;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100089B18;
    v0[5] = &unk_1000DD110;
    id v32 = _Block_copy(v0 + 2);
    id v33 = v30;
    id v34 = v29;
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000EE48(&qword_1000EDEA0);
    sub_100015184();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v32);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v39);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }
  else
  {
    uint64_t v16 = v0[23];
    uint64_t v17 = Device.idsDeviceId.getter();
    unint64_t v19 = v18;
    v0[30] = v18;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    if (qword_1000ED870 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    v0[31] = sub_1000133A0(v20, (uint64_t)qword_1000EFD68);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)id v23 = 136315138;
      swift_bridgeObjectRetain();
      v0[10] = sub_100048718(v17, v19, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Me Switch: Setting new device to this device: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v37 = (void *)swift_task_alloc();
    v0[32] = v37;
    *id v37 = v0;
    v37[1] = sub_10008A798;
    return Session.setActiveLocationSharingDevice(_:)(v17, v19);
  }
}

uint64_t sub_10008A798()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_10008AF38;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_10008A8B4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10008A8B4()
{
  swift_release();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Me Switch succeeded", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[15];
  uint64_t v10 = (void *)v0[12];
  uint64_t v9 = (void *)v0[13];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  v0[6] = sub_10008BCA4;
  v0[7] = v11;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100089B18;
  v0[5] = &unk_1000DD110;
  os_log_type_t v12 = _Block_copy(v0 + 2);
  id v13 = v10;
  id v14 = v9;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10008AB6C()
{
  swift_release();
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000133A0(v1, (uint64_t)qword_1000EFD68);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "### Me Switch failed: %@", v4, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v9 = v0[16];
  uint64_t v21 = v0[17];
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[15];
  id v13 = (void *)v0[12];
  os_log_type_t v12 = (void *)v0[13];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  v0[6] = sub_10008BCA4;
  v0[7] = v14;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100089B18;
  v0[5] = &unk_1000DD110;
  uint64_t v15 = _Block_copy(v0 + 2);
  id v16 = v13;
  id v17 = v12;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v21);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_10008AF38()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000133A0(v1, (uint64_t)qword_1000EFD68);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "### Me Switch failed: %@", v4, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v9 = v0[16];
  uint64_t v21 = v0[17];
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[15];
  id v13 = (void *)v0[12];
  os_log_type_t v12 = (void *)v0[13];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  v0[6] = sub_10008BCA4;
  v0[7] = v14;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100089B18;
  v0[5] = &unk_1000DD110;
  uint64_t v15 = _Block_copy(v0 + 2);
  id v16 = v13;
  id v17 = v12;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10008BCA8((unint64_t *)&qword_1000EFF40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v21);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_10008B310(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10008B3EC;
  return v6(a1);
}

uint64_t sub_10008B3EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_10008B4E4(uint64_t a1)
{
  uint64_t v3 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED870 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000EFD68);
  id v7 = v1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109120;
    _OWORD v13[2] = [v7 isViewLoaded];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupPersonalRequestsViewController: presenter:didUpdate viewModel, isViewloaded = %{BOOL}d", v10, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1000133D8(a1, (uint64_t)v5);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
  uint64_t v12 = (uint64_t)v7 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v5, v12, &qword_1000EF130);
  swift_endAccess();
  if ([v7 isViewLoaded]) {
    sub_1000857F8(a1);
  }
}

uint64_t sub_10008B724()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008B75C()
{
  return sub_100085708();
}

uint64_t sub_10008B764(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008B774()
{
  return swift_release();
}

uint64_t sub_10008B77C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10008B7B4(char *a1)
{
}

uint64_t sub_10008B7BC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10008B804(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10008B8C4;
  return sub_1000861D8(a1, v4, v5, v7, v6);
}

uint64_t sub_10008B8C4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10008B9B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10008B9F8(uint64_t a1)
{
  return sub_100088198(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), "Siri Disabled, disabling PR\n");
}

uint64_t sub_10008BA1C()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_10008BA64(uint64_t a1)
{
  return sub_100088000(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

id sub_10008BA70(uint64_t a1)
{
  return sub_100088198(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), "Me Switch alert: Not Now button");
}

uint64_t sub_10008BA94()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008BADC(uint64_t a1)
{
  return sub_100088318(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10008BAEC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *os_log_type_t v9 = v2;
  v9[1] = sub_10008BE44;
  return sub_100089D08(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10008BBB4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008BBEC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10008BE44;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000EFDF0 + dword_1000EFDF0);
  return v6(a1, v4);
}

uint64_t sub_10008BCA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008BCF4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10008BD44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *os_log_type_t v9 = v2;
  v9[1] = sub_10008B8C4;
  return sub_100088510(a1, v4, v5, v6, v7, v8);
}

void sub_10008BE0C()
{
  [*(id *)(v0 + 16) dismissViewControllerAnimated:1 completion:0];
  sub_100086F30();
}

unint64_t *sub_10008BE84(uint64_t a1)
{
  return sub_10008BFD4(a1, (uint64_t)&type metadata for HomeOption, (uint64_t)&off_1000DD698);
}

void *sub_10008BE98(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    id v16 = _swiftEmptyArrayStorage;
    sub_10008E980(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (unsigned char *)(a1 + 56);
    do
    {
      char v5 = *(v4 - 24);
      uint64_t v7 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      char v8 = *v4;
      id v16 = v2;
      unint64_t v9 = v2[2];
      unint64_t v10 = v2[3];
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_10008E980(v10 > 1, v9 + 1, 1);
        uint64_t v2 = v16;
      }
      uint64_t v14 = &type metadata for RoomOption;
      uint64_t v15 = &off_1000DD648;
      uint64_t v11 = swift_allocObject();
      *(void *)&long long v13 = v11;
      *(unsigned char *)(v11 + 16) = v5;
      *(void *)(v11 + 24) = v7;
      *(void *)(v11 + 32) = v6;
      *(unsigned char *)(v11 + 40) = v8;
      _OWORD v2[2] = v9 + 1;
      sub_10000F6D0(&v13, (uint64_t)&v2[5 * v9 + 4]);
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t *sub_10008BFC0(uint64_t a1)
{
  return sub_10008BFD4(a1, (uint64_t)&type metadata for HomePodOption, (uint64_t)&off_1000DC870);
}

unint64_t *sub_10008BFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v3)
  {
    id v17 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_10008E980(0, v3, 0);
    uint64_t v4 = (unint64_t *)&_swiftEmptyArrayStorage;
    char v8 = (void **)(a1 + 32);
    do
    {
      unint64_t v9 = *v8;
      id v17 = v4;
      unint64_t v10 = v4[2];
      unint64_t v11 = v4[3];
      id v12 = v9;
      if (v10 >= v11 >> 1)
      {
        sub_10008E980(v11 > 1, v10 + 1, 1);
        uint64_t v4 = v17;
      }
      uint64_t v15 = a2;
      uint64_t v16 = a3;
      *(void *)&long long v14 = v12;
      v4[2] = v10 + 1;
      sub_10000F6D0(&v14, (uint64_t)&v4[5 * v10 + 4]);
      ++v8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

void *sub_10008C0C8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_10008E980(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v16 = v2;
      unint64_t v9 = v2[2];
      unint64_t v10 = v2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_10008E980(v10 > 1, v9 + 1, 1);
        uint64_t v2 = v16;
      }
      long long v14 = &type metadata for LanguageOption;
      uint64_t v15 = &off_1000DC3A0;
      unint64_t v11 = (void *)swift_allocObject();
      *(void *)&long long v13 = v11;
      void v11[2] = v6;
      _OWORD v11[3] = v5;
      v11[4] = v8;
      v11[5] = v7;
      _OWORD v2[2] = v9 + 1;
      sub_10000F6D0(&v13, (uint64_t)&v2[5 * v9 + 4]);
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10008C1F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  long long v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10008E9E0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        int64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10008E9E0(0, v3[2] + 1, 1);
          int64_t v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_10008E9E0(v6 > 1, v7 + 1, 1);
          int64_t v3 = v13;
        }
        _OWORD v3[2] = v7 + 1;
        sub_10000F464(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        int64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10008E9E0(0, v3[2] + 1, 1);
          int64_t v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_10008E9E0(v10 > 1, v11 + 1, 1);
          int64_t v3 = v13;
        }
        _OWORD v3[2] = v11 + 1;
        sub_10000F464(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008C424()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  sub_10001343C(v0, HomePodViewfinderCircleAnimationDelay);
  *(void *)sub_1000133A0(v0, (uint64_t)HomePodViewfinderCircleAnimationDelay) = 200;
  int64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

uint64_t HomePodViewfinderCircleAnimationDelay.unsafeMutableAddressor()
{
  if (qword_1000ED878 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();

  return sub_1000133A0(v0, (uint64_t)HomePodViewfinderCircleAnimationDelay);
}

void sub_10008C518()
{
  [*(id *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer) removeAllAnimations];
  id v4 = sub_10008D43C(0.6, 0.0);
  id v1 = sub_10008D43C(0.6, *(double *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth));
  [v4 appendPath:v1];

  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask);
  id v3 = [v4 CGPath];
  [v2 setPath:v3];

  sub_10008CA44(*(void *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialColors), 0, 1);
  sub_10008D568(0, v4, 0.0);
}

void sub_10008C62C()
{
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self animationWithKeyPath:v1];

  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  Class v4 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v2 setByValue:v4];

  LODWORD(v5) = 2139095040;
  [v2 setRepeatCount:v5];
  [v2 setDuration:2.0];
  unint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer);
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 addAnimation:v2 forKey:v7];

  sub_10000EE48(&qword_1000EF140);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000B08A0;
  id v9 = self;
  id v10 = [v9 systemBlueColor];
  id v11 = [v10 colorWithAlphaComponent:1.0];

  *(void *)(inited + 32) = v11;
  id v12 = [v9 systemBlueColor];
  id v13 = [v12 colorWithAlphaComponent:0.0];

  *(void *)(inited + 40) = v13;
  specialized Array._endMutation()();
  sub_10008CA44(inited, 0x3FC999999999999ALL, 0);
  swift_bridgeObjectRelease();
}

void sub_10008C85C()
{
  uint64_t v1 = v0;
  sub_10000EE48(&qword_1000EF140);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000B08A0;
  id v3 = self;
  id v4 = [v3 systemGreenColor];
  id v5 = [v4 colorWithAlphaComponent:1.0];

  *(void *)(inited + 32) = v5;
  id v6 = [v3 systemGreenColor];
  id v7 = [v6 colorWithAlphaComponent:1.0];

  *(void *)(inited + 40) = v7;
  specialized Array._endMutation()();
  sub_10008CA44(inited, 0x3FC999999999999ALL, 0);
  swift_bridgeObjectRelease();
  id v8 = sub_10008D43C(0.6, 0.0);
  id v9 = sub_10008D43C(0.6, *(double *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth));
  [v8 appendPath:v9];

  id v10 = sub_10008D43C(0.6, 0.0);
  id v11 = sub_10008D43C(0.6, *(double *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_successStrokeWidth));
  [v10 appendPath:v11];

  id v12 = v8;
  sub_10008D568(v8, v10, 0.5);

  *(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset) = 1;
}

void sub_10008CA44(unint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v21 = v3;
    uint64_t v9 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      id v11 = v10;
      ++v9;
      id v12 = [v10 CGColor:v21];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v8 != v9);
    id v4 = v21;
  }
  if (a3)
  {
    uint64_t v20 = *(void **)&v4[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
    sub_10008C1F0((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v20 setColors:isa];
  }
  else
  {
    double v13 = *(double *)&a2;
    swift_bridgeObjectRetain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v15 = [self animationWithKeyPath:v14];

    uint64_t v16 = *(void **)&v4[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
    id v17 = [v16 colors];
    [v15 setFromValue:v17];

    type metadata accessor for CGColor(0);
    Class v18 = Array._bridgeToObjectiveC()().super.isa;
    [v15 setToValue:v18];

    [v15 setDuration:v13];
    [v15 setRemovedOnCompletion:0];
    [v15 setDelegate:v4];
    sub_10008C1F0((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    Class v19 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v16 setColors:v19];

    Class isa = (Class)[v15 keyPath];
    [v16 addAnimation:v15];
  }
}

char *sub_10008CE04()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer;
  id v2 = objc_allocWithZone((Class)CAShapeLayer);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer;
  *(void *)&v3[v6] = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v7 = &v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_rotKey];
  *(void *)id v7 = 0xD000000000000012;
  *((void *)v7 + 1) = 0x80000001000B9FC0;
  uint64_t v8 = &v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey];
  *(void *)uint64_t v8 = 0x73726F6C6F63;
  *((void *)v8 + 1) = 0xE600000000000000;
  v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset] = 0;
  uint64_t v9 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialColors;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000B08A0;
  id v11 = self;
  id v12 = [v11 systemBlueColor];
  id v13 = [v12 colorWithAlphaComponent:1.0];

  *(void *)(v10 + 32) = v13;
  id v14 = [v11 systemBlueColor];
  id v15 = [v14 colorWithAlphaComponent:1.0];

  *(void *)(v10 + 40) = v15;
  *(void *)&v27.a = v10;
  specialized Array._endMutation()();
  *(void *)&v3[v9] = v10;
  *(void *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerInitialHoleWidthRatio] = 0x3FDCCCCCCCCCCCCDLL;
  *(void *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerTargetHoleWidthRatio] = 0x3FE3333333333333;
  *(void *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth] = 0x402A000000000000;
  *(void *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_successStrokeWidth] = 0x4033000000000000;

  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView();
  uint64_t v16 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10008D338();
  id v17 = *(void **)&v16[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
  [v17 setType:kCAGradientLayerConic];
  [v17 setStartPoint:0.5, 0.5];
  CGAffineTransformMakeRotation(&v27, 3.14159265);
  [v17 setAffineTransform:&v27];
  LODWORD(v18) = 1060320051;
  [*(id *)&v16[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask] setOpacity:v18];
  uint64_t v19 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer;
  LODWORD(v20) = 1062501089;
  [*(id *)&v16[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer] setOpacity:v20];
  uint64_t v21 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer;
  LODWORD(v22) = 1.0;
  [*(id *)&v16[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer] setOpacity:v22];
  id v23 = [v16 layer];
  [v23 insertSublayer:v17 atIndex:0];

  id v24 = [v16 layer];
  [v24 insertSublayer:*(void *)&v16[v21] atIndex:0];

  id v25 = [v16 layer];
  [v25 insertSublayer:*(void *)&v16[v19] atIndex:0];

  sub_10008C518();
  return v16;
}

void sub_10008D220()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer];
  [v0 bounds];
  [v1 setFrame:];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
  [v0 bounds];
  [v2 setFrame:];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer];
  [v0 bounds];
  [v3 setFrame:];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask];
  [v0 bounds];
  [v4 setFrame:];
  sub_10008D768();

  sub_10008D338();
}

void sub_10008D338()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer);
  id v2 = self;
  id v3 = [v2 systemBackgroundColor];
  id v4 = [v3 CGColor];

  [v1 setFillColor:v4];
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer);
  id v6 = [v2 systemBackgroundColor];
  id v7 = [v6 CGColor];

  [v5 setFillColor:v7];
}

id sub_10008D43C(double a1, double a2)
{
  [v2 bounds];
  CGFloat v5 = CGRectGetWidth(v18) * a1 + a2;
  [v2 center];
  double v7 = v6;
  double v9 = v8;
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  v19.size.width = v5;
  v19.size.height = v5;
  CGFloat v10 = v7 - CGRectGetWidth(v19) * 0.5;
  v20.origin.x = 0.0;
  v20.origin.y = 0.0;
  v20.size.width = v5;
  v20.size.height = v5;
  CGFloat v11 = v9 - CGRectGetHeight(v20) * 0.5;
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v21.size.width = v5;
  v21.size.height = v5;
  double Width = CGRectGetWidth(v21);
  v22.origin.x = 0.0;
  v22.origin.y = 0.0;
  v22.size.width = v5;
  v22.size.height = v5;
  double Height = CGRectGetHeight(v22);
  v23.origin.x = v10;
  v23.origin.y = v11;
  v23.size.width = Width;
  v23.size.height = Height;
  CGFloat v14 = CGRectGetWidth(v23) * 0.5;
  id v15 = [self bezierPathWithRoundedRect:v10 cornerRadius:v11 Width:Height];

  return v15;
}

void sub_10008D568(void *a1, void *a2, double a3)
{
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self animationWithKeyPath:v7];

  if (a1)
  {
    id v15 = [a1 CGPath];
    type metadata accessor for CGPath(0);
    a1 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  }
  [v8 setFromValue:a1];
  swift_unknownObjectRelease();
  id v9 = [a2 CGPath];
  [v8 setToValue:v9];

  [v8 setDuration:a3];
  CGFloat v10 = self;
  id v11 = v8;
  id v12 = [v10 functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
  [v11 setTimingFunction:v12];

  [v11 setFillMode:kCAFillModeBoth];
  [v11 setRemovedOnCompletion:0];
  id v13 = *(void **)(v3 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask);
  id v14 = [v11 keyPath];
  [v13 addAnimation:v11 forKey:v14];
}

void sub_10008D768()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v67 = v2;
  __chkstk_darwin(v2);
  unint64_t v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  __chkstk_darwin(v4);
  unint64_t v62 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DispatchTime();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v6 = __chkstk_darwin(v61);
  id v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v56 = (char *)&v53 - v9;
  [v0 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  CGRect v18 = self;
  id v19 = [v18 bezierPathWithRoundedRect:v11 cornerRadius:v13 v15, v17, 0.0];
  id v20 = sub_10008D43C(0.6, 0.0);
  [v19 appendPath:v20];

  id v21 = sub_10008D43C(0.45, 0.0);
  double v22 = *(double *)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth];
  id v23 = sub_10008D43C(0.45, v22);
  [v21 appendPath:v23];

  id v24 = sub_10008D43C(0.6, 0.0);
  id v25 = sub_10008D43C(0.6, v22);
  uint64_t v57 = v24;
  [v24 appendPath:v25];

  uint64_t v26 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer];
  id v60 = v19;
  id v27 = [v19 CGPath];
  [v26 setPath:v27];

  objc_super v28 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask];
  id v58 = v21;
  id v29 = [v21 CGPath];
  [v28 setPath:v29];

  [*(id *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer] setMask:v28];
  NSString v30 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer];
  [v1 bounds];
  id v31 = [v18 bezierPathWithRoundedRect:cornerRadius:];
  id v32 = [v31 CGPath];

  [v30 setPath:v32];
  [v26 setFillRule:kCAFillRuleEvenOdd];
  [v28 setFillRule:kCAFillRuleEvenOdd];
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [self animationWithKeyPath:v33];

  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  [v34 setFromValue:isa];

  Class v36 = Int._bridgeToObjectiveC()().super.super.isa;
  [v34 setToValue:v36];

  [v34 setDuration:0.6];
  id v37 = self;
  id v38 = v34;
  id v39 = [v37 functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
  [v38 setTimingFunction:v39];

  [v38 setFillMode:kCAFillModeBoth];
  [v38 setRemovedOnCompletion:0];
  sub_1000150E4();
  uint64_t v55 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  if (qword_1000ED878 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for DispatchTimeInterval();
  sub_1000133A0(v40, (uint64_t)HomePodViewfinderCircleAnimationDelay);
  os_log_type_t v41 = v56;
  + infix(_:_:)();
  uint64_t v59 = *(void *)(v59 + 8);
  uint64_t v42 = v8;
  uint64_t v43 = v61;
  ((void (*)(char *, uint64_t))v59)(v42, v61);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v1;
  *(void *)(v44 + 24) = v38;
  aBlock[4] = sub_10008E960;
  aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100089B18;
  aBlock[3] = &unk_1000DD1D8;
  id v45 = _Block_copy(aBlock);
  id v54 = v38;
  v1;
  swift_release();
  id v46 = v62;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001512C();
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  uint64_t v47 = v63;
  uint64_t v48 = v67;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v49 = (void *)v55;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v45);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v65);
  ((void (*)(char *, uint64_t))v59)(v41, v43);
  id v50 = v58;
  id v51 = v58;
  id v52 = v57;
  sub_10008D568(v50, v57, 0.5);
}

void sub_10008DF14(uint64_t a1, id a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer);
  id v4 = [a2 keyPath];
  [v3 addAnimation:a2 forKey:v4];
}

id sub_10008DFC0()
{
  return sub_10008E8D8(type metadata accessor for SVSLEDPasscodeActivityIndicatorView);
}

Swift::Void __swiftcall SVSLPCActivityIndicatorViewController.viewDidLoad()()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:1];

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v0 view];
  if (!v4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = v4;
  [v4 addSubview:v3];

  id v6 = [v3 leftAnchor];
  id v7 = [v0 view];
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v8 = v7;
  id v9 = [v7 leftAnchor];

  id v10 = [v6 constraintEqualToAnchor:v9];
  [v10 setActive:1];

  id v11 = [v3 rightAnchor];
  id v12 = [v0 view];
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v13 = v12;
  id v14 = [v12 rightAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  [v15 setActive:1];

  id v16 = [v3 topAnchor];
  id v17 = [v0 view];
  if (!v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  CGRect v18 = v17;
  id v19 = [v17 topAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19];
  [v20 setActive:1];

  id v21 = [v3 bottomAnchor];
  id v22 = [v0 view];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v23 = v22;
  id v24 = [v22 bottomAnchor];

  id v25 = [v21 constraintEqualToAnchor:v24];
  [v25 setActive:1];

  [v3 setNeedsLayout];
}

id SVSLPCActivityIndicatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

id SVSLPCActivityIndicatorViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v;
  id v7 = objc_allocWithZone((Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];

  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for SVSLPCActivityIndicatorViewController();
  id v10 = [super initWithNibName:v9 bundle:a3];

  return v10;
}

uint64_t type metadata accessor for SVSLEDPasscodeActivityIndicatorView()
{
  return self;
}

uint64_t type metadata accessor for SVSLPCActivityIndicatorViewController()
{
  return self;
}

id SVSLPCActivityIndicatorViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id SVSLPCActivityIndicatorViewController.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v;
  id v4 = objc_allocWithZone((Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SVSLPCActivityIndicatorViewController();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id SVSLPCActivityIndicatorViewController.__deallocating_deinit()
{
  return sub_10008E8D8(type metadata accessor for SVSLPCActivityIndicatorViewController);
}

id sub_10008E8D8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t sub_10008E920()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10008E960()
{
  sub_10008DF14(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_10008E968(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008E978()
{
  return swift_release();
}

uint64_t sub_10008E980(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10008EA00(a1, a2, a3, (void *)*v3);
  *objc_super v3 = result;
  return result;
}

uint64_t sub_10008E9A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10008EBA4(a1, a2, a3, *v3);
  *objc_super v3 = (char *)result;
  return result;
}

uint64_t sub_10008E9C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10008ED0C(a1, a2, a3, *v3);
  *objc_super v3 = (char *)result;
  return result;
}

uint64_t sub_10008E9E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10008EE78(a1, a2, a3, *v3);
  *objc_super v3 = (char *)result;
  return result;
}

uint64_t sub_10008EA00(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48(&qword_1000EFF60);
    id v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = &_swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10000EE48(&qword_1000EFF68);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008EBA4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48(&qword_1000EFF70);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008ED0C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48(&qword_1000EFF78);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008EE78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48((uint64_t *)&unk_1000EF400);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008EFE8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000EE48((uint64_t *)&unk_1000EFF80);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10008F154(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3) {
    return;
  }
  id v4 = (void *)v3;
  id v15 = a1;
  id v5 = [v4 keyPath];
  if (!v5) {
    goto LABEL_8;
  }
  unint64_t v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey)
    && v9 == *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
LABEL_8:

      return;
    }
  }
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer);
  if ([v4 toValue])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10000F464(&v17, &v18);
    sub_10000EE48(&qword_1000EFF58);
    swift_dynamicCast();
    sub_10008C1F0(v16);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 setColors:isa];

    uint64_t v14 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset) == 1) {
      [v12 removeAllAnimations];
    }

    *(unsigned char *)(v1 + v14) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_10008F360()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)CAShapeLayer) init];
  unint64_t v6 = &v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_rotKey];
  *unint64_t v6 = 0xD000000000000012;
  v6[1] = 0x80000001000B9FC0;
  uint64_t v7 = &v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey];
  void *v7 = 0x73726F6C6F63;
  v7[1] = 0xE600000000000000;
  v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset] = 0;
  uint64_t v8 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialColors;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000B08A0;
  id v10 = self;
  id v11 = [v10 systemBlueColor];
  id v12 = [v11 colorWithAlphaComponent:1.0];

  *(void *)(v9 + 32) = v12;
  id v13 = [v10 systemBlueColor];
  id v14 = [v13 colorWithAlphaComponent:1.0];

  *(void *)(v9 + 40) = v14;
  specialized Array._endMutation()();
  *(void *)&v1[v8] = v9;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerInitialHoleWidthRatio] = 0x3FDCCCCCCCCCCCCDLL;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerTargetHoleWidthRatio] = 0x3FE3333333333333;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth] = 0x402A000000000000;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_successStrokeWidth] = 0x4033000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10008F5B8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008F5F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_10008F630(unint64_t a1)
{
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v3 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain_n();
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          goto LABEL_27;
        }
        for (uint64_t i = 0; i != v3; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v6 = *(id *)(a1 + 8 * i + 32);
          }
          uint64_t v7 = v6;
          [v6 removeFromSuperview];
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints] = 0;
  id result = (id)swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
  if (!v8) {
    return result;
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = (uint64_t)result;
    if (result)
    {
LABEL_15:
      if (v9 >= 1)
      {
        uint64_t v10 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v11 = *(id *)(v8 + 8 * v10 + 32);
          }
          id v12 = v11;
          ++v10;
          [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v1 addSubview:v12];
        }
        while (v9 != v10);
        goto LABEL_23;
      }
LABEL_27:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (v9) {
      goto LABEL_15;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease_n();

  return [v1 setNeedsUpdateConstraints];
}

void sub_10008F82C(void *a1)
{
}

void sub_10008F840(void *a1)
{
}

void sub_10008F854(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = *a2;
  id v6 = *(void **)&v3[*a2];
  *(void *)&v3[*a2] = a1;
  id v9 = a1;
  if (v6) {
    [v6 removeFromSuperview];
  }
  uint64_t v7 = *(void **)&v3[v5];
  if (v7)
  {
    id v8 = v7;
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v3 addSubview:v8];
    *(void *)&v3[*a3] = 0;
    swift_bridgeObjectRelease();
    [v3 setNeedsUpdateConstraints];

    id v6 = v9;
    id v9 = v8;
  }
}

char *sub_10008F924(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints] = 0;
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
  id v4 = objc_allocWithZone((Class)UILayoutGuide);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel] = 0;

  v30.receiver = v5;
  v30.super_class = (Class)type metadata accessor for HomePodSetupProgressBarView();
  id v6 = (char *)objc_msgSendSuper2(&v30, "initWithCardStyle:", a1);
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
  id v8 = *(void **)&v6[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide];
  id v9 = v6;
  [v9 addLayoutGuide:v8];
  id v10 = [v9 mainContentGuide];
  id v29 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000B0B90;
  id v12 = [v8 topAnchor];
  id v13 = [v10 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v11 + 32) = v14;
  id v15 = [*(id *)&v6[v7] leadingAnchor];
  id v16 = [v10 leadingAnchor];
  id v17 = [v15 constraintGreaterThanOrEqualToAnchor:v16];

  *(void *)(v11 + 40) = v17;
  id v18 = [*(id *)&v6[v7] trailingAnchor];
  id v19 = [v10 trailingAnchor];
  id v20 = [v18 constraintLessThanOrEqualToAnchor:v19];

  *(void *)(v11 + 48) = v20;
  id v21 = [*(id *)&v6[v7] centerXAnchor];
  id v22 = [v10 centerXAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v11 + 56) = v23;
  id v24 = [*(id *)&v6[v7] bottomAnchor];
  id v25 = [v10 bottomAnchor];
  id v26 = [v24 constraintLessThanOrEqualToAnchor:v25];

  *(void *)(v11 + 64) = v26;
  specialized Array._endMutation()();
  sub_100017190();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v29 activateConstraints:isa];

  return v9;
}

void sub_10008FCFC()
{
  uint64_t v1 = v0;
  v100.receiver = v0;
  v100.super_class = (Class)type metadata accessor for HomePodSetupProgressBarView();
  [super updateConstraints];
  id v2 = *(id *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
  p_name = (char **)(&stru_1000E6FF8 + 8);
  id v99 = v0;
  if (v2)
  {
    if ((unint64_t)v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)(((unint64_t)v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v4)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    if (*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints]) {
      goto LABEL_5;
    }
    uint64_t v96 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints;
    uint64_t v97 = v4 - 1;
    if (v4 < 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      id v6 = 0;
      uint64_t v7 = *(void **)&v99[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide];
      double v8 = PRXIconToIconMargin;
      if (((unint64_t)v2 & 0xC000000000000001) == 0) {
        goto LABEL_9;
      }
LABEL_8:
      for (id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(); ; id i = *((id *)v2 + v5 + 4))
      {
        id v10 = i;
        id v11 = [i centerYAnchor];
        if (!v6 || (id v12 = [v6 centerYAnchor]) == 0) {
          id v12 = [v7 centerYAnchor];
        }
        id v13 = [v11 constraintEqualToAnchor:v12];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v14 = [v10 image];
        if (v14)
        {
          id v15 = v14;
          [v14 size];
          double v17 = v16;
          double v19 = v18;
        }
        else
        {
          double v19 = 1.0;
          double v17 = 1.0;
        }
        if (v17 <= 0.0) {
          double v20 = 1.0;
        }
        else {
          double v20 = v19 / v17;
        }
        id v21 = [v10 heightAnchor];
        id v22 = [v10 widthAnchor];
        id v23 = [v21 constraintEqualToAnchor:v22 multiplier:v20];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v24 = [v10 topAnchor];
        id v25 = [v7 topAnchor];
        id v26 = [v24 constraintGreaterThanOrEqualToAnchor:v25];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v27 = [v10 bottomAnchor];
        id v28 = [v7 bottomAnchor];
        id v29 = [v27 constraintLessThanOrEqualToAnchor:v28];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (v6)
        {
          id v30 = v6;
          id v31 = [v10 leadingAnchor];
          id v32 = [v30 trailingAnchor];
          id v33 = [v31 constraintEqualToAnchor:v32 constant:v8];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v34 = [v30 widthAnchor];
          id v35 = [v10 widthAnchor];
          id v36 = [v34 constraintEqualToAnchor:v35];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          id v37 = [v10 leadingAnchor];
          id v38 = [v7 leadingAnchor];
          id v39 = [v37 constraintEqualToAnchor:v38];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        if (v97 == v5) {
          break;
        }
        ++v5;
        id v6 = v10;
        if (((unint64_t)v2 & 0xC000000000000001) != 0) {
          goto LABEL_8;
        }
LABEL_9:
        ;
      }
      swift_bridgeObjectRelease();
      id v2 = v10;
      id v40 = [v2 trailingAnchor];
      id v41 = [v7 trailingAnchor];
      id v42 = [v40 constraintEqualToAnchor:v41];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_40;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_40:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    uint64_t v43 = self;
    sub_100017190();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    p_name = &stru_1000E6FF8.name;
    [v43 activateConstraints:isa];

    uint64_t v1 = v99;
    *(void *)&v99[v96] = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
  }
LABEL_41:
  id v45 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView];
  if (v45)
  {
    uint64_t v46 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints;
    if (!*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints])
    {
      sub_10000EE48(&qword_1000EF140);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1000B1940;
      id v48 = v45;
      id v49 = [v48 leadingAnchor];
      id v50 = [v1 mainContentGuide];
      id v51 = [v50 leadingAnchor];

      id v52 = [v49 constraintEqualToAnchor:v51];
      *(void *)(v47 + 32) = v52;
      id v53 = [v48 trailingAnchor];
      id v54 = [v99 mainContentGuide];
      id v55 = [v54 trailingAnchor];

      id v56 = [v53 constraintEqualToAnchor:v55];
      *(void *)(v47 + 40) = v56;
      id v57 = [v48 heightAnchor];
      id v58 = [v57 constraintEqualToConstant:5.0];

      *(void *)(v47 + 48) = v58;
      specialized Array._endMutation()();
      uint64_t v59 = self;
      sub_100017190();
      Class v60 = Array._bridgeToObjectiveC()().super.isa;
      [v59 p_name[384]:v60];

      uint64_t v1 = v99;
      *(void *)&v99[v46] = v47;
      swift_bridgeObjectRelease();
      id v61 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  unint64_t v62 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel];
  if (v62)
  {
    uint64_t v63 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints;
    if (!*(void *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints])
    {
      sub_10000EE48(&qword_1000EF140);
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_1000B08A0;
      id v65 = v62;
      id v66 = [v65 leadingAnchor];
      id v67 = [v1 mainContentGuide];
      id v68 = [v67 leadingAnchor];

      id v69 = [v66 constraintEqualToAnchor:v68];
      *(void *)(v64 + 32) = v69;
      id v70 = [v65 trailingAnchor];
      id v71 = [v99 mainContentGuide];
      id v72 = [v71 trailingAnchor];

      id v73 = [v70 constraintEqualToAnchor:v72];
      *(void *)(v64 + 40) = v73;
      specialized Array._endMutation()();
      unint64_t v74 = self;
      sub_100017190();
      Class v75 = Array._bridgeToObjectiveC()().super.isa;
      [v74 p_name[384] v75];

      *(void *)&v99[v63] = v64;
      swift_bridgeObjectRelease();
      id v76 = v65;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  os_log_type_t v77 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v78) {
      goto LABEL_53;
    }
LABEL_69:
    swift_bridgeObjectRelease();
    os_log_type_t v77 = 0;
    goto LABEL_70;
  }
  uint64_t v78 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v78) {
    goto LABEL_69;
  }
LABEL_53:
  if (v78 >= 1)
  {
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v98 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
    double v81 = PRXMainContentMargin;
    while (1)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        id v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v79) {
          goto LABEL_55;
        }
      }
      else
      {
        id v86 = (id)_swiftEmptyArrayStorage[v80 + 4];
        if (v79)
        {
LABEL_55:
          id v82 = v79;
          id v83 = [v86 topAnchor];
          id v84 = [v82 bottomAnchor];
          id v85 = [v83 constraintEqualToAnchor:v84 constant:v81];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          goto LABEL_58;
        }
      }
      id v87 = [v86 topAnchor];
      id v88 = [*(id *)&v99[v98] bottomAnchor];
      id v89 = [v87 constraintEqualToAnchor:v88 constant:v81];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
LABEL_58:
      ++v80;
      uint64_t v79 = v86;
      if (v78 == v80)
      {
        swift_bridgeObjectRelease();
        os_log_type_t v77 = v86;
        id v90 = [v77 bottomAnchor];
        id v91 = [v99 mainContentGuide];
        id v92 = [v91 bottomAnchor];

        id v93 = [v90 constraintLessThanOrEqualToAnchor:v92];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_67;
        }
        goto LABEL_74;
      }
    }
  }
  __break(1u);
LABEL_74:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_67:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  p_name = (char **)(&stru_1000E6FF8 + 8);
LABEL_70:
  uint64_t v94 = self;
  sub_100017190();
  Class v95 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v94 p_name[384] v95];
}

id sub_100090D18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupProgressBarView();
  return [super dealloc];
}

uint64_t type metadata accessor for HomePodSetupProgressBarView()
{
  return self;
}

void sub_100090E0C()
{
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints] = 0;
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILayoutGuide) init];
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100090EDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

Swift::Int sub_100090EE8()
{
  Swift::UInt8 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100090F30()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100090F5C()
{
  Swift::UInt8 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

char *sub_100090FA0@<X0>(char *result@<X0>, char *a2@<X8>)
{
  int v2 = *result;
  if (*result) {
    char v3 = 0;
  }
  else {
    char v3 = *result;
  }
  BOOL v4 = v2 != 0;
  BOOL v5 = v2 == 1;
  if (v2 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = v3;
  }
  BOOL v7 = !v5 && v4;
  *a2 = v6;
  a2[1] = v7;
  return result;
}

id sub_1000910CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PreviewView();
  return [super dealloc];
}

void sub_100091254()
{
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView;
  type metadata accessor for PreviewView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_setupSucceeded] = 0;
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)AVCaptureSession) init];
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)AVCaptureVideoDataOutput) init];
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting] = 0;
  BOOL v5 = &v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *BOOL v5 = 0;
  v5[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1000913B0(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView;
  type metadata accessor for PreviewView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  BOOL v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_setupSucceeded] = 0;
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)AVCaptureSession) init];
  uint64_t v7 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
  uint64_t v8 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)AVCaptureVideoDataOutput) init];
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput] = 0;
  *(void *)&v5[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice] = 0;
  v5[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting] = 0;
  id v9 = &v5[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  v5[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_deviceModel] = a1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  return [super initWithNibName:0 bundle:0];
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewDidLoad()()
{
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView];
  id v2 = *(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session];
  id v3 = [v1 layer];
  self;
  [(id)swift_dynamicCastObjCClassUnconditional() setSession:v2];

  sub_100092898();
  [*(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator] prepare];
  id v4 = [v1 layer];
  self;
  [(id)swift_dynamicCastObjCClassUnconditional() setVideoGravity:AVLayerVideoGravityResizeAspectFill];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v0 view];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 addSubview:v1];

    id v7 = [v1 layer];
    id v8 = [v0 view];
    if (v8)
    {
      id v9 = v8;
      [v8 bounds];
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;

      [v7 setFrame:v11, v13, v15, v17];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for SVSHomePodIDViewController()
{
  return self;
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v57 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  __chkstk_darwin(v7);
  double v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v44 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v52 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  double v17 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  double v19 = (char *)&v43 - v18;
  double v20 = (objc_class *)type metadata accessor for SVSHomePodIDViewController();
  v64.receiver = v2;
  v64.super_class = v20;
  [super viewWillAppear:a1];
  [*(id *)&v2[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session] startRunning];
  uint64_t v45 = sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v54 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v17, v11);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v2;
  unint64_t v62 = sub_100092D94;
  uint64_t v63 = v22;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  Class v60 = sub_100089B18;
  id v61 = &unk_1000DD278;
  id v23 = _Block_copy(&aBlock);
  id v50 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  unint64_t v24 = sub_10001512C();
  uint64_t v25 = sub_10000EE48(&qword_1000EDEA0);
  unint64_t v48 = sub_100015184();
  uint64_t v49 = v25;
  unint64_t v51 = v24;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v26 = (void *)v54;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  id v27 = *(void (**)(char *, uint64_t))(v57 + 8);
  id v53 = v6;
  id v28 = v6;
  uint64_t v29 = v44;
  uint64_t v54 = v4;
  id v30 = v21;
  v57 += 8;
  uint64_t v47 = v27;
  v27(v28, v4);
  id v31 = *(void (**)(char *, uint64_t))(v56 + 8);
  v56 += 8;
  uint64_t v46 = v31;
  v31(v10, v55);
  v21(v19, v29);
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  id v33 = v52;
  id v34 = (void *)v32;
  static DispatchTime.now()();
  if (qword_1000ED878 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for DispatchTimeInterval();
  sub_1000133A0(v35, (uint64_t)HomePodViewfinderCircleAnimationDelay);
  + infix(_:_:)();
  v30(v33, v29);
  + infix(_:_:)();
  v30(v17, v29);
  uint64_t v36 = swift_allocObject();
  id v37 = v50;
  *(void *)(v36 + 16) = v50;
  unint64_t v62 = sub_100092DD0;
  uint64_t v63 = v36;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  Class v60 = sub_100089B18;
  id v61 = &unk_1000DD2C8;
  id v38 = _Block_copy(&aBlock);
  id v39 = v37;
  swift_release();
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  uint64_t v40 = v29;
  id v41 = v53;
  uint64_t v42 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v38);

  v47(v41, v42);
  v46(v10, v55);
  v30(v19, v40);
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for SVSHomePodIDViewController();
  v17.receiver = v2;
  v17.super_class = v12;
  [super viewDidDisappear:a1];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100092DE8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100089B18;
  aBlock[3] = &unk_1000DD318;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001512C();
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1000920B4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session);

    [v2 stopRunning];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(id *)(v3 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine);

    [v5 reset];
  }
  swift_beginAccess();
  uint64_t v6 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine];
    *(void *)&v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  }
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewDidLayoutSubviews()()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  [super viewDidLayoutSubviews];
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView] layer];
  id v2 = [v0 view];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 bounds];
    double v5 = v4;
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;

    [v1 setFrame:v5, v7, v9, v11];
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SVSHomePodIDViewController.configureEngine()()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine;
  if (!*(void *)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine))
  {
    uint64_t v2 = v0;
    int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_deviceModel);
    if (v3 == 1)
    {
      id v4 = [objc_allocWithZone((Class)AnalysisEngine) initForType:1];
      if (v4)
      {
LABEL_7:
        sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
        double v5 = (void *)static OS_dispatch_queue.main.getter();
        [v4 setDispatchQueue:v5];

        double v6 = *(void **)(v2 + v1);
        *(void *)(v2 + v1) = v4;
        id v7 = v4;

        [v7 setUseRecognizer:1];
        LODWORD(v8) = 1045220557;
        [v7 setMotionRotationThreshold:v8];
        [v7 setUsingM7Motion:0];
        LODWORD(v9) = 1024416809;
        [v7 setMotionAccelerationThreshold:v9];
        uint64_t v10 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v11 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v11;
        *(void *)(v12 + 24) = v10;
        v14[4] = sub_100092E68;
        v14[5] = v12;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256;
        _OWORD v14[2] = sub_100089B18;
        _OWORD v14[3] = &unk_1000DD390;
        uint64_t v13 = _Block_copy(v14);
        swift_release();
        [v7 setRecognizingCompletionHandlerBlock:v13];
        _Block_release(v13);

        return;
      }
      __break(1u);
    }
    if (!v3)
    {
      id v4 = [objc_allocWithZone((Class)AnalysisEngine) initForType:0];
      if (v4) {
        goto LABEL_7;
      }
      __break(1u);
    }
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
}

void sub_100092648()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong recognizingCompletionHandlerBlock];

    if (v2)
    {
      _Block_release(v2);
      swift_beginAccess();
      int v3 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v3)
      {
        id v4 = v3;
        [v3 setRecognizingCompletionHandlerBlock:0];
      }
      swift_beginAccess();
      double v5 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v5)
      {
        double v6 = v5;
        [v5 reset];
      }
      swift_beginAccess();
      id v7 = (char *)swift_unknownObjectWeakLoadStrong();
      if (v7)
      {
        double v8 = *(void **)&v7[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine];
        *(void *)&v7[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
      }
      swift_beginAccess();
      uint64_t v9 = swift_unknownObjectWeakLoadStrong();
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        id v11 = *(id *)(v9 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator);

        [v11 notificationOccurred:0];
      }
      swift_beginAccess();
      uint64_t v12 = swift_unknownObjectWeakLoadStrong();
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        uint64_t v14 = *(void (**)(void))(v12 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler);
        sub_1000647BC((uint64_t)v14);

        if (v14)
        {
          v14();
          sub_1000647CC((uint64_t)v14);
        }
      }
    }
  }
}

Swift::Void __swiftcall SVSHomePodIDViewController.preheatEngine()()
{
  [*(id *)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine) preheat];
}

void sub_100092898()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session);
  [v2 beginConfiguration];
  int v3 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output);
  [v3 setAlwaysDiscardsLateVideoFrames:1];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  id v4 = (void *)static OS_dispatch_queue.main.getter();
  [v3 setSampleBufferDelegate:v1 queue:v4];

  [v2 addOutput:v3];
  value = AVCaptureSessionPresetHigh;
  [v2 setSessionPreset:AVCaptureSessionPresetHigh];
  double v6 = self;
  id v7 = [v6 defaultDeviceWithDeviceType:AVCaptureDeviceTypeBuiltInDualCamera mediaType:AVMediaTypeVideo position:1];
  id v8 = v7;
  if (!v7)
  {
    id v9 = [v6 defaultDeviceWithDeviceType:AVCaptureDeviceTypeBuiltInWideAngleCamera mediaType:AVMediaTypeVideo position:1];
    if (!v9)
    {
      id v19 = 0;
      goto LABEL_8;
    }
    id v8 = v9;
  }
  id v10 = objc_allocWithZone((Class)AVCaptureDeviceInput);
  v35.value = 0;
  id v11 = v8;
  id v12 = v7;
  id v13 = [v10 initWithDevice:v11 error:&v35];
  if (!v13)
  {
    id v33 = (id)v35.value;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
LABEL_23:
    id v34 = value;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  uint64_t v14 = v13;
  id v15 = (id)v35.value;

  if (![v2 canAddInput:v14]) {
    __break(1u);
  }
  [v2 addInput:v14];
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput);
  *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput) = v14;
  id v17 = v14;

  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice);
  *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice) = v11;
  id v19 = v11;

  [v2 setSessionPreset:AVCaptureSessionPresetHigh];
  v35.value = 0;
  unsigned __int8 v20 = [v19 lockForConfiguration:&v35];
  value = (void *)v35.value;
  if ((v20 & 1) == 0) {
    goto LABEL_23;
  }
  id v21 = (id)v35.value;
  CMTime v36 = CMTime.init(value:timescale:)(10, 300);
  CMTimeValue v22 = v36.value;
  CMTimeScale timescale = v36.timescale;
  CMTimeEpoch epoch = v36.epoch;
  CMTime v35 = v36;
  uint64_t v25 = HIDWORD(*(void *)&v36.timescale);
  [v19 setActiveVideoMinFrameDuration:&v35];
  v35.value = v22;
  *(void *)&v35.CMTimeScale timescale = __PAIR64__(v25, timescale);
  v35.CMTimeEpoch epoch = epoch;
  [v19 setActiveVideoMaxFrameDuration:&v35];
  [v19 unlockForConfiguration];

LABEL_8:
  id v26 = [v3 connectionWithMediaType:AVMediaTypeVideo];
  if (v26)
  {
    id v27 = v26;
    if ([v26 isVideoStabilizationSupported]) {
      [v27 setPreferredVideoStabilizationMode:-1];
    }
  }
  id v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView), "layer"));
  self;
  id v29 = [(id)swift_dynamicCastObjCClassUnconditional() connection];

  if (v29)
  {
    if ([v29 isVideoOrientationSupported])
    {
      id v30 = [self sharedApplication];
      id v31 = (char *)[v30 activeInterfaceOrientation];

      if ((unint64_t)(v31 - 2) >= 3) {
        uint64_t v32 = 1;
      }
      else {
        uint64_t v32 = (uint64_t)v31;
      }
      [v29 setVideoOrientation:v32];
    }
  }
  [v2 commitConfiguration];
}

uint64_t sub_100092D5C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100092D94()
{
}

uint64_t sub_100092DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100092DC8()
{
  return swift_release();
}

void sub_100092DD0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting) = 1;
}

void sub_100092DE8()
{
}

uint64_t sub_100092DF0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100092E28()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100092E68()
{
}

id SVSHomePodIDViewController.__deallocating_deinit()
{
  [*(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session] stopRunning];
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine];
  if (v2)
  {
    [v2 reset];
    int v3 = *(void **)&v0[v1];
  }
  else
  {
    int v3 = 0;
  }
  *(void *)&v0[v1] = 0;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  return [super dealloc];
}

void SVSHomePodIDViewController.init(nibName:bundle:)()
{
}

Swift::Void __swiftcall SVSHomePodIDViewController.captureOutput(_:didOutput:from:)(AVCaptureOutput _, CMSampleBufferRef didOutput, AVCaptureConnection from)
{
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting) == 1)
  {
    _.super.Class isa = *(Class *)(v3 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine);
    if (_.super.isa) {
      -[objc_class ingestVideoFrame:](_.super.isa, "ingestVideoFrame:", _._outputInternal, from.super.isa, from._internal);
    }
  }
}

uint64_t type metadata accessor for PreviewView()
{
  return self;
}

ValueMetadata *type metadata accessor for SVSHomePodIDViewControllerDeviceModel()
{
  return &type metadata for SVSHomePodIDViewControllerDeviceModel;
}

unint64_t sub_1000930D8()
{
  unint64_t result = qword_1000F00F8;
  if (!qword_1000F00F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F00F8);
  }
  return result;
}

void sub_10009312C()
{
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView;
  type metadata accessor for PreviewView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_setupSucceeded] = 0;
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)AVCaptureSession) init];
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)AVCaptureVideoDataOutput) init];
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput] = 0;
  *(void *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting] = 0;
  objc_super v5 = &v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *objc_super v5 = 0;
  v5[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100093270()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000932A8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1000932E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    objc_super v5 = v3;
    uint64_t v8 = result;
    id v19 = self;
    swift_bridgeObjectRetain();
    id v9 = (unsigned char *)(v8 + 56);
    do
    {
      uint64_t v10 = *((void *)v9 - 3);
      uint64_t v11 = *((void *)v9 - 2);
      uint64_t v12 = *((void *)v9 - 1);
      char v13 = *v9;
      v9 += 32;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v10;
      *(void *)(v14 + 24) = v11;
      *(void *)(v14 + 32) = v12;
      *(unsigned char *)(v14 + 40) = v13;
      *(void *)(v14 + 48) = a2;
      *(void *)(v14 + 56) = a3;
      swift_bridgeObjectRetain_n();
      swift_retain();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_100095168;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100041068;
      aBlock[3] = &unk_1000DD4A0;
      uint64_t v16 = _Block_copy(aBlock);
      id v17 = [v19 actionWithTitle:v15 style:v12 handler:v16];

      _Block_release(v16);
      swift_release();
      id v18 = [v5 addAction:v17];

      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1000934AC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    char v13 = v12;
    sub_10003DD8C(0, &qword_1000EE2E0);
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        id v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        id v21 = v20;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        id v27 = *v25++;
        id v26 = v27;
        id v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_100093798()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000F0110);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000F0110);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100093860()
{
  uint64_t v1 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:3];
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1000938D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v66 - v10;
  id v12 = (objc_class *)type metadata accessor for HomePodSetupSoundRecognitionViewController();
  v71.receiver = v1;
  v71.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel];
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED880 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000F0110);
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupSoundRecognitionViewController: viewDidLoad failed because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000134A0((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000ED880 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000133A0(v18, (uint64_t)qword_1000F0110);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    id v68 = v11;
    if (v21)
    {
      CMTimeValue v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)CMTimeValue v22 = 136315138;
      id v67 = v22 + 4;
      uint64_t v23 = *v9;
      unint64_t v24 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_100048718(v23, v24, &v70);
      uint64_t v11 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100013508((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupSoundRecognitionViewController: viewDidLoad with title %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100013508((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    sub_100094558((uint64_t)v11);
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = swift_bridgeObjectRetain();
    sub_1000932E0(v26, (uint64_t)sub_100095120, v25);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v11[*(int *)(v5 + 72)] & 2) == 0 && *(void *)&v11[*(int *)(v5 + 76) + 8])
    {
      NSString v27 = String._bridgeToObjectiveC()();
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = [v1 dismissalConfirmationActionWithTitle:v27 message:v28 confirmButtonTitle:v29 cancelButtonTitle:v30];

      [v1 setDismissButtonAction:v31];
    }
    uint64_t v32 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView;
    [*(id *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView] setTranslatesAutoresizingMaskIntoConstraints:0];
    id v33 = [v1 contentView];
    [v33 addSubview:*(void *)&v1[v32]];

    id v34 = sub_100093860();
    [v34 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v35 = [v1 contentView];
    id v36 = sub_100093860();
    [v35 addSubview:v36];

    id v37 = [v1 contentView];
    id v38 = [v37 mainContentGuide];

    id v67 = self;
    sub_10000EE48(&qword_1000EF140);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1000B2030;
    id v40 = [*(id *)&v1[v32] topAnchor];
    id v41 = [v38 topAnchor];
    id v42 = [v40 constraintEqualToAnchor:v41];

    *(void *)(v39 + 32) = v42;
    id v43 = [*(id *)&v1[v32] leadingAnchor];
    id v44 = [v38 leadingAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    *(void *)(v39 + 40) = v45;
    id v46 = [*(id *)&v1[v32] trailingAnchor];
    id v47 = [v38 trailingAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47];

    *(void *)(v39 + 48) = v48;
    id v49 = [*(id *)&v1[v32] bottomAnchor];
    id v50 = sub_100093860();
    id v51 = [v50 topAnchor];

    id v52 = [v49 constraintEqualToAnchor:v51 constant:-20.0];
    *(void *)(v39 + 56) = v52;
    id v53 = sub_100093860();
    id v54 = [v53 leadingAnchor];

    id v55 = [v38 leadingAnchor];
    id v56 = [v54 constraintEqualToAnchor:v55];

    *(void *)(v39 + 64) = v56;
    id v57 = sub_100093860();
    id v58 = [v57 trailingAnchor];

    id v59 = [v38 trailingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    *(void *)(v39 + 72) = v60;
    id v61 = sub_100093860();
    id v62 = [v61 bottomAnchor];

    id v63 = [v38 bottomAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    *(void *)(v39 + 80) = v64;
    uint64_t v70 = v39;
    specialized Array._endMutation()();
    sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v67 activateConstraints:isa];

    sub_100013508((uint64_t)v68, type metadata accessor for HomePodSetupViewModel);
  }
}

uint64_t sub_10009425C(char *a1)
{
  char v1 = *a1;
  if (qword_1000ED880 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000F0110);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(void *)&v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_1000106E8(v1);
    *(void *)id v12 = sub_100048718(v6, v7, (uint64_t *)v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupSoundRecognitionViewController: User tapped on button: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  memset(&v12[8], 0, 40);
  v12[0] = v1;
  sub_100013664((uint64_t)v13, (uint64_t)&v12[8], &qword_1000ED970);
  v15[0] = *(_OWORD *)v12;
  v15[1] = *(_OWORD *)&v12[16];
  _OWORD v15[2] = *(_OWORD *)&v12[32];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();

    if (v10)
    {
      sub_10007A7CC(v15);
      swift_unknownObjectRelease();
    }
  }
  return sub_1000136C8((uint64_t)v15);
}

id sub_100094558(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EE040);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AdjustedImage(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  NSString v11 = String._bridgeToObjectiveC()();
  [v2 setTitle:v11];

  NSString v12 = String._bridgeToObjectiveC()();
  [v2 setSubtitle:v12];

  id v13 = sub_100093860();
  uint64_t v14 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  NSString v15 = String._bridgeToObjectiveC()();
  [v13 setText:v15];

  [v2 setDismissalType:*(void *)(a1 + v14[18])];
  unint64_t v16 = *(void *)(a1 + v14[11]);
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_3;
    }
LABEL_7:
    sub_10000FD94(a1 + v14[27], (uint64_t)v6, &qword_1000EE040);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
      return (id)sub_10000F674((uint64_t)v6, &qword_1000EE040);
    }
    sub_1000134A0((uint64_t)v6, (uint64_t)v10, type metadata accessor for AdjustedImage);
    id v19 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:*v10];
    sub_100083920((uint64_t)v10 + *(int *)(v7 + 20));
    [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
    os_log_type_t v20 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView];
    sub_10000EE48(&qword_1000EF140);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1000B0690;
    *(void *)(v21 + 32) = v19;
    uint64_t v26 = v21;
    specialized Array._endMutation()();
    unint64_t v22 = *(void *)&v20[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
    *(void *)&v20[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = v26;
    uint64_t v23 = v20;
    id v24 = v19;
    sub_100049B60(v22);

    swift_bridgeObjectRelease();
    return (id)sub_100013508((uint64_t)v10, type metadata accessor for AdjustedImage);
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
LABEL_3:

  return sub_1000948D0(v16);
}

id sub_1000948D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_images;
  unint64_t v5 = swift_bridgeObjectRetain();
  unsigned __int8 v6 = sub_1000934AC(v5, a1);
  id result = (id)swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    *(void *)&v2[v4] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id result = [v2 isViewLoaded];
    if (result)
    {
      unint64_t v8 = *(void *)&v2[v4];
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain_n();
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v9 = (uint64_t)result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id result = (id)swift_bridgeObjectRetain_n();
        if (v9)
        {
LABEL_5:
          if (v9 < 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v10 = 0;
          uint64_t v11 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_style;
          do
          {
            if ((v8 & 0xC000000000000001) != 0) {
              id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v12 = *(id *)(v8 + 8 * v10 + 32);
            }
            id v13 = v12;
            id v14 = [objc_allocWithZone((Class)PRXImageView) initWithStyle:*(void *)&v2[v11]];
            [v14 setImage:v13];
            [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            ++v10;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          while (v9 != v10);
        }
      }
      swift_bridgeObjectRelease_n();
      NSString v15 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView];
      unint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      *(void *)&v15[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = _swiftEmptyArrayStorage;
      unint64_t v17 = v15;
      swift_bridgeObjectRetain();
      sub_100049B60(v16);
      swift_bridgeObjectRelease();

      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_100094B74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupSoundRecognitionViewController();
  return [super dealloc];
}

uint64_t sub_100094C50()
{
  return type metadata accessor for HomePodSetupSoundRecognitionViewController();
}

uint64_t type metadata accessor for HomePodSetupSoundRecognitionViewController()
{
  uint64_t result = qword_1000F0168;
  if (!qword_1000F0168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100094CA4()
{
  sub_100012A34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100094D78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_100094DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100094DCC(a3);
}

id sub_100094DCC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v4 - 8);
  unsigned __int8 v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED880 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000133A0(v7, (uint64_t)qword_1000F0110);
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupSoundRecognitionViewController: presenter:didUpdate viewModel", v10, 2u);
    swift_slowDealloc();
  }

  sub_1000133D8(a1, (uint64_t)v6);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel;
  swift_beginAccess();
  sub_100013664((uint64_t)v6, v12, &qword_1000EF130);
  swift_endAccess();
  id result = [v2 isViewLoaded];
  if (result) {
    return sub_100094558(a1);
  }
  return result;
}

id sub_100094FAC(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel];
  uint64_t v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_termsManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___moreInfoButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_images] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView;
  id v6 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupIconContentView());
  uint64_t v7 = v1;
  *(void *)&v1[v5] = [v6 initWithCardStyle:0];
  *(void *)&v7[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_style] = 0;

  v9.receiver = v7;
  v9.super_class = (Class)type metadata accessor for HomePodSetupSoundRecognitionViewController();
  return [super initWithContentView:a1];
}

uint64_t sub_1000950E8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100095120(char *a1)
{
  return sub_10009425C(a1);
}

uint64_t sub_100095128()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100095168()
{
  char v1 = *(void (**)(char *))(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 40);
  swift_retain();
  v1(&v3);

  return swift_release();
}

uint64_t sub_1000951CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000951DC()
{
  return swift_release();
}

id sub_1000951E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel;
  id v7 = objc_allocWithZone((Class)UILabel);
  unint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];

  if (a3)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for HomePodInfoTableCell();
  [super initWithStyle:a1 reuseIdentifier:v10];

  id v12 = v11;
  sub_10009542C();

  return v12;
}

id sub_100095334(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel;
  id v4 = objc_allocWithZone((Class)UILabel);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for HomePodInfoTableCell();
  id v7 = [super initWithCoder:a1];
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_10009542C();
  }
  return v8;
}

void sub_10009542C()
{
  char v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel;
  [*(id *)&v0[OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[v2] setNumberOfLines:0];
  uint64_t v3 = *(void **)&v0[v2];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 labelColor];
  [v5 setTextColor:v6];

  id v7 = [v1 contentView];
  [v7 addSubview:*(void *)&v1[v2]];

  uint64_t v8 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel;
  [*(id *)&v1[OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v1[v8] setTextAlignment:2];
  [*(id *)&v1[v8] setNumberOfLines:0];
  id v9 = *(id *)&v1[v8];
  id v10 = [v4 secondaryLabelColor];
  [v9 setTextColor:v10];

  id v11 = [v1 contentView];
  [v11 addSubview:*(void *)&v1[v8]];

  id v34 = self;
  sub_10000EE48(&qword_1000EF140);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000B0B90;
  id v13 = [*(id *)&v1[v2] centerYAnchor];
  id v14 = [v1 centerYAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v12 + 32) = v15;
  id v16 = [*(id *)&v1[v2] leadingAnchor];
  id v17 = [v1 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v12 + 40) = v18;
  id v19 = [*(id *)&v1[v2] trailingAnchor];
  id v20 = [*(id *)&v1[v8] leadingAnchor];
  id v21 = [v19 constraintLessThanOrEqualToAnchor:v20];

  *(void *)(v12 + 48) = v21;
  id v22 = [*(id *)&v1[v8] centerYAnchor];
  id v23 = [v1 centerYAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v12 + 56) = v24;
  id v25 = [*(id *)&v1[v8] trailingAnchor];
  id v26 = [v1 trailingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v12 + 64) = v27;
  specialized Array._endMutation()();
  sub_10003DD8C(0, (unint64_t *)&qword_1000EF2E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:isa];

  NSString v29 = *(void **)&v1[v2];
  NSString v30 = self;
  id v31 = v29;
  id v32 = [v30 _preferredFontForTextStyle:UIFontTextStyleFootnote variant:1024];
  [v31 setFont:v32];

  id v33 = *(id *)&v1[v8];
  id v35 = [v30 preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v33 setFont:v35];
}

id sub_1000958F0()
{
  return sub_100096320(type metadata accessor for HomePodInfoTableCell);
}

uint64_t type metadata accessor for HomePodInfoTableCell()
{
  return self;
}

id sub_100095978()
{
  [v0 setDelegate:v0];
  [v0 setDataSource:v0];
  [v0 setRowHeight:UITableViewAutomaticDimension];
  [v0 setEstimatedRowHeight:44.0];
  [v0 setAlwaysBounceVertical:0];
  type metadata accessor for HomePodInfoTableCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v2];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 frame];
  CGFloat x = v14.origin.x;
  CGFloat y = v14.origin.y;
  CGFloat width = v14.size.width;
  CGFloat height = v14.size.height;
  double v7 = CGRectGetWidth(v14);
  v15.origin.CGFloat x = x;
  v15.origin.CGFloat y = y;
  v15.size.CGFloat width = width;
  v15.size.CGFloat height = height;
  CGRectGetHeight(v15);
  id v8 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v7, 1.0];
  [v0 setTableFooterView:v8];

  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;

  return [v0 setSeparatorInset:UIEdgeInsetsZero.top, left, bottom, right];
}

uint64_t sub_100095B34(uint64_t *a1)
{
  sub_10000EE48(&qword_1000F0248);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000B0870;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = sub_100007334(v4);

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v8;
  *(void *)(v3 + 48) = v10;
  *(void *)(v3 + 56) = v9;
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = sub_100007334(v11);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  uint64_t v17 = a1[2];
  uint64_t v16 = a1[3];
  *(void *)(v3 + 64) = v13;
  *(void *)(v3 + 72) = v15;
  *(void *)(v3 + 80) = v17;
  *(void *)(v3 + 88) = v16;
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100007334(v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  Swift::String v23 = String.uppercased()();
  *(void *)(v3 + 96) = v20;
  *(void *)(v3 + 104) = v22;
  *(Swift::String *)(v3 + 112) = v23;
  *(void *)(v1 + OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements) = v3;
  swift_bridgeObjectRelease();

  return sub_100095CB8();
}

uint64_t sub_100095CB8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  NSString v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003DD8C(0, (unint64_t *)&qword_1000EDE98);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_1000963D4;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100089B18;
  aBlock[3] = &unk_1000DD570;
  NSString v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001512C();
  sub_10000EE48(&qword_1000EDEA0);
  sub_100015184();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100095F58(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 dequeueReusableCellWithIdentifier:v3 forIndexPath:isa];

  type metadata accessor for HomePodInfoTableCell();
  uint64_t v6 = swift_dynamicCastClassUnconditional();
  id v7 = *(id *)(v6 + OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v9 = OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements;
  if (result >= *(void *)(*(void *)(v1 + OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements)
                           + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v10];

  id v11 = *(id *)(v6 + OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(void *)(*(void *)(v1 + v9) + 16))
  {
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 setText:v12];

    return v6;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_100096308()
{
  return sub_100096320(type metadata accessor for HomePodSetupWiFiInfoTableView);
}

id sub_100096320(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for HomePodSetupWiFiInfoTableView()
{
  return self;
}

ValueMetadata *type metadata accessor for HomePodSetupWiFiInfoTableView.InfoElement()
{
  return &type metadata for HomePodSetupWiFiInfoTableView.InfoElement;
}

uint64_t sub_10009639C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000963D4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 setSeparatorStyle:1];

  return [v1 reloadData];
}

uint64_t sub_100096424(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100096434()
{
  return swift_release();
}

uint64_t sub_10009643C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a1 & 1) != 0 && (a4)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = sub_100007334(v6);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10000EE48(&qword_1000EE398);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1000B0850;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_10003D0C8();
    *(void *)(v8 + 32) = a2;
    *(void *)(v8 + 40) = a3;
    swift_bridgeObjectRetain();
    a2 = String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

unint64_t sub_10009653C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v8 = sub_10000D834((uint64_t)_swiftEmptyArrayStorage);
  AnyHashable.init<A>(_:)();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(0x6974704F6D6F6F52, 0xEA00000000006E6FLL, (uint64_t)v20, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v20);
  AnyHashable.init<A>(_:)();
  swift_bridgeObjectRetain();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(a2, a3, (uint64_t)v20, v10);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v20);
  AnyHashable.init<A>(_:)();
  BOOL v11 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v12 = 1702195828;
  }
  else {
    uint64_t v12 = 0x65736C6166;
  }
  if (v11) {
    uint64_t v13 = 0xE500000000000000;
  }
  else {
    uint64_t v13 = 0xE400000000000000;
  }
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(v12, v13, (uint64_t)v20, v14);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v20);
  AnyHashable.init<A>(_:)();
  BOOL v15 = (a4 & 1) == 0;
  if (a4) {
    uint64_t v16 = 1702195828;
  }
  else {
    uint64_t v16 = 0x65736C6166;
  }
  if (v15) {
    uint64_t v17 = 0xE500000000000000;
  }
  else {
    uint64_t v17 = 0xE400000000000000;
  }
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_100056758(v16, v17, (uint64_t)v20, v18);
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v20);
  return v8;
}

uint64_t sub_100096798()
{
  return sub_10009643C(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1000967A8()
{
  return sub_10009653C(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000967B8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = 0x676E697473697865;
  if (*(unsigned char *)v0) {
    uint64_t v3 = 0x6574736567677573;
  }
  uint64_t v6 = v3;
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v1;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100096860(char a1, uint64_t a2, void *a3, char a4)
{
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = a2;
  v8._object = a3;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 1031365995;
  strcpy((char *)&v26, "<RoomOption ");
  v11._object = (void *)0xE400000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v26._countAndFlagsBits;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v26, "displayValue=");
  HIWORD(v26._object) = -4864;
  if (a1 & 1) != 0 && (a4)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = sub_100007334(v13);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10000EE48(&qword_1000EE398);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1000B0850;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_10003D0C8();
    *(void *)(v15 + 32) = a2;
    *(void *)(v15 + 40) = a3;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v16._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 32;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRetain();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v26, "roomName=");
  WORD1(v26._object) = 0;
  HIDWORD(v26._object) = -385875968;
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 32;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRetain();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v26, "isSuggested=");
  HIWORD(v26._object) = -5120;
  v20._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRetain();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v26, "shouldMark=");
  HIDWORD(v26._object) = -352321536;
  v22._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 32;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  swift_bridgeObjectRetain();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v24._uint64_t countAndFlagsBits = 62;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_100096CF8()
{
  return sub_100096860(*(unsigned char *)v0, *(void *)(v0 + 8), *(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100096D08(uint64_t a1)
{
  AnyHashable.init<A>(_:)();
  sub_10009A238((uint64_t)v11, 0x72206E776F6B6E75, 0xEF656D614E6D6F6FLL, a1);
  swift_bridgeObjectRetain();
  sub_10000F474((uint64_t)v11);
  AnyHashable.init<A>(_:)();
  uint64_t v2 = sub_10009A238((uint64_t)v11, 0x65736C6166, 0xE500000000000000, a1);
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  sub_10000F474((uint64_t)v11);
  if (v2 == 1702195828 && v4 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v5 = v6 & 1;
  }
  AnyHashable.init<A>(_:)();
  uint64_t v7 = sub_10009A238((uint64_t)v11, 1702195828, 0xE400000000000000, a1);
  uint64_t v9 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10000F474((uint64_t)v11);
  if (v7 == 1702195828 && v9 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t destroy for RoomOption()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoomOption(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoomOption(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for RoomOption(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RoomOption(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomOption(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomOption()
{
  return &type metadata for RoomOption;
}

uint64_t sub_1000970F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000F02B0);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000F02B0);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000971BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  Swift::String v11 = (char *)&v38 - v10;
  uint64_t v12 = (objc_class *)type metadata accessor for HomePodSetupProgressViewController();
  v43.receiver = v1;
  v43.super_class = v12;
  [super viewDidLoad];
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess();
  sub_10000FD94(v13, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000F674((uint64_t)v4, &qword_1000EF130);
    if (qword_1000ED888 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000F02B0);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      Swift::String v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupProgress: failed in viewDidLoad because viewModel not set.", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v11);
    Swift::String v18 = &v11[v5[17]];
    if (v18[4]) {
      int v19 = 0;
    }
    else {
      int v19 = *(_DWORD *)v18;
    }
    sub_10009895C(v19);
    uint64_t v20 = String.init(cString:)();
    unint64_t v22 = v21;
    if (qword_1000ED888 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_1000133A0(v23, (uint64_t)qword_1000F02B0);
    sub_1000133D8((uint64_t)v11, (uint64_t)v9);
    swift_bridgeObjectRetain();
    Swift::String v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v42 = v39;
      *(_DWORD *)uint64_t v26 = 136315394;
      id v40 = v1;
      uint64_t v38 = v20;
      uint64_t v28 = *v9;
      unint64_t v27 = v9[1];
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100048718(v28, v27, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001712C((uint64_t)v9);
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100048718(v38, v22, &v42);
      uint64_t v1 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "HomePodSetupProgress: viewDidLoad called with title %s progressEvent=%s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001712C((uint64_t)v9);

      swift_bridgeObjectRelease_n();
    }
    sub_100071BB8((uint64_t)v11);
    sub_100097A3C();
    if ((v11[v5[18]] & 2) == 0 && *(void *)&v11[v5[19] + 8])
    {
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = [v1 dismissalConfirmationActionWithTitle:v29 message:v30 confirmButtonTitle:v31 cancelButtonTitle:v32];

      [v1 setDismissButtonAction:v33];
    }
    NSString v34 = String._bridgeToObjectiveC()();
    NSString v35 = sub_100007334(v34);

    if (!v35)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v1 showActivityIndicatorWithStatus:v35];

    if (v11[v5[16]] == 1 && isInternalBuild())
    {
      id v36 = [self scheduledTimerWithTimeInterval:v1 target:"handleTimer:" selector:0 userInfo:1 repeats:0.1];
      id v37 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_timer];
      *(void *)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_timer] = v36;
    }
    sub_10001712C((uint64_t)v11);
  }
}

uint64_t sub_100097804(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000EE48(&qword_1000F0308);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for HomePodSetupProgressViewController();
  v12.receiver = v2;
  v12.super_class = v7;
  [super viewDidAppear:a1 & 1];
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10007E75C();
    swift_unknownObjectRelease();
  }
  Date.init()();
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = (uint64_t)v2 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate;
  swift_beginAccess();
  sub_1000996DC((uint64_t)v6, v9);
  return swift_endAccess();
}

void sub_100097A14(uint64_t a1)
{
  sub_100071BB8(a1);

  sub_100097A3C();
}

void sub_100097A3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v9, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1000170C8((uint64_t)v4, (uint64_t)v8);
    uint64_t v14 = &v8[*(int *)(v5 + 68)];
    if (v14[4])
    {
      if (qword_1000ED888 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_1000133A0(v15, (uint64_t)qword_1000F02B0);
      os_log_type_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v16, v17))
      {
LABEL_17:

        if (v14[4]) {
          goto LABEL_43;
        }
LABEL_20:
        int v27 = *(_DWORD *)v14;
        if (*(int *)v14 > 199)
        {
          switch(v27)
          {
            case 200:
            case 210:
            case 220:
            case 234:
              goto LABEL_22;
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 231:
            case 232:
            case 233:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
              goto LABEL_43;
            case 230:
              goto LABEL_38;
            case 250:
              [v1 hideActivityIndicator];
              id v32 = [self configurationWithPointSize:40.0];
              NSString v33 = String._bridgeToObjectiveC()();
              id v34 = [self systemImageNamed:v33 withConfiguration:v32];

              NSString v35 = [objc_allocWithZone((Class)UIImageView) initWithImage:v34];
              id v36 = [self systemGreenColor];
              [v35 setTintColor:v36];

              [v1 setBottomTrayImageView:v35];
              goto LABEL_42;
            default:
              if (v27 == 906) {
                goto LABEL_44;
              }
              if (v27 == 913) {
                goto LABEL_22;
              }
              goto LABEL_43;
          }
        }
        if (v27 > 119)
        {
          if (v27 == 120 || v27 == 122) {
            goto LABEL_38;
          }
          if (v27 == 124)
          {
LABEL_44:
            NSString v37 = String._bridgeToObjectiveC()();
            NSString v35 = sub_100007334(v37);

            if (!v35)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v35 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            [v1 showActivityIndicatorWithStatus:v35];
            goto LABEL_42;
          }
        }
        else
        {
          switch(v27)
          {
            case '(':
              goto LABEL_38;
            case '<':
LABEL_22:
              NSString v28 = String._bridgeToObjectiveC()();
              id v29 = sub_100007334(v28);

              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v30 = String._bridgeToObjectiveC()();
              id v31 = sub_100007334(v30);
LABEL_39:
              NSString v35 = v31;

              if (!v35)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)();
                NSString v35 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
              }
              [v1 showActivityIndicatorWithStatus:v35];
              swift_bridgeObjectRelease();
LABEL_42:

              break;
            case 'P':
LABEL_38:
              NSString v30 = String._bridgeToObjectiveC()();
              id v31 = sub_100007334(v30);
              goto LABEL_39;
          }
        }
LABEL_43:
        sub_10001712C((uint64_t)v8);
        return;
      }
      Swift::String v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "HomePodSetupProgressViewController updatetTitleForProgressUI: progressEvent is nil", v18, 2u);
    }
    else
    {
      sub_10009895C(*(_DWORD *)v14);
      uint64_t v19 = String.init(cString:)();
      unint64_t v21 = v20;
      if (qword_1000ED888 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_1000133A0(v22, (uint64_t)qword_1000F02B0);
      swift_bridgeObjectRetain();
      os_log_type_t v16 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v16, v23))
      {

        swift_bridgeObjectRelease_n();
        if (v14[4]) {
          goto LABEL_43;
        }
        goto LABEL_20;
      }
      uint64_t v24 = swift_slowAlloc();
      id v40 = v8;
      os_log_type_t v25 = (uint8_t *)v24;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v39 = v1;
      uint64_t v42 = v26;
      *(_DWORD *)os_log_type_t v25 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100048718(v19, v21, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v23, "HomePodSetupProgressViewController updatetTitleForProgressUI: %s", v25, 0xCu);
      swift_arrayDestroy();
      uint64_t v1 = v39;
      swift_slowDealloc();
      uint64_t v8 = v40;
    }
    swift_slowDealloc();
    goto LABEL_17;
  }
  sub_10000F674((uint64_t)v4, &qword_1000EF130);
  [v1 hideActivityIndicator];
  if (qword_1000ED888 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000133A0(v10, (uint64_t)qword_1000F02B0);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "HomePodSetupProgress: failed to updatet progress UI because viewModel not set.", v13, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100098758()
{
  return sub_10000F674(v0 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate, &qword_1000F0308);
}

id sub_100098794()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupProgressViewController();
  return [super dealloc];
}

uint64_t sub_100098814()
{
  return type metadata accessor for HomePodSetupProgressViewController();
}

uint64_t type metadata accessor for HomePodSetupProgressViewController()
{
  uint64_t result = qword_1000F02F0;
  if (!qword_1000F02F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100098868()
{
  sub_100098904();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100098904()
{
  if (!qword_1000F0300)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F0300);
    }
  }
}

const char *sub_10009895C(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        uint64_t result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        uint64_t result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        uint64_t result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        uint64_t result = "SU-No-SetupCancelled";
        break;
      case 904:
        uint64_t result = "SU-No-SetupObliterate";
        break;
      case 905:
        uint64_t result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        uint64_t result = "SysDrop AirDrop Event";
        break;
      case 907:
        uint64_t result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        uint64_t result = "SysDrop Cancel Event";
        break;
      case 909:
        uint64_t result = "File Transfer Progress Event";
        break;
      case 910:
        uint64_t result = "File Transfer Completed Event";
        break;
      case 911:
        uint64_t result = "iOSWiFiSetup";
        break;
      case 912:
        uint64_t result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        uint64_t result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            uint64_t result = "AuthAccountsStart";
            break;
          case 803:
            uint64_t result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            uint64_t result = "AuthAccountsStoreProgress";
            break;
          case 805:
            uint64_t result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          uint64_t result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          uint64_t result = "TVLSFinish";
          break;
        case 270:
          uint64_t result = "TVLSEstimateStart";
          break;
        case 272:
          uint64_t result = "TVLSEstimateFinal";
          break;
        case 274:
          uint64_t result = "TVLSEstimateFailed";
          break;
        case 276:
          uint64_t result = "TVLSTryAgain";
          break;
        case 277:
          uint64_t result = "TVLSToneBegan";
          break;
        case 278:
          uint64_t result = "TVLCalStart";
          break;
        case 279:
          uint64_t result = "TVLCalStep";
          break;
        case 280:
          uint64_t result = "TVLCalFailed";
          break;
        case 281:
          uint64_t result = "TVLCalTryAgain";
          break;
        case 282:
          uint64_t result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          uint64_t result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            uint64_t result = "iCloudStart";
          }
          else
          {
            if (a1 != 224) {
              return "?";
            }
            uint64_t result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }
        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              uint64_t result = "Error";
              break;
            case 31:
              uint64_t result = "SessionStarted";
              break;
            case 32:
              uint64_t result = "SessionEnded";
              break;
            case 33:
              uint64_t result = "SessionSecured";
              break;
            case 35:
              uint64_t result = "ConnectStart";
              break;
            case 40:
              uint64_t result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        uint64_t result = "BasicConfigStart";
        break;
      case 'Z':
        uint64_t result = "BasicConfigFinish";
        break;
      case '\\':
        uint64_t result = "StepStart";
        break;
      case '^':
        uint64_t result = "StepFinish";
        break;
      case '_':
        uint64_t result = "PreFinish";
        break;
        uint64_t result = "SetupFinished";
        break;
      case 'a':
        uint64_t result = "SetupResumed";
        break;
      case 'b':
        uint64_t result = "SetupSuspend";
        break;
      case 'c':
        uint64_t result = "SetupPeerSWUpdate";
        break;
      case 'd':
        uint64_t result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_100099274()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HomePodSetupViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v29 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000EE48(&qword_1000F0308);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  NSString v28 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v16 = (char *)&v27 - v15;
  uint64_t v17 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate;
  swift_beginAccess();
  sub_10000FD94(v17, (uint64_t)v10, &qword_1000F0308);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10000F674((uint64_t)v10, &qword_1000F0308);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
  uint64_t v19 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess();
  sub_10000FD94(v19, (uint64_t)v4, &qword_1000EF130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    return sub_10000F674((uint64_t)v4, &qword_1000EF130);
  }
  uint64_t v20 = v29;
  sub_1000170C8((uint64_t)v4, v29);
  if (*(unsigned char *)(v20 + *(int *)(v5 + 64)) != 1 || !isInternalBuild())
  {
    sub_10001712C(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  uint64_t v31 = 0x3A64657370616C45;
  unint64_t v32 = 0xE900000000000020;
  unint64_t v21 = v28;
  Date.init()();
  Date.timeIntervalSince(_:)();
  double v23 = v22;
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t result = v24(v21, v11);
  if ((~*(void *)&v23 & 0x7FF0000000000000) != 0)
  {
    if (v23 > -9.22337204e18)
    {
      if (v23 < 9.22337204e18)
      {
        uint64_t v30 = (uint64_t)v23;
        v25._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v1 setSubtitle:v26];

        sub_10001712C(v20);
        return v24(v16, v11);
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1000996DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000F0308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100099744()
{
  if ([v0 _remoteViewControllerProxy])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_100063D54((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    sub_10000EE48(&qword_1000EF3E8);
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100099B5C((uint64_t)v4);
    return 0;
  }
}

void *sub_100099800(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for BaseProxFlowViewController();
  [super viewDidAppear:a1 & 1];
  uint64_t v3 = (void *)sub_100099744();
  if (v3)
  {
    [v3 setStatusBarHidden:1 withDuration:0.3];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = (void *)sub_100099744();
  if (v4)
  {
    [v4 setAllowsBanners:1];
    swift_unknownObjectRelease();
  }
  uint64_t result = (void *)sub_100099744();
  if (result)
  {
    [result setDesiredHardwareButtonEvents:16 * (SFDeviceHomeButtonType() != 3)];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_100099B04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseProxFlowViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseProxFlowViewController()
{
  return self;
}

uint64_t sub_100099B5C(uint64_t a1)
{
  uint64_t v2 = sub_10000EE48(&qword_1000EE410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100099C08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupDoneViewController();
  [super dealloc];
}

uint64_t sub_100099C40()
{
  return type metadata accessor for HomePodSetupDoneViewController();
}

uint64_t type metadata accessor for HomePodSetupDoneViewController()
{
  uint64_t result = qword_1000F0360;
  if (!qword_1000F0360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100099C94()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100099CCC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [*v0 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v11[0] = 0x5F656D6F68;
  v11[1] = 0xE500000000000000;
  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  return v11[0];
}

uint64_t sub_100099DF8(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = 1031365995;
  v38[1] = 0xE400000000000000;
  id v6 = [a1 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = UUID.uuidString.getter();
  Swift::String v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v36 = 0x5F656D6F68;
  unint64_t v37 = 0xE500000000000000;
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = v38[0];
  uint64_t v14 = (void *)v38[1];
  strcpy((char *)v38, "<HomeOption ");
  BYTE5(v38[1]) = 0;
  HIWORD(v38[1]) = -5120;
  v13._object = v14;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = v38[0];
  uint64_t v15 = v38[1];
  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v38, "displayValue=");
  HIWORD(v38[1]) = -4864;
  id v17 = [a1 name];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  uint64_t v36 = v18;
  unint64_t v37 = v20;
  v21._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  uint64_t v23 = v38[0];
  uint64_t v24 = (void *)v38[1];
  v38[0] = v16;
  v38[1] = v15;
  swift_bridgeObjectRetain();
  v25._uint64_t countAndFlagsBits = v23;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v38[0];
  uint64_t v26 = v38[1];
  v38[0] = 0x3D656D6F68;
  v38[1] = 0xE500000000000000;
  uint64_t v36 = (uint64_t)a1;
  sub_10009A120();
  id v28 = a1;
  v29._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  uint64_t v31 = v38[0];
  unint64_t v32 = (void *)v38[1];
  v38[0] = v27;
  v38[1] = v26;
  swift_bridgeObjectRetain();
  v33._uint64_t countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v34._uint64_t countAndFlagsBits = 62;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  return v38[0];
}

uint64_t sub_10009A118()
{
  return sub_100099DF8(*v0);
}

unint64_t sub_10009A120()
{
  unint64_t result = qword_1000F0370;
  if (!qword_1000F0370)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000F0370);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeOption()
{
  return &type metadata for HomeOption;
}

uint64_t sub_10009A170()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000F0378);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000F0378);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10009A238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    unint64_t v7 = sub_10005513C(a1);
    if (v8) {
      return *(void *)(*(void *)(a4 + 56) + 16 * v7);
    }
  }
  if (qword_1000ED890 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000133A0(v9, (uint64_t)qword_1000F0378);
  sub_100015310(a1, (uint64_t)v21);
  swift_bridgeObjectRetain_n();
  Swift::String v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v13 = AnyHashable.description.getter();
    sub_100048718(v13, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000F474((uint64_t)v21);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v15 = Dictionary.description.getter();
    uint64_t v16 = a2;
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_100048718(v15, v18, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a2 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Couldn't get value for key \"%s\" from %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000F474((uint64_t)v21);

    swift_bridgeObjectRelease_n();
  }
  return a2;
}

uint64_t sub_10009A4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10009A50C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001343C(v0, qword_1000F0390);
  uint64_t v1 = sub_1000133A0(v0, (uint64_t)qword_1000F0390);
  if (qword_1000ED7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000133A0(v0, (uint64_t)qword_1000F3BD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10009A5D4()
{
  uint64_t v1 = *(void **)(v0 + 64);
  if (v1)
  {
    id v2 = *(id *)(v0 + 64);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)CUSystemMonitor) init];
    uint64_t v4 = *(void **)(v0 + 64);
    *(void *)(v0 + 64) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_10009A640()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    id v2 = *(id *)(v0 + 72);
  }
  else
  {
    id v3 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 initWithSuiteName:v4];

    if (!v5) {
      id v5 = [self standardUserDefaults];
    }
    id v6 = *(void **)(v0 + 72);
    *(void *)(v0 + 72) = v5;
    id v2 = v5;

    uint64_t v1 = 0;
  }
  id v7 = v1;
  return v2;
}

uint64_t *sub_10009A704(uint64_t a1)
{
  id v2 = v1;
  uint64_t v44 = *v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0x4072C00000000000;
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  *((unsigned char *)v1 + 56) = 0;
  v1[8] = 0;
  v1[9] = 0;
  v1[12] = 0;
  v1[13] = 0;
  v1[11] = 0;
  *((unsigned char *)v1 + 112) = 1;
  swift_unknownObjectWeakInit();
  v1[17] = 0;
  v1[19] = (uint64_t)&_swiftEmptySetSingleton;
  *((unsigned char *)v1 + 160) = 0;
  *((_DWORD *)v1 + 41) = 0;
  v1[21] = (uint64_t)[objc_allocWithZone((Class)AppleMusicServiceUtilities) init];
  *((_WORD *)v1 + 88) = 0;
  type metadata accessor for HomePodSetupModel();
  swift_allocObject();
  uint64_t v8 = swift_bridgeObjectRetain();
  v1[6] = sub_10004D408(v8);
  v1[18] = (uint64_t)[objc_allocWithZone((Class)SFDeviceAssetManager) init];
  unint64_t result = (uint64_t *)[self defaultStore];
  if (!result)
  {
    __break(1u);
    return result;
  }
  Swift::String v10 = result;
  id v11 = [result aa_primaryAppleAccount];

  if (v11)
  {
    id v12 = [v11 username];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      uint64_t v17 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0) {
        uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
      }
      if (v17)
      {
        uint64_t v18 = v2[6];
        *(void *)(v18 + 16) = v14;
        *(void *)(v18 + 24) = v16;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v19 = v2[6];
  swift_retain();
  *(void *)(v19 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks) = mach_absolute_time();
  swift_release();
  uint64_t v20 = v2[6];
  swift_retain();
  *(unsigned char *)(v20 + 69) = sub_100007294();
  swift_release();
  if (IsAppleInternalBuild())
  {
    uint64_t v46 = 0x6172615074736574;
    unint64_t v47 = 0xEA0000000000736DLL;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a1 + 16) && (unint64_t v21 = sub_10005513C((uint64_t)aBlock), (v22 & 1) != 0))
    {
      sub_10000F578(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v48);
    }
    else
    {
      long long v48 = 0u;
      long long v49 = 0u;
    }
    sub_10000F474((uint64_t)aBlock);
    if (*((void *)&v49 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v24 = v46;
        uint64_t v23 = v47;
LABEL_19:
        if (qword_1000ED740 != -1) {
          swift_once();
        }
        sub_10003EDD8(v24, v23);
        swift_bridgeObjectRelease();
        sub_100040780(a1);
        goto LABEL_22;
      }
    }
    else
    {
      sub_10000F674((uint64_t)&v48, &qword_1000EE410);
    }
    uint64_t v24 = 0;
    uint64_t v23 = 0xE000000000000000;
    goto LABEL_19;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  id v25 = [objc_allocWithZone((Class)HDSSetupSession) init];
  v2[10] = (uint64_t)v25;
  type metadata accessor for HomePodSetupPreAuthFetcher();
  swift_allocObject();
  id v26 = v25;
  uint64_t v27 = sub_100014F78(v26);

  v2[16] = v27;
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_1000142C8((uint64_t)sub_1000A923C, v28);
  swift_release();
  swift_release_n();
  id v29 = [objc_allocWithZone((Class)SFDevice) init];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v4);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [v29 setIdentifier:isa];

  [v29 setOsVersion:*(unsigned __int8 *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_osVersion)];
  [v29 setDeviceModelCode:*(unsigned __int8 *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode)];
  sub_10009AFC4((uint64_t)v29);
  [(id)v2[10] preflight];
  if (IsAppleInternalBuild())
  {
    if (*(unsigned char *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor))
    {
      LOBYTE(aBlock[0]) = *(unsigned char *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
      unint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10009C70C(v31, v32);
      swift_bridgeObjectRelease();
    }
    if (qword_1000ED740 != -1) {
      swift_once();
    }
    unint64_t v33 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
    uint64_t v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0) {
      uint64_t v34 = *(void *)(qword_1000F3968 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode) & 0xFFFFFFFFFFFFLL;
    }
    if (v34)
    {
      id v35 = (id)v2[10];
      swift_bridgeObjectRetain();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v35 forcePassCode:v36];
    }
  }
  unint64_t v37 = (void *)v2[21];
  uint64_t v38 = swift_allocObject();
  swift_weakInit();
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v44;
  *(void *)(v39 + 16) = v38;
  *(void *)(v39 + 24) = v40;
  aBlock[4] = sub_1000A927C;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10009A4B8;
  aBlock[3] = &unk_1000DDAD8;
  uint64_t v41 = _Block_copy(aBlock);
  id v42 = v37;
  swift_release();
  [v42 serviceEnabled:v41];
  _Block_release(v41);

  return v2;
}

uint64_t sub_10009AE48(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = v2;
    uint64_t v10 = *(void *)(Strong + 48);
    swift_retain();
    swift_release();
    id v11 = (void *)(v10 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    uint64_t v12 = v3;
    uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    uint64_t v14 = *(void *)(v10 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
    void *v11 = v19;
    v11[1] = v12;
    void v11[2] = v4;
    _OWORD v11[3] = v5;
    v11[4] = v6;
    v11[5] = v7;
    v11[6] = v8;
    sub_100015228((uint64_t)a1);
    sub_100015274(v13, v14);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = *(void *)(result + 48);
    swift_retain();
    swift_release();
    uint64_t v17 = a1[1];
    uint64_t v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
    uint64_t *v18 = *a1;
    v18[1] = v17;
    swift_bridgeObjectRetain();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10009AFC4(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 80);
  sub_10000EE48(&qword_1000EDA18);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B0850;
  uint64_t v136 = 0x734D67697274;
  unint64_t v137 = 0xE600000000000000;
  id v5 = v3;
  AnyHashable.init<A>(_:)();
  uint64_t v6 = 1000 * *(int *)(*(void *)(v1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_triggerSeconds);
  if (v6 == (int)v6)
  {
    *(void *)(v4 + 96) = &type metadata for Int32;
    *(_DWORD *)(v4 + 72) = v6;
    sub_10000D968(v4);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 setAdditionalMetrics:isa, v136, v137];

    [*(id *)(v1 + 80) setPeerDevice:a1];
    [*(id *)(v1 + 80) setTestFlags:0];
    [*(id *)(v1 + 80) setTouchRemoteEnabled:1];
    uint64_t v8 = *(void **)(v1 + 80);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    [v8 setPresentingViewController:Strong];

    uint64_t v10 = *(void **)(v1 + 80);
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9284;
    uint64_t v141 = v11;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A10B0;
    char v139 = &unk_1000DDB00;
    uint64_t v12 = _Block_copy(&v136);
    id v13 = v10;
    swift_release();
    [v13 setProgressHandler:v12];
    _Block_release(v12);

    id v14 = [*(id *)(v1 + 80) sysDropSession];
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A92A8;
    uint64_t v141 = v15;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A10B0;
    char v139 = &unk_1000DDB28;
    uint64_t v16 = _Block_copy(&v136);
    swift_release();
    [v14 setProgressHandler:v16];
    _Block_release(v16);

    id v17 = [*(id *)(v1 + 80) sysDropSession];
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A92CC;
    uint64_t v141 = v18;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A157C;
    char v139 = &unk_1000DDB50;
    uint64_t v19 = _Block_copy(&v136);
    swift_release();
    [v17 setSysdropFinishedHandler:v19];
    _Block_release(v19);

    uint64_t v20 = *(void **)(v1 + 80);
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A92D4;
    uint64_t v141 = v21;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A17A8;
    char v139 = &unk_1000DDB78;
    char v22 = _Block_copy(&v136);
    id v23 = v20;
    swift_release();
    [v23 setPromptForAppleMusicHandler:v22];
    _Block_release(v22);

    uint64_t v24 = *(void **)(v1 + 80);
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A92DC;
    uint64_t v141 = v25;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A1AE0;
    char v139 = &unk_1000DDBA0;
    id v26 = _Block_copy(&v136);
    id v27 = v24;
    swift_release();
    [v27 setPromptForHomeHandler:v26];
    _Block_release(v26);

    uint64_t v28 = *(void **)(v1 + 80);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A92E4;
    uint64_t v141 = v29;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDBC8;
    Swift::String v30 = _Block_copy(&v136);
    id v31 = v28;
    swift_release();
    [v31 setPromptForHomeiCloudHandler:v30];
    _Block_release(v30);

    unint64_t v32 = *(void **)(v1 + 80);
    uint64_t v33 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9310;
    uint64_t v141 = v33;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDBF0;
    uint64_t v34 = _Block_copy(&v136);
    id v35 = v32;
    swift_release();
    [v35 setPromptForiTunesSignInHandler:v34];
    _Block_release(v34);

    NSString v36 = *(void **)(v1 + 80);
    uint64_t v37 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A933C;
    uint64_t v141 = v37;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_10009A4B8;
    char v139 = &unk_1000DDC18;
    uint64_t v38 = _Block_copy(&v136);
    id v39 = v36;
    swift_release();
    [v39 setPromptForLocationAlreadyEnabledHandler:v38];
    _Block_release(v38);

    uint64_t v40 = *(void **)(v1 + 80);
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9344;
    uint64_t v141 = v41;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDC40;
    id v42 = _Block_copy(&v136);
    id v43 = v40;
    swift_release();
    [v43 setPromptForLocationEnableHandler:v42];
    _Block_release(v42);

    uint64_t v44 = *(void **)(v1 + 80);
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9370;
    uint64_t v141 = v45;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDC68;
    uint64_t v46 = _Block_copy(&v136);
    id v47 = v44;
    swift_release();
    [v47 setPromptForPersonalRequestsHandler:v46];
    _Block_release(v46);

    long long v48 = *(void **)(v1 + 80);
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9378;
    uint64_t v141 = v49;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A1FDC;
    char v139 = &unk_1000DDC90;
    id v50 = _Block_copy(&v136);
    id v51 = v48;
    swift_release();
    [v51 setPromptForPINHandler:v50];
    _Block_release(v50);

    id v52 = *(void **)(v1 + 80);
    uint64_t v53 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9380;
    uint64_t v141 = v53;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A25E4;
    char v139 = &unk_1000DDCB8;
    id v54 = _Block_copy(&v136);
    id v55 = v52;
    swift_release();
    [v55 setPromptForRoomHandlerDetailed:v54];
    _Block_release(v54);

    id v56 = *(void **)(v1 + 80);
    uint64_t v57 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9388;
    uint64_t v141 = v57;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDCE0;
    id v58 = _Block_copy(&v136);
    id v59 = v56;
    swift_release();
    [v59 setPromptForSiriEnableHandler:v58];
    _Block_release(v58);

    id v60 = *(void **)(v1 + 80);
    uint64_t v61 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9390;
    uint64_t v141 = v61;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A2B88;
    char v139 = &unk_1000DDD08;
    id v62 = _Block_copy(&v136);
    id v63 = v60;
    swift_release();
    [v63 setPromptForSiriLanguageHandler:v62];
    _Block_release(v62);

    id v64 = *(void **)(v1 + 80);
    uint64_t v65 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9398;
    uint64_t v141 = v65;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDD30;
    uint64_t v66 = _Block_copy(&v136);
    id v67 = v64;
    swift_release();
    [v67 setPromptForTermsHandler:v66];
    _Block_release(v66);

    id v68 = *(void **)(v1 + 80);
    uint64_t v69 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A93C0;
    uint64_t v141 = v69;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDD58;
    uint64_t v70 = _Block_copy(&v136);
    id v71 = v68;
    swift_release();
    [v71 setPromptForTermsAndConditionsV2Disagree:v70];
    _Block_release(v70);

    id v72 = *(void **)(v1 + 80);
    uint64_t v73 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A93C8;
    uint64_t v141 = v73;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDD80;
    unint64_t v74 = _Block_copy(&v136);
    id v75 = v72;
    swift_release();
    [v75 setPromptForHomePodSoftwareUpdateNonSetupAck:v74];
    _Block_release(v74);

    id v76 = *(void **)(v1 + 80);
    uint64_t v77 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A93F0;
    uint64_t v141 = v77;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDDA8;
    uint64_t v78 = _Block_copy(&v136);
    id v79 = v76;
    swift_release();
    [v79 setPromptForHomePodSoftwareUpdateNonSetupCompleted:v78];
    _Block_release(v78);

    uint64_t v80 = *(void **)(v1 + 80);
    uint64_t v81 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9418;
    uint64_t v141 = v81;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDDD0;
    id v82 = _Block_copy(&v136);
    id v83 = v80;
    swift_release();
    [v83 setPromptForHomePodSoftwareUpdateNonSetupCancelled:v82];
    _Block_release(v82);

    id v84 = *(void **)(v1 + 80);
    uint64_t v85 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9440;
    uint64_t v141 = v85;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDDF8;
    id v86 = _Block_copy(&v136);
    id v87 = v84;
    swift_release();
    [v87 setPromptForSoundRecognitionHandler:v86];
    _Block_release(v86);

    id v88 = *(void **)(v1 + 80);
    uint64_t v89 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9468;
    uint64_t v141 = v89;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDE20;
    id v90 = _Block_copy(&v136);
    id v91 = v88;
    swift_release();
    [v91 setPromptForAutomaticSoftwareUpdateHandler:v90];
    _Block_release(v90);

    id v92 = *(void **)(v1 + 80);
    uint64_t v93 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9490;
    uint64_t v141 = v93;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDE48;
    uint64_t v94 = _Block_copy(&v136);
    id v95 = v92;
    swift_release();
    [v95 setPromptForSoftwareUpdateHandler:v94];
    _Block_release(v94);

    uint64_t v96 = *(void **)(v1 + 80);
    uint64_t v97 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A94B8;
    uint64_t v141 = v97;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDE70;
    uint64_t v98 = _Block_copy(&v136);
    id v99 = v96;
    swift_release();
    [v99 setPromptForCaptiveNetworkHandler:v98];
    _Block_release(v98);

    objc_super v100 = *(void **)(v1 + 80);
    uint64_t v101 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A94E0;
    uint64_t v141 = v101;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDE98;
    uint64_t v102 = _Block_copy(&v136);
    id v103 = v100;
    swift_release();
    [v103 setPromptForTVAudioHandler:v102];
    _Block_release(v102);

    id v104 = *(void **)(v1 + 80);
    uint64_t v105 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9508;
    uint64_t v141 = v105;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDEC0;
    id v106 = _Block_copy(&v136);
    id v107 = v104;
    swift_release();
    [v107 setPromptToInstallHomeAppHandler:v106];
    _Block_release(v106);

    uint64_t v108 = *(void **)(v1 + 80);
    uint64_t v109 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9534;
    uint64_t v141 = v109;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A30CC;
    char v139 = &unk_1000DDEE8;
    char v110 = _Block_copy(&v136);
    id v111 = v108;
    swift_release();
    [v111 setPromptToShareSettingsHandler:v110];
    _Block_release(v110);

    uint64_t v112 = *(void **)(v1 + 80);
    uint64_t v113 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A953C;
    uint64_t v141 = v113;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDF10;
    char v114 = _Block_copy(&v136);
    id v115 = v112;
    swift_release();
    [v115 setPromptForStereoRoleHandler:v114];
    _Block_release(v114);

    uint64_t v116 = *(void **)(v1 + 80);
    uint64_t v117 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9544;
    uint64_t v141 = v117;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A3578;
    char v139 = &unk_1000DDF38;
    uint64_t v118 = _Block_copy(&v136);
    id v119 = v116;
    swift_release();
    [v119 setPromptForStereoMultipleHandler:v118];
    _Block_release(v118);

    char v120 = *(void **)(v1 + 80);
    uint64_t v121 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A954C;
    uint64_t v141 = v121;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_10009A4B8;
    char v139 = &unk_1000DDF60;
    uint64_t v122 = _Block_copy(&v136);
    id v123 = v120;
    swift_release();
    [v123 setPromptForVoiceRecognitionHandler:v122];
    _Block_release(v122);

    uint64_t v124 = *(void **)(v1 + 80);
    uint64_t v125 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9554;
    uint64_t v141 = v125;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A397C;
    char v139 = &unk_1000DDF88;
    id v126 = _Block_copy(&v136);
    id v127 = v124;
    swift_release();
    [v127 setPromptForSiriVoiceSelectionHandler:v126];
    _Block_release(v126);

    uint64_t v128 = *(void **)(v1 + 80);
    uint64_t v129 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A955C;
    uint64_t v141 = v129;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_100089B18;
    char v139 = &unk_1000DDFB0;
    char v130 = _Block_copy(&v136);
    id v131 = v128;
    swift_release();
    [v131 setPromptForLoggingProfileTransferAck:v130];
    _Block_release(v130);

    uint64_t v132 = *(void **)(v1 + 80);
    uint64_t v133 = swift_allocObject();
    swift_weakInit();
    id v140 = sub_1000A9584;
    uint64_t v141 = v133;
    uint64_t v136 = (uint64_t)_NSConcreteStackBlock;
    unint64_t v137 = 1107296256;
    uint64_t v138 = sub_1000A157C;
    char v139 = &unk_1000DDFD8;
    char v134 = _Block_copy(&v136);
    id v135 = v132;
    swift_release();
    [v135 setDeviceColorFoundHandler:v134];
    _Block_release(v134);
  }
  else
  {
    __break(1u);
  }
}

void sub_10009C70C(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(*(void *)(v2 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) != 5) {
    return;
  }
  uint64_t v6 = HIBYTE(a2) & 0xF;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  if (!((a2 & 0x2000000000000000) != 0 ? v6 : a1 & 0xFFFFFFFFFFFFLL)) {
    return;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000A6128(a1, a2, 10);
    swift_bridgeObjectRelease();
    if ((v10 & 0x100) != 0) {
      return;
    }
    goto LABEL_36;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v10 = (uint64_t)sub_100053324(v9, v7, 10);
    if ((v10 >> 8)) {
      return;
    }
    goto LABEL_36;
  }
  long long aBlock = (void **)a1;
  uint64_t v37 = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (v6)
    {
      if (v6 == 1) {
        return;
      }
      uint64_t v10 = (a1 >> 8) - 48;
      if ((BYTE1(a1) - 48) > 9u) {
        return;
      }
      if (v6 == 2) {
        goto LABEL_36;
      }
      if ((BYTE2(a1) - 48) > 9u) {
        return;
      }
      uint64_t v10 = (a1 >> 16) - 48 + 10 * v10;
      uint64_t v11 = v6 - 3;
      if (v6 == 3) {
        goto LABEL_36;
      }
      uint64_t v12 = (unsigned __int8 *)&aBlock + 3;
      while (1)
      {
        unsigned int v13 = *v12 - 48;
        if (v13 > 9) {
          break;
        }
        if (((10 * v10) & 0xF00) != 0) {
          break;
        }
        uint64_t v10 = (10 * v10) + v13;
        if ((v10 >> 8)) {
          break;
        }
        ++v12;
        if (!--v11) {
          goto LABEL_36;
        }
      }
      return;
    }
LABEL_70:
    __break(1u);
    return;
  }
  if (a1 != 45)
  {
    if (!v6) {
      return;
    }
    uint64_t v10 = (a1 - 48);
    if ((a1 - 48) > 9u) {
      return;
    }
    if (v6 == 1) {
      goto LABEL_36;
    }
    if ((BYTE1(a1) - 48) > 9u) {
      return;
    }
    uint64_t v10 = (a1 >> 8) - 48 + 10 * v10;
    uint64_t v30 = v6 - 2;
    if (v6 == 2) {
      goto LABEL_36;
    }
    id v31 = (unsigned __int8 *)&aBlock + 2;
    while (1)
    {
      unsigned int v32 = *v31 - 48;
      if (v32 > 9) {
        break;
      }
      if (((10 * v10) & 0xF00) != 0) {
        break;
      }
      uint64_t v10 = (10 * v10) + v32;
      if ((v10 >> 8)) {
        break;
      }
      ++v31;
      if (!--v30) {
        goto LABEL_36;
      }
    }
    return;
  }
  if (!v6)
  {
    __break(1u);
    goto LABEL_70;
  }
  if (v6 == 1 || (BYTE1(a1) - 48) > 9u || (-(BYTE1(a1) - 48) & 0xFFFFFF00) != 0) {
    return;
  }
  if (v6 == 2)
  {
    uint64_t v10 = -(BYTE1(a1) - 48);
LABEL_36:
    swift_beginAccess();
    if (!sub_1000A4F04(v10, *(void *)(v3 + 152)))
    {
      if ((*(unsigned char *)(v3 + 160) & 1) == 0)
      {
        *(unsigned char *)(v3 + 160) = 1;
        [*(id *)(v3 + 144) activate];
      }
      if (qword_1000ED898 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_1000133A0(v14, (uint64_t)qword_1000F0390);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        id v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v17 = 16777472;
        LOBYTE(aBlock) = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Found device with color: %hhu", v17, 5u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      sub_1000A620C(&v42, v10);
      swift_endAccess();
      id v18 = [objc_allocWithZone((Class)SFDeviceAssetQuery) initWithSingleHomePodColor:v10 version:5];
      uint64_t v19 = swift_allocObject();
      swift_weakInit();
      uint64_t v20 = swift_allocObject();
      *(unsigned char *)(v20 + 16) = v10;
      *(void *)(v20 + 24) = v19;
      id v21 = objc_allocWithZone((Class)SFDeviceAssetRequestConfiguration);
      uint64_t v40 = sub_1000A9210;
      uint64_t v41 = v20;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_1000A5B68;
      id v39 = &unk_1000DDA38;
      char v22 = _Block_copy(&aBlock);
      swift_retain();
      id v23 = [v21 initWithQueryResultHandler:v22];
      _Block_release(v22);
      swift_release();
      swift_release();
      uint64_t v24 = swift_allocObject();
      swift_weakInit();
      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = v10;
      *(void *)(v25 + 24) = v24;
      uint64_t v40 = sub_1000A921C;
      uint64_t v41 = v25;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_1000A5ADC;
      id v39 = &unk_1000DDA88;
      id v26 = _Block_copy(&aBlock);
      swift_release();
      [v23 setDownloadCompletionHandler:v26];
      _Block_release(v26);
      id v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 16777472;
        LOBYTE(aBlock) = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Starting single stereo image lookup for %hhu", v29, 5u);
        swift_slowDealloc();
      }

      [*(id *)(v3 + 144) getAssetBundleForDeviceQuery:v18 withRequestConfiguration:v23];
    }
    return;
  }
  if ((BYTE2(a1) - 48) > 9u) {
    return;
  }
  if (((10 * (48 - BYTE1(a1))) & 0xF00) != 0) {
    return;
  }
  uint64_t v10 = (10 * (48 - BYTE1(a1))) - (BYTE2(a1) - 48);
  if ((v10 & 0xFFFFFF00) != 0) {
    return;
  }
  uint64_t v33 = v6 - 3;
  if (v6 == 3) {
    goto LABEL_36;
  }
  uint64_t v34 = (unsigned __int8 *)&aBlock + 3;
  while (1)
  {
    unsigned int v35 = *v34 - 48;
    if (v35 > 9) {
      break;
    }
    if (((10 * v10) & 0xF00) != 0) {
      break;
    }
    uint64_t v10 = (10 * v10) - v35;
    if ((v10 & 0xFFFFFF00) != 0) {
      break;
    }
    ++v34;
    if (!--v33) {
      goto LABEL_36;
    }
  }
}

uint64_t sub_10009CE30(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    id v4 = sub_10009A640();
    NSString v5 = String._bridgeToObjectiveC()();
    unsigned int v6 = [v4 BOOLForKey:v5];

    if (v6)
    {
      if (qword_1000ED898 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_1000133A0(v7, (uint64_t)qword_1000F0390);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupInteractor: forceMusicSubscription is true", v10, 2u);
        swift_slowDealloc();
      }

      a1 = 1;
    }
    uint64_t v11 = *(void *)(v3 + 48);
    swift_retain();
    swift_release();
    *(unsigned char *)(v11 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) = a1 & 1;
    return swift_release();
  }
  return result;
}

void sub_10009CFC8()
{
  uint64_t v1 = v0;
  *(unsigned char *)(v0 + 160) = 1;
  [*(id *)(v0 + 144) activate];
  [*(id *)(v0 + 80) setPauseAfterPreAuth:0];
  uint64_t v2 = *(void **)(v0 + 80);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  [v2 setPresentingViewController:Strong];

  [*(id *)(v1 + 80) activate];
  id v4 = sub_10009A5D4();
  [v4 setMeDeviceUseFindMyLocate:1];

  id v5 = sub_10009A5D4();
  aBlock[4] = (uint64_t)nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_100089B18;
  aBlock[3] = (uint64_t)&unk_1000DD9E8;
  unsigned int v6 = _Block_copy(aBlock);
  [v5 setMeDeviceChangedHandler:v6];
  _Block_release(v6);

  id v7 = sub_10009A5D4();
  [v7 activateWithCompletion:0];

  if ((*(unsigned char *)(*(void *)(v1 + 48) + 68) & 1) == 0) {
    [*(id *)(v1 + 80) skipAudioPasscode];
  }
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000133A0(v8, (uint64_t)qword_1000F0390);
  swift_retain_n();
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_100048718(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "HomePodSetupInteractor sessionStart device color %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  LOBYTE(aBlock[0]) = *(unsigned char *)(*(void *)(v1 + 48)
                               + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  unint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
  sub_10009C70C(v14, v15);
  swift_bridgeObjectRelease();
  sub_10009F734();
}

uint64_t sub_10009D32C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000F0390);
  swift_retain_n();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    os_log_type_t v16 = *(void **)(v3 + 80);
    id v11 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v10 = v16;
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupInteractor: preAuth requested for session: %@", v9, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  unint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  swift_retain();
  swift_retain();
  char v14 = sub_1000142C8((uint64_t)sub_1000A91BC, (uint64_t)v13);
  swift_release();
  swift_release();
  return v14 & 1;
}

uint64_t sub_10009D574(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v19 = a1[6];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = v5;
    uint64_t v12 = *(void *)(Strong + 48);
    swift_retain();
    swift_release();
    unint64_t v13 = (void *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    uint64_t v14 = v6;
    uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    uint64_t v16 = *(void *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
    void *v13 = v18;
    v13[1] = v14;
    _OWORD v13[2] = v7;
    v13[3] = v8;
    v13[4] = v9;
    void v13[5] = v10;
    void v13[6] = v19;
    sub_100015228((uint64_t)a1);
    sub_100015274(v15, v16);
    swift_release();
  }
  return a3(a1);
}

void sub_10009D6B0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(*(void *)(v2 + 48) + 40)) {
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_1000A8D2C(v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v7 = *(id *)(v6 + 32);
  }
  id v8 = v7;
  swift_bridgeObjectRelease();
  [*(id *)(v2 + 80) homeKitSelectHome:v8];
}

void sub_10009D7FC()
{
  id v1 = *(id *)(v0 + 80);
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 homeKitSelectRoom:v2];

  uint64_t v3 = *(void *)(v0 + 48);
  id v4 = *(void **)(v0 + 80);
  swift_retain();
  unsigned __int8 v5 = [v4 acceptedMusicTerms];
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) = v5;
  swift_release();
  id v6 = [*(id *)(v0 + 80) selectedHome];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)(v0 + 48);
    swift_retain();
    unsigned __int8 v9 = [v7 isUpdatedToROAR];
    *(unsigned char *)(v8 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) = v9;
    swift_release();
    uint64_t v10 = *(void *)(v0 + 48);
    swift_retain();
    unsigned __int8 v11 = [v7 isLocationServicesEnabled];
    *(unsigned char *)(v10 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled) = v11;
    swift_release();
    uint64_t v12 = *(void *)(v0 + 48);
    swift_retain();
    sub_1000A8EE8(v7);
    *(unsigned char *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods) = v13 & 1;
    swift_release();
    uint64_t v14 = *(void *)(v0 + 48);
    swift_retain();
    id v15 = [v7 name];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    uint64_t v19 = (uint64_t *)(v14 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
    uint64_t *v19 = v16;
    v19[1] = v18;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v0 + 48);
    if (*(unsigned char *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR)) {
      uint64_t v21 = 7562585;
    }
    else {
      uint64_t v21 = 28494;
    }
    if (*(unsigned char *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR)) {
      unint64_t v22 = 0xE300000000000000;
    }
    else {
      unint64_t v22 = 0xE200000000000000;
    }
    if (*(unsigned char *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled)) {
      uint64_t v23 = 7562585;
    }
    else {
      uint64_t v23 = 28494;
    }
    if (*(unsigned char *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled)) {
      unint64_t v24 = 0xE300000000000000;
    }
    else {
      unint64_t v24 = 0xE200000000000000;
    }
    int v25 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods);
    if (v25) {
      uint64_t v26 = 7562585;
    }
    else {
      uint64_t v26 = 28494;
    }
    if (v25) {
      unint64_t v27 = 0xE300000000000000;
    }
    else {
      unint64_t v27 = 0xE200000000000000;
    }
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_1000133A0(v28, (uint64_t)qword_1000F0390);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      swift_bridgeObjectRetain();
      sub_100048718(v21, v22, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_100048718(v23, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_100048718(v26, v27, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "HomePodSetupInteractor: houseWasSelected isROAR:%s loc:%s hasHomePods:%s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

id sub_10009DC44()
{
  return sub_10009DC80("HomePodSetup: SiriForEveryone Continue button", (const char **)&selRef_siriForEveryoneAnswered);
}

id sub_10009DC58()
{
  return sub_10009DC80("HomePodSetup: appleMusicPromoSeen called", (const char **)&selRef_appleMusicNext);
}

id sub_10009DC6C()
{
  return sub_10009DC80("HomePodSetup: Siri Enabled approved", (const char **)&selRef_siriEnable);
}

id sub_10009DC80(const char *a1, const char **a2)
{
  uint64_t v5 = v2;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000F0390);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unsigned __int8 v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned __int8 v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = *(void **)(v5 + 80);
  unsigned __int8 v11 = *a2;

  return [v10 v11];
}

id sub_10009DD80(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)id v7 = 136315138;
    uint64_t v12 = v8;
    if (a1) {
      uint64_t v9 = 0x656C62616E65;
    }
    else {
      uint64_t v9 = 0x656C6261736964;
    }
    if (a1) {
      unint64_t v10 = 0xE600000000000000;
    }
    else {
      unint64_t v10 = 0xE700000000000000;
    }
    sub_100048718(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "User chose to %s TV Audio", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return [*(id *)(v2 + 80) tvAudioEnabled:a1 & 1];
}

id sub_10009DF44(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)id v7 = 136315138;
    uint64_t v12 = v8;
    if (a1) {
      uint64_t v9 = 0x6E4F6576694CLL;
    }
    else {
      uint64_t v9 = 0x6D706F6C65766544;
    }
    if (a1) {
      unint64_t v10 = 0xE600000000000000;
    }
    else {
      unint64_t v10 = 0xEB00000000746E65;
    }
    sub_100048718(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "User chose to LiveOn %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return [*(id *)(v2 + 80) setLiveOn:a1 & 1];
}

id sub_10009E110(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "User chose Siri Voice", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = *(void **)(v2 + 80);

  return [v8 siriVoicePicked:a1];
}

void sub_10009E218(uint64_t a1)
{
  uint64_t v2 = v1;
  *(_DWORD *)(*(void *)(v1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) = a1;
  [*(id *)(v1 + 80) stereoRolePicked:a1];
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void **)(v2 + 80);
  swift_retain();
  unsigned __int8 v5 = [v4 stereoCounterpartColor];
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor) = v5;
  swift_release();
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000F0390);
  swift_retain();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 8) = 256;
    [*(id *)(v2 + 80) stereoCounterpartColor];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupInteractor stereoRoleSelected: role = %d | stereoCounterpartColor = %hhu", (uint8_t *)v9, 0xBu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
}

void sub_10009E400(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  os_log_type_t v8 = (void *)(*(void *)(v4 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  *os_log_type_t v8 = a1;
  v8[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000133A0(v9, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(a3, a4, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupInteractor: siri language: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v13 = *(id *)(v5 + 80);
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 siriLanguagePicked:v14];
}

id sub_10009E658()
{
  uint64_t v1 = v0;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000F0390);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupInteractor: siriLanguagePicked user selected 'Don't Use Siri'", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + 80);

  return [v6 siriLanguagePicked:0];
}

void sub_10009E754(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  os_log_type_t v4 = *(void **)(v2 + 80);
  swift_retain();
  id v5 = [v4 selectedSiriLanguageCode];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = sub_100050098(v7, v9);
  unint64_t v12 = v11;
  swift_release();
  swift_bridgeObjectRelease();
  id v13 = [self sharedInstance];
  NSString v14 = v13;
  if (v13)
  {
    id v15 = v13;
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [self mainBundle];
    uint64_t v19 = v10;
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v15 localizedStringForKey:v16 table:v17 bundle:v18 languageCode:v20];

    if (v21)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v10 = v19;
  }
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_1000133A0(v22, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)int v25 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(v10, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetup: Speak Pincode with instructions in language %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v26 = *(id *)(v3 + 80);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_100089B18;
  aBlock[3] = (uint64_t)&unk_1000DD8F8;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v26 speakPasscodeWithInstructions:v27 languageCode:v28 completion:v29];
  _Block_release(v29);
}

void sub_10009EB90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void **)(v2 + 80);
  swift_retain();
  id v7 = [v6 selectedSiriLanguageCode];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  uint64_t v12 = sub_100050098(v9, v11);
  unint64_t v14 = v13;
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000133A0(v15, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  NSString v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v18 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(v12, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "HomePodSetup: Speak Pincode in language (%s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v19 = *(id *)(v3 + 80);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_100089B18;
  aBlock[3] = (uint64_t)&unk_1000DD8D0;
  id v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v19 speakPasscodeWithLanguageCode:v20 completion:v21];
  _Block_release(v21);
}

void sub_10009EE78(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (isInternalBuild())
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000133A0(v6, (uint64_t)qword_1000F0390);
    swift_bridgeObjectRetain_n();
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v8))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(a1, a2, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetup: Pincode %s was entered.", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
  }
  else
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000F0390);
    id v7 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v11)) {
      goto LABEL_11;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v11, "HomePodSetup: A pincode was entered.", v12, 2u);
  }
  swift_slowDealloc();
LABEL_11:

LABEL_13:
  id v13 = *(id *)(v3 + 80);
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 pairSetupTryPIN:v14];
}

id *sub_10009F108()
{
  sub_10001371C((uint64_t)(v0 + 4));
  swift_release();

  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10009F188()
{
  sub_10009F108();

  return _swift_deallocClassInstance(v0, 178, 7);
}

uint64_t type metadata accessor for HomePodSetupInteractor()
{
  return self;
}

uint64_t sub_10009F1E0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType);
  if (sub_1000A9228(v2))
  {
    unsigned int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
    if (v2 == 11)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode))
      {
        if (qword_1000ED898 != -1) {
          swift_once();
        }
        uint64_t v4 = type metadata accessor for Logger();
        sub_1000133A0(v4, (uint64_t)qword_1000F0390);
        id v5 = Logger.logObject.getter();
        os_log_type_t v6 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v5, v6))
        {
          id v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupInteractor: Requires an upgrade becasue Legacy Setup and HomePod mini.", v7, 2u);
          swift_slowDealloc();
        }

        return 1;
      }
      return 0;
    }
    BOOL v13 = v3 > 6;
    int v14 = (1 << v3) & 0x61;
    if (!v13 && v14 != 0) {
      return 0;
    }
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000133A0(v17, (uint64_t)qword_1000F0390);
    swift_retain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 16777472;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      uint64_t v12 = "HomePodSetupInteractor: Requires an upgrade because device %hhu is not known.";
      goto LABEL_13;
    }
LABEL_23:

    swift_release();
    return 1;
  }
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000133A0(v8, (uint64_t)qword_1000F0390);
  swift_retain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v9, v10)) {
    goto LABEL_23;
  }
  os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)os_log_type_t v11 = 16777472;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release();
  uint64_t v12 = "HomePodSetupInteractor: Requires an upgrade becasue setup action %hhu not HomePodSetup.";
LABEL_13:
  _os_log_impl((void *)&_mh_execute_header, v9, v10, v12, v11, 5u);
  swift_slowDealloc();

  return 1;
}

uint64_t sub_10009F508()
{
  uint64_t v1 = v0;
  if (qword_1000ED740 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 48);
  swift_retain();
  uint64_t v3 = sub_1000403DC(0, v2);
  uint64_t v5 = v4;
  swift_release();
  if (!v5) {
    return 63;
  }
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000133A0(v6, (uint64_t)qword_1000F0390);
  swift_retain_n();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    unint64_t v10 = sub_100078DA8(v3);
    sub_100048718(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupInteractor: initialStateBasedOnTesting because testMode / testFlags next screen is: %s ", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v1 + 48) = v5;
  swift_release();
  return v3;
}

void sub_10009F734()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_1000A91C8;
  v6[5] = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_10009A4B8;
  v6[3] = &unk_1000DD970;
  uint64_t v5 = _Block_copy(v6);
  swift_release();
  [v1 registerDevice:v2 model:v3 callback:v5];
  _Block_release(v5);
}

void sub_10009F8CC(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 177)) {
    return;
  }
  *(unsigned char *)(v1 + 177) = 1;
  NSString v3 = *(void **)(v1 + 80);
  uint64_t v4 = *(void **)(v1 + 16);
  if (!v4)
  {
    id v7 = v3;
    if (*(void *)(v1 + 96)) {
      goto LABEL_4;
    }
LABEL_6:
    id v9 = 0;
    goto LABEL_7;
  }
  id v5 = v3;
  id v6 = v4;
  uint64_t v4 = (void *)_convertErrorToNSError(_:)();

  if (!*(void *)(v1 + 96)) {
    goto LABEL_6;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  id v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_7:
  if (*(unsigned char *)(v1 + 112)) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = *(void *)(v1 + 104);
  }
  [v3 logMetricsForDismissal:v4 dismissType:a1 cardName:v9 cardDuration:v8];
}

void sub_10009F9D8(int a1)
{
  if ((*(unsigned char *)(v1 + 176) & 1) == 0)
  {
    *(unsigned char *)(v1 + 176) = 1;
    LODWORD(v20) = a1;
    dispatch thunk of CustomStringConvertible.description.getter();
    id v2 = objc_allocWithZone((Class)NSString);
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v4 = [v2 initWithString:v3];

    sub_10009F1E0();
    sub_10000EE48(&qword_1000F07A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000B22A0;
    *(void *)(inited + 32) = 0x6574656C706D6F63;
    *(void *)(inited + 40) = 0xE900000000000064;
    sub_10003DD8C(0, (unint64_t *)&unk_1000EF3F0);
    *(NSNumber *)(inited + 48) = NSNumber.init(BOOLeanLiteral:)(0);
    *(void *)(inited + 56) = 0x73736563637573;
    *(void *)(inited + 64) = 0xE700000000000000;
    *(NSNumber *)(inited + 72) = NSNumber.init(BOOLeanLiteral:)(0);
    *(void *)(inited + 80) = 0x62614C726F727265;
    *(void *)(inited + 88) = 0xEA00000000006C65;
    id v6 = objc_allocWithZone((Class)NSString);
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 initWithString:v7];

    *(void *)(inited + 96) = v8;
    *(void *)(inited + 104) = 0xD000000000000014;
    *(void *)(inited + 112) = 0x80000001000BAAA0;
    *(void *)(inited + 120) = v4;
    *(void *)(inited + 128) = 0x6D6F44726F727265;
    *(void *)(inited + 136) = 0xEB000000006E6961;
    *(void *)(inited + 144) = NSOSStatusErrorDomain;
    *(void *)(inited + 152) = 0xD000000000000011;
    *(void *)(inited + 160) = 0x80000001000BAAC0;
    id v9 = v4;
    unint64_t v10 = NSOSStatusErrorDomain;
    *(NSNumber *)(inited + 168) = Bool._bridgeToObjectiveC()();
    strcpy((char *)(inited + 176), "setupErrorCode");
    *(unsigned char *)(inited + 191) = -18;
    *(NSNumber *)(inited + 192) = Int32._bridgeToObjectiveC()();
    sub_10000E110(inited);
    NSString v11 = String._bridgeToObjectiveC()();
    sub_10003DD8C(0, &qword_1000F07B0);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_10000964C(v11, isa);

    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000133A0(v13, (uint64_t)qword_1000F0390);
    swift_bridgeObjectRetain();
    int v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      NSString v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)NSString v16 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v17 = Dictionary.description.getter();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_100048718(v17, v19, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupInteractor: logRequiresUpdate %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10009FE50(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0x100000000) != 0) {
    return;
  }
  uint64_t v3 = v2;
  sub_1000A9748(a1);
  uint64_t v94 = String.init(cString:)();
  unint64_t v7 = v6;
  if (a2)
  {
    uint64_t v8 = Dictionary.description.getter();
    unint64_t v10 = v9;
  }
  else
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v8 = 7104878;
  }
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000133A0(v11, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v92 = v3;
    uint64_t v14 = swift_slowAlloc();
    v95[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v96 = sub_100048718(v94, v7, v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v96 = sub_100048718(v8, v10, v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "<loom:ViewService:matchSessionHandleProgress> HomePodSetupInteractor: progressHandler inEvent:%s and info:%s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v92;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  *(_DWORD *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a1;
  if ((int)a1 <= 123)
  {
    switch((int)a1)
    {
      case '(':
        swift_bridgeObjectRelease();
        return;
      case ')':
      case '*':
      case '+':
      case ',':
      case '-':
      case '.':
      case '/':
      case '0':
      case '1':
      case '3':
      case '4':
      case '5':
      case '6':
      case '8':
      case '9':
      case ':':
      case ';':
      case '=':
      case '>':
      case '?':
      case '@':
      case 'A':
      case 'B':
      case 'C':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
        goto LABEL_30;
      case '2':
        swift_bridgeObjectRelease();
        uint64_t v22 = &selRef_setAssistantIsEnabled_;
        [*(id *)(v3 + 80) homePodProductVersion];
        uint64_t v26 = String.init(cString:)();
        unint64_t v28 = v27;
        swift_bridgeObjectRetain();
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          v95[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v32 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)&long long v96 = sub_100048718(v26, v28, v95);
          uint64_t v22 = &selRef_setAssistantIsEnabled_;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "HomePodSetupInteractor sessionHandleProgress: setting homePodProductVersion = %s", v32, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v36 = *(void *)(v3 + 48);
        uint64_t v37 = *(void **)(v3 + 80);
        swift_retain();
        unsigned int v38 = [v37 v22[170]];
        *(_DWORD *)(v36 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homePodProductVersion) = v38;
        swift_release();
        swift_retain();
        id v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 67109120;
          LODWORD(v95[0]) = [*(id *)(v3 + 80) forceSoftwareUpdateForADP];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "HomePodSetupInteractor sessionHandleProgress: setting forcedADPSoftwareUpdate = %{BOOL}d", v41, 8u);
          swift_slowDealloc();
        }
        else
        {

          swift_release();
        }
        uint64_t v50 = *(void *)(v3 + 48);
        id v51 = *(void **)(v3 + 80);
        swift_retain();
        unsigned __int8 v52 = [v51 forceSoftwareUpdateForADP];
        *(unsigned char *)(v50 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate) = v52;
        swift_release();
        return;
      case '7':
        swift_bridgeObjectRelease();
        if (!swift_unknownObjectWeakLoadStrong()) {
          return;
        }
        char v21 = 16;
        break;
      case '<':
        goto LABEL_21;
      case 'P':
        unint64_t v93 = v7;
        swift_retain();
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          int v25 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)int v25 = 67109120;
          LODWORD(v95[0]) = [*(id *)(v3 + 80) userOptedToHH2];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupInteractor sessionHandleProgress: setting homePodProductVersion = %{BOOL}d", v25, 8u);
          swift_slowDealloc();
        }
        else
        {

          swift_release();
        }
        uint64_t v33 = *(void *)(v3 + 48);
        uint64_t v34 = *(void **)(v3 + 80);
        swift_retain();
        unsigned __int8 v35 = [v34 userOptedToHH2];
        *(unsigned char *)(v33 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_isHomeInHH2) = v35;
        swift_release();
        [*(id *)(v3 + 80) homePodSUState];
        uint64_t v42 = String.init(cString:)();
        unint64_t v44 = v43;
        unsigned int v45 = [*(id *)(v3 + 80) homePodProductVersion];
        swift_bridgeObjectRetain();
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          v95[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)&long long v96 = sub_100048718(v42, v44, v95);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "HomePodSetupInteractor sessionHandleProgress: setting showHomepodSoftwareUpdate = %s", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        *(unsigned char *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showHomepodSoftwareUpdate) = v45 == 1;
        swift_bridgeObjectRetain();
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          id v55 = (uint8_t *)swift_slowAlloc();
          v95[0] = swift_slowAlloc();
          *(_DWORD *)id v55 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)&long long v96 = sub_100048718(v94, v93, v95);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "HomePodSetupInteractor sessionHandleProgress: setting up event = %s", v55, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        unsigned int v20 = 80;
        goto LABEL_28;
      default:
        if (a1 == 120 || a1 == 122) {
          goto LABEL_26;
        }
        goto LABEL_30;
    }
    goto LABEL_40;
  }
  if ((int)a1 <= 899)
  {
    uint64_t v15 = (a1 - 200);
    if (v15 > 0x22)
    {
LABEL_15:
      if (a1 != 124) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (((1 << (a1 + 56)) & 0x400100401) == 0)
    {
      if (v15 == 30)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressDetail) != 1) {
          return;
        }
        goto LABEL_27;
      }
      goto LABEL_15;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    NSString v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = v7;
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v96 = sub_100048718(v94, v18, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "HomePodSetupInteractor sessionHandleProgress: setting up event = %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_27:
    unsigned int v20 = a1;
    goto LABEL_28;
  }
  if (a1 == 900 || a1 == 913) {
    goto LABEL_21;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if ((int)a1 > 499)
  {
    switch((int)a1)
    {
      case 901:
      case 905:
        id v56 = "HomePodSetupInteractor: updateProgressForHomePodSU event:%u";
        uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A6EAC;
        uint64_t v58 = a1;
        goto LABEL_93;
      case 902:
      case 903:
      case 904:
      case 908:
        return;
      case 906:
        id v56 = "HomePodSetupInteractor: updateProgressForSysDropAirDrop event:%u";
        uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A7384;
        uint64_t v58 = 906;
        goto LABEL_93;
      case 907:
        id v56 = "HomePodSetupInteractor: updateProgressForSysDropSysdiagnose event:%u";
        uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A79F4;
        uint64_t v58 = 907;
        goto LABEL_93;
      case 909:
        id v56 = "HomePodSetupInteractor: updateProgressForSysDropRPFileTransferProgress event:%u";
        uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A7EB8;
        uint64_t v58 = 909;
        goto LABEL_93;
      case 910:
        id v56 = "HomePodSetupInteractor: updateProgressForSysDropRPFileTransferProgress event:%u";
        uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A7EB8;
        uint64_t v58 = 910;
LABEL_93:
        sub_1000A44CC(v58, a2, v56, v57);
        return;
      default:
        if (a1 != 500 && a1 != 510) {
          return;
        }
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          return;
        }
        sub_10008205C(v3, a1, a2, Strong);
        break;
    }
    goto LABEL_82;
  }
  if ((int)a1 <= 95)
  {
    if (a1 != 20)
    {
      if (a1 != 30)
      {
        if (a1 == 70) {
          *(unsigned char *)(v3 + 56) = 1;
        }
        return;
      }
      if (a2)
      {
        AnyHashable.init<A>(_:)();
        if (*(void *)(a2 + 16) && (unint64_t v74 = sub_10005513C((uint64_t)v95), (v75 & 1) != 0))
        {
          sub_10000F578(*(void *)(a2 + 56) + 32 * v74, (uint64_t)&v96);
        }
        else
        {
          long long v96 = 0u;
          long long v97 = 0u;
        }
        sub_10000F474((uint64_t)v95);
        if (*((void *)&v97 + 1))
        {
          sub_10003DD8C(0, &qword_1000F07B8);
          if (swift_dynamicCast())
          {
            id v76 = (void *)v95[0];
            uint64_t v77 = *(void **)(v3 + 16);
            *(void *)(v3 + 16) = v95[0];
            id v78 = v76;

            id v79 = v78;
            uint64_t v80 = Logger.logObject.getter();
            os_log_type_t v81 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v80, v81))
            {
              id v82 = (uint8_t *)swift_slowAlloc();
              id v83 = (void *)swift_slowAlloc();
              *(_DWORD *)id v82 = 138412290;
              v95[0] = (uint64_t)v79;
              uint64_t v84 = v3;
              uint64_t v85 = v79;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *id v83 = v76;

              uint64_t v3 = v84;
              _os_log_impl((void *)&_mh_execute_header, v80, v81, "### Setup failed: %@", v82, 0xCu);
              sub_10000EE48(&qword_1000EDEB0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              uint64_t v80 = v79;
            }

            id v86 = v79;
            id v87 = (void *)_convertErrorToNSError(_:)();

            int v88 = NSErrorToOSStatus();
            uint64_t v89 = swift_unknownObjectWeakLoadStrong();
            if (v89)
            {
              uint64_t v90 = v89;
              id v91 = v86;
              sub_1000A8514((os_log_t)v3, v88, v76, 1, v90);

              swift_unknownObjectRelease();
            }
            else
            {
            }
            *(_DWORD *)(v3 + 164) = v88;
          }
          return;
        }
      }
      else
      {
        long long v96 = 0u;
        long long v97 = 0u;
      }
      sub_10000F674((uint64_t)&v96, &qword_1000EE410);
      return;
    }
    unsigned int v68 = [*(id *)(v3 + 80) bonjourTestState];
    *(_DWORD *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = v68;
    unsigned __int8 v69 = [*(id *)(v3 + 80) siriDataSharingEnabled];
    *(unsigned char *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = v69;
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v64, v65)) {
      goto LABEL_77;
    }
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v66 = 0;
    id v67 = "Setup finalized";
LABEL_76:
    _os_log_impl((void *)&_mh_execute_header, v64, v65, v67, v66, 2u);
    swift_slowDealloc();
LABEL_77:

    uint64_t v70 = swift_unknownObjectWeakLoadStrong();
    if (v70)
    {
      sub_1000A8514((os_log_t)v3, 0, 0, 1, v70);
      swift_unknownObjectRelease();
    }
    sub_10009F8CC(24);
    [*(id *)(v3 + 80) invalidate];
    [*(id *)(v3 + 144) invalidate];
    uint64_t v71 = swift_unknownObjectWeakLoadStrong();
    if (!v71) {
      return;
    }
    id v72 = *(void **)(v71 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
    if (v72)
    {
      NSString v73 = String._bridgeToObjectiveC()();
      [v72 setIdleTimerDisabled:0 forReason:v73];
      swift_unknownObjectRelease();

      return;
    }
LABEL_82:
    swift_unknownObjectRelease();
    return;
  }
  if ((int)a1 <= 149)
  {
    if (a1 != 96)
    {
      if (a1 == 140 && swift_unknownObjectWeakLoadStrong())
      {
        char v21 = 23;
LABEL_40:
        sub_10007E3BC(v21);
        swift_unknownObjectRelease();
        return;
      }
      return;
    }
    unsigned int v62 = [*(id *)(v3 + 80) bonjourTestState];
    *(_DWORD *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = v62;
    unsigned __int8 v63 = [*(id *)(v3 + 80) siriDataSharingEnabled];
    *(unsigned char *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = v63;
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v64, v65)) {
      goto LABEL_77;
    }
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v66 = 0;
    id v67 = "Setup completed";
    goto LABEL_76;
  }
  if (a1 != 150)
  {
    if (a1 != 250) {
      return;
    }
    unsigned int v59 = [*(id *)(v3 + 80) bonjourTestState];
    *(_DWORD *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = v59;
    unsigned __int8 v60 = [*(id *)(v3 + 80) siriDataSharingEnabled];
    *(unsigned char *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = v60;
    unsigned int v20 = 250;
LABEL_28:
    sub_1000A438C(v20);
    return;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    char v21 = 10;
    goto LABEL_40;
  }
}

uint64_t sub_1000A10B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a3) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  v4(a2, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A1148(unsigned int a1, unint64_t a2, uint64_t a3, const char *a4)
{
  sub_1000A9748(a1);
  uint64_t v7 = String.init(cString:)();
  unint64_t v9 = v8;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000133A0(v10, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v15 = a2;
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(v7, v9, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a4, v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v15;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10009FE50(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A1360(uint64_t a1, unint64_t a2)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v11[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(a1, a2, v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupInteractor SysDrop sysdropFinishedHandler: path = %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(result + 48);
    swift_retain();
    swift_release();
    uint64_t v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sysdropPath);
    *uint64_t v10 = a1;
    v10[1] = a2;
    swift_bridgeObjectRetain();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000A157C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A15E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000F0390);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for AppleMusic", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v14 = (void *)(*(void *)(v9 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
    void *v14 = a1;
    v14[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v15 = (void *)(*(void *)(v9 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
    *unint64_t v15 = a3;
    v15[1] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v16 = swift_retain();
      sub_1000A886C(v16);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A17A8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  swift_retain();
  v1(v2, v4, v5, v7);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A1840(unint64_t a1, uint64_t a2)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for home (%ld) homes)", v7, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000A1A04(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A1A04(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(v2 + 48) + 40) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(*(void *)(v2 + 48) + 72) = a2;
  uint64_t v4 = *(void **)(v2 + 80);
  sub_10003DD8C(0, (unint64_t *)&qword_1000F0370);
  id v5 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v5 setAvailableHomes:isa];

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10007E3BC(1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A1AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  sub_10003DD8C(0, (unint64_t *)&qword_1000F0370);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A1B78(char a1)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000F0390);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Location Already Enabled", v5, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(result + 48);
    swift_retain();
    swift_release();
    *(unsigned char *)(v7 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) = a1 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A1CBC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000133A0(v2, (uint64_t)qword_1000F0390);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for PersonalRequests", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v7 = *(void **)(v1 + 80);
      unint64_t v8 = *(void **)(Strong + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession);
      *(void *)(Strong + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession) = v7;
      id v9 = v7;
      swift_retain();

      sub_10007E3BC(9);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A1E2C(__int16 a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1000133A0(v3, (uint64_t)qword_1000F0390);
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 67109376;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v6 + 8) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for PINHandler with flags: %u throttle: %d", (uint8_t *)v6, 0xEu);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_retain();
      sub_1000A95F4(a1);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A1FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

uint64_t sub_1000A203C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_10000EE48(&qword_1000EE3C0);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)v35 - v16;
  uint64_t v18 = a6 + 16;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1000133A0(v19, (uint64_t)qword_1000F0390);
  sub_10000FD94(a5, (uint64_t)v17, &qword_1000EE3C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unsigned int v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  int v40 = v21;
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v41 = a1;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v39 = a5;
    uint64_t v24 = v23;
    uint64_t v36 = swift_slowAlloc();
    v43[0] = v36;
    *(_DWORD *)uint64_t v24 = 136315906;
    v35[1] = v12;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_100048718(a1, a2, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v25 = Array.description.getter();
    unint64_t v37 = a2;
    uint64_t v38 = v18;
    uint64_t v26 = v25;
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_100048718(v26, v28, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v29 = Array.description.getter();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_100048718(v29, v31, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 2080;
    sub_10000FD94((uint64_t)v17, (uint64_t)v15, &qword_1000EE3C0);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t v42 = sub_100048718(v32, v33, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a2 = v37;
    swift_bridgeObjectRelease();
    sub_10000F674((uint64_t)v17, &qword_1000EE3C0);
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v40, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for room in home \"%s\", existingRooms: %s, suggestedRooms: %s, defaultIndexPath: %s", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    a5 = v39;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_10000F674((uint64_t)v17, &qword_1000EE3C0);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000A2460(v41, a2, a3, a4, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A2460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_10000EE48(&qword_1000EE3C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)(*(void *)(v5 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  void *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(*(void *)(v5 + 48) + 48) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(*(void *)(v5 + 48) + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v5 + 48);
  sub_10000FD94(a5, (uint64_t)v13, &qword_1000EE3C0);
  uint64_t v16 = v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  swift_beginAccess();
  swift_retain();
  sub_1000A958C((uint64_t)v13, v16);
  swift_endAccess();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10007E3BC(2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A25E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_10000EE48(&qword_1000EE3C0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(a1 + 32);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (a5)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = type metadata accessor for IndexPath();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  }
  swift_retain();
  v10(v11, v13, v14, v15, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10000F674((uint64_t)v9, &qword_1000EE3C0);
}

uint64_t sub_1000A2794()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000133A0(v2, (uint64_t)qword_1000F0390);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Siri Enable", v5, 2u);
      swift_slowDealloc();
    }

    id v6 = [*(id *)(v1 + 80) selectedSiriLanguageCode];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
    }
    sub_1000A28F8(v8, v10);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000A28F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(*(void *)(v2 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void **)(v2 + 80);
  swift_retain();
  unsigned __int8 v6 = [v5 isJSEnabled];
  *(unsigned char *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled) = v6;
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000A8C6C(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A29C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000133A0(v8, (uint64_t)qword_1000F0390);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for SiriLanguage", v11, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v12 = *(void *)(v7 + 48);
      swift_retain();
      swift_retain();
      *(void *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages) = sub_10005A384(a1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v13 = (void *)(*(void *)(v7 + 48)
                     + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
      void *v13 = a2;
      v13[1] = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_10007E3BC(22);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A2B88(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  swift_retain();
  v1(v2, v3, v5);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A2C24()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000133A0(v1, (uint64_t)qword_1000F0390);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: promptForTermsAndConditionsV2Disagree", v4, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_retain();
      sub_1000641B8(0, 1);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A2D7C(uint64_t a1, const char *a2, int a3)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000133A0(v5, (uint64_t)qword_1000F0390);
  unsigned __int8 v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a2, v8, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      sub_100081E18(a3);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000A2EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000133A0(v8, (uint64_t)qword_1000F0390);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for SharedSettings", v11, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000A2FFC(a1, a2, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A2FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v7 = (void *)(*(void *)(v4 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  void *v7 = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(*(void *)(v4 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  *uint64_t v8 = a3;
  v8[1] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (IsAppleInternalBuild()) {
      char v10 = 57;
    }
    else {
      char v10 = 15;
    }
    sub_10007E3BC(v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A30CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    if (v3)
    {
LABEL_3:
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v3 = v9;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  swift_retain();
  v4(v5, v7, v8, v3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A3180()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000133A0(v2, (uint64_t)qword_1000F0390);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for stereo role", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = *(void *)(v1 + 48);
    uint64_t v7 = *(void **)(v1 + 80);
    swift_retain();
    unsigned __int8 v8 = [v7 stereoCounterpartColor];
    *(unsigned char *)(v6 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor) = v8;
    swift_release();
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_retain();
      sub_10007E3BC(18);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A3300(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1000133A0(v4, (uint64_t)qword_1000F0390);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      sub_10003DD8C(0, (unint64_t *)&qword_1000EFA08);
      swift_bridgeObjectRetain();
      uint64_t v8 = Array.description.getter();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_100048718(v8, v10, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for stereo multiple: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      *(void *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories) = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      sub_10007E3BC(20);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A3578(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10003DD8C(0, (unint64_t *)&qword_1000EFA08);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A35FC(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1000133A0(v4, (uint64_t)qword_1000F0390);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt voice recognition after voice selection: %{BOOL}d", v7, 8u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      *(unsigned char *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_voiceRecognitionEnabled) = a1 & 1;
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A3780(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000133A0(v10, (uint64_t)qword_1000F0390);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Siri Voice Selectio: %{BOOL}d", v13, 8u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v14 = *(void *)(v9 + 48);
      *(unsigned char *)(v14 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_allowsRandomVoiceSelection) = a1 & 1;
      uint64_t v15 = (void *)(v14 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
      *uint64_t v15 = a2;
      v15[1] = a3;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(v9 + 48);
      uint64_t v17 = *(void **)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession);
      *(void *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession) = a4;
      id v18 = a4;

      sub_10007E3BC(19);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_1000A397C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  os_log_type_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(a1 + 32);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  swift_retain();
  id v10 = a4;
  v6(a2, v7, v9, v10);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1000A3A1C(uint64_t a1, const char *a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000133A0(v6, (uint64_t)qword_1000F0390);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_retain();
      sub_10007E3BC(a3);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A3B70(unint64_t a1, unint64_t a2)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v9[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_100048718(a1, a2, v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for deviceColorFoundHandler: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10009C70C(a1, a2);
    return swift_release();
  }
  return result;
}

void sub_1000A3D5C(char a1)
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000F0390);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    v9[0] = v6;
    if (a1) {
      uint64_t v7 = 0x73736563637553;
    }
    else {
      uint64_t v7 = 1818845510;
    }
    if (a1) {
      unint64_t v8 = 0xE700000000000000;
    }
    else {
      unint64_t v8 = 0xE400000000000000;
    }
    sub_100048718(v7, v8, v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupInteractor: registered homepod serial number with results %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a1)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1000A3F40();
      swift_release();
    }
  }
}

void sub_1000A3F40()
{
  sub_10003DD8C(0, &qword_1000EF2E8);
  id v0 = [(id)swift_getObjCClassFromMetadata() createBagForSubProfile];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_allocWithZone((Class)AMSMarketingItemTask);
    id v3 = v1;
    NSString v4 = String._bridgeToObjectiveC()();
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v2 initWithBag:v3 clientIdentifier:v4 clientVersion:v5 placement:v6 serviceType:v7];

    id v9 = [self ams_sharedAccountStore];
    id v10 = [v9 ams_activeiTunesAccount];

    [v8 setAccount:v10];
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_1000133A0(v11, (uint64_t)qword_1000F0390);
    os_log_type_t v12 = (void **)v8;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      long long aBlock = v12;
      *(_DWORD *)uint64_t v15 = 138412290;
      uint64_t v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v16 = v12;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "HomePodSetupInteractor: performing AMSMarketingItemTask: %@", v15, 0xCu);
      sub_10000EE48(&qword_1000EDEB0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v18 = [v12 perform];
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = sub_1000A91D0;
    uint64_t v27 = v19;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_1000A4C94;
    uint64_t v25 = &unk_1000DD998;
    unsigned int v20 = _Block_copy(&aBlock);
    swift_release();
    [v18 addSuccessBlock:v20];
    _Block_release(v20);
    uint64_t v26 = sub_1000A4C9C;
    uint64_t v27 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_1000A4E90;
    uint64_t v25 = &unk_1000DD9C0;
    os_log_type_t v21 = _Block_copy(&aBlock);
    [v18 addErrorBlock:v21];
    _Block_release(v21);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000A438C(unsigned int a1)
{
  uint64_t v2 = v1;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000133A0(v4, (uint64_t)qword_1000F0390);
  NSString v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    NSString v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)NSString v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupInteractor: updateProgress event:%u", v7, 8u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000A6ACC(v2, a1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A44CC(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v4;
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000133A0(v10, (uint64_t)qword_1000F0390);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, v13, 8u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    a4(v7, a1, a2, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000A462C(void *a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for CharacterSet();
  uint64_t v44 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unint64_t v43 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = sub_1000133A0(v5, (uint64_t)qword_1000F0390);
  id v7 = a1;
  uint64_t v46 = v6;
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    uint64_t v49 = (uint64_t)v7;
    id v12 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupInteractor: AMSMarketingItemTask returned success with AMSMarketingItem: %@", v10, 0xCu);
    sub_10000EE48(&qword_1000EDEB0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v13 = [v7 templateID:v43];
  if (!v13)
  {
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v27, v30))
    {
LABEL_22:

      return;
    }
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v30, "HomePodSetupInteractor: AMSMarketingItemTask no templateID", v31, 2u);
LABEL_14:
    swift_slowDealloc();
    goto LABEL_22;
  }
  os_log_type_t v14 = v13;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  v18._uint64_t countAndFlagsBits = 0x3A636973756DLL;
  v18._object = (void *)0xE600000000000000;
  if (String.hasPrefix(_:)(v18))
  {
    uint64_t v49 = v15;
    unint64_t v50 = v17;
    uint64_t v47 = 58;
    unint64_t v48 = 0xE100000000000000;
    sub_100040EB4();
    uint64_t v19 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (v19[2] == 2)
    {
      uint64_t v20 = v19[6];
      unint64_t v21 = v19[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v49 = v20;
      unint64_t v50 = v21;
      id v22 = [self whitespaceCharacterSet];
      uint64_t v23 = v43;
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      StringProtocol.trimmingCharacters(in:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v3);
      swift_bridgeObjectRelease();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v25 = String._bridgeToObjectiveC()();
      unsigned __int8 v26 = [v24 isEqual:v25];

      if (v26)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v27, v28))
        {

          swift_bridgeObjectRelease_n();
          return;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_100048718(v15, v17, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "HomePodSetupInteractor: Detected standard upsell, because template is '%s'", v29, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "HomePodSetupInteractor: Able to get a marketing item.", v34, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v36 = *(void *)(Strong + 48);
    swift_retain();
    swift_release();
    unint64_t v37 = *(void **)(v36 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem);
    *(void *)(v36 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem) = v7;
    id v38 = v7;
    swift_release();
  }
  swift_beginAccess();
  uint64_t v39 = swift_weakLoadStrong();
  if (v39)
  {
    uint64_t v40 = v39;
    id v41 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupAMSUpsellViewController());
    id v42 = sub_100060AC4(v7);
    uint64_t v27 = *(NSObject **)(v40 + 136);
    *(void *)(v40 + 136) = v42;
    swift_release();
    goto LABEL_22;
  }
}

void sub_1000A4C94(uint64_t a1, void *a2)
{
}

void sub_1000A4C9C()
{
  if (qword_1000ED898 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000133A0(v0, (uint64_t)qword_1000F0390);
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315138;
    swift_getErrorValue();
    uint64_t v3 = Error.localizedDescription.getter();
    sub_100048718(v3, v4, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "HomePodSetupInteractor: AMSMarketingItemTask request failed with error: %s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_1000A4E90(uint64_t a1, void *a2)
{
}

void sub_1000A4E98(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

BOOL sub_1000A4F04(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  uint64_t v4 = static Hasher._hash(seed:bytes:count:)();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_1000A4FD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HomePodSetupViewModel(0);
  __chkstk_darwin();
  os_log_type_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000133A0(v15, (uint64_t)qword_1000F0390);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      v39[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v17 = 136315138;
      uint64_t v38 = a5;
      sub_10000EE48((uint64_t *)&unk_1000EF710);
      uint64_t v18 = Optional.debugDescription.getter();
      uint64_t v38 = sub_100048718(v18, v19, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v16, "Could not find asset: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      os_log_type_t v30 = v36;
    }
  }
  else
  {
    uint64_t v36 = v12;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000133A0(v20, (uint64_t)qword_1000F0390);
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 16777472;
      LOBYTE(v39[0]) = a6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Finished single stereo image lookup for %hhu", v23, 5u);
      swift_slowDealloc();
    }

    if (a1)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v25 = *(void *)(Strong + 48);
        id v26 = a1;
        swift_retain();
        swift_release();
        uint64_t v27 = (uint64_t *)(v25 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
        swift_beginAccess();
        id v28 = v26;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v37 = *v27;
        *uint64_t v27 = 0x8000000000000000;
        sub_100056CE0((uint64_t)v28, a6, isUniquelyReferenced_nonNull_native);
        *uint64_t v27 = v37;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
      }
      else
      {
        id v31 = a1;
      }
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        uint64_t v32 = swift_unknownObjectWeakLoadStrong();
        swift_release();
        if (v32)
        {
          uint64_t v33 = v32 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
          swift_beginAccess();
          sub_10000FD94(v33, (uint64_t)v10, &qword_1000EF130);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v36[6].isa)(v10, 1, v11) == 1)
          {
            sub_10000F674((uint64_t)v10, &qword_1000EF130);
          }
          else
          {
            sub_1000170C8((uint64_t)v10, (uint64_t)v14);
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v34 = *(void *)(v32 + 24);
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v34 + 32))(v32, &off_1000DC918, v14, ObjectType, v34);
              swift_unknownObjectRelease();
            }
            sub_10001712C((uint64_t)v14);
          }
          swift_unknownObjectRelease();
        }
      }
    }
  }
}

void sub_1000A5558(void *a1, uint64_t a2, unsigned __int8 a3)
{
  sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HomePodSetupViewModel(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_1000133A0(v12, (uint64_t)qword_1000F0390);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v14 = 136315138;
      uint64_t v35 = a2;
      sub_10000EE48((uint64_t *)&unk_1000EF710);
      uint64_t v15 = Optional.debugDescription.getter();
      uint64_t v35 = sub_100048718(v15, v16, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v13, "Could not download asset: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v27 = v33;
    }
  }
  else
  {
    uint64_t v33 = v9;
    if (qword_1000ED898 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000133A0(v17, (uint64_t)qword_1000F0390);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 16777472;
      LOBYTE(v36[0]) = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Finished download of single stereo image lookup for %hhu", v20, 5u);
      swift_slowDealloc();
    }

    if (a1)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v22 = *(void *)(Strong + 48);
        id v23 = a1;
        swift_retain();
        swift_release();
        NSString v24 = (uint64_t *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
        swift_beginAccess();
        id v25 = v23;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = *v24;
        *NSString v24 = 0x8000000000000000;
        sub_100056CE0((uint64_t)v25, a3, isUniquelyReferenced_nonNull_native);
        *NSString v24 = v34;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
      }
      else
      {
        id v28 = a1;
      }
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        uint64_t v29 = swift_unknownObjectWeakLoadStrong();
        swift_release();
        if (v29)
        {
          uint64_t v30 = v29 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
          swift_beginAccess();
          sub_10000FD94(v30, (uint64_t)v7, &qword_1000EF130);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v33[6].isa)(v7, 1, v8) == 1)
          {
            sub_10000F674((uint64_t)v7, &qword_1000EF130);
          }
          else
          {
            sub_1000170C8((uint64_t)v7, (uint64_t)v11);
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v31 = *(void *)(v29 + 24);
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v31 + 32))(v29, &off_1000DC918, v11, ObjectType, v31);
              swift_unknownObjectRelease();
            }
            sub_10001712C((uint64_t)v11);
          }
          swift_unknownObjectRelease();
        }
      }
    }
  }
}

void sub_1000A5ADC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1000A5B68(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  swift_retain();
  id v13 = a2;
  id v12 = a5;
  v8(a2, v9, v11, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1000A5C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A5C34()
{
  return swift_release();
}

uint64_t sub_1000A5C3C()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_1000A5CBC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000A5CBC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1000A5E14(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          uint64_t v11 = sub_100048BB8(v9, 0),
          unint64_t v12 = sub_1000A5F14((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1000A5E14(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    BOOL result = sub_100048C20(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    BOOL result = sub_100048C20(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_1000A5F14(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    uint64_t v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    BOOL result = v12;
    if (v17 == v15) {
      BOOL result = sub_100048C20(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      BOOL result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        BOOL result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          BOOL result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    BOOL result = sub_100048C20(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000A6128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1000A5C3C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unsigned __int16 v11 = (unsigned __int16)sub_100053324(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

uint64_t sub_1000A620C(unsigned char *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:bytes:count:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1000A65A8(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(unsigned __int8 *)(v10 + v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v10 + v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000A6310()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000EE48(&qword_1000F07A0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    unint64_t v27 = v1;
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                unint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      uint64_t result = static Hasher._hash(seed:bytes:count:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000A65A8(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000A6310();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1000A66D0();
      goto LABEL_14;
    }
    sub_1000A6864();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:bytes:count:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1000A66D0()
{
  unint64_t v1 = v0;
  sub_10000EE48(&qword_1000F07A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000A6864()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000EE48(&qword_1000F07A0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    uint64_t result = static Hasher._hash(seed:bytes:count:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000A6ACC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A9748(a2);
  uint64_t v9 = String.init(cString:)();
  unint64_t v11 = v10;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000133A0(v12, (uint64_t)qword_1000EFA10);
  swift_retain_n();
  swift_bridgeObjectRetain();
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v29 = a1;
    v31[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_100048718(v9, v11, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    unint64_t v17 = sub_100078DA8(*(unsigned char *)(a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    uint64_t v30 = sub_100048718(v17, v18, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    a1 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  *(_DWORD *)(*(void *)(a1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
  uint64_t v19 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  if (sub_100078DA8(*(unsigned char *)(a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state)) == 0x73736572676F7270
    && v20 == 0xEA00000000004955)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      sub_10007E3BC(3);
    }
  }
  char v23 = *(unsigned char *)(a3 + v19);
  uint64_t v24 = swift_retain();
  LOBYTE(v31[0]) = 0;
  sub_10001F674(v24, v23, a2, 0, v8);
  swift_release();
  uint64_t v25 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 0, 1, v25);
  uint64_t v26 = a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess();
  sub_100082FD8((uint64_t)v8, v26);
  swift_endAccess();
  sub_100079AF8();
  return sub_10000F674((uint64_t)v8, &qword_1000EF130);
}

uint64_t sub_1000A6EAC(uint64_t a1, unsigned int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A9748(a2);
  uint64_t v11 = String.init(cString:)();
  unint64_t v13 = v12;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000133A0(v14, (uint64_t)qword_1000EFA10);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v15 = Logger.logObject.getter();
  int v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v34 = v16;
    uint64_t v35 = a1;
    unsigned int v36 = a2;
    uint64_t v37 = v10;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v39[0] = v33;
    *(_DWORD *)uint64_t v17 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100048718(v11, v13, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    unint64_t v18 = sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    uint64_t v38 = sub_100048718(v18, v19, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    if (!a3) {
      sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = Dictionary.description.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_100048718(v20, v22, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v34, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s | dict = %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v10 = v37;
    a2 = v36;
    a1 = v35;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  *(_DWORD *)(*(void *)(a1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
  uint64_t v23 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  if (sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state)) == 0xD000000000000016
    && v24 == 0x80000001000B3950)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      sub_10007E3BC(4);
    }
  }
  uint64_t v26 = *(void *)(a1 + 48);
  char v27 = *(unsigned char *)(a4 + v23);
  swift_retain();
  unint64_t v28 = a3;
  if (!a3) {
    unint64_t v28 = sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRetain();
  LOBYTE(v39[0]) = 0;
  sub_10001F674(v26, v27, a2, v28, v10);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v29 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 0, 1, v29);
  uint64_t v30 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess();
  sub_100082FD8((uint64_t)v10, v30);
  swift_endAccess();
  sub_100079AF8();
  return sub_10000F674((uint64_t)v10, &qword_1000EF130);
}

uint64_t sub_1000A7384(uint64_t a1, unsigned int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A9748(a2);
  uint64_t v11 = String.init(cString:)();
  unint64_t v13 = v12;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000133A0(v14, (uint64_t)qword_1000EFA10);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v39 = a1;
    unsigned int v40 = a2;
    id v41 = v10;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v45[0] = v38;
    *(_DWORD *)uint64_t v17 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)&long long v46 = sub_100048718(v11, v13, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    unint64_t v18 = sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    *(void *)&long long v46 = sub_100048718(v18, v19, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v42 = a4;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    if (!a3) {
      sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = Dictionary.description.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)&long long v46 = sub_100048718(v20, v22, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s | dict = %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v10 = v41;
    a4 = v42;
    a2 = v40;
    a1 = v39;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  if (!a3)
  {
    uint64_t v29 = *(void *)(a1 + 48);
    char v30 = *(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain();
    unint64_t v31 = sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
LABEL_23:
    swift_bridgeObjectRetain();
    LOBYTE(v45[0]) = 0;
    sub_10001F674(v29, v30, a2, v31, v10);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v32 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 0, 1, v32);
    uint64_t v33 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
    swift_beginAccess();
    sub_100082FD8((uint64_t)v10, v33);
    swift_endAccess();
    sub_100079AF8();
    return sub_10000F674((uint64_t)v10, &qword_1000EF130);
  }
  unint64_t v43 = 0x655F64615F6473;
  unint64_t v44 = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a3 + 16) && (unint64_t v23 = sub_10005513C((uint64_t)v45), (v24 & 1) != 0))
  {
    unsigned int v25 = a2;
    sub_10000F578(*(void *)(a3 + 56) + 32 * v23, (uint64_t)&v46);
  }
  else
  {
    unsigned int v25 = a2;
    long long v46 = 0u;
    long long v47 = 0u;
  }
  sub_10000F474((uint64_t)v45);
  if (!*((void *)&v47 + 1))
  {
    sub_10000F674((uint64_t)&v46, &qword_1000EE410);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    uint64_t v29 = *(void *)(a1 + 48);
    char v30 = *(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain();
    unint64_t v31 = a3;
    a2 = v25;
    goto LABEL_23;
  }
  unint64_t v26 = v43;
  if (!HIDWORD(v43))
  {
    unint64_t v27 = sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    if (v26 == 5)
    {
      if (v27 == 0x73736572676F7270 && v28 == 0xEA00000000004955)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_22;
      }
      char v36 = 3;
    }
    else
    {
      if (v27 == 0xD000000000000019 && v28 == 0x80000001000B3E50) {
        goto LABEL_19;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v37) {
        goto LABEL_22;
      }
      char v36 = 53;
    }
    sub_10007E3BC(v36);
    goto LABEL_22;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A79F4(uint64_t a1, unsigned int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A9748(a2);
  uint64_t v11 = String.init(cString:)();
  unint64_t v13 = v12;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000133A0(v14, (uint64_t)qword_1000EFA10);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v15 = Logger.logObject.getter();
  int v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v34 = v16;
    uint64_t v35 = a1;
    unsigned int v36 = a2;
    char v37 = v10;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v39[0] = v33;
    *(_DWORD *)uint64_t v17 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100048718(v11, v13, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    unint64_t v18 = sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    uint64_t v38 = sub_100048718(v18, v19, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    if (!a3) {
      sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = Dictionary.description.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_100048718(v20, v22, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v34, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s | dict = %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v10 = v37;
    a2 = v36;
    a1 = v35;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  if (sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state)) == 0xD000000000000015
    && v24 == 0x80000001000B3E30)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      sub_10007E3BC(52);
    }
  }
  uint64_t v26 = *(void *)(a1 + 48);
  char v27 = *(unsigned char *)(a4 + v23);
  swift_retain();
  unint64_t v28 = a3;
  if (!a3) {
    unint64_t v28 = sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRetain();
  LOBYTE(v39[0]) = 0;
  sub_10001F674(v26, v27, a2, v28, v10);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v29 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 0, 1, v29);
  uint64_t v30 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess();
  sub_100082FD8((uint64_t)v10, v30);
  swift_endAccess();
  sub_100079AF8();
  return sub_10000F674((uint64_t)v10, &qword_1000EF130);
}

uint64_t sub_1000A7EB8(uint64_t a1, unsigned int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000EE48(&qword_1000EF130);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A9748(a2);
  uint64_t v11 = String.init(cString:)();
  unint64_t v13 = v12;
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000133A0(v14, (uint64_t)qword_1000EFA10);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v37 = a1;
    unsigned int v38 = a2;
    uint64_t v39 = v10;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v43[0] = v36;
    *(_DWORD *)uint64_t v17 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)&long long v44 = sub_100048718(v11, v13, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    unint64_t v18 = sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    *(void *)&long long v44 = sub_100048718(v18, v19, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v40 = a4;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    if (!a3) {
      sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = Dictionary.description.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)&long long v44 = sub_100048718(v20, v22, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "<loom:ViewService:matchHomePodSetupPresenter> interactorSysDropRPFileTransfer: setting up event = %s | state = %s | dict = %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v10 = v39;
    a4 = v40;
    a2 = v38;
    a1 = v37;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  if (!a3)
  {
    uint64_t v28 = *(void *)(a1 + 48);
    char v29 = *(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain();
    unint64_t v30 = sub_10000D968((uint64_t)_swiftEmptyArrayStorage);
LABEL_31:
    swift_bridgeObjectRetain();
    LOBYTE(v43[0]) = 0;
    sub_10001F674(v28, v29, a2, v30, v10);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v33 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v10, 0, 1, v33);
    uint64_t v34 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
    swift_beginAccess();
    sub_100082FD8((uint64_t)v10, v34);
    swift_endAccess();
    sub_100079AF8();
    return sub_10000F674((uint64_t)v10, &qword_1000EF130);
  }
  unint64_t v41 = 0x655F70725F6473;
  unint64_t v42 = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a3 + 16) && (unint64_t v23 = sub_10005513C((uint64_t)v43), (v24 & 1) != 0))
  {
    sub_10000F578(*(void *)(a3 + 56) + 32 * v23, (uint64_t)&v44);
  }
  else
  {
    long long v44 = 0u;
    long long v45 = 0u;
  }
  sub_10000F474((uint64_t)v43);
  if (!*((void *)&v45 + 1))
  {
    sub_10000F674((uint64_t)&v44, &qword_1000EE410);
    goto LABEL_30;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_30;
  }
  if (!HIDWORD(v41))
  {
    if (v41 < 2)
    {
      if (sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state)) != 0xD000000000000018
        || v25 != 0x80000001000B3E70)
      {
        char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0)
        {
          char v27 = 54;
LABEL_29:
          sub_10007E3BC(v27);
          goto LABEL_30;
        }
        goto LABEL_30;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    if (v41 != 2) {
      goto LABEL_30;
    }
    if (sub_100078DA8(*(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state)) == 0xD000000000000014
      && v31 == 0x80000001000B3E90)
    {
      goto LABEL_26;
    }
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      char v27 = 55;
      goto LABEL_29;
    }
LABEL_30:
    uint64_t v28 = *(void *)(a1 + 48);
    char v29 = *(unsigned char *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain();
    unint64_t v30 = a3;
    goto LABEL_31;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000A8514(os_log_t a1, int a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v6 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_finalScreenOfSetupFlowDisplayed;
  if (*(unsigned char *)(a5 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_finalScreenOfSetupFlowDisplayed) == 1)
  {
    if (qword_1000ED860 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000133A0(v7, (uint64_t)qword_1000EFA10);
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      LODWORD(v26) = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "HomePodSetupPresenter: didUpdateStatus called with a new status %d after final screen.", v9, 8u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    if (qword_1000ED860 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000133A0(v14, (uint64_t)qword_1000EFA10);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_t osloga = a1;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 67109378;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 8) = 2080;
      if (a4) {
        uint64_t v18 = 1702195828;
      }
      else {
        uint64_t v18 = 0x65736C6166;
      }
      if (a4) {
        unint64_t v19 = 0xE400000000000000;
      }
      else {
        unint64_t v19 = 0xE500000000000000;
      }
      sub_100048718(v18, v19, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: Interactor called with a new status %d and final: %s", (uint8_t *)v17, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = osloga;
      swift_slowDealloc();
    }

    Class isa = a1[6].isa;
    *(_DWORD *)((char *)isa + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status) = a2;
    unint64_t v21 = *(void **)((char *)isa + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
    *(void *)((char *)isa + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error) = a3;
    id v22 = a3;

    *(unsigned char *)(a5 + v6) = a4 & 1;
    char v23 = sub_100081C58(a2);
    sub_10007E3BC(v23);
  }
}

id sub_1000A886C(uint64_t a1)
{
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EFA10);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    int64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupPresenter: interactorNeedsAppleMusicApproval called", v5, 2u);
    swift_slowDealloc();
  }

  if (*(unsigned char *)(*(void *)(a1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) == 1)
  {
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupPresenter: interactorNeedsAppleMusicApproval user has subscription so not showing music promotion", v8, 2u);
      swift_slowDealloc();
    }

    if (qword_1000ED898 != -1) {
      swift_once();
    }
    sub_1000133A0(v2, (uint64_t)qword_1000F0390);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "HomePodSetup: appleMusicPromoSeen called", v11, 2u);
      swift_slowDealloc();
    }

    unint64_t v12 = *(void **)(a1 + 80);
    return [v12 appleMusicNext];
  }
  else
  {
    char v24 = &type metadata for SharingFeatureFlags;
    unint64_t v14 = sub_100082540();
    unint64_t v25 = v14;
    v23[0] = 0;
    char v15 = isFeatureEnabled(_:)();
    sub_10000E470((uint64_t)v23);
    if ((v15 & 1) != 0
      && (char v24 = &type metadata for SharingFeatureFlags,
          unint64_t v25 = v14,
          v23[0] = 1,
          char v16 = isFeatureEnabled(_:)(),
          sub_10000E470((uint64_t)v23),
          (v16 & 1) == 0))
    {
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupPresenter: interactorNeedsAppleMusicApproval need to show music promotion at end of setup steps", v19, 2u);
        swift_slowDealloc();
      }

      if (qword_1000ED898 != -1) {
        swift_once();
      }
      sub_1000133A0(v2, (uint64_t)qword_1000F0390);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        id v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "HomePodSetup: appleMusicPromoSeen called", v22, 2u);
        swift_slowDealloc();
      }

      return [*(id *)(a1 + 80) appleMusicNext];
    }
    else
    {
      return (id)sub_10007E3BC(24);
    }
  }
}

uint64_t sub_1000A8C6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void **)(a1 + 80);
  swift_retain();
  id v3 = [v2 selectedSiriLanguageCode];
  if (v3)
  {
    os_log_type_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  os_log_type_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  if (!*(void *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8))
  {
    *os_log_type_t v8 = v5;
    v8[1] = v7;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10007E3BC(11);
}

void *sub_1000A8D2C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        os_log_type_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_21;
        }
        uint64_t v10 = v5;
        id v11 = [v7 name];
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          goto LABEL_5;
        }
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_17;
        }

LABEL_5:
        ++v6;
        uint64_t v5 = v10;
        if (v9 == v10) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1000A8EE8(void *a1)
{
  id v1 = [a1 accessories];
  sub_10003DD8C(0, (unint64_t *)&qword_1000EFA08);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_20;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v2 + 8 * i + 32);
    }
    unint64_t v6 = v5;
    id v7 = [v5 category];
    id v8 = [v7 categoryType];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
LABEL_6:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      continue;
    }
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_22;
  }
LABEL_21:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
    goto LABEL_23;
  }
LABEL_22:
  swift_release();
}

uint64_t sub_1000A9144()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A917C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A91BC(uint64_t *a1)
{
  return sub_10009D574(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t *))(v1 + 24));
}

void sub_1000A91C8(char a1)
{
}

void sub_1000A91D0(void *a1)
{
  sub_1000A462C(a1, v1);
}

uint64_t sub_1000A91D8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000A9210(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000A4FD4(a1, a2, a3, a4, a5, *(unsigned char *)(v5 + 16));
}

void sub_1000A921C(void *a1, uint64_t a2)
{
  sub_1000A5558(a1, a2, *(unsigned char *)(v2 + 16));
}

BOOL sub_1000A9228(int a1)
{
  return a1 == 11 || a1 == 33;
}

uint64_t sub_1000A923C(uint64_t *a1)
{
  return sub_10009AE48(a1);
}

uint64_t sub_1000A9244()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A927C(char a1)
{
  return sub_10009CE30(a1);
}

uint64_t sub_1000A9284(unsigned int a1, unint64_t a2)
{
  return sub_1000A1148(a1, a2, v2, "HomePodSetupInteractor progressHandler: inEvent = %s");
}

uint64_t sub_1000A92A8(unsigned int a1, unint64_t a2)
{
  return sub_1000A1148(a1, a2, v2, "HomePodSetupInteractor SysDrop progressHandler: inEvent = %s");
}

uint64_t sub_1000A92CC(uint64_t a1, unint64_t a2)
{
  return sub_1000A1360(a1, a2);
}

uint64_t sub_1000A92D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A15E8(a1, a2, a3, a4);
}

uint64_t sub_1000A92DC(unint64_t a1, uint64_t a2)
{
  return sub_1000A1840(a1, a2);
}

uint64_t sub_1000A92E4()
{
  return sub_1000A2D7C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Home iCloud", 301010);
}

uint64_t sub_1000A9310()
{
  return sub_1000A2D7C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for iTunes sign in", 301007);
}

uint64_t sub_1000A933C(char a1)
{
  return sub_1000A1B78(a1);
}

uint64_t sub_1000A9344()
{
  return sub_1000A2D7C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Location Enable", 301022);
}

uint64_t sub_1000A9370()
{
  return sub_1000A1CBC();
}

uint64_t sub_1000A9378(__int16 a1)
{
  return sub_1000A1E2C(a1);
}

uint64_t sub_1000A9380(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000A203C(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_1000A9388()
{
  return sub_1000A2794();
}

uint64_t sub_1000A9390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A29C0(a1, a2, a3);
}

uint64_t sub_1000A9398()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for terms", 8);
}

uint64_t sub_1000A93C0()
{
  return sub_1000A2C24();
}

uint64_t sub_1000A93C8()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForHomePodSoftwareUpdateNonSetupAck", 59);
}

uint64_t sub_1000A93F0()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForHomePodSoftwareUpdateNonSetupCompleted", 4);
}

uint64_t sub_1000A9418()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForHomePodSoftwareUpdateNonSetupCancelled", 5);
}

uint64_t sub_1000A9440()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for sound recognition", 6);
}

uint64_t sub_1000A9468()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForAutomaticSoftwareUpdateHandler", 7);
}

uint64_t sub_1000A9490()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForSoftwareUpdateHandler", 50);
}

uint64_t sub_1000A94B8()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for captive network confirmation", 51);
}

uint64_t sub_1000A94E0()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for TV Audio", 25);
}

uint64_t sub_1000A9508()
{
  return sub_1000A2D7C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for install Home app", 301019);
}

uint64_t sub_1000A9534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A2EB8(a1, a2, a3, a4);
}

uint64_t sub_1000A953C()
{
  return sub_1000A3180();
}

uint64_t sub_1000A9544(uint64_t a1)
{
  return sub_1000A3300(a1);
}

uint64_t sub_1000A954C(char a1)
{
  return sub_1000A35FC(a1);
}

uint64_t sub_1000A9554(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1000A3780(a1, a2, a3, a4);
}

uint64_t sub_1000A955C()
{
  return sub_1000A3A1C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for HomePod Logging Profile Ack", 26);
}

uint64_t sub_1000A9584(unint64_t a1, unint64_t a2)
{
  return sub_1000A3B70(a1, a2);
}

uint64_t sub_1000A958C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000EE48(&qword_1000EE3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A95F4(__int16 a1)
{
  if (qword_1000ED860 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000133A0(v2, (uint64_t)qword_1000EFA10);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HomePodSetupPresenter: interactorNeedsPINCodeEntered called with a flags:%u and inThrottleSeconds:%d", (uint8_t *)v5, 0xEu);
    swift_slowDealloc();
  }

  if ((a1 & 0x800) != 0) {
    char v6 = 56;
  }
  else {
    char v6 = 17;
  }
  return sub_10007E3BC(v6);
}

const char *sub_1000A9748(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        uint64_t result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        uint64_t result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        uint64_t result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        uint64_t result = "SU-No-SetupCancelled";
        break;
      case 904:
        uint64_t result = "SU-No-SetupObliterate";
        break;
      case 905:
        uint64_t result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        uint64_t result = "SysDrop AirDrop Event";
        break;
      case 907:
        uint64_t result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        uint64_t result = "SysDrop Cancel Event";
        break;
      case 909:
        uint64_t result = "File Transfer Progress Event";
        break;
      case 910:
        uint64_t result = "File Transfer Completed Event";
        break;
      case 911:
        uint64_t result = "iOSWiFiSetup";
        break;
      case 912:
        uint64_t result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        uint64_t result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            uint64_t result = "AuthAccountsStart";
            break;
          case 803:
            uint64_t result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            uint64_t result = "AuthAccountsStoreProgress";
            break;
          case 805:
            uint64_t result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          uint64_t result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          uint64_t result = "TVLSFinish";
          break;
        case 270:
          uint64_t result = "TVLSEstimateStart";
          break;
        case 272:
          uint64_t result = "TVLSEstimateFinal";
          break;
        case 274:
          uint64_t result = "TVLSEstimateFailed";
          break;
        case 276:
          uint64_t result = "TVLSTryAgain";
          break;
        case 277:
          uint64_t result = "TVLSToneBegan";
          break;
        case 278:
          uint64_t result = "TVLCalStart";
          break;
        case 279:
          uint64_t result = "TVLCalStep";
          break;
        case 280:
          uint64_t result = "TVLCalFailed";
          break;
        case 281:
          uint64_t result = "TVLCalTryAgain";
          break;
        case 282:
          uint64_t result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          uint64_t result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            uint64_t result = "iCloudStart";
          }
          else
          {
            if (a1 != 224) {
              return "?";
            }
            uint64_t result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }
        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              uint64_t result = "Error";
              break;
            case 31:
              uint64_t result = "SessionStarted";
              break;
            case 32:
              uint64_t result = "SessionEnded";
              break;
            case 33:
              uint64_t result = "SessionSecured";
              break;
            case 35:
              uint64_t result = "ConnectStart";
              break;
            case 40:
              uint64_t result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        uint64_t result = "BasicConfigStart";
        break;
      case 'Z':
        uint64_t result = "BasicConfigFinish";
        break;
      case '\\':
        uint64_t result = "StepStart";
        break;
      case '^':
        uint64_t result = "StepFinish";
        break;
      case '_':
        uint64_t result = "PreFinish";
        break;
        uint64_t result = "SetupFinished";
        break;
      case 'a':
        uint64_t result = "SetupResumed";
        break;
      case 'b':
        uint64_t result = "SetupSuspend";
        break;
      case 'c':
        uint64_t result = "SetupPeerSWUpdate";
        break;
      case 'd':
        uint64_t result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_1000AA1A4()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_1000AA1D8()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load HPdetector_SceneClassifier_B238.mlmodelc in the bundle resource", v0, 2u);
}

void sub_1000AA220()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load HPdetector_SmartCam_B238.mlmodelc in the bundle resource", v0, 2u);
}

void sub_1000AA268()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load HPdetector_SceneClassifier_B520.mlmodelc in the bundle resource", v0, 2u);
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.init(string:)()
{
  return URLComponents.init(string:)();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t URL.init(fileURLWithPath:isDirectory:)()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}