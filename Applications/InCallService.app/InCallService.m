id sub_100009A44(uint64_t a1)
{
  void v2[5];

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100009AC8;
  v2[3] = &unk_1002CD518;
  v2[4] = *(void *)(a1 + 32);
  return +[UIView animateWithDuration:v2 animations:0.150000006];
}

void sub_100009AC8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contactLabel];
  [v1 setAlpha:1.0];
}

void sub_100009B10(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) addContactButton];
  [v1 setAlpha:0.0];
}

id sub_100009B58(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100009BDC;
  v2[3] = &unk_1002CD518;
  v2[4] = *(void *)(a1 + 32);
  return +[UIView animateWithDuration:v2 animations:0.150000006];
}

void sub_100009BDC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) addContactButton];
  [v1 setAlpha:1.0];
}

void sub_100009C24(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contactLabel];
  [v1 setAlpha:0.0];
}

void sub_100009C6C(uint64_t a1)
{
  double v2 = 0.0;
  double v3 = 0.0;
  if (*(unsigned char *)(a1 + 48))
  {
    if (*(void *)(a1 + 40)) {
      double v3 = 1.0;
    }
    else {
      double v3 = 0.0;
    }
  }
  v4 = [*(id *)(a1 + 32) contactLabel];
  [v4 setAlpha:v3];

  if (*(unsigned char *)(a1 + 48))
  {
    if (*(void *)(a1 + 40)) {
      double v2 = 0.0;
    }
    else {
      double v2 = 1.0;
    }
  }
  v5 = [*(id *)(a1 + 32) addContactButton];
  [v5 setAlpha:v2];

  v6 = [*(id *)(a1 + 32) delegate];
  id v8 = v6;
  double v7 = 1.0;
  if (!*(unsigned char *)(a1 + 49)) {
    double v7 = 0.0;
  }
  [v6 setDeleteButtonAlpha:v7];
}

void sub_10000B2C8(id a1)
{
  unint64_t v1 = +[PHUIConfiguration screenSize];
  if (v1 == 7 || v1 == 2) {
    qword_10031E210 = 0x3FB47AE147AE147BLL;
  }
}

unint64_t sub_10000B39C(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  if (result > 7) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = qword_100284268[result];
  }
  qword_100325CA8 = v2;
  return result;
}

void sub_10000B42C(id a1)
{
  unint64_t v1 = +[PHUIConfiguration screenSize];
  if (v1 == 7 || v1 == 2) {
    byte_100325CB8 = 1;
  }
}

void sub_10000B4A8(id a1)
{
  unint64_t v1 = +[UIScreen mainScreen];
  [v1 bounds];
  double v3 = v2;
  double v5 = v4;

  unint64_t v6 = +[PHUIConfiguration screenSize];
  BOOL v7 = v6 == 7 || v6 == 2;
  double v8 = 3.40282347e38;
  if (v7) {
    double v8 = 420.0;
  }
  if (v3 >= v5) {
    double v9 = v5;
  }
  else {
    double v9 = v3;
  }
  if (v8 >= v9) {
    double v8 = v9;
  }
  qword_100325CC8 = *(void *)&v8;
}

void sub_10000B580(id a1)
{
  byte_100325CD8 = (id)+[PHUIConfiguration screenSize] == (id)6;
}

void sub_10000BA60(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallControlSize];
  double v2 = 10.0;
  if (v1 - 1 <= 3) {
    double v2 = dbl_1002842A8[v1 - 1];
  }
  id v5 = +[UIFont systemFontOfSize:v2];
  uint64_t v3 = [v5 withCaseSensitiveAttribute];
  double v4 = (void *)qword_100325CE8;
  qword_100325CE8 = v3;
}

void sub_10000BB38(id a1)
{
  uint64_t v1 = +[UIFont systemFontOfSize:20.0 weight:UIFontWeightMedium];
  double v2 = (void *)qword_100325CF8;
  qword_100325CF8 = v1;
}

void sub_10000BBDC(id a1)
{
  uint64_t v1 = +[UIFont monospacedDigitSystemFontOfSize:15.0 weight:UIFontWeightRegular];
  double v2 = (void *)qword_100325D08;
  qword_100325D08 = v1;
}

void sub_10000BC80(id a1)
{
  uint64_t v1 = +[UIFont monospacedDigitSystemFontOfSize:18.0 weight:UIFontWeightRegular];
  double v2 = (void *)qword_100325D18;
  qword_100325D18 = v1;
}

void sub_10000BD24(id a1)
{
  uint64_t v1 = +[UIFont monospacedDigitSystemFontOfSize:20.0 weight:UIFontWeightRegular];
  double v2 = (void *)qword_100325D28;
  qword_100325D28 = v1;
}

void sub_10000BF44(id a1)
{
  unint64_t v1 = +[PHUIConfiguration screenSize];
  double v2 = 18.0;
  if (v1 == 6) {
    double v2 = 20.0;
  }
  uint64_t v3 = +[UIFont monospacedDigitSystemFontOfSize:v2 weight:UIFontWeightRegular];
  double v4 = (void *)qword_100325D38;
  qword_100325D38 = v3;
}

void sub_10000C0AC(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallControlSize];
  double v2 = 10.0;
  if (v1 - 1 <= 3) {
    double v2 = dbl_1002842A8[v1 - 1];
  }
  uint64_t v3 = +[UIFont monospacedDigitSystemFontOfSize:v2 weight:UIFontWeightLight];
  double v4 = (void *)qword_100325D48;
  qword_100325D48 = v3;
}

void sub_10000C174(id a1)
{
  id v3 = +[UIFontDescriptor phPreferredFontDescriptorForTextStyle:UIFontTextStyleBody];
  [v3 pointSize];
  uint64_t v1 = +[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:");
  double v2 = (void *)qword_100325D58;
  qword_100325D58 = v1;
}

void sub_10000C26C(id a1)
{
  unint64_t v1 = +[PHUIConfiguration screenSize];
  if (v1 == 7 || v1 == 2) {
    byte_100325D68 = 1;
  }
}

void sub_10000EF84(uint64_t a1)
{
  [*(id *)(a1 + 32) labelAlphaValueForActivityState:*(unsigned __int16 *)(a1 + 40)];
  double v3 = v2;
  double v4 = [*(id *)(a1 + 32) participantMarqueeLabel];
  [v4 setAlpha:v3];

  id v5 = [*(id *)(a1 + 32) statusLabel];
  [v5 setAlpha:v3];
}

UIFont *__cdecl sub_10000F8D4(UIFont *self, SEL a2)
{
  UIFontDescriptorAttributeName v13 = UIFontDescriptorFeatureSettingsAttribute;
  v10[0] = UIFontFeatureTypeIdentifierKey;
  v10[1] = UIFontFeatureSelectorIdentifierKey;
  v11[0] = &off_1002DEBF8;
  v11[1] = &off_1002DEC10;
  double v3 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:2];
  v12 = v3;
  double v4 = +[NSArray arrayWithObjects:&v12 count:1];
  v14 = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];

  unint64_t v6 = [(UIFont *)self fontDescriptor];
  BOOL v7 = [v6 fontDescriptorByAddingAttributes:v5];

  double v8 = +[UIFont fontWithDescriptor:v7 size:0.0];

  return (UIFont *)v8;
}

id sub_10000FA34(void *a1)
{
  return sub_10000FA3C(a1, 0);
}

id sub_10000FA3C(void *a1, void *a2)
{
  double v3 = a1;
  double v4 = a2;
  if (!v4)
  {
    id v5 = +[NSBundle mainBundle];
    double v4 = [v5 bundleIdentifier];
  }
  if ([(__CFString *)v3 length] && [(__CFString *)v4 length]) {
    unint64_t v6 = (void *)CFPreferencesCopyValue(v3, v4, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
  }
  else {
    unint64_t v6 = 0;
  }

  return v6;
}

void sub_10000FB00(void *a1, void *a2)
{
}

void sub_10000FB08(void *a1, void *a2, void *a3)
{
  key = a1;
  id v5 = a2;
  unint64_t v6 = a3;
  if (!v6)
  {
    BOOL v7 = +[NSBundle mainBundle];
    unint64_t v6 = [v7 bundleIdentifier];
  }
  if ([(__CFString *)key length] && [(__CFString *)v6 length])
  {
    CFPreferencesSetValue(key, v5, v6, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
    CFPreferencesSynchronize(v6, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
  }
}

void sub_10001085C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setAlpha:1.0];
}

void sub_1000109FC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setAlpha:0.0];
}

void sub_100010A44(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 videoOverlayViewController:*(void *)(a1 + 32) isShowingOverlay:0];
}

void sub_1000110AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000110C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000110D4(uint64_t a1)
{
}

void sub_1000110DC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000113BC(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.mobilephone.tuRouteUI", 0);
  id v2 = (void *)qword_100325D78;
  qword_100325D78 = (uint64_t)v1;
}

void sub_10001155C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100011570(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = +[AVSystemController sharedAVSystemController];
  double v3 = [v2 attributeForKey:AVSystemController_HeadphoneJackIsConnectedAttribute];
  unsigned __int8 v4 = [v3 BOOLValue];

  if ((v4 & 1) != 0 || [WeakRetained isBluetoothLE])
  {
    uint64_t v5 = *(void *)(a1 + 32);
    unint64_t v6 = +[UIImage headphonesRouteGlyphForDisplayStyle:1];
    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
LABEL_4:

    goto LABEL_5;
  }
  unsigned int v7 = [WeakRetained isAuxiliary];
  uint64_t v8 = *(void *)(a1 + 32);
  if (v7)
  {
    unint64_t v6 = +[UIImage bluetoothAudioRouteGlyphForDisplayStyle:1];
    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v6);
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
LABEL_5:
}

CFStringRef sub_100011694(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return @"call";
  }
  else {
    return *(&off_1002CD880 + a1 - 1);
  }
}

uint64_t sub_1000124D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10001265C(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100012940(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100012A30(id a1, PHSingleCallParticipantLabelView *a2)
{
  v12 = a2;
  id v2 = [(PHSingleCallParticipantLabelView *)v12 secondaryInfoLabel];
  double v3 = 0.0;
  [v2 setAlpha:0.0];

  id v4 = +[CNKFeatures sharedInstance];
  unsigned __int8 v5 = [v4 isHeroImageEnabled];

  if ((v5 & 1) == 0)
  {
    unint64_t v6 = [(PHSingleCallParticipantLabelView *)v12 traitCollection];
    id v7 = [v6 _backlightLuminance];

    if (v7 != (id)1) {
      double v3 = 1.0;
    }
    uint64_t v8 = [(PHAbstractCallParticipantLabelView *)v12 statusLabel];
    [v8 setAlpha:v3];
  }
  double v9 = [(PHSingleCallParticipantLabelView *)v12 callDisplayStyleManager];
  v10 = +[PHUIConfiguration singleCallStatusLabelFontForCallDisplayStyle:](PHUIConfiguration, "singleCallStatusLabelFontForCallDisplayStyle:", [v9 callDisplayStyle]);
  v11 = [(PHAbstractCallParticipantLabelView *)v12 statusLabel];
  [v11 setFont:v10];
}

void sub_100012B58(id a1, PHSingleCallParticipantLabelView *a2)
{
  id v2 = a2;
  double v3 = [(PHSingleCallParticipantLabelView *)v2 secondaryInfoLabel];
  [v3 setAlpha:1.0];

  id v4 = [(PHSingleCallParticipantLabelView *)v2 callDisplayStyleManager];
  unsigned __int8 v5 = +[PHUIConfiguration singleCallStatusLabelFontForCallDisplayStyle:](PHUIConfiguration, "singleCallStatusLabelFontForCallDisplayStyle:", [v4 callDisplayStyle]);
  unint64_t v6 = [(PHSingleCallParticipantLabelView *)v2 secondaryInfoLabel];
  [v6 setFont:v5];

  id v7 = [(PHSingleCallParticipantLabelView *)v2 callDisplayStyleManager];
  uint64_t v8 = +[PHUIConfiguration singleCallStatusLabelFontForCallDisplayStyle:](PHUIConfiguration, "singleCallStatusLabelFontForCallDisplayStyle:", [v7 callDisplayStyle]);
  double v9 = [(PHAbstractCallParticipantLabelView *)v2 statusLabel];
  [v9 setFont:v8];

  id v10 = [(PHAbstractCallParticipantLabelView *)v2 statusLabel];

  [v10 setAlpha:1.0];
}

void sub_1000142EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  double v3 = [*(id *)(a1 + 32) statusLabel];
  [v3 setHidden:v2];

  uint64_t v4 = *(unsigned __int8 *)(a1 + 40);
  unsigned __int8 v5 = [*(id *)(a1 + 32) iconView];
  [v5 setHidden:v4];

  uint64_t v6 = *(unsigned __int8 *)(a1 + 40);
  id v7 = [*(id *)(a1 + 32) badgeView];
  [v7 setHidden:v6];
}

void sub_100014404(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) iconView];
  [v2 setHidden:1];

  id v3 = [*(id *)(a1 + 32) badgeView];
  [v3 setHidden:1];
}

void sub_100015720(uint64_t a1)
{
  CGAffineTransformMakeScale(&v4, 0.9, 0.9);
  uint64_t v2 = [*(id *)(a1 + 32) participantMarqueeLabel];
  CGAffineTransform v3 = v4;
  [v2 setTransform:&v3];
}

void sub_10001578C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) participantMarqueeLabel];
  [v2 setAlpha:0.0];

  CGAffineTransform v3 = [*(id *)(a1 + 32) statusLabel];
  [v3 setAlpha:0.0];

  id v4 = [*(id *)(a1 + 32) badgeView];
  [v4 setAlpha:0.0];
}

void sub_10001581C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) firstNameLabel];
  long long v8 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v10[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  long long v7 = v10[0];
  v10[1] = v8;
  long long v11 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  long long v6 = v11;
  [v2 setTransform:v10];

  CGAffineTransform v3 = [*(id *)(a1 + 32) lastNameLabel];
  v9[0] = v7;
  v9[1] = v8;
  v9[2] = v6;
  [v3 setTransform:v9];

  id v4 = [*(id *)(a1 + 32) firstNameLabel];
  [v4 setAlpha:1.0];

  unsigned __int8 v5 = [*(id *)(a1 + 32) lastNameLabel];
  [v5 setAlpha:1.0];
}

void sub_100015C04(uint64_t a1)
{
  CGAffineTransformMakeScale(&v7, 0.9, 0.9);
  uint64_t v2 = [*(id *)(a1 + 32) firstNameLabel];
  CGAffineTransform v6 = v7;
  [v2 setTransform:&v6];

  CGAffineTransformMakeScale(&v5, 0.9, 0.9);
  CGAffineTransform v3 = [*(id *)(a1 + 32) lastNameLabel];
  CGAffineTransform v4 = v5;
  [v3 setTransform:&v4];
}

void sub_100015CB8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) firstNameLabel];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) lastNameLabel];
  [v3 setAlpha:0.0];
}

void sub_100015D2C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) participantMarqueeLabel];
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v7[1] = v3;
  v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v7];

  CGAffineTransform v4 = [*(id *)(a1 + 32) participantMarqueeLabel];
  [v4 setAlpha:1.0];

  CGAffineTransform v5 = [*(id *)(a1 + 32) statusLabel];
  [v5 setAlpha:1.0];

  CGAffineTransform v6 = [*(id *)(a1 + 32) badgeView];
  [v6 setAlpha:1.0];
}

void sub_100016964(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 48)) {
    [*(id *)(a1 + 32) setWantsBlur:0];
  }
  if (!a2)
  {
    CGAffineTransform v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E9454(v4);
    }

    CGAffineTransform v5 = [*(id *)(a1 + 40) sharedProfileStateOracle];
    id v9 = 0;
    id v6 = [v5 updateContactAndNicknamesForAutoUpdateWithError:&v9];
    id v7 = v9;

    if (v7)
    {
      long long v8 = sub_1000D5130();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_1001E93DC((uint64_t)v7, v8);
      }
    }
  }
}

void sub_100017E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100017E98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained animateToFirstLabel];
    id WeakRetained = v2;
  }
}

void sub_100018034(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) statusLabel];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) posterNameViewModel];
  [v3 updatePosterNameAlpha:0.0];
}

id *sub_1000180A4(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    id v3 = [result[4] statusLabel];
    [v3 setAttributedOrPlainText:v2[5]];

    CGAffineTransform v4 = [v2[4] posterNameViewModel];
    CGAffineTransform v5 = [v2[4] statusLabel];
    id v6 = [v5 text];
    [v4 updateStatus:v6];

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000181A0;
    _OWORD v7[3] = &unk_1002CD518;
    v7[4] = v2[4];
    return (id *)+[UIView animateWithDuration:v7 animations:0.200000003];
  }
  return result;
}

void sub_1000181A0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) firstNameLabel];
  id v3 = [v2 text];
  if (v3)
  {
    CGAffineTransform v4 = [*(id *)(a1 + 32) lastNameLabel];
    CGAffineTransform v5 = [v4 text];
    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) firstNameLabel];
      id v7 = [v6 text];
      if ([v7 length])
      {
        long long v8 = [*(id *)(a1 + 32) lastNameLabel];
        id v9 = [v8 text];
        if ([v9 length]) {
          double v10 = 0.0;
        }
        else {
          double v10 = 1.0;
        }
      }
      else
      {
        double v10 = 1.0;
      }
    }
    else
    {
      double v10 = 1.0;
    }
  }
  else
  {
    double v10 = 1.0;
  }

  long long v11 = [*(id *)(a1 + 32) statusLabel];
  [v11 setAlpha:v10];

  id v12 = [*(id *)(a1 + 32) posterNameViewModel];
  [v12 updatePosterNameAlpha:1.0];
}

void sub_1000190CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  if (![v2 isCallRinging])
  {

    goto LABEL_5;
  }
  id v3 = [*(id *)(a1 + 32) ambientLayout];

  if (!v3)
  {
LABEL_5:
    CGAffineTransform v4 = [*(id *)(a1 + 32) avatarView];
    CGAffineTransform v5 = v4;
    long long v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
    long long v8 = *(_OWORD *)&CGAffineTransformIdentity.a;
    long long v9 = v7;
    long long v10 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    id v6 = (CGAffineTransform *)&v8;
    goto LABEL_6;
  }
  CGAffineTransformMakeScale(&v12, 0.9, 0.9);
  CGAffineTransform v4 = [*(id *)(a1 + 32) avatarView];
  CGAffineTransform v5 = v4;
  CGAffineTransform v11 = v12;
  id v6 = &v11;
LABEL_6:
  [v4 setTransform:v6, v8, v9, v10, *(_OWORD *)&v11.a, *(_OWORD *)&v11.c, *(_OWORD *)&v11.tx];
}

uint64_t sub_10001919C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10001CEA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10001E620(id a1)
{
  id v1 = [[PHPIPController alloc] initForScreenSharing:0];
  id v2 = (void *)qword_100325D88;
  qword_100325D88 = (uint64_t)v1;
}

id sub_10001EA4C(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v2 = 5;
  }
  else {
    uint64_t v2 = 4;
  }
  return _[a2 setContentType:v2];
}

void sub_10001F14C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_10001F180(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setRotating:0];
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"PHPIPControllerDidRotateNotification" object:*(void *)(a1 + 32)];

  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(void))(v4 + 16))();
  }
  if ([WeakRetained wantsPreferredContentSizeUpdateAfterRotationFinishes])
  {
    [WeakRetained setWantsPreferredContentSizeUpdateAfterRotationFinishes:0];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001F274;
    block[3] = &unk_1002CD518;
    block[4] = WeakRetained;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10001F274(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) pipProxy];
  [v1 preferredContentSizeDidChangeForViewController];
}

void sub_10001F2B8(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setRotating:1];
  uint64_t v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:@"PHPIPControllerWillRotateNotification" object:*(void *)(a1 + 32)];

  id v5 = [*(id *)(a1 + 32) pipProxy];
  [v5 rotateContentContainer:a2 withCompletionHandler:*(void *)(a1 + 40)];
}

void sub_10001F8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001F8D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setPipState:3];
}

id sub_10001FF44(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) pipState];
  if (!result)
  {
    id result = [*(id *)(a1 + 32) shouldObtainDismissalAssertions];
    if (result)
    {
      id v3 = [(id)objc_opt_class() inCallRootViewControllerClass];
      return [v3 releaseDismissalAssertionForReason:@"PHPIPPresenceReason"];
    }
  }
  return result;
}

BOOL sub_1000213E0(id a1, TUConversationActivitySession *a2)
{
  uint64_t v2 = a2;
  BOOL v3 = [(TUConversationActivitySession *)v2 state] == (id)1
    || [(TUConversationActivitySession *)v2 state] == 0;

  return v3;
}

BOOL sub_100021430(id a1, TUConversationParticipant *a2, BOOL *a3)
{
  return [(TUConversationParticipant *)a2 isScreenEnabled];
}

void sub_100022CDC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) speechSynthesizer];
  id v4 = 0;
  [v1 pauseSpeakingAtNextBoundary:1 synchronously:0 error:&v4];
  id v2 = v4;

  if (v2)
  {
    BOOL v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001E95DC();
    }
  }
}

void sub_1000230D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained speechSynthesizer];
    id v5 = [v4 startSpeakingRequest:*(void *)(a1 + 32)];

    if (v5)
    {
      id v6 = sub_1000D5130();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_1001E95DC();
      }
    }
    [v3 setPlayAnnouncementBlock:0];
  }
}

void sub_100023170(uint64_t a1)
{
  [*(id *)(a1 + 32) setPlayAnnouncementBlock:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) delay];
  dispatch_time_t v3 = dispatch_time(0, (uint64_t)(v2 * 1000000000.0));
  id v4 = *(void **)(a1 + 40);

  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_100023298(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) playAnnouncementBlock];
  dispatch_time_t v3 = v2;
  if (v2) {
    dispatch_block_cancel(v2);
  }
  [*(id *)(a1 + 32) setPlayAnnouncementBlock:0];
  id v4 = [*(id *)(a1 + 32) speechSynthesizer];
  id v7 = 0;
  [v4 stopSpeakingAtNextBoundary:1 synchronously:0 error:&v7];
  id v5 = v7;

  if (v5)
  {
    id v6 = sub_1000D5130();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E95DC();
    }
  }
}

void sub_100023818(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_100023FB0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) currentState];
  if (result == 7)
  {
    dispatch_time_t v3 = *(void **)(a1 + 32);
    return [v3 setCurrentState:0];
  }
  return result;
}

void sub_1000247E0(uint64_t a1, void *a2)
{
  id v3 = [a2 response];
  if (v3 == (id)2)
  {
    id v4 = (id *)(a1 + 40);
  }
  else
  {
    if (v3 != (id)1) {
      return;
    }
    id v4 = (id *)(a1 + 32);
  }
  id v5 = *v4;
  if (v5)
  {
    id v7 = v5;
    id v6 = +[LSApplicationWorkspace defaultWorkspace];
    [v6 openSensitiveURL:v7 withOptions:0];
  }
}

id sub_100024AF0(uint64_t a1)
{
  id result = +[PHUIConfiguration inCallBottomBarSpacing];
  double v3 = 50.0;
  switch((unint64_t)result)
  {
    case 0uLL:
      break;
    case 2uLL:
      double v3 = 85.5;
      break;
    case 3uLL:
      double v3 = 78.3000031;
      break;
    case 4uLL:
      double v3 = 54.0;
      break;
    case 5uLL:
      id result = [*(id *)(a1 + 40) homeButtonOffsetForView:*(void *)(a1 + 32) 50.0];
      double v5 = 124.0;
      goto LABEL_8;
    case 6uLL:
      id result = [*(id *)(a1 + 40) homeButtonOffsetForView:*(void *)(a1 + 32) 50.0];
      double v5 = 126.0;
LABEL_8:
      double v3 = v5 - v4;
      break;
    default:
      double v3 = 61.0;
      break;
  }
  qword_100325D98 = *(void *)&v3;
  return result;
}

void sub_100024C10(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallBottomBarLowerOffset];
  uint64_t v2 = 0;
  if (v1 - 1 <= 4) {
    uint64_t v2 = qword_100284440[v1 - 1];
  }
  qword_100325DA8 = v2;
}

void sub_1000250E4(id a1)
{
  unint64_t v1 = sub_1000D5130();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "PHAudioCallViewController: Requested Punch Out presentation", buf, 2u);
  }

  uint64_t v2 = +[TUCallCenter sharedInstance];
  double v3 = [v2 frontmostAudioOrVideoCall];

  if (v3)
  {
    double v4 = [v3 provider];
    double v5 = [v4 bundleIdentifier];

    id v6 = [v5 length];
    id v7 = sub_1000D5130();
    long long v8 = v7;
    if (v6)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v14 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Punching out to app with bundle identifier %@", buf, 0xCu);
      }

      v11[0] = FBSOpenApplicationOptionKeyUnlockDevice;
      v11[1] = FBSOpenApplicationOptionKeyPromptUnlockDevice;
      v12[0] = &__kCFBooleanTrue;
      v12[1] = &__kCFBooleanTrue;
      long long v8 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:2];
      id v9 = objc_alloc_init((Class)FBSOpenApplicationService);
      long long v10 = +[FBSOpenApplicationOptions optionsWithDictionary:v8];
      [v9 openApplication:v5 withOptions:v10 completion:&stru_1002CDDB8];
    }
    else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      sub_1001E9644((uint64_t)v3, v8);
    }
  }
}

void sub_1000252EC(id a1, BSProcessHandle *a2, NSError *a3)
{
  double v4 = a2;
  double v5 = a3;
  id v6 = sub_1000D5130();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412546;
    long long v8 = v4;
    __int16 v9 = 2112;
    long long v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Punchout completed - Process: %@ Error: %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_1000254BC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 32);
  double v3 = [*(id *)(a1 + 32) provider];
  double v4 = [v3 bundleIdentifier];

  if ([v4 length])
  {
    [*(id *)(a1 + 40) activateProviderInBackgroundWithBundleID:v4];
  }
  else
  {
    double v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001E96BC(v2, v5);
    }
  }
}

void sub_100025694(id a1, BOOL a2, NSError *a3)
{
  double v3 = a3;
  double v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Background activation completed - Error: %@", (uint8_t *)&v5, 0xCu);
  }
}

void sub_100025CD4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100325DB8;
  qword_100325DB8 = (uint64_t)v1;
}

void sub_1000261F4(id a1)
{
  id v1 = objc_alloc_init(PHAudioInterruptionController);
  uint64_t v2 = (void *)qword_100325DC8;
  qword_100325DC8 = (uint64_t)v1;
}

void sub_1000264E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100026508(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Communication policy changed notification fired", v3, 2u);
  }

  [WeakRetained handleCommunicationPolicyChangedNotification];
}

BOOL sub_100026E04(id a1, TUCall *a2)
{
  uint64_t v2 = a2;
  if ([(TUCall *)v2 isSOS]) {
    unsigned __int8 v3 = 1;
  }
  else {
    unsigned __int8 v3 = [(TUCall *)v2 isEmergency];
  }

  return v3;
}

void sub_1000273A4(id a1)
{
  id v6 = +[NSMutableString stringWithString:@"01234567890abcdefghijklmnopqrstuvwxyz+*#"];
  for (uint64_t i = 0; i != 12; ++i)
  {
    uint64_t v2 = +[TPNumberPadButton localizedLettersForCharacter:qword_100284478[i]];
    [v6 appendString:v2];
  }
  unsigned __int8 v3 = +[NSCharacterSet whitespaceCharacterSet];
  uint64_t v4 = [v6 stringByTrimmingCharactersInSet:v3];
  int v5 = (void *)qword_100325DD8;
  qword_100325DD8 = v4;
}

void sub_1000293E8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) speechSynthesizer];
  unsigned __int8 v3 = [v2 startSpeakingRequest:*(void *)(a1 + 40)];

  if (v3)
  {
    uint64_t v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E9738((uint64_t)v3, v4);
    }
  }
}

void sub_100029E94(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];

  uint64_t v4 = [*(id *)(a1 + 32) view];
  [v4 setAlpha:1.0];
}

BOOL sub_10002A348(id a1, TUCall *a2)
{
  uint64_t v2 = a2;
  if ([(TUCall *)v2 isConversation]) {
    BOOL v3 = [(TUCall *)v2 status] == 3;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

id sub_10002A5F8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) activePhoneCallExists];
  if ((result & 1) == 0)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10002A6D4;
    v4[3] = &unk_1002CD518;
    uint64_t v5 = *(void *)(a1 + 32);
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10002A754;
    v3[3] = &unk_1002CD540;
    v3[4] = v5;
    return +[UIView animateWithDuration:v4 animations:v3 completion:0.349999994];
  }
  return result;
}

void sub_10002A6D4(uint64_t a1)
{
  CGAffineTransformMakeScale(&v5, 1.5, 1.5);
  uint64_t v2 = [*(id *)(a1 + 32) view];
  CGAffineTransform v4 = v5;
  [v2 setTransform:&v4];

  BOOL v3 = [*(id *)(a1 + 32) view];
  [v3 setAlpha:0.0];
}

void sub_10002A754(uint64_t a1)
{
  if (([*(id *)(a1 + 32) activePhoneCallExists] & 1) == 0)
  {
    CGAffineTransform v5 = +[NSNotificationCenter defaultCenter];
    [v5 removeObserver:*(void *)(a1 + 32)];

    id v6 = +[SOSManager sharedInstance];
    id v7 = [v6 currentSOSInitiationState];

    if (v7 == (id)1)
    {
      CGAffineTransform v4 = sub_1000D5130();
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_10;
      }
      *(_WORD *)buf = 0;
      long long v8 = "Not dismissing PHCarplayInCallViewController's remoteViewControllerProxy because SOS is active";
    }
    else
    {
      __int16 v9 = [*(id *)(a1 + 32) _remoteViewControllerProxy];
      [v9 dismiss];

      long long v10 = +[UIApplication sharedApplication];
      CGAffineTransform v11 = [v10 delegate];
      [v11 hideCarPlayUI];

      CGAffineTransform v4 = sub_1000D5130();
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_10;
      }
      *(_WORD *)buf = 0;
      long long v8 = "Dismissing PHCarPlayInCallViewController";
    }
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v8, buf, 2u);
    goto LABEL_10;
  }
  if (![*(id *)(a1 + 32) activePhoneCallExists]) {
    return;
  }
  uint64_t v2 = [*(id *)(a1 + 32) view];
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v12[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v12[1] = v3;
  void v12[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v12];

  CGAffineTransform v4 = [*(id *)(a1 + 32) view];
  [v4 setAlpha:1.0];
LABEL_10:
}

void sub_10002CE28(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isHighlighted];
  id v5 = [*(id *)(a1 + 32) roundView];
  double v3 = 0.649999976;
  if (!v2) {
    double v3 = 0.100000001;
  }
  CGAffineTransform v4 = +[UIColor colorWithWhite:1.0 alpha:v3];
  [v5 setBackgroundColor:v4];
}

void sub_100030608(id a1)
{
}

void sub_100031A38(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallControlSpacing];
  double v2 = 41.0;
  if (!v1) {
    double v2 = 34.0;
  }
  qword_100325E00 = *(void *)&v2;
}

void sub_100032F2C(id *a1)
{
  [a1[4] setAlpha:0.0];
  [a1[5] setAlpha:0.0];
  [a1[6] setAlpha:0.0];
  id v2 = [a1[7] singleCallLabelView];
  [v2 setAlpha:1.0];
}

id sub_100032FA4(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 40) removeFromSuperview];
  id v2 = *(void **)(a1 + 48);

  return [v2 removeFromSuperview];
}

void sub_100032FE8(id *a1)
{
  [a1[4] setAlpha:0.0];
  [a1[5] setAlpha:0.0];
  id v2 = [a1[6] topMultipleCallLabelView];
  [v2 setAlpha:1.0];

  id v3 = [a1[6] bottomMultipleCallLabelView];
  [v3 setAlpha:1.0];
}

id sub_100033070(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v2 = *(void **)(a1 + 40);

  return [v2 removeFromSuperview];
}

id sub_10003511C(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v1 = +[NSDate date];
  }
  id v2 = objc_alloc_init((Class)NSDateFormatter);
  [v2 setDateStyle:0];
  [v2 setTimeStyle:1];
  id v3 = [v2 stringFromDate:v1];

  return v3;
}

BOOL sub_1000351B4(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v1 = +[NSDate date];
  }
  id v2 = objc_alloc_init((Class)NSDateFormatter);
  [v2 setLocalizedDateFormatFromTemplate:@"j"];
  id v3 = [v2 stringFromDate:v1];
  CGAffineTransform v4 = +[NSCharacterSet decimalDigitCharacterSet];
  id v5 = [v4 invertedSet];

  id v6 = [v3 componentsSeparatedByCharactersInSet:v5];
  id v7 = [v6 componentsJoinedByString:&stru_1002D6110];

  id v8 = objc_alloc_init((Class)NSNumberFormatter);
  __int16 v9 = [v8 numberFromString:v7];

  BOOL v10 = [v9 intValue] == 1;
  return v10;
}

id sub_1000352D8(void *a1, int a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v3 = +[NSDate date];
  }
  BOOL v4 = sub_1000351B4(v3);
  id v5 = +[NSBundle mainBundle];
  id v6 = v5;
  if (v4)
  {
    if (a2) {
      CFStringRef v7 = @"SOS_KAPPA_MASKED_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_SINGULAR";
    }
    else {
      CFStringRef v7 = @"SOS_KAPPA_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_SINGULAR";
    }
  }
  else if (a2)
  {
    CFStringRef v7 = @"SOS_KAPPA_MASKED_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_PLURAL";
  }
  else
  {
    CFStringRef v7 = @"SOS_KAPPA_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_PLURAL";
  }
  id v8 = [v5 localizedStringForKey:v7 value:&stru_1002D6110 table:@"Localizable-kappa"];
  __int16 v9 = sub_10003511C(v3);
  BOOL v10 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v8, v9);

  return v10;
}

id sub_1000353FC(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v1 = +[NSDate date];
  }
  BOOL v2 = sub_1000351B4(v1);
  id v3 = +[NSBundle mainBundle];
  BOOL v4 = v3;
  if (v2) {
    CFStringRef v5 = @"SOS_NEWTON_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_SINGULAR";
  }
  else {
    CFStringRef v5 = @"SOS_NEWTON_RESTING_VIEW_SUBTITLE_WITH_TIME_%@_PLURAL";
  }
  id v6 = [v3 localizedStringForKey:v5 value:&stru_1002D6110 table:@"Localizable-Stewie"];
  CFStringRef v7 = sub_10003511C(v1);
  id v8 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v6, v7);

  return v8;
}

void sub_100036594(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [PHEmergencyHandsetDialerNumberPadButton alloc];
  signed int v7 = [v5 intValue];

  uint64_t v8 = v7;
  __int16 v9 = [*(id *)(a1 + 32) traitCollection];
  id v10 = -[PHEmergencyHandsetDialerNumberPadButton initForCharacter:style:](v6, "initForCharacter:style:", v8, [v9 userInterfaceStyle]);

  [*(id *)(a1 + 40) insertObject:v10 atIndex:a3];
}

void sub_100036878(id a1)
{
  id v1 = +[UIScreen mainScreen];
  BOOL v2 = [v1 currentMode];
  [v2 size];
  int v4 = (int)v3;

  BOOL v5 = v4 > 2207 || v4 == 1334;
  double v6 = 13.0;
  if (v5) {
    double v6 = 15.0;
  }
  qword_10031EAB8 = *(void *)&v6;
}

void sub_1000376FC(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallBottomBarSpacing];
  double v2 = 8.0;
  if (v1 == 6) {
    double v2 = 11.0;
  }
  qword_100325E18 = *(void *)&v2;
}

id sub_100037EF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

id sub_1000394F4(void *a1)
{
  id v1 = a1;
  v8.width = 1.0;
  v8.height = 1.0;
  UIGraphicsBeginImageContext(v8);
  CurrentContext = UIGraphicsGetCurrentContext();
  id v3 = v1;
  int v4 = (CGColor *)[v3 CGColor];

  CGContextSetFillColorWithColor(CurrentContext, v4);
  v9.origin.x = 0.0;
  v9.origin.y = 0.0;
  v9.size.width = 1.0;
  v9.size.height = 1.0;
  CGContextFillRect(CurrentContext, v9);
  BOOL v5 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v5;
}

uint64_t sub_10003C71C(void *a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = a1;
  uint64_t v2 = (uint64_t)[v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v7;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v7 != v3) {
          objc_enumerationMutation(v1);
        }
        if (objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * i), "type", (void)v6) == (id)4)
        {
          uint64_t v2 = 1;
          goto LABEL_11;
        }
      }
      uint64_t v2 = (uint64_t)[v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v2;
}

uint64_t start(int a1, char **a2)
{
  id v5 = +[ICSApplicationServices sharedInstance];
  long long v6 = (objc_class *)objc_opt_class();
  NSStringFromClass(v6);
  long long v7 = (NSString *)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = UIApplicationMain(a1, a2, 0, v7);

  return v8;
}

id sub_10003D7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) addAttribute:NSForegroundColorAttributeName value:*(void *)(a1 + 40) range:a2];
}

id sub_10003F1D4(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)PHCarPlayInCallKeypadViewController;
  [super setLimitedSoftPhoneKeypad:v2];
  return [*(id *)(a1 + 32) postMessageOverlayIfNeeded];
}

void sub_100040F94(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) isEnabled];
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2)
  {
    unsigned int v4 = [v3 isSelected];
    id v5 = *(void **)(a1 + 32);
    if (v4)
    {
      id v17 = [v5 roundView];
      double v6 = 1.0;
      double v7 = 1.0;
LABEL_17:
      uint64_t v15 = +[UIColor colorWithWhite:v6 alpha:v7];
      goto LABEL_18;
    }
    unsigned int v8 = [v5 isHighlighted];
    long long v9 = *(void **)(a1 + 32);
    if (!v8)
    {
      id v13 = [v9 controlType];
      v14 = *(void **)(a1 + 32);
      if (v13 == (id)15)
      {
        id v17 = [v14 roundView];
        uint64_t v15 = +[UIColor systemRedColor];
      }
      else
      {
        unsigned int v16 = [v14 isButtonLayoutEnabled];
        id v17 = [*(id *)(a1 + 32) roundView];
        if (!v16)
        {
          double v7 = 0.100000001;
          goto LABEL_16;
        }
        uint64_t v15 = +[UIColor clearColor];
      }
LABEL_18:
      CGAffineTransform v11 = (void *)v15;
      [v17 setBackgroundColor:v15];
      goto LABEL_19;
    }
    id v17 = [v9 roundView];
    double v7 = 0.649999976;
LABEL_16:
    double v6 = 1.0;
    goto LABEL_17;
  }
  if ([v3 isButtonLayoutEnabled]) {
    return;
  }
  id v10 = [*(id *)(a1 + 32) controlType];
  id v17 = [*(id *)(a1 + 32) roundView];
  if (v10 != (id)15)
  {
    double v7 = 0.0500000007;
    goto LABEL_16;
  }
  CGAffineTransform v11 = +[UIColor systemRedColor];
  CGAffineTransform v12 = [v11 colorWithAlphaComponent:0.0500000007];
  [v17 setBackgroundColor:v12];

LABEL_19:
}

id sub_100041578(uint64_t a1)
{
  unsigned __int8 v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = NSStringFromCGPoint(*(CGPoint *)(a1 + 40));
    int v7 = 138412290;
    unsigned int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Presenting audio routing menu at location: %@", (uint8_t *)&v7, 0xCu);
  }
  unsigned int v4 = [*(id *)(a1 + 32) menuDataSource];
  id v5 = [v4 menuForAudioControlsButton:*(void *)(a1 + 32)];

  return v5;
}

void sub_10004219C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000421B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    double v6 = [WeakRetained lagunaActions];
    if ([v6 count])
    {
      id v7 = v6;
      id v8 = v3;
      if (v7)
      {
        id v9 = v8;
        if ([v8 count])
        {
          id v10 = +[UIMenu menuWithTitle:&stru_1002D6110 image:0 identifier:0 options:1 children:v9];
          CGAffineTransform v11 = +[UIMenu menuWithTitle:&stru_1002D6110 image:0 identifier:0 options:1 children:v7];
          v18[0] = v10;
          v18[1] = v11;
          CGAffineTransform v12 = +[NSArray arrayWithObjects:v18 count:2];
          id v13 = +[UIMenu menuWithTitle:&stru_1002D6110 image:0 identifier:0 options:1 children:v12];

          [v5 setMenu:v13];
        }
        else
        {
          id v10 = [v5 menu];
          id v17 = [v10 menuByReplacingChildren:v7];
          [v5 setMenu:v17];
        }
        goto LABEL_10;
      }
    }
    else
    {
      id v14 = v3;
    }
    uint64_t v15 = [v5 menu];
    unsigned int v16 = [v15 menuByReplacingChildren:v3];
    [v5 setMenu:v16];

    id v7 = 0;
LABEL_10:
  }
}

uint64_t sub_1000423B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10004248C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v5 = *(void **)(v2 + 16);
  unsigned int v4 = (id *)(v2 + 16);
  if (v5 != v3)
  {
    objc_storeStrong(v4, v3);
    double v6 = [*(id *)(a1 + 32) menuChangeHandler];

    if (v6)
    {
      id v7 = [*(id *)(a1 + 32) menuChangeHandler];
      v7[2](v7, *(void *)(a1 + 40));
    }
  }
}

void sub_1000426A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000426CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000426E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    double v6 = [WeakRetained reloadQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000427C0;
    block[3] = &unk_1002CE178;
    id v9 = *(id *)(a1 + 32);
    block[4] = v5;
    id v8 = v3;
    dispatch_async(v6, block);
  }
}

void sub_1000427C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  id v2 = [*(id *)(a1 + 32) menuActionsWithRoutes:*(void *)(a1 + 40)];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100042DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100042E0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained style] == (id)3)
    {
      id v3 = +[AVAudioSession sharedInstance];
      [v3 activateVoicemailAudioSession];
    }
    unsigned int v4 = [v5 delegate];
    [v4 audioRoutingMenuController:v5 didSelectRoute:*(void *)(a1 + 32)];
  }
  if ([*(id *)(a1 + 32) isSpeaker]) {
    +[TPTipsHelper donateEventSpeakerUsed];
  }
}

void sub_100043288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000432A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    id v3 = [WeakRetained delegate];
    char v4 = objc_opt_respondsToSelector();

    id WeakRetained = v6;
    if (v4)
    {
      id v5 = [v6 delegate];
      [v5 audioRoutingMenuController:v6 didSelectLagunaActionForHandle:*(void *)(a1 + 32) conversation:*(void *)(a1 + 40)];

      id WeakRetained = v6;
    }
  }
}

void sub_100043480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004349C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    unsigned int v2 = [WeakRetained isMuted];
    id v3 = [v6 delegate];
    char v4 = objc_opt_respondsToSelector();

    id WeakRetained = v6;
    if (v4)
    {
      id v5 = [v6 delegate];
      [v5 audioRoutingMenuController:v6 didToggleMute:v2 ^ 1];

      id WeakRetained = v6;
    }
  }
}

void sub_100043EE0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = +[AVSystemController sharedAVSystemController];
  [v1 startObservingNotificationsForAVSystemController:v2];
}

id sub_100044DA4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _playCallAnnouncement:*(void *)(a1 + 40)];
}

id sub_100044E74(uint64_t a1)
{
  return [*(id *)(a1 + 32) start];
}

id sub_100044F04(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stopping ringtone and announcement", v5, 2u);
  }

  id v3 = [*(id *)(a1 + 32) callAnnouncement];
  [v3 stop];

  [*(id *)(a1 + 32) setAudioSessionIdentifier:0];
  return [*(id *)(a1 + 32) setCallAnnouncement:0];
}

void sub_100045088(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PHRingtoneControllerAudioSessionIdentifierDidChangeNotification" object:*(void *)(a1 + 32) userInfo:0];
}

void sub_100045248(uint64_t a1)
{
  [*(id *)(a1 + 32) stopObservingNotificationsForAVSystemController:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);
  id v3 = +[AVSystemController sharedAVSystemController];
  [v2 startObservingNotificationsForAVSystemController:v3];
}

id sub_100045424(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) audioSessionIdentifierForSessionDescriptors:*(void *)(a1 + 40)];
  id v3 = *(void **)(a1 + 32);

  return [v3 setAudioSessionIdentifier:v2];
}

void sub_100045DB4(id a1)
{
  uint64_t v1 = objc_alloc_init(PHInCallUtilities);
  id v2 = (void *)qword_100325E28;
  qword_100325E28 = (uint64_t)v1;
}

void sub_100046124()
{
  v0 = sub_1000D5130();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "LockscreenMessagingChangedNotification", v1, 2u);
  }

  byte_100325E4A = 0;
}

void sub_100046194()
{
  v0 = sub_1000D5130();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "LostMode changed", v1, 2u);
  }

  byte_100325E48 = 0;
}

void sub_100046BC8(uint64_t a1)
{
  int v2 = BYSetupAssistantNeedsToRun();
  byte_100325E58 = v2;
  if (v2)
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    char v4 = *(const void **)(a1 + 32);
    CFStringRef v5 = (const __CFString *)BYSetupAssistantFinishedDarwinNotification;
    CFNotificationCenterAddObserver(DarwinNotifyCenter, v4, (CFNotificationCallback)sub_100046C40, v5, 0, CFNotificationSuspensionBehaviorDrop);
  }
}

void sub_100046C40(__CFNotificationCenter *a1, const void *a2, const __CFString *a3)
{
  byte_100325E58 = 0;
  CFNotificationCenterRemoveObserver(a1, a2, a3, 0);
}

uint64_t sub_100046F44()
{
  uint64_t v2 = 0;
  id v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = qword_100325E60;
  uint64_t v5 = qword_100325E60;
  if (!qword_100325E60)
  {
    long long v6 = *(_OWORD *)off_1002CE290;
    uint64_t v7 = 0;
    v3[3] = _sl_dlopen();
    qword_100325E60 = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_10004705C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100047074()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = qword_100325E68;
  uint64_t v6 = qword_100325E68;
  if (!qword_100325E68)
  {
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_1000471D8;
    v2[3] = &unk_1002CE2D8;
    v2[4] = &v3;
    sub_1000471D8((uint64_t)v2);
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_100047128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100047140(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_100325E60 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1000471D8(uint64_t a1)
{
  uint64_t v2 = (void *)sub_100046F44();
  if (!v2)
  {
    uint64_t v4 = (void *)abort_report_np();
    free(v4);
  }
  uint64_t result = dlsym(v2, "_AXSPhoneLockToEndCallEnabled");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_100325E68 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000479B0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) nameAndLabelLabel];
  [v1 setAlpha:1.0];
}

void sub_1000479F8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) nameAndLabelLabel];
  [v1 setAlpha:0.0];
}

void sub_100047A40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) nameAndLabelLabel];
  [v2 setAttributedText:v1];
}

void sub_10004866C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_destroyWeak(v15);
  _Block_object_dispose(&a15, 8);
  objc_destroyWeak((id *)(v16 - 56));
  _Unwind_Resume(a1);
}

void sub_1000486A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    if (([WeakRetained pauseTimer] & 1) == 0
      && !--*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      uint64_t v4 = sub_1000D5130();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PHCheckInView,check-in completed with no user interaction", v5, 2u);
      }

      [v3 stopAndNotifyResult:0];
    }
  }
}

void sub_100049774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100049790(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableArray);
  id v2 = (void *)qword_100325E78;
  qword_100325E78 = (uint64_t)v1;
}

uint64_t sub_1000497CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000497DC(uint64_t a1)
{
}

id sub_1000497E4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = (void *)qword_100325E78;
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);

  return [v2 removeObject:v3];
}

BOOL sub_100049888(void *a1)
{
  return (void *)+[PHUIConfiguration inCallControlAlignment] == a1;
}

void sub_100049900(id a1)
{
  id v1 = +[CADisplay mainDisplay];
  [v1 bounds];
  double v3 = v2;
  double v5 = v4;

  if (v3 >= v5) {
    double v6 = v3;
  }
  else {
    double v6 = v5;
  }
  int v7 = (int)v6;
  uint64_t v8 = MGGetProductType();
  if (v7 == 1136) {
    goto LABEL_5;
  }
  if (v8 <= 2795618602)
  {
    if (v8 > 851437780)
    {
      if (v8 <= 2688879998)
      {
        if (v8 != 851437781)
        {
          if (v8 != 1169082144) {
            goto LABEL_23;
          }
          goto LABEL_42;
        }
LABEL_32:
        BOOL v11 = v7 == 2556;
        goto LABEL_45;
      }
      if (v8 != 2688879999)
      {
        if (v8 != 2793418701) {
          goto LABEL_23;
        }
        goto LABEL_32;
      }
      goto LABEL_33;
    }
    if (v8 == 133314240) {
      goto LABEL_32;
    }
    if (v8 != 330877086)
    {
      uint64_t v10 = 574536383;
LABEL_22:
      if (v8 != v10) {
        goto LABEL_23;
      }
LABEL_33:
      BOOL v12 = v7 == 2796;
      goto LABEL_34;
    }
    BOOL v12 = v7 == 2868;
LABEL_34:
    uint64_t v9 = 14;
    if (!v12) {
      uint64_t v9 = 15;
    }
    goto LABEL_47;
  }
  if (v8 <= 3001488777)
  {
    if (v8 == 2795618603)
    {
      BOOL v11 = v7 == 2622;
LABEL_45:
      uint64_t v9 = 9;
      if (v11) {
        uint64_t v9 = 12;
      }
      goto LABEL_47;
    }
    if (v8 == 2940697645) {
      goto LABEL_32;
    }
    uint64_t v10 = 2941181571;
    goto LABEL_22;
  }
  if (v8 <= 3885279869)
  {
    if (v8 == 3001488778)
    {
LABEL_42:
      BOOL v11 = v7 == 2532;
      goto LABEL_45;
    }
    uint64_t v10 = 3825599860;
    goto LABEL_22;
  }
  if (v8 == 4201643249)
  {
    BOOL v12 = v7 == 2778;
    goto LABEL_34;
  }
  if (v8 == 3885279870)
  {
    uint64_t v9 = 9;
    if (v7 == 2436) {
      uint64_t v9 = 10;
    }
    goto LABEL_47;
  }
LABEL_23:
  if (v7 > 2271)
  {
    if (v7 > 2531)
    {
      if (v7 > 2731)
      {
        if (v7 == 2732 || v7 == 2752)
        {
          uint64_t v9 = 7;
          goto LABEL_47;
        }
        if (v7 == 2778)
        {
          uint64_t v9 = 14;
          goto LABEL_47;
        }
        goto LABEL_48;
      }
      if (v7 == 2532)
      {
        uint64_t v9 = 12;
        goto LABEL_47;
      }
      if (v7 != 2688) {
        goto LABEL_48;
      }
LABEL_74:
      uint64_t v9 = 5;
      goto LABEL_47;
    }
    if (v7 > 2387)
    {
      if (v7 != 2388)
      {
        if (v7 != 2436) {
          goto LABEL_48;
        }
        goto LABEL_77;
      }
    }
    else
    {
      if (v7 == 2272)
      {
LABEL_5:
        uint64_t v9 = 0;
LABEL_47:
        qword_100325E80 = v9;
        goto LABEL_48;
      }
      if (v7 != 2360) {
        goto LABEL_48;
      }
    }
    uint64_t v9 = 8;
    goto LABEL_47;
  }
  uint64_t v9 = 2;
  if (v7 > 2000)
  {
    if (v7 > 2078)
    {
      switch(v7)
      {
        case 2079:
          uint64_t v9 = 9;
          break;
        case 2208:
          uint64_t v9 = 6;
          break;
        case 2224:
          uint64_t v9 = 3;
          break;
        default:
          goto LABEL_48;
      }
      goto LABEL_47;
    }
    if (v7 != 2001)
    {
      if (v7 == 2048) {
        goto LABEL_47;
      }
      goto LABEL_48;
    }
LABEL_79:
    uint64_t v9 = 1;
    goto LABEL_47;
  }
  if (v7 > 1623)
  {
    if (v7 != 1624)
    {
      if (v7 != 1792) {
        goto LABEL_48;
      }
      goto LABEL_74;
    }
LABEL_77:
    uint64_t v9 = 4;
    goto LABEL_47;
  }
  if (v7 == 1024) {
    goto LABEL_47;
  }
  if (v7 == 1334) {
    goto LABEL_79;
  }
LABEL_48:
  id v13 = sub_1000D5130();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = 134218240;
    uint64_t v15 = qword_100325E80;
    __int16 v16 = 1024;
    int v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Determined screen size to be %ld for screenHeight: %d", (uint8_t *)&v14, 0x12u);
  }
}

char *sub_100049D44(uint64_t a1)
{
  uint64_t result = (char *)[*(id *)(a1 + 32) screenSize];
  if ((unint64_t)(result - 1) > 0xE) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = qword_100284760[(void)(result - 1)];
  }
  qword_10031EB28 = v2;
  return result;
}

unint64_t sub_100049E18(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  if (result > 0xE) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = qword_1002847D8[result];
  }
  qword_100325E98 = v2;
  return result;
}

unint64_t sub_100049EE8(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  if (result > 0xF) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = qword_100284850[result];
  }
  qword_100325EA8 = v2;
  return result;
}

char *sub_100049FB8(uint64_t a1)
{
  unint64_t result = (char *)[*(id *)(a1 + 32) screenSize];
  if ((unint64_t)(result - 1) > 7) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = qword_1002848D0[(void)(result - 1)];
  }
  qword_100325EB8 = v2;
  return result;
}

id sub_10004A098(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  byte_100325EC8 = result == 0;
  return result;
}

char *sub_10004A154(uint64_t a1)
{
  id result = (char *)[*(id *)(a1 + 32) screenSize];
  if ((unint64_t)(result - 5) > 9) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = qword_100284910[(void)(result - 5)];
  }
  qword_10031EB30 = v2;
  return result;
}

unint64_t sub_10004A234(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  byte_100325EE0 = (result < 0xF) & (0x5060u >> result);
  return result;
}

unint64_t sub_10004A308(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  byte_100325EF0 = (result < 0xF) & (0x5060u >> result);
  return result;
}

unint64_t sub_10004A614(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  if (result > 0xE) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = qword_100284990[result];
  }
  qword_100325F00 = v2;
  return result;
}

char *sub_10004A6E4(uint64_t a1)
{
  unint64_t result = (char *)[*(id *)(a1 + 32) screenSize];
  if ((unint64_t)(result - 1) > 0xE) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = qword_100284A08[(void)(result - 1)];
  }
  qword_10031EB38 = v2;
  return result;
}

unint64_t sub_10004A7B8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) shouldUseExplicitLayoutDimensions])
  {
    unint64_t result = (unint64_t)[*(id *)(a1 + 32) yOffsetForDialerLCDViewForDxDevices];
  }
  else
  {
    unint64_t result = +[PHUIConfiguration screenSize];
    if (result > 7) {
      uint64_t v3 = 0x4061000000000000;
    }
    else {
      uint64_t v3 = qword_100284A80[result];
    }
  }
  qword_100325F18 = v3;
  return result;
}

double sub_10004A8F0(uint64_t a1)
{
  [*(id *)(a1 + 32) yOffsetForDialerLCDView];
  double v3 = v2;
  [*(id *)(a1 + 32) yParticipantsViewAdjustmentForKeypad];
  double result = v3 + v4;
  qword_100325F28 = *(void *)&result;
  return result;
}

void sub_10004A97C(id a1)
{
  if (!+[PHUIConfiguration screenSize]) {
    qword_100325F38 = 0x4046800000000000;
  }
}

id sub_10004AAD0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  uint64_t v2 = 1;
  if (result == (id)7) {
    uint64_t v2 = 2;
  }
  if (result == (id)6) {
    uint64_t v2 = 0;
  }
  qword_100325F48 = v2;
  return result;
}

unint64_t sub_10004AB98(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  if (result > 8) {
    uint64_t v2 = 0x4055900000000000;
  }
  else {
    uint64_t v2 = qword_100284AF0[result];
  }
  qword_10031EB40 = v2;
  return result;
}

char *sub_10004AC6C(uint64_t a1)
{
  unint64_t result = (char *)[*(id *)(a1 + 32) screenSize];
  double v2 = 13.0;
  if ((unint64_t)(result - 4) <= 0xA) {
    double v2 = dbl_100284B38[(void)(result - 4)];
  }
  qword_10031EB48 = *(void *)&v2;
  return result;
}

id sub_10004AD3C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  BOOL v2 = result == (id)9 || result == (id)4;
  double v3 = 0.0;
  if (v2) {
    double v3 = 2.5;
  }
  qword_100325F68 = *(void *)&v3;
  return result;
}

id sub_10004AE04(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  double v2 = 4.0;
  if (result == (id)4) {
    double v2 = 17.0;
  }
  qword_100325F78 = *(void *)&v2;
  return result;
}

char *sub_10004AECC(uint64_t a1)
{
  id result = (char *)[*(id *)(a1 + 32) screenSize];
  double v2 = 1.0;
  if ((unint64_t)(result - 1) <= 0xE) {
    double v2 = dbl_100284B90[(void)(result - 1)];
  }
  qword_10031EB50 = *(void *)&v2;
  return result;
}

unint64_t sub_10004AFD8(uint64_t a1)
{
  unint64_t result = (unint64_t)[*(id *)(a1 + 32) screenSize];
  byte_100325F90 = (result < 9) & (0x18Cu >> result);
  return result;
}

id sub_10004B0AC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  byte_100325FA0 = result == (id)7;
  return result;
}

id sub_10004B174(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  byte_100325FB0 = result == (id)6;
  return result;
}

id sub_10004B230(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) screenSize];
  byte_100325FC0 = result == 0;
  return result;
}

void sub_10004B2CC(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallControlSpacing];
  if (v1 <= 6) {
    byte_100325FD0 = (7u >> v1) & 1;
  }
}

void sub_10004BE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004BE78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = +[UIApplication sharedApplication];
    double v3 = [v2 delegate];
    double v4 = [v3 sceneManager];
    double v5 = [v4 callScene];

    if (v5)
    {
      id v6 = v5;
      TUDispatchMainIfNecessary();
    }
  }
}

id sub_10004BF68(uint64_t a1)
{
  return [*(id *)(a1 + 32) requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:0];
}

void sub_10004EB08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_10004EB30(id a1)
{
  id v1 = +[PHAudioInterruptionController sharedInstance];
  id v2 = +[PHInCallUIUtilities sharedInstance];
}

void sub_10004EB6C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v6 = (id *)(a1 + 32);
  id v7 = a3;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained openDialRequest:v8 forProcessHandle:v7 bypassUIPromptIfDefaultProvider:a4];
}

void sub_10004F540(void *a1, void *a2)
{
  double v3 = (void *)a1[4];
  id v4 = a2;
  id v5 = [v3 applicationDelegateHelper];
  [v5 configureAndOpenDialRequestForDualSIMIfNecessary:v4 options:a1[5] url:a1[6]];
}

void sub_10005014C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100050194(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = objc_alloc((Class)TUJoinConversationRequest);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = +[NSSet set];
    id v6 = [v3 initWithConversationLink:v4 otherInvitedHandles:v5 sendLetMeInRequest:0];

    [v6 setVideoEnabled:1];
    [v6 setWantsStagingArea:1];
    id v7 = +[TUConversationInvitationPreference standardInvitationPreferencesForLink];
    [v6 setInvitationPreferences:v7];

    if (v6) {
      id v8 = [*(id *)(a1 + 40) openJoinConversationRequest:v6];
    }
    else {
      id v8 = 0;
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_100050284(id a1, BOOL a2, NSError *a3)
{
  id v3 = a3;
  if (v3)
  {
    uint64_t v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Failed to open FaceTime application with error: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

uint64_t sub_100050334(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100050EE8(uint64_t a1, void *a2)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x3032000000;
  BOOL v11 = sub_100050FFC;
  BOOL v12 = sub_10005100C;
  id v13 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100051014;
  _OWORD v5[3] = &unk_1002CE4C8;
  id v6 = a2;
  id v7 = &v8;
  id v2 = v6;
  _os_activity_initiate((void *)&_mh_execute_header, "StartCall", OS_ACTIVITY_FLAG_DEFAULT, v5);

  id v3 = (id)v9[5];
  _Block_object_dispose(&v8, 8);

  return v3;
}

uint64_t sub_100050FFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005100C(uint64_t a1)
{
}

void sub_100051014(uint64_t a1)
{
  id v5 = +[TUCallCenter sharedInstance];
  uint64_t v2 = [v5 dialWithRequest:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100051460(uint64_t a1)
{
  uint64_t v2 = sub_100083574();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "UUID: %@ request: %@", (uint8_t *)&v5, 0x16u);
  }
}

uint64_t sub_1000515F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v5 = +[FTServerBag sharedInstance];
    uint64_t v6 = [v5 objectForKey:@"callprompt-bypass-blocked-bundle-identifiers"];

    if (v6)
    {
      __int16 v7 = [v3 bundleIdentifier];
      uint64_t v8 = (uint64_t)[v6 containsObject:v7];
    }
    else
    {
      uint64_t v8 = 0;
    }
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

id sub_1000517E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v5 = [v3 bundleIdentifier];
    uint64_t v6 = defaultCallingAppLSBundleIdentifier();
    id v7 = [v5 isEqualToString:v6];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_100051AD8(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v8 = [WeakRetained faceTimeAvailabilityHelper];
    [v8 isHandleAvailableForFaceTime:v9 completionHandler:v5];
  }
}

void sub_100051DD8(id *a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100051E94;
  v3[3] = &unk_1002CE540;
  char v7 = a2;
  id v4 = a1[4];
  id v6 = a1[6];
  id v5 = a1[5];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_100051E94(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  id v3 = sub_1000D5130();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v13 = 138412290;
      uint64_t v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Handles are available for FaceTime using stripped dial request %@", (uint8_t *)&v13, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v13 = 138412290;
      uint64_t v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Handles are unavailable for FaceTime, dialing Telephony as fallback %@", (uint8_t *)&v13, 0xCu);
    }

    id v7 = objc_alloc_init((Class)TUCallProviderManager);
    uint64_t v10 = a1 + 40;
    uint64_t v8 = *(void **)(a1 + 40);
    uint64_t v9 = *(void *)(v10 + 8);
    BOOL v11 = [v7 telephonyProvider];
    BOOL v12 = [v8 dialRequestByReplacingProvider:v11];
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v12);
  }
}

void sub_100052680(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

BOOL sub_1000526BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isClarityBoardActive])
  {
    BOOL v2 = 0;
  }
  else
  {
    id v3 = [WeakRetained currentInCallScene];
    BOOL v2 = [v3 presentationMode] == (id)1;
  }
  return v2;
}

id sub_100052724(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isClarityBoardActive])
  {
    id v2 = 0;
  }
  else
  {
    id v3 = [WeakRetained currentInCallScene];
    uint64_t v4 = [v3 delegate];
    id v2 = [v4 isAttachedToWindowedAccessoryWithValidFrameForCurrentScene];
  }
  return v2;
}

BOOL sub_100052798(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isClarityBoardActive])
  {
    BOOL v2 = 0;
  }
  else
  {
    id v3 = [WeakRetained sceneManager];
    uint64_t v4 = [v3 ambientScene];

    if (v4 && ![v4 activationState])
    {
      BOOL v2 = 0;
    }
    else
    {
      uint64_t v5 = [WeakRetained currentInCallScene];
      if ([v5 presentationMode])
      {
        BOOL v2 = 0;
      }
      else
      {
        uint64_t v6 = +[PHPIPController defaultPIPController];
        BOOL v2 = [v6 pipState] == 0;
      }
    }
  }
  return v2;
}

void sub_1000529A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000529C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isClarityBoardActive])
  {
    uint64_t v2 = 0;
  }
  else
  {
    id v3 = [WeakRetained currentInCallScene];
    if ([v3 presentationMode])
    {
      uint64_t v2 = 0;
    }
    else
    {
      uint64_t v4 = +[PHPIPController defaultPIPController];
      uint64_t v2 = [v4 isPIPProxyActive] ^ 1;
    }
  }

  return v2;
}

BOOL sub_100052A54(id a1)
{
  id v1 = +[PHPIPController defaultPIPController];
  unsigned __int8 v2 = [v1 isPIPProxyActiveAndHidden];

  return v2;
}

BOOL sub_100052A94(id a1)
{
  id v1 = +[TUCallCenter sharedInstance];
  unsigned __int8 v2 = [v1 hasCurrentCalls];

  return v2;
}

BOOL sub_100052AD4(id a1)
{
  id v1 = +[PHInCallUtilities sharedInstance];
  unsigned __int8 v2 = [v1 hasStatusBarSuppressionReasons];

  return v2;
}

BOOL sub_100053668(id a1, TUCall *a2)
{
  return [(TUCall *)a2 isActive];
}

BOOL sub_100054434(id a1, TUCall *a2)
{
  unsigned __int8 v2 = a2;
  if ([(TUCall *)v2 isActive])
  {
    id v3 = [(TUCall *)v2 provider];
    unsigned __int8 v4 = [v3 supportsDynamicSystemUI];
  }
  else
  {
    unsigned __int8 v4 = 0;
  }

  return v4;
}

void sub_100054988(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) sceneManager];
  unsigned __int8 v3 = [v2 hasPendingOrExistingSceneOfType:*(void *)(a1 + 48)];

  if (v3)
  {
    unsigned __int8 v4 = sub_1000D52D8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Not requesting a new scene presentation because one already exists", buf, 2u);
    }
  }
  else
  {
    uint64_t v5 = [*(id *)(a1 + 32) sceneManager];
    uint64_t v6 = *(void *)(a1 + 48);
    id v7 = [*(id *)(a1 + 40) identifier];
    [v5 didRequestSceneOfType:v6 withIdentifier:v7];

    objc_initWeak(&location, *(id *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100054BE0;
    _OWORD v12[3] = &unk_1002CE678;
    objc_copyWeak(&v14, &location);
    id v13 = *(id *)(a1 + 40);
    +[SBSInCallPresentationRequest performPresentationWithConfiguration:v8 completion:v12];
    uint64_t v9 = (id)sub_1000D52D8();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      [*(id *)(a1 + 40) preferredPresentationMode];
      SBSInCallPresentationModeDescription();
      id v10 = (id)objc_claimAutoreleasedReturnValue();
      unsigned int v11 = [*(id *)(a1 + 40) isUserInitiated];
      *(_DWORD *)buf = 138543618;
      id v17 = v10;
      __int16 v18 = 1024;
      unsigned int v19 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Requested a new scene with presentationMode=%{public}@ userInitiated=%d", buf, 0x12u);
    }
    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }
}

void sub_100054BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100054BE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (v3)
  {
    if (WeakRetained)
    {
      uint64_t v6 = [WeakRetained sceneManager];
      id v7 = [*(id *)(a1 + 32) identifier];
      [v6 didInvalidatePendingSceneOfType:0 withIdentifier:v7];

      uint64_t v8 = sub_1000D52D8();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_1001E9CB4();
      }
    }
  }
}

void sub_100054DE4(id a1)
{
  id v1 = (id)objc_opt_new();
  byte_100325FE0 = [v1 isClarityBoardEnabled];
}

void sub_100055580(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) currentInCallScene];
  id v3 = [*(id *)(a1 + 40) isOutgoing];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100055628;
  v4[3] = &unk_1002CE6E8;
  void v4[4] = *(void *)(a1 + 32);
  [v2 ics_requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:v3 analyticsSource:0 completion:v4];
}

id sub_100055628(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissAnsweredCallBannerIfNeeded];
}

void sub_1000557BC(id a1, NSError *a2)
{
  unsigned __int8 v2 = a2;
  if (v2)
  {
    id v3 = sub_1000D52D8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001E9D1C();
    }
  }
}

void sub_100055974(id a1, NSError *a2)
{
  unsigned __int8 v2 = a2;
  id v3 = sub_1000D52D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error requesting ClarityBoard presentation: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100056110(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) bannerPresentationManager];
  [v1 showGreenTea3PHUD];
}

BOOL sub_10005641C(id a1, TUCall *a2)
{
  unsigned __int8 v2 = a2;
  if ([(TUCall *)v2 status] == 5 || [(TUCall *)v2 status] == 6)
  {
    unsigned __int8 v3 = 0;
  }
  else
  {
    int v4 = [(TUCall *)v2 provider];
    unsigned __int8 v3 = [v4 supportsDynamicSystemUI];
  }
  return v3;
}

void sub_100056B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100056B6C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v7 = sub_1000D52D8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = v7;
      uint64_t v9 = NSStringFromPGBackgroundPIPAuthorizationState();
      id v10 = sub_100011694(*(void *)(a1 + 56));
      *(_DWORD *)buf = 138543618;
      v34 = v9;
      __int16 v35 = 2114;
      v36 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PiP Background authorization changed to state: %{public}@ for scene type: %{public}@", buf, 0x16u);
    }
    switch(a3)
    {
      case 2:
        id v14 = sub_1000D52D8();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Aquired authorization to open PiP in the background; requesting background presentation",
            buf,
            2u);
        }
        uint64_t v15 = [WeakRetained bannerPresentationManager];
        [v15 setApplicationState:0];

        __int16 v16 = [WeakRetained sceneManager];
        uint64_t v17 = *(void *)(a1 + 56);
        v30[0] = _NSConcreteStackBlock;
        v30[1] = 3221225472;
        v30[2] = sub_100056F78;
        v30[3] = &unk_1002CE790;
        objc_copyWeak(v32, (id *)(a1 + 48));
        v32[1] = *(id *)(a1 + 56);
        id v31 = *(id *)(a1 + 32);
        [v16 waitForRegistrationOfSceneWithType:v17 completion:v30];

        __int16 v18 = [WeakRetained sceneManager];
        uint64_t v19 = *(void *)(a1 + 56);
        v20 = [*(id *)(a1 + 40) identifier];
        [v18 didInvalidatePendingSceneOfType:v19 withIdentifier:v20];

        [WeakRetained performPresentationWithConfiguration:*(void *)(a1 + 40) forSceneType:*(void *)(a1 + 56)];
        objc_destroyWeak(v32);
        break;
      case 3:
      case 5:
        [WeakRetained revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:*(void *)(a1 + 56)];
        unsigned int v11 = [WeakRetained sceneManager];
        uint64_t v12 = *(void *)(a1 + 56);
        id v13 = [*(id *)(a1 + 40) identifier];
        [v11 didInvalidatePendingSceneOfType:v12 withIdentifier:v13];

        break;
      case 4:
        v21 = sub_1000D52D8();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v22 = *(void *)(a1 + 56);
          v23 = v21;
          v24 = sub_100011694(v22);
          [*(id *)(a1 + 40) preferredPresentationMode];
          v25 = SBSInCallPresentationModeDescription();
          *(_DWORD *)buf = 138543618;
          v34 = v24;
          __int16 v35 = 2114;
          v36 = v25;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "PiP background authorization disallowed for %{public}@ scene; configuration.preferredPresentationMode: %{public}@",
            buf,
            0x16u);
        }
        v26 = [WeakRetained bannerPresentationManager];
        [v26 setApplicationState:1];

        [WeakRetained revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:*(void *)(a1 + 56)];
        v27 = [WeakRetained sceneManager];
        uint64_t v28 = *(void *)(a1 + 56);
        v29 = [*(id *)(a1 + 40) identifier];
        [v27 didInvalidatePendingSceneOfType:v28 withIdentifier:v29];

        break;
      default:
        break;
    }
  }
}

void sub_100056F48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100056F78(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = [WeakRetained remoteAlertShellViewControllerForWindowScene:v3];
    id v7 = sub_1000D52D8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = v7;
      id v10 = sub_100011694(v8);
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = [v6 pipController];
      int v14 = 138543874;
      uint64_t v15 = v10;
      __int16 v16 = 2114;
      uint64_t v17 = v11;
      __int16 v18 = 2114;
      uint64_t v19 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Aquired scene of type %{public}@; setting clientSessionIdentifier '%{public}@' on PiP controller: %{public}@",
        (uint8_t *)&v14,
        0x20u);
    }
    id v13 = [v6 pipController];
    [v13 setClientSessionIdentifierFromPiPAuthorization:*(void *)(a1 + 32)];
  }
}

void sub_10005748C(id a1, NSError *a2)
{
  unsigned __int8 v2 = a2;
  id v3 = sub_1000D52D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1001E9DEC();
  }
}

void sub_10005754C(uint64_t a1)
{
  [*(id *)(a1 + 32) revokeAndRemoveBackgroundPiPAuthorizationForSceneTypeIfNeeded:*(void *)(a1 + 40)];
  unsigned __int8 v2 = [*(id *)(a1 + 32) sceneManager];
  id v3 = [v2 sceneOfType:*(void *)(a1 + 40)];

  int v4 = [v3 session];
  id v5 = [v3 presentationMode];
  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    id v11 = v5;
    uint64_t v12 = [*(id *)(a1 + 32) remoteAlertShellViewControllerForWindowScene:v3];
    id v13 = [v12 pipController];
    [v13 cancelPIPIfNeeded];

    if (!*(void *)(a1 + 40))
    {
      int v14 = [*(id *)(a1 + 32) bannerPresentationManager];
      [v14 bannerDismissedBySpringBoard];
    }
    uint64_t v15 = sub_1000D52D8();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = v15;
      __int16 v18 = sub_100011694(v16);
      int v39 = 138543874;
      id v40 = v18;
      __int16 v41 = 2112;
      v42 = v3;
      __int16 v43 = 2112;
      v44 = v4;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Requesting scene session destruction for type: %{public}@; scene: %@; with session: %@",
        (uint8_t *)&v39,
        0x20u);
    }
    uint64_t v19 = +[UIApplication sharedApplication];
    [v19 SBSUI_requestInCallSceneSessionDestruction:v4 withReason:0 completion:0];

    v20 = sub_1000D52D8();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v21 = *(void *)(a1 + 40);
      uint64_t v22 = v20;
      v23 = sub_100011694(v21);
      int v39 = 138543362;
      id v40 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Cleared the current active scene of type %{public}@", (uint8_t *)&v39, 0xCu);
    }
    v24 = [v12 pipController];
    [v24 setWindowForTransitionAnimation:0];

    v25 = [*(id *)(a1 + 32) sceneManager];
    [v25 didDismissSceneOfType:*(void *)(a1 + 40)];

    uint64_t v26 = *(void *)(a1 + 40);
    if (v26 == 1)
    {
      if (v11 == (id)2)
      {
        uint64_t v28 = sub_1000D52D8();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v39) = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Requesting to return to fullscreen canvas due to end of screen sharing session", (uint8_t *)&v39, 2u);
        }
        v27 = [*(id *)(a1 + 32) sceneManager];
        v29 = [v27 callScene];
        [v29 requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:0];

        goto LABEL_21;
      }
    }
    else if (!v26)
    {
      v27 = +[PHInCallUtilities sharedInstance];
      [v27 stopAllowingRingingCallStatusIndicator];
LABEL_21:
    }
    goto LABEL_23;
  }
  id v7 = sub_1000D52D8();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = v7;
    id v10 = sub_100011694(v8);
    int v39 = 138543874;
    id v40 = v10;
    __int16 v41 = 2112;
    v42 = v3;
    __int16 v43 = 2112;
    v44 = v4;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Warning: Not requesting scene session destruction because there's no active scene of type: %{public}@; scene:%@ or"
      " session:%@ to destroy",
      (uint8_t *)&v39,
      0x20u);
  }
LABEL_23:
  v30 = sub_1000D52D8();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
  {
    id v31 = *(void **)(a1 + 32);
    v32 = v30;
    v33 = [v31 allInCallScenes];
    int v39 = 138412290;
    id v40 = v33;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "The set of all tracked scenes is %@", (uint8_t *)&v39, 0xCu);
  }
  v34 = sub_1000D52D8();
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v35 = *(void **)(a1 + 32);
    v36 = v34;
    v37 = [v35 allInCallScenes];
    id v38 = [v37 count];
    int v39 = 134217984;
    id v40 = v38;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Number of scenes tracked is %lu", (uint8_t *)&v39, 0xCu);
  }
}

void sub_100057AD0(id a1, NSError *a2)
{
  unsigned __int8 v2 = a2;
  id v3 = sub_1000D52D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error destroying Assistive Access scene: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100057F84(id a1, NSError *a2)
{
  unsigned __int8 v2 = a2;
  id v3 = sub_1000D52D8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error requesting SOS ClarityBoard presentation: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100058358(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) currentInCallScene];
  [v2 requestTransitionToPresentationMode:3 shouldDismissCMASAlerts:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100059918(uint64_t a1)
{
  id v2 = +[TUCallCenter sharedInstance];
  [v2 launchAppForDialRequest:*(void *)(a1 + 32) completion:0];
}

void sub_100059974(uint64_t a1, int a2)
{
  int v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Dial request UI prompt alert returned dial=%d", (uint8_t *)v5, 8u);
  }

  if (a2) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10005AAB4(uint64_t a1, char a2)
{
  if ([*(id *)(a1 + 32) originatingUIType] == 51) {
    +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHFallbackToTelephonyAssertionReason"];
  }
  if ((a2 & 1) == 0)
  {
    int v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "A call could not be initiated.", v13, 2u);
    }

    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, TUCallCenterInCallServiceDialRequestFailureNotification, 0, 0, 1u);
    BOOL v6 = [*(id *)(a1 + 32) failureNotification];
    id v7 = [v6 length];

    if (v7)
    {
      uint64_t v8 = CFNotificationCenterGetDarwinNotifyCenter();
      uint64_t v9 = [*(id *)(a1 + 32) failureNotification];
      CFNotificationCenterPostNotification(v8, v9, 0, 0, 1u);
    }
    id v10 = [*(id *)(a1 + 32) provider];
    if ([(ICSTelephonyUnsuportedAlert *)v10 isTelephonyProvider])
    {
      id v11 = +[UIDevice currentDevice];
      id v12 = [v11 userInterfaceIdiom];

      if (v12 != (id)1) {
        return;
      }
      id v10 = objc_alloc_init(ICSTelephonyUnsuportedAlert);
      [(ICSTelephonyUnsuportedAlert *)v10 show];
    }
  }
}

id sub_10005AC28(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) successNotification];
  id v3 = [v2 length];

  if (v3)
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    id v5 = [*(id *)(a1 + 32) successNotification];
    CFNotificationCenterPostNotification(DarwinNotifyCenter, v5, 0, 0, 1u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  BOOL v6 = *(void **)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);

  return _[v6 initiateCallForDialRequest:v7 completionHandler:v8];
}

uint64_t sub_10005ACBC(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Will launch ICS for ScreenTime dial request: %@", buf, 0xCu);
  }

  int v4 = +[ICSPreferences sharedPreferences];
  unsigned int v5 = [v4 hasAdoptedModernInCallAPI];

  if (v5)
  {
    BOOL v6 = *(void **)(a1 + 40);
    uint64_t v7 = [*(id *)(a1 + 32) URL];
    [v6 startScreenTimeFlowWithURL:v7];
  }
  else
  {
    uint64_t v8 = +[SOSInCallUILauncher sharedInCallUILauncher];
    uint64_t v9 = [*(id *)(a1 + 32) URL];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_10005AE5C;
    v11[3] = &unk_1002CE840;
    id v12 = *(id *)(a1 + 48);
    [v8 launchInCallUIForReason:3 withRequestURL:v9 completion:v11];

    uint64_t v7 = v12;
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_10005AE5C(uint64_t a1, int a2)
{
  int v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Did launch ICS for ScreenTime %d", (uint8_t *)v6, 8u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005AF20(id *a1)
{
  id v2 = sub_10010C7DC();
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  int v4 = +[PHInCallUIUtilities sharedInstance];
  if (([v4 isSpringBoardLocked] & 1) == 0)
  {

    goto LABEL_6;
  }
  unsigned int v5 = [a1[4] contactIdentifier];

  if (!v5)
  {
LABEL_6:
    uint64_t v8 = [a1[4] handle];
    uint64_t v9 = [v8 value];
    goto LABEL_7;
  }
  BOOL v6 = +[TUCallCenter sharedContactStore];
  uint64_t v7 = [a1[4] contactIdentifier];
  uint64_t v8 = [v6 contactForIdentifier:v7];

  uint64_t v9 = [v8 displayName];
LABEL_7:
  id v10 = (void *)v9;

  if ([v10 destinationIdIsPhoneNumber])
  {
    id v11 = TUHomeCountryCode();
    uint64_t v12 = TUFormattedPhoneNumber();

    id v10 = (void *)v12;
  }
  id v13 = sub_1000D5130();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Presenting RTT/TTY call prompt for caller ID %@", buf, 0xCu);
  }

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10005B1A4;
  v15[3] = &unk_1002CE890;
  id v16 = a1[4];
  id v17 = a1[5];
  id v18 = a1[6];
  [v3 displayCallPromptForContact:v10 withCompletion:v15];
  uint64_t v14 = sub_1000D5130();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Finished executing RTT/TTY call prompt block %@", buf, 0xCu);
  }
}

void sub_10005B1A4(void *a1, uint64_t a2)
{
  int v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 134217984;
    uint64_t v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Dismissing RTT/TTY call prompt. User chose TTYCallType %lu.", (uint8_t *)&v7, 0xCu);
  }

  switch(a2)
  {
    case 0:
      unsigned int v5 = (void *)a1[4];
      uint64_t v6 = 1;
      goto LABEL_7;
    case 1:
    case 2:
      unsigned int v5 = (void *)a1[4];
      uint64_t v6 = 2;
      goto LABEL_7;
    case 3:
      unsigned int v5 = (void *)a1[4];
      uint64_t v6 = 3;
LABEL_7:
      [v5 setTtyType:v6];
      (*(void (**)(void))(a1[5] + 16))();
      break;
    case 4:
      (*(void (**)(void))(a1[6] + 16))();
      break;
    default:
      return;
  }
}

void sub_10005B2E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = [ICSEmergencyCallbackModeAlert alloc];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10005B3DC;
  v8[3] = &unk_1002CE8E0;
  unsigned int v5 = *(void **)(a1 + 40);
  v8[4] = *(void *)(a1 + 32);
  id v9 = v3;
  id v10 = v5;
  id v11 = *(id *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  id v6 = v3;
  int v7 = [(ICSEmergencyCallbackModeAlert *)v4 initWithDialRequest:v6 completion:v8];
  [(ICSEmergencyCallbackModeAlert *)v7 show];
}

uint64_t sub_10005B3DC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  if (a2 == 1)
  {
    unsigned int v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Emergency callback mode is enabled and user chose to cancel the call.", v6, 2u);
    }

    return (*(uint64_t (**)(void))(*(void *)(v2 + 64) + 16))();
  }
  else if (!a2)
  {
    id v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Emergency callback mode is enabled and user chose to proceed with the call.", buf, 2u);
    }

    if ([*(id *)(v2 + 32) shouldShowRTTAlertForDialRequest:*(void *)(v2 + 40)]) {
      uint64_t v4 = *(void *)(v2 + 48);
    }
    else {
      uint64_t v4 = *(void *)(v2 + 56);
    }
    return (*(uint64_t (**)(void))(v4 + 16))();
  }
  return result;
}

void sub_10005B4D4(uint64_t a1)
{
  uint64_t v2 = [PHTelephonyAccountUnavailableAlert alloc];
  id v3 = [*(id *)(a1 + 32) provider];
  uint64_t v4 = [v3 prioritizedSenderIdentities];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10005B614;
  _OWORD v9[3] = &unk_1002CE930;
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  int v7 = *(void **)(a1 + 48);
  id v10 = v5;
  uint64_t v11 = v6;
  id v12 = v7;
  id v13 = *(id *)(a1 + 56);
  id v14 = *(id *)(a1 + 64);
  id v15 = *(id *)(a1 + 72);
  id v16 = *(id *)(a1 + 80);
  uint64_t v8 = [(PHTelephonyAccountUnavailableAlert *)v2 initWithSenderIdentities:v4 completion:v9];

  [(PHTelephonyAccountUnavailableAlert *)v8 show];
}

void sub_10005B614(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000D5130();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "User chose to initiate dial request using sender identity %@.", (uint8_t *)&v8, 0xCu);
    }

    uint64_t v6 = [v3 accountUUID];
    [*(id *)(a1 + 32) setLocalSenderIdentityAccountUUID:v6];

    if ([*(id *)(a1 + 40) shouldShowEmergencyCallbackModeAlertForDialRequest:*(void *)(a1 + 32)])
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      if ([*(id *)(a1 + 40) shouldShowScreenTimeAlertForDialRequest:*(void *)(a1 + 32)])
      {
        uint64_t v7 = *(void *)(a1 + 56);
      }
      else if ([*(id *)(a1 + 40) shouldShowRTTAlertForDialRequest:*(void *)(a1 + 32)])
      {
        uint64_t v7 = *(void *)(a1 + 64);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 72);
      }
      (*(void (**)(void))(v7 + 16))();
    }
  }
  else
  {
    if (v5)
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Sender identity is nil; user cancelled the dial request.",
        (uint8_t *)&v8,
        2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
  }
}

uint64_t sub_10005B794(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User confirmed intent to initiate an emergency call using a Wi-Fi network.", v7, 2u);
    }

    if ([*(id *)(a1 + 32) shouldShowRTTAlertForDialRequest:*(void *)(a1 + 40)]) {
      uint64_t v4 = *(void *)(a1 + 48);
    }
    else {
      uint64_t v4 = *(void *)(a1 + 56);
    }
    return (*(uint64_t (**)(void))(v4 + 16))();
  }
  else
  {
    BOOL v5 = *(uint64_t (**)(void))(*(void *)(a1 + 64) + 16);
    return v5();
  }
}

uint64_t sub_10005B854(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Dial request UI prompt alert returned dial=%d", (uint8_t *)v6, 8u);
  }

  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

uint64_t sub_10005B930(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Dial request call end stewie alert returned dial=%d", (uint8_t *)v6, 8u);
  }

  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

id sub_10005BA0C(uint64_t a1, int a2)
{
  if (a2) {
    return [*(id *)(a1 + 32) show];
  }
  else {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_10005C064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_10005C0E0(id a1)
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFStringRef v2 = (const __CFString *)TUCallCenterInCallServiceDialRequestFailureNotification;

  CFNotificationCenterPostNotification(DarwinNotifyCenter, v2, 0, 0, 1u);
}

uint64_t sub_10005C120(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Did launch ICS for ScreenTime %d", (uint8_t *)v6, 8u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005C1E0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    BOOL v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 67109120;
      v6[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Join request UI prompt alert returned dial=%d", (uint8_t *)v6, 8u);
    }

    [WeakRetained setProcessAssertionCompletion:0];
    if (a2) {
      [WeakRetained showOrCreateCallForConversationRequest:*(void *)(a1 + 32)];
    }
  }
}

id sub_10005C2C0(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) invalidate];
}

void sub_10005C6B8(id a1, SBSUIInCallWindowScene *a2)
{
  CFStringRef v2 = a2;
  id v3 = sub_1000D51C8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138543362;
    uint64_t v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Retrieved InCall scene, showing keypad; scene=%{public}@",
      (uint8_t *)&v6,
      0xCu);
  }
  uint64_t v4 = [(SBSUIInCallWindowScene *)v2 keyWindow];
  BOOL v5 = [v4 rootViewController];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [v5 showKeypadIfPossible];
  }
}

void sub_10005C9E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005CA14(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v3)
  {
    BOOL v5 = [[ICSActivationContext alloc] initWithVideoMessageURL:v3];
    [WeakRetained setActivationContext:v5];

    [WeakRetained performPresentationForVideoMessage];
  }
  else
  {
    int v6 = sub_1000D5130();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
      sub_1001EA02C(a1, v6);
    }
  }
}

void sub_10005D038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005D064(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  CFStringRef v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Process assertion timer fired...", v5, 2u);
  }

  if (WeakRetained)
  {
    [WeakRetained invalidatePreventSuspensionAssertion];
    id v3 = [WeakRetained processAssertionCompletion];

    if (v3)
    {
      uint64_t v4 = [WeakRetained processAssertionCompletion];
      v4[2]();
    }
    [WeakRetained setProcessAssertionCompletion:0];
    [WeakRetained setProcessAssertionTimer:0];
  }
}

void sub_10005D48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005D4BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000D51C8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138543362;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Finished creating InCall scene, will now show controls; scene=%{public}@",
      (uint8_t *)&v6,
      0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showCallControlsForCurrentContext];
}

void sub_10005D928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005D94C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10005D9FC;
  v2[3] = &unk_1002CEAA8;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  [v1 ics_requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:1 analyticsSource:0 completion:v2];
  objc_destroyWeak(&v3);
}

void sub_10005D9E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10005D9FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained bannerPresentationManager];
  [v1 showInCallHUD];
}

BOOL sub_10005E18C(id a1, TUCall *a2)
{
  CFStringRef v2 = a2;
  if ([(TUCall *)v2 isVideo]) {
    BOOL v3 = [(TUCall *)v2 status] == 4;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

BOOL sub_10005E1D8(id a1, TUCall *a2)
{
  CFStringRef v2 = a2;
  if ([(TUCall *)v2 isConversation]) {
    BOOL v3 = [(TUCall *)v2 status] == 3;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

BOOL sub_10005E2A4(id a1, TUCall *a2)
{
  CFStringRef v2 = a2;
  if ([(TUCall *)v2 isVideo]) {
    BOOL v3 = [(TUCall *)v2 status] == 4;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

BOOL sub_10005E2F0(id a1, TUCall *a2)
{
  CFStringRef v2 = a2;
  if ([(TUCall *)v2 isConversation]) {
    BOOL v3 = [(TUCall *)v2 status] == 3;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

void sub_10005EC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  objc_destroyWeak(v27);
  objc_destroyWeak((id *)(v28 - 88));
  _Unwind_Resume(a1);
}

void sub_10005EC80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v3 = sub_1000D51C8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "requestToPresentBanner timed out, presenting banner", v5, 2u);
  }
  uint64_t v4 = (void *)WeakRetained[24];
  WeakRetained[24] = 0;

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10005ED24(id result)
{
  uint64_t v1 = *(void *)(*((void *)result + 6) + 8);
  if (!*(unsigned char *)(v1 + 24))
  {
    CFStringRef v2 = (id *)result;
    *(unsigned char *)(v1 + 24) = 1;
    BOOL v3 = [*((id *)result + 4) bannerPresentationRequestTimer];
    [v3 invalidate];

    id result = [v2[4] setBannerPresentationRequestTimer:0];
    if (v2[5])
    {
      uint64_t v4 = +[TUCallCenter sharedInstance];
      BOOL v5 = +[TUCallCenter sharedInstance];
      int v6 = [v5 frontmostAudioOrVideoCall];
      id v7 = [v4 activeConversationForCall:v6];
      [v2[4] setShouldAttemptRePresentationOfBannerOnConversationUpdate:v7 == 0];

      int v8 = (uint64_t (*)(void))*((void *)v2[5] + 2);
      return (id)v8();
    }
  }
  return result;
}

void sub_10005EE34(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 systemControlsShouldPresentAsEmbedded];
  BOOL v5 = sub_1000D51C8();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v6 = @"NO";
    if (v4) {
      CFStringRef v6 = @"YES";
    }
    int v7 = 138543618;
    CFStringRef v8 = v6;
    __int16 v9 = 2114;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Retrieved InCall scene, icsPresentingFullscreen:%{public}@; scene=%{public}@",
      (uint8_t *)&v7,
      0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005EF24(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = sub_1000D51C8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Retrieved Ambient InCall scene, scene=%{public}@", (uint8_t *)&v5, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005F938(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    int v5 = sub_1000D51C8();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001EA254(a1);
    }
  }
}

void sub_1000615DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_100061604(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

BOOL sub_100061D88()
{
  return CFPreferencesGetAppBooleanValue(@"ForceNoBuddy", @"com.apple.purplebuddy", 0)
      || CFPreferencesGetAppBooleanValue(@"SetupDone", @"com.apple.purplebuddy", 0) != 0;
}

void sub_1000622F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100062310(uint64_t a1, double a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  +[NSDate timeIntervalSinceReferenceDate];
  double v5 = v4;
  [WeakRetained interactiveStartTime];
  [WeakRetained setTimeTillCancelCall:v5 - v6];
  [WeakRetained interactiveStartTime];
  if (v7 <= 0.0 || ([WeakRetained timeTillCancelCall], v8 < 0.0)) {
    [WeakRetained setTimeTillCancelCall:-1.0];
  }
  [WeakRetained setInteractiveStartTime:0.0];
  [WeakRetained setWasCallCancelled:1];
  [WeakRetained setSliderProgressDuration:a2];
  if (*(unsigned char *)(a1 + 40))
  {
    [WeakRetained setClawResolution:8];
    [WeakRetained setSlidingViewExitReason:4];
    [WeakRetained submitSOSUserActivityMetric];
    [WeakRetained setSlidingViewEntryReason:3];
  }
  else
  {
    [WeakRetained submitSOSUserActivityMetric];
  }
  if (a2 >= 0.2) {
    [WeakRetained raiseAccidentalSOSNotification];
  }
}

id sub_10006281C(uint64_t a1)
{
  [*(id *)(a1 + 32) handleVolumeHUDEnablement];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 handleVolumeChanges];
}

void *sub_100062FC4(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[4] != 2)
  {
    id result = [result shouldDropBioAuthTokenOnDismiss];
    if ((result & 1) == 0)
    {
      id v3 = *(void **)(a1 + 32);
      return [v3 deactivateSOS];
    }
  }
  return result;
}

id sub_1000631F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateInteractiveState];
}

void sub_100063EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100063EFC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  double v7 = [a2 label];
  unsigned int v8 = [v7 containsString:@"AMBULANCE"];

  if (v8)
  {
    uint64_t v9 = sub_1000D5130();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10[0] = 67109120;
      v10[1] = a3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PHSOSViewController,ambulance handle found at %d", (uint8_t *)v10, 8u);
    }

    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_1000644CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100064518(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (a2)
  {
    [WeakRetained setRequestedCallActive:0];
    [v5 setCallDialStartTime:-1.0];
    [v5 setPostCallMode];
  }
  else
  {
    double v4 = [WeakRetained currentView];
    [v4 removeFromSuperview];
  }
}

void sub_1000646D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000646F8(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((a2 & 1) == 0)
  {
    id v7 = WeakRetained;
    double v4 = [WeakRetained infoLabel];
    id v5 = +[NSBundle mainBundle];
    double v6 = [v5 localizedStringForKey:@"SOS_NOTIFICATION_FAILED" value:&stru_1002D6110 table:@"InCallService"];
    [v4 setText:v6];

    id WeakRetained = v7;
  }
}

void sub_100064B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100064B4C(uint64_t a1)
{
  [*(id *)(a1 + 32) handleVolumeHUDEnablement];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 handleVolumeChanges];
}

void sub_100064B88(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setVolumeMaxedPending:0];
  [WeakRetained handleVolumeChanges];
  if (a2 == 2)
  {
    [WeakRetained setSosMode:3];
    double v5 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 48);
    if (v5 < 0.0) {
      double v5 = -1.0;
    }
    [WeakRetained setTimeTillCancelCall:v5];
    [WeakRetained setWasCallCancelled:1];
    [WeakRetained submitSOSResolutionMetric:0];
    double v6 = [*(id *)(a1 + 32) getCheckInViewModel];
    [v6 timeout];
    double v8 = v7;
    [*(id *)(a1 + 32) timeTillCancelCall];
    double v10 = v8 - v9;

    uint64_t v11 = [*(id *)(a1 + 32) coreAnalyticsReporter];
    [v11 reportSOSUserCancelled:[*(id *)(a1 + 32) sosTrigger] lastFlowState:1 countdownValue:(uint64_t)v10];
  }
  else if (a2 == 1)
  {
    [WeakRetained setIsUserResponsive:1];
    [WeakRetained dialEmergencyCall];
  }
  else
  {
    double v4 = WeakRetained;
    if (a2) {
      goto LABEL_10;
    }
    [WeakRetained setSosMode:1];
  }
  double v4 = WeakRetained;
LABEL_10:
}

void sub_100065378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006539C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (a2)
  {
    if (a2 != 1) {
      goto LABEL_6;
    }
    [WeakRetained setIsUserResponsive:1];
  }
  else
  {
    [WeakRetained setCallAutoDialled:1];
  }
  id WeakRetained = v8;
LABEL_6:
  if (([WeakRetained sosTrigger] == (id)1 || objc_msgSend(v8, "sosTrigger") == (id)2)
    && (+[SOSUtilities clawReleaseToCallSupport], v4 != 0.0)
    && ([v8 sosHandles],
        double v5 = objc_claimAutoreleasedReturnValue(),
        id v6 = [v5 count],
        v5,
        (unint64_t)v6 <= 1))
  {
    [v8 setVolumeMaxedPending:1];
    [v8 handleVolumeChanges];
    [v8 setSlidingViewExitReason:11];
    [v8 submitSOSUserActivityMetric];
    +[PHInCallRootViewController obtainDismissalAssertionForReason:@"PHCallBufferScreenAssertionReason"];
    double v7 = +[NSNotificationCenter defaultCenter];
    [v7 postNotificationName:@"PHCallBufferNotification" object:0 userInfo:0];
  }
  else
  {
    [v8 dialEmergencyCall];
  }
}

void sub_1000658B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 112));
  _Unwind_Resume(a1);
}

void sub_100065900(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v10 = WeakRetained;
  switch(a2)
  {
    case 0:
      [WeakRetained setCallAutoDialled:1];
      [v10 setClawResolution:3];
      goto LABEL_8;
    case 1:
      [WeakRetained setCallAutoDialled:0];
      if ([v10 clawResolution] == (id)5) {
        [v10 setClawSwipeAfterRTCTimeout:1];
      }
      [v10 setSlidingViewExitReason:3];
      [v10 setClawResolution:9];
      goto LABEL_7;
    case 2:
      [WeakRetained setClawResolution:5];
      [v10 interactiveStartTime];
      double v5 = v4;
      double v6 = -1.0;
      if (v5 > 0.0)
      {
        +[NSDate timeIntervalSinceReferenceDate];
        double v8 = v7;
        [v10 interactiveStartTime];
        double v6 = v8 - v9;
      }
      [v10 setTimeTillCancelCall:v6];
      [v10 raiseAccidentalSOSNotification];
      [v10 setSlidingViewExitReason:5];
      [v10 submitSOSUserActivityMetric];
      [v10 setSlidingViewEntryReason:4];
      goto LABEL_13;
    case 3:
      [WeakRetained setClawResolution:4];
      [v10 raiseAccidentalSOSNotification];
      goto LABEL_13;
    case 4:
    case 5:
      [WeakRetained setClawResolution:3];
      [v10 setCallAutoDialled:1];
      [v10 setSlidingViewExitReason:12];
LABEL_7:
      [v10 submitSOSUserActivityMetric];
LABEL_8:
      [v10 handleAnimationSlidingCompletionResponse];
LABEL_13:
      id WeakRetained = v10;
      break;
    default:
      break;
  }
}

void sub_100065AAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained clearStatusHeartbeatTimer];
  [WeakRetained setSosMode:7];
  [WeakRetained setSlidingViewExitReason:2];
  [WeakRetained submitSOSUserActivityMetric];
}

void sub_100065B0C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setVolumeMaxedPending:a2];
  [WeakRetained handleVolumeChanges];
}

void sub_100065B64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setSlidingViewExitReason:1];
  [WeakRetained submitSOSUserActivityMetric];
}

void sub_100065BB0(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  LODWORD(v3) = +[PHSOSViewController shouldShowMedicalID:v4];

  if (v3) {
    uint64_t v5 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v5 = 0;
  }
  double v6 = [WeakRetained slidingView];
  [v6 setMedicalIDSlidingButtonCompletionBlock:v5];

  double v7 = dispatch_get_global_queue(-32768, 0);
  dispatch_async(v7, &stru_1002CED48);

  if ([WeakRetained currentInteractiveState] == (id)1)
  {
    double v8 = [WeakRetained slidingView];
    id v9 = [v8 slidingViewState];

    if (v9 != (id)1) {
      [WeakRetained interactiveStart];
    }
  }
}

void sub_100065CB0(id a1)
{
}

void sub_100065E28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained deactivateSOS];
}

void sub_100066044(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setPostContactNotificationMode];
}

void sub_1000661F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setPostContactNotificationMode];
}

void sub_100066498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000664BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setSosMode:5];
  [WeakRetained notifyEmergencyContacts];
}

void sub_100066808(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100066838(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained clearStatusHeartbeatTimer];
  if (a2 == 1)
  {
    [WeakRetained setSosMode:7];
    uint64_t v3 = [WeakRetained coreAnalyticsReporter];
    id v10 = [WeakRetained sosTrigger];
    uint64_t v5 = [WeakRetained restingView];
    id v6 = [v5 hasMedicalIDSlider];
    double v7 = v3;
    id v8 = v10;
    uint64_t v9 = 1;
  }
  else
  {
    if (a2) {
      goto LABEL_6;
    }
    [WeakRetained setIsUserResponsive:1];
    [WeakRetained dialEmergencyCall];
    uint64_t v3 = [WeakRetained coreAnalyticsReporter];
    id v4 = [WeakRetained sosTrigger];
    uint64_t v5 = [WeakRetained restingView];
    id v6 = [v5 hasMedicalIDSlider];
    double v7 = v3;
    id v8 = v4;
    uint64_t v9 = 0;
  }
  [v7 reportSOSRestingResponse:v8 restingResponse:v9 hasMedicalID:v6];

LABEL_6:
}

void sub_100066948(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  BOOL v4 = +[PHSOSViewController shouldShowMedicalID:v3];

  uint64_t v5 = [WeakRetained restingView];
  [v5 setHasMedicalIDSlider:v4];
}

void sub_100066B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100066B94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained sosMode] == (id)2 || objc_msgSend(WeakRetained, "sosMode") == (id)9)
    && (+[PHInCallRootViewController dismissalAssertions](PHInCallRootViewController, "dismissalAssertions"), uint64_t v2 = objc_claimAutoreleasedReturnValue(), v3 = [v2 containsObject:@"PHSOSCallAssertionReason"], v2, (v3 & 1) != 0))
  {
    BOOL v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PHSOSViewController,status heartbeat timer fired", v6, 2u);
    }

    [WeakRetained sendFlowStateUpdateForCurrentSOSMode];
  }
  else
  {
    uint64_t v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001EA7B0();
    }

    [WeakRetained clearStatusHeartbeatTimer];
  }
}

void sub_100066F74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100066FA0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v4 = WeakRetained;
  if (a2 == 1)
  {
    [WeakRetained setSosMode:7];
  }
  else if (!a2)
  {
    uint64_t v5 = [@"sms://open?groupid=" stringByAppendingString:IMStewieChatIdentifier];
    id v6 = +[NSURL URLWithString:v5];
    uint64_t v12 = 0;
    int v7 = TUOpenURLWithError();
    id v8 = 0;

    uint64_t v9 = sub_1000D5130();
    id v10 = v9;
    if (v7)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PHSOSViewController,successfully opened messages,deactivating SOS", v11, 2u);
      }

      [v4 deactivateSOS];
    }
    else
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1001EA7E4((uint64_t)v8, v10);
      }
    }
  }
}

void sub_1000670E0(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  BOOL v4 = +[PHSOSViewController shouldShowMedicalID:v3];

  uint64_t v5 = [WeakRetained alertRestingView];
  [v5 setHasMedicalIDSlider:v4];
}

void sub_100067290(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10006733C;
  v6[3] = &unk_1002CEDC0;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10006733C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100067470(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_10006748C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned __int8 v5 = +[PHSOSViewController shouldShowMedicalID:v3];
  id v6 = sub_1000D5130();
  id v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Medical ID data fetched", v19, 2u);
    }

    if (_os_feature_enabled_impl())
    {
      id v8 = +[MIUIDisplayConfiguration lockScreenConfiguration];
      [(ICSMedicalIDViewController *)v8 setIsHomeIndicatorHidden:1];
      id v9 = objc_alloc((Class)MIUIMedicalIDViewController);
      id v10 = [*(id *)(a1 + 32) healthStore];
      id v11 = [v9 initWithHealthStore:v10 medicalIDData:v3 displayConfiguration:v8];

      id v12 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v11];
      [WeakRetained setMedicalIDNavigationController:v12];

      id v13 = [WeakRetained medicalIDNavigationController];
      [v13 setModalPresentationStyle:6];

      id v14 = [objc_alloc((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:*(void *)(a1 + 32) action:"dismissMedicalIDViewController"];
      id v15 = [v11 navigationItem];
      [v15 setRightBarButtonItem:v14];
    }
    else
    {
      id v8 = objc_alloc_init(ICSMedicalIDViewController);
      [(ICSMedicalIDViewController *)v8 setDelegate:*(void *)(a1 + 32)];
      [(ICSMedicalIDViewController *)v8 setShowsDismissButton:1];
      [(ICSMedicalIDViewController *)v8 setShowsShowWhenLockedState:0];
      [(ICSMedicalIDViewController *)v8 setShowsEmergencyAccessState:0];
      [(ICSMedicalIDViewController *)v8 setMedicalID:v3];
      id v16 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v8];
      [WeakRetained setMedicalIDNavigationController:v16];

      id v17 = [WeakRetained medicalIDNavigationController];
      [v17 setModalPresentationStyle:6];

      id v11 = [WeakRetained medicalIDNavigationController];
      id v14 = [v11 navigationBar];
      [v14 setPrefersLargeTitles:1];
    }

    uint64_t v18 = *(void *)(a1 + 40);
    if (v18) {
      (*(void (**)(void))(v18 + 16))();
    }
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001EA85C();
    }

    [WeakRetained deactivateSOS];
  }
}

void sub_1000678F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006790C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Presenting Medical ID...", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained medicalIDNavigationController];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1000679F4;
  _OWORD v5[3] = &unk_1002CD518;
  void v5[4] = WeakRetained;
  [WeakRetained presentViewController:v4 animated:1 completion:v5];
}

void sub_1000679F4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) sosMode] == (id)5 || objc_msgSend(*(id *)(a1 + 32), "sosMode") == (id)6)
  {
    uint64_t v2 = [*(id *)(a1 + 32) infoLabel];
    id v3 = [v2 text];

    if (v3)
    {
      id v4 = [*(id *)(a1 + 32) infoLabel];
      [v4 setText:0];
    }
  }
}

void sub_100067C34(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100067D30;
  v4[3] = &unk_1002CD518;
  void v4[4] = *(void *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:v4 relativeDuration:0.0 animations:0.5];
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100067D78;
  v2[3] = &unk_1002CD518;
  id v3 = *(id *)(a1 + 40);
  +[UIView addKeyframeWithRelativeStartTime:v2 relativeDuration:0.5 animations:1.0];
}

void sub_100067D30(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) currentView];
  [v1 setAlpha:0.0];
}

id sub_100067D78(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_100067D84(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) currentView];
  [v2 removeFromSuperview];

  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 setCurrentView:v4];
}

void sub_100068420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10006843C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
  unsigned int v3 = [v2 isValid];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
    [v4 invalidate];

    [*(id *)(a1 + 32) setConfirmationTimeoutTimer:0];
  }
  id v5 = [*(id *)(a1 + 32) sosMode];
  id v6 = *(void **)(a1 + 32);
  if (v5 == (id)8) {
    [v6 checkInView];
  }
  else {
  id v7 = [v6 countdownView];
  }
  [v7 resume];

  id v8 = *(void **)(a1 + 32);

  return [v8 sendFlowStateUpdateForCurrentSOSMode];
}

void sub_1000684F4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
  unsigned int v3 = [v2 isValid];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
    [v4 invalidate];

    [*(id *)(a1 + 32) setConfirmationTimeoutTimer:0];
  }
  id v5 = [*(id *)(a1 + 32) sosMode];
  id v6 = *(void **)(a1 + 32);
  if (v5 == (id)8) {
    [v6 checkInView];
  }
  else {
  id v7 = [v6 countdownView];
  }
  [v7 stop];

  [*(id *)(a1 + 32) countdownPausedTime];
  double v9 = v8;
  [*(id *)(a1 + 32) countdownStartedTime];
  double v11 = v9 - v10;
  [*(id *)(a1 + 32) setCountdownStartedTime:0.0];
  [*(id *)(a1 + 32) setCountdownPausedTime:0.0];
  [*(id *)(a1 + 32) setTimeTillCancelCall:v11];
  [*(id *)(a1 + 32) setWasCallCancelled:1];
  id v12 = [*(id *)(a1 + 32) sosMode];
  id v13 = *(void **)(a1 + 32);
  if (v12 == (id)1)
  {
    [v13 setSosMode:3];
    id v14 = [*(id *)(a1 + 32) sosTrigger];
    id v15 = *(void **)(a1 + 32);
    if (v14 == (id)7)
    {
      id v16 = [v15 getCheckInViewModel];
      id v17 = *(void **)(a1 + 32);
      [v16 timeout];
      double v19 = v18;
      [v17 timeTillCancelCall];
      [v17 setTimeTillCancelCall:v19 + v20];
      [*(id *)(a1 + 32) submitSOSResolutionMetric:0];
    }
    else
    {
      [v15 raiseAccidentalSOSNotification];
    }
    uint64_t v21 = [*(id *)(a1 + 32) analyticsReporter];
    [v21 reportCanceledSOSCountdownToCall:v11];

    uint64_t v22 = [*(id *)(a1 + 32) getSOSDialCountdownViewModel];
    double v23 = (double)(unint64_t)[v22 countdown] - v11;

    if ([*(id *)(a1 + 32) sosTrigger] == (id)7)
    {
      v24 = [*(id *)(a1 + 32) getCheckInViewModel];
      [v24 timeout];
      double v23 = v23 + v25;
    }
    id v33 = [*(id *)(a1 + 32) coreAnalyticsReporter];
    id v26 = [*(id *)(a1 + 32) sosTrigger];
    uint64_t v27 = (uint64_t)v23;
    uint64_t v28 = v33;
    uint64_t v29 = 2;
  }
  else
  {
    if ([v13 sosMode] == (id)3) {
      return;
    }
    [*(id *)(a1 + 32) setSosMode:6];
    v30 = [*(id *)(a1 + 32) analyticsReporter];
    [v30 reportCanceledSOSCountdownToNotify:v11];

    id v31 = objc_alloc_init(PHSOSNotifyCountdownViewModel);
    double v32 = (double)[(PHSOSNotifyCountdownViewModel *)v31 countdown] - v11;

    id v33 = [*(id *)(a1 + 32) coreAnalyticsReporter];
    id v26 = [*(id *)(a1 + 32) sosTrigger];
    uint64_t v27 = (uint64_t)v32;
    uint64_t v28 = v33;
    uint64_t v29 = 5;
  }
  [v28 reportSOSUserCancelled:v26 lastFlowState:v29 countdownValue:v27];
}

void sub_1000687AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10006886C;
  _OWORD v5[3] = &unk_1002CED28;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v4 dismissViewControllerAnimated:1 completion:v5];
  objc_destroyWeak(&v6);
}

void sub_100068858(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10006886C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained sosMode] == (id)8) {
    [WeakRetained checkInView];
  }
  else {
  id v1 = [WeakRetained countdownView];
  }
  [v1 restart];

  uint64_t v2 = [WeakRetained coreAnalyticsReporter];
  [v2 reportSOSCancelationTimeout:[WeakRetained sosTrigger]];

  [WeakRetained sendFlowStateUpdateForCurrentSOSMode];
}

void sub_100068C3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((+[TUCallCapabilities isEmergencyCallbackModeEnabled] & 1) == 0)
  {
    if ([WeakRetained sosMode] == (id)4)
    {
      id v1 = [WeakRetained countdownView];
      [v1 stop];

      uint64_t v2 = +[TUCallCenter sharedInstance];
      unsigned __int8 v3 = [v2 hasCurrentCalls];

      if ((v3 & 1) == 0) {
        [WeakRetained startSOSNotificationCountdown];
      }
    }
    else if ([WeakRetained sosMode] == (id)7)
    {
      [WeakRetained setSosMode:7];
    }
  }
}

void sub_100069060(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000D5130();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Failed to add SOS notification request,error,%@", (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    if (v5)
    {
      LOWORD(v6) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully added SOS notification request", (uint8_t *)&v6, 2u);
    }

    +[SOSUtilities setShortSOSNotificationDisplayTimestamp];
    [*(id *)(a1 + 32) submitSOSResolutionMetric:1];
  }
}

id sub_100069648(uint64_t a1)
{
  return [*(id *)(a1 + 32) deactivateSOS];
}

uint64_t sub_1000698E0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000698F8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100069B5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) userAcknowledgedFindMyInfo];
}

id sub_100069B64(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didTapTemporarilyDisableFindMy];
}

void sub_100069D44(uint64_t a1, int a2)
{
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100069DC4;
    block[3] = &unk_1002CD518;
    block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100069DC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) slidingView];
  [v1 didSuppressFindMy];
}

BOOL sub_100069E5C(id a1, TUCall *a2)
{
  return [(TUCall *)a2 isSOSOrFakeSOS];
}

void sub_10006CE6C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

id sub_10006D184(uint64_t a1)
{
  [*(id *)(a1 + 32) updateButtonColor];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 updateIcon];
}

id sub_10006E904(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_10006E910(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) delegate];
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = [*(id *)(a1 + 32) delegate];
    char v5 = objc_opt_respondsToSelector();

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) delegate];
      [v6 didFinishSlideForSlidingButton:*(void *)(a1 + 32)];
    }
  }
}

void sub_10006E9C0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) removeFromSuperview];
  uint64_t v2 = [*(id *)(a1 + 32) delegate];
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = [*(id *)(a1 + 32) delegate];
    char v5 = objc_opt_respondsToSelector();

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) delegate];
      [v6 didFinishSlideForSlidingButton:*(void *)(a1 + 32)];
    }
  }
}

void sub_1000702C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100070318(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained startVoiceLoopMessagePlaybackWithMessageType:103];
    id WeakRetained = v2;
  }
}

void sub_100070360(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setSlidingViewState:3];
    [v2 didFinishSOSSliding:2];
    id WeakRetained = v2;
  }
}

id sub_100070BFC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 232) setAlpha:1.0];
}

void sub_100070D1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100070D40(uint64_t a1, int a2)
{
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100070DD8;
    block[3] = &unk_1002CED28;
    objc_copyWeak(&v3, (id *)(a1 + 32));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v3);
  }
}

void sub_100070DD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setDeviceSupportsFindMy:1];
    [v2 createFindMyUI];
    id WeakRetained = v2;
  }
}

void sub_100070EE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100070F04(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    _DWORD v5[2] = sub_100070F9C;
    _OWORD v5[3] = &unk_1002CD918;
    void v5[4] = WeakRetained;
    char v6 = a2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }
}

id sub_100070F9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setShouldPowerDownViewShowFindMyAlert:*(unsigned char *)(a1 + 40) == 0];
}

void sub_10007138C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000713B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained clearMetricItems];
    [v3 setSlidingViewState:1];
    [v3 startMotionStateTracking];
    [v3 repeatingUpdateAnimatedSliderForCountdownNumber:[*(id *)(a1 + 32) countdown] forModel:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100071884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000718A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PHSlidingView,CMMotionActivity,inside handler", buf, 2u);
  }

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1000719A8;
  v6[3] = &unk_1002CDCA8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v7 = v3;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

  objc_destroyWeak(&v8);
}

void sub_1000719A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = sub_1000D5130();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
    if (!v3)
    {
      if (v5)
      {
        LOWORD(v14[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PHSlidingView,CMMotionActivity,null", (uint8_t *)v14, 2u);
      }
      goto LABEL_9;
    }
    if (v5)
    {
      unsigned int v6 = [*(id *)(a1 + 32) isMounted];
      [*(id *)(a1 + 32) mountedProbability];
      v14[0] = 67109376;
      v14[1] = v6;
      __int16 v15 = 2048;
      uint64_t v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PHSlidingView,CMMotionActivity,isMounted:%d,mountedProbability:%lf", (uint8_t *)v14, 0x12u);
    }

    id v8 = [WeakRetained motionActivityList];
    double v9 = [PHSlidingViewMotionActivity alloc];
    id v10 = [*(id *)(a1 + 32) isMounted];
    [*(id *)(a1 + 32) mountedProbability];
    double v11 = -[PHSlidingViewMotionActivity initWithIsMounted:probability:](v9, "initWithIsMounted:probability:", v10);
    [v8 addObject:v11];

    id v12 = [WeakRetained motionActivityList];
    id v13 = [v12 count];

    if ((unint64_t)v13 >= 5)
    {
      uint64_t v4 = [WeakRetained motionActivityList];
      [v4 removeObjectAtIndex:0];
LABEL_9:
    }
  }
}

void sub_100071EC0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) slidingViewState] == (id)1)
  {
    uint64_t v2 = TLAlertTopicSOSCountdownTick;
    if (*(unsigned char *)(a1 + 48))
    {
      id v6 = [*(id *)(a1 + 32) alertController];
      [v6 playAlertWithAudio:0 alertTopic:v2];
    }
    else
    {
      id v3 = [*(id *)(a1 + 40) playsSound];
      uint64_t v4 = [*(id *)(a1 + 32) alertController];
      [v4 playAlertWithAudio:v3 alertTopic:v2];

      if (v3)
      {
        BOOL v5 = *(void **)(a1 + 32);
        [v5 toggleFlash];
      }
    }
  }
}

void sub_100071FB0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) slidingViewState] == (id)1)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    uint64_t v2 = *(void *)(a1 + 56);
    id v3 = *(void **)(a1 + 32);
    id v4 = [*(id *)(a1 + 40) countdown];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100072090;
    _OWORD v7[3] = &unk_1002CEFE8;
    uint64_t v5 = *(void *)(a1 + 56);
    id v6 = *(void **)(a1 + 40);
    v7[4] = *(void *)(a1 + 32);
    uint64_t v9 = v5;
    id v8 = v6;
    [v3 updateAnimatedSliderForCountdownNumber:v2 forTotalCount:v4 afterDelay:v7 completion:0.280999988];
  }
}

id sub_100072090(uint64_t a1)
{
  return [*(id *)(a1 + 32) repeatingUpdateAnimatedSliderForCountdownNumber:*(void *)(a1 + 48) - 1 forModel:*(void *)(a1 + 40)];
}

void sub_1000720A4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) slidingViewState] != (id)1) {
    return;
  }
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Slider Countdown has finished! Calling completion.", v11, 2u);
  }

  [*(id *)(a1 + 32) invalidateCountdownAndStopSounds];
  [*(id *)(a1 + 32) stopFlash];
  if ([*(id *)(a1 + 32) isCallDueToMountedState])
  {
    [*(id *)(a1 + 32) setSlidingViewState:5];
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = 3;
LABEL_10:
    [v3 didFinishSOSSliding:v4];
    goto LABEL_11;
  }
  +[SOSUtilities clawReleaseToCallSupport];
  if (v5 == 0.0)
  {
    [*(id *)(a1 + 32) setSlidingViewState:4];
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = 0;
    goto LABEL_10;
  }
  +[SOSUtilities clawReleaseToCallSupport];
  id v6 = *(void **)(a1 + 32);
  if (v7 == 1.0)
  {
    [v6 setSlidingViewState:4];
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = 5;
    goto LABEL_10;
  }
  [v6 setSlidingViewState:2];
LABEL_11:
  if (+[SOSUtilities isMountStateTrackingEnabled])
  {
    id v8 = [*(id *)(a1 + 32) cmMotionActivityManager];

    if (v8)
    {
      uint64_t v9 = [*(id *)(a1 + 32) cmMotionActivityManager];
      [v9 stopPeriodicActivityUpdates];

      id v10 = [*(id *)(a1 + 32) motionActivityList];
      [v10 removeAllObjects];
    }
  }
}

void sub_100072364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100072384(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updateAnimatedSliderForCountdownNumber:*(void *)(a1 + 48) forTotalCount:*(void *)(a1 + 32) completion:(double)*(unint64_t *)(a1 + 56)];
}

void sub_100072510(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) animatedSlidingButton];
  id v3 = [v2 acceptButton];
  uint64_t v4 = +[NSString stringWithFormat:@"%ld", *(void *)(a1 + 40)];
  [v3 setKnobText:v4];

  id v6 = [*(id *)(a1 + 32) animatedSlidingButton];
  double v5 = [v6 acceptButton];
  [v5 setKnobPosition:1.0 - (double)(unint64_t)(*(void *)(a1 + 40) - 1) / *(double *)(a1 + 48)];
}

void sub_1000726A0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) animatedSlidingButton];
  id v3 = [v2 acceptButton];
  [v3 setKnobText:&stru_1002D6110];

  id v5 = [*(id *)(a1 + 32) animatedSlidingButton];
  uint64_t v4 = [v5 acceptButton];
  [v4 setKnobPosition:0.0];
}

void sub_10007303C(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallControlSpacing];
  double v2 = 34.0;
  if (v1 != 5) {
    double v2 = 27.0;
  }
  if (!v1) {
    double v2 = 22.0;
  }
  qword_100325FF0 = *(void *)&v2;
}

void sub_100073700(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) animatedSlidingButton];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) powerOffSlidingButton];
  [v3 setAlpha:0.0];
}

id sub_100073BA0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 216) setAlpha:0.0];
  double v2 = *(void **)(*(void *)(a1 + 32) + 224);

  return [v2 setAlpha:0.0];
}

void sub_100073BFC(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) beaconManager];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100073C90;
  v3[3] = &unk_1002CD518;
  void v3[4] = *(void *)(a1 + 32);
  [v2 setUserHasAcknowledgedFindMy:1 completion:v3];
}

void sub_100073C90(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100073D08;
  block[3] = &unk_1002CD518;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100073D08(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100073DCC;
  v3[3] = &unk_1002CD518;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100073E40;
  v2[3] = &unk_1002CD540;
  void v2[4] = v4;
  return +[UIView _animateUsingDefaultTimingWithOptions:0 animations:v3 completion:v2];
}

id sub_100073DCC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 104) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 216) setAlpha:1.0];
  double v2 = *(void **)(*(void *)(a1 + 32) + 224);

  return [v2 setAlpha:1.0];
}

id sub_100073E40(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _powerOff];
}

void sub_100073E48(uint64_t a1)
{
  [*(id *)(a1 + 32) setShouldPowerDownViewShowFindMyAlert:0];
  id v2 = [*(id *)(a1 + 32) beaconManager];
  [v2 setUserHasAcknowledgedFindMy:1 completion:&stru_1002CF0A0];
}

id sub_100073EB4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 216) setAlpha:1.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 224);

  return [v2 setAlpha:1.0];
}

id sub_100073F10(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _powerOff];
}

void sub_100073FE0(id a1)
{
  unint64_t v1 = sub_1000D5130();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Shutting off!", v4, 2u);
  }

  id v2 = [objc_alloc((Class)FBSShutdownOptions) initWithReason:@"InCallService PowerOff Slider"];
  [v2 setSource:1];
  id v3 = +[FBSSystemService sharedService];
  [v3 shutdownWithOptions:v2];
}

void sub_100074090(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100074114;
  block[3] = &unk_1002CDA98;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100074114(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10007457C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) avCaptureDevice];
  unsigned __int8 v3 = [v2 hasTorch];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) avCaptureDevice];
    [v4 lockForConfiguration:0];

    id v5 = [*(id *)(a1 + 32) avCaptureDevice];
    [v5 setTorchMode:1];

    id v6 = [*(id *)(a1 + 32) avCaptureDevice];
    [v6 unlockForConfiguration];

    dispatch_time_t v7 = dispatch_time(0, 500000000);
    id v8 = [*(id *)(a1 + 32) avCaptureDispatchQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000746E8;
    block[3] = &unk_1002CD518;
    void block[4] = *(void *)(a1 + 32);
    dispatch_after(v7, v8, block);
  }
  else
  {
    uint64_t v9 = sub_1000D5130();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }
  }
}

id sub_1000746E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) stopFlash];
}

void sub_100074790(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) avCaptureDevice];
  unsigned __int8 v3 = [v2 hasTorch];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) avCaptureDevice];
    [v4 lockForConfiguration:0];

    id v5 = [*(id *)(a1 + 32) avCaptureDevice];
    id v6 = [v5 torchMode];

    if (v6 == (id)1)
    {
      dispatch_time_t v7 = [*(id *)(a1 + 32) avCaptureDevice];
      [v7 setTorchMode:0];
    }
    id v9 = [*(id *)(a1 + 32) avCaptureDevice];
    [v9 unlockForConfiguration];
  }
  else
  {
    id v8 = sub_1000D5130();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }
  }
}

void sub_1000749B4(id a1)
{
  unint64_t v1 = (const void *)MGCopyAnswer();
  id v2 = +[UIScreen mainScreen];
  [v2 _referenceBounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  if (v1)
  {
    CFTypeID v11 = CFGetTypeID(v1);
    if (v11 == CFDataGetTypeID())
    {
      BytePtr = CFDataGetBytePtr((CFDataRef)v1);
      long long v13 = *((_OWORD *)BytePtr + 1);
      *(_OWORD *)ymmword_100326000 = *(_OWORD *)BytePtr;
      *(_OWORD *)&ymmword_100326000[16] = v13;
    }
    v26.origin.x = v4;
    v26.origin.y = v6;
    v26.size.width = v8;
    v26.size.height = v10;
    float v14 = CGRectGetWidth(v26) * *(double *)ymmword_100326000;
    float v15 = floorf(v14);
    v27.origin.x = v4;
    v27.origin.y = v6;
    v27.size.width = v8;
    v27.size.height = v10;
    float v16 = CGRectGetHeight(v27) * *(double *)&ymmword_100326000[8];
    double v17 = floorf(v16);
    v28.origin.x = v4;
    v28.origin.y = v6;
    v28.size.width = v8;
    v28.size.height = v10;
    float v18 = CGRectGetWidth(v28) * *(double *)&ymmword_100326000[16];
    double v19 = floorf(v18);
    v29.origin.x = v4;
    v29.origin.y = v6;
    v29.size.width = v8;
    v29.size.height = v10;
    float v20 = CGRectGetHeight(v29) * *(double *)&ymmword_100326000[24];
    double v21 = floorf(v20);
  }
  else
  {
    uint64_t v22 = sub_1000D5130();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)double v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "PHSlidingView,lockButtonDimension,lock button details not found", v25, 2u);
    }

    if (qword_100326030 != -1) {
      dispatch_once(&qword_100326030, &stru_1002CF100);
    }
    BOOL v23 = (byte_100326028 | byte_100326029 | byte_10032602A) == 0;
    v30.origin.x = v4;
    v30.origin.y = v6;
    v30.size.width = v8;
    v30.size.height = v10;
    float Width = CGRectGetWidth(v30);
    float v15 = floorf(Width);
    double v17 = dbl_100284CC0[v23];
    double v19 = 0.0;
    double v21 = 70.0;
  }
  *(double *)ymmword_100326000 = v15;
  *(double *)&ymmword_100326000[8] = v17;
  *(double *)&ymmword_100326000[16] = v19;
  *(double *)&ymmword_100326000[24] = v21;
}

void sub_100074BE8(id a1)
{
  byte_100326028 = MGIsDeviceOfType();
  byte_100326029 = MGIsDeviceOfType();
  MGIsDeviceOfType();
  MGIsDeviceOfType();
  byte_10032602A = MGIsDeviceOfType();
}

void sub_10007511C(CGRect *a1)
{
  CFDataRef v2 = (const __CFData *)MGCopyAnswer();
  if (v2)
  {
    CFDataRef v3 = v2;
    CFTypeID v4 = CFGetTypeID(v2);
    if (v4 == CFDataGetTypeID())
    {
      BytePtr = (long long *)CFDataGetBytePtr(v3);
      long long v6 = BytePtr[1];
      xmmword_100326038 = *BytePtr;
      *(_OWORD *)&qword_100326048 = v6;
    }
    float v7 = CGRectGetWidth(a1[1]) * *(double *)&xmmword_100326038;
    double v8 = floorf(v7);
    float v9 = CGRectGetHeight(a1[1]) * *((double *)&xmmword_100326038 + 1);
    double v10 = floorf(v9);
    float v11 = CGRectGetWidth(a1[1]) * *(double *)&qword_100326048;
    *(double *)&uint64_t v12 = floorf(v11);
    float v13 = CGRectGetHeight(a1[1]) * *(double *)&qword_100326050;
    *(double *)&xmmword_100326038 = v8;
    *((double *)&xmmword_100326038 + 1) = v10;
    qword_100326048 = v12;
    *(double *)&qword_100326050 = floorf(v13);
  }
  else
  {
    float v14 = sub_1000D5130();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1001EA980(v14);
    }
  }
  CFDataRef v15 = (const __CFData *)MGCopyAnswer();
  if (v15)
  {
    CFDataRef v16 = v15;
    CFTypeID v17 = CFGetTypeID(v15);
    if (v17 == CFDataGetTypeID())
    {
      float v18 = (long long *)CFDataGetBytePtr(v16);
      long long v19 = v18[1];
      xmmword_100326058 = *v18;
      *(_OWORD *)&qword_100326068 = v19;
    }
    float v20 = CGRectGetWidth(a1[1]) * *(double *)&xmmword_100326058;
    double v21 = floorf(v20);
    float v22 = CGRectGetHeight(a1[1]) * *((double *)&xmmword_100326058 + 1);
    double v23 = floorf(v22);
    float v24 = CGRectGetWidth(a1[1]) * *(double *)&qword_100326068;
    *(double *)&uint64_t v25 = floorf(v24);
    float v26 = CGRectGetHeight(a1[1]) * *(double *)&qword_100326070;
    *(double *)&xmmword_100326058 = v21;
    *((double *)&xmmword_100326058 + 1) = v23;
    qword_100326068 = v25;
    *(double *)&qword_100326070 = floorf(v26);
  }
  else
  {
    CGRect v27 = sub_1000D5130();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_1001EA93C(v27);
    }
  }
}

void sub_10007717C(id a1)
{
  id v3 = +[NSBundle mainBundle];
  unint64_t v1 = [v3 bundleIdentifier];
  CFDataRef v2 = TUPreferredFaceTimeBundleIdentifier();
  byte_100326080 = [v1 isEqualToString:v2];
}

void sub_100077524(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  long long v6 = [PHHandsetDialerNumberPadButton alloc];
  signed int v7 = [v5 intValue];

  uint64_t v8 = v7;
  float v9 = [*(id *)(a1 + 32) traitCollection];
  id v10 = -[PHHandsetDialerNumberPadButton initForCharacter:style:](v6, "initForCharacter:style:", v8, [v9 userInterfaceStyle]);

  [*(id *)(a1 + 40) insertObject:v10 atIndex:a3];
}

void sub_100078310(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_100326090 = [v1 BOOLForKey:@"shouldTraceSignposts"];
}

uint64_t sub_100079008(uint64_t a1, int a2)
{
  CFTypeID v4 = sub_1000D52D8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Handled user-initiated device lock event, didConsumeEvent: %d", (uint8_t *)v6, 8u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10007BFD8(uint64_t a1, void *a2)
{
  return _[a2 _handleSIMInsertionOrRemoval];
}

id sub_10007BFE0(uint64_t a1, void *a2)
{
  id v3 = sub_1000D5130();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "TUCallCenterInCallServiceDidAppearNotification: Received in ", buf, 2u);
  }

  CFTypeID v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "DialerAnimation: Calling _resetButtonAnimation in ", v6, 2u);
  }

  return [a2 _resetButtonAnimation];
}

void sub_10007C4B8(id a1)
{
  uint64_t v1 = +[TUCallHistoryController sharedControllerWithCoalescingStrategy:1 options:4];
  CFDataRef v2 = (void *)qword_1003260A0;
  qword_1003260A0 = v1;
}

void sub_10007D58C(uint64_t a1)
{
  CFDataRef v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) superview];
  CFTypeID v4 = *(void **)(a1 + 32);
  v8[0] = *(void *)(a1 + 40);
  id v5 = [v4 dialerView];
  long long v6 = [v5 deleteButton];
  v8[1] = v6;
  signed int v7 = +[NSArray arrayWithObjects:v8 count:2];
  [v2 _fadeSubviewsOf:v3 excludingViews:v7 toValue:0.0];
}

void sub_10007E29C(uint64_t a1, int a2)
{
  CFTypeID v4 = [*(id *)(a1 + 32) soundPlayer];
  [v4 attemptToPlayKey:a2];

  long long v6 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = +[NSString stringWithFormat:@"%c", a2];
  [v6 phonePad:v5 appendString:v7];
}

id *sub_10007E338(id *result, uint64_t a2)
{
  if (a2 == 1) {
    return (id *)_[result[4] _callButtonPressed:0];
  }
  if (!a2) {
    return (id *)[result[4] phonePadDeleteLastDigit:result[5]];
  }
  return result;
}

id sub_10007E770(id result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = (uint64_t)result;
    id v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001EAC98(v2, v3);
    }

    return [*(id *)(v2 + 40) setWantsCallButtonAnimation:0];
  }
  return result;
}

void sub_10007F084(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 _setBackgroundStyle:*(void *)(a1 + 32)];
}

void sub_10007F2FC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) phonePadView];
  [v2 setPlaysSounds:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10007F81C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10007F948(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!v5 || a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    long long v6 = sub_1000D5130();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = NSStringFromClass(*(Class *)(a1 + 40));
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Received remote view controller from %@", (uint8_t *)&v9, 0xCu);
    }
    uint64_t v8 = objc_alloc_init(PHPhoneRemoteHostViewController);
    [(PHPhoneRemoteHostViewController *)v8 setUpRemoteViewController:v5];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1000802AC(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003260B0;
  qword_1003260B0 = (uint64_t)v1;
}

void sub_100080510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v17 - 40));
  _Unwind_Resume(a1);
}

void sub_100080544(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v19 = a3;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v6 = v5;
  id v7 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v21;
    uint64_t v10 = (id *)(a1 + 32);
    while (2)
    {
      uint64_t v11 = a1;
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v9) {
          objc_enumerationMutation(v6);
        }
        float v13 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        if ([v13 isSOSOrFakeSOS])
        {
LABEL_15:

          id WeakRetained = objc_loadWeakRetained((id *)(v11 + 40));
          uint64_t v17 = v19;
          [WeakRetained showSOSDisconnectConfirmation:v19];
          goto LABEL_16;
        }
        float v14 = +[CNKFeatures sharedInstance];
        if ([v14 isEnhancedEmergencyEnabled]
          && ([v13 isEmergency] & 1) != 0)
        {
          id v15 = objc_loadWeakRetained(v10);
          unsigned __int8 v16 = [v15 isShowSOSConfirmationSupported];

          if (v16) {
            goto LABEL_15;
          }
        }
        else
        {
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
      a1 = v11;
      if (v8) {
        continue;
      }
      break;
    }
  }

  uint64_t v17 = v19;
  (*((void (**)(id, uint64_t))v19 + 2))(v19, 1);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained clearAllDelegates];
LABEL_16:
}

void sub_100080C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100080C7C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v2 = [WeakRetained alertControllers];
  [v2 removeObject:*(void *)(a1 + 32)];

  [WeakRetained dismissAlertControllers];
}

void sub_100080CF8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  [*(id *)(a1 + 32) clearAllDelegates];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v2 = [WeakRetained alertControllers];
  [v2 removeObject:*(void *)(a1 + 40)];

  [WeakRetained dismissAlertControllers];
}

void sub_1000810D4(id a1)
{
  id v1 = objc_alloc_init(PHAudioDeviceController);
  id v2 = (void *)qword_1003260C0;
  qword_1003260C0 = (uint64_t)v1;
}

void sub_1000813D0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 _pickableRoutesUsingBackgroundQueue:1];
  CFTypeID v4 = [v2 routesForUnformattedPickableRoutes:v3];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000814AC;
  _OWORD v7[3] = &unk_1002CEDC0;
  id v5 = *(id *)(a1 + 40);
  id v8 = v4;
  id v9 = v5;
  id v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_1000814AC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100081F20(uint64_t a1)
{
  id v2 = objc_alloc((Class)TUAudioRoute);
  id v3 = [*(id *)(a1 + 32) _pickedRouteUsingBackgroundQueue:1];
  id v4 = [v2 initWithDictionary:v3];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100082004;
  _OWORD v7[3] = &unk_1002CEDC0;
  id v5 = *(id *)(a1 + 40);
  id v8 = v4;
  id v9 = v5;
  id v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_100082004(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000829FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100082A14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100082A24(uint64_t a1)
{
}

void sub_100082A2C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  [*(id *)(a1 + 32) _releaseLock];
}

void sub_100082BF4(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"PHAudioDeviceControllerPickedRouteChangedNotification" object:0];
}

void sub_100082EC0(id a1)
{
  id v1 = sub_1000D5130();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 138412290;
    CFStringRef v4 = @"PHAudioDeviceControllerAudioRoutesChangedNotification";
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Posting %@", (uint8_t *)&v3, 0xCu);
  }

  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PHAudioDeviceControllerAudioRoutesChangedNotification" object:0];
}

id sub_1000834DC()
{
  if (qword_1003260E0 != -1) {
    dispatch_once(&qword_1003260E0, &stru_1002CF358);
  }
  uint64_t v0 = (void *)qword_1003260D8;

  return v0;
}

void sub_100083530(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.mobilephone", "Default");
  id v2 = (void *)qword_1003260D8;
  qword_1003260D8 = (uint64_t)v1;
}

id sub_100083574()
{
  if (qword_1003260F0 != -1) {
    dispatch_once(&qword_1003260F0, &stru_1002CF378);
  }
  uint64_t v0 = (void *)qword_1003260E8;

  return v0;
}

void sub_1000835C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.mobilephone", "Oversized");
  id v2 = (void *)qword_1003260E8;
  qword_1003260E8 = (uint64_t)v1;
}

id sub_10008360C()
{
  if (qword_100326100 != -1) {
    dispatch_once(&qword_100326100, &stru_1002CF398);
  }
  uint64_t v0 = (void *)qword_1003260F8;

  return v0;
}

void sub_100083660(id a1)
{
  int v3 = dispatch_queue_attr_make_with_qos_class(0, (dispatch_qos_class_t)0xFFFFFFFE, 0);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.calls.mobilephone.logging", v3);
  id v2 = (void *)qword_1003260F8;
  qword_1003260F8 = (uint64_t)v1;
}

IMP sub_100083750()
{
  uint64_t v0 = (objc_class *)objc_opt_class();
  InstanceMethod = class_getInstanceMethod(v0, "setNeedsLayout");
  id v2 = class_getInstanceMethod(v0, "_debugSetNeedsLayout");
  Implementation = method_getImplementation(InstanceMethod);
  CFStringRef v4 = method_getImplementation(v2);
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  class_replaceMethod(v0, "_debugSetNeedsLayout", Implementation, TypeEncoding);
  id v6 = method_getTypeEncoding(v2);

  return class_replaceMethod(v0, "setNeedsLayout", v4, v6);
}

IMP sub_1000838A4()
{
  uint64_t v0 = (objc_class *)objc_opt_class();
  InstanceMethod = class_getInstanceMethod(v0, "setNeedsLayout");
  id v2 = class_getInstanceMethod(v0, "_debugSetNeedsLayout");
  Implementation = method_getImplementation(InstanceMethod);
  CFStringRef v4 = method_getImplementation(v2);
  TypeEncoding = method_getTypeEncoding(InstanceMethod);
  class_replaceMethod(v0, "_debugSetNeedsLayout", Implementation, TypeEncoding);
  id v6 = method_getTypeEncoding(v2);

  return class_replaceMethod(v0, "setNeedsLayout", v4, v6);
}

void sub_100084568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100084590(id a1)
{
  uint64_t v1 = +[NSHashTable weakObjectsHashTable];
  id v2 = (void *)qword_100326118;
  qword_100326118 = v1;

  uint64_t v3 = +[NSMapTable weakToStrongObjectsMapTable];
  CFStringRef v4 = (void *)qword_100326120;
  qword_100326120 = v3;
}

uint64_t sub_1000845F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100084600(uint64_t a1)
{
}

void sub_100084608(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (!a2 || v5)
  {
    uint64_t v10 = sub_1000D5130();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001EAE0C();
    }
  }
  else
  {
    uint64_t v7 = [a2 firstObject];
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100084740(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100326130;
  qword_100326130 = (uint64_t)v1;
}

void sub_100084940(id a1)
{
  id v1 = [objc_alloc((Class)CoreTelephonyClient) initWithQueue:&_dispatch_main_q];
  id v2 = (void *)qword_100326140;
  qword_100326140 = (uint64_t)v1;
}

void sub_100084FD8(id a1)
{
  id v5 = objc_alloc_init((Class)TUCallProviderManager);
  id v1 = [v5 telephonyProvider];
  id v2 = [v1 identifier];
  uint64_t v3 = [v5 providerWithIdentifier:v2];
  CFStringRef v4 = (void *)qword_100326158;
  qword_100326158 = v3;
}

void sub_1000850B4(id a1)
{
  id v1 = objc_alloc_init((Class)FBSOrientationObserver);
  id v2 = (void *)qword_100326160;
  qword_100326160 = (uint64_t)v1;
}

void sub_10008560C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isSpringBoardLocked];
  int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 != v2)
  {
    [*(id *)(a1 + 32) setSpringBoardLocked:v3 != 0];
    id v4 = +[NSNotificationCenter defaultCenter];
    [v4 postNotificationName:@"PHLockScreenStatusChangedNotification" object:*(void *)(a1 + 32)];
  }
}

void *sub_1000856A0(uint64_t a1)
{
  v5[0] = 0;
  if (!qword_100326178)
  {
    v5[1] = _NSConcreteStackBlock;
    _DWORD v5[2] = 3221225472;
    _OWORD v5[3] = sub_1000857E0;
    void v5[4] = &unk_1002CD5C8;
    void v5[5] = v5;
    long long v6 = off_1002CF470;
    uint64_t v7 = 0;
    qword_100326178 = _sl_dlopen();
    int v3 = (void *)v5[0];
    unsigned int v2 = (void *)qword_100326178;
    if (qword_100326178)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      int v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  unsigned int v2 = (void *)qword_100326178;
LABEL_5:
  uint64_t result = dlsym(v2, "SBSGetScreenLockStatus");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_100326170 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000857E0()
{
  uint64_t result = _sl_dlopen();
  qword_100326178 = result;
  return result;
}

void sub_10008620C(id a1)
{
  id v1 = +[TUCallCenter sharedInstance];
  id v2 = +[PHDevice currentDevice];
}

void sub_100086594(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    IOHIDEventSystemClientUnscheduleFromDispatchQueue();
    id v2 = *(const void **)(a1 + 40);
    CFRelease(v2);
  }
}

id sub_10008666C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) HIDEventSystemClient];
  if (!result)
  {
    id result = (id)IOHIDEventSystemClientCreate();
    if (result)
    {
      id v3 = result;
      v5[0] = @"DeviceUsagePage";
      v5[1] = @"DeviceUsage";
      v6[0] = &off_1002DEEB0;
      v6[1] = &off_1002DEEC8;
      +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
      IOHIDEventSystemClientSetMatching();
      IOHIDEventSystemClientRegisterEventBlock();
      id v4 = [*(id *)(a1 + 32) dispatchQueue];
      IOHIDEventSystemClientScheduleWithDispatchQueue();

      return [*(id *)(a1 + 32) setHIDEventSystemClient:v3];
    }
  }
  return result;
}

void sub_10008677C(id a1, void *a2, void *a3, void *a4, __IOHIDEvent *a5)
{
  if (a2)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v10 = a2;
      BOOL v8 = IOHIDEventGetType() == 3;
      id v9 = v10;
      if (v8)
      {
        [v10 handleKeyboardEvent:a5];
        id v9 = v10;
      }
    }
    else
    {
      id v9 = 0;
    }
  }
  else
  {
    id v9 = 0;
  }
}

id sub_1000868A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHIDEventSystemClient:0];
}

id sub_1000873A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [v5 handle];
  BOOL v8 = [v7 value];

  if ([v8 length])
  {
    id v9 = *(void **)(a1 + 32);
    uint64_t v10 = [v6 UUID];
    LODWORD(v9) = [v9 isEmergencyNumberForDigits:v8 senderIdentityUUID:v10];

    if (v9) {
      [v5 setDialType:1];
    }
  }
  if ([v5 dialType] == (id)1
    && [*(id *)(a1 + 40) canMakeEmergencyCallForSenderIdentity:v6])
  {
    id v11 = v6;
    uint64_t v12 = sub_1000D5130();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 138412546;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Updating emergency dial request %@ to use sender identity %@", (uint8_t *)&v16, 0x16u);
    }

    float v13 = [v11 UUID];
    [v5 setLocalSenderIdentityUUID:v13];

    float v14 = [v11 accountUUID];
    [v5 setLocalSenderIdentityAccountUUID:v14];
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_10008769C(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallFaceTimeOverlayUISize];
  double v2 = 14.0;
  if (v1 == 3) {
    double v2 = 20.0;
  }
  qword_100326180 = *(void *)&v2;
}

void sub_100087718(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallFaceTimeOverlayUISize];
  double v2 = 18.0;
  if (v1 == 3) {
    double v2 = 24.0;
  }
  qword_100326190 = *(void *)&v2;
}

void sub_1000881D0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popToRootViewControllerAnimated:1];
}

void sub_10008A754(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008A76C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008A77C(uint64_t a1)
{
}

void sub_10008A784(uint64_t a1)
{
  id v2 = +[TUCallCenter sharedInstance];
  id v3 = [v2 frontmostCall];

  if (v3)
  {
    id v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Setting image: %@ on button", (uint8_t *)&v6, 0xCu);
    }

    [*(id *)(a1 + 32) setControlImage:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  }
}

void sub_10008A878(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  id v4 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_10008A93C;
  _OWORD v5[3] = &unk_1002CF588;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

uint64_t sub_10008A93C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  dispatch_block_cancel(*(dispatch_block_t *)(a1 + 32));
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_10008B2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008B2D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Setting image: %@ on button", (uint8_t *)&v8, 0xCu);
  }

  [*(id *)(a1 + 32) setControlImage:v3];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [*(id *)(a1 + 40) delegate];
  id v7 = [v6 titleForControlType:*(void *)(a1 + 48)];
  [v5 setTitle:v7 forState:0];

  [*(id *)(a1 + 32) setControlType:*(void *)(a1 + 48)];
}

uint64_t sub_10008B3E4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

void sub_10008B400(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  id v4 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_10008B4C4;
  _OWORD v5[3] = &unk_1002CF588;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

uint64_t sub_10008B4C4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  dispatch_block_cancel(*(dispatch_block_t *)(a1 + 32));
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_10008CD70(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:*(double *)(a1 + 40)];
}

void sub_10008CFB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) mainLabel];
  [v2 setText:v1];
}

void sub_10008D000(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateBadgeViewForLocalizedSenderIdentityTitle:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) subtitleLabel];
  [v3 setText:v2];

  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = [*(id *)(a1 + 32) subtitleLabel];
  [v5 setColor:v4];

  id v6 = [*(id *)(a1 + 32) subtitleLabel];
  [v6 sizeToFit];
}

void sub_10008D39C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) mainLabel];
  [v2 setText:v1];
}

void sub_10008D3EC(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateBadgeViewForLocalizedSenderIdentityTitle:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) subtitleLabel];
  [v3 setText:v2];

  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = [*(id *)(a1 + 32) subtitleLabel];
  [v5 setColor:v4];

  id v6 = [*(id *)(a1 + 32) subtitleLabel];
  [v6 sizeToFit];
}

uint64_t sub_10008DD64(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  id v6 = [(id)objc_opt_class() priorityForRoute:v4];
  id v7 = [(id)objc_opt_class() priorityForRoute:v5];
  if (v6 == v7)
  {
    int v8 = [v4 name];
    id v9 = [v5 name];
    uint64_t v10 = (uint64_t)[v8 localizedCompare:v9];
  }
  else if (v6 < v7)
  {
    uint64_t v10 = -1;
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

void sub_10008E18C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    id v3 = *(void (**)(uint64_t))(v2 + 16);
    uint64_t v4 = *(void *)(a1 + 32);
    v3(v4);
  }
  else
  {
    id v5 = +[TURoute speakerAudioRouteGlyph];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v5);
  }
}

void sub_10008E324(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_10008E340(uint64_t a1)
{
  [*(id *)(a1 + 32) suppressRingtone];
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    uint64_t v4 = [PHDeclineWithReminderController alloc];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = objc_loadWeakRetained(v2);
    id v7 = [(PHDeclineWithReminderController *)v4 initWithCall:v5 presenter:v6];

    int v8 = +[NSBundle mainBundle];
    id v9 = [v8 localizedStringForKey:@"REMIND_ME_LATER" value:&stru_1002D6110 table:@"InCallService"];
    uint64_t v10 = [(PHDeclineWithReminderController *)v7 menuActions];
    id v11 = +[UIMenu menuWithTitle:v9 children:v10];
  }
  else
  {
    uint64_t v12 = sub_1000D5130();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1001EB1E4(v12);
    }

    id v11 = 0;
  }

  return v11;
}

id sub_10008EB98(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10008EC10;
  v3[3] = &unk_1002CD518;
  void v3[4] = v1;
  return [v1 performLocationReminderAction:v3 ifAuthorizedForStatus:*(unsigned int *)(a1 + 40)];
}

id sub_10008EC10(uint64_t a1)
{
  [*(id *)(a1 + 32) createReminderForWhenILeave];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 declineCall];
}

void sub_10008EC4C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_10008ECE8;
  _OWORD v5[3] = &unk_1002CE6A0;
  void v5[4] = v2;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 performLocationReminderAction:v5 ifAuthorizedForStatus:*(unsigned int *)(a1 + 56)];
}

id sub_10008ECE8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) objectAtIndex:*(void *)(a1 + 48)];
  [v2 createReminderForLocation:v3];

  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 declineCall];
}

id sub_10008ED48(uint64_t a1)
{
  [*(id *)(a1 + 32) createReminderWithDurationInMinutes:60];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 declineCall];
}

uint64_t sub_10008EE7C(uint64_t result, uint64_t a2, int a3)
{
  if ((a3 - 3) <= 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16))();
  }
  return result;
}

void sub_10008FA60(id a1)
{
  uint64_t v1 = sub_1000D5130();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR)) {
    sub_1001EB294(v1);
  }
}

void sub_10008FAA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = objc_alloc_init((Class)CLGeocoder);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10008FB64;
  _OWORD v9[3] = &unk_1002CF760;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  id v10 = v4;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  id v8 = v4;
  [v5 reverseGeocodeLocation:v8 completionHandler:v9];
}

void sub_10008FB64(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v52 = v5;
  if (v6 || !objc_msgSend(v5, "count", v5))
  {
    uint64_t v7 = +[NSBundle mainBundle];
    uint64_t v8 = [v7 localizedStringForKey:@"SOMEWHERE" value:&stru_1002D6110 table:@"InCallService"];
LABEL_3:
    id v9 = (void *)v8;
    id v10 = +[EKStructuredLocation locationWithTitle:v8];

    goto LABEL_4;
  }
  CGRect v28 = [v5 firstObject];
  uint64_t v7 = [v28 postalAddress];

  if (v7)
  {
    uint64_t v8 = +[CNPostalAddressFormatter stringFromPostalAddress:v7 style:0];
    goto LABEL_3;
  }
  id v10 = 0;
LABEL_4:

  [v10 setGeoLocation:*(void *)(a1 + 32)];
  id v11 = objc_alloc_init((Class)EKEventStore);
  uint64_t v12 = +[EKReminder reminderWithEventStore:v11];
  float v13 = [*(id *)(a1 + 40) reminderText];
  [v12 setTitle:v13];

  float v14 = [v11 defaultCalendarForNewReminders];
  [v12 setCalendar:v14];

  id v15 = [v12 calendar];

  if (!v15) {
    goto LABEL_24;
  }
  int v16 = [v12 calendar];
  id v17 = [v16 source];
  __int16 v18 = [v17 constraints];
  unsigned int v19 = [v18 supportsReminderLocations];

  if (!v19)
  {
    CGRect v29 = sub_1000D5130();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "[WARN] Reminder failed because calendar doesn't support location-based reminders", buf, 2u);
    }

    CGRect v30 = +[NSBundle mainBundle];
    id v31 = [v30 localizedStringForKey:@"REMINDER_FAILED_NO_LOCATION_BASED_REMINDERS" value:&stru_1002D6110 table:@"InCallService"];

    if (v31)
    {
      id v32 = v31;
      id v33 = v32;
LABEL_25:
      v46 = *(void **)(a1 + 40);
      v47 = +[NSBundle mainBundle];
      v48 = [v47 localizedStringForKey:@"ERROR" value:&stru_1002D6110 table:@"InCallService"];
      [v46 presentAlertWithTitle:v48 message:v32];

      goto LABEL_26;
    }
LABEL_24:
    v45 = +[NSBundle mainBundle];
    id v32 = [v45 localizedStringForKey:@"REMINDER_FAILED_TRY_LATER" value:&stru_1002D6110 table:@"InCallService"];

    id v33 = 0;
    goto LABEL_25;
  }
  long long v20 = [*(id *)(a1 + 40) call];
  long long v21 = [v20 provider];
  unsigned int v22 = [v21 isSystemProvider];

  if (v22)
  {
    long long v23 = [v12 calendar];
    float v24 = [v23 source];
    uint64_t v25 = [v24 constraints];
    unsigned int v26 = [v25 supportsReminderActions];

    if (!v26) {
      goto LABEL_18;
    }
    CGRect v27 = [*(id *)(a1 + 40) reminderAction];
    [v12 setAction:v27];
  }
  else
  {
    CGRect v27 = [*(id *)(a1 + 40) reminderActivity];
    [v12 setAppLink:v27];
  }

LABEL_18:
  id v33 = +[EKAlarm alarmWithRelativeOffset:0.0];
  [v33 setProximity:2];
  [v33 setStructuredLocation:v10];
  [v12 setStructuredLocation:v10];
  v34 = +[NSArray arrayWithObject:v33];
  [v12 setAlarms:v34];

  __int16 v35 = sub_1000D5130();
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v36 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v55 = v36;
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "About to save a reminder for CLLocation %@", buf, 0xCu);
  }

  id v53 = 0;
  unsigned __int8 v37 = [v11 saveReminder:v12 commit:1 error:&v53];
  id v32 = v53;
  if ((v37 & 1) == 0)
  {
    id v38 = sub_1000D5130();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_1001EB228((uint64_t)v32, v38, v39, v40, v41, v42, v43, v44);
    }

    goto LABEL_24;
  }
LABEL_26:

  v49 = sub_1000D5130();
  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v50 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 134217984;
    uint64_t v55 = v50;
    _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "PHDeclineWithReminderController.createReminderForWhenILeave endBackgroundTask %lu", buf, 0xCu);
  }

  v51 = +[UIApplication sharedApplication];
  [v51 endBackgroundTask:*(void *)(a1 + 48)];
}

void sub_1000907DC(id a1)
{
  uint64_t v1 = objc_alloc_init(PHDevice);
  uint64_t v2 = (void *)qword_1003261A0;
  qword_1003261A0 = (uint64_t)v1;
}

void sub_10009085C(id a1)
{
  int v4 = 0;
  CFBooleanRef v1 = (const __CFBoolean *)MGCopyAnswerWithError();
  if (v1)
  {
    CFBooleanRef v2 = v1;
    byte_1003261B0 = CFBooleanGetValue(v1) != 0;
    CFRelease(v2);
  }
  else
  {
    id v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001EB2D8(v3);
    }
  }
}

id sub_100090A14(uint64_t a1)
{
  id v2 = objc_alloc((Class)RadiosPreferences);
  id v3 = [*(id *)(a1 + 32) dispatchQueue];
  id v4 = [v2 initWithQueue:v3];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = v4;

  [*(id *)(*(void *)(a1 + 32) + 24) setDelegate:];
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = [*(id *)(a1 + 32) fetchCellularRadioEnabled];
  id result = [*(id *)(a1 + 32) fetchRingerSwitchEnabled];
  *(unsigned char *)(*(void *)(a1 + 32) + 9) = (_BYTE)result;
  return result;
}

void sub_100090BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100090BE8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 8);
  return result;
}

void sub_100090C94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v2 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned __int8 *)(v1 + 8) != v2)
  {
    *(unsigned char *)(v1 + 8) = v2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100090D24;
    block[3] = &unk_1002CD518;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100090D24(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PHDeviceCellularRadioEnabledDidChangeNotification" object:*(void *)(a1 + 32)];
}

void sub_100090E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100090E5C(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 9);
  return result;
}

void sub_100090F08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v2 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned __int8 *)(v1 + 9) != v2)
  {
    *(unsigned char *)(v1 + 9) = v2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100090F98;
    block[3] = &unk_1002CD518;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100090F98(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PHDeviceRingerSwitchDidChangeNotification" object:*(void *)(a1 + 32)];
}

void sub_10009110C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100091124(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100091134(uint64_t a1)
{
}

void sub_10009113C(uint64_t a1)
{
}

void sub_100091290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000912B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setRingerSwitchEnabled:[WeakRetained fetchRingerSwitchEnabled]];
}

id sub_100091E3C(uint64_t a1)
{
  [UIApp startedSubTest:@"end-call" forTest:@"EndActiveCall"];
  [UIApp startedSubTest:@"pre-transition-delay" forTest:@"EndActiveCall"];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 bottomBarActionPerformed:15 withCompletionState:1 fromBar:v3];
}

id sub_1000920B8(uint64_t a1)
{
  [UIApp startedSubTest:@"end-to-end" forTest:@"AnswerIncomingCall"];
  [UIApp startedSubTest:@"pre-animation-delay" forTest:@"AnswerIncomingCall"];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 bottomBarActionPerformed:1 withCompletionState:1 fromBar:v3];
}

BOOL sub_100092134()
{
  unint64_t v0 = sub_100092218();
  uint64_t v1 = sub_1000D5130();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    if (v0 >= 3) {
      CFStringRef v2 = @"NO";
    }
    else {
      CFStringRef v2 = @"YES";
    }
    int v4 = 138412546;
    CFStringRef v5 = v2;
    __int16 v6 = 2048;
    uint64_t v7 = sub_100092218();
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Showing wifi calling alert: %@, shown count is %ld", (uint8_t *)&v4, 0x16u);
  }

  return v0 < 3;
}

uint64_t sub_100092218()
{
  unint64_t v0 = sub_10000FA34(@"WifiCallingCallFailureAlertShowCount");
  if (v0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v1 = (uint64_t)[v0 unsignedIntegerValue];
    }
    else {
      uint64_t v1 = 3;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }

  return v1;
}

void sub_10009228C()
{
  uint64_t v0 = sub_100092218();
  if (v0 != -1)
  {
    uint64_t v1 = +[NSNumber numberWithUnsignedInteger:v0 + 1];
    sub_10000FB00(@"WifiCallingCallFailureAlertShowCount", v1);
    CFStringRef v2 = sub_1000D5130();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      int v3 = 138412290;
      int v4 = v1;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Incrementing wifi calling alert show count to %@", (uint8_t *)&v3, 0xCu);
    }
  }
}

BOOL sub_100092368(void *a1, int a2)
{
  id v3 = a1;
  int v4 = v3;
  if (a2 != 35) {
    goto LABEL_21;
  }
  CFStringRef v5 = (char *)[v3 rangeOfString:@"**0" options:8];
  if (v5 == (char *)0x7FFFFFFFFFFFFFFFLL)
  {
    if ([v4 isEqualToString:@"*#06#"])
    {
      BOOL v7 = 1;
      goto LABEL_22;
    }
LABEL_21:
    BOOL v7 = 0;
    goto LABEL_22;
  }
  uint64_t v8 = &v5[v6];
  id v9 = (char *)[v4 length];
  id v10 = v8 + 1;
  if ((uint64_t)v9 <= (uint64_t)(v8 + 1)) {
    goto LABEL_21;
  }
  id v11 = v9;
  if (([v4 characterAtIndex:v8] & 0xFFFE) != 0x34) {
    goto LABEL_21;
  }
  unsigned int v12 = [v4 characterAtIndex:v8 + 1];
  if (v12 == 50)
  {
    id v10 = v8 + 2;
    if ((uint64_t)v11 <= (uint64_t)(v8 + 2)) {
      goto LABEL_21;
    }
    unsigned int v12 = [v4 characterAtIndex:v8 + 2];
  }
  if (v12 != 42) {
    goto LABEL_21;
  }
  float v13 = v11 - 2;
  if ((uint64_t)v10 >= (uint64_t)(v11 - 2)) {
    goto LABEL_21;
  }
  do
  {
    unsigned int v14 = [v4 characterAtIndex:v10];
    BOOL v7 = v14 == 42 || v14 - 48 < 0xA;
    if (v13 == v10) {
      break;
    }
    ++v10;
  }
  while (v7);
LABEL_22:

  return v7;
}

uint64_t sub_10009248C(void *a1)
{
  id v1 = a1;
  CFStringRef v2 = [v1 provider];
  unsigned int v3 = [v2 isTelephonyProvider];

  if (v3)
  {
    id v4 = [v1 dialType];
    CFStringRef v5 = [v1 localSenderIdentityUUID];
    uint64_t v6 = sub_10009253C((uint64_t)v4, v5);
  }
  else
  {
    BOOL v7 = [v1 provider];
    int v8 = [v7 isSuperboxProvider];

    if (v8) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = sub_1000926F8();
    }
  }

  return v6;
}

uint64_t sub_10009253C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [(id)CUTWeakLinkClass() sharedInstance];
  id v5 = objc_alloc_init((Class)RadiosPreferences);
  unsigned int v6 = [v5 airplaneMode];

  if (!v6)
  {
    uint64_t v10 = 1;
    goto LABEL_21;
  }
  if (v3)
  {
    BOOL v7 = +[TUCallCapabilities senderIdentityCapabilitiesWithUUID:v3];
    int v8 = v7;
    if (a1 == 1) {
      unsigned __int8 v9 = [v7 canAttemptEmergencyCallsWithoutCellularConnection];
    }
    else {
      unsigned __int8 v9 = [v7 canAttemptTelephonyCallsWithoutCellularConnection];
    }
    unsigned __int8 v11 = v9;

    if (v11)
    {
LABEL_11:
      uint64_t v10 = 1;
      if ([v4 networkReachable]) {
        goto LABEL_21;
      }
      goto LABEL_12;
    }
  }
  else if (a1 == 1)
  {
    if (+[TUCallCapabilities canAttemptEmergencyCallsWithoutCellularConnection])goto LABEL_11; {
  }
    }
  else if (+[TUCallCapabilities canAttemptTelephonyCallsWithoutCellularConnection])
  {
    goto LABEL_11;
  }
  LODWORD(v10) = 0;
LABEL_12:
  unsigned int v12 = sub_1000D5130();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    if (v10) {
      CFStringRef v13 = @"NO";
    }
    else {
      CFStringRef v13 = @"YES";
    }
    if ([v4 networkReachable]) {
      CFStringRef v14 = @"NO";
    }
    else {
      CFStringRef v14 = @"YES";
    }
    int v16 = 138412546;
    CFStringRef v17 = v13;
    __int16 v18 = 2112;
    CFStringRef v19 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[WARN] Aborting telephony call, the device is in airplane mode and, cannot make telephony calls while in airplane mode (%@) or is not connected to an active Wi-Fi network (%@).", (uint8_t *)&v16, 0x16u);
  }

  uint64_t v10 = 0;
LABEL_21:

  return v10;
}

uint64_t sub_1000926F8()
{
  uint64_t v0 = [(id)CUTWeakLinkClass() sharedInstance];
  id v1 = [(id)CUTWeakLinkClass() sharedInstance];
  CFStringRef v2 = +[TUCallCenter sharedInstance];
  id v3 = [v2 frontmostCall];
  if ([v0 validNetworkReachable])
  {
    uint64_t v4 = 1;
  }
  else
  {
    if ([v2 hasCurrentAudioCalls]
      && ([v3 supportsSimultaneousVoiceAndData] & 1) == 0
      && (TUPreferredFaceTimeBundleIdentifier(),
          id v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = [v1 wifiAllowedForBundleId:v5],
          v5,
          v6))
    {
      BOOL v7 = sub_1000D5130();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Attempting FaceTime call because a telephone call is in progress and the carrier does not support simultaneous voice and data.", buf, 2u);
      }
      uint64_t v4 = 1;
    }
    else
    {
      BOOL v7 = sub_1000D5130();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)unsigned __int8 v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[WARN] Aborting FaceTime call because the network is unavailable.", v9, 2u);
      }
      uint64_t v4 = 0;
    }
  }
  return v4;
}

id sub_100092880()
{
  id v0 = objc_alloc_init((Class)RadiosPreferences);
  id v1 = [v0 airplaneMode];

  return v1;
}

BOOL sub_1000928BC()
{
  if (!byte_1003261C4) {
    byte_1003261C4 = notify_register_check("com.apple.InCallService.emergencydialerpresence", &dword_1003261C0) == 0;
  }
  uint64_t state64 = 0;
  if ((*(void *)&dword_1003261C0 & 0x100000000) == 0) {
    return 0;
  }
  notify_get_state(dword_1003261C0, &state64);
  return state64 != 0;
}

uint64_t sub_100092938(uint64_t state64)
{
  unsigned int v1 = state64;
  if (!byte_1003261C4) {
    byte_1003261C4 = notify_register_check("com.apple.InCallService.emergencydialerpresence", &dword_1003261C0) == 0;
  }
  uint64_t result = *(void *)&dword_1003261C0;
  if ((*(void *)&dword_1003261C0 & 0x100000000) != 0)
  {
    notify_set_state(dword_1003261C0, v1);
    return notify_post("com.apple.InCallService.emergencydialerpresence");
  }
  return result;
}

BOOL sub_1000929BC(void *a1)
{
  id v1 = a1;
  BOOL v2 = 1;
  if ([v1 compare:@"mav10" options:1])
  {
    BOOL v2 = 1;
    if ([v1 compare:@"mav13" options:1])
    {
      BOOL v2 = 1;
      if ([v1 compare:@"mav16" options:1]) {
        BOOL v2 = [v1 compare:@"mav17" options:1] == 0;
      }
    }
  }

  return v2;
}

BOOL sub_100092A58(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"*3001#12345#*"])
  {
    uint64_t v2 = CUTWeakLinkClass();
    BOOL v3 = v2 != 0;
    if (v2)
    {
      uint64_t v4 = (void *)v2;
      id v5 = MGGetStringAnswer();
      CFStringRef v6 = @"com.apple.FTMInternal";
      if (([v5 hasPrefix:@"ice"] & 1) == 0 && sub_1000929BC(v5)) {
        CFStringRef v6 = @"com.apple.fieldtest";
      }
      BOOL v7 = sub_1000D5130();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 138412546;
        id v11 = v1;
        __int16 v12 = 2112;
        CFStringRef v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ matches the field test code, launching the legacy field test app %@", (uint8_t *)&v10, 0x16u);
      }

      int v8 = [v4 sharedService];
      [v8 openApplication:v6 options:&__NSDictionary0__struct withResult:0];
    }
    else
    {
      id v5 = sub_1000D5130();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_1001EB398(v5);
      }
    }
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

void sub_100093570(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1003261C8;
  qword_1003261C8 = (uint64_t)v1;
}

void sub_1000936B8(uint64_t a1)
{
  +[TUCallCapabilities initializeCachedValues];
  id v2 = objc_alloc_init((Class)VMVoicemailManager);
  [*(id *)(a1 + 32) setAccountManager:v2];

  id v3 = objc_alloc_init((Class)TUCallProviderManager);
  [*(id *)(a1 + 32) setCallProviderManager:v3];
  uint64_t v4 = +[CNContactStore contactStore];
  [*(id *)(a1 + 32) setContactStore:v4];

  id v5 = +[CNContactStore suggestedContactStore];
  [*(id *)(a1 + 32) setSuggestedContactStore:v5];

  id v6 = objc_alloc_init((Class)TUCallDirectoryMetadataCacheDataProvider);
  v15[0] = v6;
  id v7 = objc_alloc_init((Class)TUMapsMetadataCacheDataProvider);
  v15[1] = v7;
  id v8 = objc_alloc_init((Class)TUSuggestionsMetadataCacheDataProvider);
  v15[2] = v8;
  id v9 = objc_alloc_init((Class)TUGeoLocationMetadataCacheDataProvider);
  v15[3] = v9;
  int v10 = +[NSArray arrayWithObjects:v15 count:4];

  id v11 = [objc_alloc((Class)TUMetadataCache) initWithDataProviders:v10];
  [*(id *)(a1 + 32) setMetadataCache:v11];

  if (+[PHDevice isGeminiCapable])
  {
    __int16 v12 = [v3 telephonyProvider];
    CFStringRef v13 = [v12 identifier];
    id v14 = [v3 providerWithIdentifier:v13];
  }
  [*(id *)(a1 + 32) setInitializationBlockQueued:0];
}

void sub_100093AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100093AF0(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
  id v2 = *(id *)(*(void *)(a1 + 32) + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));

  return v2;
}

uint64_t sub_100093B4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100093B5C(uint64_t a1)
{
}

void sub_100093B64(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100093EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100093F14(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
  id v2 = *(id *)(*(void *)(a1 + 32) + 24);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));

  return v2;
}

void sub_100093F70(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000941E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000941F8(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
  id v2 = *(id *)(*(void *)(a1 + 32) + 40);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));

  return v2;
}

void sub_100094254(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000944B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000944D0(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
  id v2 = *(id *)(*(void *)(a1 + 32) + 32);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));

  return v2;
}

void sub_10009452C(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100094790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000947A8(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));
  id v2 = *(id *)(*(void *)(a1 + 32) + 56);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 12));

  return v2;
}

void sub_100094804(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100094EC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v12 = v3;
  id v5 = [v3 contactIdentifier];
  id v6 = [v4 objectForKey:v5];

  if (v6)
  {
    id v7 = [v6 contact];
    id v8 = [v12 handle];
    id v9 = +[PHSearchUtilities matchedPhoneNumberFor:v7 searchText:v8];
    [v6 setPreferredPhoneNumber:v9];

    [*(id *)(a1 + 40) addObject:v6];
    int v10 = *(void **)(a1 + 32);
    id v11 = [v12 contactIdentifier];
    [v10 removeObjectForKey:v11];
  }
}

void sub_100095AE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (*(unsigned char *)(*(void *)(a1 + 32) + 8))
  {
    id v8 = sub_1000D5130();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "This geocode was canceled", buf, 2u);
    }
  }
  else
  {
    if (v6)
    {
      id v9 = sub_1000D5130();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1001EB420((uint64_t)v7, v9);
      }
    }
    else
    {
      if ([v5 count])
      {
        CGRect v27 = [v5 objectAtIndex:0];
        int v10 = [v27 region];
        [v10 center];
        double v12 = v11;
        double v14 = v13;

        id v25 = [objc_alloc((Class)CLLocation) initWithLatitude:v12 longitude:v14];
        id v15 = [v27 region];
        [v15 radius];
        int v16 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");

        v29[0] = @"Address";
        unsigned int v26 = [*(id *)(a1 + 32) postalAddress];
        CFStringRef v17 = +[CNPostalAddressFormatter stringFromPostalAddress:v26 style:0];
        v30[0] = v17;
        v29[1] = @"Name";
        __int16 v18 = [*(id *)(a1 + 32) labeledValue];
        CFStringRef v19 = [v18 label];
        long long v20 = +[CNLabeledValue localizedStringForLabel:v19];
        v30[1] = v20;
        v30[2] = v25;
        v29[2] = @"CLLocation";
        v29[3] = @"EntityID";
        long long v21 = [*(id *)(a1 + 32) entityID];
        v29[4] = @"Radius";
        v30[3] = v21;
        void v30[4] = v16;
        uint64_t v22 = +[NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:5];
        uint64_t v23 = *(void *)(a1 + 32);
        float v24 = *(void **)(v23 + 56);
        *(void *)(v23 + 56) = v22;

        *(_DWORD *)(*(void *)(a1 + 32) + 16) = 2;
        ++*(_DWORD *)(*(void *)(a1 + 32) + 12);
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

        goto LABEL_10;
      }
      id v9 = sub_1000D5130();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1001EB3DC(v9);
      }
    }

    *(_DWORD *)(*(void *)(a1 + 32) + 16) = 1;
    ++*(_DWORD *)(*(void *)(a1 + 32) + 12);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_10:
}

void sub_1000966E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = +[_PHMeCardGeocoderPreferences sharedPreferences];
    unsigned int v4 = [v3 hasValidNetworkPreferences];

    id v5 = sub_1000D5130();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "We have valid network preferences.  Rebuilding address array now.", buf, 2u);
      }

      id v7 = *(NSObject **)(*(void *)(a1 + 32) + 16);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000968C8;
      block[3] = &unk_1002CD518;
      id v15 = WeakRetained;
      dispatch_async(v7, block);
      id v8 = v15;
    }
    else
    {
      if (v6)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "We do not have valid network preferences.  Waiting until we have some or 2 minutes, whichever comes first.", buf, 2u);
      }

      id v9 = +[NSNotificationCenter defaultCenter];
      [v9 addObserver:WeakRetained selector:"_networkPreferencesLoaded" name:@"com.apple.MobilePhone.PHMeCardGeocoder.PreferencesChanged" object:0];

      id v10 = [objc_alloc((Class)PCPersistentTimer) initWithTimeInterval:@"com.apple.MobilePHone.PHMeCardGeocoder" serviceIdentifier:WeakRetained target:"_networkPreferencesLoaded" selector:0 userInfo:120.0];
      uint64_t v11 = *(void *)(a1 + 32);
      double v12 = *(void **)(v11 + 32);
      *(void *)(v11 + 32) = v10;

      double v13 = *(void **)(*(void *)(a1 + 32) + 32);
      id v8 = +[NSRunLoop mainRunLoop];
      [v13 scheduleInRunLoop:v8];
    }
  }
}

id sub_1000968C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _rebuildAddressArray];
}

id sub_100096944(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = +[_PHMeCardGeocoderPreferences sharedPreferences];
    v8[0] = 67109120;
    v8[1] = [v3 hasValidNetworkPreferences];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Got network preferences loaded callback, has valid network preferences = %d", (uint8_t *)v8, 8u);
  }
  [*(id *)(*(void *)(a1 + 32) + 32) invalidate];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = 0;

  BOOL v6 = +[NSNotificationCenter defaultCenter];
  [v6 removeObserver:*(void *)(a1 + 32) name:@"com.apple.MobilePhone.PHMeCardGeocoder.PreferencesChanged" object:0];

  return [*(id *)(a1 + 32) _rebuildAddressArray];
}

void sub_100096B40(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v1 = *(id *)(*(void *)(a1 + 32) + 24);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) cancelGeocode:(void)v6];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

id sub_100096E88(uint64_t a1)
{
  return [*(id *)(a1 + 32) _doWork];
}

id sub_100096F50(uint64_t a1)
{
  return [*(id *)(a1 + 32) _scheduleNextGeocode];
}

void sub_1000972C0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  long long v6 = sub_1000D5130();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v7)
    {
      *(_DWORD *)buf = 138412290;
      id v13 = v5;
      long long v8 = "Geocode complete, success!  Address: %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, buf, 0xCu);
    }
  }
  else if (v7)
  {
    *(_DWORD *)buf = 138412290;
    id v13 = v5;
    long long v8 = "Geocode complete, unsuccessful.  Scheduling next geocode.  Address: %@";
    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(NSObject **)(v9 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100097408;
  block[3] = &unk_1002CD518;
  void block[4] = v9;
  dispatch_async(v10, block);
  [*(id *)(a1 + 32) scheduleNextGeocode];
}

id sub_100097408(uint64_t a1)
{
  return [*(id *)(a1 + 32) _saveGeoCache];
}

id sub_1000977E4(uint64_t a1)
{
  [*(id *)(a1 + 32) _unschedulePerformGeocodesWakeTaskIfEarlierThan:0];
  unsigned int v2 = [*(id *)(a1 + 32) _isNetworkAvailable];
  id v3 = sub_1000D5130();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "xpc_activity callback: Network available, doing some work...", buf, 2u);
    }

    return [*(id *)(a1 + 32) _doWork];
  }
  else
  {
    if (v4)
    {
      *(_WORD *)long long v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "xpc_activity callback: No network available now, scheduling next wake...", v6, 2u);
    }

    return [*(id *)(a1 + 32) _scheduleNextGeocode];
  }
}

id sub_100097F2C(uint64_t a1)
{
  unsigned int v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Time to rebuild everything from scratch!", v4, 2u);
  }

  [*(id *)(a1 + 32) _unscheduleLongTermRebuild];
  return [*(id *)(a1 + 32) _rebuildAddressArray];
}

void sub_100098928(uint64_t a1)
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2020000000;
  char v7 = 0;
  unsigned int v2 = *(void **)(*(void *)(a1 + 32) + 24);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100098A00;
  v3[3] = &unk_1002CF9D8;
  void v3[4] = &v4;
  [v2 enumerateObjectsUsingBlock:v3];
  if (*((unsigned char *)v5 + 24))
  {
    [*(id *)(a1 + 32) _saveGeoCache];
    [*(id *)(a1 + 32) _scheduleNextGeocode];
  }
  _Block_object_dispose(&v4, 8);
}

void sub_1000989E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100098A00(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 geocodeAfter];
  uint64_t v4 = +[NSDate date];
  [v3 timeIntervalSinceDate:v4];
  double v6 = v5;
  char v7 = +[_PHMeCardGeocoderPreferences sharedPreferences];
  [v7 activeUsagePeriodLength];
  double v9 = v8;

  if (v6 > v9)
  {
    [v10 recalculateGeocodeAfterDate];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  }
}

id sub_100098C28(uint64_t a1)
{
  return [*(id *)(a1 + 32) _rebuildAddressArray];
}

void sub_100098D2C(id a1)
{
  id v1 = objc_alloc_init(_PHMeCardGeocoderPreferences);
  unsigned int v2 = (void *)qword_1003261E0;
  qword_1003261E0 = (uint64_t)v1;
}

void sub_10009A420(id a1)
{
  unint64_t v1 = +[PHUIConfiguration screenSize];
  double v2 = dbl_100284F20[v1 == 1];
  if (v1 == 6) {
    double v2 = 43.2999992;
  }
  qword_1003261E8 = *(void *)&v2;
}

void sub_10009A4B0(id a1)
{
  unint64_t v1 = +[PHUIConfiguration screenSize];
  BOOL v2 = v1 == 6 || v1 == 9;
  double v3 = 18.0;
  if (v2) {
    double v3 = 15.0;
  }
  qword_1003261F8 = *(void *)&v3;
}

id sub_10009BE74(uint64_t a1)
{
  [*(id *)(a1 + 32) setTrackWidthProportion:*(double *)(a1 + 40)];
  [*(id *)(a1 + 32) setNeedsLayout];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

id sub_10009BEBC(uint64_t a1)
{
  [*(id *)(a1 + 32) setTrackWidthProportion:1.0];
  [*(id *)(a1 + 32) setNeedsLayout];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

id sub_10009BF04(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnimating:0];
  [*(id *)(a1 + 32) setCachedTrackMaskWidth:0.0];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 setNeedsLayout];
}

id sub_10009BF50(uint64_t a1)
{
  return [*(id *)(a1 + 32) showTrackLabel];
}

id sub_10009C0B0(uint64_t a1)
{
  [*(id *)(a1 + 32) setTrackWidthProportion:0.0];
  [*(id *)(a1 + 32) setNeedsLayout];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

id sub_10009C0F8(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnimating:0];
  [*(id *)(a1 + 32) setCachedTrackMaskWidth:0.0];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 setNeedsLayout];
}

id sub_10009D2D8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8 = CGRectGetHeight(*(CGRect *)&a1) * 0.5;
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  if (CGRectGetWidth(v12) >= 115.0)
  {
    UIRectInset();
    +[UIBezierPath _bezierPathWithPillRect:cornerRadius:](UIBezierPath, "_bezierPathWithPillRect:cornerRadius:");
  }
  else
  {
    +[UIBezierPath bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:](UIBezierPath, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", -1, a1, a2, a3, a4, v8, v8);
  double v9 = };

  return v9;
}

id sub_10009D97C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:0.0];
}

id sub_10009D994(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:1.0];
}

void sub_10009DB88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 1.0;
  }
  else {
    double v2 = 0.0;
  }
  [*(id *)(a1 + 32) setKnobPosition:v2];
  [*(id *)(a1 + 32) layoutIfNeeded];
  id v3 = [*(id *)(a1 + 32) delegate];
  if (objc_opt_respondsToSelector()) {
    [v3 actionSlider:*(void *)(a1 + 32) didUpdateSlideWithValue:v2];
  }
}

id sub_10009DC24(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnimating:0];
  [*(id *)(a1 + 32) setCachedTrackMaskWidth:0.0];
  double v2 = *(void **)(a1 + 32);

  return [v2 setNeedsLayout];
}

id sub_10009DC70(uint64_t a1)
{
  return [*(id *)(a1 + 32) showTrackLabel];
}

void sub_10009FE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009FE68(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10009FE78(uint64_t a1)
{
}

void sub_10009FE80(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)CUTWeakLinkClass();
  if ([v3 hasAnyData])
  {
    double v5 = [v4 sharedInstance];
    unsigned __int8 v6 = [v5 lostModeIsActive];

    if ((v6 & 1) == 0)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10009FF70;
      block[3] = &unk_1002CFA80;
      void block[4] = *(void *)(a1 + 32);
      id v7 = v3;
      uint64_t v8 = *(void *)(a1 + 40);
      id v10 = v7;
      uint64_t v11 = v8;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

void sub_10009FF70(uint64_t a1)
{
  if (_os_feature_enabled_impl())
  {
    id v2 = objc_alloc((Class)CUTWeakLinkClass());
    id v3 = [*(id *)(a1 + 32) healthStore];
    uint64_t v4 = *(void *)(a1 + 40);
    double v5 = +[MIUIDisplayConfiguration lockScreenConfiguration];
    id v6 = [v2 initWithHealthStore:v3 medicalIDData:v4 displayConfiguration:v5];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 80);
    *(void *)(v7 + 80) = v6;
  }
  else
  {
    id v9 = objc_alloc_init((Class)CUTWeakLinkClass());
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setDelegate:*(void *)(a1 + 32)];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setShowsDismissButton:1];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setMedicalID:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setShowsShowWhenLockedState:0];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setShowsEmergencyAccessState:0];
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    id v3 = *(void **)(v12 + 80);
    *(void *)(v12 + 80) = v13;
  }

  id v14 = [*(id *)(a1 + 32) medicalIDButton];
  [v14 setHidden:0];
}

uint64_t sub_1000A1148()
{
  uint64_t v4 = 0;
  double v5 = &v4;
  uint64_t v6 = 0x2020000000;
  id v0 = (uint64_t (*)(const char *))off_100326208;
  uint64_t v7 = off_100326208;
  if (!off_100326208)
  {
    unint64_t v1 = (void *)sub_1000A49A8();
    _OWORD v5[3] = (uint64_t)dlsym(v1, "MSNMonitorEndException");
    off_100326208 = (_UNKNOWN *)v5[3];
    id v0 = (uint64_t (*)(const char *))v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    id v3 = (_Unwind_Exception *)sub_1001E99E4();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return v0("emergency");
}

void sub_1000A1D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

id sub_1000A1DB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dialerView];
  id v3 = [v2 callButton];
  [v3 setAlpha:1.0];

  uint64_t v4 = [*(id *)(a1 + 32) backButton];
  [v4 setAlpha:1.0];

  double v5 = [*(id *)(a1 + 32) medicalIDButton];
  [v5 setAlpha:1.0];

  uint64_t v6 = [*(id *)(a1 + 32) endButton];
  [v6 setAlpha:0.0];

  uint64_t v7 = [*(id *)(a1 + 32) stewieAlertButton];
  [v7 setAlpha:0.0];

  uint64_t v8 = [*(id *)(a1 + 32) stewieEndCallButton];
  [v8 setAlpha:0.0];

  id v9 = [*(id *)(a1 + 32) dialerView];
  uint64_t v10 = [v9 deleteButton];
  [v10 setAlpha:1.0];

  uint64_t v11 = *(void **)(a1 + 32);

  return [v11 refreshUseRTTButton];
}

id sub_1000A1ED0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) endButton];
  [v2 setEnabled:1];

  id v3 = [*(id *)(a1 + 32) backButton];
  [v3 setAlpha:0.0];

  uint64_t v4 = [*(id *)(a1 + 32) medicalIDButton];
  [v4 setAlpha:0.0];

  double v5 = [*(id *)(a1 + 32) dialerView];
  uint64_t v6 = [v5 callButton];
  [v6 setAlpha:0.0];

  uint64_t v7 = [*(id *)(a1 + 32) endButton];
  [v7 setAlpha:1.0];

  uint64_t v8 = [*(id *)(a1 + 32) stewieAlertButton];
  [v8 setAlpha:0.0];

  id v9 = [*(id *)(a1 + 32) stewieEndCallButton];
  [v9 setAlpha:0.0];

  uint64_t v10 = [*(id *)(a1 + 32) dialerView];
  uint64_t v11 = [v10 deleteButton];
  [v11 setAlpha:1.0];

  uint64_t v12 = *(void **)(a1 + 32);

  return [v12 refreshUseRTTButton];
}

id sub_1000A200C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dialerView];
  id v3 = [v2 callButton];
  [v3 setAlpha:1.0];

  uint64_t v4 = [*(id *)(a1 + 32) backButton];
  [v4 setAlpha:1.0];

  double v5 = [*(id *)(a1 + 32) medicalIDButton];
  [v5 setAlpha:1.0];

  uint64_t v6 = [*(id *)(a1 + 32) endButton];
  [v6 setAlpha:0.0];

  uint64_t v7 = [*(id *)(a1 + 32) stewieAlertButton];
  [v7 setAlpha:0.0];

  uint64_t v8 = [*(id *)(a1 + 32) stewieEndCallButton];
  [v8 setAlpha:0.0];

  id v9 = [*(id *)(a1 + 32) dialerView];
  uint64_t v10 = [v9 deleteButton];
  [v10 setAlpha:1.0];

  uint64_t v11 = *(void **)(a1 + 32);

  return [v11 refreshUseRTTButton];
}

id sub_1000A212C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dialerView];
  id v3 = [v2 callButton];
  [v3 setAlpha:0.0];

  uint64_t v4 = [*(id *)(a1 + 32) stewieAlertButton];
  [v4 setAlpha:1.0];

  double v5 = [*(id *)(a1 + 32) stewieEndCallButton];
  [v5 setEnabled:1];

  uint64_t v6 = [*(id *)(a1 + 32) stewieEndCallButton];
  [v6 setAlpha:1.0];

  uint64_t v7 = [*(id *)(a1 + 32) medicalIDButton];
  [v7 setAlpha:1.0];

  uint64_t v8 = [*(id *)(a1 + 32) endButton];
  [v8 setAlpha:0.0];

  id v9 = [*(id *)(a1 + 32) dialerView];
  uint64_t v10 = [v9 deleteButton];
  [v10 setAlpha:0.0];

  uint64_t v11 = *(void **)(a1 + 32);

  return [v11 refreshUseRTTButton];
}

id *sub_1000A35F0(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    id v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Initiating emergency call using a Wi-Fi network.", (uint8_t *)v4, 2u);
    }

    return (id *)[v2[4] dialEmergencyCallForDialRequest:v2[5]];
  }
  return result;
}

void sub_1000A3CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_1000A3CF8(void *a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) < 2)
  {
    id v3 = (void *)a1[4];
    uint64_t v4 = 2;
    goto LABEL_7;
  }
  if (a2 == 3)
  {
    id v3 = (void *)a1[4];
    uint64_t v4 = 3;
    goto LABEL_7;
  }
  if (!a2)
  {
    id v3 = (void *)a1[4];
    uint64_t v4 = 1;
LABEL_7:
    [v3 setTtyType:v4];
    goto LABEL_9;
  }
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 0;
LABEL_9:
  double v5 = a1[5];

  return dispatch_semaphore_signal(v5);
}

void sub_1000A3D78(uint64_t a1, int a2)
{
  if (a2)
  {
    id v5 = +[TUCallCenter sharedInstance];
    id v3 = [v5 dialWithRequest:*(void *)(a1 + 32)];
  }
  else
  {
    uint64_t v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "dialEmergencyCall: Digits to dial are MMI/USSD, but user did not successfully unlock", buf, 2u);
    }
  }
}

void *sub_1000A4958(uint64_t a1)
{
  id v2 = (void *)sub_1000A49A8();
  uint64_t result = dlsym(v2, "MSNMonitorEndException");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_100326208 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000A49A8()
{
  v3[0] = 0;
  if (!qword_100326210)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_1000A4AA8;
    void v3[4] = &unk_1002CD5C8;
    void v3[5] = v3;
    long long v4 = off_1002CFAF0;
    uint64_t v5 = 0;
    qword_100326210 = _sl_dlopen();
  }
  uint64_t v0 = qword_100326210;
  unint64_t v1 = (void *)v3[0];
  if (!qword_100326210)
  {
    unint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_1000A4AA8()
{
  uint64_t result = _sl_dlopen();
  qword_100326210 = result;
  return result;
}

void *sub_1000A4B1C(uint64_t a1)
{
  id v2 = (void *)sub_1000A49A8();
  uint64_t result = dlsym(v2, "MSNMonitorBeginException");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_100326218 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000A5B10(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("MPCarPlayPhoneCallContainer", 0);
  id v2 = (void *)qword_100326228;
  qword_100326228 = (uint64_t)v1;
}

void sub_1000A5CE4(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_1000A5D64;
  v1[3] = &unk_1002CD918;
  v1[4] = *(void *)(a1 + 32);
  char v2 = *(unsigned char *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

void sub_1000A5D64(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) dataSource];
  id v3 = [v2 numberOfViewCellsForPhoneCallContainer:*(void *)(a1 + 32)];

  if ([*(id *)(a1 + 32) shouldReloadCellsWithNumberOfCells:v3])
  {
    long long v4 = [*(id *)(a1 + 32) visibleCells];
    id v5 = [v4 count];

    if (v3 != v5) {
      [*(id *)(a1 + 32) updateNumberOfCellsWithNewValue:v3 animated:*(unsigned __int8 *)(a1 + 40)];
    }
    uint64_t v6 = *(unsigned char **)(a1 + 32);
    if (!v6[8])
    {
      uint64_t v7 = [v6 visibleCells];
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      _DWORD v8[2] = sub_1000A5E78;
      v8[3] = &unk_1002CFB30;
      v8[4] = *(void *)(a1 + 32);
      char v9 = *(unsigned char *)(a1 + 40);
      [v7 enumerateObjectsUsingBlock:v8];
    }
  }
}

id sub_1000A5E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) updateCell:a2 atIndex:a3 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000A5F40(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) dataSource];
  id v3 = [v2 phoneCallContainer:*(void *)(a1 + 32) titleForViewCellAtIndex:*(void *)(a1 + 48)];

  long long v4 = [*(id *)(a1 + 32) dataSource];
  id v5 = [v4 phoneCallContainer:*(void *)(a1 + 32) subtitleForViewCellAtIndex:*(void *)(a1 + 48)];

  uint64_t v6 = [*(id *)(a1 + 32) dataSource];
  uint64_t v7 = [v6 phoneCallContainer:*(void *)(a1 + 32) subtitleColorForViewCellAtIndex:*(void *)(a1 + 48)];

  uint64_t v8 = [*(id *)(a1 + 32) dataSource];
  char v9 = [v8 phoneCallContainer:*(void *)(a1 + 32) localizedSenderIdentityForViewCellAtIndex:*(void *)(a1 + 48)];

  uint64_t v10 = [*(id *)(a1 + 32) visibleCells];
  if ([v10 count] == (id)1)
  {
    uint64_t v11 = [*(id *)(a1 + 32) dataSource];
    uint64_t v12 = [v11 phoneCallContainer:*(void *)(a1 + 32) avatarViewControllerForViewCellAtIndex:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v12 = 0;
  }

  id v13 = [*(id *)(a1 + 32) dataSource];
  id v14 = [v13 phoneCallContainer:*(void *)(a1 + 32) cellIsDimmedAtIndex:*(void *)(a1 + 48)];

  if (v3 || v5 || v9)
  {
    [*(id *)(a1 + 40) setDimmed:v14 animated:1];
    [*(id *)(a1 + 40) setTitle:v3 subtitle:v5 subtitleColor:v7 localizedSenderIdentityTitle:v9 animated:*(unsigned __int8 *)(a1 + 56)];
  }
  id v15 = [*(id *)(a1 + 40) avatarViewController];
  int v16 = [v15 contacts];
  CFStringRef v17 = [v12 contacts];
  unsigned __int8 v18 = [v16 isEqualToArray:v17];

  if ((v18 & 1) == 0)
  {
    CFStringRef v19 = sub_1000D5130();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      long long v20 = [v12 contacts];
      int v21 = 138412290;
      uint64_t v22 = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Updating CarPlay InCallService AvatarViewController with contacts: %@", (uint8_t *)&v21, 0xCu);
    }
    [*(id *)(a1 + 40) setAvatarViewController:v12];
  }
}

id sub_1000A63CC(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsLayout];
  char v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

void sub_1000A6668(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 9) = 0;
  char v2 = [*(id *)(a1 + 32) visibleCells];
  id v3 = (char *)[v2 count] - 1;

  long long v4 = [*(id *)(a1 + 32) visibleCells];
  [v4 subarrayWithRange:1, v3];
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  [v6 makeObjectsPerformSelector:"removeFromSuperview"];
  id v5 = [*(id *)(a1 + 32) visibleCells];
  [v5 removeObjectsInArray:v6];
}

void sub_1000A68C0(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A6974;
  block[3] = &unk_1002CD518;
  id v6 = a2;
  id v3 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  long long v4 = [*(id *)(a1 + 32) visibleCells];
  [v4 removeObject:v3];
}

id sub_1000A6974(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_1000A75C4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [PHCarPlayNumberPadButton alloc];
  signed int v7 = [v5 intValue];

  id v8 = [(PHCarPlayNumberPadButton *)v6 initForCharacter:v7 style:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) insertObject:v8 atIndex:a3];
}

BOOL sub_1000A7CC4(id a1, TUCall *a2)
{
  char v2 = a2;
  if ([(TUCall *)v2 isHostedOnCurrentDevice]) {
    unsigned __int8 v3 = 1;
  }
  else {
    unsigned __int8 v3 = [(TUCall *)v2 isEndpointOnCurrentDevice];
  }

  return v3;
}

BOOL sub_1000A7D0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16))()) {
    BOOL v4 = [v3 status] == 1;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

BOOL sub_1000A7D6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16))()) {
    BOOL v4 = [v3 status] == 2;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

BOOL sub_1000A7DCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16))()) {
    BOOL v4 = [v3 status] == 3;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

BOOL sub_1000A7E2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16))()) {
    BOOL v4 = [v3 status] == 4;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

void sub_1000A7EE0(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  char v2 = (void *)qword_100326230;
  qword_100326230 = (uint64_t)v1;
}

void sub_1000A954C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1000A95A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained && ([WeakRetained pauseTimer] & 1) == 0)
  {
    if (--*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      BOOL v4 = [v3 countdownViewModel];
      if ([v4 playsSound])
      {
      }
      else
      {
        id v8 = [v3 countdownViewModel];
        unsigned int v9 = [v8 playsHaptics];

        if (!v9)
        {
LABEL_15:
          id v15 = [v3 countdownLabel];
          v17[0] = _NSConcreteStackBlock;
          v17[1] = 3221225472;
          v17[2] = sub_1000A9818;
          v17[3] = &unk_1002CFC98;
          uint64_t v16 = *(void *)(a1 + 32);
          v17[4] = v3;
          v17[5] = v16;
          +[UIView transitionWithView:v15 duration:5242880 options:v17 animations:0 completion:0.200000003];

          goto LABEL_16;
        }
      }
      uint64_t v10 = [v3 countdownViewModel];
      if ([v10 playsSound])
      {
        unint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
        unint64_t v12 = *(void *)(a1 + 48);

        id v13 = [v3 alertController];
        [v13 playAlertWithAudio:v11 <= v12 alertTopic:TLAlertTopicSOSCountdownTick];

        if (v11 <= v12) {
          [v3 toggleFlash];
        }
      }
      else
      {

        id v14 = [v3 alertController];
        [v14 playAlertWithAudio:0 alertTopic:TLAlertTopicSOSCountdownTick];
      }
      goto LABEL_15;
    }
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Countdown has finished! Calling completion.", buf, 2u);
    }

    [v3 stop];
    id v6 = [v3 completion];

    if (v6)
    {
      signed int v7 = [v3 completion];
      v7[2](v7, 0);
    }
  }
LABEL_16:
}

void sub_1000A9818(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) countdownViewModel];
  char v2 = [v4 countdownString:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  id v3 = [*(id *)(a1 + 32) countdownLabel];
  [v3 setText:v2];
}

void sub_1000AA488(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) avCaptureDevice];
  unsigned __int8 v3 = [v2 hasTorch];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) avCaptureDevice];
    [v4 lockForConfiguration:0];

    id v5 = [*(id *)(a1 + 32) avCaptureDevice];
    [v5 setTorchMode:1];

    id v6 = [*(id *)(a1 + 32) avCaptureDevice];
    [v6 unlockForConfiguration];

    dispatch_time_t v7 = dispatch_time(0, 500000000);
    id v8 = [*(id *)(a1 + 32) avCaptureDispatchQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000AA5F4;
    block[3] = &unk_1002CD518;
    void block[4] = *(void *)(a1 + 32);
    dispatch_after(v7, v8, block);
  }
  else
  {
    unsigned int v9 = sub_1000D5130();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }
  }
}

id sub_1000AA5F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) stopFlash];
}

void sub_1000AA69C(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) avCaptureDevice];
  unsigned __int8 v3 = [v2 hasTorch];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) avCaptureDevice];
    [v4 lockForConfiguration:0];

    id v5 = [*(id *)(a1 + 32) avCaptureDevice];
    id v6 = [v5 torchMode];

    if (v6 == (id)1)
    {
      dispatch_time_t v7 = [*(id *)(a1 + 32) avCaptureDevice];
      [v7 setTorchMode:0];
    }
    id v9 = [*(id *)(a1 + 32) avCaptureDevice];
    [v9 unlockForConfiguration];
  }
  else
  {
    id v8 = sub_1000D5130();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PHSlidingView,torch not available", buf, 2u);
    }
  }
}

id sub_1000AB770(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) soundPlayer];
  [v4 attemptToPlayKey:a2];

  id v5 = *(void **)(a1 + 32);

  return _[v5 handleNumberPadCharacter:a2];
}

void sub_1000ABC68(id *a1)
{
  char v2 = a1 + 5;
  objc_copyWeak(&to, a1 + 5);
  id v3 = objc_loadWeakRetained(&to);

  if (v3)
  {
    id v4 = [a1[6] sharedUtilityProvider];
    id v5 = [a1[4] UUIDString];
    id v6 = [v4 conversationForCallUID:v5];

    if (v6)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000ABE00;
      block[3] = &unk_1002CFD18;
      objc_copyWeak(&v10, v2);
      id v6 = v6;
      id v8 = v6;
      id v9 = a1[4];
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      objc_destroyWeak(&v10);
    }
  }
  else
  {
    id v6 = sub_1000D5130();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Stopped fetchRTTConversationForCallUUID because MPRTTTranscriptionMessage was deallocated before starting", buf, 2u);
    }
  }

  objc_destroyWeak(&to);
}

void sub_1000ABDE8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1000ABE00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setConversation:*(void *)(a1 + 32)];
    id v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully finished fetchRTTConversationForCallUUID", v8, 2u);
    }

    id v5 = +[NSNotificationCenter defaultCenter];
    CFStringRef v9 = @"MPVoicemailRTTTranscriptDidLoadCallIDKey";
    id v6 = [*(id *)(a1 + 40) UUIDString];
    id v10 = v6;
    dispatch_time_t v7 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
    [v5 postNotificationName:@"MPVoicemailRTTTranscriptDidLoadNotification" object:0 userInfo:v7];
  }
  else
  {
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Stopped fetchRTTConversationForCallUUID because MPRTTTranscriptionMessage was deallocated when trying to write conversation", v8, 2u);
    }
  }
}

void sub_1000AC288(uint64_t a1)
{
  if (qword_100326248 != -1) {
    dispatch_once(&qword_100326248, &stru_1002CFD60);
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = a1 + 32;
  char v4 = off_100326240(*(unsigned int *)(v2 + 8), *(unsigned int *)(v2 + 12), v3);
  id v5 = sub_1000D5130();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
  if (v4)
  {
    if (v6) {
      sub_1001EB78C((uint64_t *)v2, v5);
    }
  }
  else if (v6)
  {
    sub_1001EB808((uint64_t *)v2, v5);
  }
}

void sub_1000AC334(id a1)
{
  off_100326240 = (uint64_t (*)(void, void, void))CUTWeakLinkSymbol();
}

void sub_1000AD79C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v20 = 138412290;
    uint64_t v21 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Removing ended call from our call objects: %@", (uint8_t *)&v20, 0xCu);
  }

  char v4 = [*(id *)(a1 + 40) participantsView];
  uint64_t v5 = [v4 superview];
  if (!v5) {
    goto LABEL_9;
  }
  BOOL v6 = (void *)v5;
  dispatch_time_t v7 = [*(id *)(a1 + 40) callGroups];
  unsigned int v8 = [v7 containsObject:*(void *)(a1 + 32)];

  if (v8)
  {
    CFStringRef v9 = [*(id *)(a1 + 40) callGroups];
    [v9 removeObject:*(void *)(a1 + 32)];

    id v10 = [*(id *)(a1 + 40) delegate];
    char v11 = objc_opt_respondsToSelector();

    if (v11)
    {
      unint64_t v12 = [*(id *)(a1 + 40) delegate];
      id v13 = *(void **)(a1 + 40);
      id v14 = [v13 callGroups];
      [v12 callParticipantsViewController:v13 willShowMultipleLabel:(unint64_t)[v14 count] > 1];
    }
    id v15 = [*(id *)(a1 + 40) participantsView];
    [v15 updateParticipantsAnimated:1];

    uint64_t v16 = [*(id *)(a1 + 40) delegate];
    char v17 = objc_opt_respondsToSelector();

    if (v17)
    {
      char v4 = [*(id *)(a1 + 40) delegate];
      unsigned __int8 v18 = *(void **)(a1 + 40);
      CFStringRef v19 = [v18 callGroups];
      objc_msgSend(v4, "callParticipantsViewController:didShowMultipleLabel:", v18, (unint64_t)objc_msgSend(v19, "count") > 1);

LABEL_9:
    }
  }
}

BOOL sub_1000AD9B0(id a1, TUCallGroup *a2)
{
  uint64_t v2 = [(TUCallGroup *)a2 calls];
  uint64_t v3 = [v2 firstObject];

  if (v3) {
    unsigned int v4 = [v3 wasDeclined] ^ 1;
  }
  else {
    LOBYTE(v4) = 0;
  }

  return v4;
}

id sub_1000B0B34(unint64_t a1)
{
  if (a1 <= 6)
  {
    if (((1 << a1) & 0x1E) != 0)
    {
      uint64_t v1 = +[NSSet set];
    }
    else
    {
      v4[0] = STBackgroundActivityIdentifierCallRinging;
      v4[1] = STBackgroundActivityIdentifierInCall;
      v4[2] = STBackgroundActivityIdentifierVideoConferenceRinging;
      v4[3] = STBackgroundActivityIdentifierInVideoConference;
      void v4[4] = STBackgroundActivityIdentifierSharePlay;
      void v4[5] = STBackgroundActivityIdentifierSharePlayScreenSharing;
      v4[6] = STBackgroundActivityIdentifierIdlePushToTalkCall;
      v4[7] = STBackgroundActivityIdentifierActivePushToTalkCall;
      __int16 v4[8] = STBackgroundActivityIdentifierRecording;
      v4[9] = STBackgroundActivityIdentifierCallHandoff;
      v4[10] = STBackgroundActivityIdentifierVideoConferenceHandoff;
      v4[11] = STBackgroundActivityIdentifierSharePlayInactive;
      v4[12] = STBackgroundActivityIdentifierCallScreening;
      v4[13] = @"com.apple.systemstatus.background-activity.CallRecording";
      uint64_t v2 = +[NSArray arrayWithObjects:v4 count:14];
      uint64_t v1 = +[NSSet setWithArray:v2];
    }
  }

  return v1;
}

void sub_1000B2ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B2EF4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v10 = v8;
  TUDispatchMainIfNecessary();

  objc_destroyWeak(&v11);
}

void sub_1000B2FD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000B2FE4(uint64_t a1)
{
  uint64_t v1 = a1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_43;
  }
  double x = CGRectZero.origin.x;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  id v8 = [WeakRetained multiwayViewController];

  v49 = v3;
  if (!v8)
  {
    uint64_t v15 = 0;
    goto LABEL_26;
  }
  id v9 = +[UIApplication sharedApplication];
  id v10 = [v9 delegate];
  id v11 = [v10 screenSharingRootViewController];

  unint64_t v12 = [v11 pipController];
  id v13 = [v12 pipState];

  id v14 = [v11 callDisplayStyleManager];
  uint64_t v15 = [v14 callDisplayStyle] == (id)2;

  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  obj = [*(id *)(v1 + 32) elements];
  id v16 = [obj countByEnumeratingWithState:&v55 objects:v62 count:16];
  if (!v16) {
    goto LABEL_25;
  }
  id v17 = v16;
  uint64_t v44 = v11;
  uint64_t v45 = v1;
  unsigned int v46 = v15;
  unint64_t v48 = (unint64_t)v13 - 3;
  uint64_t v18 = *(void *)v56;
  uint64_t v19 = TUBundleIdentifierSpringBoardAppSwitcher;
  uint64_t v20 = TUBundleIdentifierSpringBoardHomeScreen;
  uint64_t v47 = TUBundleIdentifierInCallServiceApplication;
  while (2)
  {
    for (uint64_t i = 0; i != v17; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v56 != v18) {
        objc_enumerationMutation(obj);
      }
      uint64_t v22 = *(void **)(*((void *)&v55 + 1) + 8 * i);
      uint64_t v23 = [v22 identifier:v44 v45];
      if ([v23 isEqualToString:v19])
      {
      }
      else
      {
        float v24 = [v22 identifier];
        unsigned int v25 = [v24 isEqualToString:v20];

        uint64_t v3 = v49;
        if (!v25) {
          goto LABEL_12;
        }
      }
      unsigned int v26 = [v3 multiwayViewController];
      [v26 prepareForAppSwitcher];

LABEL_12:
      if ([v22 conformsToProtocol:&OBJC_PROTOCOL___SBSDisplayLayoutElement])
      {
        id v27 = v22;
        CGRect v28 = v27;
        if (v48 > 0xFFFFFFFFFFFFFFFDLL)
        {
          unsigned int v30 = 0;
        }
        else
        {
          CGRect v29 = [v27 bundleIdentifier];
          unsigned int v30 = [v29 isEqualToString:v47];
        }
        if ([v28 layoutRole] == (id)5 && (objc_msgSend(v28, "sb_isStashedPIP") | v30) != 1)
        {
          [v28 frame];
          CGRect v64 = CGRectIntegral(v63);
          double x = v64.origin.x;
          double y = v64.origin.y;
          double width = v64.size.width;
          double height = v64.size.height;

          goto LABEL_24;
        }
      }
    }
    id v17 = [obj countByEnumeratingWithState:&v55 objects:v62 count:16];
    if (v17) {
      continue;
    }
    break;
  }
LABEL_24:
  uint64_t v15 = v46;
  id v11 = v44;
  uint64_t v1 = v45;
LABEL_25:

  [v3 handleFrontBoardInterfaceOrientationChange:[v1 interfaceOrientation]];
LABEL_26:
  id v31 = [*(id *)(v1 + 32) displayBacklightLevel];
  if (*(void *)(v1 + 32) && (uint64_t)v31 <= 0)
  {
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    id v32 = [v3 callCenter];
    id v33 = [v32 currentAudioAndVideoCalls];

    id v34 = [v33 countByEnumeratingWithState:&v51 objects:v61 count:16];
    if (v34)
    {
      id v35 = v34;
      uint64_t v36 = *(void *)v52;
      do
      {
        for (j = 0; j != v35; j = (char *)j + 1)
        {
          if (*(void *)v52 != v36) {
            objc_enumerationMutation(v33);
          }
          id v38 = *(void **)(*((void *)&v51 + 1) + 8 * (void)j);
          if ([v38 isSharingScreen])
          {
            uint64_t v39 = sub_1000D5130();
            if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v60 = v38;
              _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Device display is off stopping sharing screen for call %@", buf, 0xCu);
            }

            [v38 setSharingScreen:0];
          }
        }
        id v35 = [v33 countByEnumeratingWithState:&v51 objects:v61 count:16];
      }
      while (v35);
    }

    uint64_t v3 = v49;
  }
  uint64_t v40 = sub_1000D5130();
  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
  {
    v65.origin.double x = x;
    v65.origin.double y = y;
    v65.size.double width = width;
    v65.size.double height = height;
    uint64_t v41 = NSStringFromCGRect(v65);
    *(_DWORD *)buf = 138412290;
    v60 = v41;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "mediaPipFrameInWindowScene changed to %@", buf, 0xCu);
  }
  uint64_t v42 = [v3 multiwayViewController];
  [v42 setMediaPipFrameInWindowScene:x, y, width, height];

  uint64_t v43 = [v3 multiwayViewController];
  [v43 setIsScreenSharingFullScreen:v15];

LABEL_43:
}

void sub_1000B35AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = [*(id *)(a1 + 32) multiwayViewController];
  [v3 setFrontBoardInterfaceOrientation:v2];

  unsigned int v4 = [*(id *)(a1 + 32) multiwayViewController];
  LODWORD(v3) = [v4 wantsPIPRotationForLocalPreview];

  if (v3) {
    [*(id *)(a1 + 32) rotatePIPForInterfaceOrientation:*(void *)(a1 + 48)];
  }
  uint64_t v5 = +[PHPIPController defaultPIPController];
  [v5 updatePIPSize];

  id v6 = +[PHPIPController defaultPIPController];
  [v6 updatePIPFrame];
}

void sub_1000B37C4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) multiwayViewController];
  [v1 pipDidRotate];
}

void sub_1000B437C(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissInCallPresentationWithDismissalBlock:&stru_1002CFE88];
  id v4 = +[ICSApplicationDelegate configurationForCall:*(void *)(a1 + 40) preferredPresentationMode:0];
  uint64_t v2 = +[UIApplication sharedApplication];
  uint64_t v3 = [v2 delegate];
  [v3 performPresentationWithConfiguration:v4 forSceneType:0];
}

void sub_1000B4418(id a1)
{
  id v2 = +[UIApplication sharedApplication];
  id v1 = [v2 delegate];
  [v1 dismissInCallSceneSession];
}

BOOL sub_1000B82C4(id a1, TUCall *a2)
{
  id v2 = a2;
  if ([(TUCall *)v2 isActive])
  {
    uint64_t v3 = [(TUCall *)v2 provider];
    unsigned int v4 = [v3 supportsDynamicSystemUI] ^ 1;
  }
  else
  {
    LOBYTE(v4) = 0;
  }

  return v4;
}

BOOL sub_1000B8324(id a1, TUCall *a2)
{
  id v2 = a2;
  if ([(TUCall *)v2 status] == 4
    && [(TUCall *)v2 shouldSuppressInCallUI])
  {
    unsigned int v3 = [(TUCall *)v2 isVideo] ^ 1;
  }
  else
  {
    LOBYTE(v3) = 0;
  }

  return v3;
}

BOOL sub_1000B837C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [*(id *)(a1 + 32) activeConversationForCall:v3];
  uint64_t v5 = v4;
  if (!v4) {
    goto LABEL_6;
  }
  id v6 = [v4 mergedRemoteMembers];
  if ([v6 count] == (id)1)
  {
    id v7 = [v5 mergedActiveRemoteParticipants];
    BOOL v8 = (unint64_t)[v7 count] > 1;
  }
  else
  {
    BOOL v8 = 1;
  }

  if ([v3 status] != 4) {
    BOOL v9 = [v3 status] != 5 && v8;
  }
  else {
LABEL_6:
  }
    BOOL v9 = 0;

  return v9;
}

BOOL sub_1000B8448(id a1, TUCall *a2)
{
  id v2 = a2;
  if ([(TUCall *)v2 isVideo]) {
    BOOL v3 = [(TUCall *)v2 status] == 3;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

BOOL sub_1000B8494(id a1, TUCall *a2)
{
  id v2 = a2;
  if ([(TUCall *)v2 isVideo]) {
    BOOL v3 = [(TUCall *)v2 status] == 4;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

BOOL sub_1000B84E0(id a1, TUCall *a2)
{
  id v2 = a2;
  BOOL v3 = ([(TUCall *)v2 isVideo] & 1) == 0 && [(TUCall *)v2 status] == 1;

  return v3;
}

BOOL sub_1000B852C(id a1, TUCall *a2)
{
  id v2 = a2;
  if ([(TUCall *)v2 isVideo]) {
    BOOL v3 = [(TUCall *)v2 status] == 1;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

BOOL sub_1000B8578(id a1, TUCall *a2)
{
  id v2 = a2;
  BOOL v3 = ([(TUCall *)v2 isVideo] & 1) == 0 && [(TUCall *)v2 status] == 3;

  return v3;
}

BOOL sub_1000B85C4(id a1, TUCall *a2)
{
  return [(TUCall *)a2 isEmergency];
}

id sub_1000B8B8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) showHideMiniWindowViewIfNeededAnimated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1000B8D10(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateShouldBecomeVisibleWhenWakingDisplay];
}

id sub_1000B8DB0(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "InCallRootViewController dismissed mini window", v4, 2u);
  }

  [*(id *)(a1 + 32) updateShouldBecomeVisibleWhenWakingDisplay];
  return [*(id *)(a1 + 32) setCoverViewController:0];
}

void sub_1000B955C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_1000B95D0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) contactIdentifiers];
  id v7 = [v2 firstObject];

  BOOL v3 = +[NSString stringWithFormat:@"mobilephone-contacts://show?id=%@", v7];
  id v4 = [objc_alloc((Class)NSURL) initWithString:v3];
  uint64_t v5 = +[LSApplicationWorkspace defaultWorkspace];
  [v5 openSensitiveURL:v4 withOptions:0];

  +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHFailureAlertShowingAssertionReason"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setFailureAlertController:0];
}

void sub_1000B96CC(uint64_t a1)
{
  uint64_t v2 = +[LSApplicationWorkspace defaultWorkspace];
  [v2 openApplicationWithBundleID:@"com.apple.facetime"];

  +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHFailureAlertShowingAssertionReason"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setFailureAlertController:0];
}

void sub_1000B9758(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSURLComponents);
  [v2 setScheme:@"itms-apps"];
  BOOL v3 = +[NSURLQueryItem queryItemWithName:@"bundleIdentifier" value:@"com.apple.facetime"];
  BOOL v8 = v3;
  id v4 = +[NSArray arrayWithObjects:&v8 count:1];
  [v2 setQueryItems:v4];

  uint64_t v5 = [v2 URL];
  id v6 = +[LSApplicationWorkspace defaultWorkspace];
  [v6 openURL:v5 withOptions:0];

  +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHFailureAlertShowingAssertionReason"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setFailureAlertController:0];
}

void sub_1000B989C(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Removing failure alert controller", v4, 2u);
  }

  +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHFailureAlertShowingAssertionReason"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setFailureAlertController:0];
}

void sub_1000B9938(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [v1 failureAlertController];
  [v1 presentViewController:v2 animated:1 completion:0];
}

void sub_1000B9A6C(id a1)
{
}

void sub_1000B9BC8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  BOOL v3 = [v2 window];

  id v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138412546;
    uint64_t v7 = v5;
    __int16 v8 = 2112;
    BOOL v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Completed transition to %@. Presented in window %@.", (uint8_t *)&v6, 0x16u);
  }
}

void sub_1000B9FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BA000(uint64_t result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    [*(id *)(result + 32) removeFromParentViewController];
    BOOL v3 = [*(id *)(v2 + 32) view];
    [v3 removeFromSuperview];

    id v4 = *(void **)(v2 + 40);
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 56));
    [v4 didMoveToParentViewController:WeakRetained];

    uint64_t result = *(void *)(v2 + 48);
    if (result)
    {
      int v6 = *(uint64_t (**)(void))(result + 16);
      return v6();
    }
  }
  return result;
}

void sub_1000BA890(id a1)
{
  id v1 = +[PHInCallUtilities sharedInstance];
  [v1 stopSuppressingInCallStatusBarForReason:@"PHSuppressInCallStatusBarForDialReason"];

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, TUCallCenterInCallServiceDidAppearNotification, 0, 0, 1u);
  BOOL v3 = sub_1000D5130();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "TUCallCenterInCallServiceDidAppearNotification: Posted in ", v4, 2u);
  }
}

void sub_1000BA940(id a1)
{
}

void sub_1000BAE20(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) inCallWindowScene];
  [v1 requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:0];
}

void sub_1000BB010(id a1)
{
  id v1 = +[UIApplication sharedApplication];
  uint64_t v2 = [v1 delegate];
  [v2 dismissInCallSceneSession];

  id v4 = +[UIApplication sharedApplication];
  BOOL v3 = [v4 delegate];
  [v3 dismissScreenSharingSceneSession];
}

void sub_1000BB0A0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _remoteViewControllerProxy];
  [v1 dismiss];
}

void sub_1000BB4E8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 80));
  _Unwind_Resume(a1);
}

void sub_1000BB51C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained prepareForDismissal];
  uint64_t v1 = +[UIApplication sharedApplication];
  uint64_t v2 = [v1 delegate];
  [v2 hideCarPlayUI];
}

void sub_1000BB590(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained prepareForDismissal];
  uint64_t v1 = +[UIApplication sharedApplication];
  uint64_t v2 = [v1 delegate];
  [v2 hideCarPlayUI];
}

void sub_1000BB9A4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setAlpha:1.0];
}

void sub_1000BBBC4(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporarilyAllowAllStatusBarPills:1];
  id v1 = +[PHInCallUtilities sharedInstance];
  [v1 setRequestedVCPresentationWithStatusBar:0 withReasonLog:@"Completed presentation of contacts with full screen people picker"];
}

id sub_1000BBF2C(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporarilyAllowAllStatusBarPills:1];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 setScreenTimeHostViewController:v3];
}

void sub_1000BBF6C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setAlpha:1.0];
}

id sub_1000BC270(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) screenTimeHostViewController];
  [v2 dismissAlert];

  [*(id *)(a1 + 32) setScreenTimeHostViewController:0];
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 setFilteredRequest:0];
}

uint64_t sub_1000BC2CC(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporarilyAllowAllStatusBarPills:0];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

void sub_1000BC314(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) screenTimeHostViewController];
  id v1 = [v2 view];
  [v1 setAlpha:0.0];
}

uint64_t sub_1000BC374(uint64_t result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    uint64_t v3 = [*(id *)(result + 32) screenTimeHostViewController];
    [v3 removeFromParentViewController];

    id v4 = [*(id *)(v2 + 32) screenTimeHostViewController];
    uint64_t v5 = [v4 view];
    [v5 removeFromSuperview];

    int v6 = *(uint64_t (**)(void))(*(void *)(v2 + 40) + 16);
    return v6();
  }
  return result;
}

uint64_t sub_1000BC9B8(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 48);
    int v7 = 67109120;
    int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismissed contactsVC animated %d (before updateDesiredSpringboardBehavior)", (uint8_t *)&v7, 8u);
  }

  [*(id *)(a1 + 32) setContactsViewController:0];
  [*(id *)(a1 + 32) updateDesiredSpringboardBehavior];
  id v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a1 + 48);
    int v7 = 67109120;
    int v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "dismissed contactsVC Animated %d (after updateDesiredSpringboardBehavior)", (uint8_t *)&v7, 8u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000BCAE0(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporarilyAllowAllStatusBarPills:0];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

uint64_t sub_1000BCC84(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismissed contact details (before updateDesiredSpringboardBehavior)", buf, 2u);
  }

  [*(id *)(a1 + 32) updateDesiredSpringboardBehavior];
  int v3 = sub_1000D5130();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissed contact details (after updateDesiredSpringboardBehavior)", v5, 2u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000BD5DC(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "prepareForDeviceLock completed with dismissal", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000BDBA4(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismissed sensitive view controller: phoneRemoteVC", v3, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000BDC18(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismissed sensitive view controller: contactsVC", v3, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000BDC8C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismissed sensitive view controller: contact details", v3, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1000BDD00(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismiss sensitive view controllers: completed", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000BE51C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = [*(id *)(a1 + 32) videoCallNavigationController];
    int v5 = 138412290;
    int v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Completed transition to %@", (uint8_t *)&v5, 0xCu);
  }
  id v4 = +[PHPIPController defaultPIPController];
  [v4 updatePIPSize];
}

void sub_1000BEC14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = sub_1000D5130();
  int v8 = v7;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001EB99C((uint64_t)v6, v8, v23, v24, v25, v26, v27, v28);
    }

    CGRect v29 = +[PHInCallUtilities sharedInstance];
    [v29 setRequestedVCPresentationWithStatusBar:0 withReasonLog:@"Error occured when requesting view controller"];
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v32 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Presenting remote host view controller: %@", buf, 0xCu);
    }

    [*(id *)(a1 + 32) setRemoteHostViewController:v5];
    BOOL v9 = *(void **)(a1 + 32);
    id v10 = [v9 remoteHostViewController];
    [v10 setDelegate:v9];

    id v11 = *(void **)(a1 + 32);
    unint64_t v12 = [v11 remoteHostViewController];
    id v13 = [v12 remoteViewController];
    [v13 setDelegate:v11];

    id v14 = *(void **)(a1 + 32);
    uint64_t v15 = [v14 remoteHostViewController];
    id v16 = [v15 remoteViewController];
    [v16 setBackgroundStyleDelegate:v14];

    unsigned __int8 v17 = +[PHUIConfiguration shouldUseFullScreenPeoplePicker];
    uint64_t v18 = *(void **)(a1 + 32);
    if (v17)
    {
      id v19 = v18;
      uint64_t v20 = [*(id *)(a1 + 32) presentedViewController];

      if (v20)
      {
        uint64_t v21 = [*(id *)(a1 + 32) presentedViewController];

        id v19 = (id)v21;
      }
      uint64_t v22 = [*(id *)(a1 + 32) remoteHostViewController];
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472;
      v30[2] = sub_1000BEEC0;
      v30[3] = &unk_1002CD518;
      void v30[4] = *(void *)(a1 + 32);
      [v19 presentViewController:v22 animated:1 completion:v30];
    }
    else
    {
      id v19 = [*(id *)(a1 + 32) remoteHostViewController];
      [v18 presentAsPopover:v19 fromView:*(void *)(a1 + 40) completion:0];
    }

    [*(id *)(a1 + 32) updateDesiredSpringboardBehavior];
  }
}

void sub_1000BEEC0(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporarilyAllowAllStatusBarPills:1];
  id v1 = +[PHInCallUtilities sharedInstance];
  [v1 setRequestedVCPresentationWithStatusBar:0 withReasonLog:@"Completed presenting view controller with full screen people picker"];
}

uint64_t sub_1000BF11C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 48);
    int v7 = 67109120;
    int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "dismissed phoneRemoteVC animated %d (before updateDesiredSpringboardBehavior)", (uint8_t *)&v7, 8u);
  }

  [*(id *)(a1 + 32) setRemoteHostViewController:0];
  [*(id *)(a1 + 32) updateDesiredSpringboardBehavior];
  id v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a1 + 48);
    int v7 = 67109120;
    int v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "dismissed phoneRemoteVC animated %d (after updateDesiredSpringboardBehavior)", (uint8_t *)&v7, 8u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000BF244(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporarilyAllowAllStatusBarPills:0];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

BOOL sub_1000C050C(id a1, TUCall *a2)
{
  return [(TUCall *)a2 status] == 4;
}

void sub_1000C0EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C0EEC(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "will allowDeviceToLock", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    void v5[2] = sub_1000C1028;
    _OWORD v5[3] = &unk_1002CDA98;
    id v6 = *(id *)(a1 + 32);
    [WeakRetained prepareForDeviceLockWithCompletion:v5];
    id v4 = v6;
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "did allowDeviceToLock (root VC deallocated)", buf, 2u);
    }
  }
}

void sub_1000C1028(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v1 = sub_1000D5130();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "did allowDeviceToLock (after prepareForDeviceLock)", v2, 2u);
  }
}

uint64_t sub_1000C10A4(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Transition complete for view controller with sensitive information. Allowing device to lock now.", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

BOOL sub_1000C29E4(id a1, TUCall *a2)
{
  uint64_t v2 = a2;
  int v3 = [(TUCall *)v2 provider];
  if ([v3 isFaceTimeProvider]) {
    BOOL v4 = [(TUCall *)v2 status] == 1 || [(TUCall *)v2 status] == 4;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

void sub_1000C301C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 112));
  _Unwind_Resume(a1);
}

void sub_1000C3058(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 48));
  BOOL v4 = [*(id *)(a1 + 32) handle];
  if (v4)
  {
    id v5 = objc_loadWeakRetained(&to);
    [v5 blockWithHandle:v4];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

  objc_destroyWeak(&to);
}

void sub_1000C30EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1000C3100(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 48));
  BOOL v4 = [*(id *)(a1 + 32) handle];
  if (v4)
  {
    id v5 = objc_loadWeakRetained(&to);
    [v5 blockWithHandle:v4];

    id v6 = objc_loadWeakRetained(&to);
    [v6 reportWithCall:*(void *)(a1 + 32)];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

  objc_destroyWeak(&to);
}

void sub_1000C31AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

uint64_t sub_1000C31C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000C34FC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) multiwayViewController];
  [v1 pipDidRotate];
}

BOOL sub_1000C4E68(id a1, TUCall *a2)
{
  uint64_t v2 = [(TUCall *)a2 remoteParticipantHandles];
  BOOL v3 = (unint64_t)[v2 count] > 1;

  return v3;
}

void sub_1000C599C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) inCallWindowScene];
  [v1 requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:0 analyticsSource:SBSUIInCallTransitionAnalyticsSourceBannerTap];
}

id sub_1000C73C8()
{
  uint64_t v0 = sub_1000D5130();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    CFStringRef v5 = @"PHMulitwayCallAssertionReason";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Releasing %@ since the call has ended with no bottom controls showing", (uint8_t *)&v4, 0xCu);
  }

  id v1 = +[UIApplication sharedApplication];
  uint64_t v2 = [v1 delegate];
  [v2 setMostRecentlyDisconnectedVideoCall:0];

  return [(id)objc_opt_class() releaseDismissalAssertionForReason:@"PHMulitwayCallAssertionReason"];
}

id sub_1000C8B5C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BottomBar: Ending active or held call and answering incoming video call %@", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(a1 + 40) endActiveOrHeldAndAnswerCall:*(void *)(a1 + 32)];
}

id *sub_1000C8C0C(id *result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v5[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SpamReport: releasing assertions from block and report caller", (uint8_t *)v5, 2u);
    }

    int v4 = [v2[4] multiwayViewController];
    [v4 setIsInCallEndedBlockAndReportFlow:0];

    +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHCallEndedBlockAndReportInProgressAssertionReason"];
    return (id *)+[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHMulitwayCallAssertionReason"];
  }
  return result;
}

id *sub_1000C8CC0(id *result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v5[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SpamReport: releasing assertions from disconnectedCall block and report caller", (uint8_t *)v5, 2u);
    }

    int v4 = [v2[4] multiwayViewController];
    [v4 setIsInCallEndedBlockAndReportFlow:0];

    +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHCallEndedBlockAndReportInProgressAssertionReason"];
    return (id *)+[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHMulitwayCallAssertionReason"];
  }
  return result;
}

id sub_1000C90E4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) currentAudioAndVideoCallCount];
  unint64_t v3 = (unint64_t)result;
  if (*(void *)(a1 + 40))
  {
    int v4 = sub_1000D5130();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Disconnecting incoming video call due to lock button", buf, 2u);
    }

    [*(id *)(a1 + 32) disconnectCall:*(void *)(a1 + 40) withReason:2];
    id result = +[PHInCallRootViewController setShouldForceDismiss];
  }
  else if (*(void *)(a1 + 48))
  {
    int v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Disconnecting active video call due to lock button", v8, 2u);
    }

    id result = [*(id *)(a1 + 32) disconnectCall:*(void *)(a1 + 48)];
  }
  if (v3 <= 1)
  {
    uint64_t v6 = sub_1000D5130();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "... and requesting lock on next dismiss", v7, 2u);
    }

    return +[PHInCallRootViewController setShouldLockDeviceOnNextDismiss];
  }
  return result;
}

void sub_1000C9244(id a1)
{
  id v1 = +[NSSet setWithObject:@"PHMulitwayCallAssertionReason"];
  +[PHInCallRootViewController releaseDismissalAssertionReasons:v1];
}

id sub_1000C943C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "UserFeedbackScore : Releasing Assertion", v4, 2u);
  }

  +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHUserScoreShowingAssertionReason"];
  return [*(id *)(a1 + 32) setUserFeedbackViewController:0];
}

void sub_1000CB114(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = *(void **)(a1 + 32);
  id v6 = [a2 intValue];
  double v7 = *(double *)(a1 + 48) * (double)(unint64_t)(a3 + 1);
  *(float *)&double v7 = v7;
  id v8 = [v5 buttonForButtonType:v6 createIfNecessary:1 createWithHorizontalPositionFraction:v7];
  [*(id *)(a1 + 40) addObject:v8];
}

id sub_1000CB1A0(id *a1)
{
  float v2 = 1.0 / (float)((unint64_t)[a1[4] count] + 1);
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v3 = a1[4];
  id v4 = [v3 countByEnumeratingWithState:&v42 objects:v49 count:16];
  if (v4)
  {
    id v6 = v4;
    uint64_t v7 = *(void *)v43;
    float v8 = v2;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v43 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v10 = *(void **)(*((void *)&v42 + 1) + 8 * i);
        *(float *)&double v5 = v8;
        [a1[5] applyHorizontalPositioningConstraintWithFraction:v10 forButton:v5];
        [v10 setAlpha:1.0];
        float v8 = v2 + v8;
      }
      id v6 = [v3 countByEnumeratingWithState:&v42 objects:v49 count:16];
    }
    while (v6);
  }

  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v11 = a1[6];
  id v12 = [v11 countByEnumeratingWithState:&v38 objects:v48 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v39;
    do
    {
      for (j = 0; j != v13; j = (char *)j + 1)
      {
        if (*(void *)v39 != v14) {
          objc_enumerationMutation(v11);
        }
        [*(id *)(*((void *)&v38 + 1) + 8 * (void)j) setAlpha:0.0];
      }
      id v13 = [v11 countByEnumeratingWithState:&v38 objects:v48 count:16];
    }
    while (v13);
  }

  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v16 = [a1[5] buttonDividerViews];
  id v17 = [v16 countByEnumeratingWithState:&v34 objects:v47 count:16];
  if (v17)
  {
    id v19 = v17;
    float v20 = v2 + (float)(v2 * 0.5);
    uint64_t v21 = *(void *)v35;
    do
    {
      for (k = 0; k != v19; k = (char *)k + 1)
      {
        if (*(void *)v35 != v21) {
          objc_enumerationMutation(v16);
        }
        uint64_t v23 = *(void **)(*((void *)&v34 + 1) + 8 * (void)k);
        *(float *)&double v18 = v20;
        [a1[5] applyHorizontalPositioningConstraintWithFraction:v23 forDividerView:v18];
        [v23 setAlpha:1.0];
        float v20 = v2 + v20;
      }
      id v19 = [v16 countByEnumeratingWithState:&v34 objects:v47 count:16];
    }
    while (v19);
  }

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v24 = a1[7];
  id v25 = [v24 countByEnumeratingWithState:&v30 objects:v46 count:16];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = *(void *)v31;
    do
    {
      for (m = 0; m != v26; m = (char *)m + 1)
      {
        if (*(void *)v31 != v27) {
          objc_enumerationMutation(v24);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * (void)m) setAlpha:0.0 v30];
      }
      id v26 = [v24 countByEnumeratingWithState:&v30 objects:v46 count:16];
    }
    while (v26);
  }

  [a1[5] setNeedsLayout];
  return [a1[5] layoutIfNeeded];
}

_DWORD *sub_1000CB4C0(_DWORD *result, int a2)
{
  if (a2)
  {
    float v2 = result;
    int v3 = result[14];
    id result = (_DWORD *)*((void *)result + 4);
    if (v3 == result[2])
    {
      [result removeButtons:*((void *)v2 + 5)];
      id v4 = (void *)*((void *)v2 + 6);
      return [v4 makeObjectsPerformSelector:"removeFromSuperview"];
    }
  }
  return result;
}

id sub_1000CC428(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _createRootViewController];
}

void sub_1000CC90C(uint64_t a1)
{
  float v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v3 = [*(id *)(a1 + 32) isViewLoaded];
    id v4 = [*(id *)(a1 + 32) view];
    double v5 = [v4 window];
    int v10 = 67109378;
    LODWORD(v11[0]) = v3;
    WORD2(v11[0]) = 2112;
    *(void *)((char *)v11 + 6) = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Inside block: self.isViewLoaded: %d, self.view.window: %@", (uint8_t *)&v10, 0x12u);
  }
  if ([*(id *)(a1 + 32) isViewLoaded])
  {
    id v6 = [*(id *)(a1 + 32) view];
    uint64_t v7 = [v6 window];

    if (v7)
    {
      float v8 = sub_1000D5130();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 138412290;
        v11[0] = @"PHSuppressInCallStatusBarForFullscreenUIReason";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "remove status bar suppression %@", (uint8_t *)&v10, 0xCu);
      }

      BOOL v9 = +[PHInCallUtilities sharedInstance];
      [v9 stopSuppressingInCallStatusBarForReason:@"PHSuppressInCallStatusBarForFullscreenUIReason"];
    }
  }
}

void sub_1000CD4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CD4E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _stealViewControllerFromPIP];
    id WeakRetained = v2;
  }
}

void sub_1000CD5E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000CD604(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _handlePiPEndedAndShouldBePresentedFullScreen:1 transitionIsComplete:a2 viewControllerToSteal:v7];
  }
}

void sub_1000CD984(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) callDisplayStyleManager];
  id v2 = [v1 sceneType];

  id v6 = +[UIApplication sharedApplication];
  unsigned int v3 = [v6 delegate];
  id v4 = [v3 sceneManager];
  double v5 = [v4 sceneOfType:v2];
  [v5 requestTransitionToPresentationMode:2 shouldDismissCMASAlerts:0];
}

void sub_1000CE2FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000CE3D4;
  block[3] = &unk_1002CDFE8;
  id v10 = v5;
  id v11 = *(id *)(a1 + 32);
  id v12 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000CE3D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned int v3 = sub_1000D5130();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v17 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Fetched user activity: %@ - requesting handoff", buf, 0xCu);
    }

    id v6 = +[TUCallCenter sharedInstance];
    id v7 = [*(id *)(a1 + 32) userInfo];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    _DWORD v14[2] = sub_1000CE558;
    v14[3] = &unk_1002CD540;
    id v15 = *(id *)(a1 + 40);
    [v6 pullCallFromClientUsingHandoffActivityUserInfo:v7 completion:v14];
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001EBCB4(a1, v4, v8, v9, v10, v11, v12, v13);
    }

    +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHDismissalReasonWaitingForHandoff"];
  }
}

id sub_1000CE558(uint64_t a1, int a2)
{
  id v4 = sub_1000D5130();
  uint64_t v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v14 = 138412290;
      uint64_t v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Completed handoff request successfully for %@", (uint8_t *)&v14, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1001EBD24(a1, v5, v7, v8, v9, v10, v11, v12);
  }

  return +[PHInCallRootViewController releaseDismissalAssertionForReason:@"PHDismissalReasonWaitingForHandoff"];
}

void sub_1000CF730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CF754(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained removePIPPlaceholderView];
    uint64_t v2 = [v4 pipController];
    unsigned int v3 = [v2 viewControllerToRestoreWhenCancellingPIP];

    [v4 _handlePiPEndedAndShouldBePresentedFullScreen:0 transitionIsComplete:1 viewControllerToSteal:v3];
    id WeakRetained = v4;
  }
}

void sub_1000D05B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_1000D05D4(uint64_t a1, void *a2, void *a3)
{
  id v30 = a2;
  id v29 = a3;
  uint64_t v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = [WeakRetained incomingCall];
  [v7 suppressRingtone];

  id v32 = objc_alloc_init((Class)NSMutableArray);
  id v8 = objc_loadWeakRetained(v5);
  uint64_t v9 = [v8 replyWithMessageStore];
  long long v31 = [v9 defaultReplies];

  id v10 = objc_loadWeakRetained(v5);
  uint64_t v11 = [v10 replyWithMessageStore];
  uint64_t v12 = [v11 customReplies];

  uint64_t v13 = 0;
  do
  {
    int v14 = [v12 objectAtIndex:v13];
    if ([v14 length])
    {
      id v15 = v14;
      id v16 = 0;
    }
    else
    {
      id v15 = [v31 objectAtIndex:v13];
      uint64_t v17 = [&off_1002DF8D8 objectAtIndex:v13];
      if ([v17 length])
      {
        id v16 = +[UIImage systemImageNamed:v17];
      }
      else
      {
        id v16 = 0;
      }
    }
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_1000D09A8;
    v35[3] = &unk_1002D0328;
    objc_copyWeak(v36, v5);
    v36[1] = v13;
    double v18 = +[UIAction actionWithTitle:v15 image:v16 identifier:0 handler:v35];
    [v32 addObject:v18];

    objc_destroyWeak(v36);
    ++v13;
  }
  while (v13 != (char *)3);
  id v19 = objc_loadWeakRetained(v5);
  float v20 = [v19 incomingCall];
  unsigned __int8 v21 = [v20 hasSendCustomMessageCapability];

  if (v21)
  {
    uint64_t v22 = +[NSBundle mainBundle];
    uint64_t v23 = [v22 localizedStringForKey:@"CUSTOM" value:&stru_1002D6110 table:@"InCallService"];
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1000D0A64;
    v33[3] = &unk_1002CE218;
    objc_copyWeak(&v34, v5);
    id v24 = +[UIAction actionWithTitle:v23 image:0 identifier:0 handler:v33];
    [v32 addObject:v24];

    objc_destroyWeak(&v34);
  }
  id v25 = +[NSBundle mainBundle];
  id v26 = [v25 localizedStringForKey:@"REPLY_WITH_MESSAGE_ACTION_SHEET_TITLE" value:&stru_1002D6110 table:@"InCallService"];
  uint64_t v27 = +[UIMenu menuWithTitle:v26 children:v32];

  return v27;
}

void sub_1000D0990(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000D09A8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [v3 replyWithMessageStore];
  uint64_t v5 = [v4 cannedRepliesForSending];
  uint64_t v6 = [v5 objectAtIndex:*(void *)(a1 + 40)];
  [v3 sendDeclineWithMessageResponse:v6];

  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained declineCall];
}

void sub_1000D0A64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showCustomReplyWithMessageComposer];
}

void sub_1000D1768(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = [*(id *)(a1 + 32) recipientHandle];
    id v4 = [v3 personHandle];

    id v5 = [objc_alloc((Class)INPerson) initWithPersonHandle:v4 nameComponents:0 displayName:0 image:0 contactIdentifier:0 customIdentifier:0];
    id v6 = objc_alloc((Class)INSendMessageIntent);
    id v29 = v5;
    uint64_t v7 = +[NSArray arrayWithObjects:&v29 count:1];
    id v8 = [v6 initWithRecipients:v7 content:0 groupName:0 serviceName:0 sender:0];

    id v9 = [objc_alloc((Class)INInteraction) initWithIntent:v8 response:0];
    [v9 setDirection:1];
    id v10 = [objc_alloc((Class)NSUserActivity) initWithActivityType:@"INSendMessageIntent"];
    [v10 _setInteraction:v9 donate:0];
    uint64_t v11 = [*(id *)(a1 + 32) incomingCall];
    uint64_t v12 = [v11 provider];
    uint64_t v13 = [v12 bundleIdentifier];

    int v14 = +[LSApplicationProxy applicationProxyForIdentifier:v13];
    uint64_t v27 = FBSOpenApplicationOptionKeyUnlockDevice;
    uint64_t v28 = &__kCFBooleanTrue;
    id v15 = +[NSDictionary dictionaryWithObjects:&v28 forKeys:&v27 count:1];
    id v16 = sub_1000D5130();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v24 = v10;
      __int16 v25 = 2112;
      id v26 = v13;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Opening user activity %@ for bundle identifier %@", buf, 0x16u);
    }

    uint64_t v17 = +[LSApplicationWorkspace defaultWorkspace];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1000D1A68;
    v20[3] = &unk_1002D0398;
    id v21 = v10;
    id v22 = v14;
    id v18 = v14;
    id v19 = v10;
    [v17 openUserActivity:v19 withApplicationProxy:v18 options:v15 completionHandler:v20];
  }
}

void sub_1000D1A68(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1000D5130();
  uint64_t v7 = v6;
  if (a2)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Successfully opened user activity %@ for application %@", (uint8_t *)&v10, 0x16u);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    sub_1001EBF24(a1, (uint64_t)v5, v7);
  }
}

void sub_1000D1DB0(id a1)
{
  off_100326268 = (_UNKNOWN *)CUTWeakLinkSymbol();
}

void sub_1000D1FF8(id a1)
{
  off_100326278 = (_UNKNOWN *)CUTWeakLinkSymbol();
}

void sub_1000D2334(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = sub_1000D5130();
  uint64_t v8 = v7;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001EBFB8();
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      *(void *)&uint8_t buf[4] = v5;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Launched extension with requestIdentifier: %@ error: %@", buf, 0x16u);
    }

    uint64_t v8 = [*(id *)(a1 + 32) _extensionContextForUUID:v5];
    uint64_t v9 = [v8 _auxiliaryConnection];
    int v10 = v9;
    memset(buf, 0, 32);
    if (v9) {
      [v9 auditToken];
    }
    uint64_t v11 = *(void **)(a1 + 40);
    __int16 v12 = [*(id *)(a1 + 32) _extensionBundle];
    *(_OWORD *)float v20 = *(_OWORD *)buf;
    long long v21 = *(_OWORD *)&buf[16];
    [v11 trimDataAgainstTCCForAuditToken:v20 bundle:v12];

    uint64_t v13 = [v10 remoteObjectProxyWithErrorHandler:&stru_1002D03F8];
    uint64_t v14 = *(void *)(a1 + 40);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    void v18[2] = sub_1000D25DC;
    v18[3] = &unk_1002D0420;
    id v15 = v13;
    id v19 = v15;
    [v15 handleIntent:v14 withCompletion:v18];
    id v16 = sub_1000D5130();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 40);
      *(_DWORD *)float v20 = 138412290;
      *(void *)&void v20[4] = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Sent request to extension to handle send message intent: %@", v20, 0xCu);
    }
  }
}

void sub_1000D2588(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_1000D5130();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1001EC020();
  }
}

void sub_1000D25DC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  uint64_t v13 = sub_1000D5130();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = 138413058;
    id v15 = v9;
    __int16 v16 = 2112;
    id v17 = v10;
    __int16 v18 = 2112;
    id v19 = v11;
    __int16 v20 = 2112;
    id v21 = v12;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Intent was handled with response: %@ launchContextActivityData: %@ cacheItems: %@ error: %@", (uint8_t *)&v14, 0x2Au);
  }

  [*(id *)(a1 + 32) completeTransaction];
}

id sub_1000D2DB0(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:*(unsigned char *)(a1 + 48) == 0];
  double v2 = 1.0;
  if (!*(unsigned char *)(a1 + 48)) {
    double v2 = 0.0;
  }
  [*(id *)(a1 + 32) setAlpha:v2];
  [*(id *)(a1 + 40) setNeedsStatusBarAppearanceUpdate];
  id v3 = *(void **)(a1 + 40);

  return [v3 setNeedsUpdateOfHomeIndicatorAutoHidden];
}

id sub_1000D2E1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setupOverlayDismissTimerIfNeeded];
}

uint64_t sub_1000D2E24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000D3C48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000D3C6C(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000D3D3C;
  block[3] = &unk_1002D0478;
  id v5 = a2;
  id v3 = v5;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v7);
}

void sub_1000D3D3C(uint64_t a1)
{
  uint64_t v2 = sub_1000D5360();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1001EC088(a1, v2);
  }
  id v3 = [*(id *)(a1 + 32) imageWithRenderingMode:1];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = [WeakRetained infoView];
  [v5 setAvatarImage:v3];

  id v6 = objc_loadWeakRetained((id *)(a1 + 48));
  id v7 = [v6 pipController];
  [v7 setScreenSharingTitle:*(void *)(a1 + 40) andAvatarIfNeeded:v3];
}

void sub_1000D3EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D3F10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setShowingOverlay:0 animated:1];
    uint64_t v2 = [v3 overlayDismissTimer];
    [v2 invalidate];

    [v3 setOverlayDismissTimer:0];
    id WeakRetained = v3;
  }
}

id sub_1000D5130()
{
  if (qword_100326290 != -1) {
    dispatch_once(&qword_100326290, &stru_1002D04C0);
  }
  uint64_t v0 = (void *)qword_100326288;

  return v0;
}

void sub_1000D5184(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "Default");
  uint64_t v2 = (void *)qword_100326288;
  qword_100326288 = (uint64_t)v1;
}

uint64_t sub_1000D51C8()
{
  if (qword_1003262A0 != -1) {
    dispatch_once(&qword_1003262A0, &stru_1002D04E0);
  }
  return qword_100326298;
}

void sub_1000D520C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "ConversationControls");
  uint64_t v2 = (void *)qword_100326298;
  qword_100326298 = (uint64_t)v1;
}

uint64_t sub_1000D5250()
{
  if (qword_1003262B0 != -1) {
    dispatch_once(&qword_1003262B0, &stru_1002D0500);
  }
  return qword_1003262A8;
}

void sub_1000D5294(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "PiP");
  uint64_t v2 = (void *)qword_1003262A8;
  qword_1003262A8 = (uint64_t)v1;
}

uint64_t sub_1000D52D8()
{
  if (qword_1003262C0 != -1) {
    dispatch_once(&qword_1003262C0, &stru_1002D0520);
  }
  return qword_1003262B8;
}

void sub_1000D531C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "Scenes");
  uint64_t v2 = (void *)qword_1003262B8;
  qword_1003262B8 = (uint64_t)v1;
}

uint64_t sub_1000D5360()
{
  if (qword_1003262D0 != -1) {
    dispatch_once(&qword_1003262D0, &stru_1002D0540);
  }
  return qword_1003262C8;
}

void sub_1000D53A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "ScreenSharing");
  uint64_t v2 = (void *)qword_1003262C8;
  qword_1003262C8 = (uint64_t)v1;
}

uint64_t sub_1000D53E8()
{
  if (qword_1003262E0 != -1) {
    dispatch_once(&qword_1003262E0, &stru_1002D0560);
  }
  return qword_1003262D8;
}

void sub_1000D542C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "ScreenTime");
  uint64_t v2 = (void *)qword_1003262D8;
  qword_1003262D8 = (uint64_t)v1;
}

uint64_t sub_1000D5470()
{
  if (qword_1003262F0 != -1) {
    dispatch_once(&qword_1003262F0, &stru_1002D0580);
  }
  return qword_1003262E8;
}

void sub_1000D54B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "SOS");
  uint64_t v2 = (void *)qword_1003262E8;
  qword_1003262E8 = (uint64_t)v1;
}

uint64_t sub_1000D54F8()
{
  if (qword_100326300 != -1) {
    dispatch_once(&qword_100326300, &stru_1002D05A0);
  }
  return qword_1003262F8;
}

void sub_1000D553C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.incallservice", "AmbientScene");
  uint64_t v2 = (void *)qword_1003262F8;
  qword_1003262F8 = (uint64_t)v1;
}

void sub_1000D61D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D61FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showMessagesButtonPressed];
}

void sub_1000D6F00(id a1)
{
  os_log_t v1 = objc_alloc_init(PHInCallOrientationMonitor);
  uint64_t v2 = (void *)qword_100326308;
  qword_100326308 = (uint64_t)v1;
}

void sub_1000D6FE0(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 isSpringBoardInterfaceOrientationLocked];
  id v4 = sub_1000D5130();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v5 = @"NO";
    if (v3) {
      CFStringRef v5 = @"YES";
    }
    int v15 = 138412290;
    CFStringRef v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SpringBoardOrientationLockChangedNotification: Orientation is locked: %@", (uint8_t *)&v15, 0xCu);
  }

  if (v3)
  {
    id v6 = [v2 springBoardLockedInterfaceOrientation];
    id v7 = +[UIDevice currentDevice];
    unint64_t v8 = (unint64_t)[v7 userInterfaceIdiom];

    id v9 = sub_1000D5130();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    if ((v8 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    {
      if (v10)
      {
        if (v6 == (id)1)
        {
          CFStringRef v11 = @"UIInterfaceOrientationPortrait";
        }
        else if (v6 == (id)3)
        {
          CFStringRef v11 = @"UIInterfaceOrientationLandscapeRight";
        }
        else if (v6 == (id)4)
        {
          CFStringRef v11 = @"UIInterfaceOrientationLandscapeLeft";
        }
        else
        {
          CFStringRef v11 = @"UIInterfaceOrientationPortraitUpsideDown";
          if (v6 != (id)2) {
            CFStringRef v11 = 0;
          }
        }
        int v15 = 138412290;
        CFStringRef v16 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "SpringBoardOrientationLockChangedNotification: SpringBoard is locked to %@", (uint8_t *)&v15, 0xCu);
      }
    }
    else
    {
      if (v10)
      {
        if (v6 == (id)1)
        {
          CFStringRef v12 = @"UIInterfaceOrientationPortrait";
        }
        else if (v6 == (id)3)
        {
          CFStringRef v12 = @"UIInterfaceOrientationLandscapeRight";
        }
        else if (v6 == (id)4)
        {
          CFStringRef v12 = @"UIInterfaceOrientationLandscapeLeft";
        }
        else if (v6 == (id)2)
        {
          CFStringRef v12 = @"UIInterfaceOrientationPortraitUpsideDown";
        }
        else
        {
          CFStringRef v12 = 0;
        }
        if ([v2 currentOrientation] == (id)1)
        {
          CFStringRef v13 = @"UIInterfaceOrientationPortrait";
        }
        else if ([v2 currentOrientation] == (id)4)
        {
          CFStringRef v13 = @"UIInterfaceOrientationLandscapeLeft";
        }
        else if ([v2 currentOrientation] == (id)3)
        {
          CFStringRef v13 = @"UIInterfaceOrientationLandscapeRight";
        }
        else
        {
          id v14 = [v2 currentOrientation];
          CFStringRef v13 = @"UIInterfaceOrientationPortraitUpsideDown";
          if (v14 != (id)2) {
            CFStringRef v13 = 0;
          }
        }
        int v15 = 138412546;
        CFStringRef v16 = v12;
        __int16 v17 = 2112;
        CFStringRef v18 = v13;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "SpringBoardOrientationLockChangedNotification: SpringBoard is locked to %@, but using %@", (uint8_t *)&v15, 0x16u);
      }

      id v6 = [v2 currentOrientation];
    }
    [v2 setLockedOrientation:v6];
  }
  [v2 setIsOrientationLocked:v3];
}

void sub_1000D7D5C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100326328;
  qword_100326328 = (uint64_t)v1;
}

void sub_1000D7E68(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100326338;
  qword_100326338 = (uint64_t)v1;
}

void sub_1000D8DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D8E0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v12 = WeakRetained;
    id v2 = [WeakRetained callCenter];
    id v3 = [v2 incomingCall];

    id v4 = [v12 featureFlags];
    int v5 = TUCallScreeningEnabled();

    if (v5 && !v3)
    {
      id v6 = [v12 callCenter];
      id v3 = [v6 screeningCall];
    }
    id v7 = [v12 bottomBar];
    unint64_t v8 = [v7 controlForActionType:13];

    id v9 = [v12 bottomBar];
    BOOL v10 = [v9 controlForActionType:9];

    if (!v10)
    {
      CFStringRef v11 = [v12 bottomBar];
      BOOL v10 = [v11 controlForActionType:12];
    }
    if (v3 && v10) {
      [v12 configureDeclineWithReminderButton:v8 declineWithMessageButton:v10 forIncomingCall:v3];
    }

    id WeakRetained = v12;
  }
}

void sub_1000D96DC(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) callParticipantsViewController];
  id v1 = [v3 view];
  id v2 = [v1 layer];
  [v2 setOpacity:0.0];
}

id sub_1000D974C(uint64_t a1)
{
  [*(id *)(a1 + 32) resetParticipantsViewConstraints];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000D97F8;
  v4[3] = &unk_1002CD518;
  void v4[4] = *(void *)(a1 + 32);
  return +[UIView animateWithDuration:v4 animations:0.400000006];
}

void sub_1000D97F8(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) callParticipantsViewController];
  id v1 = [v4 view];
  id v2 = [v1 layer];
  LODWORD(v3) = 1.0;
  [v2 setOpacity:v3];
}

void sub_1000D9868(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  double v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 resetParticipantsViewConstraints];
    id v7 = [*(id *)(a1 + 32) view];
    [v7 layoutIfNeeded];
  }
  else
  {
    id v4 = [v3 callParticipantsViewController];
    int v5 = [v4 view];
    [v5 setNeedsLayout];

    id v7 = [*(id *)(a1 + 32) callParticipantsViewController];
    id v6 = [v7 view];
    [v6 layoutIfNeeded];
  }
}

void sub_1000DDFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DE018(uint64_t a1, int a2)
{
  if (a2)
  {
    double v3 = +[CNContactStoreConfiguration tu_contactStoreConfigurationForCall:*(void *)(a1 + 32)];
    id v4 = [objc_alloc((Class)CNContactStore) initWithConfiguration:v3];
    int v5 = [*(id *)(a1 + 32) contactIdentifier];

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) contactIdentifier];
      id v7 = +[PHAudioCallViewController contactKeysToFetch];
      id v8 = [v4 contactForIdentifier:v6 keysToFetch:v7];

      id v9 = +[CNContactViewController viewControllerForContact:v8];
      if (v8)
      {
LABEL_7:
        [v9 setContactStore:v4];
        [v9 setShouldShowSharedProfileBanner:1];
        [v9 setDelegate:*(void *)(a1 + 40)];
        id v13 = [objc_alloc((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:*(void *)(a1 + 40) action:"dismissNavigationControllerAndUpdateScene"];
        id v14 = [v9 navigationItem];
        [v14 setLeftBarButtonItem:v13];

        id v15 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v9];
        objc_initWeak(&location, *(id *)(a1 + 40));
        CFStringRef v16 = *(void **)(a1 + 40);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_1000DE2A8;
        v17[3] = &unk_1002CED28;
        objc_copyWeak(&v18, &location);
        [v16 presentViewController:v15 animated:1 completion:v17];
        objc_destroyWeak(&v18);
        objc_destroyWeak(&location);

        return;
      }
    }
    else
    {
      id v9 = 0;
    }
    id v10 = objc_alloc((Class)CNMutableContact);
    CFStringRef v11 = [*(id *)(a1 + 32) handle];
    id v8 = [v10 initWithHandle:v11];

    id v12 = +[CNContactViewController viewControllerForUnknownContact:v8];

    [v12 setActions:[v12 actions] | 0x80];
    id v9 = v12;
    goto LABEL_7;
  }
}

void sub_1000DE28C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DE2A8(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000DE338;
  block[3] = &unk_1002CED28;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1000DE338(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained inCallRootViewController];
    [v2 updateDesiredSpringboardBehavior];

    id WeakRetained = v3;
  }
}

void sub_1000DE394(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (a2)
  {
    id v5 = WeakRetained;
    id v4 = [WeakRetained callDetailsCoordinator];
    [v4 startWithReason:@"PHAudioCallViewController requested call details"];

    id WeakRetained = v5;
  }
}

void sub_1000DECD0(uint64_t a1)
{
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000DEE40;
  v13[3] = &unk_1002CDDE0;
  uint64_t v2 = *(void *)(a1 + 32);
  id v14 = *(id *)(a1 + 40);
  id v15 = *(id *)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1000DEE84;
  v6[3] = &unk_1002D0630;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 64);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = v5;
  id v12 = *(id *)(a1 + 72);
  +[UIView transitionWithView:v2 duration:1048832 options:v13 animations:v6 completion:0.4];
}

id sub_1000DEE40(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:0.0];
}

void sub_1000DEE84(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1000DEF7C;
  v6[3] = &unk_1002D0658;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 64);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = v5;
  id v12 = *(id *)(a1 + 72);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v6);
}

void sub_1000DEF7C(uint64_t a1)
{
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000DF0EC;
  v13[3] = &unk_1002CDDE0;
  uint64_t v2 = *(void *)(a1 + 32);
  id v14 = *(id *)(a1 + 40);
  id v15 = *(id *)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_1000DF130;
  v6[3] = &unk_1002D0630;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 40);
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 64);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = v5;
  id v12 = *(id *)(a1 + 72);
  +[UIView transitionWithView:v2 duration:2097408 options:v13 animations:v6 completion:0.4];
}

id sub_1000DF0EC(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

void sub_1000DF130(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 40) removeFromSuperview];
  [*(id *)(a1 + 48) removeFromSuperview];
  uint64_t v2 = [*(id *)(a1 + 56) callDetailsViewButton];
  [v2 setAlpha:1.0];

  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:1 forKey:@"PHInCallUIInfoButtonCoinFlipKey"];

  if ((+[CNSharedProfileStateOracle contactIsInAutoUpdateState:*(void *)(a1 + 64)] & 1) == 0)
  {
    id v6 = [*(id *)(a1 + 56) imNicknameProvider];
    uint64_t v4 = [*(id *)(a1 + 72) pendingNickname];
    id v5 = [v4 handle];
    [v6 markTransitionAsObservedForHandleID:v5 isAutoUpdate:0];
  }
}

void sub_1000DF3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DF3D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1000DF490;
  _OWORD v5[3] = &unk_1002CDCA8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1000DF490(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setSnapshottedPosterImageToUseForColorInversion:*(void *)(a1 + 32)];
  [WeakRetained invertNecessaryUIElementsBasedOnPosterImage:*(void *)(a1 + 32)];
}

void sub_1000DF844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    [*(id *)(a1 + 32) setHasInvertedUIElementColorsBasedOnPoster:1];
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109120;
      v9[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SNAP: bottomButtons prefers white text = %d", (uint8_t *)v9, 8u);
    }

    id v6 = [*(id *)(a1 + 32) buttonsViewController];
    id v7 = [v6 view];

    [v7 setPrefersWhiteButtonTextColor:a2];
    id v8 = [*(id *)(a1 + 32) bottomBar];
    [v8 setPrefersWhiteButtonTextColor:a2];
  }
}

void sub_1000DFAB0(uint64_t a1, int a2, uint64_t a3)
{
  if (!a3)
  {
    [*(id *)(a1 + 32) setHasInvertedUIElementColorsBasedOnPoster:1];
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109120;
      v8[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SNAP: callDetailsButton prefers white text = %d", (uint8_t *)v8, 8u);
    }

    if (a2) {
      +[UIColor whiteColor];
    }
    else {
    id v6 = +[UIColor blackColor];
    }
    id v7 = [*(id *)(a1 + 32) callDetailsViewButton];
    [v7 setTintColor:v6];
  }
}

id *sub_1000DFDEC(id *result, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    id v4 = result;
    [result[4] setHasInvertedUIElementColorsBasedOnPoster:1];
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 67109120;
      v6[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SNAP: CallRecordingButton prefers white text = %d", (uint8_t *)v6, 8u);
    }

    return (id *)[v4[4] invertColorCallRecordingButtonColor:a2];
  }
  return result;
}

id *sub_1000E0098(id *result, int a2, uint64_t a3)
{
  if (!a3)
  {
    id v4 = result;
    [result[4] setHasInvertedUIElementColorsBasedOnPoster:1];
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7[0] = 67109120;
      v7[1] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SNAP: posterBadgeView prefers white text = %d", (uint8_t *)v7, 8u);
    }

    if (a2) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = 2;
    }
    return (id *)[v4[5] setTheme:v6];
  }
  return result;
}

void sub_1000E0C28(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 view];
  [v5 addSubview:v4];

  id v8 = [v4 bottomAnchor];

  uint64_t v6 = [*(id *)(a1 + 40) topAnchor];
  id v7 = [v8 constraintEqualToAnchor:v6 constant:-30.0];
  [v7 setActive:1];
}

void sub_1000E0DE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000E0E08(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000E0E98;
  block[3] = &unk_1002CED28;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1000E0E98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained inCallRootViewController];
    [v2 updateDesiredSpringboardBehavior];

    id WeakRetained = v3;
  }
}

BOOL sub_1000E1FE0(id a1, TUCall *a2)
{
  return [(TUCall *)a2 isEndpointOnCurrentDevice] ^ 1;
}

id sub_1000E2074(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _isScreeningCallGroup:a2];
}

void sub_1000E26E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E26FC(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id v3 = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [v3 bottomBar];
  [v3 _testing_finishedAnimatingToActiveCallState:v4];

  if (*(unsigned char *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained(v2);
    [WeakRetained revealAudioRoutingDeviceListAnimatedIfNeeded];
  }
}

void sub_1000E28C8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) posterNameViewModel];
  id v3 = [v2 posterNameTextView];
  id v4 = [v3 layout];

  if (v4 != (id)1)
  {
    memset(&v15, 0, sizeof(v15));
    CGAffineTransformMakeScale(&v15, 1.03, 1.03);
    CGAffineTransform v14 = v15;
    id v5 = [*(id *)(a1 + 32) renderingViewController];
    uint64_t v6 = [v5 view];
    CGAffineTransform v13 = v14;
    [v6 setTransform:&v13];

    CGAffineTransform v12 = v15;
    id v7 = [*(id *)(a1 + 32) alwaysOnDisplayDimmingView];
    CGAffineTransform v11 = v12;
    [v7 setTransform:&v11];
  }
  if ([*(id *)(a1 + 32) shouldShowNewPosterUpdates])
  {
    dispatch_time_t v8 = dispatch_time(0, 950000000);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    _DWORD v9[2] = sub_1000E2A6C;
    _OWORD v9[3] = &unk_1002CD778;
    void v9[4] = *(void *)(a1 + 32);
    __int16 v10 = *(_WORD *)(a1 + 40);
    dispatch_after(v8, (dispatch_queue_t)&_dispatch_main_q, v9);
  }
  else
  {
    [*(id *)(a1 + 32) _updatePosterStatusLabelForState:*(unsigned __int16 *)(a1 + 40)];
  }
}

id sub_1000E2A6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updatePosterStatusLabelForState:*(unsigned __int16 *)(a1 + 40)];
}

id sub_1000E3188(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) posterNameViewModel];
  [v2 transitionCallToActiveStateAnimated:*(unsigned __int8 *)(a1 + 40)];

  id v3 = *(void **)(a1 + 32);

  return [v3 _updateStatusLabelVisibility];
}

id *sub_1000E40C4(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    id result = (id *)[result[4] isTTY];
    if ((result & 1) == 0)
    {
      id v3 = v2[5];
      return (id *)[v3 revealAudioRoutingDeviceListAnimatedIfNeeded];
    }
  }
  return result;
}

void sub_1000E42B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E42D4(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PHAudioCallViewController,setCurrentState,PHInCallStateCallBuffer,disable 6-up buttons", v9, 2u);
  }

  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = [WeakRetained currentMiddleView];
  [v5 setButtonsEnabled:0];

  id v6 = objc_loadWeakRetained(v3);
  id v7 = [v6 currentMiddleView];
  dispatch_time_t v8 = [v7 buttonForControlType:15];
  [v8 setEnabled:1];
}

void sub_1000E523C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose((const void *)(v34 - 176), 8);
  objc_destroyWeak(v33);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1000E5288(uint64_t a1, uint64_t a2)
{
}

void sub_1000E5294(uint64_t a1)
{
}

void sub_1000E529C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40));
  if (WeakRetained)
  {
    uint64_t v5 = a2 ^ 1u;
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    if (*(unsigned __int8 *)(v6 + 24) != v5)
    {
      *(unsigned char *)(v6 + 24) = v5;
      id v7 = sub_1000D5130();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
          CFStringRef v8 = @"YES";
        }
        else {
          CFStringRef v8 = @"NO";
        }
        int v9 = 138412290;
        CFStringRef v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Audio: setCurrentState: stateChangeLockObservation: wasUnlocked: %@", (uint8_t *)&v9, 0xCu);
      }

      [WeakRetained setScreeningState:*(unsigned __int16 *)(a1 + 48) animated:1 overrideWithIsUnlocked:v5];
    }
  }
}

void sub_1000E53BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained traitCollection];
    id v5 = [v4 _backlightLuminance];
    id v6 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

    if (v5 != v6)
    {
      id v7 = [v3 traitCollection];
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v7 _backlightLuminance];

      CFStringRef v8 = sub_1000D5130();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        CFStringRef v9 = @"NO";
        if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
          CFStringRef v9 = @"YES";
        }
        uint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
        int v11 = 138412546;
        CFStringRef v12 = v9;
        __int16 v13 = 2048;
        uint64_t v14 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Audio: setCurrentState: stateDisplayChangedObservation: wasUnlocked: %@ with luminance: %ld", (uint8_t *)&v11, 0x16u);
      }

      [v3 setScreeningState:*(unsigned __int16 *)(a1 + 56) animated:1 overrideWithIsUnlocked:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
    }
  }
}

id sub_1000E5AE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updatePosterStatusLabelForState:*(unsigned __int16 *)(a1 + 40)];
}

id sub_1000E92CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 setBackgroundColor:*(void *)(a1 + 40)];

  id v3 = *(void **)(a1 + 32);

  return [v3 removeBackgroundContactImageView];
}

uint64_t sub_1000E931C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000E98AC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 544) setAlpha:1.0];
}

id sub_1000E98C4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 544) setImage:*(void *)(a1 + 40)];
  id v2 = *(void **)(*(void *)(a1 + 32) + 544);

  return [v2 setAlpha:1.0];
}

void sub_1000EA9DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_4;
  }
  uint64_t v3 = [WeakRetained screeningPosterNameViewModel];
  if (!v3) {
    goto LABEL_4;
  }
  id v4 = (void *)v3;
  id v5 = [v2 screeningPosterNameViewModel];
  unsigned int v6 = [v5 isVisible];

  if (!v6)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_1000EAAD0;
    _OWORD v7[3] = &unk_1002CD518;
    id v8 = v2;
    +[UIView animateWithDuration:v7 animations:0.3];
  }
  else
  {
LABEL_4:
    [v2 _updateStatusLabelVisibility];
  }
}

id sub_1000EAAD0(uint64_t a1)
{
  [*(id *)(a1 + 32) _updatePosterNameAlpha];
  id v2 = *(void **)(a1 + 32);

  return [v2 _updateStatusLabelVisibility];
}

void sub_1000EB3F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [*(id *)(a1 + 32) setBackgroundEffects:v2];
}

void sub_1000EB478(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000EB590;
  v4[3] = &unk_1002CD518;
  id v5 = *(id *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000EB5A0;
  v2[3] = &unk_1002CD540;
  id v3 = *(id *)(a1 + 32);
  +[UIView _animateUsingSpringWithDuration:0 delay:v4 options:v2 mass:0.4 stiffness:0.0 damping:2.0 initialVelocity:300.0 animations:50.0 completion:0.0];
}

id sub_1000EB590(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBackgroundEffects:&__NSArray0__struct];
}

id sub_1000EB5A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_1000EB6F4(uint64_t a1)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_1000EB804;
  _OWORD v7[3] = &unk_1002CDDE0;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v8 = v2;
  uint64_t v9 = v3;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000EB858;
  v4[3] = &unk_1002D0790;
  void v4[4] = v3;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 48);
  +[UIView animateWithDuration:v7 animations:v4 completion:0.5];
}

id sub_1000EB804(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 setAlpha:0.0];

  uint64_t v3 = *(void **)(a1 + 40);

  return [v3 setParticipantsViewShouldShowParticipantLabel:1];
}

uint64_t sub_1000EB858(uint64_t a1)
{
  [*(id *)(a1 + 32) removeChildViewController:*(void *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 40) view];
  [v2 removeFromSuperview];

  [*(id *)(a1 + 40) didMoveToParentViewController:0];
  [*(id *)(a1 + 32) _updateStatusLabelVisibility];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1000EBCDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 72))
  {
    id v2 = *(void **)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = [v2 posterNameViewModel];
    id v5 = [v4 priorityPosterNameTextView];
    [v2 addPosterBlurToPosterVC:v3 nameLabelWrapper:v5];
  }
  id v6 = [*(id *)(a1 + 48) view];
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) snapshotUIImageView];
  }
  uint64_t v9 = v8;

  if (!*(void *)(a1 + 48))
  {
    uint64_t v10 = [*(id *)(a1 + 32) view];
    int v11 = [*(id *)(a1 + 32) backgroundImageView];
    [v10 insertSubview:v9 above:v11];
  }
  CFStringRef v12 = [*(id *)(a1 + 40) view];
  [v12 setAlpha:0.0];

  double v13 = *(double *)(a1 + 64);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000EBEF8;
  v24[3] = &unk_1002CDFE8;
  id v14 = *(id *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 32);
  id v25 = v14;
  uint64_t v26 = v15;
  id v27 = v9;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1000EBF60;
  v19[3] = &unk_1002D07B8;
  id v16 = *(id *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 32);
  id v20 = v16;
  uint64_t v21 = v17;
  id v22 = v27;
  id v23 = *(id *)(a1 + 56);
  id v18 = v27;
  +[UIView animateWithDuration:v24 animations:v19 completion:v13];
}

id sub_1000EBEF8(uint64_t a1)
{
  [*(id *)(a1 + 40) viewAlphaForPosterRenderingViewController];
  double v3 = v2;
  id v4 = [*(id *)(a1 + 32) view];
  [v4 setAlpha:v3];

  id v5 = *(void **)(a1 + 48);

  return [v5 setAlpha:0.0];
}

uint64_t sub_1000EBF60(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    [*(id *)(a1 + 40) removeChildViewController:];
  }
  [*(id *)(a1 + 48) removeFromSuperview];
  double v2 = *(void **)(a1 + 32);
  if (v2) {
    [v2 didMoveToParentViewController:0];
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1000ECC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak((id *)(v11 - 160));
  _Unwind_Resume(a1);
}

void sub_1000ECCA4(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateStatusLabelVisibility];
  if (*(unsigned char *)(a1 + 48))
  {
    if (*(void *)(a1 + 40) == 3)
    {
      double v2 = *(void **)(a1 + 32);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      _DWORD v10[2] = sub_1000ECE08;
      v10[3] = &unk_1002D0808;
      v10[4] = v2;
      [v2 finishNewPosterUpdatesWithCompletion:v10];
    }
  }
  else
  {
    double v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SNAP: Fading out poster, set up background image as needed", v9, 2u);
    }

    id v4 = *(void **)(a1 + 32);
    id v5 = [v4 frontmostCall];
    id v6 = [v4 contactImageDataForCall:v5];

    id v7 = *(void **)(a1 + 32);
    if (v6)
    {
      id v8 = [objc_alloc((Class)UIImage) initWithData:v6];
      [v7 updateBackgroundContactImageViewWithImage:v8 animated:1];

      [*(id *)(a1 + 32) updateLegacyBackgroundImageVisibilityWithShouldShowWallpaper:0];
    }
    else
    {
      [*(id *)(a1 + 32) addDefaultBackgroundGradientView];
    }
  }
}

void sub_1000ECE08(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 contact];
  id v5 = [v4 fullscreenImageData];

  id v6 = [*(id *)(a1 + 32) callDisplayStyleManager];
  if ([v6 callDisplayStyle] != (id)3) {
    goto LABEL_5;
  }
  id v7 = [*(id *)(a1 + 32) features];
  unsigned int v8 = [v7 isDominoEnabled];

  if (v8 && !v5)
  {
    id v6 = [v3 contact];
    id v5 = [v6 imageData];
LABEL_5:
  }
  if (v5)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = [objc_alloc((Class)UIImage) initWithData:v5];
    [v9 updateBackgroundContactImageViewWithImage:v10 animated:1];

    [*(id *)(a1 + 32) updateLegacyBackgroundImageVisibilityWithShouldShowWallpaper:0];
  }
  else
  {
    uint64_t v11 = sub_1000D5130();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)CFStringRef v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "SNAP: Fading out poster, but there is no contact image data either, setting up default blur background in this case", v12, 2u);
    }

    [*(id *)(a1 + 32) addDefaultBackgroundGradientView];
  }
}

void sub_1000ECF60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained suspendPosterAndCancelDelay:0];
    [v2 setSuspendPosterAfterDelayBlock:0];
    id WeakRetained = v2;
  }
}

id sub_1000ECFB4(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  BOOL v5 = [WeakRetained currentState] == 2
    || [WeakRetained currentState] == 4;
  id v6 = [WeakRetained contactToDisplayInCallWallpaperForCall:*(void *)(a1 + 32)];
  uint64_t v7 = *(void *)(a1 + 40);
  unsigned int v8 = [*(id *)(a1 + 32) handle];
  uint64_t v9 = [v8 value];
  id v10 = +[TPIncomingCallMetricsProvider appropriateCallerNameViewForContact:v6 callStatus:v7 callIsActive:v5 optionalBackupName:v9];

  if (a2) {
    [WeakRetained applyWallpaperTitleStyleAttributesToTextViewWrapper:v10];
  }

  return v10;
}

id *sub_1000ED0B4(id *result)
{
  if (*((unsigned char *)result + 48))
  {
    if (result[5] == (id)3) {
      return (id *)[result[4] finishNewPosterUpdatesWithCompletion:0];
    }
  }
  return result;
}

void sub_1000ED898(id a1)
{
  id v1 = +[CNContactViewController descriptorForRequiredKeys];
  v6[12] = v1;
  id v2 = +[CNMeCardSharingSettingsViewController descriptorForRequiredKeys];
  v6[13] = v2;
  id v3 = +[NSPersonNameComponents descriptorForUsedKeys];
  v6[14] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v6 count:15];
  BOOL v5 = (void *)qword_100326348;
  qword_100326348 = v4;
}

void sub_1000EDF98(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 208) view];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 328) view];
  [v3 setAlpha:1.0];
}

void sub_1000EE020(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(*(void *)(a1 + 40) + 208) view];
  [v3 setAlpha:1.0];
}

void sub_1000EE09C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 removeFromSuperview];

  [*(id *)(a1 + 32) removeFromParentViewController];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void **)(v3 + 328);
  *(void *)(v3 + 328) = 0;
}

void sub_1000EE9DC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (+[PHUIConfiguration shouldUseFullScreenPeoplePicker])
    {
      uint64_t v3 = +[PHInCallUtilities sharedInstance];
      [v3 setRequestedVCPresentationWithStatusBar:1 withReasonLog:@"Requested presentation of contacts UI"];
    }
    id v4 = [*(id *)(a1 + 32) inCallRootViewController];
    [v4 presentContactsViewControllerForView:*(void *)(a1 + 40)];
  }
}

void sub_1000EEB78(uint64_t a1, int a2)
{
  if (a2)
  {
    if (+[PHUIConfiguration shouldUseFullScreenPeoplePicker])
    {
      uint64_t v3 = +[PHInCallUtilities sharedInstance];
      [v3 setRequestedVCPresentationWithStatusBar:1 withReasonLog:@"Requested presentation of Add Call UI"];
    }
    id v4 = [*(id *)(a1 + 32) inCallRootViewController];
    [v4 presentPhoneRemoteViewControllerForView:*(void *)(a1 + 40)];
  }
}

void sub_1000EED68(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) callCenter];
    uint64_t v4 = [v3 callWithStatus:1];
    if (v4)
    {
      BOOL v5 = v4;
    }
    else
    {
      id v6 = [*(id *)(a1 + 32) callCenter];
      BOOL v5 = [v6 callWithStatus:2];

      if (!v5)
      {
        BOOL v5 = sub_1000D5130();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
        {
          id v14 = [*(id *)(a1 + 32) callCenter];
          uint64_t v15 = [v14 currentCalls];
          int v16 = 138412290;
          id v17 = v15;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[WARN] Was told to request video presentation but no active or held call was found in calls: %@", (uint8_t *)&v16, 0xCu);
        }
        goto LABEL_8;
      }
    }
    uint64_t v7 = [v5 provider];
    id v8 = [objc_alloc((Class)TUDialRequest) initWithProvider:v7];
    uint64_t v9 = [v5 handle];
    [v8 setHandle:v9];

    id v10 = [v5 contactIdentifier];
    [v8 setContactIdentifier:v10];

    uint64_t v11 = [v5 localSenderIdentityUUID];
    [v8 setLocalSenderIdentityUUID:v11];

    [v8 setVideo:1];
    [v8 setOriginatingUIType:1];
    CFStringRef v12 = sub_1000D5130();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 138412290;
      id v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Requesting video via dial request: %@", (uint8_t *)&v16, 0xCu);
    }

    double v13 = [*(id *)(a1 + 32) callCenter];
    [v13 launchAppForDialRequest:v8 completion:0];

LABEL_8:
  }
}

uint64_t sub_1000F29E8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

id sub_1000F2A04(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) bottomBar];
    [v3 setCurrentState:11 animated:0 animationCompletionBlock:0];
  }
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v4 currentState];

  return [v4 updateBottomBarAlphaWithCurrentState:v5];
}

id sub_1000F2A70(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1000F2A7C(id *a1)
{
  id v2 = [a1[4] features];
  unsigned __int8 v3 = [v2 isButtonLayoutEnabled];

  if ((v3 & 1) == 0)
  {
    id v4 = a1[5];
    long long v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v10[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v10[1] = v5;
    _DWORD v10[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v4 setTransform:v10];
    CGAffineTransformMakeScale(&v9, 0.100000001, 0.100000001);
    id v6 = a1[6];
    CGAffineTransform v8 = v9;
    [v6 setTransform:&v8];
  }
  [a1[6] setAlpha:0.0];
  return [a1[5] setAlpha:1.0];
}

uint64_t sub_1000F2B38(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) features];
  unsigned __int8 v3 = [v2 isButtonLayoutEnabled];

  if ((v3 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 40);
    long long v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v7[1] = v5;
    _DWORD v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v4 setTransform:v7];
  }
  [*(id *)(a1 + 40) removeFromSuperview];
  [*(id *)(a1 + 40) setAlpha:1.0];
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

id *sub_1000F2BD8(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    unsigned __int8 v3 = [result[4] bottomBar];
    [v3 setCurrentState:11 animated:0 animationCompletionBlock:0];

    id v4 = v2[4];
    id v5 = [v4 currentState];
    return (id *)[v4 updateBottomBarAlphaWithCurrentState:v5];
  }
  return result;
}

id sub_1000F2C48(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_1000F2C54(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v8[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v8[1] = v3;
  _DWORD v8[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v8];
  CGAffineTransformMakeScale(&v7, 0.100000001, 0.100000001);
  id v4 = *(void **)(a1 + 40);
  CGAffineTransform v6 = v7;
  [v4 setTransform:&v6];
  [*(id *)(a1 + 40) setAlpha:0.0];
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1000F2CE8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v15[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v15[1] = v3;
  v15[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v15];
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setAlpha:1.0];
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, 1);
    id v5 = sub_1000D5130();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      CGAffineTransform v6 = [*(id *)(a1 + 40) buttonsViewController];
      CGAffineTransform v7 = [v6 view];
      CGAffineTransform v8 = [*(id *)(a1 + 40) buttonsViewController];
      CGAffineTransform v9 = [v8 view];
      [v9 alpha];
      uint64_t v11 = v10;
      CFStringRef v12 = [*(id *)(a1 + 40) buttonsViewController];
      double v13 = [v12 view];
      id v14 = [v13 superview];
      *(_DWORD *)buf = 138412802;
      id v17 = v7;
      __int16 v18 = 2048;
      uint64_t v19 = v11;
      __int16 v20 = 2112;
      uint64_t v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "After setting middleViewState to buttons from screening, six-up view is: %@, six-up view alpha is: %f, six-up view parent view is: %@", buf, 0x20u);
    }
  }
}

id sub_1000F2E98(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  id v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

uint64_t sub_1000F2EDC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setAlpha:1.0];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    long long v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1000F2F40(id *a1)
{
  [a1[4] setAlpha:0.0];
  [a1[5] setAlpha:1.0];
  id v2 = [a1[6] features];
  unsigned __int8 v3 = [v2 isButtonLayoutEnabled];

  if ((v3 & 1) == 0)
  {
    CGAffineTransformMakeScale(&v9, 1.20000005, 1.20000005);
    id v4 = a1[4];
    CGAffineTransform v8 = v9;
    [v4 setTransform:&v8];
    id v5 = a1[5];
    long long v6 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v7[1] = v6;
    _DWORD v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v5 setTransform:v7];
  }
}

uint64_t sub_1000F2FFC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) features];
  unsigned __int8 v3 = [v2 isButtonLayoutEnabled];

  if ((v3 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 40);
    long long v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v7[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v7[1] = v5;
    _DWORD v7[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v4 setTransform:v7];
  }
  [*(id *)(a1 + 40) removeFromSuperview];
  [*(id *)(a1 + 40) setAlpha:1.0];
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

id sub_1000F309C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1000F30A8(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  id v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

uint64_t sub_1000F30EC(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setAlpha:1.0];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    unsigned __int8 v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1000F3150(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v8[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v8[1] = v3;
  _DWORD v8[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v8];
  CGAffineTransformMakeScale(&v7, 0.100000001, 0.100000001);
  id v4 = *(void **)(a1 + 40);
  CGAffineTransform v6 = v7;
  [v4 setTransform:&v6];
  [*(id *)(a1 + 40) setAlpha:0.0];
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

uint64_t sub_1000F31E4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  void v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setAlpha:1.0];
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

uint64_t sub_1000F325C(uint64_t a1, int a2)
{
  id v4 = [*(id *)(a1 + 32) buttonsViewController];
  [v4 setUpdatesPaused:0];

  if (a2) {
    [*(id *)(a1 + 40) removeFromSuperview];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    CGAffineTransform v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

id sub_1000F32E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_1000F32F0(uint64_t a1, int a2)
{
  if (a2) {
    [*(id *)(a1 + 32) removeFromSuperview];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

id sub_1000F334C(uint64_t a1)
{
  CGAffineTransformMakeScale(&v8, 1.20000005, 1.20000005);
  id v2 = *(void **)(a1 + 32);
  CGAffineTransform v7 = v8;
  [v2 setTransform:&v7];
  [*(id *)(a1 + 32) setAlpha:0.0];
  long long v3 = *(void **)(a1 + 40);
  long long v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v4;
  _DWORD v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v3 setTransform:v6];
  return [*(id *)(a1 + 40) setAlpha:1.0];
}

void sub_1000F33E0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v15[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v15[1] = v3;
  v15[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v15];
  [*(id *)(a1 + 32) removeFromSuperview];
  [*(id *)(a1 + 32) setAlpha:1.0];
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, 1);
  }
  long long v5 = sub_1000D5130();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    CGAffineTransform v6 = [*(id *)(a1 + 40) buttonsViewController];
    CGAffineTransform v7 = [v6 view];
    CGAffineTransform v8 = [*(id *)(a1 + 40) buttonsViewController];
    CGAffineTransform v9 = [v8 view];
    [v9 alpha];
    uint64_t v11 = v10;
    CFStringRef v12 = [*(id *)(a1 + 40) buttonsViewController];
    double v13 = [v12 view];
    id v14 = [v13 superview];
    *(_DWORD *)buf = 138412802;
    id v17 = v7;
    __int16 v18 = 2048;
    uint64_t v19 = v11;
    __int16 v20 = 2112;
    uint64_t v21 = v14;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "After setting middleViewState to screening, six-up view is: %@, six-up view alpha is: %f, six-up view parent view is: %@", buf, 0x20u);
  }
}

uint64_t sub_1000F3590(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1000F35A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000F5820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000F58E0(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained setCurrentState:0];
  }
}

BOOL sub_1000F5F08(id a1, TUCall *a2)
{
  id v2 = a2;
  long long v3 = [(TUCall *)v2 provider];
  if ([v3 isTelephonyProvider]) {
    BOOL v4 = [(TUCall *)v2 status] == 1 || [(TUCall *)v2 status] == 2;
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

void sub_1000F62A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000F62D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_copyWeak(&to, (id *)(a1 + 40));
  id v4 = objc_loadWeakRetained(&to);
  [v4 blockWithHandle:*(void *)(a1 + 32)];

  id v5 = objc_loadWeakRetained(&to);
  CGAffineTransform v6 = [v5 frontmostCall];

  if (v6)
  {
    id v7 = objc_loadWeakRetained(&to);
    CGAffineTransform v8 = [v7 callCenter];
    [v8 disconnectCall:v6 withReason:2];
  }
  objc_destroyWeak(&to);
}

void sub_1000F6388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1000F672C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_1000F6764(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (*(void *)(a1 + 32)) {
    [WeakRetained blockWithHandle:];
  }
  id v2 = [*(id *)(a1 + 40) callCenter];
  [v2 disconnectCall:*(void *)(a1 + 48) withReason:2];
}

void sub_1000F67DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (*(void *)(a1 + 32))
  {
    [WeakRetained blockWithHandle:];
    [WeakRetained reportWithCall:*(void *)(a1 + 40)];
  }
  id v2 = [*(id *)(a1 + 48) callCenter];
  [v2 disconnectCall:*(void *)(a1 + 40) withReason:2];
}

id sub_1000F6D00(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCurrentState:0];
}

void sub_1000F7EF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 0.0;
  }
  else {
    double v2 = 1.0;
  }
  uint64_t v3 = [*(id *)(a1 + 32) currentMiddleView];
  [v3 setAlpha:v2];

  id v4 = [*(id *)(a1 + 32) bottomBar];
  [v4 setAlpha:v2];
}

void sub_1000F8CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000F8CE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained revealAudioRoutingDeviceListAnimated:1];
    id WeakRetained = v2;
  }
}

void sub_1000F8F2C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) bottomBar];
  [v1 setAlpha:1.0];
}

void sub_1000F903C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000F9058(uint64_t a1)
{
  id v2 = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [v2 bottomBar];
  [v2 _testing_finishedAnimatingToActiveCallState:v1];
}

void sub_1000FA3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1000FA404(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = *(double *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                            + 24)
                                                                + -1.0;
    if (*(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) <= 0.0)
    {
      id v5 = [WeakRetained alertCountDownTimer];
      [v5 invalidate];

      CGAffineTransform v6 = sub_1000D5130();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)CGAffineTransform v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "alertCountDownTimer invalidated, triggering alert", v9, 2u);
      }

      [v4 setAlertTriggeredByAutoCountdown:1];
      id v7 = objc_loadWeakRetained(v2);
      CGAffineTransform v8 = [v7 bottomBar];
      [v4 bottomBarActionPerformed:36 withCompletionState:1 fromBar:v8];

      [v4 setAlertTriggeredByAutoCountdown:0];
    }
  }
}

void sub_1000FAECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000FAEF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained audioCallControlsViewControllerDidTapVideoStreamingButton];
}

void sub_1000FB31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000FB338(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
  unsigned int v3 = [v2 isValid];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
    [v4 invalidate];

    [*(id *)(a1 + 32) setConfirmationTimeoutTimer:0];
  }
  id v5 = *(void **)(a1 + 32);

  return _[v5 resumeCallBufferTimer];
}

void sub_1000FB3B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
  unsigned int v3 = [v2 isValid];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) confirmationTimeoutTimer];
    [v4 invalidate];

    [*(id *)(a1 + 32) setConfirmationTimeoutTimer:0];
  }
  [*(id *)(a1 + 32) stopCallBufferTimer];
  id v5 = [*(id *)(a1 + 32) bufferSingleCallLabelView];

  if (v5)
  {
    CGAffineTransform v6 = [*(id *)(a1 + 32) bufferSingleCallLabelView];
    [v6 setAlpha:0.0];

    [*(id *)(a1 + 32) setBufferSingleCallLabelView:0];
  }
  [*(id *)(a1 + 32) stopMessagePlayback];
  +[PHSOSViewController releaseAllCallBufferDismissalAssertions];
  CFStringRef v10 = @"PHCallBufferCompletionReasonKey";
  id v7 = +[NSNumber numberWithInteger:1];
  uint64_t v11 = v7;
  CGAffineTransform v8 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];

  CGAffineTransform v9 = +[NSNotificationCenter defaultCenter];
  [v9 postNotificationName:@"PHCallBufferCompletionNotification" object:0 userInfo:v8];
}

void sub_1000FB538(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1000FB5F8;
  _OWORD v5[3] = &unk_1002CED28;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v4 dismissViewControllerAnimated:1 completion:v5];
  objc_destroyWeak(&v6);
}

void sub_1000FB5E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000FB5F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained restartCallBufferTimer];
}

void sub_1000FB948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  objc_destroyWeak(v16);
  _Block_object_dispose(&a16, 8);
  objc_destroyWeak((id *)(v17 - 40));
  _Unwind_Resume(a1);
}

void sub_1000FB970(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (([WeakRetained shouldPauseSOSCallBufferTimer] & 1) == 0
      && !--*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      id v4 = [v3 callBufferTimer];
      [v4 invalidate];

      [v3 setCallBufferTimer:0];
      id v5 = [v3 bufferSingleCallLabelView];

      if (v5)
      {
        id v6 = [v3 bufferSingleCallLabelView];
        [v6 setAlpha:0.0];

        [v3 setBufferSingleCallLabelView:0];
      }
      [v3 stopMessagePlayback];
      CFStringRef v10 = @"PHCallBufferCompletionReasonKey";
      id v7 = +[NSNumber numberWithInteger:0];
      uint64_t v11 = v7;
      CGAffineTransform v8 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];

      CGAffineTransform v9 = +[NSNotificationCenter defaultCenter];
      [v9 postNotificationName:@"PHCallBufferCompletionNotification" object:0 userInfo:v8];
    }
  }
}

void sub_1000FC560(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1000FC584(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setHidden:1];
    id WeakRetained = v2;
  }
}

BOOL sub_1000FD8C4()
{
  uint64_t v0 = +[UIScreen mainScreen];
  [v0 bounds];
  double v2 = v1;

  id v3 = +[UIScreen mainScreen];
  [v3 bounds];
  double v5 = v4;

  if (v2 >= v5) {
    double v6 = v2;
  }
  else {
    double v6 = v5;
  }
  return v6 > 1024.0;
}

void sub_1000FE0A8(uint64_t a1)
{
  unint64_t v2 = +[PHUIConfiguration inCallBottomBarSpacing];
  id v11 = [*(id *)(a1 + 32) callDisplayStyleManager];
  if ([v11 callDisplayStyle] == (id)3) {
    +[PHUIConfiguration ambientInCallControlSize];
  }
  else {
    +[PHBottomBarButtonConfiguration defaultHeight];
  }
  double v4 = v3;
  unint64_t v5 = +[PHUIConfiguration inCallBottomBarSpacing];
  double v6 = 30.0;
  if (v5 != 6)
  {
    unint64_t v7 = +[PHUIConfiguration inCallBottomBarSpacing];
    double v6 = 24.0;
    if (v7 == 3) {
      double v6 = 30.0;
    }
  }
  if (v2 == 1) {
    double v8 = 320.0;
  }
  else {
    double v8 = dbl_100285150[v2 == 2];
  }
  double v9 = v6 + v4 * 2.0;
  [*(id *)(a1 + 32) bottomMargin];
  qword_100326360 = *(void *)&v8;
  *(double *)&qword_100326368 = v9 + v10;
}

void sub_1000FE594(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallBottomBarSpacing];
  if (v1 - 1 > 5) {
    uint64_t v2 = 0x4041000000000000;
  }
  else {
    uint64_t v2 = qword_100285178[v1 - 1];
  }
  qword_100326378 = v2;
}

void sub_1000FE624(id a1)
{
  unint64_t v1 = +[PHUIConfiguration inCallBottomBarSpacing];
  uint64_t v2 = 0;
  if (v1 - 1 <= 5) {
    uint64_t v2 = qword_1002851A8[v1 - 1];
  }
  qword_100326388 = v2;
}

void sub_1001017A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100101820(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setCurrentState:*(void *)(a1 + 48) animated:*(unsigned __int8 *)(a1 + 56) animationCompletionBlock:*(void *)(a1 + 32)];
}

id sub_100104A84(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setUserInteractionEnabled:0];
}

void sub_100104C6C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) supplementalTopRightButton];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) supplementalTopLeftButton];
  [v3 setAlpha:0.0];
}

void sub_100105834(uint64_t a1)
{
  double v2 = (double)[*(id *)(a1 + 32) shouldShowUseRTTButton];
  id v3 = [*(id *)(a1 + 32) supplementalBottomRightButton];
  [v3 setAlpha:v2];

  id v4 = [*(id *)(a1 + 32) shouldShowUseRTTButton];
  id v5 = [*(id *)(a1 + 32) supplementalBottomRightButton];
  [v5 setEnabled:v4];
}

uint64_t sub_100106054(uint64_t a1)
{
  [*(id *)(a1 + 32) prepareButtonsForAnimationEnd];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_1001064AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100106D18(id *a1)
{
  id v2 = [a1[4] action];
  if (v2 == (id)30)
  {
    double v3 = 1.0;
    if ([a1[5] shouldShowUseRTTButton]) {
      double v4 = 1.0;
    }
    else {
      double v4 = 0.0;
    }
  }
  else
  {
    double v4 = 1.0;
    double v3 = 0.0;
  }
  id v5 = [a1[5] supplementalBottomLeftButton];
  [v5 setAlpha:v3];

  double v6 = [a1[5] supplementalBottomLeftButton];
  [v6 setEnabled:v2 == (id)30];

  [a1[6] setAlpha:0.0];
  [a1[4] setAlpha:v4];
  id v7 = a1[4];

  return [v7 setEnabled:v4 != 0.0];
}

uint64_t sub_100106DF4(uint64_t result)
{
  if (*(void *)(result + 40))
  {
    uint64_t v1 = result;
    [*(id *)(result + 32) removeFromSuperview];
    id v2 = *(uint64_t (**)(void))(*(void *)(v1 + 40) + 16);
    return v2();
  }
  return result;
}

id sub_1001075B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_1001075C0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) currentState] == *(id *)(a1 + 56)) {
    [*(id *)(a1 + 40) removeFromSuperview];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    double v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1001077C4(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = [*(id *)(a1 + 32) sideButtonLeft];
    [v2 removeFromSuperview];
  }
}

uint64_t sub_100107810(uint64_t a1, int a2)
{
  if (a2)
  {
    double v3 = [*(id *)(a1 + 32) mainLeftButton];
    [v3 removeFromSuperview];
  }
  double v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v4();
}

id sub_100107AE8(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  id v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

uint64_t sub_100107B2C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) currentState] == *(id *)(a1 + 56)) {
    [*(id *)(a1 + 40) removeFromSuperview];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    double v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_100107DA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setUsesLowerButtons:0];
}

void sub_100107DB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) sideButtonLeft];
  double v3 = [*(id *)(a1 + 32) mainLeftButton];
  double v4 = [*(id *)(a1 + 32) sideButtonRight];
  [*(id *)(a1 + 32) setMainLeftButton:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) setSideButtonRight:*(void *)(a1 + 48)];
  [*(id *)(a1 + 32) setSideButtonLeft:*(void *)(a1 + 56)];
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 120)];
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 144)];
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 136)];
  id v5 = [*(id *)(a1 + 32) buttonLayoutConstraints];

  if (v5)
  {
    double v6 = *(void **)(a1 + 32);
    id v7 = [v6 buttonLayoutConstraints];
    [v6 removeConstraints:v7];
  }
  double v8 = [*(id *)(a1 + 32) constraintsForState:17];
  [*(id *)(a1 + 32) setButtonLayoutConstraints:v8];

  double v9 = *(void **)(a1 + 32);
  double v10 = [v9 buttonLayoutConstraints];
  [v9 addConstraints:v10];

  [*(id *)(a1 + 32) setNeedsLayout];
  [*(id *)(a1 + 32) layoutIfNeeded];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100108084;
  v22[3] = &unk_1002D0658;
  id v23 = v2;
  id v24 = v3;
  id v25 = v4;
  id v26 = *(id *)(a1 + 56);
  id v27 = *(id *)(a1 + 48);
  id v28 = *(id *)(a1 + 40);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1001080F8;
  v16[3] = &unk_1002D0A88;
  uint64_t v11 = *(void *)(a1 + 32);
  CFStringRef v12 = *(void **)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  v16[4] = v11;
  id v17 = v23;
  id v18 = v25;
  id v19 = v24;
  id v20 = v12;
  id v13 = v24;
  id v14 = v25;
  id v15 = v23;
  +[UIView animateWithDuration:v22 animations:v16 completion:0.25];
}

id sub_100108084(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  [*(id *)(a1 + 40) setAlpha:0.0];
  [*(id *)(a1 + 48) setAlpha:0.0];
  [*(id *)(a1 + 56) setAlpha:1.0];
  [*(id *)(a1 + 64) setAlpha:1.0];
  id v2 = *(void **)(a1 + 72);

  return [v2 setAlpha:1.0];
}

uint64_t sub_1001080F8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) currentState] == *(id *)(a1 + 72))
  {
    [*(id *)(a1 + 40) removeFromSuperview];
    [*(id *)(a1 + 48) removeFromSuperview];
    [*(id *)(a1 + 56) removeFromSuperview];
  }
  uint64_t result = *(void *)(a1 + 64);
  if (result)
  {
    double v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100108948(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainLeftButton];
  [v2 setAlpha:0.0];

  double v3 = [*(id *)(a1 + 32) supplementalTopLeftButton];
  [v3 setAlpha:0.0];

  id v4 = [*(id *)(a1 + 32) supplementalTopRightButton];
  [v4 setAlpha:0.0];
}

uint64_t sub_1001089D4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) currentState] == *(id *)(a1 + 64))
  {
    [*(id *)(a1 + 40) removeFromSuperview];
    [*(id *)(a1 + 48) removeFromSuperview];
    id v2 = [*(id *)(a1 + 32) mainLeftButton];
    [v2 removeFromSuperview];

    double v3 = [*(id *)(a1 + 32) mainRightButton];
    [*(id *)(a1 + 32) setMainLeftButton:v3];

    [*(id *)(a1 + 32) setMainRightButton:0];
    id v4 = [*(id *)(a1 + 32) supplementalBottomRightButton];
    [v4 removeFromSuperview];

    id v5 = [*(id *)(a1 + 32) useRTTButton];
    [*(id *)(a1 + 32) setSupplementalBottomRightButton:v5];

    double v6 = (double)[*(id *)(a1 + 32) shouldShowUseRTTButton];
    id v7 = [*(id *)(a1 + 32) supplementalBottomRightButton];
    [v7 setAlpha:v6];

    double v8 = *(void **)(a1 + 32);
    double v9 = [v8 supplementalBottomRightButton];
    [v8 addSubview:v9];

    double v10 = *(void **)(a1 + 32);
    uint64_t v11 = [v10 buttonLayoutConstraints];
    [v10 removeConstraints:v11];

    CFStringRef v12 = [*(id *)(a1 + 32) constraintsForState:*(void *)(a1 + 64)];
    [*(id *)(a1 + 32) setButtonLayoutConstraints:v12];

    id v13 = *(void **)(a1 + 32);
    id v14 = [v13 buttonLayoutConstraints];
    [v13 addConstraints:v14];

    [*(id *)(a1 + 32) setNeedsLayout];
    [*(id *)(a1 + 32) layoutIfNeeded];
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    int v16 = *(uint64_t (**)(void))(result + 16);
    return v16();
  }
  return result;
}

id sub_100109A70(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) supplementalTopLeftButton];
  [v2 setAlpha:0.0];

  double v3 = [*(id *)(a1 + 32) supplementalTopRightButton];
  [v3 setAlpha:0.0];

  id v4 = *(void **)(a1 + 40);

  return [v4 setTitle:0 forState:0];
}

void sub_100109AE4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) supplementalTopLeftButton];
  [v2 removeFromSuperview];

  id v3 = [*(id *)(a1 + 32) supplementalTopRightButton];
  [v3 removeFromSuperview];
}

id sub_100109B4C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) currentState] == *(id *)(a1 + 64))
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100109D1C;
    _OWORD v12[3] = &unk_1002CD518;
    void v12[4] = *(void *)(a1 + 32);
    +[UIView animateWithDuration:0x20000 delay:v12 options:*(void *)(a1 + 56) animations:0.25 completion:0.50999999];
    [*(id *)(a1 + 40) removeFromSuperview];
    [*(id *)(a1 + 48) removeFromSuperview];
    id v2 = [*(id *)(a1 + 32) makeButtonWithType:15 title:0 image:0 color:0 font:0 fontColor:0];
    [*(id *)(a1 + 32) setMainLeftButton:v2];

    id v3 = *(void **)(a1 + 32);
    id v4 = [v3 mainLeftButton];
    [v3 addSubview:v4];

    id v5 = *(void **)(a1 + 32);
    double v6 = [v5 buttonLayoutConstraints];
    [v5 removeConstraints:v6];

    id v7 = [*(id *)(a1 + 32) constraintsForState:*(void *)(a1 + 64)];
    [*(id *)(a1 + 32) setButtonLayoutConstraints:v7];

    double v8 = *(void **)(a1 + 32);
    double v9 = [v8 buttonLayoutConstraints];
    [v8 addConstraints:v9];

    [*(id *)(a1 + 32) setNeedsLayout];
    return [*(id *)(a1 + 32) layoutIfNeeded];
  }
  else
  {
    uint64_t v11 = *(uint64_t (**)(void))(*(void *)(a1 + 56) + 16);
    return (id)v11();
  }
}

id sub_100109D1C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 136) setAlpha:1.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 144);

  return [v2 setAlpha:1.0];
}

NSArray *__cdecl sub_10010A0AC(id a1, UIButton *a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v2;
    id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  }
  else
  {
    id v3 = &__NSArray0__struct;
  }

  return (NSArray *)v3;
}

void sub_10010B03C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithInterval:1.0];
  id v2 = (void *)qword_100326398;
  qword_100326398 = (uint64_t)v1;
}

id sub_10010B2CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 addObject:*(void *)(a1 + 40)];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 addObserver:*(void *)(a1 + 40) selector:*(void *)(a1 + 48) name:@"PHIntervalTimerNotification" object:*(void *)(a1 + 32)];

  id v4 = *(void **)(a1 + 32);

  return [v4 _createTimerIfNecessary];
}

id sub_10010B3FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 removeObject:*(void *)(a1 + 40)];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 removeObserver:*(void *)(a1 + 40) name:@"PHIntervalTimerNotification" object:*(void *)(a1 + 32)];

  id v4 = *(void **)(a1 + 32);

  return _[v4 _invalidateTimerIfNecessary];
}

void sub_10010B4FC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) timer];
  [v1 fire];
}

void sub_10010B5C8(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Pausing interval timer", v4, 2u);
  }

  id v3 = [*(id *)(a1 + 32) timer];
  [v3 invalidate];
}

void sub_10010B6D4(uint64_t a1)
{
  id v2 = sub_1000D5130();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Resuming interval timer", v6, 2u);
  }

  [*(id *)(a1 + 32) _createTimerIfNecessary];
  id v3 = [*(id *)(a1 + 32) timer];
  unsigned int v4 = [v3 isValid];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) timer];
    [v5 fire];
  }
}

void sub_10010C018(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contentView];
  [v1 setAlpha:0.0];
}

id *sub_10010C060(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    id v3 = [result[4] contentView];
    [v3 removeFromSuperview];

    id v4 = v2[4];
    id v5 = v2[5];
    uint64_t v6 = *((unsigned __int8 *)v2 + 48);
    return (id *)[v4 displayContentView:v5 animated:v6];
  }
  return result;
}

id sub_10010C3FC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isContentViewRotatingOrResizing];
  if ((result & 1) == 0)
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 16);
    return [v3 setAlpha:1.0];
  }
  return result;
}

id sub_10010C700()
{
  if (qword_1003263B0 != -1) {
    dispatch_once(&qword_1003263B0, &stru_1002D0C88);
  }
  uint64_t v0 = (void *)qword_1003263A8;

  return v0;
}

void sub_10010C754(id a1)
{
  qword_1003263A8 = CUTWeakLinkClass();
  if (!qword_1003263A8)
  {
    id v1 = sub_1000D5130();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "[WARN] Could not find class RTTUIConversationViewController; RTTUI may have failed to link.",
        v2,
        2u);
    }
  }
}

id sub_10010C7DC()
{
  if (qword_1003263C0 != -1) {
    dispatch_once(&qword_1003263C0, &stru_1002D0CA8);
  }
  uint64_t v0 = (void *)qword_1003263B8;

  return v0;
}

void sub_10010C830(id a1)
{
  qword_1003263B8 = CUTWeakLinkClass();
  if (!qword_1003263B8)
  {
    id v1 = sub_1000D5130();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "[WARN] Could not find class RTTUIUtilities; RTTUI.framework may have failed to link.",
        v2,
        2u);
    }
  }
}

void sub_10010DBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10010DC10(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_10010DCCC;
  _OWORD v5[3] = &unk_1002CDCA8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_10010DCCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained button];
  [v2 setControlImage:v1];
}

void sub_10010E6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10010E6DC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v4 = [WeakRetained controlsView];
    [v4 setSelectedState:a2 == 2 forControlType:19];

    id WeakRetained = v5;
  }
}

void sub_10010F0CC(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [a2 imageWithRenderingMode:2];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

void sub_100112558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 192));
  _Unwind_Resume(a1);
}

void sub_100112580(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained stopVoiceLoopButtonPressed];
}

id sub_10011310C(uint64_t a1, void *a2)
{
  id result = [a2 status];
  if (result == 4)
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = qword_10032CBD0;
    return [v4 finishedSubTest:@"AwaitIncomingCall" forTest:v5];
  }
  return result;
}

void sub_1001141F0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) carSessionStatus];
  [v1 waitForSessionInitialization];
}

BOOL sub_100114234(id a1)
{
  id v1 = (void *)qword_1003263C8;
  if (qword_1003263C8 || (id v1 = (void *)CUTWeakLinkClass(), (qword_1003263C8 = (uint64_t)v1) != 0))
  {
    return [v1 canSendText];
  }
  else
  {
    id v3 = sub_1000D5130();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001EC52C(v3);
    }

    return 0;
  }
}

id sub_100116088(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  +[UIView setAnimationsEnabled:0];
  [*(id *)(a1 + 32) setCurrentMode:1];
  uint64_t v2 = [*(id *)(a1 + 32) galleryView];
  [v2 reloadPhoneCallData];

  [*(id *)(a1 + 32) updateButtonsViewState];
  id v3 = [*(id *)(a1 + 32) view];
  [v3 setNeedsLayout];

  id v4 = [*(id *)(a1 + 32) view];
  [v4 layoutIfNeeded];

  return +[UIView setAnimationsEnabled:1];
}

id *sub_100116144(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] setCurrentMode:1];
  }
  return result;
}

id sub_100116158(uint64_t a1)
{
  +[UIView setAnimationsEnabled:0];
  [*(id *)(a1 + 32) setCurrentMode:0];
  uint64_t v2 = [*(id *)(a1 + 32) galleryView];
  [v2 reloadPhoneCallData];

  [*(id *)(a1 + 32) updateButtonsViewState];
  id v3 = [*(id *)(a1 + 32) view];
  [v3 setNeedsLayout];

  id v4 = [*(id *)(a1 + 32) view];
  [v4 layoutIfNeeded];

  return +[UIView setAnimationsEnabled:1];
}

void sub_100116EBC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) buttonsView];
  [v1 updateButtonsForCallModelState];
}

void sub_100117170(id a1)
{
  off_1003263D0 = (_UNKNOWN *)IMWeakLinkSymbol();
}

void sub_100117ADC(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v3 = +[NSBundle mainBundle];
  uint64_t v2 = [v3 localizedStringForKey:@"CARPLAY_REPLY_TEXT_MESSAGE" value:&stru_1002D6110 table:@"PHCarPlay"];
  [v1 handleAlertControllerSendMessageResponse:v2];
}

void sub_100117B60(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v4 = [v1 replyWithMessageStore];
  uint64_t v2 = [v4 cannedRepliesForSending];
  id v3 = [v2 objectAtIndexedSubscript:0];
  [v1 handleAlertControllerSendMessageResponse:v3];
}

void sub_100117BE4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v4 = [v1 replyWithMessageStore];
  uint64_t v2 = [v4 cannedRepliesForSending];
  id v3 = [v2 objectAtIndexedSubscript:1];
  [v1 handleAlertControllerSendMessageResponse:v3];
}

id sub_100117C68(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleAlertControllerSendMessageResponse:0];
}

void sub_100118670(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) buttonsView];
  [v1 updateButtonsForCallModelState];
}

BOOL sub_100118D3C(id a1, TUCall *a2)
{
  return [(TUCall *)a2 isEmergency];
}

id sub_100119CF8()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager) isTranscriptionEnabled];
}

void *sub_100119D58()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager);
  id v2 = v1;
  return v1;
}

char *sub_100119D88(void *a1, uint64_t a2, uint64_t a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_messagesChangedPublisher;
  sub_10011EB3C(&qword_100320BC0);
  swift_allocObject();
  double v9 = v3;
  *(void *)&v3[v8] = PassthroughSubject.init()();
  *(void *)&v9[OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager] = a1;
  double v10 = &v9[OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_onVoicemailsChanged];
  *(void *)double v10 = a2;
  *((void *)v10 + 1) = a3;
  id v11 = a1;
  swift_retain();

  v17.receiver = v9;
  v17.super_class = ObjectType;
  uint64_t v12 = [(char *)[super init]];
  id v13 = *(void **)&v12[OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager];
  id v14 = v12;
  id v15 = v13;
  [v15 setDelegate:v14];

  swift_release();
  return v14;
}

uint64_t sub_100119F0C(uint64_t a1, char a2)
{
  uint64_t v5 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v8, 1, 1, v9);
  type metadata accessor for VoicemailActor();
  id v10 = v2;
  swift_bridgeObjectRetain();
  uint64_t inited = swift_initStaticObject();
  uint64_t v12 = sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = inited;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v10;
  *(void *)(v13 + 40) = a1;
  *(unsigned char *)(v13 + 48) = a2;
  sub_10012D67C();
  return swift_release();
}

uint64_t sub_10011A054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 25) = a6;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a5;
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011A120, v8, v7);
}

uint64_t sub_10011A120()
{
  sub_10012026C();
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v2 = *(void *)(v0 + 40);
  (*(void (**)(void))(*(void *)(v0 + 32) + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_onVoicemailsChanged))();
  *(void *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + 24) = v1;
  PassthroughSubject.send(_:)();
  sub_1001202F0();
  return v3();
}

uint64_t sub_10011A1B4()
{
  sub_100120364();
  *(void *)(v1 + 40) = v0;
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_10011A268()
{
  id v23 = v0;
  p_super_class = &v0[2].super_class;
  id v2 = [*(id *)((char *)v0[2].super_class+ OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager) allVoicemails];
  sub_10011EC80();
  unint64_t v3 = sub_1001204A4();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    id v22 = &_swiftEmptyArrayStorage;
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      id v8 = v7;
      ++v6;
      uint64_t v9 = (objc_class *)type metadata accessor for VisualMessage();
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      *(void *)&v10[OBJC_IVAR___MPVisualMessage_vmMessage] = v8;
      v0[1].receiver = v10;
      v0[1].super_class = v9;
      [super init];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v4 != v6);
    unint64_t v11 = (unint64_t)v22;
    swift_bridgeObjectRelease();
    p_super_class = &v0[2].super_class;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = (unint64_t)&_swiftEmptyArrayStorage;
  }
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10011EC48(v12, (uint64_t)qword_10032CC18);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint64_t *)(p_super_class - 1);
    int v16 = (uint8_t *)swift_slowAlloc();
    id v22 = (void *)sub_100120414();
    *(_DWORD *)int v16 = 136315138;
    type metadata accessor for VisualMessage();
    swift_bridgeObjectRetain();
    uint64_t v17 = Array.description.getter();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *uint64_t v15 = sub_1001412B0(v17, v19, (uint64_t *)&v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Fetched %s from VMD", v16, 0xCu);
    sub_100120370();
    sub_100120278();
    sub_100120278();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain();
  if (v11 >> 62)
  {
    sub_10011EB3C(&qword_100320BC8);
    _bridgeCocoaArray<A>(_:)();
    sub_100120554();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_10012057C();
  return v21(v20);
}

void *sub_10011A60C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = &_swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = *(id *)&v5[OBJC_IVAR___MPVisualMessage_vmMessage];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return &_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10011A74C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = &_swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    unint64_t v11 = &_swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = (objc_class *)type metadata accessor for VisualMessage();
      id v8 = (char *)objc_allocWithZone(v7);
      *(void *)&v8[OBJC_IVAR___MPVisualMessage_vmMessage] = v6;
      v10.receiver = v8;
      v10.super_class = v7;
      id v9 = v6;
      [super init];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return v11;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10011A944(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011AA04, v4, v3);
}

uint64_t sub_10011AA04()
{
  sub_100120364();
  uint64_t v1 = *(void **)(v0 + 24);
  *(void *)(v0 + 32) = _Block_copy(*(const void **)(v0 + 16));
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10011AAA4;
  return sub_10011A1B4();
}

uint64_t sub_10011AAA4()
{
  sub_10012026C();
  sub_1001201F8();
  id v2 = *(const void **)(v1 + 32);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *v0;
  sub_100120354();
  void *v5 = v4;
  swift_task_dealloc();

  sub_10011EB3C(&qword_100320BC8);
  Array._bridgeToObjectiveC()();
  sub_1001203A8();
  uint64_t v6 = sub_1001205E0();
  v7(v6);

  _Block_release(v2);
  sub_1001202F0();
  return v8();
}

uint64_t sub_10011ABCC()
{
  sub_100120364();
  sub_1001205C8(v0);
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

#error "10011AD48: call analysis failed (funcsize=87)"

uint64_t sub_10011AE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011AECC, v5, v4);
}

uint64_t sub_10011AECC()
{
  sub_10012026C();
  *(void *)(v0 + 40) = sub_100120648();
  sub_10011EB3C(&qword_100320BC8);
  uint64_t v2 = sub_1001204A4();
  sub_100120548(v2);
  id v3 = v1;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10012053C(v4);
  void *v5 = v6;
  v5[1] = sub_1001201EC;
  sub_1001203F8();
  return sub_10011ABCC();
}

uint64_t sub_10011AF7C()
{
  sub_100120364();
  sub_1001205C8(v0);
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

#error "10011B0F8: call analysis failed (funcsize=87)"

uint64_t sub_10011B1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011B27C, v5, v4);
}

uint64_t sub_10011B27C()
{
  sub_10012026C();
  *(void *)(v0 + 40) = sub_100120648();
  sub_10011EB3C(&qword_100320BC8);
  uint64_t v2 = sub_1001204A4();
  sub_100120548(v2);
  id v3 = v1;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10012053C(v4);
  void *v5 = v6;
  v5[1] = sub_10011B32C;
  sub_1001203F8();
  return sub_10011AF7C();
}

uint64_t sub_10011B32C()
{
  sub_10012026C();
  sub_1001201F8();
  uint64_t v2 = *(void (***)(void))(v1 + 40);
  id v3 = *(void **)(v1 + 32);
  uint64_t v4 = *v0;
  sub_100120354();
  void *v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  v2[2](v2);
  _Block_release(v2);
  sub_1001202F0();
  return v6();
}

uint64_t sub_10011B454()
{
  sub_100120364();
  sub_1001205C8(v0);
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

#error "10011B5D0: call analysis failed (funcsize=87)"

uint64_t sub_10011B690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011B754, v5, v4);
}

uint64_t sub_10011B754()
{
  sub_10012026C();
  *(void *)(v0 + 40) = sub_100120648();
  sub_10011EB3C(&qword_100320BC8);
  uint64_t v2 = sub_1001204A4();
  sub_100120548(v2);
  id v3 = v1;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10012053C(v4);
  void *v5 = v6;
  v5[1] = sub_1001201EC;
  sub_1001203F8();
  return sub_10011B454();
}

uint64_t sub_10011B804()
{
  sub_100120364();
  sub_1001205C8(v0);
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

#error "10011B980: call analysis failed (funcsize=87)"

uint64_t sub_10011BA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011BB04, v5, v4);
}

uint64_t sub_10011BB04()
{
  sub_10012026C();
  *(void *)(v0 + 40) = sub_100120648();
  sub_10011EB3C(&qword_100320BC8);
  uint64_t v2 = sub_1001204A4();
  sub_100120548(v2);
  id v3 = v1;
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10012053C(v4);
  void *v5 = v6;
  v5[1] = sub_1001201EC;
  sub_1001203F8();
  return sub_10011B804();
}

uint64_t sub_10011BBB4()
{
  sub_100120364();
  void v1[5] = v2;
  v1[6] = v0;
  v1[7] = type metadata accessor for MessageID.Value(0);
  v1[8] = swift_task_alloc();
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10011BC98()
{
  sub_1001204EC();
  uint64_t v1 = (void **)(v0 + 40);
  sub_10011F2E8(*(void *)(v0 + 40) + OBJC_IVAR___MPMessageID_value, *(void *)(v0 + 64));
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = *(void **)(v0 + 64);
  if (EnumCaseMultiPayload == 1)
  {
    sub_10011F34C((uint64_t)v3);
    if (qword_100320550 != -1) {
      swift_once();
    }
    uint64_t v4 = *v1;
    uint64_t v5 = type metadata accessor for Logger();
    sub_10011EC48(v5, (uint64_t)qword_10032CC18);
    id v6 = v4;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *v1;
    if (v9)
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v11 = 138412290;
      *(void *)(v0 + 32) = v10;
      id v12 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v19 = v10;

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Incorrect id passed into VisualVoicemailManager %@, privacy: .public) but expected a VisualMessage ID!", v11, 0xCu);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }
    else
    {
    }
  }
  else
  {
    id v13 = [*(id *)(*(void *)(v0 + 48)+ OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager) voicemailWithIdentifier:*v3];
    if (v13)
    {
      os_log_type_t v14 = (objc_class *)type metadata accessor for VisualMessage();
      uint64_t v15 = (char *)objc_allocWithZone(v14);
      *(void *)&v15[OBJC_IVAR___MPVisualMessage_vmMessage] = v13;
      *(void *)(v0 + 16) = v15;
      *(void *)(v0 + 24) = v14;
      [super init];
    }
  }
  swift_task_dealloc();
  uint64_t v16 = sub_10012057C();
  return v17(v16);
}

uint64_t sub_10011BF2C(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6)
{
  BOOL v9 = _Block_copy(aBlock);
  sub_10012056C();
  uint64_t v10 = (void *)swift_allocObject();
  _DWORD v10[2] = a3;
  _OWORD v10[3] = v9;
  v10[4] = a1;
  id v11 = a3;
  id v12 = a1;

  return sub_1001BB654(a6, (uint64_t)v10);
}

uint64_t sub_10011BFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011C06C, v5, v4);
}

uint64_t sub_10011C06C()
{
  sub_10012026C();
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)(v0 + 40) = _Block_copy(*(const void **)(v0 + 24));
  id v3 = v2;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  void *v5 = v0;
  v5[1] = sub_10011C124;
  return sub_10011BBB4();
}

uint64_t sub_10011C124()
{
  sub_10012026C();
  uint64_t v2 = v1;
  sub_1001201F8();
  id v4 = (void (**)(void, void))v3[5];
  uint64_t v5 = (void *)v3[4];
  id v6 = (void *)v3[2];
  uint64_t v7 = *v0;
  sub_100120354();
  *os_log_type_t v8 = v7;
  swift_task_dealloc();

  v4[2](v4, v2);
  _Block_release(v4);
  swift_unknownObjectRelease();
  sub_1001202F0();
  return v9();
}

uint64_t sub_10011C258()
{
  sub_100120364();
  v1[10] = v2;
  v1[11] = v0;
  v1[9] = v3;
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  sub_100120448();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10011C310()
{
  sub_100120498();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[9];
  uint64_t v3 = *(void **)(v0[11] + OBJC_IVAR____TtC13InCallService22VisualVoicemailManager_visualVoicemailManager);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  v0[6] = sub_10011F230;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10011C504;
  v0[5] = &unk_1002D1380;
  uint64_t v5 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  id v6 = [v3 voicemailsPassingTest:v5];
  _Block_release(v5);
  sub_10011EC80();
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10011A74C(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10012057C();
  return v9(v8);
}

uint64_t sub_10011C478(void *a1, uint64_t (*a2)(id, uint64_t))
{
  uint64_t v4 = (objc_class *)type metadata accessor for VisualMessage();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR___MPVisualMessage_vmMessage] = a1;
  v10.receiver = v5;
  v10.super_class = v4;
  id v6 = a1;
  [super init];
  LOBYTE(a2) = a2(v7, v8);

  return a2 & 1;
}

uint64_t sub_10011C504(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_10011C5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_10018B2D8();
  type metadata accessor for VoicemailActor();
  sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10011C6B0, v5, v4);
}

uint64_t sub_10011C6B0()
{
  sub_10012026C();
  uint64_t v1 = *(const void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v3 = _Block_copy(*(const void **)(v0 + 16));
  *(void *)(v0 + 40) = _Block_copy(v1);
  uint64_t v4 = swift_allocObject();
  *(void *)(sub_100120548(v4) + 16) = v3;
  id v5 = v2;
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10012053C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_10011C798;
  return sub_10011C258();
}

uint64_t sub_10011C798()
{
  sub_10012026C();
  sub_1001201F8();
  uint64_t v2 = (void *)v1[6];
  uint64_t v3 = (const void *)v1[5];
  uint64_t v4 = (void *)v1[4];
  uint64_t v5 = *v0;
  sub_100120354();
  void *v6 = v5;
  swift_task_dealloc();
  swift_release();

  sub_10011EB3C(&qword_100320BC8);
  Array._bridgeToObjectiveC()();
  sub_1001203A8();
  uint64_t v7 = sub_1001205E0();
  v8(v7);

  _Block_release(v3);
  sub_1001202F0();
  return v9();
}

void sub_10011C8DC()
{
}

id UserFeedbackViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_10011C9B4(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  sub_100120524();
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10011EC48(v7, (uint64_t)qword_10032CC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, v4);
  id v8 = v1;
  BOOL v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_getObjectType();
    uint64_t v12 = _typeName(_:qualified:)();
    uint64_t v14 = sub_1001412B0(v12, v13, &v23);
    sub_100120608(v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    Notification.name.getter();
    type metadata accessor for Name(0);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v17 = sub_1001412B0(v15, v16, &v23);
    sub_100120608(v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1001205F4();
    v19(v18);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s is handling %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {

    uint64_t v20 = sub_1001205F4();
    v21(v20);
  }

  return sub_100119F0C(0, 3);
}

uint64_t sub_10011CD28(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10011EC48(v8, (uint64_t)qword_10032CC18);
  swift_bridgeObjectRetain_n();
  id v9 = v4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v10 = v9;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v17 = v12;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = sub_100120414();
    *(_DWORD *)uint64_t v13 = 136316162;
    swift_getObjectType();
    uint64_t v14 = _typeName(_:qualified:)();
    sub_1001412B0(v14, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 18) = 2048;
    if (a3)
    {
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 28) = 2048;
    if (a4)
    {
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 38) = 2048;
    if (a2)
    {
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v17, "%s voicemailsDidChangeInitial: %{BOOL}d added: %ld, deleted: %ld, updated: %ld", (uint8_t *)v13, 0x30u);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return sub_100119F0C(0, 3);
}

void sub_10011D39C(const char *a1)
{
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10011EC48(v3, (uint64_t)qword_10032CC18);
  id v9 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = sub_100120414();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getObjectType();
    uint64_t v7 = _typeName(_:qualified:)();
    sub_1001412B0(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
}

uint64_t sub_10011D5B4()
{
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001201F0;
  return sub_10011ABCC();
}

uint64_t sub_10011D684()
{
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001201F0;
  return sub_10011AF7C();
}

uint64_t sub_10011D754(void *a1)
{
  sub_10011EB3C(&qword_100320BC8);
  uint64_t v2 = sub_1001204A4();
  id v3 = a1;
  sub_10011D8A4(v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10011D7D4()
{
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001201F0;
  return sub_10011B454();
}

uint64_t sub_10011D8A4(uint64_t a1)
{
  uint64_t v4 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v4 - 8, v5);
  sub_100120524();
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_10011EB80(v2, 1, 1, v6);
  type metadata accessor for VoicemailActor();
  id v7 = v1;
  swift_bridgeObjectRetain();
  uint64_t inited = swift_initStaticObject();
  uint64_t v9 = sub_10011E3C8(&qword_100320BE0, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
  uint64_t v10 = (void *)swift_allocObject();
  _DWORD v10[2] = inited;
  _OWORD v10[3] = v9;
  v10[4] = v7;
  void v10[5] = a1;
  sub_10012D67C();
  return swift_release();
}

uint64_t sub_10011D9D0()
{
  type metadata accessor for VoicemailActor();
  swift_initStaticObject();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001201F0;
  return sub_10011B804();
}

void *variable initialization expression of AudioControlService.cancellables()
{
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10011DAAC()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_100120470();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_10011DB1C(int a1, int a2)
{
  return a1 == a2;
}

BOOL sub_10011DB28(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_10011DB34(char a1, char a2)
{
  return a1 == a2;
}

Swift::Int sub_10011DB4C(Swift::UInt a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_10011DB94(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_10011DBDC(Swift::UInt32 a1)
{
  return Hasher._finalize()();
}

void sub_10011DC24(int a1, Swift::UInt32 a2)
{
}

void sub_10011DC4C(int a1, Swift::UInt a2)
{
}

void sub_10011DC6C(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_10011DC9C(uint64_t a1, unsigned __int8 a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_10011DCE0(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_10011DD24(uint64_t a1, Swift::UInt32 a2)
{
  return Hasher._finalize()();
}

Swift::Bool __swiftcall AudioCallBackgroundGradientViewController._canShowWhileLocked()()
{
  return 1;
}

InCallService::UniqueAddress __swiftcall UniqueAddress.init()()
{
  return 0;
}

uint64_t variable initialization expression of PosterSnapshotService.snapshots()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for VisualVoicemailManager()
{
  return self;
}

void type metadata accessor for TUCallStatus(uint64_t a1)
{
}

void type metadata accessor for PHDismissalAssertionReason(uint64_t a1)
{
}

void type metadata accessor for SBSUIInCallTransitionAnalyticsSource(uint64_t a1)
{
}

__n128 initializeWithTake for StarView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for VMTranscriptConfidenceRating(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for CLEEDRequestType(uint64_t a1)
{
}

void type metadata accessor for CLEEDRequestState(uint64_t a1)
{
}

void type metadata accessor for ICSPosterSource(uint64_t a1)
{
}

uint64_t sub_10011DE88()
{
  return sub_10011FFA8(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10011DEB8(uint64_t a1, id *a2)
{
  return sub_10012003C(a1, a2);
}

uint64_t sub_10011DED0(uint64_t a1, id *a2)
{
  return sub_10011FE88(a1, a2) & 1;
}

NSString sub_10011DEEC@<X0>(void *a1@<X8>)
{
  NSString result = sub_1001200FC();
  *a1 = result;
  return result;
}

Swift::Int sub_10011DF14()
{
  return sub_10011DBDC(*v0);
}

void sub_10011DF1C(int a1)
{
  sub_10011DC24(a1, *v1);
}

Swift::Int sub_10011DF24(uint64_t a1)
{
  return sub_10011DD24(a1, *v1);
}

uint64_t sub_10011DF2C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10011DF60(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_10011DF60(uint64_t result)
{
  return result;
}

uint64_t sub_10011DF7C()
{
  uint64_t v1 = sub_10012058C();
  uint64_t result = FactoryOutcome.rawValue.getter(v1, v2);
  _DWORD *v0 = result;
  return result;
}

uint64_t sub_10011DFA4()
{
  uint64_t v1 = sub_1001202AC();
  uint64_t result = FactoryOutcome.rawValue.getter(v1, v2);
  uint64_t *v0 = result;
  return result;
}

void sub_10011DFCC(uint64_t a1@<X8>)
{
  sub_10011E000();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_10011E00C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10011E04C()
{
  sub_100120678();
  sub_1001204C8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10011E084()
{
  sub_100120678();
  sub_100120628();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10011E0E0()
{
  return sub_10011DAAC() & 1;
}

uint64_t sub_10011E104()
{
  return sub_10015B1C0();
}

NSNumber sub_10011E110()
{
  return j___s12CoreGraphics7CGFloatV10FoundationE19_bridgeToObjectiveCSo8NSNumberCyF();
}

void sub_10011E120(double *a1@<X8>)
{
  *a1 = j___s12CoreGraphics7CGFloatV10FoundationE36_unconditionallyBridgeFromObjectiveCyACSo8NSNumberCSgFZ();
}

BOOL sub_10011E148(uint64_t *a1, uint64_t *a2)
{
  return sub_10011DB28(*a1, *a2);
}

BOOL sub_10011E154(int *a1, int *a2)
{
  return sub_10011DB1C(*a1, *a2);
}

uint64_t sub_10011E160()
{
  return sub_10011E00C(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10011E194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10011E1C0()
{
  sub_10011E3C8(&qword_100320E20, type metadata accessor for Name);
  sub_10011E3C8(&qword_100320E28, type metadata accessor for Name);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E27C()
{
  sub_10011E3C8(&qword_100320AF0, type metadata accessor for SBSUIInCallTransitionAnalyticsSource);
  sub_10011E3C8(&qword_100320AF8, type metadata accessor for SBSUIInCallTransitionAnalyticsSource);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E338()
{
  return sub_10011E3C8(&qword_100320A48, type metadata accessor for SBSUIInCallTransitionAnalyticsSource);
}

uint64_t sub_10011E380()
{
  return sub_10011E3C8(&qword_100320A50, type metadata accessor for SBSUIInCallTransitionAnalyticsSource);
}

uint64_t sub_10011E3C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011E410()
{
  return sub_10011E3C8(&qword_100320A58, type metadata accessor for SBSUIInCallTransitionAnalyticsSource);
}

uint64_t sub_10011E458()
{
  sub_10011E3C8(&qword_100321A40, type metadata accessor for STBackgroundActivityIdentifier);
  sub_10011E3C8(&qword_100320DF0, type metadata accessor for STBackgroundActivityIdentifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E514()
{
  sub_10011E3C8(&qword_100320E30, type metadata accessor for UIContentSizeCategory);
  sub_10011E3C8(&qword_100320E38, type metadata accessor for UIContentSizeCategory);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E5D4()
{
  sub_10011E3C8(&qword_100320E40, type metadata accessor for Key);
  sub_10011E3C8(&qword_100320E48, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E690()
{
  uint64_t v1 = sub_1001202AC();
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  uint64_t *v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10011E6B8()
{
  sub_10011E3C8((unint64_t *)&qword_100320DF8, type metadata accessor for CNWallpaperColorDescriptionKey);
  sub_10011E3C8(&qword_100320E00, type metadata accessor for CNWallpaperColorDescriptionKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

void *sub_10011E774@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_10011E784@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10011E790()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E858@<X0>(void *a1@<X8>)
{
  String._bridgeToObjectiveC()();
  uint64_t result = sub_1001203A8();
  *a1 = v1;
  return result;
}

uint64_t sub_10011E898()
{
  sub_10011E3C8(&qword_100320AE0, type metadata accessor for PHDismissalAssertionReason);
  sub_10011E3C8(&qword_100320AE8, type metadata accessor for PHDismissalAssertionReason);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10011E954()
{
  return sub_10011FFA8(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10011E984()
{
  return sub_10011E04C();
}

Swift::Int sub_10011E9A0()
{
  return sub_10011E084();
}

uint64_t sub_10011E9BC()
{
  return sub_10011E3C8(&qword_100320A60, type metadata accessor for PHDismissalAssertionReason);
}

uint64_t sub_10011EA04()
{
  return sub_10011E3C8(&qword_100320A68, type metadata accessor for PHDismissalAssertionReason);
}

uint64_t sub_10011EA4C()
{
  return j___sSd9hashValueSivg(*v0);
}

void sub_10011EA54()
{
  sub_10011FF60(*v0);
}

uint64_t sub_10011EA5C(uint64_t a1)
{
  return sub_10011FF90(a1, *v1);
}

uint64_t sub_10011EA64()
{
  return sub_10011E00C(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

BOOL sub_10011EA94(double *a1, double *a2)
{
  return sub_10011EB30(*a1, *a2);
}

uint64_t sub_10011EAA0()
{
  return sub_10011E3C8(&qword_100320A70, type metadata accessor for PHDismissalAssertionReason);
}

uint64_t sub_10011EAE8()
{
  return sub_10011E3C8(&qword_100320A78, type metadata accessor for TUCallStatus);
}

BOOL sub_10011EB30(double a1, double a2)
{
  return a1 == a2;
}

uint64_t sub_10011EB3C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10011EB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10011EBAC()
{
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  sub_100120290();
  return sub_10011D9D0();
}

uint64_t sub_10011EC48(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_10011EC80()
{
  unint64_t result = qword_100320BF8;
  if (!qword_100320BF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_100320BF8);
  }
  return result;
}

uint64_t sub_10011ECC4()
{
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  sub_100120290();
  return sub_10011D7D4();
}

uint64_t sub_10011ED64()
{
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10011EE00;
  sub_100120290();
  return sub_10011D684();
}

uint64_t sub_10011EE00()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_100120354();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1001202F0();
  return v3();
}

uint64_t sub_10011EEC4()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10011EF0C()
{
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  sub_100120290();
  return sub_10011D5B4();
}

uint64_t sub_10011EFA8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10011EFF0()
{
  sub_100120498();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  char v7 = *(unsigned char *)(v0 + 48);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_1001202E4(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1001201F0;
  return sub_10011A054(v2, v3, v4, v5, v6, v7);
}

void type metadata accessor for Name(uint64_t a1)
{
}

uint64_t sub_10011F0C4()
{
  _Block_release(*(const void **)(v0 + 16));
  _Block_release(*(const void **)(v0 + 24));

  uint64_t v1 = sub_10012056C();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10011F104()
{
  sub_10012026C();
  sub_1001204BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  uint64_t v3 = sub_100120250();
  return v4(v3);
}

uint64_t sub_10011F198()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011F1D0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10011F1F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011F230(void *a1)
{
  return sub_10011C478(a1, *(uint64_t (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_10011F238(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10011F248()
{
  return swift_release();
}

uint64_t sub_10011F254()
{
  sub_10012026C();
  sub_1001204BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  uint64_t v3 = sub_100120250();
  return v4(v3);
}

uint64_t sub_10011F2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageID.Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011F34C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageID.Value(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10011F3AC()
{
  sub_10012026C();
  sub_1001204BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  uint64_t v3 = sub_100120250();
  return v4(v3);
}

uint64_t sub_10011F444()
{
  sub_10012026C();
  sub_1001204BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  uint64_t v3 = sub_100120250();
  return v4(v3);
}

uint64_t sub_10011F4DC()
{
  sub_10012026C();
  sub_1001204BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  uint64_t v3 = sub_100120250();
  return v4(v3);
}

uint64_t sub_10011F574()
{
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v1 = sub_10012056C();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10011F5B4()
{
  sub_10012026C();
  sub_1001204BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1001202E4(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1001201F0;
  uint64_t v3 = sub_100120250();
  return v4(v3);
}

uint64_t sub_10011F648()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011F688()
{
  sub_10012026C();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1001202E4(v3);
  void *v4 = v5;
  v4[1] = sub_1001201F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100320CD0 + dword_100320CD0);
  return v6(v1, v2);
}

uint64_t sub_10011F72C()
{
  return sub_10017C5E4(*(void *)(v0 + 16));
}

void type metadata accessor for CNSharedProfileAvatarAnimationType(uint64_t a1)
{
}

void type metadata accessor for STBackgroundActivityIdentifier(uint64_t a1)
{
}

void type metadata accessor for CNWallpaperColorDescriptionKey(uint64_t a1)
{
}

void type metadata accessor for Level(uint64_t a1)
{
}

__n128 initializeWithTake for FeedbackView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10011F798(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10011F7B8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for PHAudioCallControlType(uint64_t a1)
{
}

void type metadata accessor for TUCallDisconnectedReason(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

__n128 initializeWithTake for LiveVoicemailCarrierSettings.Error(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10011F860(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10011F880(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for SBSInCallPresentationMode(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for VideoCallView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_10011F918(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10011F938(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

uint64_t sub_10011F978()
{
  return sub_10011E3C8(&qword_100320D58, type metadata accessor for Key);
}

uint64_t sub_10011F9C0()
{
  return sub_10011E3C8(&qword_100320D60, type metadata accessor for Key);
}

uint64_t sub_10011FA08()
{
  return sub_10011E3C8(&qword_100320D68, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_10011FA50()
{
  return sub_10011E3C8(&qword_100320D70, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_10011FA98()
{
  return sub_10011E3C8(&qword_100320D78, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_10011FAE0()
{
  return sub_10011E3C8(&qword_100320D80, type metadata accessor for Name);
}

uint64_t sub_10011FB28()
{
  return sub_10011E3C8(&qword_100320D88, type metadata accessor for Name);
}

uint64_t sub_10011FB70()
{
  return sub_10011E3C8(&qword_100320D90, type metadata accessor for Name);
}

uint64_t sub_10011FBB8()
{
  return sub_10011E3C8(&qword_100320D98, type metadata accessor for Level);
}

uint64_t sub_10011FC00()
{
  return sub_10011E3C8(&qword_100320DA0, type metadata accessor for Level);
}

uint64_t sub_10011FC48()
{
  return sub_10011E3C8(&qword_100320DA8, type metadata accessor for Level);
}

uint64_t sub_10011FC90()
{
  return sub_10011E3C8(&qword_100320DB0, type metadata accessor for CNWallpaperColorDescriptionKey);
}

uint64_t sub_10011FCD8()
{
  return sub_10011E3C8(&qword_100320DB8, type metadata accessor for CNWallpaperColorDescriptionKey);
}

uint64_t sub_10011FD20()
{
  return sub_10011E3C8(&qword_100320DC0, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t sub_10011FD68()
{
  return sub_10011E3C8(&qword_100320DC8, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t sub_10011FDB0()
{
  return sub_10011E3C8(&qword_100320DD0, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t sub_10011FDF8()
{
  return sub_10011E3C8(&qword_100320DD8, type metadata accessor for CNWallpaperColorDescriptionKey);
}

uint64_t sub_10011FE40()
{
  return sub_10011E3C8((unint64_t *)&unk_100320DE0, type metadata accessor for Key);
}

uint64_t sub_10011FE88(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10011FF08(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

void sub_10011FF60(double a1)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_10011FF90(uint64_t a1, double a2)
{
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    double v2 = a2;
  }
  else {
    double v2 = 0.0;
  }
  return static Hasher._hash(seed:_:)(a1, *(void *)&v2);
}

uint64_t sub_10011FFA8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10011FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10012003C(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

unint64_t sub_1001200B0()
{
  unint64_t result = qword_100320E18;
  if (!qword_100320E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100320E18);
  }
  return result;
}

NSString sub_1001200FC()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v0;
}

void type metadata accessor for CFNotificationName(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void sub_10012015C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100120210(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  float *v10 = a1;
  return sub_1001412B0(0x654D3C7961727241, 0xEE003E6567617373, &a10);
}

uint64_t sub_100120250()
{
  return v0;
}

uint64_t sub_100120278()
{
  return swift_slowDealloc();
}

uint64_t sub_100120290()
{
  return v0;
}

uint64_t sub_1001202AC()
{
  return *(void *)v0;
}

uint64_t _s13InCallService15ScoreControllerC8delegateAA0dE8Delegate_pSgvpfi_0()
{
  return 0;
}

uint64_t sub_1001202C0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001202E4(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_1001202F0()
{
  return v0 + 8;
}

void sub_1001202FC(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
}

uint64_t sub_100120314()
{
  return swift_slowAlloc();
}

void sub_100120334(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t sub_100120370()
{
  return swift_arrayDestroy();
}

uint64_t sub_1001203A8()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_1001203DC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1001203F8()
{
  return v0;
}

uint64_t sub_100120414()
{
  return swift_slowAlloc();
}

uint64_t sub_100120448()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_100120470()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001204A4()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001204C8()
{
  return String.hash(into:)();
}

uint64_t sub_1001204F8(uint64_t a1, uint64_t a2)
{
  sub_10011EC48(a1, a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10012053C(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t sub_100120548(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t sub_100120554()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10012056C()
{
  return v0;
}

uint64_t sub_10012057C()
{
  return v0;
}

uint64_t sub_10012058C()
{
  return *v0;
}

uint64_t sub_100120598()
{
  return type metadata accessor for Logger();
}

void *sub_1001205B0(unint64_t a1)
{
  return sub_10011A60C(a1);
}

uint64_t sub_1001205C8(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return type metadata accessor for VoicemailActor();
}

uint64_t sub_1001205E0()
{
  return v0;
}

uint64_t sub_1001205F4()
{
  return v0;
}

uint64_t sub_100120608(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_100120628()
{
  return Hasher.init(_seed:)();
}

void *sub_100120648()
{
  uint64_t v2 = *(const void **)(v0 + 24);
  return _Block_copy(v2);
}

NSArray sub_100120660()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100120678()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

id sub_100120690(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

uint64_t sub_1001206B8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001206E8()
{
  Logger.init(subsystem:category:)();
  *(void *)(v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_autoPickupKeys) = &off_1002D0F30;
  type metadata accessor for CarrierBundleSettings();
  *(void *)(v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_carrierBundleSettings) = static CarrierBundleSettings.shared.getter();
  return v0;
}

void sub_100120780(void *a1)
{
  uint64_t v3 = sub_10011EB3C(&qword_100321178);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)v45 - v9;
  id v11 = [a1 localSenderIdentityAccountUUID];
  if (v11)
  {
    uint64_t v12 = v11;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = (uint64_t)v7;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = (uint64_t)v7;
    uint64_t v15 = 1;
  }
  sub_10011EB80(v14, v15, 1, v13);
  sub_100120EB8((uint64_t)v7, (uint64_t)v10);
  type metadata accessor for UUID();
  if (sub_100120F20((uint64_t)v10, 1, v13) == 1)
  {
    sub_100120F94((uint64_t)v10, &qword_100321178);
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v10, v13);
  }
  unint64_t v16 = (void *)CarrierBundleSettings.subscription(for:)();
  swift_bridgeObjectRelease();
  if (v1) {
    return;
  }
  if (!v16)
  {
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease();
    uint64_t v48 = 0xD00000000000002DLL;
    unint64_t v49 = 0x8000000100233CE0;
    id v26 = [a1 callUUID];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v29 = v28;

    v30._countAndFlagsBits = v27;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v48;
    unint64_t v32 = v49;
    sub_100120F48();
    swift_allocError();
    uint64_t *v33 = v31;
    v33[1] = v32;
    swift_willThrow();
    return;
  }
  CarrierBundleSettings.fetchCarrierBundleValue(for:context:)();
  if (!v50)
  {
    sub_100120F94((uint64_t)&v48, (uint64_t *)&unk_100321630);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v34._object = (void *)0x8000000100233D10;
    v34._countAndFlagsBits = 0xD000000000000026;
    String.append(_:)(v34);
    id v35 = [a1 callUUID];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    long long v38 = v37;

    v39._countAndFlagsBits = v36;
    v39._object = v38;
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    v40._countAndFlagsBits = 0x79656B20646E6120;
    v40._object = (void *)0xEB00000000203A73;
    String.append(_:)(v40);
    swift_bridgeObjectRetain();
    v41._countAndFlagsBits = Array.description.getter();
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = v48;
    unint64_t v43 = v49;
    sub_100120F48();
    swift_allocError();
    uint64_t *v44 = v42;
    v44[1] = v43;
    swift_willThrow();

    return;
  }
  uint64_t v17 = v51;
  id v18 = a1;
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v48 = v46;
    *(_DWORD *)uint64_t v21 = 136315394;
    v45[1] = v21 + 4;
    id v22 = [v18 callUUID];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v17;
    unint64_t v25 = v24;

    uint64_t v51 = sub_1001412B0(v23, v25, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v17 = v47;
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2048;
    uint64_t v51 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Carrier Bundle for call with uuid %s reports AutoPickupDuration - %ld", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10019224C(v17);
}

uint64_t sub_100120CEC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13InCallService28LiveVoicemailCarrierSettings_logger;
  type metadata accessor for Logger();
  sub_100121124();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_100120D64()
{
  sub_100120CEC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100120DBC()
{
  return type metadata accessor for LiveVoicemailCarrierSettings();
}

uint64_t type metadata accessor for LiveVoicemailCarrierSettings()
{
  uint64_t result = qword_1003210D8;
  if (!qword_1003210D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100120E0C()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100120EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C(&qword_100321178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100120F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

unint64_t sub_100120F48()
{
  unint64_t result = qword_100321180;
  if (!qword_100321180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321180);
  }
  return result;
}

uint64_t sub_100120F94(uint64_t a1, uint64_t *a2)
{
  sub_10011EB3C(a2);
  sub_100121124();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for LiveVoicemailCarrierSettings.Error(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LiveVoicemailCarrierSettings.Error()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for LiveVoicemailCarrierSettings.Error(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LiveVoicemailCarrierSettings.Error(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveVoicemailCarrierSettings.Error(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveVoicemailCarrierSettings.Error(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveVoicemailCarrierSettings.Error()
{
  return &type metadata for LiveVoicemailCarrierSettings.Error;
}

id sub_100121138()
{
  type metadata accessor for MessageStoreController();
  unint64_t v1 = v0;
  *(void *)&v1[OBJC_IVAR___ICSMessageStoreClient_messageStoreController] = MessageStoreController.__allocating_init()();

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MessageStoreClient();
  return [super init];
}

uint64_t sub_1001211CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v6 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v11, v12);
  uint64_t v13 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v18 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v17, 0, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v6);
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v19, v13, v6);
  *(void *)(v21 + v20) = v3;
  id v22 = (void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  *id v22 = v26;
  v22[1] = a3;
  id v23 = v3;
  swift_retain();
  sub_10012D67C();
  return swift_release();
}

uint64_t sub_100121390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[5] = a6;
  v7[6] = a7;
  _OWORD v7[3] = a4;
  void v7[4] = a5;
  sub_10011EB3C(&qword_100324AA0);
  v7[7] = swift_task_alloc();
  v7[8] = swift_task_alloc();
  v7[9] = type metadata accessor for MessageFetchOptions();
  v7[10] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MessageStoreFetchRequest.QuerySearchType();
  v7[11] = v8;
  v7[12] = *(void *)(v8 - 8);
  v7[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MessageStoreQuery();
  v7[14] = v9;
  v7[15] = *(void *)(v9 - 8);
  uint8_t v7[16] = swift_task_alloc();
  uint64_t Request = type metadata accessor for MessageStoreFetchRequest();
  v7[17] = Request;
  v7[18] = *(void *)(Request - 8);
  v7[19] = swift_task_alloc();
  return _swift_task_switch(sub_10012157C, 0, 0);
}

uint64_t sub_10012157C()
{
  uint64_t v2 = v0[15];
  unint64_t v1 = (uint64_t *)v0[16];
  uint64_t v3 = v0[12];
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[13];
  uint64_t v16 = v0[11];
  uint64_t v4 = v0[3];
  uint64_t v5 = swift_allocObject();
  sub_10011EB3C(&qword_1003211C8);
  uint64_t v6 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1002862D0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, v4, v6);
  *(void *)(v5 + 16) = v10;
  *unint64_t v1 = v5;
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, enum case for MessageStoreQuery.recordUUID(_:), v14);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v15, enum case for MessageStoreFetchRequest.QuerySearchType.unsorted(_:), v16);
  v0[2] = &_swiftEmptyArrayStorage;
  sub_10012210C();
  sub_10011EB3C(&qword_1003211D8);
  sub_10012215C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MessageStoreFetchRequest.init(query:sortType:options:pageSize:page:originatingBundleID:)();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[20] = v11;
  void *v11 = v0;
  v11[1] = sub_1001217CC;
  uint64_t v12 = v0[19];
  return MessageStoreController.getMessages(fetchRequest:)(v12);
}

uint64_t sub_1001217CC()
{
  sub_1001201F8();
  *(void *)(v2 + 168) = v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_100121A64;
  }
  else {
    uint64_t v3 = sub_1001218BC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001218BC()
{
  unint64_t v1 = v0[21];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    sub_100137BC8(0, (v1 & 0xC000000000000001) == 0, v0[21]);
    if ((v1 & 0xC000000000000001) != 0) {
      id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v3 = *(id *)(v0[21] + 32);
    }
    swift_bridgeObjectRelease();
    dispatch thunk of Message.messageFile.getter();

    uint64_t v4 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = 1;
  }
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[8];
  unint64_t v9 = (void (*)(uint64_t))v0[5];
  uint64_t v10 = type metadata accessor for URL();
  sub_10011EB80(v8, v4, 1, v10);
  v9(v8);
  sub_1001221F8(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_10012231C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100121A64()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void (*)(uint64_t))v0[5];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  uint64_t v3 = type metadata accessor for URL();
  sub_10011EB80(v1, 1, 1, v3);
  v2(v1);
  swift_errorRelease();
  sub_1001221F8(v1);
  sub_10012231C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100121C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C(&qword_100324AA0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100122298(a1, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v10 = 0;
  if (sub_100120F20((uint64_t)v7, 1, v8) != 1)
  {
    URL._bridgeToObjectiveC()(v9);
    uint64_t v10 = v11;
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  (*(void (**)(uint64_t, void *))(a2 + 16))(a2, v10);
}

id sub_100121D84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MessageStoreClient();
  return [super dealloc];
}

uint64_t type metadata accessor for MessageStoreClient()
{
  return self;
}

uint64_t sub_100121DEC()
{
  uint64_t v1 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  swift_release();

  return _swift_deallocObject(v0, ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v8);
}

uint64_t sub_100121EC0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_100122004;
  return sub_100121390(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_100122004()
{
  sub_1001201F8();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1001220D4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10012210C()
{
  unint64_t result = qword_1003211D0;
  if (!qword_1003211D0)
  {
    type metadata accessor for MessageFetchOptions();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003211D0);
  }
  return result;
}

unint64_t sub_10012215C()
{
  unint64_t result = qword_1003211E0;
  if (!qword_1003211E0)
  {
    sub_1001221B0(&qword_1003211D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003211E0);
  }
  return result;
}

uint64_t sub_1001221B0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1001221F8(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C(&qword_100324AA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100122258()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100122290(uint64_t a1)
{
  sub_100121C88(a1, *(void *)(v1 + 16));
}

uint64_t sub_100122298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C(&qword_100324AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012231C()
{
  return swift_task_dealloc();
}

uint64_t AudioControlService.controlEnabledPublisher.getter()
{
  return sub_10012337C();
}

uint64_t AudioControlService.audioRoutesPublisher.getter()
{
  return sub_10012337C();
}

uint64_t AudioControlService.currentAudioRoutePublisher.getter()
{
  return sub_10012337C();
}

id AudioControlService.callCenter.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter);
}

void AudioControlService.__allocating_init(callCenter:)()
{
  id v1 = objc_allocWithZone(v0);
  AudioControlService.init(callCenter:)();
}

void AudioControlService.init(callCenter:)()
{
  sub_1001233C4();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10011EB3C(&qword_100321210);
  sub_100122300();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_100120524();
  uint64_t v9 = type metadata accessor for AudioRoute();
  __chkstk_darwin(v9 - 8, v10);
  *(void *)&v0[OBJC_IVAR____TtC13InCallService19AudioControlService_cancellables] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter] = v3;
  sub_10011EB3C(&qword_100321220);
  swift_allocObject();
  uint64_t v11 = v0;
  id v12 = v3;
  *(void *)&v11[OBJC_IVAR____TtC13InCallService19AudioControlService_controlEnabledPublisher] = CurrentValueSubject.init(_:)();
  id v13 = [v12 routeController];
  sub_10012275C();

  sub_10011EB3C(&qword_100321228);
  swift_allocObject();
  *(void *)&v11[OBJC_IVAR____TtC13InCallService19AudioControlService_audioRoutesPublisher] = CurrentValueSubject.init(_:)();
  id v14 = [v12 routeController];
  sub_10012296C();

  sub_10011EB3C(&qword_100321230);
  swift_allocObject();
  *(void *)&v11[OBJC_IVAR____TtC13InCallService19AudioControlService_currentAudioRoutePublisher] = CurrentValueSubject.init(_:)();

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for AudioControlService();
  id v15 = [super init];
  sub_100122B20(&qword_100321238, &qword_100321230);
  sub_100122ED8(&qword_100321240, 255, (void (*)(uint64_t))&type metadata accessor for AudioRoute);
  uint64_t v16 = (char *)v15;
  Publisher<>.removeDuplicates()();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100122B20(&qword_100321248, &qword_100321210);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v17 = [*(id *)&v16[OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter] routeController];
  uint64_t v18 = v16;
  [v17 addDelegate:v18];

  sub_100123384();
}

void sub_10012275C()
{
  sub_1001233C4();
  uint64_t v16 = type metadata accessor for AudioRoute();
  sub_100122300();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  sub_100120524();
  id v6 = [v0 sortedRoutes];
  sub_100123340(0, &qword_100321288);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_100123384();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_13;
  }
LABEL_3:
  sub_1001C207C(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    unint64_t v15 = v7 & 0xC000000000000001;
    unint64_t v10 = v7;
    do
    {
      if (v15) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v7 + 8 * v9 + 32);
      }
      id v12 = v11;
      sub_100123008();

      unint64_t v14 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v13 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v14 >= v13 >> 1) {
        sub_1001C207C(v13 > 1, v14 + 1, 1);
      }
      ++v9;
      *((void *)&_swiftEmptyArrayStorage + 2) = v14 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))((char *)&_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v14, v1, v16);
      unint64_t v7 = v10;
    }
    while (v8 != v9);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_10012296C()
{
  id v1 = [v0 pickedRoute];
  if (v1)
  {
    id v2 = v1;
    sub_100123008();
  }
  else
  {
    sub_10012339C();
    __break(1u);
  }
}

uint64_t type metadata accessor for AudioControlService()
{
  return self;
}

uint64_t sub_100122A1C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100122A54()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter);

    id v3 = [v2 routeController];
    AudioRoute.uniqueIdentifier.getter();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 pickRouteWithUniqueIdentifier:v4];
  }
}

void sub_100122B18()
{
}

uint64_t sub_100122B20(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001221B0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void AudioControlService.routesChanged(for:)()
{
  sub_1001233C4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for AudioRoute();
  sub_100122300();
  uint64_t v6 = v5;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  unint64_t v14 = (char *)&v29 - v13;
  sub_100123340(0, &qword_100321250);
  id v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR____TtC13InCallService19AudioControlService_callCenter), "routeController"));
  char v16 = static NSObject.== infix(_:_:)();

  if ((v16 & 1) == 0)
  {
LABEL_11:
    sub_100123384();
    return;
  }
  sub_10012275C();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    Swift::String v30 = v11;
    uint64_t v31 = v1;
    uint64_t v32 = v3;
    uint64_t v33 = v17;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v20 = v6 + 16;
    objc_super v19 = v21;
    uint64_t v22 = v17 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    id v23 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v24 = *(void *)(v20 + 56);
    while (1)
    {
      v19(v14, v22, v4);
      char v25 = AudioRoute.isReceiver.getter();
      uint64_t v26 = *v23;
      (*v23)(v14, v4);
      if (v25) {
        break;
      }
      v22 += v24;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    uint64_t v34 = v33;
    CurrentValueSubject.send(_:)();
    swift_bridgeObjectRelease();
    id v28 = v30;
    sub_10012296C();
    CurrentValueSubject.send(_:)();
    v26(v28, v4);
    goto LABEL_11;
  }
  sub_100123384();
  swift_bridgeObjectRelease();
}

id DetailsCoordinatorCreationResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void AudioControlService.init()()
{
}

id AudioControlService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioControlService();
  return [super dealloc];
}

uint64_t sub_100122E90(uint64_t a1, uint64_t a2)
{
  return sub_100122ED8(&qword_100321258, a2, (void (*)(uint64_t))type metadata accessor for AudioControlService);
}

uint64_t sub_100122ED8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100122F9C()
{
  return AudioControlService.audioRoutesPublisher.getter();
}

uint64_t sub_100122FC0()
{
  return AudioControlService.currentAudioRoutePublisher.getter();
}

uint64_t sub_100122FE4()
{
  return AudioControlService.controlEnabledPublisher.getter();
}

void sub_100123008()
{
  sub_1001233C4();
  uint64_t v1 = type metadata accessor for SystemImage();
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  __chkstk_darwin(v3, v4);
  [v0 isReceiver];
  [v0 isAuxiliary];
  id v5 = [v0 uniqueIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = [v0 name];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10012315C();
  sub_1001232C4();
  AudioRoute.init(isReceiver:isAuxiliary:uniqueIdentifier:label:routeSystemImage:buttonSystemImage:)();
  sub_100123384();
}

uint64_t sub_10012315C()
{
  unint64_t v1 = (unint64_t)[v0 deviceType];
  if (v1 <= 0x1D)
  {
    if (((1 << v1) & 0x20024) != 0)
    {
      return static SystemImage.beatsHeadphones.getter();
    }
    if (((1 << v1) & 0x20040000) != 0)
    {
      return static SystemImage.airPodsPro.getter();
    }
    if (v1 == 10)
    {
      return static SystemImage.laptop.getter();
    }
  }
  if (v1 || [v0 isSpeaker])
  {
    return static SystemImage.speaker.getter();
  }
  else
  {
    if (![v0 isReceiver])
    {
      sub_10012339C();
      __break(1u);
      return static SystemImage.airPodsPro.getter();
    }
    return static SystemImage.iPhone.getter();
  }
}

uint64_t sub_1001232C4()
{
  if (([v0 isReceiver] & 1) != 0 || objc_msgSend(v0, "isSpeaker"))
  {
    JUMPOUT(0x1001ED670);
  }

  return sub_10012315C();
}

uint64_t sub_100123340(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10012337C()
{
  return swift_retain();
}

uint64_t sub_10012339C()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001233DC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CBE8);
  sub_10012386C();
  sub_100123854();
  return sub_10012389C();
}

uint64_t sub_100123428()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC00);
  sub_10012386C();
  sub_100123884();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100123488()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC18);
  sub_10012386C();
  sub_100123884();
  return sub_10012389C();
}

uint64_t sub_1001234D4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC30);
  sub_10012386C();
  sub_100123884();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100123538()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC48);
  sub_10012386C();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1001235B8()
{
  sub_100123618();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10032CC60 = result;
  return result;
}

unint64_t sub_100123618()
{
  unint64_t result = qword_100321290;
  if (!qword_100321290)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100321290);
  }
  return result;
}

uint64_t *sub_100123658(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1001236BC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC68);
  sub_10012386C();
  sub_100123854();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100123724()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC80);
  sub_10012386C();
  sub_100123854();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100123788()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CC98);
  sub_10012386C();
  sub_100123854();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1001237F0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CCB0);
  sub_10012386C();
  sub_100123854();
  return Logger.init(subsystem:category:)();
}

unint64_t sub_100123854()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_10012386C()
{
  return sub_10011EC48(v0, v1);
}

unint64_t sub_100123884()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_10012389C()
{
  return Logger.init(subsystem:category:)();
}

id AudioCallServicesManager.call.getter()
{
  return *(id *)(v0 + 16);
}

id AudioCallServicesManager.callCenter.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t VoicemailControlService.__allocating_init(call:callCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t VoicemailControlService.init(call:callCenter:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

Swift::Void __swiftcall AcceptControlService.requestAcceptCall()()
{
  [*(id *)(v0 + 24) answerCall:*(void *)(v0 + 16)];
}

uint64_t VoicemailControlService.deinit()
{
  return v0;
}

uint64_t VoicemailControlService.__deallocating_deinit()
{
  VoicemailControlService.deinit();

  return _swift_deallocClassInstance(v0, 32, 7);
}

void sub_100123988()
{
}

uint64_t type metadata accessor for AcceptControlService()
{
  return self;
}

id sub_1001239D0()
{
  id v0 = [self sharedPreferences];
  id v1 = [v0 shouldMakeFakeSOSCall];

  return v1;
}

uint64_t sub_100123A44()
{
  if ([v0 isSOS]) {
    return 1;
  }

  return sub_100123A88();
}

uint64_t sub_100123A88()
{
  id v1 = [v0 handle];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  id v3 = [v1 value];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (![self shouldMakeFakeSOSCall])
  {
    swift_bridgeObjectRelease();
LABEL_5:
    char v4 = 0;
    return v4 & 1;
  }
  sub_100123BB8();
  char v4 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_100123BB8()
{
  unint64_t result = qword_1003218D0;
  if (!qword_1003218D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003218D0);
  }
  return result;
}

id sub_100123C04()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v73 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = result;
  id v13 = sub_10014AB20();
  [v12 addSubview:v13];

  id result = [v1 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v14 = result;
  id v15 = sub_10014B1C0();
  [v14 addSubview:v15];

  id result = [v1 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v16 = result;
  uint64_t v68 = v8;
  uint64_t v70 = v7;
  uint64_t v71 = v3;
  id v17 = sub_10014B858();
  [v16 addSubview:v17];

  id v18 = sub_10014AB20();
  [v18 setAlpha:0.0];

  id v19 = sub_10014B1C0();
  [v19 setAlpha:0.0];

  id v20 = sub_10014B858();
  [v20 setAlpha:0.0];

  sub_1001244D0();
  id v21 = sub_10014AB20();
  [v21 addTarget:v1 action:"rttAudioRouteButtonTapped" forControlEvents:64];

  id v22 = sub_10014B1C0();
  [v22 addTarget:v1 action:"rttCallControlsButtonTapped" forControlEvents:64];

  id v23 = sub_10014B858();
  [v23 addTarget:v1 action:"rttVideoButtonTapped" forControlEvents:64];

  if (qword_1003205B8 != -1) {
    swift_once();
  }
  v69 = v6;
  uint64_t v72 = v2;
  double v24 = *(double *)&qword_10032CCE8;
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1002863F0;
  id v26 = sub_10014AB20();
  id v27 = [v26 bottomAnchor];

  id result = [v1 view];
  if (!result) {
    goto LABEL_16;
  }
  id v28 = result;
  id v29 = [result safeAreaLayoutGuide];

  id v30 = [v29 bottomAnchor];
  id v31 = [v27 constraintEqualToAnchor:v30];

  *(void *)(v25 + 32) = v31;
  id v32 = sub_10014AB20();
  id v33 = [v32 leadingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v34 = result;
  double v35 = v24 + v24;
  id v36 = [result leadingAnchor];

  id v37 = [v33 constraintEqualToAnchor:v36 constant:v35];
  *(void *)(v25 + 40) = v37;
  id v38 = sub_10014B1C0();
  id v39 = [v38 bottomAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Swift::String v40 = result;
  id v41 = [result safeAreaLayoutGuide];

  id v42 = [v41 bottomAnchor];
  id v43 = [v39 constraintEqualToAnchor:v42];

  *(void *)(v25 + 48) = v43;
  id v44 = sub_10014B1C0();
  id v45 = [v44 trailingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v46 = result;
  id v47 = [result trailingAnchor];

  id v48 = [v45 constraintEqualToAnchor:v47 constant:-v35];
  *(void *)(v25 + 56) = v48;
  id v49 = sub_10014B858();
  id v50 = [v49 bottomAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v51 = result;
  id v52 = [result safeAreaLayoutGuide];

  id v53 = [v52 bottomAnchor];
  id v54 = [v50 constraintEqualToAnchor:v53];

  *(void *)(v25 + 64) = v54;
  id v55 = sub_10014B858();
  id v56 = [v55 centerXAnchor];

  id result = [v1 view];
  if (result)
  {
    long long v57 = result;
    long long v58 = self;
    id v59 = [v57 centerXAnchor];

    id v60 = [v56 constraintEqualToAnchor:v59];
    *(void *)(v25 + 72) = v60;
    aBlock[0] = v25;
    specialized Array._endMutation()();
    sub_100123340(0, (unint64_t *)&qword_100324B40);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v58 activateConstraints:isa];

    sub_100123340(0, (unint64_t *)&qword_100321370);
    v62 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v63 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100125EF0;
    aBlock[5] = v63;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10012EDF4;
    aBlock[3] = &unk_1002D1AD8;
    CGRect v64 = _Block_copy(aBlock);
    swift_release();
    CGRect v65 = v73;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100125EF8();
    sub_10011EB3C((uint64_t *)&unk_100321380);
    sub_100125F48();
    v66 = v69;
    uint64_t v67 = v72;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v64);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v67);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v65, v70);
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_1001244D0()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  uint64_t v2 = __chkstk_darwin(v0 - 8, v1);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v2, v5);
  uint64_t v8 = (char *)&v52 - v7;
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v52 - v11;
  __chkstk_darwin(v10, v13);
  id v15 = (char *)&v52 - v14;
  char v16 = self;
  id v17 = [v16 sharedInstance];
  id v18 = [v17 routeController];

  id v19 = [v18 pickedRoute];
  if (v19)
  {
    unsigned __int8 v20 = [v19 isReceiver];
    id v52 = v16;
    if ((v20 & 1) != 0
      || (id v21 = [v19 audioRouteGlyphForDisplayStyle:0]) == 0)
    {
      id v24 = 0;
    }
    else
    {
      id v22 = v21;
      id v23 = [self systemBlackColor];
      id v24 = [v22 imageWithTintColor:v23];
    }
    id v25 = sub_10014AB20();
    UIButton.configuration.getter();
    uint64_t v26 = type metadata accessor for UIButton.Configuration();
    int v27 = sub_100120F20((uint64_t)v15, 1, v26);
    id v53 = v24;
    if (v27)
    {
      sub_100125C94((uint64_t)v15, (uint64_t)v4);
      UIButton.configuration.setter();

      sub_100125CFC((uint64_t)v15);
    }
    else
    {
      if (!v24)
      {
        sub_100123340(0, &qword_100323D60);
        sub_1001B434C();
      }
      id v28 = v24;
      UIButton.Configuration.image.setter();
      UIButton.configuration.setter();
    }
    id v29 = sub_10014AB20();
    id v30 = [v19 name];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    sub_100125D5C(v31, v33, v29);
    unsigned int v34 = [v19 isReceiver];
    id v35 = sub_10014AB20();
    UIButton.configuration.getter();
    if (sub_100120F20((uint64_t)v12, 1, v26))
    {
      sub_100125C94((uint64_t)v12, (uint64_t)v4);
      UIButton.configuration.setter();

      sub_100125CFC((uint64_t)v12);
    }
    else
    {
      id v36 = self;
      id v37 = &selRef_blackColor;
      if (v34) {
        id v37 = &selRef_systemWhiteColor;
      }
      id v38 = [v36 *v37 v52];
      UIButton.Configuration.baseForegroundColor.setter();
      UIButton.configuration.setter();
    }
    id v39 = sub_10014AB20();
    UIButton.configuration.getter();
    if (sub_100120F20((uint64_t)v8, 1, v26))
    {
      sub_100125C94((uint64_t)v8, (uint64_t)v4);
      UIButton.configuration.setter();

      sub_100125CFC((uint64_t)v8);
    }
    else
    {
      Swift::String v40 = self;
      id v41 = &selRef_clearColor;
      if (!v34) {
        id v41 = &selRef_systemWhiteColor;
      }
      id v42 = [v40 *v41 v52];
      UIButton.Configuration.baseBackgroundColor.setter();
      UIButton.configuration.setter();
    }
    id v43 = v53;
    id v44 = [v52 sharedInstance];
    id v45 = [v44 routeController];

    unsigned int v46 = [v45 areAuxiliaryRoutesAvailable];
    id v47 = sub_10014AB20();
    id v48 = v47;
    if (v46)
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v50 = [Strong getAudioRouteMenu];
        swift_unknownObjectRelease();
      }
      else
      {
        id v50 = 0;
      }
      [v48 setMenu:v50];

      id v51 = sub_10014AB20();
      [v51 setShowsMenuAsPrimaryAction:1];
    }
    else
    {
      [v47 setMenu:0];

      id v51 = sub_10014AB20();
      [v51 setShowsMenuAsPrimaryAction:0];
    }
  }
}

void sub_100124A34()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v1 = (void *)Strong;
  id v2 = sub_10014B1C0();
  id v3 = [v2 subviews];

  sub_100123340(0, (unint64_t *)&qword_100321390);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5)
  {
    sub_100137BC8(0, (v4 & 0xC000000000000001) == 0, v4);
    if ((v4 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v4 + 32);
    }
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    id v8 = sub_10014B1C0();
    [v8 frame];
    double v10 = v9;

    [v7 _setCornerRadius:v10 * 0.5];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v11 = sub_10014AB20();
  id v12 = [v11 subviews];

  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_11;
    }
LABEL_16:

    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_11:
  sub_100137BC8(0, (v13 & 0xC000000000000001) == 0, v13);
  if ((v13 & 0xC000000000000001) != 0) {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v14 = *(id *)(v13 + 32);
  }
  id v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = sub_10014AB20();
  [v16 frame];
  double v18 = v17;

  [v15 _setCornerRadius:v18 * 0.5];
}

void sub_100124CA8()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 routeController];

  id v2 = [v1 pickedRoute];
  if (!v2 || (unsigned int v3 = [v2 isReceiver], v2, v3))
  {
    id v4 = sub_100126004();
    id v5 = [v4 routeController];

    id v6 = [v5 routeForSpeakerEnable];
    if (v6) {
      goto LABEL_5;
    }
  }
  id v7 = sub_100126004();
  id v8 = [v7 routeController];

  id v6 = [v8 routeForSpeakerDisable];
  if (v6)
  {
LABEL_5:
    id v9 = sub_100126004();
    id v10 = [v9 routeController];

    [v10 pickRoute:v6];
  }

  sub_1001244D0();
}

void *sub_100124EF8()
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result handleRTTVideoStreamingButtonTapped];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_100124FA4(uint64_t a1)
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result transitionToRTTState:a1];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_10012505C(void *a1)
{
  id v2 = v1;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_10012601C((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: EmergencyWebRTCViewController trying to add RTT message view");
    swift_slowDealloc();
  }

  id v9 = sub_10014AB20();
  id v10 = [v9 superview];

  if (!v10) {
    sub_100123C04();
  }
  [v2 addChildViewController:a1];
  id v11 = sub_100125FD0();
  if (!v11)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v12 = v11;
  [v11 setAlpha:0.0];

  id v13 = [v2 view];
  if (!v13)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v14 = v13;
  id v15 = sub_100125FD0();
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v16 = v15;
  [v14 addSubview:v15];

  [a1 didMoveToParentViewController:v2];
  id v17 = sub_100125FD0();
  if (!v17)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  double v18 = v17;
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v19 = sub_100125FD0();
  if (!v19)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unsigned __int8 v20 = v19;
  id v59 = (void *)type metadata accessor for EmergencyWebRTCViewController();
  v58[0] = v2;
  objc_allocWithZone((Class)UITapGestureRecognizer);
  id v21 = v2;
  id v22 = sub_100171ED4(v58, (uint64_t)"recentMessageViewTapped");
  [v20 addGestureRecognizer:v22, v58[0]];

  if (qword_1003205B8 != -1) {
    swift_once();
  }
  double v23 = *(double *)&qword_10032CCE8;
  if (*(void *)&v21[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor])
  {
LABEL_17:
    sub_10011EB3C((uint64_t *)&unk_100321360);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_100286400;
    id v30 = sub_100125FD0();
    if (v30)
    {
      uint64_t v31 = v30;
      double v32 = v23 + v23;
      id v33 = [v30 bottomAnchor];

      id v34 = sub_10014B1C0();
      id v35 = [v34 topAnchor];

      id v36 = [v33 constraintEqualToAnchor:v35 constant:-(v23 + v23)];
      *(void *)(v29 + 32) = v36;
      id v37 = sub_100125FD0();
      if (v37)
      {
        id v38 = v37;
        id v39 = [v37 leadingAnchor];

        id v40 = [v21 view];
        if (v40)
        {
          id v41 = v40;
          id v42 = [v40 leadingAnchor];

          id v43 = [v39 constraintEqualToAnchor:v42 constant:v32];
          *(void *)(v29 + 40) = v43;
          id v44 = sub_100125FD0();
          if (v44)
          {
            id v45 = v44;
            id v46 = [v44 trailingAnchor];

            id v47 = [v21 view];
            if (v47)
            {
              id v48 = v47;
              id v49 = self;
              id v50 = [v48 trailingAnchor];

              id v51 = [v46 constraintEqualToAnchor:v50 constant:-v32];
              *(void *)(v29 + 48) = v51;
              v58[0] = v29;
              specialized Array._endMutation()();
              sub_100123340(0, (unint64_t *)&qword_100324B40);
              Class isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v49 activateConstraints:isa];

              id v53 = self;
              uint64_t v54 = swift_allocObject();
              swift_unknownObjectWeakInit();
              uint64_t v55 = swift_allocObject();
              *(void *)(v55 + 16) = a1;
              *(void *)(v55 + 24) = v54;
              id v60 = sub_100125EC8;
              uint64_t v61 = v55;
              v58[0] = _NSConcreteStackBlock;
              v58[1] = 1107296256;
              v58[2] = sub_10012EDF4;
              id v59 = &unk_1002D1AB0;
              id v56 = _Block_copy(v58);
              id v57 = a1;
              swift_release();
              [v53 animateWithDuration:v56 animations:0.2];
              _Block_release(v56);
              return;
            }
            goto LABEL_32;
          }
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v24 = [*(id *)&v21[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton] bottomAnchor];
  id v25 = sub_100125FD0();
  if (v25)
  {
    uint64_t v26 = v25;
    id v27 = [v25 topAnchor];

    id v28 = [v24 constraintEqualToAnchor:v27 constant:-*(double *)&qword_10032CCE8];
    sub_100149C94((uint64_t)v28);
    goto LABEL_17;
  }
LABEL_33:
  __break(1u);
}

void sub_1001256F0(void *a1)
{
  id v2 = v1;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_10012601C((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: EmergencyWebRTCViewController trying to remove RTT message view");
    swift_slowDealloc();
  }

  id v9 = self;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  id v22 = sub_100125DFC;
  uint64_t v23 = v11;
  double v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  unsigned __int8 v20 = sub_10012EDF4;
  id v21 = &unk_1002D1A10;
  id v12 = _Block_copy(&v18);
  id v13 = a1;
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v2;
  id v22 = sub_100125E7C;
  uint64_t v23 = v14;
  double v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  unsigned __int8 v20 = sub_10017D380;
  id v21 = &unk_1002D1A60;
  id v15 = _Block_copy(&v18);
  id v16 = v13;
  id v17 = v2;
  swift_release();
  [v9 animateWithDuration:v12 animations:v15 completion:0.2];
  _Block_release(v15);
  _Block_release(v12);
}

void sub_100125954(void *a1, double a2, uint64_t a3, char a4, char a5)
{
  id v8 = [a1 view];
  if (v8)
  {
    id v9 = v8;
    [v8 setAlpha:a2];

    sub_100125FB4();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v11 = (void *)Strong;
      id v12 = sub_10014AB20();

      sub_100125FE8();
    }
    sub_100125FB4();
    uint64_t v13 = swift_unknownObjectWeakLoadStrong();
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      id v15 = sub_10014B1C0();

      sub_100125FE8();
    }
    sub_100125FB4();
    uint64_t v16 = swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      id v17 = (void *)v16;
      id v18 = sub_10014B858();

      sub_100125FE8();
    }
    sub_100125FB4();
    uint64_t v19 = swift_unknownObjectWeakLoadStrong();
    if (v19)
    {
      unsigned __int8 v20 = (void *)v19;
      id v21 = *(void **)(v19 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor);
      id v22 = v21;

      if (v21)
      {
        [v22 setActive:a4 & 1];
      }
    }
    sub_100125FB4();
    uint64_t v23 = swift_unknownObjectWeakLoadStrong();
    if (v23)
    {
      id v24 = (void *)v23;
      id v25 = *(void **)(v23 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor);
      id v26 = v25;

      if (v25)
      {
        [v26 setActive:a5 & 1];
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100125B00(int a1, id a2, void *a3)
{
  [a2 willMoveToParentViewController:0];
  id v5 = [a2 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  os_log_type_t v6 = v5;
  [v5 removeFromSuperview];

  [a3 removeChildViewController:a2];
  id v7 = [a2 view];
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v8 = v7;
  [v7 removeAllGestureRecognizers];
}

uint64_t sub_100125C14()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  unint64_t v2 = v1;
  unint64_t v4 = v3;

  v5.n128_u64[0] = 0.25;
  v6.n128_u64[0] = v2;
  v7.n128_u64[0] = v4;

  return CGSize.scaled(_:)(v5, v6, v7);
}

uint64_t sub_100125C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C((uint64_t *)&unk_100321350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100125CFC(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C((uint64_t *)&unk_100321350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100125D5C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setAccessibilityValue:v4];
}

uint64_t sub_100125DC0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100125DFC()
{
  sub_100125954(*(void **)(v0 + 16), 0.0, *(void *)(v0 + 24), 1, 0);
}

uint64_t sub_100125E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100125E34()
{
  return swift_release();
}

uint64_t sub_100125E3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100125E7C(int a1)
{
  sub_100125B00(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100125E88()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100125EC8()
{
  sub_100125954(*(void **)(v0 + 16), 1.0, *(void *)(v0 + 24), 0, 1);
}

void sub_100125EF0()
{
}

unint64_t sub_100125EF8()
{
  unint64_t result = qword_1003218E0;
  if (!qword_1003218E0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003218E0);
  }
  return result;
}

unint64_t sub_100125F48()
{
  unint64_t result = qword_1003218F0;
  if (!qword_1003218F0)
  {
    sub_1001221B0((uint64_t *)&unk_100321380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003218F0);
  }
  return result;
}

uint64_t sub_100125FB4()
{
  return swift_beginAccess();
}

id sub_100125FD0()
{
  unint64_t v3 = *(const char **)(v1 + 688);
  return [v0 v3];
}

id sub_100125FE8()
{
  id v4 = *(const char **)(v1 + 2456);
  return [v0 v4:v3];
}

id sub_100126004()
{
  double v3 = *(const char **)(v1 + 2288);
  return [v0 v3];
}

void sub_10012601C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void *sub_100126040(unint64_t a1)
{
  uint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  while (1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v2) {
      break;
    }
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return &_swiftEmptyArrayStorage;
    }
LABEL_6:
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v2 = i - 4;
      if ((a1 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v5 = i - 3;
      if (__OFADD__(v2, 1)) {
        break;
      }
      type metadata accessor for VisualMessage();
      if (!swift_dynamicCastClass())
      {
        swift_unknownObjectRelease();
        swift_release();
        return 0;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v5 == v3) {
        return &_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_6;
  }
  return &_swiftEmptyArrayStorage;
}

void *sub_1001261C0(uint64_t a1)
{
  __n128 v6 = &_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10012A154(i, (uint64_t)v5);
    sub_100123340(0, (unint64_t *)&qword_100321390);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1001262DC()
{
  _s24InCallServiceTipUserInfoCMa();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  off_1003213A0 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_100126310(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  uint8_t v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TPTipsHelper.Entry();
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SpeakerphoneTip();
  v2[21] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[22] = v6;
  v2[23] = *(void *)(v6 + 64);
  v2[24] = swift_task_alloc();
  sub_10011EB3C(&qword_100320BD0);
  v2[25] = swift_task_alloc();
  v2[26] = type metadata accessor for MainActor();
  v2[27] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[28] = v8;
  v2[29] = v7;
  return _swift_task_switch(sub_100126508, v8, v7);
}

uint64_t sub_100126508()
{
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[12];
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_10011EB80(v1, 1, 1, v7);
  uint64_t v8 = sub_10012A264();
  swift_unknownObjectWeakInit();
  id v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[30] = v9;
  v0[31] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v2, v6, v4);
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v2, v4);
  *(void *)(v12 + ((v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  v0[32] = sub_10012D67C();
  type metadata accessor for TPTipsHelper();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[33] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1001266D0;
  return static TPTipsHelper.shared.getter();
}

uint64_t sub_1001266D0()
{
  sub_100120364();
  sub_10012A1B4();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v7 + 272) = v6;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 224);
  return _swift_task_switch(sub_1001267C8, v9, v8);
}

uint64_t sub_1001267C8()
{
  uint64_t v13 = (void *)v0[34];
  uint64_t v12 = (void (*)(uint64_t *, uint64_t, uint64_t))v0[30];
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  uint64_t v14 = v0[18];
  uint64_t v4 = v0[17];
  uint64_t v11 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[12];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for TPTipsHelper.Entry.Kind.speakerphone(_:), v6);
  v0[5] = v2;
  v0[6] = sub_100129EE4();
  uint64_t v8 = sub_100129F34(v0 + 2);
  v12(v8, v7, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v11, v4, v6);
  sub_100129F98((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  swift_retain();
  TPTipsHelper.Entry.init(_:tip:observationTask:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100129FFC((uint64_t)(v0 + 2));
  dispatch thunk of TPTipsHelper.addEntry(_:)();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001202F0();
  return v9();
}

uint64_t sub_10012699C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  v5[27] = a5;
  sub_10011EB3C(&qword_1003214D0);
  v5[28] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Tips.Status();
  v5[29] = v6;
  v5[30] = *(void *)(v6 - 8);
  v5[31] = swift_task_alloc();
  unsigned char v5[32] = sub_10011EB3C(&qword_1003214D8);
  v5[33] = swift_task_alloc();
  v5[34] = sub_10011EB3C(&qword_1003214E0);
  v5[35] = swift_task_alloc();
  uint64_t v7 = sub_10011EB3C(&qword_1003214E8);
  v5[36] = v7;
  v5[37] = *(void *)(v7 - 8);
  v5[38] = swift_task_alloc();
  uint64_t v8 = sub_10011EB3C(&qword_1003214F0);
  v5[39] = v8;
  v5[40] = *(void *)(v8 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = type metadata accessor for MainActor();
  v5[44] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[45] = v10;
  v5[46] = v9;
  return _swift_task_switch(sub_100126BFC, v10, v9);
}

uint64_t sub_100126BFC()
{
  sub_10012A298();
  sub_10012A2B4();
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[36];
  v0[47] = type metadata accessor for SpeakerphoneTip();
  v0[48] = sub_100129EE4();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100122B20(&qword_1003214F8, &qword_1003214D8);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v4 = static MainActor.shared.getter();
  v0[49] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[50] = v5;
  v0[51] = v7;
  sub_10012A238();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100126D90()
{
  sub_10012026C();
  uint64_t v1 = v0[49];
  v0[52] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100122B20(&qword_100321500, &qword_1003214E0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100126E88;
  uint64_t v3 = v0[28];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_100126E88()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v3 = v2;
  sub_10012A1CC();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_10012A1CC();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 400);
    uint64_t v8 = *(void *)(v3 + 408);
    uint64_t v9 = sub_100127164;
  }
  else
  {
    (*(void (**)(void))(v3 + 416))();
    uint64_t v7 = *(void *)(v3 + 400);
    uint64_t v8 = *(void *)(v3 + 408);
    uint64_t v9 = sub_100126F80;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_100126F80()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[29];
  if (sub_100120F20(v1, 1, v2) == 1)
  {
    sub_10012A04C(v1);
    swift_release();
    uint64_t v3 = v0[45];
    uint64_t v4 = v0[46];
    return _swift_task_switch(sub_10012782C, v3, v4);
  }
  else
  {
    uint64_t v6 = v0[41];
    uint64_t v5 = v0[42];
    uint64_t v7 = v0[39];
    uint64_t v8 = v0[40];
    (*(void (**)(void, uint64_t, uint64_t))(v0[30] + 32))(v0[31], v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    uint64_t v9 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[54] = v10;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v0[55] = v11;
    v0[56] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v11(v6, v7);
    uint64_t v15 = (int *)((char *)v9 + *v9);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[57] = v12;
    void *v12 = v0;
    v12[1] = sub_10012717C;
    uint64_t v13 = v0[31];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 58, v13);
  }
}

uint64_t sub_100127164()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t sub_10012717C()
{
  sub_10012A1B4();
  uint64_t v3 = v2;
  sub_10012A1CC();
  void *v4 = v3;
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[30];
  uint64_t v7 = v0[29];
  void *v4 = *v1;
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v3 + 465) = *(unsigned char *)(v3 + 464);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = v0[51];
  uint64_t v9 = v0[50];
  return _swift_task_switch(sub_100127300, v9, v8);
}

uint64_t sub_100127300()
{
  sub_100120364();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 368);
  return _swift_task_switch(sub_100127360, v1, v2);
}

uint64_t sub_100127360()
{
  sub_10012A2B4();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = (long long *)(v0 + 376);
    if ((*(unsigned char *)(v0 + 465) & 1) == 0)
    {
      sub_100127918();
      id v10 = v2;
      goto LABEL_19;
    }
    id v4 = [Strong speakerphoneTipReferenceButton];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)(v0 + 208);
      type metadata accessor for TipUIPopoverViewController();
      long long v7 = *v3;
      *(_OWORD *)(v0 + 136) = *v3;
      uint64_t v8 = v7;
      uint64_t v9 = sub_100129F34((uint64_t *)(v0 + 112));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v9, v6, v8);
      id v10 = v5;
      uint64_t v11 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      uint64_t v12 = TipUIPopoverViewController.popoverPresentationController.getter();
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        [v10 bounds];
        CGRect v49 = CGRectInset(v48, -3.0, -3.0);
        double x = v49.origin.x;
        double y = v49.origin.y;
        double width = v49.size.width;
        double height = v49.size.height;
        [v13 setSourceView:v10];
        [v13 setSourceRect:x, y, width, height];
        [v13 setPermittedArrowDirections:2];
        sub_10011EB3C(&qword_100321508);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100286410;
        id v19 = [v2 view];
        *(void *)(inited + 56) = sub_10011EB3C(&qword_100321510);
        *(void *)(inited + 32) = v19;
        uint64_t v20 = sub_10012A264();
        *(void *)(v20 + 16) = v2;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_10012A0E4;
        *(void *)(v21 + 24) = v20;
        *(void *)(inited + 88) = sub_10011EB3C(&qword_100321518);
        *(void *)(inited + 64) = sub_10012A124;
        *(void *)(inited + 72) = v21;
        id v22 = v2;
        uint64_t v23 = sub_1001261C0(inited);
        swift_setDeallocating();
        sub_1001A0E14();
        if (v23)
        {
          sub_100123340(0, (unint64_t *)&qword_100321390);
          v24.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        else
        {
          v24.super.Class isa = 0;
        }
        [v13 setPassthroughViews:v24.super.isa];

        id v33 = v11;
        id v34 = (uint64_t (*)())[v22 view];
        if (!v34)
        {
          __break(1u);
          return _swift_task_switch(v34, v35, v36);
        }
        id v37 = v34;
        [v34 frame];
        double v39 = v38;
        double v41 = v40;

        [v33 setPreferredContentSize:v39, v41];
        if (qword_100320590 != -1) {
          swift_once();
        }
        id v42 = (void *)*((void *)off_1003213A0 + 2);
        *((void *)off_1003213A0 + 2) = v33;
        id v43 = v33;

        [v22 presentViewController:v43 animated:1 completion:0];
LABEL_19:

        uint64_t v44 = static MainActor.shared.getter();
        *(void *)(v0 + 392) = v44;
        if (v44)
        {
          swift_getObjectType();
          uint64_t v45 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v36 = v46;
        }
        else
        {
          uint64_t v45 = 0;
          uint64_t v36 = 0;
        }
        *(void *)(v0 + 400) = v45;
        *(void *)(v0 + 408) = v36;
        id v34 = sub_100126D90;
        uint64_t v35 = v45;
        return _swift_task_switch(v34, v35, v36);
      }
      uint64_t v29 = sub_10012A1F0();
      v30(v29);
    }
    else
    {
      uint64_t v27 = sub_10012A1F0();
      v28(v27);
    }
  }
  else
  {
    uint64_t v25 = sub_10012A1F0();
    v26(v25);
  }
  swift_release();
  sub_10012A204();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001202F0();
  return v31();
}

uint64_t sub_10012782C()
{
  sub_100120498();
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_release();
  sub_10012A204();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001202F0();
  return v1();
}

id sub_1001278E4(void *a1)
{
  id v1 = [a1 endCallButton];

  return v1;
}

void sub_100127918()
{
  if (qword_100320590 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)*((void *)off_1003213A0 + 2);
  if (v0)
  {
    id v1 = v0;
    [v1 dismissViewControllerAnimated:1 completion:0];
    uint64_t v2 = off_1003213A0;
    swift_retain();

    id v3 = (id)v2[2];
    v2[2] = 0;
    swift_release();
  }
}

uint64_t sub_1001279E0()
{
  swift_release();
  return v0;
}

uint64_t sub_100127A08()
{
  uint64_t v0 = sub_1001279E0();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t _s24InCallServiceTipUserInfoCMa()
{
  return self;
}

uint64_t sub_100127A5C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100320590 != -1) {
    swift_once();
  }
  uint64_t v6 = off_1003213A0;
  if (*((void *)off_1003213A0 + 3))
  {
    swift_retain();
    sub_10011EB3C(&qword_1003215E0);
    Task.cancel()();
    swift_release();
    uint64_t v6 = off_1003213A0;
  }
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v5, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  id v8 = v0;
  uint64_t v9 = static MainActor.shared.getter();
  id v10 = (void *)swift_allocObject();
  _DWORD v10[2] = v9;
  _OWORD v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  void v10[5] = ObjectType;
  _OWORD v6[3] = sub_100138E78((uint64_t)v5, (uint64_t)&unk_100321498, (uint64_t)v10);
  swift_release();
  return swift_release();
}

uint64_t sub_100127C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[3] = a4;
  void v5[4] = a5;
  void v5[2] = a1;
  type metadata accessor for MainActor();
  void v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  void v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_100127C9C, v7, v6);
}

uint64_t sub_100127C9C()
{
  sub_100120498();
  uint64_t v1 = v0[4];
  type metadata accessor for TPTipsHelper();
  v0[8] = static TPTipsHelper.taskQueue.getter();
  uint64_t v2 = sub_10012A264();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  v0[9] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, void *, uint64_t, char *))((char *)&async function pointer to dispatch thunk of TaskQueue.sync<A>(_:)
                                                                + async function pointer to dispatch thunk of TaskQueue.sync<A>(_:));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  void *v4 = v0;
  v4[1] = sub_100127DC8;
  uint64_t v5 = v0[2];
  return v7(v5, &unk_1003214A8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100127DC8()
{
  sub_10012026C();
  sub_10012A1B4();
  uint64_t v2 = *v1;
  sub_10012A1CC();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100127EFC, v5, v4);
}

uint64_t sub_100127EFC()
{
  sub_100120364();
  swift_release();
  sub_1001202F0();
  return v0();
}

uint64_t sub_100127F58(uint64_t a1, uint64_t a2)
{
  v2[14] = a2;
  uint64_t v3 = type metadata accessor for CancellationError();
  v2[15] = v3;
  uint8_t v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SpeakerphoneTip();
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v2[21] = v5;
  v2[22] = *(void *)(v5 - 8);
  v2[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[24] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[25] = v6;
  v2[26] = v7;
  return _swift_task_switch(sub_100128138, v6, v7);
}

uint64_t sub_100128138()
{
  sub_10012026C();
  ContinuousClock.init()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100128224;
  sub_10012A22C();
  return v2();
}

uint64_t sub_100128224()
{
  sub_10012026C();
  uint64_t v2 = (void *)*v1;
  sub_10012A1CC();
  void *v4 = v3;
  void *v4 = *v1;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[22] + 8))(v2[23], v2[21]);
  uint64_t v5 = v2[26];
  uint64_t v6 = v2[25];
  if (v0) {
    uint64_t v7 = (uint64_t (*)())sub_100128BB8;
  }
  else {
    uint64_t v7 = sub_1001283D0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1001283D0()
{
  sub_10012026C();
  sub_10012A2D8();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 232) = Strong;
  if (Strong)
  {
    type metadata accessor for TPTipsHelper();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10012851C;
    return static TPTipsHelper.shared.getter();
  }
  else
  {
    swift_release();
    sub_10012A27C();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001202F0();
    return v3();
  }
}

uint64_t sub_10012851C()
{
  sub_10012026C();
  sub_10012A1D8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v7 + 248) = v6;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_100128648, v9, v8);
}

uint64_t sub_100128648()
{
  sub_10012026C();
  uint64_t v1 = (void *)v0[31];
  dispatch thunk of TPTipsHelper.setup()();

  SpeakerphoneTip.init()();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100128728;
  uint64_t v3 = v0[20];
  return sub_100126310(v3);
}

uint64_t sub_100128728()
{
  sub_100120498();
  sub_10012A1D8();
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[18];
  uint64_t v5 = *v1;
  sub_10012A1CC();
  void *v6 = v5;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v7 = v0[26];
  uint64_t v8 = v0[25];
  return _swift_task_switch(sub_1001288AC, v8, v7);
}

uint64_t sub_1001288AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  sub_10012A298();
  a21 = v23;
  a22 = v24;
  sub_10012A2B4();
  a20 = v22;
  uint64_t v25 = (void *)v22[29];
  swift_release();
  sub_100123340(0, (unint64_t *)&qword_100321370);
  id v26 = static OS_dispatch_queue.main.getter();
  uint64_t v27 = sub_10012A264();
  swift_unknownObjectWeakInit();
  v22[6] = sub_100129CD8;
  v22[7] = v27;
  v22[2] = _NSConcreteStackBlock;
  v22[3] = 1107296256;
  void v22[4] = sub_100128EB8;
  v22[5] = &unk_1002D1B78;
  id v28 = _Block_copy(v22 + 2);
  swift_release();
  *((_DWORD *)v22 + 66) = [v25 proximitySensorNotificationToken];
  uint32_t v29 = notify_register_dispatch("com.apple.backboard.proximity.changed", (int *)v22 + 66, v26, v28);
  _Block_release(v28);

  [v25 setProximitySensorNotificationToken:*((unsigned int *)v22 + 66)];
  if (v29)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10011EC48(v30, (uint64_t)qword_10032CBE8);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    id v34 = (void *)v22[29];
    if (v33)
    {
      a9 = v22 + 13;
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      a10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      *((_DWORD *)v22 + 67) = v29;
      uint64_t v36 = String.init<A>(reflecting:)();
      v22[13] = sub_1001412B0(v36, v37, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to observe proximity sensor state with status %s", v35, 0xCu);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }
    else
    {
    }
  }
  else
  {
  }
  sub_10012A27C();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10012A238();
  return v39(v38, v39, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_100128BB8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10012A298();
  sub_10012A2B4();
  uint64_t v23 = v22[28];
  swift_release();
  v22[12] = v23;
  swift_errorRetain();
  sub_10011EB3C(&qword_1003215E0);
  if (swift_dynamicCast())
  {
    uint64_t v25 = v22[16];
    uint64_t v24 = v22[17];
    uint64_t v26 = v22[15];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
LABEL_7:
    swift_errorRelease();
    goto LABEL_9;
  }
  swift_errorRelease();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10011EC48(v27, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    log = v28;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138412290;
    swift_errorRetain();
    uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
    v22[11] = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v31 = v32;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v29, "Failed to start observing tips due to %@", v30, 0xCu);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();

    goto LABEL_7;
  }
  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();

LABEL_9:
  sub_10012A27C();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10012A238();
  return v34(v33, v34, v35, v36, v37, v38, v39, v40, a9, log, a11, a12, a13, a14);
}

void sub_100128E5C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong proximityStateChanged];
  }
}

uint64_t sub_100128EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100128F54()
{
  uint64_t state64 = 0;
  if (notify_get_state((int)[v0 proximitySensorNotificationToken], &state64))
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10011EC48(v1, (uint64_t)qword_10032CBE8);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      uint64_t v5 = String.init<A>(reflecting:)();
      sub_1001412B0(v5, v6, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to fetch proximity sensor state, uint64_t result = %s", v4, 0xCu);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }
  }
  return static SpeakerphoneTip.isAwayFromFace.setter();
}

uint64_t sub_100129178()
{
  if (qword_100320590 != -1) {
    swift_once();
  }
  if (*((void *)off_1003213A0 + 3))
  {
    swift_retain();
    sub_10011EB3C(&qword_1003215E0);
    Task.cancel()();
    swift_release();
  }
  type metadata accessor for TPTipsHelper();
  static TPTipsHelper.taskQueue.getter();
  sub_10012A264();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_100129288(uint64_t a1)
{
  void v1[5] = a1;
  uint64_t v2 = type metadata accessor for TPTipsHelper.Entry.Kind();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100129348, 0, 0);
}

uint64_t sub_100129348()
{
  sub_100120364();
  sub_10012A2D8();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    v0[10] = type metadata accessor for MainActor();
    v0[11] = static MainActor.shared.getter();
    sub_10012A2C0();
    sub_100120408();
    sub_10012043C();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    swift_task_dealloc();
    sub_1001202F0();
    return v5();
  }
}

uint64_t sub_10012941C()
{
  sub_100120364();
  swift_release();
  sub_100127918();
  type metadata accessor for TPTipsHelper();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001294C4;
  return static TPTipsHelper.shared.getter();
}

uint64_t sub_1001294C4()
{
  sub_100120364();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 104) = v3;
  swift_task_dealloc();
  sub_10012A22C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100129594()
{
  sub_100120364();
  (*(void (**)(void, void, void))(v0[7] + 104))(v0[8], enum case for TPTipsHelper.Entry.Kind.speakerphone(_:), v0[6]);
  v0[14] = static MainActor.shared.getter();
  sub_10012A2C0();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100129630()
{
  sub_10012026C();
  uint64_t v1 = (void *)v0[13];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  swift_release();
  dispatch thunk of TPTipsHelper.removeEntries(_:)();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10012A22C();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_1001296C4()
{
  sub_100120364();
  *(void *)(v0 + 120) = static MainActor.shared.getter();
  sub_10012A2C0();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10012973C()
{
  sub_100120364();
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  *(_DWORD *)(v0 + 136) = [v1 proximitySensorNotificationToken];
  sub_10012A22C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1001297B4()
{
  sub_100120364();
  notify_cancel(*(_DWORD *)(v0 + 136));
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  sub_10012A2C0();
  sub_100120408();
  sub_10012043C();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100129834()
{
  sub_100120364();
  swift_release();
  if (qword_100320590 != -1) {
    swift_once();
  }
  _s24InCallServiceTipUserInfoCMa();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  off_1003213A0 = (_UNKNOWN *)v0;
  swift_release();
  sub_10012A22C();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1001298F0()
{
  sub_100120364();

  swift_task_dealloc();
  sub_1001202F0();
  return v1();
}

uint64_t sub_100129998()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001299D0()
{
  sub_100120364();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10012A1B0;
  return sub_100129288(v0);
}

uint64_t sub_100129A5C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100129A9C()
{
  sub_100120498();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100129B3C;
  uint64_t v3 = sub_100120290();
  return sub_100127C00(v3, v4, v5, v6, v7);
}

uint64_t sub_100129B3C()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_10012A1CC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1001202F0();
  return v3();
}

uint64_t sub_100129C00()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100129C38()
{
  sub_10012026C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10012A254(v4);
  void *v5 = v6;
  v5[1] = sub_10012A1B0;
  return sub_100127F58(v2, v3);
}

void sub_100129CD8()
{
}

uint64_t sub_100129CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100129CF0()
{
  return swift_release();
}

uint64_t sub_100129CF8()
{
  uint64_t v1 = type metadata accessor for SpeakerphoneTip();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100129DE0()
{
  sub_100120498();
  type metadata accessor for SpeakerphoneTip();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100129B3C;
  uint64_t v3 = sub_100120290();
  return sub_10012699C(v3, v4, v5, v6, v7);
}

unint64_t sub_100129EE4()
{
  unint64_t result = qword_1003214C8;
  if (!qword_1003214C8)
  {
    type metadata accessor for SpeakerphoneTip();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003214C8);
  }
  return result;
}

uint64_t *sub_100129F34(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100129F98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100129FFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10012A04C(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C(&qword_1003214D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012A0AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10012A0E4()
{
  return sub_1001278E4(*(void **)(v0 + 16));
}

uint64_t sub_10012A0EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012A124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_10012A154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10012A1F0()
{
  return *(void *)(v0 + 336);
}

uint64_t sub_10012A204()
{
  return swift_task_dealloc();
}

uint64_t sub_10012A254(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10012A264()
{
  return swift_allocObject();
}

uint64_t sub_10012A27C()
{
  return swift_task_dealloc();
}

uint64_t sub_10012A2C0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10012A2D8()
{
  return swift_beginAccess();
}

_UNKNOWN **sub_10012A2F8()
{
  return &off_1002D1C18;
}

id sub_10012A304()
{
  qword_100321520 = TUCallIsSharingScreenChangedNotification;
  return TUCallIsSharingScreenChangedNotification;
}

unint64_t FactoryOutcome.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t sub_10012A32C()
{
  return sub_10011DB44(*v0);
}

void sub_10012A334(int a1)
{
  sub_10011DC4C(a1, *v1);
}

uint64_t sub_10012A33C(uint64_t a1)
{
  return sub_10011DC98(a1, *v1);
}

unint64_t sub_10012A344@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = FactoryOutcome.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10012A378(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10012A3EC()
{
  swift_getObjectType();
  sub_10012D5F4();
  return v0();
}

uint64_t sub_10012A45C()
{
  CurrentValueSubject.value.getter();
  return v1;
}

uint64_t sub_10012A498()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___PHScreenSharingButtonViewModel_conversationProvider + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___PHScreenSharingButtonViewModel_conversationProvider + 32);
  sub_10012CB98((void *)(v0 + OBJC_IVAR___PHScreenSharingButtonViewModel_conversationProvider), v1);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  _OWORD v7[3] = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  void v7[4] = AssociatedConformanceWitness;
  sub_100129F34(v7);
  v3(v1, v2);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_100129FFC((uint64_t)v7);
  return v1 & 1;
}

char *sub_10012A59C(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10011EB3C(&qword_1003215E8);
  sub_10012D590();
  uint64_t v7 = v6;
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)v23 - v14;
  uint64_t v16 = self;
  id v17 = v2;
  id v18 = [v16 defaultCenter];
  if (qword_100320598 != -1) {
    swift_once();
  }
  uint64_t v19 = NSNotificationCenter.notifications(named:object:)();

  v23[1] = v19;
  type metadata accessor for NSNotificationCenter.Notifications();
  sub_10011EB3C(&qword_1003215F8);
  sub_10012CBDC();
  AsyncCompactMapSequence.init(_:transform:)();

  uint64_t v20 = (char *)objc_allocWithZone((Class)type metadata accessor for ScreenSharingButtonViewModel());
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v15, v5);
  uint64_t v21 = sub_10012CC2C(a1, a2, (uint64_t)v12, v20);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v5);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v21;
}

uint64_t sub_10012A7B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(sub_10012A7D0, 0, 0);
}

uint64_t sub_10012A7D0()
{
  sub_100120364();
  Notification.object.getter();
  uint64_t v1 = *(void **)(v0 + 48);
  if (*(void *)(v0 + 40))
  {
    sub_10011EB3C(&qword_1003215F8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v2 = *(void **)(v0 + 48);
      *uint64_t v2 = 0;
      v2[1] = 0;
    }
  }
  else
  {
    sub_10012D318(v0 + 16);
    *uint64_t v1 = 0;
    v1[1] = 0;
  }
  sub_1001202F0();
  return v3();
}

uint64_t sub_10012A8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[14] = type metadata accessor for MainActor();
  v5[15] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  uint8_t v5[16] = v7;
  v5[17] = v6;
  return _swift_task_switch(sub_10012A960, v7, v6);
}

uint64_t sub_10012A960()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v1[3];
  uint64_t v3 = sub_10012CB98(v1, v2);
  sub_10012D590();
  uint64_t v5 = v4;
  uint64_t v6 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v6, v3, v2);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  sub_100129F34(v0 + 2);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  swift_task_dealloc();
  swift_beginAccess();
  v0[18] = static MainActor.shared.getter();
  sub_10012D2C8((uint64_t)(v0 + 2), v0[5]);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10012AB34;
  sub_10012D5DC();
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v8, v9, v10);
}

uint64_t sub_10012AB34()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_10012AC78, v3, v2);
}

uint64_t sub_10012AC78()
{
  if (v0[10])
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = (void *)Strong;
      sub_10012B218();
    }
    swift_unknownObjectRelease();
    v0[18] = static MainActor.shared.getter();
    sub_10012D2C8((uint64_t)(v0 + 2), v0[5]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[19] = (uint64_t)v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10012AB34;
    sub_10012D5DC();
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, v5, v6);
  }
  else
  {
    swift_release();
    sub_100129FFC((uint64_t)(v0 + 2));
    sub_1001202F0();
    return v7();
  }
}

void sub_10012ADD4()
{
}

void sub_10012ADF4(unsigned __int8 a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___PHScreenSharingButtonViewModel_call + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3) & 1) != 0
    && *(unsigned char *)(v1 + OBJC_IVAR___PHScreenSharingButtonViewModel_userRequestedScreenSharingEnd) != 1)
  {
    uint64_t v5 = 2;
  }
  else
  {
    uint64_t v5 = (sub_10012A498() & 1) == 0;
  }

  sub_10012BE98(v5, a1);
}

uint64_t sub_10012AE94()
{
  uint64_t v1 = v0;
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CC18);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    _DWORD *v5 = 136315394;
    sub_10012D624((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobilePhone/InCallService/ScreenSharingButtonViewModel.swift", v11);
    sub_10012D5A8();
    sub_10012D668();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10012D648((void *)&_mh_execute_header, v6, v7, "%s[%ld]: userDidRequestScreenSharingToEnd");
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }

  *(unsigned char *)(v1 + OBJC_IVAR___PHScreenSharingButtonViewModel_userRequestedScreenSharingEnd) = 1;
  sub_10012ADF4(0x80u);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___PHScreenSharingButtonViewModel_call + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v8 + 24))(0, ObjectType, v8);
}

void sub_10012B074()
{
  uint64_t v1 = v0;
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CC18);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    _DWORD *v5 = 136315394;
    sub_10012D624((uint64_t)"/Library/Caches/com.apple.xbs/Sources/MobilePhone/InCallService/ScreenSharingButtonViewModel.swift", v8);
    sub_10012D5A8();
    sub_10012D668();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10012D648((void *)&_mh_execute_header, v6, v7, "%s[%ld]: userIsPresentingShareSheet");
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }

  *(unsigned char *)(v1 + OBJC_IVAR___PHScreenSharingButtonViewModel_userRequestedScreenSharingEnd) = 0;
  sub_10012ADF4(0x80u);
}

void sub_10012B218()
{
  swift_getObjectType();
  sub_10012D5F4();
  uint64_t v2 = v1();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)&v0[OBJC_IVAR___PHScreenSharingButtonViewModel_call + 8];
  uint64_t ObjectType = swift_getObjectType();
  if (v2 == (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5) && v4 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return;
    }
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  char v11 = v10(ObjectType, v5);
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10011EC48(v12, (uint64_t)qword_10032CC18);
  uint64_t v13 = v0;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    id v17 = v10;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315650;
    sub_1001412B0(0xD000000000000062, 0x80000001002341D0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 22) = 1026;
    v17(ObjectType, v5);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s[%ld]: isSharingScreen updated to %{BOOL,public}d", (uint8_t *)v16, 0x1Cu);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  if (v11) {
    v13[OBJC_IVAR___PHScreenSharingButtonViewModel_userRequestedScreenSharingEnd] = 0;
  }
  sub_10012ADF4(v11 & 1 | 0x40);
}

void sub_10012B504()
{
}

id sub_10012B544()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingButtonViewModel();
  return [super dealloc];
}

uint64_t sub_10012B5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v8, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = v2;
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  _OWORD v12[3] = &protocol witness table for MainActor;
  void v12[4] = v10;
  void v12[5] = a1;
  v12[6] = a2;
  sub_10012D67C();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  return AnyCancellable.init(_:)();
}

uint64_t sub_10012B728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_10011EB3C(&qword_1003215B8);
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v8 = sub_10011EB3C(&qword_1003215C0);
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  void v6[15] = type metadata accessor for MainActor();
  uint8_t v6[16] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[17] = v10;
  v6[18] = v9;
  return _swift_task_switch(sub_10012B888, v10, v9);
}

uint64_t sub_10012B888()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  v0[4] = *(void *)(v0[6] + OBJC_IVAR___PHScreenSharingButtonViewModel_state);
  sub_10011EB3C(&qword_1003215C8);
  sub_100122B20(&qword_1003215D0, &qword_1003215C8);
  Publisher<>.values.getter();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[19] = static MainActor.shared.getter();
  uint64_t v4 = sub_100122B20(&qword_1003215D8, &qword_1003215C0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[20] = v5;
  void *v5 = v0;
  v5[1] = sub_10012BA18;
  uint64_t v6 = v0[12];
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v6, v4);
}

uint64_t sub_10012BA18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v8 = sub_10012BD80;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v7;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v8 = sub_10012BBA4;
  }
  return _swift_task_switch(v8, v4, v6);
}

uint64_t sub_10012BBA4()
{
  sub_100120364();
  swift_release();
  *(void *)(v0 + 176) = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 25) = *(unsigned char *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  return _swift_task_switch(sub_10012BC14, v1, v2);
}

uint64_t sub_10012BC14()
{
  if (*(unsigned char *)(v0 + 25) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001202F0();
    return v1();
  }
  else
  {
    (*(void (**)(void))(v0 + 56))(*(void *)(v0 + 176));
    *(void *)(v0 + 152) = static MainActor.shared.getter();
    uint64_t v3 = sub_100122B20(&qword_1003215D8, &qword_1003215C0);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v4;
    void *v4 = v0;
    v4[1] = sub_10012BA18;
    uint64_t v5 = *(void *)(v0 + 96);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, v5, v3);
  }
}

uint64_t sub_10012BD80()
{
  sub_100120364();
  *(void *)(v0 + 40) = *(void *)(v0 + 168);
  sub_10011EB3C(&qword_1003215E0);
  uint64_t v1 = swift_dynamicCast();
  return _swift_willThrowTypedImpl(v1, &type metadata for Never, &protocol witness table for Never);
}

void sub_10012BE98(uint64_t a1, unsigned __int8 a2)
{
  CurrentValueSubject.value.getter();
  if (v20 == a1)
  {
    if (qword_100320550 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10011EC48(v4, (uint64_t)qword_10032CC18);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315906;
      sub_1001412B0(0xD000000000000062, 0x80000001002341D0, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 22) = 2082;
      uint64_t v8 = sub_10012C5A4(a1);
      sub_1001412B0(v8, v9, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 32) = 2082;
      unint64_t v10 = sub_10012C638(a2);
      sub_1001412B0(v10, v11, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s[%ld]: not updating button state to %{public}s, with reason: %{public}s because we are already in that state", (uint8_t *)v7, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_100320550 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10011EC48(v12, (uint64_t)qword_10032CC18);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315906;
      sub_1001412B0(0xD000000000000062, 0x80000001002341D0, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 22) = 2082;
      uint64_t v16 = sub_10012C5A4(a1);
      sub_1001412B0(v16, v17, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 32) = 2082;
      unint64_t v18 = sub_10012C638(a2);
      sub_1001412B0(v18, v19, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s[%ld]: updating button state to %{public}s, with reason: %{public}s", (uint8_t *)v15, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v20 = a1;
    CurrentValueSubject.send(_:)();
  }
}

void sub_10012C2D0()
{
}

void sub_10012C2D8()
{
}

void sub_10012C3BC(char a1)
{
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CC18);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    sub_1001412B0(0xD000000000000062, 0x80000001002341D0, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 22) = 1026;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s[%ld]: available updated to %{BOOL,public}d", (uint8_t *)v5, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10012ADF4(a1 & 1);
}

uint64_t sub_10012C5A4(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x64656C62616E65;
    case 2:
      uint64_t v1 = 0x7463656C6573;
      return v1 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
    case 1:
      uint64_t v1 = 0x6C6261736964;
      return v1 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
  }
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_10012C630()
{
  return sub_10012C5A4(*v0);
}

unint64_t sub_10012C638(unsigned __int8 a1)
{
  switch(a1 >> 6)
  {
    case 1:
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0x68736E6565726373;
      goto LABEL_10;
    case 2:
      if (a1 == 128) {
        unint64_t result = 0xD00000000000001DLL;
      }
      else {
        unint64_t result = 0xD00000000000001ALL;
      }
      break;
    case 3:
      if (a1 == 192) {
        unint64_t result = 0x6C616974696E69;
      }
      else {
        unint64_t result = 0x6163696669746F6ELL;
      }
      break;
    default:
      uint64_t v2 = 0x6C62616C69617661;
LABEL_10:
      unint64_t v8 = v2;
      if (a1) {
        uint64_t v4 = 1702195828;
      }
      else {
        uint64_t v4 = 0x65736C6166;
      }
      if (a1) {
        unint64_t v5 = 0xE400000000000000;
      }
      else {
        unint64_t v5 = 0xE500000000000000;
      }
      unint64_t v6 = v5;
      String.append(_:)(*(Swift::String *)&v4);
      swift_bridgeObjectRelease();
      v7._countAndFlagsBits = 41;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
      unint64_t result = v8;
      break;
  }
  return result;
}

unint64_t sub_10012C7B8()
{
  return sub_10012C638(*v0);
}

uint64_t sub_10012C7C0(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 6)
  {
    case 1:
      char v2 = ((a1 & 1) == 0) ^ a2;
      if ((a2 & 0xC0) != 0x40) {
        char v2 = 0;
      }
      break;
    case 2:
      BOOL v3 = a2 == 128;
      BOOL v4 = a2 == 129;
      BOOL v5 = a1 == 128;
      goto LABEL_6;
    case 3:
      BOOL v3 = a2 == 192;
      BOOL v4 = a2 == 193;
      BOOL v5 = a1 == 192;
LABEL_6:
      if (v5) {
        char v2 = v3;
      }
      else {
        char v2 = v4;
      }
      break;
    default:
      char v2 = ((a1 & 1) == 0) ^ a2;
      if (a2 >= 0x40u) {
        char v2 = 0;
      }
      break;
  }
  return v2 & 1;
}

uint64_t sub_10012C868(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10012C7C0(*a1, *a2);
}

id sub_10012C874@<X0>(void *a1@<X8>)
{
  id result = sub_10012C8A0();
  *a1 = result;
  return result;
}

id sub_10012C8A0()
{
  id v1 = [v0 conversationManager];

  return v1;
}

unint64_t sub_10012C8D8()
{
  return (unint64_t)sub_10012C900() & 1;
}

id sub_10012C900()
{
  return [v0 isScreenSharingAvailable];
}

id sub_10012C924(uint64_t a1, uint64_t a2)
{
  return sub_10012C948(a1, a2);
}

id sub_10012C948(uint64_t a1, uint64_t a2)
{
  return [v2 addDelegate:a1 queue:a2];
}

id sub_10012C968()
{
  return [v0 isSharingScreen];
}

uint64_t type metadata accessor for ScreenSharingButtonViewModel()
{
  return self;
}

ValueMetadata *type metadata accessor for ScreenSharingButtonViewModel.State()
{
  return &type metadata for ScreenSharingButtonViewModel.State;
}

unint64_t sub_10012C9C8()
{
  unint64_t result = qword_100321598;
  if (!qword_100321598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321598);
  }
  return result;
}

void sub_10012CA14()
{
  sub_10012C3BC(*(unsigned char *)(v0 + 16));
}

id sub_10012CA34(char a1)
{
  return [v1 setSharingScreen:a1 & 1];
}

uint64_t sub_10012CA48()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012CA80()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10012CA94()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10012CADC()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10012D58C;
  uint64_t v5 = sub_10012D60C();
  return sub_10012B728(v5, v6, v7, v8, v2, v3);
}

void *sub_10012CB98(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10012CBDC()
{
  unint64_t result = qword_100321600;
  if (!qword_100321600)
  {
    type metadata accessor for NSNotificationCenter.Notifications();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321600);
  }
  return result;
}

char *sub_10012CC2C(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100123340(0, &qword_1003259C0);
  uint64_t v40 = &off_100321528;
  v38[0] = a2;
  uint64_t v12 = sub_10011EB3C(&qword_1003215E8);
  v37[3] = v12;
  v37[4] = sub_100122B20(&qword_100321610, &qword_1003215E8);
  uint64_t v13 = sub_100129F34(v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v13, a3, v12);
  *(void *)&a4[OBJC_IVAR___PHScreenSharingButtonViewModel_cancellables] = &_swiftEmptyArrayStorage;
  uint64_t v14 = OBJC_IVAR___PHScreenSharingButtonViewModel_state;
  *(void *)&long long v33 = 0;
  sub_10011EB3C(&qword_1003215C8);
  swift_allocObject();
  uint64_t v15 = a4;
  *(void *)&a4[v14] = CurrentValueSubject.init(_:)();
  v15[OBJC_IVAR___PHScreenSharingButtonViewModel_userRequestedScreenSharingEnd] = 0;
  uint64_t v16 = &v15[OBJC_IVAR___PHScreenSharingButtonViewModel_call];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = &off_1002D1C30;
  sub_100129F98((uint64_t)v38, (uint64_t)&v15[OBJC_IVAR___PHScreenSharingButtonViewModel_conversationProvider]);
  swift_unknownObjectRetain();

  unint64_t v17 = (objc_class *)type metadata accessor for ScreenSharingButtonViewModel();
  v36.receiver = v15;
  v36.super_class = v17;
  id v18 = [super init];
  uint64_t v19 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v11, 1, 1, v19);
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100129F98((uint64_t)v37, (uint64_t)&v33);
  type metadata accessor for MainActor();
  uint64_t v21 = (char *)v18;
  swift_retain();
  uint64_t v22 = static MainActor.shared.getter();
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v22;
  v23[3] = &protocol witness table for MainActor;
  sub_10012D110(&v33, (uint64_t)(v23 + 4));
  v23[9] = v20;
  swift_release();
  sub_10012D67C();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  swift_retain();
  AnyCancellable.init(_:)();
  uint64_t v24 = &v21[OBJC_IVAR___PHScreenSharingButtonViewModel_cancellables];
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_1001BAF74(*(void *)((*(void *)v24 & 0xFFFFFFFFFFFFFF8) + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v25 = (id *)sub_10012CB98(v38, v39);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v35 = AssociatedConformanceWitness;
  id v28 = sub_100129F34((uint64_t *)&v33);
  *id v28 = (uint64_t)[*v25 conversationManager];
  sub_100123340(0, (unint64_t *)&qword_100321370);
  os_log_type_t v29 = v21;
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, void *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v29, v30, AssociatedTypeWitness, AssociatedConformanceWitness);

  sub_100129FFC((uint64_t)&v33);
  sub_10012ADF4(0xC0u);

  swift_release();
  sub_100129FFC((uint64_t)v37);
  sub_100129FFC((uint64_t)v38);
  return v29;
}

uint64_t sub_10012D090()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012D0C8()
{
  swift_unknownObjectRelease();
  sub_100129FFC(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10012D110(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10012D128()
{
  uint64_t v2 = *(void *)(v0 + 72);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_10012D1DC;
  uint64_t v4 = sub_10012D60C();
  return sub_10012A8C4(v4, v5, v6, v7, v2);
}

uint64_t sub_10012D1DC()
{
  sub_100120364();
  swift_task_dealloc();
  sub_1001202F0();
  return v0();
}

uint64_t sub_10012D2C8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10012D318(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C((uint64_t *)&unk_100321630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *initializeBufferWithCopyOfBuffer for ScreenSharingButtonViewModel.Reason(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ScreenSharingButtonViewModel.Reason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7D)
  {
    if (a2 + 131 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 131) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 132;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v5 >= 0x7C) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for ScreenSharingButtonViewModel.Reason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 131 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 131) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7C)
  {
    unsigned int v6 = ((a2 - 125) >> 8) + 1;
    *uint64_t result = a2 - 125;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012D4F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_10012D51C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  unsigned int v4 = (v1 | 0xFFFFFFFE) + 2 * (v1 >> 6);
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

unsigned char *sub_10012D53C(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_10012D54C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    LOBYTE(v2) = *result & 1 | ((_BYTE)a2 << 6);
  }
  else {
    int v2 = (a2 & 1 | (a2 >> 1 << 6)) + 64;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingButtonViewModel.Reason()
{
  return &type metadata for ScreenSharingButtonViewModel.Reason;
}

uint64_t sub_10012D5A8()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10012D5D4()
{
}

uint64_t sub_10012D60C()
{
  return v0;
}

uint64_t sub_10012D624@<X0>(uint64_t a1@<X8>, uint64_t a2, ...)
{
  va_start(va, a2);
  return sub_1001412B0(0xD000000000000062, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void sub_10012D648(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_10012D668()
{
  *(_WORD *)(v0 + 12) = 2048;
}

uint64_t sub_10012D67C()
{
  uint64_t v3 = sub_10012EDA8();
  if (sub_100120F20(v1, 1, v3) == 1)
  {
    sub_10012E7E8(v1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_10012EDE0();
    uint64_t v4 = sub_10012ED94();
    v5(v4);
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v0;
  return swift_task_create();
}

uint64_t sub_10012D7BC()
{
  uint64_t v3 = sub_10012EDA8();
  if (sub_100120F20(v1, 1, v3) == 1)
  {
    sub_10012E7E8(v1);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_10012EDE0();
    uint64_t v4 = sub_10012ED94();
    v5(v4);
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v0;
  sub_10011EB3C((uint64_t *)&unk_100322A90);
  return swift_task_create();
}

uint64_t MessageControlService.selectionsPublisher.getter()
{
  return swift_retain();
}

uint64_t MessageControlService.selectionsPublisher.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*MessageControlService.selectionsPublisher.modify())()
{
  return j__swift_endAccess;
}

id AddCallControlService.callCenter.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t MessageControlService.presentingViewController.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void MessageControlService.presentingViewController.setter(void *a1)
{
}

void (*MessageControlService.presentingViewController.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_10012DAF4;
}

void sub_10012DAF4(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

uint64_t sub_10012DB70()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[7];
  id v3 = v2;
  if (v2 != (void *)1) {
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong)
  {
    id v3 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = (void *)v1[3];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    sub_10012ED30();
    uint64_t v8 = v1[6];
    id v9 = v5;
    swift_unknownObjectRetain();
    id v3 = sub_10012DC5C(v9, v7, v8);
LABEL_6:
    uint64_t v10 = (void *)v1[7];
    v1[7] = v3;
    id v11 = v3;
    sub_10012E7B4(v10);
LABEL_7:
    sub_10012ED20(v2);
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

id sub_10012DC5C(void *a1, void *a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithIncomingCall:a1 customMessagePresentingViewController:a2 declineCallService:a3];

  swift_unknownObjectRelease();
  return v5;
}

uint64_t MessageControlService.__allocating_init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  MessageControlService.init(call:callCenter:)(a1, a2);
  return v4;
}

void *MessageControlService.init(call:callCenter:)(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_10011EB3C(&qword_100321640);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  v3[7] = 1;
  v3[3] = a1;
  void v3[4] = a2;
  id v10 = objc_allocWithZone((Class)type metadata accessor for DeclineCallServiceFactory());
  id v11 = a1;
  id v12 = a2;
  id v13 = [v10 init];
  type metadata accessor for DeclineCallService();
  swift_allocObject();
  id v14 = v12;
  uint64_t v15 = sub_1001BBEF4((uint64_t)v14);

  void v3[6] = v15;
  sub_10011EB3C(&qword_100321648);
  type metadata accessor for ControlSelection();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100286730;
  type metadata accessor for SystemImage();
  sub_10012EDC8((uint64_t)v9, 1);
  ControlSelection.init(uniqueIdentifier:label:systemImage:)();
  static SystemImage.walk.getter();
  sub_10012EDC8((uint64_t)v9, 0);
  ControlSelection.init(uniqueIdentifier:label:systemImage:)();
  static SystemImage.clock.getter();
  sub_10012EDC8((uint64_t)v9, 0);
  ControlSelection.init(uniqueIdentifier:label:systemImage:)();
  sub_10012EDC8((uint64_t)v9, 1);
  ControlSelection.init(uniqueIdentifier:label:systemImage:)();
  v19[1] = v16;
  sub_10011EB3C(&qword_100321650);
  swift_allocObject();
  uint64_t v17 = CurrentValueSubject.init(_:)();

  v3[2] = v17;
  return v3;
}

void MessageControlService.requestSendMessage(for:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)sub_10012DB70();
  if (v6)
  {
    id v16 = v6;
    if (ControlSelection.uniqueIdentifier.getter() == 0x6D6F74737543 && v7 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        ControlSelection.label.getter();
        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v16 sendDeclineWithMessageResponse:v10];

        uint64_t v11 = type metadata accessor for TaskPriority();
        sub_10011EB80((uint64_t)v5, 1, 1, v11);
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v12 = static MainActor.shared.getter();
        id v13 = (void *)swift_allocObject();
        v13[2] = v12;
        v13[3] = &protocol witness table for MainActor;
        void v13[4] = v1;
        sub_10012D67C();

        swift_release();
        return;
      }
    }
    [v16 showCustomReplyWithMessageComposer];
    id v14 = v16;
  }
}

uint64_t sub_10012E20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  type metadata accessor for MainActor();
  uint8_t v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v6;
  v4[18] = v5;
  return _swift_task_switch(sub_10012E2A4, v6, v5);
}

uint64_t sub_10012E2A4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = *(void **)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 24);
  NSString v4 = String._bridgeToObjectiveC()();
  v0[19] = v4;
  v0[2] = v0;
  v0[3] = sub_10012E3DC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10017A398;
  v0[13] = &unk_1002D1E20;
  v0[14] = v5;
  [v2 declineAnsweringWithCall:v3 anayticsSourceForDismissal:v4 reason:4 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10012E3DC()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 136);
  return _swift_task_switch(sub_10012E4BC, v2, v1);
}

uint64_t sub_10012E4BC()
{
  sub_100120364();
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id *MessageControlService.deinit()
{
  swift_release();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectRelease();
  sub_10012E7B4(v0[7]);
  return v0;
}

uint64_t MessageControlService.__deallocating_deinit()
{
  MessageControlService.deinit();

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_10012E59C()
{
  return swift_retain();
}

void sub_10012E5E0()
{
}

uint64_t sub_10012E604()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10012E644(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10012A254(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_10012E6F0;
  return sub_10012E20C(a1, v3, v4, v5);
}

uint64_t sub_10012E6F0()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_100120354();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void sub_10012E7B4(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t type metadata accessor for MessageControlService()
{
  return self;
}

uint64_t sub_10012E7E8(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012E848(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_10012E924;
  return v6(a1);
}

uint64_t sub_10012E924()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_100120354();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_10012E9EC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10012EACC;
  return v5(v2 + 16);
}

uint64_t sub_10012EACC()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v2 = v1;
  uint64_t v4 = *(_OWORD **)(v3 + 32);
  uint64_t v5 = *v0;
  sub_100120354();
  void *v6 = v5;
  swift_task_dealloc();
  _OWORD *v4 = *(_OWORD *)(v2 + 16);
  uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  return v7();
}

uint64_t sub_10012EBB0()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10012E6F0;
  uint64_t v3 = sub_10012ED78();
  return v4(v3);
}

uint64_t sub_10012EC4C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012EC84()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10012ED70;
  uint64_t v3 = sub_10012ED78();
  return v4(v3);
}

id sub_10012ED20(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

unint64_t sub_10012ED30()
{
  unint64_t result = qword_1003217A0;
  if (!qword_1003217A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1003217A0);
  }
  return result;
}

uint64_t sub_10012ED78()
{
  return v0;
}

uint64_t sub_10012ED94()
{
  return v0;
}

uint64_t sub_10012EDA8()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_10012EDC8(uint64_t a1, uint64_t a2)
{
  return sub_10011EB80(a1, a2, 1, v2);
}

uint64_t sub_10012EDF4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void *sub_10012EE6C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ICSPosterConfigurationWrapper_configuration);
  id v2 = v1;
  return v1;
}

uint64_t sub_10012EEC0()
{
  return *(void *)(v0 + OBJC_IVAR___ICSPosterConfigurationWrapper_source);
}

void *sub_10012EF04()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes);
  id v2 = v1;
  return v1;
}

void sub_10012EF90(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes);
  *(void *)(v1 + OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes) = a1;
}

id sub_10012EFA4(void *a1, uint64_t a2)
{
  uint64_t v3 = OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes;
  *(void *)&v2[OBJC_IVAR___ICSPosterConfigurationWrapper_titleStyleAttributes] = 0;
  *(void *)&v2[OBJC_IVAR___ICSPosterConfigurationWrapper_configuration] = a1;
  *(void *)&v2[OBJC_IVAR___ICSPosterConfigurationWrapper_source] = a2;
  uint64_t v4 = *(void **)&v2[v3];
  *(void *)&v2[v3] = 0;
  id v5 = a1;

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for PosterConfigurationWrapper();
  [super init];

  return v6;
}

void sub_10012F070()
{
}

id sub_10012F0B0()
{
  return sub_10012F278(type metadata accessor for PosterConfigurationWrapper);
}

uint64_t sub_10012F138()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_outcome);
}

uint64_t sub_10012F17C()
{
  return swift_unknownObjectRetain();
}

id sub_10012F18C(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_outcome] = a1;
  *(void *)&v2[OBJC_IVAR____TtC13InCallService32DetailsCoordinatorCreationResult_coordinator] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DetailsCoordinatorCreationResult();
  return [super init];
}

void DetailsCoordinatorCreationResult.init()()
{
}

id DetailsCoordinatorCreationResult.__deallocating_deinit()
{
  return sub_10012F278(type metadata accessor for DetailsCoordinatorCreationResult);
}

id sub_10012F278(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for DetailsCoordinatorCreationResult()
{
  return self;
}

BOOL sub_10012F2E4(Swift::UInt32 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t PHAudioCallViewController.makeLockObserver(with:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PhoneLockStateObserver();
  Swift::Int v4 = (void *)static PhoneLockStateObserver.shared.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_retain();
  PhoneLockStateObserver.listen(with:)();

  return swift_release();
}

uint64_t sub_10012F47C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012F4B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id PHAudioCallViewController.makeCallDetailsCoordinator(bannerPresentationManager:existingCoordinator:deferredPresentationManager:)(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v5 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
  sub_100138D6C();
  id v6 = *v5;
  uint64_t v7 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

  if (!v7)
  {
    if (a2)
    {
      id v14 = objc_allocWithZone((Class)type metadata accessor for DetailsCoordinatorCreationResult());
      return sub_10012F18C(1, 0);
    }
    uint64_t v7 = 0;
LABEL_9:
    id v15 = objc_allocWithZone((Class)type metadata accessor for DetailsCoordinatorCreationResult());
    id v13 = sub_10012F18C(0, 0);

    return v13;
  }
  if (a2) {
    goto LABEL_9;
  }
  id v8 = v7;
  if (![v3 parentViewController]) {
    id v9 = v3;
  }
  objc_allocWithZone((Class)type metadata accessor for CallDetailsCoordinator());
  id v10 = v8;
  swift_unknownObjectRetain();
  uint64_t v11 = CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)();
  id v12 = objc_allocWithZone((Class)type metadata accessor for DetailsCoordinatorCreationResult());
  id v13 = sub_10012F18C(2, v11);

  return v13;
}

uint64_t PHAudioCallViewController.makeHeldCallControls(callCenter:style:)(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for HeldInCallControlsView.Style();
  sub_100122300();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_100138DC0();
  id v10 = [v2 features];
  unsigned int v11 = [v10 shouldEmbedSwapBanner];

  uint64_t result = 0;
  if (v11)
  {
    id v13 = (unsigned int *)&enum case for HeldInCallControlsView.Style.ambient(_:);
    if (a2 != 3) {
      id v13 = (unsigned int *)&enum case for HeldInCallControlsView.Style.regular(_:);
    }
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v2, *v13, v5);
    type metadata accessor for HeldInCallControlsView();
    id v14 = a1;
    return HeldInCallControlsView.__allocating_init(callCenter:style:)();
  }
  return result;
}

void sub_10012F904()
{
  uint64_t v1 = v0;
  id v2 = [v0 features];
  unsigned int v3 = [v2 isNameAndPhotoC3Enabled];

  if (v3)
  {
    type metadata accessor for NameAndPhotoUtilities();
    Swift::Int v4 = (void *)static NameAndPhotoUtilities.shared.getter();
    sub_100137D38(&qword_100321948, (unint64_t *)&qword_100321940);
    swift_unknownObjectRetain();
    NameAndPhotoUtilities.delegate.setter();

    swift_unknownObjectWeakInit();
    sub_10013009C(v1);
    swift_unknownObjectWeakDestroy();
  }
}

void sub_10012F9E4()
{
  sub_1001233C4();
  uint64_t v73 = v1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  sub_100122300();
  uint64_t v80 = v3;
  __chkstk_darwin(v4, v5);
  sub_100138CB8();
  uint64_t v79 = v6;
  uint64_t v7 = type metadata accessor for DispatchQoS();
  sub_100122300();
  uint64_t v78 = v8;
  __chkstk_darwin(v9, v10);
  sub_100138CB8();
  uint64_t v77 = v11;
  sub_100138DB4();
  type metadata accessor for ConversationControlsType();
  sub_100122300();
  uint64_t v71 = v13;
  uint64_t v72 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v12, v16);
  uint64_t v70 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100138DB4();
  type metadata accessor for DispatchTime();
  sub_100122300();
  uint64_t v75 = v18;
  uint64_t v76 = v17;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  v74 = (char *)&v64 - v24;
  sub_100138DB4();
  type metadata accessor for UUID();
  sub_100122300();
  uint64_t v26 = v25;
  __chkstk_darwin(v27, v28);
  sub_100138DC0();
  id v29 = [v0 callCenter];
  id v30 = [v29 callsWithStatus:1];

  sub_100123340(0, (unint64_t *)&qword_100323D80);
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v62)
    {
LABEL_3:
      uint64_t v68 = v7;
      uint64_t v69 = v2;
      uint64_t v67 = v22;
      if ((v31 & 0xC000000000000001) != 0)
      {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_19;
        }
        id v32 = *(id *)(v31 + 32);
      }
      long long v33 = v32;
      swift_bridgeObjectRelease();
      id v34 = [v0 callUUIDsThatPresentedSNaPHUD];
      id v35 = [v33 uniqueProxyIdentifierUUID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      uint64_t v37 = *(void (**)(uint64_t))(v26 + 8);
      uint64_t v38 = sub_100138E58();
      v37(v38);
      unsigned __int8 v39 = [v34 containsObject:isa];

      if ((v39 & 1) == 0)
      {
        CGRect v65 = v0;
        id v44 = [v0 callUUIDsThatPresentedSNaPHUD];
        id v66 = v33;
        id v45 = [v33 uniqueProxyIdentifierUUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        Class v46 = UUID._bridgeToObjectiveC()().super.isa;
        uint64_t v47 = sub_100138E58();
        v37(v47);
        [v44 addObject:v46];

        sub_100123340(0, (unint64_t *)&qword_100321370);
        uint64_t v64 = static OS_dispatch_queue.main.getter();
        CGRect v48 = v67;
        static DispatchTime.now()();
        type metadata accessor for NameAndPhotoUtilities();
        static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner.getter();
        CGRect v49 = v74;
        + infix(_:_:)();
        uint64_t v50 = v76;
        uint64_t v75 = *(void *)(v75 + 8);
        ((void (*)(char *, uint64_t))v75)(v48, v76);
        id v52 = v70;
        uint64_t v51 = v71;
        uint64_t v53 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v73, v72);
        unint64_t v54 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        uint64_t v55 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v55 + v54, v52, v53);
        id v56 = v65;
        *(void *)(v55 + ((v15 + v54 + 7) & 0xFFFFFFFFFFFFFFF8)) = v65;
        v81[4] = sub_100138BFC;
        v81[5] = v55;
        v81[0] = _NSConcreteStackBlock;
        v81[1] = 1107296256;
        v81[2] = sub_10012EDF4;
        v81[3] = &unk_1002D1FC0;
        id v57 = _Block_copy(v81);
        id v58 = v56;
        swift_release();
        static DispatchQoS.unspecified.getter();
        v81[0] = &_swiftEmptyArrayStorage;
        sub_100125EF8();
        sub_10011EB3C((uint64_t *)&unk_100321380);
        sub_100125F48();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v59 = (void *)v64;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v57);

        sub_100138D8C();
        v60();
        sub_100138D8C();
        v61();
        ((void (*)(char *, uint64_t))v75)(v49, v50);
LABEL_12:
        sub_100123384();
        return;
      }
      unint64_t v31 = (unint64_t)v33;
      if (qword_100320548 == -1)
      {
LABEL_8:
        uint64_t v40 = type metadata accessor for Logger();
        uint64_t v41 = sub_100138D44(v40, (uint64_t)qword_10032CC00);
        os_log_type_t v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)sub_100138CE8();
          *(_WORD *)uint64_t v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "We have already present SNaPHUD once. So dismiss this time.", v43, 2u);
          sub_100120278();
        }

        goto LABEL_12;
      }
LABEL_19:
      swift_once();
      goto LABEL_8;
    }
  }
  else if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  sub_100123384();
  swift_bridgeObjectRelease();
}

void sub_10013009C(void *a1)
{
  uint64_t v2 = sub_10011EB3C((uint64_t *)&unk_1003217B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConversationControlsType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 callCenter];
  id v12 = [v11 callsWithStatus:1];

  sub_100123340(0, (unint64_t *)&qword_100323D80);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_15;
  }
LABEL_3:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v14 = *(id *)(v13 + 32);
  }
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  type metadata accessor for NameAndPhotoUtilities();
  uint64_t v16 = (void *)static NameAndPhotoUtilities.shared.getter();
  sub_100137D38(&qword_100321950, (unint64_t *)&qword_100323D80);
  id v17 = v15;
  NameAndPhotoUtilities.suggestedBannerType(for:)();

  if (sub_100120F20((uint64_t)v5, 1, v6) == 1)
  {

    sub_100138A58((uint64_t)v5, (uint64_t *)&unk_1003217B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    if ([v17 status] == 1)
    {
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v19 = (void *)Strong;
        sub_10012F9E4();

        id v17 = v19;
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
}

void sub_100130470(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
  sub_100138D6C();
  id v4 = *v3;
  uint64_t v5 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

  if (v5)
  {
    sub_100137D38(&qword_100321938, (unint64_t *)&qword_100321940);
    id v6 = v5;
    id v7 = v2;
    dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.setter();

    id v8 = v6;
    v9.value.super.super.Class isa = (Class)sub_100138E40();
    ConversationControlsManager.presentShareCard(source:)(v9);
  }
}

void sub_1001305B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConversationControlsType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v28 - v9;
  if (qword_100320548 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10011EC48(v11, (uint64_t)qword_10032CC00);
  id v32 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v33 = v3 + 16;
  v32(v10, a1, v2);
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    id v30 = v7;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v29 = a1;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v31 = v3;
    uint64_t v16 = ConversationControlsType.debugDescription.getter();
    uint64_t v34 = sub_1001412B0(v16, v17, &v35);
    uint64_t v3 = v31;
    a1 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v10, v2);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "we are going to present SNaP hud, because suggestedBannerType = %s.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v7 = v30;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v10, v2);
  }

  id v19 = [self sharedApplication];
  id v20 = [v19 delegate];

  if (v20)
  {
    self;
    uint64_t v21 = swift_dynamicCastObjCClass();
    if (!v21)
    {
LABEL_14:
      swift_unknownObjectRelease();
      return;
    }
    uint64_t v22 = (void *)v21;
    v32(v7, a1, v2);
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
    if (v23 == enum case for ConversationControlsType.shareNameAndPhoto(_:))
    {
      id v24 = [v22 bannerPresentationManager];
      id v25 = v24;
      uint64_t v26 = "PHAudioCallViewController requesting showShareNameAndPhotoHUD";
      uint64_t v27 = &BannerPresentationManager.showShareNameAndPhotoHUD();
    }
    else
    {
      if (v23 != enum case for ConversationControlsType.shareName(_:))
      {
        if (v23 != enum case for ConversationControlsType.incomingNameUpdate(_:))
        {
          swift_unknownObjectRelease();
          v18(v7, v2);
          return;
        }
        id v25 = [v22 bannerPresentationManager];
        sub_100130B3C((uint64_t)v25);
        goto LABEL_13;
      }
      id v24 = [v22 bannerPresentationManager];
      id v25 = v24;
      uint64_t v26 = "PHAudioCallViewController requesting showShareNameHUD";
      uint64_t v27 = &BannerPresentationManager.showShareNameHUD();
    }
    sub_100130A08((uint64_t)v24, v26, (void (*)(void))v27);
LABEL_13:

    goto LABEL_14;
  }
}

void sub_100130A08(uint64_t a1, const char *a2, void (*a3)(void))
{
  id v8 = [v3 features];
  unsigned int v9 = [v8 isNameAndPhotoC3Enabled];

  if (v9)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = sub_100138D44(v10, (uint64_t)qword_10032CBE8);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (_WORD *)sub_100138CE8();
      sub_100138E4C(v13);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, a2, v4, 2u);
      sub_100120278();
    }

    uint64_t v14 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
    sub_100138D6C();
    id v15 = *v14;
    a3();
  }
}

void sub_100130B3C(uint64_t a1)
{
  id v3 = [v1 features];
  unsigned int v4 = [v3 isNameAndPhotoC3Enabled];

  if (v4)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10011EC48(v5, (uint64_t)qword_10032CBE8);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "PHAudioCallViewController requesting showIncomingNameUpdateHUD", v8, 2u);
      swift_slowDealloc();
    }

    id v9 = [self sharedApplication];
    id v10 = [v9 delegate];

    if (v10)
    {
      self;
      uint64_t v11 = (void *)swift_dynamicCastObjCClass();
      if (v11) {
        [v11 setIsShowingIncomingNameUpdate:1];
      }
      swift_unknownObjectRelease();
    }
    os_log_type_t v12 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
    swift_beginAccess();
    id v13 = *v12;
    BannerPresentationManager.showIncomingNameUpdateHUD()();
  }
}

uint64_t sub_100130D04()
{
  uint64_t v0 = (void *)type metadata accessor for NameAndPhotoUtilities();
  static NameAndPhotoUtilities.shared.getter();
  sub_100138E40();
  uint64_t v1 = NameAndPhotoUtilities.currentIMNickname(matching:)();

  return v1;
}

void *sub_100130DAC(void *a1)
{
  unsigned int v3 = [v1 hasLastSeenPosterForCall:a1];
  uint64_t result = 0;
  if (v3)
  {
    if (a1)
    {
      uint64_t result = (void *)sub_1001766A0(a1);
      if (result)
      {
        if (!result[2]) {
          goto LABEL_9;
        }
        uint64_t v6 = result[4];
        uint64_t v5 = result[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v7 = [self standardUserDefaults];
        NSString v8 = String._bridgeToObjectiveC()();
        id v9 = [v7 dictionaryForKey:v8];

        if (v9)
        {
          uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          sub_100138FC0(v6, v5, v10, &v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13)
          {
            sub_10011EB3C(&qword_100321908);
            if (swift_dynamicCast()) {
              return (void *)v11;
            }
          }
          else
          {
            sub_100138A58((uint64_t)&v12, (uint64_t *)&unk_100321630);
          }
        }
        else
        {
LABEL_9:
          swift_bridgeObjectRelease();
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100130F58(void *a1)
{
  if (!a1) {
    goto LABEL_12;
  }
  id v1 = a1;
  uint64_t v2 = (void *)sub_1001766A0(v1);
  if (!v2) {
    goto LABEL_11;
  }
  if (!v2[2])
  {

    swift_bridgeObjectRelease();
LABEL_12:
    char v10 = 0;
    return v10 & 1;
  }
  uint64_t v3 = v2[4];
  uint64_t v4 = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = [self standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 dictionaryForKey:v6];

  if (!v7)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10013B954(v3, v4);
  char v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10 & 1;
}

uint64_t sub_100131110(void *a1)
{
  uint64_t result = (uint64_t)sub_100130DAC(a1);
  if (result)
  {
    sub_100138FC0(0x7469736E65537369, 0xEE0079654B657669, result, &v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t result = sub_100138E28();
      if (result) {
        return v2;
      }
    }
    else
    {
      sub_100138A58((uint64_t)&v3, (uint64_t *)&unk_100321630);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10013120C(void *a1)
{
  uint64_t v1 = (uint64_t)sub_100130DAC(a1);
  if (!v1) {
    return v1;
  }
  unint64_t v2 = sub_100138DD8();
  sub_100138FC0(v2, v3, v1, v4);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    sub_100138A58((uint64_t)&v24, (uint64_t *)&unk_100321630);
    return 0;
  }
  if ((sub_100138E28() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = v23[0];
  uint64_t v5 = v23[1];
  id v7 = [self defaultManager];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 contentsAtPath:v8];

  if (v9)
  {
    uint64_t v1 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v1 = 0;
    unint64_t v11 = 0xF000000000000000;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10011EC48(v13, (uint64_t)qword_10032CBE8);
  uint64_t v14 = sub_100138E40();
  sub_100138AA4(v14, v11);
  sub_100138AA4(v1, v11);
  swift_bridgeObjectRetain();
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v24 = v6;
    unint64_t v25 = v5;
    swift_bridgeObjectRetain();
    uint64_t v18 = String.init<A>(reflecting:)();
    uint64_t v24 = sub_1001412B0(v18, v19, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    if (v11 >> 60 == 15)
    {
      unint64_t v20 = 0xE300000000000000;
      uint64_t v21 = sub_100138E6C();
    }
    else
    {
      uint64_t v24 = v1;
      unint64_t v25 = v11;
      sub_100138AB8(v1, v11);
      uint64_t v21 = String.init<A>(reflecting:)();
      unint64_t v20 = v22;
    }
    uint64_t v24 = sub_1001412B0(v21, v20, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001389EC(v1, v11);
    sub_1001389EC(v1, v11);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "SNAP: Reading from cached last file path %s returned data: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1001389EC(v1, v11);
    sub_1001389EC(v1, v11);
  }

  return v1;
}

void *sub_1001315F8(void *a1)
{
  uint64_t result = sub_100130DAC(a1);
  if (result)
  {
    sub_100138FC0(0xD000000000000016, 0x8000000100234710, (uint64_t)result, &v2);
    swift_bridgeObjectRelease();
    if (v3)
    {
      sub_10011EB3C(&qword_100321908);
      if (sub_100138E28())
      {
        sub_100123340(0, &qword_100321930);
        sub_100138E40();
        return sub_1001316C0();
      }
    }
    else
    {
      sub_100138A58((uint64_t)&v2, (uint64_t *)&unk_100321630);
    }
    return 0;
  }
  return result;
}

id sub_1001316C0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithDictionaryRepresentation:isa];

  return v2;
}

BOOL sub_1001317AC(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

uint64_t sub_1001317DC(void *a1)
{
  id v2 = v1;
  id v4 = [v2 features];
  unsigned int v5 = [v4 isNameAndPhotoC3Enabled];

  uint64_t result = 0;
  if (v5 && a1)
  {
    id v7 = a1;
    id v8 = [v2 contactToDisplayInCallWallpaperForCall:v7];
    id v9 = [v2 sharedProfileStateOracleForCall:v7];
    if (![self contactIsInAutoUpdateState:v8])
    {

      return 0;
    }
    id v10 = v7;
    unint64_t v11 = sub_100130DAC(a1);

    if (v11)
    {
      sub_100138FC0(0xD000000000000013, 0x80000001002346F0, (uint64_t)v11, &v52);
      swift_bridgeObjectRelease();
      if (*((void *)&v53 + 1))
      {
        int v12 = swift_dynamicCast();
        if (v12) {
          uint64_t v13 = v51[0];
        }
        else {
          uint64_t v13 = 0;
        }
        if (v12) {
          uint64_t v14 = v51[1];
        }
        else {
          uint64_t v14 = 0;
        }
LABEL_16:
        id v15 = [v9 avatarViewAnimationTypeForEffectiveState];
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        sub_10011EC48(v16, (uint64_t)qword_10032CBE8);
        swift_bridgeObjectRetain_n();
        id v17 = v9;
        uint64_t v18 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.default.getter();
        unint64_t v20 = &selRef_colorForKeyPadButtonType_;
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v50 = v13;
          id v48 = v10;
          uint64_t v21 = swift_slowAlloc();
          v51[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 136315906;
          id v49 = v15;
          *(void *)&long long v52 = v15;
          type metadata accessor for CNSharedProfileAvatarAnimationType(0);
          uint64_t v22 = String.init<A>(reflecting:)();
          *(void *)&long long v52 = sub_1001412B0(v22, v23, v51);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 12) = 2080;
          id v24 = [v17 currentNickname];
          if (v24
            && (unint64_t v25 = v24,
                id v26 = [v24 wallpaper],
                v25,
                v26)
            && (uint64_t v27 = sub_100138760(v26), v28))
          {
            *(void *)&long long v52 = v27;
            *((void *)&v52 + 1) = v28;
            uint64_t v29 = String.init<A>(reflecting:)();
            unint64_t v31 = v30;
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v31 = 0xE300000000000000;
            uint64_t v29 = sub_100138E6C();
          }
          *(void *)&long long v52 = sub_1001412B0(v29, v31, v51);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 22) = 2080;
          id v40 = [v17 pendingNickname];
          id v41 = [v40 wallpaper];

          if (v41)
          {
            *(void *)&long long v52 = v41;
            sub_100123340(0, (unint64_t *)&unk_100321920);
            uint64_t v42 = String.init<A>(reflecting:)();
            unint64_t v44 = v43;
          }
          else
          {
            unint64_t v44 = 0xE300000000000000;
            uint64_t v42 = sub_100138E6C();
          }
          *(void *)&long long v52 = sub_1001412B0(v42, v44, v51);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 32) = 2080;
          if (v14)
          {
            *(void *)&long long v52 = v50;
            *((void *)&v52 + 1) = v14;
            swift_bridgeObjectRetain();
            uint64_t v45 = String.init<A>(reflecting:)();
            unint64_t v47 = v46;
            id v10 = v48;
          }
          else
          {
            unint64_t v47 = 0xE300000000000000;
            id v10 = v48;
            uint64_t v45 = sub_100138E6C();
          }
          *(void *)&long long v52 = sub_1001412B0(v45, v47, v51);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v18, v19, "SNAP: suggestedNewPosterSourceAfterCallConnects effectiveAnimationType: %s \n oracle.currentNickname.wallpaper.filePath: %s \n oracle.pendingNickname.wallpaper: %s \n lastSeenContacts: %s", (uint8_t *)v21, 0x2Au);
          swift_arrayDestroy();
          sub_100120278();
          sub_100120278();

          uint64_t v13 = v50;
          unint64_t v20 = &selRef_colorForKeyPadButtonType_;
          if (!v49) {
            goto LABEL_47;
          }
        }
        else
        {

          swift_bridgeObjectRelease_n();
          if (!v15)
          {
LABEL_47:

            swift_bridgeObjectRelease();
            return 3;
          }
        }
        id v32 = [v17 v20[231]];
        if (v32
          && (uint64_t v33 = v32, v34 = [v32 wallpaper],
                         v33,
                         v34)
          && (uint64_t v35 = sub_100138760(v34), v36))
        {
          if (v14)
          {
            if (v35 != v13 || v36 != v14)
            {
              char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v38)
              {

                return 0;
              }
              goto LABEL_37;
            }

            swift_bridgeObjectRelease();
LABEL_52:
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        else
        {
          if (!v14)
          {

            goto LABEL_52;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
LABEL_37:
        unsigned __int8 v39 = [self posterSourceIsSyncedWithContacts:[v2 currentDisplayedPosterSourceForCall:v10]];

        if ((v39 & 1) == 0) {
          return 2;
        }
        return 0;
      }
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
    }
    sub_100138A58((uint64_t)&v52, (uint64_t *)&unk_100321630);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100131EE4(void *a1)
{
  id v3 = [v1 callDisplayStyleManager];
  id v4 = [v3 callDisplayStyle];

  if (v4 == (id)3) {
    goto LABEL_2;
  }
  id v7 = [v1 features];
  unsigned int v8 = [v7 isNameAndPhotoC3Enabled];

  char v5 = 0;
  if (v8 && a1)
  {
    id v9 = a1;
    id v10 = [v1 contactToDisplayInCallWallpaperForCall:v9];
    id v11 = [v1 currentDisplayedPosterSourceForCall:v9];
    if (v11 == (id)1)
    {

      char v5 = 1;
      return v5 & 1;
    }
    if ([self posterSourceIsSyncedWithContacts:v11])
    {

LABEL_2:
      char v5 = 0;
      return v5 & 1;
    }
    id v12 = [v1 sharedProfileStateOracleForCall:v9];
    unint64_t v13 = (unint64_t)[v12 effectiveStateForContact];
    if (v13 == 3)
    {
      id v14 = [v12 pendingNickname];
      id v15 = [v14 wallpaper];

      if (!v15)
      {
        id v16 = [v12 currentNickname];
        id v17 = [v16 wallpaper];

        if (!v17)
        {

          goto LABEL_2;
        }
      }
    }
    id v18 = v9;
    os_log_type_t v19 = sub_100130DAC(a1);

    if (v19)
    {
      unint64_t v20 = sub_100138DD8();
      sub_100138FC0(v20, v21, (uint64_t)v19, v22);
      swift_bridgeObjectRelease();
      if (*((void *)&v37 + 1))
      {
        int v23 = sub_100138E28();
        if (v23) {
          uint64_t v24 = v34;
        }
        else {
          uint64_t v24 = 0;
        }
        if (v23) {
          uint64_t v25 = v35;
        }
        else {
          uint64_t v25 = 0;
        }
LABEL_23:
        if ((v13 | 2) != 3)
        {

          swift_bridgeObjectRelease();
          goto LABEL_2;
        }
        id v26 = [v12 currentNickname];
        if (v26
          && (v27 = v26, id v28 = [v26 wallpaper],
                         v27,
                         v28))
        {
          uint64_t v29 = sub_100138760(v28);
          if (v30)
          {
            if (v25)
            {
              if (v29 == v24 && v30 == v25) {
                char v32 = 1;
              }
              else {
                char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              goto LABEL_44;
            }
            swift_bridgeObjectRelease();

            goto LABEL_36;
          }
          uint64_t v33 = v12;
          id v12 = v10;
        }
        else
        {
          uint64_t v33 = v18;
          id v18 = v10;
        }

        swift_bridgeObjectRelease();
        if (!v25)
        {
          char v32 = 1;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
LABEL_36:
        char v32 = 0;
LABEL_44:
        char v5 = v32 ^ 1;
        return v5 & 1;
      }
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    sub_100138A58((uint64_t)&v36, (uint64_t *)&unk_100321630);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    goto LABEL_23;
  }
  return v5 & 1;
}

void sub_1001322F0()
{
  sub_1001233C4();
  uint64_t v25 = v2;
  id v26 = v0;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100122300();
  __chkstk_darwin(v3, v4);
  sub_100120524();
  uint64_t v27 = type metadata accessor for DispatchQoS();
  sub_100122300();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_100138D98();
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100122300();
  uint64_t v11 = v10;
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123340(0, (unint64_t *)&qword_100321370);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v15, enum case for DispatchQoS.QoSClass.default(_:), v9);
  id v16 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v9);
  uint64_t v17 = swift_allocObject();
  os_log_type_t v19 = v25;
  id v18 = v26;
  *(void *)(v17 + 16) = v26;
  *(void *)(v17 + 24) = v19;
  v29[4] = sub_1001389E4;
  void v29[5] = v17;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 1107296256;
  v29[2] = sub_10012EDF4;
  v29[3] = &unk_1002D1F48;
  unint64_t v20 = _Block_copy(v29);
  id v21 = v19;
  id v22 = v18;
  static DispatchQoS.unspecified.getter();
  id v28 = &_swiftEmptyArrayStorage;
  sub_100125EF8();
  sub_10011EB3C((uint64_t *)&unk_100321380);
  sub_100125F48();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  uint64_t v23 = sub_100138D2C();
  v24(v23);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v27);
  swift_release();
  sub_100123384();
}

void sub_100132580(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v167 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  v184 = *(NSObject **)(v9 - 8);
  __chkstk_darwin(v9, v10);
  v183 = (char *)&v167 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [a1 features];
  unsigned int v13 = [v12 isNameAndPhotoC3Enabled];

  if (!v13 || !a2) {
    return;
  }
  v185 = a2;
  uint64_t v14 = (void *)sub_1001766A0(v185);
  if (!v14) {
    goto LABEL_18;
  }
  if (!v14[2])
  {

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v16 = v14[4];
  uint64_t v15 = v14[5];
  uint64_t v179 = v16;
  uint64_t v181 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v182 = sub_10011EC48(v17, (uint64_t)qword_10032CBE8);
  id v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "SNAP: writeToLastSeenPosterCacheIfNecessary", v20, 2u);
    swift_slowDealloc();
  }

  if (!objc_msgSend(self, "posterSourceIsSyncedWithContacts:", objc_msgSend(a1, "currentDisplayedPosterSourceForCall:", v185)))
  {
    swift_bridgeObjectRelease();
    v184 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v184, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v184, v27, "SNAP: Not updating last seen poster cache because displayed poster is not synced with contacts.", v28, 2u);
      swift_slowDealloc();

      uint64_t v29 = v184;
LABEL_19:

      return;
    }

LABEL_18:
    uint64_t v29 = v185;
    goto LABEL_19;
  }
  uint64_t v173 = v5;
  id v21 = [a1 sharedProfileStateOracleForCall:v185];
  id v22 = [v21 currentNickname];
  id v23 = [v22 wallpaper];

  id v176 = v23;
  if (v23)
  {
    id v24 = v23;
    uint64_t v175 = sub_100138760(v24);
    uint64_t v177 = v25;
    uint64_t v178 = sub_1001387D0(v24);
    unint64_t v180 = v26;
  }
  else
  {
    uint64_t v177 = 0;
    uint64_t v178 = 0;
    uint64_t v175 = 0;
    unint64_t v180 = 0xF000000000000000;
  }
  uint64_t v30 = v185;
  unint64_t v31 = sub_100130DAC(a2);
  v185 = v30;

  if (!v31) {
    goto LABEL_35;
  }
  sub_100138FC0(0xD000000000000013, 0x80000001002346F0, (uint64_t)v31, &v189);
  swift_bridgeObjectRelease();
  if (!v190)
  {
    sub_100138A58((uint64_t)&v189, (uint64_t *)&unk_100321630);
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_35;
  }
  if (!v177)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v175 == v193[0] && v177 == v193[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0)
  {
LABEL_35:
    uint64_t v34 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
    uint64_t v35 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v35[2])
    {
      id v172 = v21;
      uint64_t v37 = v35[4];
      uint64_t v36 = v35[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v187 = v37;
      uint64_t v188 = v36;
      v38._countAndFlagsBits = 0xD000000000000018;
      v38._object = (void *)0x8000000100234690;
      String.append(_:)(v38);
      id v171 = self;
      id v39 = [v171 defaultManager];
      uint64_t v41 = v187;
      uint64_t v40 = v188;
      swift_bridgeObjectRetain();
      uint64_t v174 = v41;
      NSString v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      LOBYTE(v41) = [v39 fileExistsAtPath:v42 isDirectory:0];

      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.default.getter();
        int v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v46 = swift_slowAlloc();
          int v170 = v45;
          unint64_t v47 = (uint8_t *)v46;
          uint64_t v169 = swift_slowAlloc();
          v193[0] = v169;
          v168 = v47;
          *(_DWORD *)unint64_t v47 = 136315138;
          v167 = v47 + 4;
          *(void *)&unsigned long long v189 = v174;
          *((void *)&v189 + 1) = v40;
          swift_bridgeObjectRetain();
          uint64_t v48 = String.init<A>(reflecting:)();
          *(void *)&unsigned long long v189 = sub_1001412B0(v48, v49, v193);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v170, "SNAP: Could not find existing cache path directory, so creating %s", v168, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        id v50 = [v171 defaultManager];
        swift_beginAccess();
        uint64_t v51 = v187;
        uint64_t v52 = v188;
        swift_bridgeObjectRetain();
        uint64_t v174 = v51;
        NSString v53 = String._bridgeToObjectiveC()();
        uint64_t v54 = v52;
        swift_bridgeObjectRelease();
        *(void *)&unsigned long long v189 = 0;
        LODWORD(v52) = [v50 createDirectoryAtPath:v53 withIntermediateDirectories:0 attributes:0 error:&v189];

        if (!v52)
        {
          id v71 = (id)v189;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRetain();
          swift_bridgeObjectRetain();
          swift_errorRetain();
          uint64_t v73 = Logger.logObject.getter();
          os_log_type_t v74 = static os_log_type_t.error.getter();
          if (!os_log_type_enabled(v73, v74))
          {

            sub_1001389EC(v178, v180);
            swift_errorRelease();
            swift_bridgeObjectRelease_n();
            swift_errorRelease();
            swift_errorRelease();

            return;
          }
          uint64_t v75 = swift_slowAlloc();
          v191[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v75 = 136315394;
          *(void *)&unsigned long long v189 = v174;
          *((void *)&v189 + 1) = v54;
          swift_bridgeObjectRetain();
          uint64_t v76 = String.init<A>(reflecting:)();
          *(void *)&unsigned long long v189 = sub_1001412B0(v76, v77, v191);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v75 + 12) = 2080;
          *(void *)&unsigned long long v189 = v72;
          swift_errorRetain();
          sub_10011EB3C(&qword_1003215E0);
          uint64_t v78 = String.init<A>(reflecting:)();
          *(void *)&unsigned long long v189 = sub_1001412B0(v78, v79, v191);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v73, v74, "SNAP: Failed to create caches directory %s with error %s", (uint8_t *)v75, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1001389EC(v178, v180);
          swift_errorRelease();

          goto LABEL_54;
        }
        id v55 = (id)v189;
      }
      unsigned long long v192 = 0uLL;
      if (v180 >> 60 != 15)
      {
        sub_100138AA4(v178, v180);
        swift_bridgeObjectRetain();
        id v56 = v183;
        UUID.init()();
        uint64_t v57 = UUID.uuidString.getter();
        id v59 = v58;
        ((void (*)(char *, uint64_t))v184[1].isa)(v56, v9);
        *(void *)&unsigned long long v189 = 47;
        *((void *)&v189 + 1) = 0xE100000000000000;
        v60._countAndFlagsBits = v57;
        v60._object = v59;
        String.append(_:)(v60);
        swift_bridgeObjectRelease();
        uint64_t v61 = sub_100134458();
        uint64_t v63 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.default.getter();
        BOOL v66 = os_log_type_enabled(v64, v65);
        v183 = (char *)v61;
        v184 = v63;
        if (v66)
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          uint64_t v174 = swift_slowAlloc();
          v191[0] = v174;
          *(_DWORD *)uint64_t v67 = 136315138;
          swift_beginAccess();
          if (*((void *)&v192 + 1))
          {
            unsigned long long v189 = v192;
            swift_bridgeObjectRetain();
            uint64_t v68 = String.init<A>(reflecting:)();
            unint64_t v70 = v69;
          }
          else
          {
            uint64_t v68 = 7104878;
            unint64_t v70 = 0xE300000000000000;
          }
          *(void *)&unsigned long long v189 = sub_1001412B0(v68, v70, v191);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "SNAP: Requesting to write last seen poster to cache path %s", v67, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v80 = v173;
        }
        else
        {

          uint64_t v80 = v173;
        }
        v85 = v183;
        URL.init(fileURLWithPath:)();
        uint64_t v86 = v178;
        unint64_t v87 = v180;
        Data.write(to:options:)();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v8, v4);
        sub_1001389EC(v86, v87);
        swift_beginAccess();
        unsigned long long v192 = __PAIR128__((unint64_t)v184, (unint64_t)v85);
        swift_bridgeObjectRelease();
      }
      v88 = v185;
      v89 = sub_100130DAC(a2);
      v184 = v88;

      uint64_t v90 = v177;
      if (v89)
      {
        sub_100138FC0(0xD000000000000013, 0x80000001002346D0, (uint64_t)v89, &v189);
        swift_bridgeObjectRelease();
        if (!v190)
        {
          sub_100138A58((uint64_t)&v189, (uint64_t *)&unk_100321630);
          goto LABEL_72;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_72;
        }
        v92 = v191[0];
        uint64_t v91 = v191[1];
        swift_bridgeObjectRetain_n();
        v93 = Logger.logObject.getter();
        os_log_type_t v94 = static os_log_type_t.default.getter();
        BOOL v95 = os_log_type_enabled(v93, v94);
        v185 = v92;
        if (v95)
        {
          v96 = (uint8_t *)swift_slowAlloc();
          v191[0] = swift_slowAlloc();
          *(_DWORD *)v96 = 136315138;
          *(void *)&unsigned long long v189 = v92;
          *((void *)&v189 + 1) = v91;
          swift_bridgeObjectRetain();
          uint64_t v97 = String.init<A>(reflecting:)();
          *(void *)&unsigned long long v189 = sub_1001412B0(v97, v98, v191);
          uint64_t v90 = v177;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v93, v94, "SNAP: Requesting to remove previous last seen poster file %s", v96, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        id v99 = v171;
        id v100 = [v171 defaultManager];
        NSString v101 = String._bridgeToObjectiveC()();
        id v102 = [v100 contentsAtPath:v101];

        if (v102)
        {
          uint64_t v103 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v105 = v104;

          sub_100138A00(v103, v105);
          id v106 = [v99 defaultManager];
          v107 = v185;
          NSString v108 = String._bridgeToObjectiveC()();
          *(void *)&unsigned long long v189 = 0;
          LOBYTE(v105) = [v106 removeItemAtPath:v108 error:&v189];

          if (v105)
          {
            id v109 = (id)v189;
            swift_bridgeObjectRelease();
            goto LABEL_72;
          }
          id v158 = (id)v189;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v159 = _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRetain();
          swift_bridgeObjectRetain();
          swift_errorRetain();
          v160 = Logger.logObject.getter();
          os_log_type_t v161 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v160, v161))
          {
            uint64_t v162 = swift_slowAlloc();
            v191[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v162 = 136315394;
            *(void *)&unsigned long long v189 = v107;
            *((void *)&v189 + 1) = v91;
            swift_bridgeObjectRetain();
            uint64_t v163 = String.init<A>(reflecting:)();
            *(void *)&unsigned long long v189 = sub_1001412B0(v163, v164, v191);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v162 + 12) = 2080;
            *(void *)&unsigned long long v189 = v159;
            swift_errorRetain();
            sub_10011EB3C(&qword_1003215E0);
            uint64_t v165 = String.init<A>(reflecting:)();
            *(void *)&unsigned long long v189 = sub_1001412B0(v165, v166, v191);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v160, v161, "SNAP: Failed to remove old last seen file path %s with error %s", (uint8_t *)v162, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
            sub_1001389EC(v178, v180);
          }
          else
          {

            sub_1001389EC(v178, v180);
            swift_errorRelease();
            swift_bridgeObjectRelease_n();
            swift_errorRelease();
            swift_errorRelease();
          }
LABEL_101:
          swift_bridgeObjectRelease();
          return;
        }
        swift_bridgeObjectRelease();
        v110 = Logger.logObject.getter();
        os_log_type_t v111 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v110, v111))
        {
          v112 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v112 = 0;
          _os_log_impl((void *)&_mh_execute_header, v110, v111, "SNAP: last seen poster file already doesn't exist, don't need to request FileManager to remove it, but we still need to replace the last seen poster data with current poster data)", v112, 2u);
          swift_slowDealloc();
        }
      }
LABEL_72:
      unsigned long long v113 = v192;
      swift_bridgeObjectRetain_n();
      id v114 = v176;
      swift_bridgeObjectRetain_n();
      v185 = v114;
      v115 = Logger.logObject.getter();
      os_log_type_t v116 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v115, v116))
      {
        uint64_t v117 = swift_slowAlloc();
        v191[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v117 = 136315650;
        if (*((void *)&v113 + 1))
        {
          unsigned long long v189 = v113;
          swift_bridgeObjectRetain();
          uint64_t v118 = String.init<A>(reflecting:)();
          unint64_t v120 = v119;
        }
        else
        {
          unint64_t v120 = 0xE300000000000000;
          uint64_t v118 = 7104878;
        }
        *(void *)&unsigned long long v189 = sub_1001412B0(v118, v120, v191);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v117 + 12) = 2080;
        uint64_t v90 = v177;
        if (v177)
        {
          *(void *)&unsigned long long v189 = v175;
          *((void *)&v189 + 1) = v177;
          swift_bridgeObjectRetain();
          uint64_t v122 = String.init<A>(reflecting:)();
          unint64_t v124 = v123;
        }
        else
        {
          unint64_t v124 = 0xE300000000000000;
          uint64_t v122 = 7104878;
        }
        *(void *)&unsigned long long v189 = sub_1001412B0(v122, v124, v191);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v117 + 22) = 2080;
        if (v176)
        {
          v125 = v185;
          *(void *)&unsigned long long v189 = v185;
          sub_100123340(0, (unint64_t *)&unk_100321920);
          v126 = v125;
          uint64_t v127 = String.init<A>(reflecting:)();
          unint64_t v129 = v128;
        }
        else
        {
          unint64_t v129 = 0xE300000000000000;
          uint64_t v127 = 7104878;
        }
        *(void *)&unsigned long long v189 = sub_1001412B0(v127, v129, v191);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v130 = v185;

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "SNAP: - filePath: %s, currentIMWallpaperFilePath: %s, currentIMWallpaper: %s ", (uint8_t *)v117, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v121 = v185;

        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v131 = *((void *)&v192 + 1);
      if (*((void *)&v192 + 1))
      {
        if (!v90)
        {
LABEL_93:
          uint64_t v139 = Dictionary.init(dictionaryLiteral:)();
LABEL_94:
          uint64_t v140 = v181;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v141 = Logger.logObject.getter();
          os_log_type_t v142 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v141, v142))
          {
            v143 = (uint8_t *)swift_slowAlloc();
            *(void *)&unsigned long long v189 = swift_slowAlloc();
            *(_DWORD *)v143 = 136315138;
            v183 = (char *)(v143 + 4);
            sub_10011EB3C(&qword_100321910);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1002862D0;
            *(void *)(inited + 32) = v179;
            *(void *)(inited + 40) = v140;
            *(void *)(inited + 48) = v139;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_10011EB3C(&qword_100321908);
            uint64_t v186 = Dictionary.init(dictionaryLiteral:)();
            sub_10011EB3C(&qword_100321918);
            uint64_t v145 = String.init<A>(reflecting:)();
            uint64_t v186 = sub_1001412B0(v145, v146, (uint64_t *)&v189);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v141, v142, "SNAP: Adding item to user defaults %s", v143, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          id v147 = v172;
          v148 = self;
          id v149 = [v148 standardUserDefaults];
          NSString v150 = String._bridgeToObjectiveC()();
          id v151 = [v149 dictionaryForKey:v150];

          if (v151)
          {
            uint64_t v152 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v186 = v152;
            uint64_t v190 = sub_10011EB3C(&qword_100321908);
            *(void *)&unsigned long long v189 = v139;
            sub_1001344D8((uint64_t)&v189, v179, v181);
          }
          else
          {
            sub_10011EB3C(&qword_100321900);
            uint64_t v153 = swift_initStackObject();
            *(_OWORD *)(v153 + 16) = xmmword_1002862D0;
            uint64_t v154 = v181;
            *(void *)(v153 + 32) = v179;
            *(void *)(v153 + 40) = v154;
            *(void *)(v153 + 72) = sub_10011EB3C(&qword_100321908);
            *(void *)(v153 + 48) = v139;
            Dictionary.init(dictionaryLiteral:)();
          }
          id v155 = [v148 standardUserDefaults];
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          NSString v157 = String._bridgeToObjectiveC()();
          [v155 setValue:isa forKey:v157];

          sub_1001389EC(v178, v180);
          goto LABEL_101;
        }
        if (v176)
        {
          uint64_t v132 = v192;
          sub_10011EB3C(&qword_100321900);
          uint64_t v133 = swift_initStackObject();
          *(_OWORD *)(v133 + 16) = xmmword_100286730;
          *(void *)(v133 + 32) = 0xD000000000000013;
          *(void *)(v133 + 40) = 0x80000001002346D0;
          *(void *)(v133 + 48) = v132;
          *(void *)(v133 + 56) = v131;
          *(void *)(v133 + 72) = &type metadata for String;
          *(void *)(v133 + 80) = 0xD000000000000013;
          uint64_t v134 = v175;
          *(void *)(v133 + 88) = 0x80000001002346F0;
          *(void *)(v133 + 96) = v134;
          *(void *)(v133 + 104) = v90;
          *(void *)(v133 + 120) = &type metadata for String;
          strcpy((char *)(v133 + 128), "isSensitiveKey");
          *(unsigned char *)(v133 + 143) = -18;
          v135 = v185;
          swift_bridgeObjectRetain();
          *(unsigned char *)(v133 + 144) = [v135 contentIsSensitive];
          *(void *)(v133 + 168) = &type metadata for Bool;
          *(void *)(v133 + 176) = 0xD000000000000016;
          *(void *)(v133 + 184) = 0x8000000100234710;
          id v136 = [v135 metadata];
          v137 = v136;
          if (v136)
          {
            id v138 = [v136 dictionaryRepresentation];

            v137 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
          }
          *(void *)(v133 + 216) = sub_10011EB3C(&qword_100321908);
          if (!v137) {
            v137 = (void *)Dictionary.init(dictionaryLiteral:)();
          }
          *(void *)(v133 + 192) = v137;
          uint64_t v139 = Dictionary.init(dictionaryLiteral:)();

          goto LABEL_94;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_93;
    }

    swift_bridgeObjectRelease();
    sub_1001389EC(v178, v180);
    swift_bridgeObjectRelease();

    goto LABEL_101;
  }
  swift_bridgeObjectRelease();
LABEL_52:
  id v81 = v176;
  swift_bridgeObjectRelease();
  v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v84 = 0;
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "SNAP: Not updating last seen poster cache because displayed poster is not different from the one in the cache.", v84, 2u);
    swift_slowDealloc();

    sub_1001389EC(v178, v180);
LABEL_54:

    return;
  }

  sub_1001389EC(v178, v180);
}

uint64_t sub_100134458()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = String.init<A>(_:)();
  String.append<A>(contentsOf:)();
  return v1;
}

uint64_t sub_1001344D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100138B10((_OWORD *)a1, v6);
    sub_1001AE924(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100138A58(a1, (uint64_t *)&unk_100321630);
    sub_1001AE57C(a2, a3, v6);
    swift_bridgeObjectRelease();
    return sub_100138A58((uint64_t)v6, (uint64_t *)&unk_100321630);
  }
}

void sub_1001345D8()
{
  sub_1001233C4();
  type metadata accessor for DispatchWorkItemFlags();
  sub_100122300();
  uint64_t v92 = v2;
  uint64_t v93 = v1;
  __chkstk_darwin(v1, v3);
  sub_100138CB8();
  uint64_t v90 = v4;
  uint64_t v91 = type metadata accessor for DispatchQoS();
  sub_100122300();
  uint64_t v89 = v5;
  __chkstk_darwin(v6, v7);
  sub_100138CB8();
  uint64_t v88 = v8;
  sub_100138DB4();
  type metadata accessor for DispatchQoS.QoSClass();
  sub_100122300();
  uint64_t v86 = v10;
  uint64_t v87 = v9;
  __chkstk_darwin(v9, v11);
  sub_100138CB8();
  uint64_t v85 = v12;
  uint64_t v13 = sub_10011EB3C(&qword_100324AA0);
  __chkstk_darwin(v13 - 8, v14);
  sub_100138CB8();
  os_log_type_t v83 = v15;
  sub_100138DB4();
  uint64_t v16 = type metadata accessor for URL.DirectoryHint();
  sub_100122300();
  uint64_t v18 = v17;
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for URL();
  sub_100122300();
  uint64_t v84 = v23;
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v28 = __chkstk_darwin(v26, v27);
  uint64_t v30 = __chkstk_darwin(v28, v29);
  char v32 = (char *)&v75 - v31;
  uint64_t v34 = __chkstk_darwin(v30, v33);
  uint64_t v36 = (char *)&v75 - v35;
  __chkstk_darwin(v34, v37);
  id v39 = (char *)&v75 - v38;
  id v40 = [v0 features];
  unsigned int v41 = [v40 isNameAndPhotoC3Enabled];

  if (v41)
  {
    id v81 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v80 = [self defaultManager];
    id v42 = [v80 temporaryDirectory];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v96 = (void **)0xD000000000000014;
    unint64_t v97 = 0x8000000100234670;
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v22, enum case for URL.DirectoryHint.inferFromPath(_:), v16);
    sub_100123BB8();
    v82 = v39;
    URL.appending<A>(component:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v16);
    swift_bridgeObjectRelease();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10011EC48(v43, (uint64_t)qword_10032CBE8);
    uint64_t v44 = v84;
    int v45 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
    uint64_t v46 = v94;
    v45(v32, v36, v94);
    unint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    BOOL v49 = sub_100138CCC(v48);
    uint64_t v78 = v45;
    if (v49)
    {
      uint64_t v50 = swift_slowAlloc();
      unint64_t v77 = v36;
      uint64_t v51 = (uint8_t *)v50;
      uint64_t v76 = (void **)swift_slowAlloc();
      v96 = v76;
      uint64_t v75 = v51;
      *(_DWORD *)uint64_t v51 = 136315138;
      unint64_t v79 = v51 + 4;
      uint64_t v52 = (uint64_t)v83;
      v45(v83, v32, v94);
      sub_10011EB80(v52, 0, 1, v94);
      uint64_t v53 = v44;
      uint64_t v54 = sub_1001DC2E4(v52);
      unint64_t v56 = v55;
      sub_100138A58(v52, &qword_100324AA0);
      BOOL v95 = (void *)sub_1001412B0(v54, v56, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v46 = v94;
      swift_bridgeObjectRelease();
      uint64_t v57 = sub_100138D00(v53);
      v58(v57);
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)((char *)&v75 - ((v25 + 15) & 0xF0)), "SNAP: deleteAllUnarchivedPosterDirectories path: %s", v75, 0xCu);
      swift_arrayDestroy();
      sub_100120278();
      uint64_t v36 = v77;
      sub_100120278();
    }
    else
    {
      uint64_t v59 = sub_100138D00(v44);
      v60(v59);

      uint64_t v53 = v44;
    }
    sub_100123340(0, (unint64_t *)&qword_100321370);
    uint64_t v62 = v85;
    uint64_t v61 = v86;
    uint64_t v63 = v87;
    (*(void (**)(uint64_t, void, uint64_t))(v86 + 104))(v85, enum case for DispatchQoS.QoSClass.background(_:), v87);
    uint64_t v64 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v63);
    os_log_type_t v65 = v81;
    v78(v81, v36, v46);
    unint64_t v66 = (*(unsigned __int8 *)(v53 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v67 = swift_allocObject();
    id v68 = v80;
    *(void *)(v67 + 16) = v80;
    (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v67 + v66, v65, v46);
    id v100 = sub_100138940;
    uint64_t v101 = v67;
    v96 = _NSConcreteStackBlock;
    unint64_t v97 = 1107296256;
    unint64_t v98 = sub_10012EDF4;
    id v99 = &unk_1002D1EF8;
    unint64_t v69 = _Block_copy(&v96);
    unint64_t v70 = v36;
    id v71 = v68;
    static DispatchQoS.unspecified.getter();
    BOOL v95 = &_swiftEmptyArrayStorage;
    sub_100125EF8();
    sub_10011EB3C((uint64_t *)&unk_100321380);
    sub_100125F48();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v69);

    sub_100138D8C();
    v72();
    sub_100138D8C();
    v73();
    os_log_type_t v74 = (void (*)(char *, uint64_t))v83;
    ((void (*)(char *, uint64_t))v83)(v70, v46);
    v74(v82, v46);
    swift_release();
  }
  sub_100123384();
}

void sub_100134D54(void *a1)
{
  uint64_t v2 = URL.path.getter();
  if (sub_100138840(v2, v3, a1))
  {
    URL._bridgeToObjectiveC()(v4);
    uint64_t v6 = v5;
    id v21 = 0;
    unsigned int v7 = [a1 removeItemAtURL:v5 error:&v21];

    id v8 = v21;
    if (v7)
    {
      id v9 = v8;
    }
    else
    {
      id v13 = v21;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10011EC48(v14, (uint64_t)qword_10032CBE8);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        id v21 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315138;
        swift_errorRetain();
        sub_10011EB3C(&qword_1003215E0);
        uint64_t v18 = String.init<A>(reflecting:)();
        sub_1001412B0(v18, v19, (uint64_t *)&v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "SNAP: Failed to remove PosterConfigurations directory with error: %s", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10011EC48(v10, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "SNAP: Cant find PosterConfigurations directory", v12, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_1001351A4()
{
  uint64_t v1 = v0;
  id v2 = [v0 callCenter];
  id v3 = [v2 frontmostCall];

  if (!v3) {
    return 0;
  }
  id v4 = [v1 prioritizedCall];
  if (!v4) {
    id v4 = v3;
  }
  uint64_t v5 = (uint64_t)[v1 associatedCallGroupForCall:v4];

  id v6 = [(id)v5 calls];
  sub_100123340(0, (unint64_t *)&qword_100323D80);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8 >= 2)
  {
    if (qword_100320540 != -1) {
LABEL_92:
    }
      swift_once();
    uint64_t v9 = type metadata accessor for Logger();
    uint64_t v10 = (void *)sub_100138D44(v9, (uint64_t)qword_10032CBE8);
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (sub_100138CCC(v11))
    {
      uint64_t v12 = (_WORD *)sub_100138CE8();
      sub_100138DF0(v12);
      uint64_t v15 = "callToUseForWallpaper is nil, associatedCallGroup.calls.count > 1";
LABEL_10:
      sub_10012601C((void *)&_mh_execute_header, v13, v14, v15);
      sub_100120278();

      return 0;
    }
    goto LABEL_78;
  }
  if ([v1 usesCompactMulticallUI])
  {
    id v16 = [v1 prioritizedCall];
    if (v16)
    {
      id v17 = v16;

LABEL_14:
      return v17;
    }
  }
  id v18 = [v1 callDisplayStyleManager];
  id v19 = [v18 callDisplayStyle];

  uint64_t v20 = &selRef_emergencyTitleLabel;
  if (v19 == (id)3)
  {
    id v21 = [v1 features];
    unsigned int v22 = [v21 isDominoEnabled];

    if (v22)
    {
      if ([v1 participantsViewIsShowingMultipleLabel])
      {
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v23 = type metadata accessor for Logger();
        uint64_t v10 = (void *)sub_100138D44(v23, (uint64_t)qword_10032CBE8);
        os_log_type_t v24 = static os_log_type_t.default.getter();
        if (sub_100138CCC(v24))
        {
          uint64_t v25 = (_WORD *)sub_100138CE8();
          sub_100138DF0(v25);
          uint64_t v15 = "callToUseForWallpaper is nil, participantsViewIsShowingMultipleLabel";
          goto LABEL_10;
        }
LABEL_78:

        return 0;
      }
      id v26 = [v1 callCenter];
      id v27 = [v26 currentCalls];

      unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v76 = v5;
      id v77 = v3;
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v29)
        {
LABEL_24:
          uint64_t v5 = 0;
          id v3 = (id)(v28 & 0xC000000000000001);
          while (1)
          {
            if (v3)
            {
              swift_bridgeObjectRetain();
              id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              swift_bridgeObjectRelease();
            }
            else
            {
              id v30 = *(id *)(v28 + 8 * v5 + 32);
            }
            uint64_t v31 = sub_10018A134((uint64_t)&off_1002D0F70);
            BOOL v32 = sub_10012F2E4((Swift::UInt32)[v30 status], v31);

            swift_bridgeObjectRelease();
            if (!v32) {
              break;
            }
            uint64_t v33 = (char *)(v5 + 1);
            if (__OFADD__(v5, 1))
            {
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
              goto LABEL_96;
            }
            ++v5;
            if (v33 == (char *)v29)
            {
              uint64_t v5 = v29;
              break;
            }
          }
          if (v29 >= v5)
          {
            if (v5 == v29) {
              goto LABEL_35;
            }
            id v78 = (id)v29;
            uint64_t v79 = 1;
          }
          else
          {
            id v78 = (id)v5;
            uint64_t v79 = -1;
            uint64_t v5 = v29;
          }
          uint64_t v34 = 0;
          do
          {
            BOOL v35 = __OFADD__(v34, v79);
            v34 += v79;
            if (v35) {
              goto LABEL_89;
            }
            if (v5 == v29) {
              goto LABEL_90;
            }
            uint64_t v36 = (char *)(v5 + 1);
            if (__OFADD__(v5, 1)) {
              goto LABEL_91;
            }
            uint64_t v5 = v29;
            if (v36 != (char *)v29)
            {
              uint64_t v5 = (uint64_t)v36;
              while (1)
              {
                if (v3)
                {
                  swift_bridgeObjectRetain();
                  id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  if (v5 < 0) {
                    goto LABEL_94;
                  }
                  if ((unint64_t)v5 >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_95;
                  }
                  id v37 = *(id *)(v28 + 32 + 8 * v5);
                }
                uint64_t v38 = sub_10018A134((uint64_t)&off_1002D0FA0);
                unsigned int v39 = [v37 status];
                if (!*(void *)(v38 + 16)) {
                  goto LABEL_57;
                }
                Swift::UInt32 v40 = v39;
                Hasher.init(_seed:)();
                Hasher._combine(_:)(v40);
                Swift::Int v41 = Hasher._finalize()();
                uint64_t v42 = -1 << *(unsigned char *)(v38 + 32);
                unint64_t v43 = v41 & ~v42;
                if (((*(void *)(v38 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
                  goto LABEL_57;
                }
                uint64_t v44 = *(void *)(v38 + 48);
                if (*(_DWORD *)(v44 + 4 * v43) != v40)
                {
                  uint64_t v45 = ~v42;
                  while (1)
                  {
                    unint64_t v43 = (v43 + 1) & v45;
                    if (((*(void *)(v38 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
                      break;
                    }
                    if (*(_DWORD *)(v44 + 4 * v43) == v40) {
                      goto LABEL_54;
                    }
                  }
LABEL_57:

                  swift_bridgeObjectRelease();
                  goto LABEL_58;
                }
LABEL_54:

                swift_bridgeObjectRelease();
                BOOL v35 = __OFADD__(v5++, 1);
                if (v35) {
                  break;
                }
                if (v5 == v29)
                {
                  uint64_t v5 = v29;
                  goto LABEL_58;
                }
              }
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              __break(1u);
              goto LABEL_92;
            }
LABEL_58:
            ;
          }
          while ((id)v5 != v78);
          swift_bridgeObjectRelease();
          BOOL v46 = v34 <= 1;
          uint64_t v5 = v76;
          id v3 = v77;
          uint64_t v20 = &selRef_emergencyTitleLabel;
          if (v46) {
            goto LABEL_64;
          }
          if (qword_100320540 != -1) {
            swift_once();
          }
          uint64_t v47 = type metadata accessor for Logger();
          uint64_t v10 = (void *)sub_100138D44(v47, (uint64_t)qword_10032CBE8);
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (sub_100138CCC(v48))
          {
            BOOL v49 = (_WORD *)sub_100138CE8();
            sub_100138DF0(v49);
            uint64_t v15 = "callToUseForWallpaper is nil, answeredCalls > 1";
            goto LABEL_10;
          }
          goto LABEL_78;
        }
      }
      else
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v29) {
          goto LABEL_24;
        }
      }
LABEL_35:
      swift_bridgeObjectRelease();
      uint64_t v5 = v76;
      id v3 = v77;
    }
  }
LABEL_64:
  id v50 = [v1 v20[68]];
  unsigned __int8 v51 = [v50 shouldShowFullScreenCallWaiting];

  if ((v51 & 1) == 0)
  {
    id v52 = [v1 callCenter];
    char v53 = TUCallCenter.cnk_wantsCallWaiting.getter();

    if (v53)
    {
      id v54 = [v1 callCenter];
      unsigned __int8 v55 = [v54 cnk_hasTooManyCallsForCallWaitingBanner];

      if ((v55 & 1) == 0)
      {
        if ([v1 usesCompactMulticallUI])
        {
          id v17 = [v1 activeCall];
          if (([v17 isScreening] & 1) == 0)
          {
            if (qword_100320540 != -1) {
              swift_once();
            }
            uint64_t v69 = type metadata accessor for Logger();
            unint64_t v70 = (void *)sub_100138D44(v69, (uint64_t)qword_10032CBE8);
            os_log_type_t v71 = static os_log_type_t.default.getter();
            if (sub_100138CCC(v71))
            {
              uint64_t v72 = (_WORD *)sub_100138CE8();
              sub_100138E4C(v72);
              sub_100138E08((void *)&_mh_execute_header, v73, v74, "callToUseForWallpaper is activeCall, wantsCallWaiting (banner-based)");
              sub_100120278();
              uint64_t v75 = v3;
            }
            else
            {
              uint64_t v75 = v70;
              unint64_t v70 = (void *)v5;
              uint64_t v5 = (uint64_t)v3;
            }

            goto LABEL_14;
          }
          if (qword_100320540 != -1) {
            swift_once();
          }
          uint64_t v56 = type metadata accessor for Logger();
          uint64_t v57 = (void *)sub_100138D44(v56, (uint64_t)qword_10032CBE8);
          os_log_type_t v58 = static os_log_type_t.fault.getter();
          if (sub_100138CCC(v58))
          {
            uint64_t v59 = (_WORD *)sub_100138CE8();
            sub_100138E4C(v59);
            sub_100138E08((void *)&_mh_execute_header, v60, v61, "callToUseForWallpaper: wantsCallWaiting but activeCall is nil");
            sub_100120278();
          }
        }
      }
    }
  }
  if (qword_100320540 != -1) {
LABEL_96:
  }
    swift_once();
  uint64_t v62 = type metadata accessor for Logger();
  uint64_t v63 = (void *)sub_100138D44(v62, (uint64_t)qword_10032CBE8);
  os_log_type_t v64 = static os_log_type_t.default.getter();
  if (sub_100138CCC(v64))
  {
    os_log_type_t v65 = (_WORD *)sub_100138CE8();
    sub_100138DF0(v65);
    sub_10012601C((void *)&_mh_execute_header, v66, v67, "callToUseForWallpaper is frontmostCall");
    sub_100120278();
  }

  return v3;
}

uint64_t sub_100135AE4()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 currentCalls];

  sub_100123340(0, (unint64_t *)&qword_100323D80);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = result;
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = v3;
  }
  BOOL v6 = v5 == 0;
  if (!v3)
  {
    swift_bridgeObjectRelease_n();
    return v6;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    uint64_t v8 = v7;
    swift_bridgeObjectRelease_n();
    if (v5 == 1)
    {
      if ([v8 status] == 6)
      {

        return 1;
      }
      else
      {
        unsigned int v9 = [v8 status];

        return v9 == 5;
      }
    }
    else
    {
    }
    return v6;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v2 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id PHAudioCallViewController.nameAndPhotoUtilitiesDidUpdatePersonalNickname(oldValue:newValue:)(id result, uint64_t a2)
{
  if (!result)
  {
    if (a2) {
      return [v2 updateShareNameAndPhotoHUDPresentationIfNeeded];
    }
  }
  return result;
}

void PHAudioCallViewController.nameAndPhotoUtilitiesNameAndPhotoAvailable(forDestinations:withBannerType:)()
{
  sub_1001233C4();
  uint64_t v4 = v3;
  BOOL v6 = v5;
  uint64_t v7 = sub_10011EB3C((uint64_t *)&unk_1003217B0);
  __chkstk_darwin(v7 - 8, v8);
  sub_100138D98();
  uint64_t v9 = type metadata accessor for ConversationControlsType();
  sub_100122300();
  uint64_t v11 = v10;
  __chkstk_darwin(v12, v13);
  sub_100120524();
  sub_100137B60(v4, v2);
  if (sub_100120F20(v2, 1, v9) == 1)
  {
    sub_100138A58(v2, (uint64_t *)&unk_1003217B0);
LABEL_13:
    sub_100123384();
    return;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v1, v2, v9);
  id v14 = [v0 callCenter];
  id v15 = [v14 callsWithStatus:1];

  sub_100123340(0, (unint64_t *)&qword_100323D80);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v16 >> 62))
  {
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v28) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
    id v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v29 = v6;
    swift_bridgeObjectRetain();
    sub_100137BF0(&v29);
    id v19 = v29;
    id v20 = [v18 remoteParticipantHandles];
    sub_100123340(0, &qword_1003217C0);
    sub_100137D38((unint64_t *)&qword_1003217C8, &qword_1003217C0);
    uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100135FE8(v21);
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v29 = v23;
    swift_bridgeObjectRetain();
    sub_100137BF0(&v29);
    swift_bridgeObjectRelease();
    LOBYTE(v23) = sub_100136744(v19, v29);
    swift_release();
    swift_release();
    if (v23)
    {
      sub_10012F9E4();

      uint64_t v24 = sub_100138D2C();
      v25(v24);
    }
    else
    {
      uint64_t v26 = sub_100138D2C();
      v27(v26);
    }
    goto LABEL_13;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v17 = *(id *)(v16 + 32);
    goto LABEL_8;
  }
  __break(1u);
  swift_release();
  __break(1u);
}

void sub_100135FE8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100123340(0, &qword_1003217C0);
    sub_100137D38((unint64_t *)&qword_1003217C8, &qword_1003217C0);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v28;
    uint64_t v27 = v29;
    uint64_t v2 = v30;
    int64_t v3 = v31;
    unint64_t v4 = v32;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v27 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  uint64_t v24 = v2;
  int64_t v26 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v25 = &_swiftEmptyArrayStorage;
  while (1)
  {
    int64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_40;
    }
    sub_100123340(0, &qword_1003217C0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v33;
    swift_unknownObjectRelease();
    if (!v33) {
      goto LABEL_40;
    }
LABEL_31:
    NSString v15 = [v11 value:v24];
    if (!v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v16 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v16)
    {
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001DB150();
        uint64_t v25 = v22;
      }
      unint64_t v20 = v25[2];
      if (v20 >= v25[3] >> 1)
      {
        sub_1001DB150();
        uint64_t v25 = v23;
      }
      v25[2] = v20 + 1;
      uint64_t v21 = (char *)&v25[2 * v20];
      *((void *)v21 + 4) = v17;
      *((void *)v21 + 5) = v19;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v26) {
      goto LABEL_40;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_40;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_40;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_40;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v3);
          if (!v13)
          {
            int64_t v3 = v8 + 5;
            if (v8 + 5 >= v26) {
              goto LABEL_40;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v3);
            if (!v13)
            {
              int64_t v14 = v8 + 6;
              while (v14 < v26)
              {
                unint64_t v13 = *(void *)(v27 + 8 * v14++);
                if (v13)
                {
                  int64_t v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_40:
              sub_100138B60();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1001363BC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100123340(0, &qword_1003217C0);
    sub_100137D38((unint64_t *)&qword_1003217C8, &qword_1003217C0);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v25;
    uint64_t v24 = v26;
    uint64_t v2 = v27;
    int64_t v3 = v28;
    uint64_t v4 = v29;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  unsigned int v22 = _swiftEmptyArrayStorage;
  int64_t v23 = (unint64_t)(v2 + 64) >> 6;
LABEL_8:
  int64_t v8 = v3;
  unint64_t v9 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_100123340(0, &qword_1003217C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v11 = v30;
      swift_unknownObjectRelease();
      int64_t v3 = v8;
      uint64_t v4 = v9;
      if (!v30) {
        goto LABEL_40;
      }
      goto LABEL_27;
    }
    if (!v9) {
      break;
    }
    uint64_t v4 = (v9 - 1) & v9;
    unint64_t v10 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v3 = v8;
LABEL_26:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_40;
    }
LABEL_27:
    uint64_t v14 = sub_100182944(v11);
    uint64_t v16 = v15;

    int64_t v8 = v3;
    unint64_t v9 = v4;
    if (v16)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001DB150();
        unsigned int v22 = v20;
      }
      unint64_t v18 = v22[2];
      if (v18 >= v22[3] >> 1)
      {
        sub_1001DB150();
        unsigned int v22 = v21;
      }
      v22[2] = v18 + 1;
      uint64_t v19 = &v22[2 * v18];
      void v19[4] = v14;
      v19[5] = v16;
      goto LABEL_8;
    }
  }
  int64_t v3 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v3 >= v23) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v24 + 8 * v3);
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v23) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v13);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v8 + 3;
      if (v8 + 3 >= v23) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v13);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v8 + 4;
      if (v8 + 4 >= v23) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v13);
      if (v12)
      {
LABEL_24:
        int64_t v3 = v13;
      }
      else
      {
        int64_t v3 = v8 + 5;
        if (v8 + 5 >= v23) {
          goto LABEL_40;
        }
        unint64_t v12 = *(void *)(v24 + 8 * v3);
        if (!v12)
        {
          int64_t v17 = v8 + 6;
          while (v17 < v23)
          {
            unint64_t v12 = *(void *)(v24 + 8 * v17++);
            if (v12)
            {
              int64_t v3 = v17 - 1;
              goto LABEL_25;
            }
          }
LABEL_40:
          sub_100138B60();
          return;
        }
      }
    }
LABEL_25:
    uint64_t v4 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_100136744(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  int64_t v8 = a1 + 7;
  unint64_t v9 = a2 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

void sub_10013681C(void *a1)
{
  id v2 = [a1 type];
  if (v2 == (id)1) {
    return;
  }
  if (v2 != (id)2)
  {
    if (v2 != (id)3)
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10011EC48(v12, (uint64_t)qword_10032CBE8);
      id v26 = a1;
      int64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315138;
        sub_100123340(0, &qword_1003217C0);
        id v16 = v26;
        uint64_t v17 = String.init<A>(reflecting:)();
        sub_1001412B0(v17, v18, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unknown handle type: %s", v15, 0xCu);
        swift_arrayDestroy();
        sub_100120278();
        sub_100120278();

        return;
      }

      goto LABEL_17;
    }
    id v26 = [self sharedPrivacyManager];
    if (v26)
    {
      id v3 = [a1 value];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100138DFC();
      sub_1001E43AC(v4, v5, v6, v26);
LABEL_17:

      return;
    }
    __break(1u);
    goto LABEL_22;
  }
  id v7 = [a1 value];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = (id)TUHomeCountryCode();
  if (v8)
  {
    unint64_t v9 = v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v19 = objc_allocWithZone((Class)TUPhoneNumber);
  sub_100138DFC();
  id v23 = sub_1001E4034(v20, v21, v22, v11);
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = [self sharedPrivacyManager];
    if (v25)
    {
      id v26 = v25;
      [v25 setBlockIncomingCommunication:1 forPhoneNumber:v24];

      goto LABEL_17;
    }
LABEL_22:
    __break(1u);
  }
}

id sub_100136BD4(void *a1)
{
  id v3 = v1;
  uint64_t v5 = type metadata accessor for ReportSpamManager.IDSServiceType();
  sub_100122300();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_100120524();
  id v10 = [a1 provider];
  unsigned int v11 = [v10 isFaceTimeProvider];

  if (v11)
  {
    type metadata accessor for ReportSpamManager();
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v2, enum case for ReportSpamManager.IDSServiceType.facetimeCall(_:), v5);
    ReportSpamManager.__allocating_init(idsServiceType:)();
    v16[0] = a1;
    sub_100123340(0, (unint64_t *)&qword_100323D80);
    ReportSpamManager.reportFaceTimeCallSpam<A>(call:)();
    swift_release();
  }
  else
  {
    id v12 = [a1 provider];
    unsigned int v13 = [v12 isTelephonyProvider];

    if (v13)
    {
      type metadata accessor for VoiceSpamReportTelephonyManager();
      static VoiceSpamReportTelephonyManager.shared.getter();
      type metadata accessor for CarrierVoiceSpamReportHelper();
      swift_allocObject();
      CarrierVoiceSpamReportHelper.init(voiceSpamReportTelephonyManager:)();
      v16[3] = sub_100123340(0, (unint64_t *)&qword_100323D80);
      v16[4] = sub_100137D38(&qword_1003218B0, (unint64_t *)&qword_100323D80);
      v16[0] = a1;
      id v14 = a1;
      dispatch thunk of CarrierVoiceSpamReportHelper.reportSpam(voiceCall:)();
      swift_release();
      sub_100129FFC((uint64_t)v16);
    }
  }
  return [v3 releaseDismissalAssertion];
}

void sub_100136E64(void *a1)
{
  uint64_t v2 = v1;
  sub_100123340(0, &qword_1003218B8);
  sub_10011EB3C((uint64_t *)&unk_1003218C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1002862D0;
  id v5 = [a1 value];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v8;
  id v9 = sub_10013707C(0, 0, v4);
  id v10 = [self viewControllerForNewContact:v9];
  [v10 setDelegate:v2];
  [v10 setAllowsEditing:1];
  [v10 setAllowsActions:1];
  if (qword_100320558 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  id v12 = sub_100138D44(v11, (uint64_t)qword_10032CC30);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "presenting create contact view controller", v8, 2u);
    sub_100120278();
  }

  id v15 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v10];
  [v2 presentViewController:v15 animated:1 completion:0];
}

id sub_10013707C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    NSString v4 = 0;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    v5.super.Class isa = 0;
    goto LABEL_6;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_6:
  id v6 = [(id)swift_getObjCClassFromMetadata() contactWithDisplayName:v4 handleStrings:v5.super.isa];

  return v6;
}

Swift::Void __swiftcall PHAudioCallViewController.contactViewController(_:didCompleteWith:)(CNContactViewController _, CNContact_optional didCompleteWith)
{
  id v3 = [v2 presentedViewController:didCompleteWith.is_nil];
  if (v3)
  {
    NSString v4 = v3;
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v7[4] = sub_100137C94;
    uint64_t v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _DWORD v7[2] = sub_10012EDF4;
    _OWORD v7[3] = &unk_1002D1E88;
    id v6 = _Block_copy(v7);
    swift_release();
    [v4 dismissViewControllerAnimated:1 completion:v6];
    _Block_release(v6);
  }
}

void sub_100137288()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 currentCallCount];

  if (!v1)
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v3 = Strong;
      [Strong releaseDismissalAssertion];
    }
  }
}

uint64_t sub_1001373D0()
{
  type metadata accessor for VoiceSpamReportTelephonyManager();
  static VoiceSpamReportTelephonyManager.shared.getter();
  type metadata accessor for CarrierVoiceSpamReportHelper();
  swift_allocObject();
  CarrierVoiceSpamReportHelper.init(voiceSpamReportTelephonyManager:)();
  v4[3] = sub_100123340(0, (unint64_t *)&qword_100323D80);
  void v4[4] = sub_100137D38(&qword_1003218B0, (unint64_t *)&qword_100323D80);
  v4[0] = v0;
  id v1 = v0;
  char v2 = dispatch thunk of CarrierVoiceSpamReportHelper.carrierAllowsReportVoiceCall(for:)();
  swift_release();
  sub_100129FFC((uint64_t)v4);
  return v2 & 1;
}

uint64_t TUCall.callDate.getter@<X0>(uint64_t a1@<X8>)
{
  [v1 callDuration];
  Date.init(timeIntervalSinceNow:)();
  uint64_t v3 = type metadata accessor for Date();

  return sub_10011EB80(a1, 0, 1, v3);
}

uint64_t TUCall.simUUID.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 localSenderIdentityAccountUUID];
  if (v3)
  {
    NSString v4 = v3;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = type metadata accessor for UUID();

  return sub_10011EB80(a1, v5, 1, v6);
}

uint64_t TUCall.formattedRemoteParticipantHandles.getter()
{
  id v1 = [v0 remoteParticipantHandles];
  sub_100138DFC();
  sub_100123340(v2, v3);
  sub_100138DFC();
  sub_100137D38(v4, v5);
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1001363BC(v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100137660@<X0>(uint64_t a1@<X8>)
{
  return TUCall.callDate.getter(a1);
}

uint64_t sub_100137684@<X0>(uint64_t a1@<X8>)
{
  return TUCall.simUUID.getter(a1);
}

uint64_t sub_1001376A8()
{
  return TUCall.formattedRemoteParticipantHandles.getter();
}

void sub_100137700()
{
  id v1 = [v0 features];
  unsigned int v2 = [v1 isEnhancedEmergencyEnabled];

  if (!v2) {
    return;
  }
  id v3 = [v0 callCenter];
  id v4 = [v3 currentCalls];

  sub_100123340(0, (unint64_t *)&qword_100323D80);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v9 = [objc_allocWithZone((Class)ICSApplicationDelegate) init];
    id v7 = [v9 mostRecentlyDisconnectedAudioCall];

    if (!v7)
    {
      id v10 = 0;
LABEL_14:
      [v0 currentState];

      return;
    }
LABEL_11:
    id v10 = v7;
    unsigned int v11 = [v10 isEmergency];

    if (v11)
    {

      return;
    }
    goto LABEL_14;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v5 + 32);
LABEL_7:
    id v7 = v6;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1001378D8()
{
  id v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  id v3 = sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)sub_100138CE8();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Update audio call background for emergency call", v5, 2u);
    sub_100120278();
  }

  id v6 = [v1 view];
  if (v6)
  {
    id v7 = v6;
    id v8 = [self blackColor];
    [v7 setBackgroundColor:v8];

    id v9 = [v1 buttonsViewController];
    id v11 = [v9 view];

    if (v11)
    {
      self;
      id v10 = (void *)swift_dynamicCastObjCClass();
      if (v10) {
        [v10 updateBackgroundMaterial:3];
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id PHAudioCallViewController.isFullScreen.getter()
{
  id result = [v0 inCallRootViewController];
  if (result)
  {
    id v2 = [result isFullScreen];
    swift_unknownObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PHAudioCallViewController.presentShareCardViewController(_:)(uint64_t a1)
{
  return [v1 presentViewController:a1 animated:1 completion:0];
}

uint64_t sub_100137B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C((uint64_t *)&unk_1003217B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100137BCC(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100137BF0(char **a1)
{
  id v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100138C88((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_100137D7C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100137C5C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100137C94()
{
}

uint64_t sub_100137C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100137CAC()
{
  return swift_release();
}

unint64_t sub_100137CB8()
{
  unint64_t result = qword_1003217D0;
  if (!qword_1003217D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003217D0);
  }
  return result;
}

uint64_t type metadata accessor for PosterConfigurationWrapper()
{
  return self;
}

ValueMetadata *type metadata accessor for FactoryOutcome()
{
  return &type metadata for FactoryOutcome;
}

uint64_t sub_100137D38(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100123340(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100137D7C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1001383E4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_1001B7634(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  unint64_t v97 = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    unint64_t v98 = (unint64_t *)&_swiftEmptyArrayStorage;
    unint64_t v31 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      int64_t v88 = v98[2 * v86 + 4];
      int64_t v89 = v98[2 * v31 + 3];
      uint64_t result = sub_1001384AC((char *)(v85 + 16 * v88), (char *)(v85 + 16 * v98[2 * v31 + 2]), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10013874C((uint64_t)v98);
        uint64_t v87 = (unint64_t *)result;
      }
      if (v86 >= v87[2]) {
        goto LABEL_140;
      }
      uint64_t v90 = &v87[2 * v86 + 4];
      *uint64_t v90 = v88;
      v90[1] = v89;
      unint64_t v91 = v87[2];
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove(&v87[2 * v31 + 2], &v87[2 * v31 + 4], 16 * (v91 - v31));
      unint64_t v98 = v87;
      v87[2] = v91 - 1;
      unint64_t v31 = v91 - 1;
      Swift::Int v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  unint64_t v98 = (unint64_t *)&_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    id v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    id v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      Swift::Int v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      id v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        Swift::Int v19 = v15 + 1;
        Swift::Int v7 = v15;
        Swift::Int v15 = v19;
      }
      while (v19 < v3);
      Swift::Int v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    int v14 = result;
    Swift::Int v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    Swift::Int v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      Swift::Int v22 = v15;
      Swift::Int v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    Swift::Int v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      Swift::Int v27 = v3;
    }
    else {
      Swift::Int v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      int64_t v28 = (char *)v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      int64_t v28 = (char *)v98;
      do
      {
        id v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        Swift::Int v82 = v9;
        os_log_type_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)os_log_type_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      Swift::Int v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100138654(0, *((void *)v28 + 2) + 1, 1, v28);
      int64_t v28 = (char *)result;
    }
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_100138654((char *)(v29 > 1), v30 + 1, 1, v28);
      int64_t v28 = (char *)result;
    }
    *((void *)v28 + 2) = v31;
    unint64_t v32 = v28 + 32;
    uint64_t v33 = (Swift::Int *)&v28[16 * v30 + 32];
    Swift::Int *v33 = v9;
    v33[1] = v7;
    unint64_t v98 = (unint64_t *)v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    Swift::Int v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unsigned int v39 = &v32[16 * v31];
      uint64_t v40 = *((void *)v39 - 8);
      uint64_t v41 = *((void *)v39 - 7);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *((void *)v39 - 6);
      uint64_t v43 = *((void *)v39 - 5);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = &v32[16 * v31 - 32];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = &v32[16 * v34];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *((void *)v28 + 4);
        uint64_t v64 = *((void *)v28 + 5);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *((void *)v28 + 4);
      uint64_t v35 = *((void *)v28 + 5);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    id v52 = &v32[16 * v31 - 32];
    uint64_t v54 = *(void *)v52;
    uint64_t v53 = *((void *)v52 + 1);
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    os_log_type_t v58 = &v32[16 * v34];
    uint64_t v60 = *(void *)v58;
    uint64_t v59 = *((void *)v58 + 1);
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    os_log_type_t v65 = &v32[16 * v34];
    uint64_t v67 = *(void *)v65;
    uint64_t v66 = *((void *)v65 + 1);
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = &v32[16 * v73];
    uint64_t v75 = *(void *)v74;
    uint64_t v76 = &v32[16 * v34];
    uint64_t v77 = *((void *)v76 + 1);
    uint64_t result = sub_1001384AC((char *)(v8 + 16 * *(void *)v74), (char *)(v8 + 16 * *(void *)v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > v98[2]) {
      goto LABEL_125;
    }
    *(void *)uint64_t v74 = v75;
    *(void *)&v32[16 * v73 + 8] = v77;
    unint64_t v78 = v98[2];
    if (v34 >= v78) {
      goto LABEL_126;
    }
    int64_t v28 = (char *)v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove(&v32[16 * v34], v76 + 16, 16 * (v78 - 1 - v34));
    v98[2] = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001383E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      id v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)id v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1001384AC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_1001DBA8C(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    unint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      Swift::Int v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_1001DBA8C(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      Swift::Int v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    Swift::Int v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_1001DBA8C(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

char *sub_100138654(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10011EB3C(&qword_100321958);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  os_log_type_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10013874C(uint64_t a1)
{
  return sub_100138654(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100138760(void *a1)
{
  id v2 = [a1 filePath];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1001387D0(void *a1)
{
  id v2 = [a1 wallpaperData];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_100138840(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [a3 directoryExistsAtPath:v4];

  return v5;
}

uint64_t sub_10013889C()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100122300();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

void sub_100138940()
{
  type metadata accessor for URL();
  uint64_t v1 = *(void **)(v0 + 16);

  sub_100134D54(v1);
}

uint64_t sub_1001389A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001389E4()
{
  sub_100132580(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001389EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100138A00(a1, a2);
  }
  return a1;
}

uint64_t sub_100138A00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100138A58(uint64_t a1, uint64_t *a2)
{
  sub_10011EB3C(a2);
  sub_100121124();
  sub_100138D8C();
  v3();
  return a1;
}

uint64_t sub_100138AA4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100138AB8(a1, a2);
  }
  return a1;
}

uint64_t sub_100138AB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

_OWORD *sub_100138B10(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100138B20()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100138B58(char a1)
{
  return sub_1001B23E8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100138B60()
{
  return swift_release();
}

uint64_t sub_100138B68()
{
  type metadata accessor for ConversationControlsType();
  sub_100121124();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100138D8C();
  v5();

  return _swift_deallocObject(v0, v4 + 8, v3);
}

void sub_100138BFC()
{
  uint64_t v1 = *(void *)(type metadata accessor for ConversationControlsType() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1001305B8(v2);
}

char *sub_100138C88(uint64_t a1)
{
  return sub_1001C2298(0, *(void *)(a1 + 16), 0, a1);
}

BOOL sub_100138CCC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100138CE8()
{
  return swift_slowAlloc();
}

uint64_t sub_100138D00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(v2 - 272) = (a1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t result = v1;
  *(void *)(v2 - 240) = v3;
  return result;
}

uint64_t sub_100138D2C()
{
  return v0;
}

uint64_t sub_100138D44(uint64_t a1, uint64_t a2)
{
  sub_10011EC48(a1, a2);
  return Logger.logObject.getter();
}

uint64_t sub_100138D6C()
{
  return swift_beginAccess();
}

uint64_t sub_100138D98()
{
  return 0;
}

uint64_t sub_100138DB4()
{
  return 0;
}

unint64_t sub_100138DD8()
{
  return 0xD000000000000013;
}

_WORD *sub_100138DF0(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

void sub_100138E08(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_100138E28()
{
  return swift_dynamicCast();
}

uint64_t sub_100138E40()
{
  return v0;
}

_WORD *sub_100138E4C(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_100138E58()
{
  return v0;
}

uint64_t sub_100138E6C()
{
  return 7104878;
}

uint64_t sub_100138E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (sub_100120F20(a1, 1, v5) == 1)
  {
    sub_10013C174(a1, &qword_100320BD0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

double sub_100138FC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_10013B954(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_10012A154(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

double sub_100139024@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10013B9CC(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_10012A154(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_100139088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_10013B954(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(a3 + 56) + 16 * v4;
  uint64_t v7 = *(void *)v6;
  id v8 = *(id *)(v6 + 8);
  return v7;
}

uint64_t sub_1001390DC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 512;
  }
  unint64_t v3 = sub_10013BA10(a1);
  if ((v4 & 1) == 0) {
    return 512;
  }
  char v5 = (unsigned __int8 *)(*(void *)(a2 + 56) + 32 * v3);
  if (v5[1]) {
    uint64_t v6 = 256;
  }
  else {
    uint64_t v6 = 0;
  }
  return v6 | *v5;
}

void *sub_100139158(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_10013BAA8(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  char v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

__n128 sub_1001391A0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  __n128 v8 = *(__n128 *)(v1 + 1);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  swift_retain();
  char v6 = static Edge.Set.all.getter();
  *(void *)a1 = v3;
  __n128 result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return result;
}

char *sub_100139214()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for VideoCallViewCoordinator());
  swift_retain();
  return sub_1001398C0(v0);
}

id sub_100139254()
{
  type metadata accessor for MultiwayViewController();
  sub_1001D9D58();
  sub_10011EB3C(&qword_100321A20);
  UIViewControllerRepresentableContext.coordinator.getter();
  id v0 = *(id *)&v9[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_bannerPresentationManager];

  id v1 = (void *)MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)();
  UIViewControllerRepresentableContext.coordinator.getter();
  MultiwayViewController.delegate.setter();
  UIViewControllerRepresentableContext.coordinator.getter();
  MultiwayViewController.iOSDelegate.setter();
  id v2 = [self currentDevice];
  [v2 userInterfaceIdiom];

  MultiwayViewController.supportedDeviceOrientations.setter();
  MultiwayViewController.isDisplayedInBanner.setter();
  MultiwayViewController.pipState.setter();
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = result;
  [result setUserInteractionEnabled:0];

  MultiwayViewController.needsTips.setter();
  id result = [v1 view];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  [result layoutIfNeeded];

  MultiwayViewController.isOnScreen.setter();
  UIViewControllerRepresentableContext.coordinator.getter();
  id v6 = v1;
  sub_1001398AC((uint64_t)v1);

  UIViewControllerRepresentableContext.coordinator.getter();
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v7 = result;
    id v8 = [result lastValidOrientation];

    sub_10013AB10((uint64_t)v8);
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10013948C(void *a1)
{
  uint64_t v2 = (uint64_t)v1;
  sub_10011EB3C(&qword_100321A20);
  UIViewControllerRepresentableContext.transaction.getter();
  uint64_t v4 = Transaction.animation.getter();
  swift_release();
  swift_release();
  if (v4)
  {
    uint64_t v5 = self;
    uint64_t v6 = swift_allocObject();
    long long v7 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v6 + 24) = *(_OWORD *)v2;
    *(void *)(v6 + 16) = a1;
    *(_OWORD *)(v6 + 40) = v7;
    *(void *)(v6 + 56) = *(void *)(v2 + 32);
    void v14[4] = sub_10013BD84;
    v14[5] = v6;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    _DWORD v14[2] = sub_10012EDF4;
    v14[3] = &unk_1002D20E0;
    id v8 = _Block_copy(v14);
    id v9 = a1;
    sub_10013B674(v2);
    swift_release();
    [v5 animateWithDuration:0 delay:v8 options:0 animations:0.35 completion:0.0];
    _Block_release(v8);
  }
  else
  {
    double v10 = v1[1];
    double v11 = v1[2];
    double v12 = v1[3];
    double v13 = v1[4];
    [a1 setAdditionalSafeAreaInsets:v10, v11, v12, v13];
  }
}

void sub_100139620(void *a1, double *a2)
{
  [a1 setAdditionalSafeAreaInsets:a2[1], a2[2], a2[3], a2[4]];
  id v3 = [a1 view];
  if (v3)
  {
    id v4 = v3;
    [v3 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

id sub_1001396A0()
{
  return sub_100139254();
}

void sub_1001396DC(void *a1)
{
}

char *sub_100139720@<X0>(char **a1@<X8>)
{
  id result = sub_100139214();
  *a1 = result;
  return result;
}

uint64_t sub_100139764()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_1001397A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10013BDA8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100139804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10013BDA8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100139868()
{
  return static View._viewListCount(inputs:)();
}

void sub_100139884()
{
}

void sub_1001398AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1
                + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController);
  *(void *)(v1
            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController) = a1;
}

char *sub_1001398C0(uint64_t a1)
{
  uint64_t v3 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice] = 0;
  v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isAmbient] = 0;
  long long v7 = &v1[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_configuration];
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)long long v7 = *(_OWORD *)a1;
  *((_OWORD *)v7 + 1) = v8;
  *((void *)v7 + 4) = *(void *)(a1 + 32);
  id v9 = objc_allocWithZone((Class)type metadata accessor for BannerPresentationManager());
  double v10 = v1;
  sub_10013B674(a1);
  *(void *)&v10[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_bannerPresentationManager] = BannerPresentationManager.init(delegate:)();
  v10[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_hasPresentedFullScreenCallUI] = 1;
  v10[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isPresentingFullScreenCallUI] = 1;

  double v11 = (objc_class *)type metadata accessor for VideoCallViewCoordinator();
  v23.receiver = v10;
  v23.super_class = v11;
  double v12 = (char *)[super init];
  double v13 = *(void **)&v12[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_bannerPresentationManager];
  BOOL v14 = v12;
  id v15 = v13;
  dispatch thunk of BannerPresentationManager.presentationDelegate.setter();

  id result = (char *)[self sharedInstance];
  if (result)
  {
    uint64_t v17 = result;
    [result setOrientationEventsEnabled:1];

    uint64_t v18 = type metadata accessor for TaskPriority();
    sub_10011EB80((uint64_t)v6, 1, 1, v18);
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v20 = static MainActor.shared.getter();
    BOOL v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v19;
    swift_release();
    uint64_t v22 = sub_100138E78((uint64_t)v6, (uint64_t)&unk_1003219E0, (uint64_t)v21);
    sub_10013B894(a1);

    *(void *)&v14[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask] = v22;
    swift_release();
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100139B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  sub_10011EB3C(&qword_1003219E8);
  v4[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Notification();
  void v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  uint8_t v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v4[18] = swift_task_alloc();
  uint64_t v6 = sub_10011EB3C(&qword_1003219F0);
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v7 = sub_10011EB3C(&qword_1003219F8);
  v4[22] = v7;
  v4[23] = *(void *)(v7 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for MainActor();
  v4[27] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[28] = v9;
  v4[29] = v8;
  return _swift_task_switch(sub_100139D70, v9, v8);
}

uint64_t sub_100139D70()
{
  uint64_t v1 = v0[21];
  uint64_t v10 = v0[20];
  uint64_t v2 = v0[19];
  id v3 = [self defaultCenter];
  uint64_t v4 = NSNotificationCenter.notifications(named:object:)();

  v0[9] = v4;
  type metadata accessor for NSNotificationCenter.Notifications();
  sub_10011EB3C((uint64_t *)&unk_100321A08);
  sub_10013C12C((unint64_t *)&qword_100321600, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications);
  AsyncMapSequence.init(_:transform:)();
  AsyncMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v2);
  AsyncMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v5 = static MainActor.shared.getter();
  v0[30] = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v0[31] = v6;
  v0[32] = v8;
  return _swift_task_switch(sub_100139F9C, v6, v8);
}

uint64_t sub_100139F9C()
{
  uint64_t v1 = v0[30];
  v0[33] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_10013C12C(&qword_100321A18, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[34] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10013A0A4;
  uint64_t v3 = v0[13];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_10013A0A4()
{
  sub_1001201F8();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100120354();
  void *v5 = v4;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(void *)(v3 + 248);
    uint64_t v7 = *(void *)(v3 + 256);
    uint64_t v8 = sub_10013A37C;
  }
  else
  {
    (*(void (**)(void))(v3 + 264))();
    uint64_t v6 = *(void *)(v3 + 248);
    uint64_t v7 = *(void *)(v3 + 256);
    uint64_t v8 = sub_10013A1A0;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10013A1A0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  if (sub_100120F20(v1, 1, v2) != 1)
  {
    uint64_t v8 = v0[24];
    uint64_t v7 = v0[25];
    uint64_t v9 = v0[22];
    uint64_t v10 = v0[23];
    (*(void (**)(void, uint64_t, uint64_t))(v0[15] + 32))(v0[16], v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    AsyncMapSequence.Iterator.transform.getter();
    v0[35] = v11;
    double v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v0[36] = v12;
    v0[37] = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v8, v9);
    double v13 = (void *)swift_task_alloc();
    v0[38] = v13;
    *double v13 = v0;
    v13[1] = sub_10013A394;
    sub_10013C404();
    __asm { BRAA            X2, X16 }
  }
  sub_10013C174(v1, &qword_1003219E8);
  swift_release();
  sub_10013C404();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10013A37C()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t sub_10013A394()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  sub_100120354();
  *uint64_t v3 = v2;
  uint64_t v4 = v1[16];
  uint64_t v5 = v1[15];
  uint64_t v6 = v1[14];
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  v2[39] = v1[11];
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10013C404();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10013A540()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  return _swift_task_switch(sub_10013A5A4, v1, v2);
}

uint64_t sub_10013A5A4()
{
  uint64_t v1 = (void *)v0[39];
  if (!v1)
  {
    swift_release();
    if (qword_100320588 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10011EC48(v10, (uint64_t)qword_10032CCB0);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    BOOL v14 = (void (*)(uint64_t, uint64_t))v0[36];
    uint64_t v15 = v0[25];
    uint64_t v16 = v0[22];
    if (v13)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received in-call orientation event with no orientation.", v17, 2u);
      swift_slowDealloc();
    }

    v14(v15, v16);
    sub_10013C41C();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10013C404();
    __asm { BRAA            X1, X16 }
  }
  id v2 = v1;
  id v3 = [v2 integerValue];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_10013AB10((uint64_t)v3);
  }
  uint64_t v6 = static MainActor.shared.getter();
  v0[30] = v6;
  if (v6)
  {
    swift_getObjectType();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v0[31] = v7;
  v0[32] = v9;
  sub_10013C404();
  return _swift_task_switch(v20, v21, v22);
}

uint64_t sub_10013A7D0()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[25], v0[22]);
  swift_release();
  sub_10013C41C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10013A88C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return _swift_task_switch(sub_10013A8AC, 0, 0);
}

uint64_t sub_10013A8AC()
{
  uint64_t v1 = Notification.userInfo.getter();
  if (!v1)
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  *(void *)(v0 + 88) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 96) = v3;
  AnyHashable.init<A>(_:)();
  sub_100139024(v0 + 16, v2, (_OWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  sub_10013B8C0(v0 + 16);
  if (!*(void *)(v0 + 80))
  {
LABEL_6:
    uint64_t v4 = *(void **)(v0 + 104);
    sub_10013C174(v0 + 56, (uint64_t *)&unk_100321630);
    void *v4 = 0;
    goto LABEL_7;
  }
  sub_10013B914();
  if ((swift_dynamicCast() & 1) == 0) {
    **(void **)(v0 + 104) = 0;
  }
LABEL_7:
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

id sub_10013A9E0()
{
  if (*(void *)&v0[OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_orientationTask])
  {
    swift_retain();
    sub_10011EB3C(&qword_1003215E0);
    Task.cancel()();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoCallViewCoordinator();
  [super dealloc];
}

void sub_10013AB10(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
  {
    if (qword_100320588 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10011EC48(v3, (uint64_t)qword_10032CCB0);
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Ignoring non-interface device orientation: %ld", v5, 0xCu);
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    objc_super v2 = *(void **)(v1
                  + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_viewController);
    if (v2)
    {
      oslog = v2;
      MultiwayViewController.deviceOrientation.setter();
    }
    else
    {
      if (qword_100320588 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10011EC48(v6, (uint64_t)qword_10032CCB0);
      oslog = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Unexpectedly missing view controller for coordinator.", v8, 2u);
        swift_slowDealloc();
      }
    }
  }
}

void *sub_10013AEC8()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice);
  id v2 = v1;
  return v1;
}

void sub_10013AF54(uint64_t a1)
{
  id v2 = *(void **)(v1
                + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice);
  *(void *)(v1
            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_audioRouteGlyphForDevice) = a1;
}

uint64_t sub_10013B088()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_hasPresentedFullScreenCallUI);
}

uint64_t sub_10013B0C0(uint64_t result)
{
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_hasPresentedFullScreenCallUI) = result;
  return result;
}

uint64_t sub_10013B0F8()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isPresentingFullScreenCallUI);
}

uint64_t sub_10013B130(uint64_t result)
{
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isPresentingFullScreenCallUI) = result;
  return result;
}

uint64_t sub_10013B168()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isAmbient);
}

uint64_t sub_10013B1A0(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallServiceP33_54F15DC26ECDE4E093E20EA054ADA2B524VideoCallViewCoordinator_isAmbient) = result;
  return result;
}

uint64_t sub_10013B458()
{
  return 0;
}

void sub_10013B524()
{
}

uint64_t type metadata accessor for VideoCallViewCoordinator()
{
  return self;
}

uint64_t destroy for VideoCallView()
{
  return swift_release();
}

uint64_t initializeWithCopy for VideoCallView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

__n128 initializeWithTake for VideoCallView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VideoCallView()
{
  return &type metadata for VideoCallView;
}

void *sub_10013B618()
{
  return &protocol witness table for Never;
}

unint64_t sub_10013B628()
{
  unint64_t result = qword_1003219C8;
  if (!qword_1003219C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003219C8);
  }
  return result;
}

uint64_t sub_10013B674(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013B6A0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013B6D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013B718(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *os_log_type_t v7 = v2;
  v7[1] = sub_10013B7CC;
  return sub_100139B48(a1, v4, v5, v6);
}

uint64_t sub_10013B7CC()
{
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_100120354();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  long long v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_10013B894(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013B8C0(uint64_t a1)
{
  return a1;
}

unint64_t sub_10013B914()
{
  unint64_t result = qword_100323980;
  if (!qword_100323980)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_100323980);
  }
  return result;
}

unint64_t sub_10013B954(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10013BB3C(a1, a2, v4);
}

unint64_t sub_10013B9CC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10013BC20(a1, v4);
}

unint64_t sub_10013BA10(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_10013C12C((unint64_t *)&qword_100321A30, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_10013BDF4(a1, v2);
}

unint64_t sub_10013BAA8(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_10013BFB4(a1, v2);
}

unint64_t sub_10013BB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10013BC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10013BCE8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10013B8C0((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10013BCE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10013BD44()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10013BD84()
{
  sub_100139620(*(void **)(v0 + 16), (double *)(v0 + 24));
}

uint64_t sub_10013BD90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10013BDA0()
{
  return swift_release();
}

unint64_t sub_10013BDA8()
{
  unint64_t result = qword_100321A28;
  if (!qword_100321A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321A28);
  }
  return result;
}

unint64_t sub_10013BDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4);
      sub_10013C12C(&qword_100321A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10013BFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_10013C12C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013C174(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10011EB3C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10013C1D0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void *_s13InCallService13VideoCallViewVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t _s13InCallService13VideoCallViewVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmbientAvatar(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AmbientAvatar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIVideoFeedView()
{
  return &type metadata for ClarityUIVideoFeedView;
}

uint64_t sub_10013C350()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10013C370()
{
  unint64_t result = qword_100321A48;
  if (!qword_100321A48)
  {
    sub_1001221B0((uint64_t *)&unk_100321A50);
    sub_10013B628();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321A48);
  }
  return result;
}

uint64_t sub_10013C41C()
{
  return swift_task_dealloc();
}

Swift::Void __swiftcall PHAudioCallViewController.updateCallRecordingIfNeeded()()
{
  uint64_t v1 = v0;
  [v0 addCallRecordingIfNeeded];
  id v2 = [v0 callRecordingButtonViewController];
  if (v2)
  {
    uint64_t v3 = v2;
    type metadata accessor for CallRecordingButtonViewController();
    if (swift_dynamicCastClass())
    {
      id v4 = [v0 frontmostCall];
      if (v4)
      {
        unint64_t v5 = v4;
        id v6 = [v4 callUUID];
        uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v9 = v8;

        v10._countAndFlagsBits = v7;
        v10._object = v9;
        CallRecordingButtonViewController.update(callUUID:)(v10);
        swift_bridgeObjectRelease();
        [v5 recordingAvailability];
        CallRecordingButtonViewController.update(recordingAvailability:)();

        uint64_t v3 = v5;
      }
    }
  }
  id v11 = [v0 callRecordingButtonViewController];
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 view];

    if (!v13)
    {
      __break(1u);
      goto LABEL_16;
    }
    [v13 setHidden:[v1 conditions] ^ 1];
  }
  id v14 = [v1 callRecordingPillViewController];
  if (!v14) {
    return;
  }
  uint64_t v15 = v14;
  id v16 = [v14 view];

  if (!v16)
  {
LABEL_16:
    __break(1u);
    return;
  }
  [v16 setHidden:[v1 conditions] ^ 1];
}

uint64_t sub_10013C6BC()
{
  id v1 = [v0 features];
  unsigned int v2 = [v1 callRecordingEnabled];

  if (v2)
  {
    id v3 = [self currentDevice];
    id v4 = [v3 userInterfaceIdiom];

    if (v4 != (id)1)
    {
      id v6 = [v0 frontmostCall];
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = [v0 callDisplayStyleManager];
        id v9 = [v8 callDisplayStyle];

        if (sub_1001D30EC((uint64_t)v9, (uint64_t)&off_1002D0FD0))
        {
          if ([v0 middleViewState] != 2)
          {
            uint64_t v5 = 1;
            goto LABEL_17;
          }
          if (qword_100320560 != -1) {
            swift_once();
          }
          uint64_t v10 = type metadata accessor for Logger();
          sub_10011EC48(v10, (uint64_t)qword_10032CC48);
          id v11 = Logger.logObject.getter();
          os_log_type_t v12 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v11, v12))
          {
            id v13 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v13 = 0;
            _os_log_impl((void *)&_mh_execute_header, v11, v12, "Middle view is keypad", v13, 2u);
            swift_slowDealloc();
          }
        }
      }
      else
      {
        if (qword_100320560 != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        sub_10011EC48(v14, (uint64_t)qword_10032CC48);
        uint64_t v7 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v7, v15))
        {
          id v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v16 = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, v15, "No prioritized call", v16, 2u);
          swift_slowDealloc();
        }
      }
      uint64_t v5 = 0;
LABEL_17:

      return v5;
    }
  }
  return 0;
}

Swift::Void __swiftcall PHAudioCallViewController.invertColorCallRecordingButtonColor(_:)(Swift::Bool a1)
{
  id v3 = [v1 callRecordingButtonViewController];
  if (v3)
  {
    id v4 = v3;
    type metadata accessor for CallRecordingButtonViewController();
    if (swift_dynamicCastClass()) {
      CallRecordingButtonViewController.invertColor(_:)(a1);
    }
  }
}

void sub_10013CA38()
{
  id v1 = [v0 features];
  unsigned int v2 = [v1 callRecordingEnabled];

  if (v2)
  {
    [v0 addButton];
    [v0 addRecordingIndicator];
  }
}

void sub_10013CB14()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for CallRecordingViewMaterialType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CallRecordingPillViewController.DisplayStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (void *)((char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = [v0 features];
  unsigned int v13 = [v12 callRecordingEnabled];

  if (v13)
  {
    id v14 = [v1 callRecordingPillViewController];

    if (!v14)
    {
      if (sub_10013D158())
      {
        [self ambientAudioRoutesButtonSize];
        void *v11 = v15;
        id v16 = (unsigned int *)&enum case for CallRecordingPillViewController.DisplayStyle.ambient(_:);
      }
      else
      {
        id v16 = (unsigned int *)&enum case for CallRecordingPillViewController.DisplayStyle.portrait(_:);
      }
      (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, *v16, v7);
      id v17 = objc_allocWithZone((Class)type metadata accessor for CallRecordingPillViewController());
      char v18 = (void *)CallRecordingPillViewController.init(displayStyle:)();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for CallRecordingViewMaterialType.photo(_:), v2);
      CallRecordingPillViewController.updateBackgroundMaterial(material:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      [v1 setCallRecordingPillViewController:v18];
    }
    id v19 = [v1 callRecordingPillViewController];
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = [v19 view];
      if (!v21)
      {
LABEL_20:

        return;
      }
      uint64_t v22 = v21;
      if (sub_10013D158())
      {
        id v23 = [v1 features];
        unsigned int v24 = [v23 callRecordingDominoEnabled];

        if (!v24) {
          goto LABEL_19;
        }
        id v25 = [v1 ambientAudioRoutesControlView];
        if (!v25) {
          goto LABEL_19;
        }
        uint64_t v26 = v25;
        sub_10013D1AC(v1, (uint64_t)v22, v20);
        Swift::Int v27 = self;
        sub_10011EB3C((uint64_t *)&unk_100321360);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_100286B60;
        id v29 = [v22 centerYAnchor];
        id v30 = [v26 centerYAnchor];
        id v31 = [v29 constraintEqualToAnchor:v30];

        *(void *)(v28 + 32) = v31;
        id v32 = [v22 trailingAnchor];
        id v33 = [v26 leadingAnchor];
        id v34 = [v32 constraintEqualToAnchor:v33 constant:-12.0];

        *(void *)(v28 + 40) = v34;
      }
      else
      {
        if ([v1 middleViewState] != 1) {
          goto LABEL_19;
        }
        id v35 = [v1 buttonsViewController];
        id v36 = [v35 view];

        if (v36)
        {
          sub_10013D244(v36);
        }
        sub_10013D1AC(v1, (uint64_t)v22, v20);
        id v37 = [v1 recordingIndicatorLayoutGuide];
        if (!v37) {
          goto LABEL_19;
        }
        uint64_t v26 = v37;
        Swift::Int v27 = self;
        sub_10011EB3C((uint64_t *)&unk_100321360);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_100286400;
        id v38 = [v22 bottomAnchor];
        id v39 = [v26 topAnchor];
        id v40 = [v38 constraintEqualToAnchor:v39];

        *(void *)(v28 + 32) = v40;
        id v41 = [v22 centerXAnchor];
        id v42 = [v26 centerXAnchor];
        id v43 = [v41 constraintEqualToAnchor:v42];

        *(void *)(v28 + 40) = v43;
        id v44 = [v22 widthAnchor];
        id v45 = [v26 widthAnchor];
        id v46 = [v44 constraintEqualToAnchor:v45];

        *(void *)(v28 + 48) = v46;
      }
      v48[1] = v28;
      specialized Array._endMutation()();
      sub_10013DFE4();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v27 activateConstraints:isa];

LABEL_19:
      goto LABEL_20;
    }
  }
}

BOOL sub_10013D158()
{
  id v1 = [v0 callDisplayStyleManager];
  id v2 = [v1 callDisplayStyle];

  return v2 == (id)3;
}

id sub_10013D1AC(void *a1, uint64_t a2, void *a3)
{
  id result = [a1 view];
  if (result)
  {
    uint64_t v7 = result;
    [result addSubview:a2];

    [a1 addChildViewController:a3];
    return [a3 didMoveToParentViewController:a1];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10013D244(void *a1)
{
  id v2 = v1;
  id v4 = [v2 recordingIndicatorLayoutGuide];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v2 view];
    if (!v6)
    {
LABEL_13:
      __break(1u);
      return;
    }
    uint64_t v7 = v6;
    [v6 removeLayoutGuide:v5];
  }
  id v31 = [objc_allocWithZone((Class)UILayoutGuide) init];
  id v8 = [v2 view];
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = v8;
  [v8 addLayoutGuide:v31];

  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100286B70;
  id v11 = [a1 widthAnchor];
  id v12 = [v2 view];
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unsigned int v13 = v12;
  id v14 = [v12 widthAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v10 + 32) = v15;
  id v16 = [v31 bottomAnchor];
  id v17 = [a1 topAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v10 + 40) = v18;
  id v19 = [v31 widthAnchor];
  id v20 = [a1 widthAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20 multiplier:0.8];

  *(void *)(v10 + 48) = v21;
  id v22 = [v31 heightAnchor];
  sub_10013DCE4();
  id v23 = [v22 constraintEqualToConstant:];

  *(void *)(v10 + 56) = v23;
  id v24 = [v31 centerXAnchor];
  id v25 = [v2 view];
  if (!v25)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v26 = v25;
  Swift::Int v27 = self;
  id v28 = [v26 centerXAnchor];

  id v29 = [v24 constraintEqualToAnchor:v28];
  *(void *)(v10 + 64) = v29;
  specialized Array._endMutation()();
  sub_10013DFE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  [v2 setRecordingIndicatorLayoutGuide:v31];
}

void sub_10013D638()
{
  id v1 = v0;
  id v2 = [v0 features];
  unsigned int v3 = [v2 callRecordingEnabled];

  if (!v3) {
    return;
  }
  id v4 = [v1 callRecordingButtonViewController];

  if (v4) {
    return;
  }
  id v5 = [v1 frontmostCall];
  if (v5)
  {
    id v6 = v5;
    id v7 = [v5 callUUID];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    [v6 recordingAvailability];
    id v8 = [v6 recordingSession];
    uint64_t v9 = v8;
    if (v8)
    {
      [v8 recordingState];
    }
    id v10 = objc_allocWithZone((Class)type metadata accessor for CallRecordingButtonViewController());
    id v11 = (void *)CallRecordingButtonViewController.init(_:_:_:)();
    [v1 setCallRecordingButtonViewController:v11];
  }
  if (sub_10013D158())
  {
    if (qword_100320560 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10011EC48(v12, (uint64_t)qword_10032CC48);
    oslog = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "Not adding Call Recording button in Ambient.", v14, 2u);
      swift_slowDealloc();
    }
LABEL_20:
    id v36 = oslog;
    goto LABEL_21;
  }
  id v15 = [v1 callRecordingButtonViewController];
  if (!v15) {
    return;
  }
  oslog = v15;
  id v16 = [v15 view];
  if (!v16) {
    goto LABEL_20;
  }
  id v17 = v16;
  id v18 = [v1 view];
  if (!v18)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v19 = v18;
  [v18 addSubview:v17];

  [v1 addChildViewController:oslog];
  [oslog didMoveToParentViewController:v1];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = [v17 leadingAnchor];
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v22 = v21;
  id v23 = [v21 leadingAnchor];

  id v24 = [v20 constraintEqualToAnchor:v23 constant:sub_10013DB48()];
  [v1 setCallRecordingLeadingConstraint:v24];

  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100286B60;
  id v26 = [v17 topAnchor];
  id v27 = [v1 view];
  if (!v27)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v28 = v27;
  id v29 = [v27 topAnchor];

  [v1 callDetailsButtonPaddingTop];
  id v31 = [v26 constraintEqualToAnchor:v29 constant:v30 + 3.0];

  *(void *)(v25 + 32) = v31;
  id v32 = [v1 callRecordingLeadingConstraint];
  if (!v32)
  {
LABEL_27:
    __break(1u);
    return;
  }
  id v33 = v32;
  id v34 = self;
  *(void *)(v25 + 40) = v33;
  specialized Array._endMutation()();
  sub_10013DFE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:isa];

  id v36 = isa;
LABEL_21:
}

double sub_10013DB48()
{
  unsigned int v1 = [v0 isShowingPosterBadge];
  [v0 callDetailsButtonPaddingTrailing];
  if (v1) {
    return result * 3.0;
  }
  return result;
}

Swift::Void __swiftcall PHAudioCallViewController.updateCallRecordingPositionIfNeeded()()
{
  id v1 = [v0 features];
  unsigned int v2 = [v1 callRecordingEnabled];

  if (v2)
  {
    id v3 = [v0 callRecordingLeadingConstraint];
    if (v3)
    {
      id v4 = v3;
      [v3 setConstant:sub_10013DB48()];
    }
  }
}

void sub_10013DCE4()
{
  type metadata accessor for Features();
  uint64_t v0 = (void *)static Features.shared.getter();
  char v1 = dispatch thunk of Features.isButtonLayoutEnabled.getter();

  if (v1)
  {
    id v2 = [self mainScreen];
    [v2 bounds];
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;

    v11.origin.double x = v4;
    v11.origin.double y = v6;
    v11.size.double width = v8;
    v11.size.double height = v10;
    CGRectGetWidth(v11);
    v12.origin.double x = v4;
    v12.origin.double y = v6;
    v12.size.double width = v8;
    v12.size.double height = v10;
    CGRectGetHeight(v12);
  }
  else
  {
    [self inCallControlSpacing];
  }
}

void PHAudioCallViewController.updateCallRecordingViewBackgroundMaterialType(_:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for CallRecordingViewMaterialType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  CGFloat v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [v2 callRecordingPillViewController];
  if (v9)
  {
    id v13 = v9;
    type metadata accessor for CallRecordingPillViewController();
    if (swift_dynamicCastClass())
    {
      switch(a1)
      {
        case 2:
          CGFloat v10 = (unsigned int *)&enum case for CallRecordingViewMaterialType.noPhoto(_:);
          goto LABEL_12;
        case 1:
          CGFloat v10 = (unsigned int *)&enum case for CallRecordingViewMaterialType.avatar(_:);
          goto LABEL_12;
        case 0:
          CGFloat v10 = (unsigned int *)&enum case for CallRecordingViewMaterialType.photo(_:);
LABEL_12:
          (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, *v10, v4);
          CallRecordingPillViewController.updateBackgroundMaterial(material:)();

          (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          return;
      }
    }
    id v11 = v13;
  }
}

unint64_t sub_10013DFE4()
{
  unint64_t result = qword_100324B40;
  if (!qword_100324B40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100324B40);
  }
  return result;
}

unint64_t sub_10013E024(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

unint64_t sub_10013E034@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10013E024(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10013E068(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_100122300();
  uint64_t v48 = v5;
  uint64_t v49 = v4;
  __chkstk_darwin(v4, v6);
  sub_10013FC3C();
  id v46 = (char *)(v7 - v8);
  __chkstk_darwin(v9, v10);
  uint64_t v47 = (char *)&v45 - v11;
  type metadata accessor for MessageID.Value(0);
  sub_10013FC1C();
  __chkstk_darwin(v12, v13);
  sub_10013FC3C();
  uint64_t v16 = v14 - v15;
  uint64_t v19 = __chkstk_darwin(v17, v18);
  id v21 = (char *)&v45 - v20;
  uint64_t v23 = __chkstk_darwin(v19, v22);
  uint64_t v25 = (char *)&v45 - v24;
  __chkstk_darwin(v23, v26);
  id v28 = (unint64_t *)((char *)&v45 - v27);
  uint64_t v29 = sub_10011EB3C(&qword_100321BB8);
  uint64_t v31 = __chkstk_darwin(v29 - 8, v30);
  id v33 = (char *)&v45 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = &v33[*(int *)(v31 + 56)];
  sub_10011F2E8(a1, (uint64_t)v33);
  uint64_t v50 = a2;
  sub_10011F2E8(a2, (uint64_t)v34);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011F2E8((uint64_t)v33, (uint64_t)v25);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = v48;
      id v36 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      uint64_t v37 = v49;
      v36(v47, v25, v49);
      v36(v46, v34, v37);
      if (static UUID.== infix(_:_:)())
      {
        id v38 = *(void (**)(void))(v35 + 8);
        sub_10013FC64();
        v38();
        sub_10013FC64();
        v38();
LABEL_7:
        sub_10011F34C((uint64_t)v33);
        char v40 = 0;
        return v40 & 1;
      }
      char v40 = static UUID.< infix(_:_:)();
      id v43 = *(void (**)(void))(v35 + 8);
      sub_10013FC64();
      v43();
      sub_10013FC64();
      v43();
LABEL_18:
      sub_10011F34C((uint64_t)v33);
      return v40 & 1;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v49);
  }
  else
  {
    sub_10011F2E8((uint64_t)v33, (uint64_t)v28);
    unint64_t v39 = *v28;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v39 == *(void *)v34) {
        goto LABEL_7;
      }
      char v40 = v39 < *(void *)v34;
      goto LABEL_18;
    }
  }
  sub_10011F2E8(a1, (uint64_t)v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011F34C((uint64_t)v21);
    unint64_t v41 = 1;
  }
  else
  {
    unint64_t v41 = 0;
  }
  sub_10011F2E8(v50, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011F34C(v16);
    unint64_t v42 = 1;
  }
  else
  {
    unint64_t v42 = 0;
  }
  char v40 = v41 < v42;
  sub_10013FAFC((uint64_t)v33, &qword_100321BB8);
  return v40 & 1;
}

void sub_10013E3F0()
{
  uint64_t v3 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10013FC4C();
  type metadata accessor for MessageID.Value(0);
  sub_10013FC1C();
  __chkstk_darwin(v8, v9);
  sub_100120524();
  sub_10011F2E8(v0, (uint64_t)v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10013FC84();
    sub_10013FC74();
    v10();
    Hasher._combine(_:)(1uLL);
    sub_10013FA6C((unint64_t *)&qword_100321A30, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  }
  else
  {
    Swift::UInt v11 = *v2;
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v11);
  }
}

uint64_t sub_10013E558(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_100138DC0();
  type metadata accessor for MessageID.Value(0);
  sub_10013FC1C();
  __chkstk_darwin(v10, v11);
  sub_10013FC3C();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (uint64_t *)((char *)&v29 - v17);
  uint64_t v19 = sub_10011EB3C(&qword_100321BB8);
  __chkstk_darwin(v19 - 8, v20);
  sub_10013FC4C();
  uint64_t v22 = (void *)(v2 + *(int *)(v21 + 56));
  sub_10011F2E8(a1, v2);
  sub_10011F2E8(a2, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10011F2E8(v2, (uint64_t)v18);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v26 = *v18 == *v22;
      goto LABEL_6;
    }
LABEL_8:
    sub_10013FAFC(v2, &qword_100321BB8);
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v23 = sub_10013FC84();
  sub_10011F2E8(v23, v24);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v5);
    goto LABEL_8;
  }
  sub_10013FC74();
  v25();
  char v26 = static UUID.== infix(_:_:)();
  uint64_t v27 = *(void (**)(void))(v7 + 8);
  sub_10013FC2C();
  v27();
  sub_10013FC2C();
  v27();
LABEL_6:
  sub_10011F34C(v2);
  return v26 & 1;
}

Swift::Int sub_10013E778()
{
  return Hasher._finalize()();
}

BOOL sub_10013E7C0(uint64_t a1, uint64_t a2)
{
  return (sub_10013E068(a2, a1) & 1) == 0;
}

BOOL sub_10013E7EC(uint64_t a1, uint64_t a2)
{
  return (sub_10013F024(a2, a1) & 1) == 0;
}

BOOL sub_10013E81C(uint64_t a1, uint64_t a2)
{
  return (sub_10013E068(a1, a2) & 1) == 0;
}

BOOL sub_10013E83C(uint64_t a1, uint64_t a2)
{
  return (sub_10013F024(a1, a2) & 1) == 0;
}

uint64_t sub_10013E860(uint64_t a1, uint64_t a2)
{
  return sub_10013E068(a2, a1);
}

uint64_t sub_10013E870(uint64_t a1, uint64_t a2)
{
  return sub_10013F024(a2, a1) & 1;
}

Swift::Int sub_10013E8A0()
{
  return Hasher._finalize()();
}

uint64_t sub_10013E8F8()
{
  uint64_t v2 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v4 = v3;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MessageID.Value(0);
  sub_10013FC1C();
  __chkstk_darwin(v9, v10);
  sub_10013FC4C();
  sub_10011F2E8(v0 + OBJC_IVAR___MPMessageID_value, (uint64_t)v1);
  sub_10013FC84();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10013FC74();
    v11();
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v2);
  }
  else
  {
    v13[1] = *v1;
    dispatch thunk of CustomStringConvertible.description.getter();
  }
  return sub_10013FC84();
}

uint64_t sub_10013EB38@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for MessageID.Value(0);
  sub_10013FC1C();
  __chkstk_darwin(v4, v5);
  sub_100120524();
  sub_10011F2E8(v1 + OBJC_IVAR___MPMessageID_value, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = v7;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, v2, v7);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  return sub_10011EB80(a1, v9, 1, v8);
}

id sub_10013EC38(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

id sub_10013ECAC(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___MPMessageID_value] = a1;
  type metadata accessor for MessageID.Value(0);
  swift_storeEnumTagMultiPayload();
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return [super init];
}

id sub_10013ED4C(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR___MPMessageID_value];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  type metadata accessor for MessageID.Value(0);
  swift_storeEnumTagMultiPayload();
  v9.receiver = v1;
  v9.super_class = ObjectType;
  id v7 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

void sub_10013EEC8()
{
}

uint64_t sub_10013EF18()
{
  return type metadata accessor for MessageID(0);
}

uint64_t type metadata accessor for MessageID(uint64_t a1)
{
  return sub_10013EFF0(a1, (uint64_t *)&unk_100321AE8);
}

uint64_t sub_10013EF40()
{
  uint64_t result = type metadata accessor for MessageID.Value(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MessageID.Value(uint64_t a1)
{
  return sub_10013EFF0(a1, qword_100321B68);
}

uint64_t sub_10013EFF0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10013F024(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10013FC3C();
  uint64_t v12 = (char *)(v10 - v11);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v37 - v15;
  type metadata accessor for MessageID.Value(0);
  sub_10013FC1C();
  __chkstk_darwin(v17, v18);
  sub_10013FC3C();
  uint64_t v21 = (void *)(v19 - v20);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v37 - v24;
  uint64_t v26 = sub_10011EB3C(&qword_100321BB8);
  __chkstk_darwin(v26 - 8, v27);
  sub_100138DC0();
  uint64_t v28 = a1 + OBJC_IVAR___MPMessageID_value;
  uint64_t v29 = a2 + OBJC_IVAR___MPMessageID_value;
  uint64_t v31 = (char *)(v2 + *(int *)(v30 + 56));
  sub_10011F2E8(v28, v2);
  sub_10011F2E8(v29, (uint64_t)v31);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011F2E8(v2, (uint64_t)v25);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v32(v16, v25, v5);
      v32(v12, v31, v5);
      char v33 = static UUID.< infix(_:_:)();
      id v34 = *(void (**)(void))(v7 + 8);
      sub_10013FC2C();
      v34();
      sub_10013FC2C();
      v34();
    }
    else
    {
      sub_10013FC2C();
      v35();
      sub_10011F34C((uint64_t)v31);
      char v33 = 1;
    }
  }
  else
  {
    sub_10011F2E8(v2, (uint64_t)v21);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10011F34C((uint64_t)v31);
      char v33 = 0;
    }
    else
    {
      char v33 = *v21 < *(void *)v31;
    }
  }
  sub_10011F34C(v2);
  return v33 & 1;
}

Swift::Int sub_10013F2D4()
{
  return Hasher._finalize()();
}

uint64_t sub_10013F320(uint64_t a1)
{
  swift_getObjectType();
  sub_10013FB50(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_10013FAFC((uint64_t)v6, (uint64_t *)&unk_100321630);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  char v3 = sub_10013E558((uint64_t)v5 + OBJC_IVAR___MPMessageID_value, v1 + OBJC_IVAR___MPMessageID_value);

  return v3 & 1;
}

ValueMetadata *type metadata accessor for MessageFolder()
{
  return &type metadata for MessageFolder;
}

uint64_t *sub_10013F460(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_10013F55C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for UUID();
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_10013F5D8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10013F690(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10011F34C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_10013F758(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10013F810(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10011F34C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10013F8E4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10013F8F4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10013F98C()
{
  return sub_10013FA6C(&qword_100321BA0, (void (*)(uint64_t))type metadata accessor for MessageID.Value);
}

unint64_t sub_10013F9D8()
{
  unint64_t result = qword_100321BA8;
  if (!qword_100321BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321BA8);
  }
  return result;
}

uint64_t sub_10013FA24()
{
  return sub_10013FA6C(&qword_100321BB0, (void (*)(uint64_t))type metadata accessor for MessageID);
}

uint64_t sub_10013FA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013FAB4(uint64_t *a1, uint64_t *a2)
{
  return sub_10013F024(*a1, *a2) & 1;
}

BOOL sub_10013FAD8(uint64_t *a1, uint64_t *a2)
{
  return sub_10013E7EC(*a1, *a2);
}

BOOL sub_10013FAE4(uint64_t *a1, uint64_t *a2)
{
  return sub_10013E83C(*a1, *a2);
}

uint64_t sub_10013FAF0(uint64_t *a1, uint64_t *a2)
{
  return sub_10013E870(*a1, *a2);
}

uint64_t sub_10013FAFC(uint64_t a1, uint64_t *a2)
{
  sub_10011EB3C(a2);
  sub_10013FC1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013FB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C((uint64_t *)&unk_100321630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MessageType()
{
  return &type metadata for MessageType;
}

unint64_t sub_10013FBCC()
{
  unint64_t result = qword_100321BC0;
  if (!qword_100321BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321BC0);
  }
  return result;
}

uint64_t sub_10013FC84()
{
  return v0;
}

id sub_10013FD00@<X0>(id (**a1)()@<X8>)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v4;
  a1[3] = (id (*)())&type metadata for ClarityUIRootViewProvider;
  *a1 = sub_100141BC8;
  a1[1] = (id (*)())v2;

  return v4;
}

double sub_10013FD78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  type metadata accessor for MainActor();
  _DWORD v8[2] = a1;
  _OWORD v8[3] = a2;
  sub_1001D9C10((uint64_t)sub_100141B2C, (uint64_t)v8, (uint64_t)"InCallService/ICSApplicationDelegate+Swift.swift", 48, 2);
  long long v6 = v10;
  *a3 = v9;
  a3[1] = v6;
  double result = *(double *)&v11;
  a3[2] = v11;
  return result;
}

double sub_10013FE0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  sub_1001A1208((uint64_t)sub_100141B04, v6, v9);
  long long v7 = v9[1];
  *a3 = v9[0];
  a3[1] = v7;
  double result = *(double *)&v10;
  a3[2] = v10;
  return result;
}

double sub_10013FEA0@<D0>(_OWORD *a1@<X8>)
{
  return sub_10013FD78(*v1, v1[1], a1);
}

id ICSApplicationDelegate.bannerPresentationManager.getter()
{
  unint64_t v1 = (char *)[v0 bannerPresentationManager];
  uint64_t v2 = (id *)&v1[direct field offset for CNKBannerPresentationManager.value];
  swift_beginAccess();
  id v3 = *v2;

  return v3;
}

uint64_t ICSApplicationDelegate.isPresentingAmbient.getter()
{
  return static AmbientState.isPresented.getter() & 1;
}

uint64_t ICSApplicationDelegate.isPresentingAmbient.setter()
{
  return static AmbientState.isPresented.setter();
}

uint64_t ICSApplicationDelegate.updateForegroundApp(url:using:)@<X0>(uint64_t a1@<X1>, NSURL *a2@<X8>)
{
  URL._bridgeToObjectiveC()(a2);
  uint64_t v4 = v3;
  [v3 foregroundAppApplicationType];
  sub_100141A68(v4);
  if (v5
    && (type metadata accessor for ForegroundApp(), (uint64_t v6 = ForegroundApp.__allocating_init(bundleIdentifier:type:)()) != 0))
  {
    long long v7 = (void *)v6;
    uint64_t v8 = (id *)(a1 + direct field offset for CNKBannerPresentationManager.value);
    swift_beginAccess();
    id v9 = *v8;
    long long v10 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();

    if (v10)
    {
      id v11 = v7;
      dispatch thunk of ConversationControlsManager.foregroundApp.setter();
    }
    else
    {
    }
    return 1;
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10011EC48(v12, (uint64_t)qword_10032CBE8);
    id v13 = v4;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v21[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v22 = (uint64_t)v13;
      sub_100123340(0, &qword_100321BC8);
      id v17 = v13;
      uint64_t v18 = String.init<A>(reflecting:)();
      uint64_t v22 = sub_1001412B0(v18, v19, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unable to create ForegroundApp instance from url:%s", v16, 0xCu);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }
    else
    {
    }
    return 0;
  }
}

Swift::Void __swiftcall ICSApplicationDelegate.dismissAnsweredCallBannerIfNeeded()()
{
  id v1 = [v0 features];
  unsigned int v2 = [v1 isIncomingCallBannerEnabled];

  if (!v2
    || (id v3 = [v0 features],
        unsigned __int8 v4 = [v3 isSystemApertureEnabled],
        v3,
        (v4 & 1) != 0))
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10011EC48(v5, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      long long v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "dismissAnsweredCallBannerIfNeeded: not needed", v7, 2u);
      sub_100120278();
    }
LABEL_20:
    uint64_t v14 = oslog;
    goto LABEL_21;
  }
  oslog = ICSApplicationDelegate.bannerPresentationManager.getter();
  uint64_t v8 = dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();
  if (!v8)
  {
LABEL_15:
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10011EC48(v15, (uint64_t)qword_10032CBE8);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "dismissAnsweredCallBannerIfNeeded: dimissing", v18, 2u);
      sub_100120278();
    }

    NSString v19 = String._bridgeToObjectiveC()();
    [oslog dismissPresentedBannerForReason:v19 animated:1];

    goto LABEL_20;
  }
  id v9 = v8;
  if ((dispatch thunk of ConversationControlsManager.hasMultipleCalls.getter() & 1) == 0)
  {

    goto LABEL_15;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10011EC48(v10, (uint64_t)qword_10032CBE8);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "dismissAnsweredCallBannerIfNeeded: hasMultipleCalls, no dismissal needed", v13, 2u);
    sub_100120278();
  }

  uint64_t v14 = v9;
LABEL_21:
}

uint64_t sub_100140710()
{
  type metadata accessor for LiveVoicemailCarrierSettings();
  swift_allocObject();
  sub_1001206E8();
  type metadata accessor for AnsweringMachineSyncComposer();
  swift_allocObject();
  AnsweringMachineSyncComposer.init()();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  uint64_t v0 = dispatch thunk of AnsweringMachineSyncComposer.compose(isInSupportedEnvirement:timeToWaitForCall:)();
  swift_release();
  swift_release_n();
  swift_release_n();
  return v0;
}

uint64_t sub_100140808()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = [(id)result carKitSessionStatus];
    if (v1)
    {
      unsigned int v2 = v1;
      id v3 = [v1 currentSession];

      if (v3)
      {

        if (qword_100320550 != -1) {
          swift_once();
        }
        uint64_t v4 = type metadata accessor for Logger();
        sub_10011EC48(v4, (uint64_t)qword_10032CC18);
        uint64_t v5 = Logger.logObject.getter();
        os_log_type_t v6 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v5, v6))
        {
          long long v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v7 = 0;
          uint64_t v8 = "LiveVoicemail is disabled because we are connected to car play";
LABEL_13:
          _os_log_impl((void *)&_mh_execute_header, v5, v6, v8, v7, 2u);
          swift_slowDealloc();
          swift_unknownObjectRelease();

          return 0;
        }
        goto LABEL_14;
      }
    }
    swift_getObjectType();
    if ([(id)swift_getObjCClassFromMetadata() hasCarKitRoute])
    {
      if (qword_100320550 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_10011EC48(v9, (uint64_t)qword_10032CC18);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        long long v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v7 = 0;
        uint64_t v8 = "LiveVoicemail is disabled because we are connected to carkit";
        goto LABEL_13;
      }
LABEL_14:

      swift_unknownObjectRelease();
      return 0;
    }
    swift_unknownObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_100140A28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = [a1 provider];
  unsigned __int8 v5 = [v4 isFaceTimeProvider];

  if (v5)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10011EC48(v6, (uint64_t)qword_10032CBE8);
    id v7 = a1;
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      id v11 = [v7 callUUID];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      sub_1001412B0(v12, v14, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "callScreening wait time for call: %{public}s needs to wait for default time before call screening.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v31 = enum case for TimeToWaitForCall.faceTime(_:);
    uint64_t v32 = type metadata accessor for TimeToWaitForCall();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(a2, v31, v32);
  }
  else
  {
    sub_100120780(a1);
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10011EC48(v19, (uint64_t)qword_10032CBE8);
    id v20 = a1;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446466;
      id v24 = [v20 callUUID];
      uint64_t v25 = a2;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      sub_1001412B0(v26, v28, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      uint64_t v29 = Duration.description.getter();
      sub_1001412B0(v29, v30, v36);
      a2 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "callScreening wait time for call: %{public}s is %{public}s from carrier", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    *a2 = v17;
    a2[1] = v18;
    uint64_t v34 = enum case for TimeToWaitForCall.duration(_:);
    uint64_t v35 = type metadata accessor for TimeToWaitForCall();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(a2, v34, v35);
  }
}

uint64_t sub_100141174(void *a1)
{
  id v2 = [objc_allocWithZone((Class)type metadata accessor for Features()) init];
  if (dispatch thunk of Features.fullScreenOutgoingFTAEnabled.getter())
  {
    unsigned int v3 = [a1 originatingUIType];
    if (v3 <= 0x20) {
      int v4 = (0x1000C0000uLL >> v3) & 1;
    }
    else {
      int v4 = 0;
    }
  }
  else
  {
    int v4 = 1;
  }
  sub_100123340(0, &qword_100321BD0);
  id v5 = [a1 provider];
  id v6 = [self expanseProvider];
  unsigned int v7 = static NSObject.== infix(_:_:)();

  return v4 & v7;
}

uint64_t sub_1001412B0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100141384(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10012A154((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10012A154((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100129FFC((uint64_t)v12);
  return v7;
}

uint64_t sub_100141384(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1001414DC((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_1001415B4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1001414DC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_1001415B4(uint64_t a1, unint64_t a2)
{
  id v2 = sub_10014164C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v2 = sub_100141828(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    id v2 = sub_100141828((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_10014164C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_1001417C0(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1001417C0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10011EB3C(&qword_100321BD8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_100141828(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10011EB3C(&qword_100321BD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1001419D8(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100141900(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_100141900(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_1001419D8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_100141A68(void *a1)
{
  id v1 = [a1 foregroundAppBundleIdentifier];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100141ACC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100141B04()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

double sub_100141B2C@<D0>(_OWORD *a1@<X8>)
{
  return sub_10013FE0C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100141B48()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100141B80()
{
  return sub_100140808();
}

uint64_t sub_100141B88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_100140A28(a1, a2);
}

uint64_t sub_100141B90()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100141BC8()
{
  return [*(id *)(v0 + 16) dismissInCallSceneSession];
}

void *initializeBufferWithCopyOfBuffer for ClarityUIRootViewProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ClarityUIRootViewProvider()
{
  return swift_release();
}

void *assignWithCopy for ClarityUIRootViewProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ClarityUIRootViewProvider(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIRootViewProvider(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIRootViewProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClarityUIRootViewProvider()
{
  return &type metadata for ClarityUIRootViewProvider;
}

uint64_t sub_100141D0C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100141D2C()
{
  unint64_t result = qword_100321BE0;
  if (!qword_100321BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321BE0);
  }
  return result;
}

uint64_t sub_100141E24()
{
  uint64_t v0 = sub_100142F98();
  sub_100142F48(v0);
  return sub_100142F98();
}

uint64_t sub_100141F04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR___ICSFallbackToTelephonyAlert_cancelAction);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR___ICSFallbackToTelephonyAlert_cancelAction);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_100142E2C(v4);
}

id sub_100141F24(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR___ICSFallbackToTelephonyAlert_cancelAction];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR___ICSFallbackToTelephonyAlert_disconnectedCall] = a1;
  char v5 = self;
  unint64_t v6 = v1;
  id v7 = a1;
  id v8 = [v5 tu_contactStoreConfigurationForCall:v7];
  id v9 = [objc_allocWithZone((Class)CNContactStore) initWithConfiguration:v8];
  id v10 = [v7 handle];
  size_t v11 = v10;
  id v38 = v8;
  if (v10)
  {
    id v12 = [v10 value];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_100142F98();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100286EB0;
  *(void *)(v14 + 32) = [self descriptorForRequiredKeysForStyle:0];
  uint64_t v40 = v14;
  specialized Array._endMutation()();
  sub_10011EB3C(&qword_100322930);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v9 contactForDestinationId:v13 keysToFetch:isa];

  if (v16)
  {
    uint64_t v17 = sub_100142E88(v16);
    if (v18)
    {
      uint64_t v19 = v17;
      unint64_t v20 = v18;
      if (String.count.getter() >= 1)
      {
        uint64_t v21 = &v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name];
        *(void *)&v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name] = v19;
LABEL_18:
        *((void *)v21 + 1) = v20;

        v39.receiver = v6;
        v39.super_class = ObjectType;
        id v36 = [super init];

        return v36;
      }
      swift_bridgeObjectRelease();
    }
  }
  id v22 = [v7 handle];
  if (!v22)
  {
    uint64_t v21 = &v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name];
    *(void *)&v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name] = 0;
    unint64_t v20 = 0xE000000000000000;
    goto LABEL_18;
  }
  uint64_t v23 = v22;
  uint64_t v37 = ObjectType;
  id v24 = [v22 type];
  id result = [v23 value];
  uint64_t v26 = result;
  if (v24 != (id)2)
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v35;

    uint64_t v21 = &v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name];
    *(void *)&v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name] = v34;
LABEL_17:
    uint64_t ObjectType = v37;
    goto LABEL_18;
  }
  if (result)
  {
    unint64_t v27 = (void *)PNCopyBestGuessCountryCodeForNumber();

    id result = [v23 value];
    if (result)
    {
      unint64_t v28 = result;
      uint64_t v29 = (void *)CFPhoneNumberCreate();

      id String = (id)CFPhoneNumberCreateString();
      if (!String) {
        id String = [v23 value];
      }
      uint64_t v31 = String;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v33;

      uint64_t v21 = &v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name];
      *(void *)&v6[OBJC_IVAR___ICSFallbackToTelephonyAlert_name] = v32;
      goto LABEL_17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100142310()
{
  id v1 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(0x4C4C45435F455355, 0xEF40255F52414C55);

  sub_10011EB3C(&qword_100321C40);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1002862D0;
  *(void *)(v2 + 56) = &type metadata for String;
  unint64_t v3 = sub_100142E3C();
  sub_100142FB4(v3);
  sub_100142FEC();
  sub_100142FD0();
  return sub_100142F98();
}

uint64_t sub_100142408()
{
  id v1 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(0xD000000000000014, 0x8000000100234FB0);

  sub_10011EB3C(&qword_100321C40);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1002862D0;
  *(void *)(v2 + 56) = &type metadata for String;
  unint64_t v3 = sub_100142E3C();
  sub_100142FB4(v3);
  sub_100142FEC();
  sub_100142FD0();
  return sub_100142F98();
}

id sub_1001424F8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_100142578()
{
  id v1 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(0x40255F4C4C4143, 0xE700000000000000);

  sub_10011EB3C(&qword_100321C40);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1002862D0;
  *(void *)(v2 + 56) = &type metadata for String;
  unint64_t v3 = sub_100142E3C();
  sub_100142FB4(v3);
  sub_100142FEC();
  sub_100142FD0();
  return sub_100142F98();
}

uint64_t sub_1001426C0()
{
  id v1 = [self mainBundle];
  sub_100142FA4();
  uint64_t v2 = sub_100142F58(0x574F4E5F544F4ELL, 0xE700000000000000);

  return v2;
}

void sub_10014273C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10011EB3C(&qword_100321178);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  byte_100321BF0 = 0;
  id v10 = [objc_allocWithZone((Class)TUCallProviderManager) init];
  id v11 = [v10 telephonyProvider];
  id v12 = [objc_allocWithZone((Class)TUDialRequest) initWithProvider:v11];

  NSString v13 = *(void **)(v0 + OBJC_IVAR___ICSFallbackToTelephonyAlert_disconnectedCall);
  id v14 = [v13 handle];
  [v12 setHandle:v14];

  [v12 setPreferDefaultApp:0];
  Class isa = (Class)[v13 localSenderIdentityUUID];
  if (isa)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v9, v5, v1);
    sub_10011EB80((uint64_t)v9, 0, 1, v1);
    if (sub_100120F20((uint64_t)v9, 1, v1) == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
    }
  }
  else
  {
    sub_10011EB80((uint64_t)v9, 1, 1, v1);
  }
  [v12 setLocalSenderIdentityAccountUUID:isa];

  [v12 setOriginatingUIType:51];
  [v12 setTtyType:1];
  id v16 = [self sharedInstance];
  [v16 launchAppForDialRequest:v12 completion:0];
}

void sub_100142A74()
{
  byte_100321BF0 = 0;
  uint64_t v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR___ICSFallbackToTelephonyAlert_cancelAction);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    uint64_t v3 = sub_100142F98();
    sub_100142E2C(v3);
  }
}

void sub_100142B28()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (byte_100321BF0)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10011EC48(v3, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "FallbackToTelephonyAlert is already presented.", v5, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v6 = (objc_class *)ObjectType;
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10011EC48(v7, (uint64_t)qword_10032CBE8);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Presenting FallbackToTelephonyAlert.", v10, 2u);
      swift_slowDealloc();
    }

    byte_100321BF0 = 1;
    v12.receiver = v1;
    v12.super_class = v6;
    [super show];
  }
}

void sub_100142D64()
{
}

uint64_t type metadata accessor for FallbackToTelephonyAlert()
{
  return self;
}

uint64_t sub_100142E2C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_100142E3C()
{
  unint64_t result = qword_100325BC0;
  if (!qword_100325BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100325BC0);
  }
  return result;
}

uint64_t sub_100142E88(void *a1)
{
  id v2 = [a1 displayName];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100142EF8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100142F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100142F40()
{
  return swift_release();
}

uint64_t sub_100142F48(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100142F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x65536C6C61436E49;
  unint64_t v5 = 0xED00006563697672;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_100142F98()
{
  return v0;
}

uint64_t sub_100142FB4(uint64_t a1)
{
  v1[8] = a1;
  v1[4] = v3;
  void v1[5] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100142FD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100142FEC()
{
  return String.init(format:_:)(v1, v2, v0);
}

uint64_t sub_10014302C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13InCallService15PHCountingLayer_value);
}

void sub_100143090(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC13InCallService15PHCountingLayer_value) = a1;
  sub_1001430A0();
}

void sub_1001430A0()
{
  sub_100123340(0, &qword_100321C80);
  uint64_t v1 = NSString.init(stringLiteral:)();
  sub_10011EB3C(&qword_100321C40);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value];
  *(_OWORD *)(v2 + 16) = xmmword_1002862D0;
  *(void *)(v2 + 56) = &type metadata for Int;
  *(void *)(v2 + 64) = &protocol witness table for Int;
  *(void *)(v2 + 32) = v3;
  id v4 = (id)NSString.init(format:_:)();

  [v0 setString:v4];
  [v0 setNeedsDisplay];
}

uint64_t sub_100143198()
{
  sub_100143684();
  BOOL v1 = v1 && v0 == 0xE500000000000000;
  if (v1 || (sub_100143660() & 1) != 0) {
    return 1;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v4 = String._bridgeToObjectiveC()();
  v6.receiver = ObjCClassFromMetadata;
  v6.super_class = (Class)&OBJC_METACLASS____TtC13InCallService15PHCountingLayer;
  [super needsDisplayForKey:v4];

  return (uint64_t)v2;
}

id sub_100143298(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100143684();
  BOOL v7 = v7 && v6 == 0xE500000000000000;
  if (v7 || (sub_100143660() & 1) != 0)
  {
    sub_100123340(0, (unint64_t *)&qword_100321C78);
    swift_bridgeObjectRetain();
    id v8 = sub_1001BF990(a1, a2);
    id v9 = [v3 presentationLayer];
    if (v9)
    {
      id v10 = v9;
      [v9 value];
    }
    else
    {
      [v3 value];
    }
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    [v8 setFromValue:isa];
  }
  else
  {
    NSString v12 = String._bridgeToObjectiveC()();
    v14.receiver = v3;
    v14.super_class = (Class)type metadata accessor for PHCountingLayer();
    [super actionForKey:v12];
  }
  return v8;
}

id sub_100143448()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PHCountingLayer();
  return [super init];
}

id sub_1001434AC(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value] = 0;
  sub_10012CB98(a1, a1[3]);
  uint64_t v3 = _bridgeAnythingToObjectiveC<A>(_:)();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for PHCountingLayer();
  [super initWithLayer:v3];
  swift_unknownObjectRelease();
  sub_100129FFC((uint64_t)a1);
  return v4;
}

id sub_100143584(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC13InCallService15PHCountingLayer_value] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PHCountingLayer();
  [super initWithCoder:a1];

  return v3;
}

id sub_100143608()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PHCountingLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for PHCountingLayer()
{
  return self;
}

uint64_t sub_100143660()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_100143698(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10014431C();
    sub_10014435C();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v20;
    uint64_t v18 = v21;
    uint64_t v2 = v22;
    int64_t v3 = v23;
    unint64_t v4 = v24;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_39;
    }
    sub_10014431C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v19;
    swift_unknownObjectRelease();
    int64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v19) {
      goto LABEL_39;
    }
LABEL_26:
    self;
    uint64_t v15 = (void *)swift_dynamicCastObjCClass();
    if (!v15)
    {

      goto LABEL_32;
    }
    id v16 = [v15 keyWindow];

    int64_t v3 = v11;
    unint64_t v4 = v9;
    if (v16)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
LABEL_32:
      int64_t v3 = v11;
      unint64_t v4 = v9;
    }
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v11 = v3;
LABEL_25:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  int64_t v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v18 + 8 * v11);
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v14 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v14 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        int64_t v11 = v14;
      }
      else
      {
        int64_t v11 = v3 + 5;
        if (v3 + 5 >= v8) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v18 + 8 * v11);
        if (!v13)
        {
          int64_t v17 = v3 + 6;
          while (v17 < v8)
          {
            unint64_t v13 = *(void *)(v18 + 8 * v17++);
            if (v13)
            {
              int64_t v11 = v17 - 1;
              goto LABEL_24;
            }
          }
LABEL_39:
          sub_100138B60();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v9 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

id sub_1001439C0()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  int64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_1001443D4((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: pip coordinator starting pip");
    sub_100120278();
  }

  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy);

  return [v7 startPictureInPicture];
}

id sub_100143AA0()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  int64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_1001443D4((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: pip coordinator stopping pip");
    sub_100120278();
  }

  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy);

  return [v7 stopPictureInPictureAndRestoreUserInterface:1];
}

void sub_100143B84()
{
}

id sub_100143BC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedEmergencyPIPCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedEmergencyPIPCoordinator()
{
  return self;
}

void sub_100143C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong transitionToRTTState:2];
      swift_unknownObjectRelease();
    }
  }
}

id sub_100143D58()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_sourceView) window];
  if (v1) {
    return v1;
  }
  id v3 = [self sharedApplication];
  id v4 = [v3 connectedScenes];

  sub_10014431C();
  sub_10014435C();
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100143698(v5);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    sub_100137BC8(0, (v7 & 0xC000000000000001) == 0, v7);
    if ((v7 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v7 + 32);
    }
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10011EC48(v10, (uint64_t)qword_10032CBE8);
    id v1 = v9;
    int64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      int64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v13 = 138412290;
      id v15 = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v1;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "EnhancedEmergency: Source view is yet attached to a window, returning the first window of the application: %@", v13, 0xCu);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();

      return v15;
    }
    else
    {
    }
    return v1;
  }
  swift_bridgeObjectRelease();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10011EC48(v17, (uint64_t)qword_10032CBE8);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_1001443F4((void *)&_mh_execute_header, v20, v21, "EnhancedEmergency: There are no windows associated with the application, returning an empty window.");
    sub_100120278();
  }

  return [objc_allocWithZone((Class)UIWindow) init];
}

double sub_100144128()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_sourceView);
  [v1 frame];
  if (CGRectIsEmpty(v12) || (objc_super v2 = (UIView *)[v1 superview]) == 0)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10011EC48(v5, (uint64_t)qword_10032CBE8);
    unint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      *(_WORD *)sub_100138CE8() = 0;
      sub_1001443F4((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: The source view does not yet have a frame or superview set, returning the main screen bounds for picture-in-picture");
      sub_100120278();
    }

    id v3 = (UIView *)[self mainScreen];
    [(UIView *)v3 bounds];
  }
  else
  {
    id v3 = v2;
    [v1 frame];
    unint64_t v4 = (unint64_t)UIAccessibilityConvertFrameToScreenCoordinates(v13, v3);
  }
  double v10 = *(double *)&v4;

  return v10;
}

unint64_t sub_10014431C()
{
  unint64_t result = qword_100321CD0;
  if (!qword_100321CD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100321CD0);
  }
  return result;
}

unint64_t sub_10014435C()
{
  unint64_t result = qword_100321CD8;
  if (!qword_100321CD8)
  {
    sub_10014431C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321CD8);
  }
  return result;
}

uint64_t sub_1001443AC(uint64_t a1)
{
  return a1;
}

void sub_1001443D4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1001443F4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void *sub_100144448()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window);
  id v2 = v1;
  return v1;
}

void sub_1001444D4(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window);
  *(void *)(v1 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window) = a1;
}

void sub_1001444E8(uint64_t a1)
{
  uint64_t v63 = sub_10011EB3C(&qword_100321E00);
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t v4 = __chkstk_darwin(v63, v3);
  unint64_t v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v4, v7);
  double v10 = (char *)v61 - v9;
  __chkstk_darwin(v8, v11);
  CGRect v13 = (char *)v61 - v12;
  self;
  if (swift_dynamicCastObjCClass())
  {
    int64_t v14 = self;
    id v15 = [v14 sharedApplication];
    id v16 = [v15 delegate];

    if (v16)
    {
      self;
      uint64_t v17 = (void *)swift_dynamicCastObjCClass();
      if (v17)
      {
        v61[1] = v16;
        id v18 = [v17 sceneManager];
        [v18 registerGenericScene:a1 ofType:3];

        os_log_type_t v19 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window);
        if (v19)
        {
          id v20 = v19;
          id v21 = [v14 sharedApplication];
          id v22 = [v21 delegate];

          if (v22)
          {
            self;
            int64_t v23 = (void *)swift_dynamicCastObjCClass();
            if (v23)
            {
              unint64_t v24 = v23;
              if (![v23 shouldActivateSOS])
              {
                id v50 = [v24 swiftui_rootViewForSimplifiedApplicationProvider];
                _bridgeAnyObjectToAny(_:)();
                swift_unknownObjectRelease();
                if (swift_dynamicCast())
                {
                  long long v51 = v64;
                  v61[0] = *((void *)&v64 + 1);
                  uint64_t v52 = type metadata accessor for MainActor();
                  __chkstk_darwin(v52, v53);
                  *(_OWORD *)&v61[-2] = v51;
                  sub_1001D9C10((uint64_t)sub_100141B2C, (uint64_t)&v61[-4], (uint64_t)"InCallService/ICSApplicationDelegate+Swift.swift", 48, 2);
                  long long v72 = v69;
                  sub_100145240((uint64_t)&v72 + 8, (uint64_t)v73, &qword_100321E08);
                  uint64_t v54 = (void *)v72;
                  long long v70 = v68;
                  sub_100145240((uint64_t)&v70 + 8, (uint64_t)v71, (uint64_t *)&unk_100321E10);
                  long long v64 = v67;
                  long long v65 = v68;
                  long long v66 = v69;
                  sub_100141D2C();
                  View.clarityUIIdiom()();
                  swift_release();
                  swift_release();
                  sub_10013B894((uint64_t)v71);

                  sub_10013B894((uint64_t)v73);
                  uint64_t v55 = v62;
                  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
                  uint64_t v57 = v63;
                  v56(v10, v13, v63);
                  id v58 = objc_allocWithZone((Class)sub_10011EB3C((uint64_t *)&unk_100321E20));
                  v56(v6, v10, v57);
                  uint64_t v59 = (void *)UIHostingController.init(rootView:)();
                  uint64_t v60 = *(void (**)(char *, uint64_t))(v55 + 8);
                  v60(v10, v57);
                  [v20 setRootViewController:v59];

                  swift_release();
                  v60(v13, v57);
                }
                goto LABEL_24;
              }
              id v25 = [objc_allocWithZone((Class)PHInCallRootViewController) initWithCallDisplayStyleManager:0];
              if (!v25)
              {
LABEL_24:
                [v20 makeKeyAndVisible];

                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                return;
              }
              id v26 = v25;
              [v26 forceUpdateCallControllerForSOS];
              id v27 = [objc_allocWithZone((Class)UIViewController) init];
              id v28 = [v27 view];
              if (v28)
              {
                uint64_t v29 = v28;
                id v30 = [self blackColor];
                [v29 setBackgroundColor:v30];

                id v31 = [v27 view];
                if (v31)
                {
                  uint64_t v32 = v31;
                  id v33 = [v26 view];
                  if (v33)
                  {
                    uint64_t v34 = v33;
                    [v32 addSubview:v33];

                    id v35 = [v26 view];
                    if (v35)
                    {
                      id v36 = v35;
                      id v37 = [v27 view];
                      if (v37)
                      {
                        id v38 = v37;
                        [v37 bounds];
                        double v40 = v39;
                        double v42 = v41;
                        double v44 = v43;
                        double v46 = v45;

                        [v36 setFrame:v40, v42, v44, v46];
                        id v47 = [v26 view];
                        if (v47)
                        {
                          uint64_t v48 = v47;
                          [v47 setAutoresizingMask:18];

                          [v27 addChildViewController:v26];
                          id v49 = v27;
                          [v26 didMoveToParentViewController:v49];
                          [v20 setRootViewController:v49];

                          goto LABEL_24;
                        }
LABEL_31:
                        __break(1u);
                        return;
                      }
LABEL_30:
                      __break(1u);
                      goto LABEL_31;
                    }
LABEL_29:
                    __break(1u);
                    goto LABEL_30;
                  }
LABEL_28:
                  __break(1u);
                  goto LABEL_29;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
              goto LABEL_28;
            }
            swift_unknownObjectRelease();
          }
        }
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100144C08(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_100144E4C(a1, v4);
}

id sub_100144CCC()
{
  uint64_t v1 = OBJC_IVAR____TtC13InCallService22ClarityUISceneDelegate_window;
  type metadata accessor for SecureWindow();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for ClarityUISceneDelegate();
  return [super init];
}

id sub_100144D74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClarityUISceneDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for ClarityUISceneDelegate()
{
  return self;
}

uint64_t sub_100144DE0()
{
  return swift_initClassMetadata2();
}

BOOL sub_100144E24()
{
  return AudioCallBackgroundGradientViewController._canShowWhileLocked()();
}

uint64_t sub_100144E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_100321D70);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v6, a1, v4);
  uint64_t v7 = UIHostingController.init(rootView:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v7;
}

void *sub_100144F70(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_100144FB4(a1, a2);
}

void *sub_100144FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_100321D70);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1, a2);
  (*(void (**)(char *))(v5 + 16))((char *)&v11 - v6);
  uint64_t v7 = (void *)UIHostingController.init(coder:rootView:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v9 = v7;
  v8(a2, v4);
  if (v7) {

  }
  return v7;
}

id sub_1001450EC(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureHostingController();
  [super initWithCoder:a1];

  return v3;
}

id sub_100145184(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001450EC(a3);
}

id sub_1001451AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureHostingController();
  return [super dealloc];
}

uint64_t type metadata accessor for SecureHostingController()
{
  return sub_1001452A4();
}

uint64_t sub_100145240(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10011EB3C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001452A4()
{
  return swift_getGenericMetadata();
}

id AmbientAvatarView.contact.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  swift_beginAccess();
  objc_super v2 = *v1;

  return v2;
}

void AmbientAvatarView.contact.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;
  sub_10014542C(v4);
}

void sub_10014542C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (id *)(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  swift_beginAccess();
  id v5 = [*v4 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  id v9 = [a1 identifier];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      id v15 = *(id *)(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView);
      dispatch thunk of _UIHostingView.rootView.getter();

      id v16 = *v4;
      sub_10011EB3C(&qword_100321ED8);
      State.wrappedValue.setter();

      swift_release();
      sub_100145DE0(v28[2], v29);
      swift_release();
      return;
    }
  }
  id v17 = *v4;
  NSString v18 = String._bridgeToObjectiveC()();
  unsigned int v19 = [v17 isKeyAvailable:v18];

  if (v19)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    unsigned int v21 = [a1 isKeyAvailable:v20];

    if (v21)
    {
      id v22 = [a1 wallpaper];

      BOOL v23 = v22 == 0;
      id v24 = [*v4 wallpaper];

      if (((v23 ^ (v24 != 0)) & 1) == 0)
      {
        [*(id *)(v2 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView) removeFromSuperview];
        id v25 = *v4;
        sub_1001456DC((uint64_t)v28);
        id v26 = objc_allocWithZone((Class)sub_10011EB3C(&qword_100321E98));
        uint64_t v27 = _UIHostingView.init(rootView:)();
        sub_100145864(v27);
        sub_1001459C0();
      }
    }
  }
}

uint64_t sub_1001456DC@<X0>(uint64_t a1@<X8>)
{
  sub_100123340(0, &qword_1003218B8);
  State.init(wrappedValue:)();
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

void (*AmbientAvatarView.contact.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void v3[4] = v1;
  uint64_t v4 = (void **)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact);
  swift_beginAccess();
  uint64_t v5 = *v4;
  v3[3] = *v4;
  id v6 = v5;
  return sub_100145800;
}

void sub_100145800(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (id *)((char *)*a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    AmbientAvatarView.contact.setter(v3);
  }
  else
  {
    AmbientAvatarView.contact.setter(v3);
  }

  free(v2);
}

void sub_100145864(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView);
  *(void *)(v1 + OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView) = a1;
}

id AmbientAvatarView.__allocating_init(contact:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AmbientAvatarView.init(contact:)(a1);
}

id AmbientAvatarView.init(contact:)(void *a1)
{
  id v3 = v1;
  id v4 = a1;
  sub_1001456DC((uint64_t)v10);
  id v5 = objc_allocWithZone((Class)sub_10011EB3C(&qword_100321E98));
  *(void *)&v3[OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView] = _UIHostingView.init(rootView:)();
  *(void *)&v3[OBJC_IVAR____TtC13InCallService17AmbientAvatarView_contact] = v4;
  id v6 = v4;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for AmbientAvatarView();
  id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001459C0();

  return v7;
}

uint64_t type metadata accessor for AmbientAvatarView()
{
  return self;
}

void sub_1001459C0()
{
  uint64_t v2 = v0;
  uint64_t v3 = OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView;
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC13InCallService17AmbientAvatarView_avatarView]];
  [*(id *)&v0[v3] setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100286FD0;
  id v5 = [v2 leadingAnchor];
  id v6 = [(id)sub_1001497E0() leadingAnchor];
  id v7 = sub_100149774();

  *(void *)(v4 + 32) = v7;
  id v8 = [v2 topAnchor];
  id v9 = [(id)sub_1001497E0() topAnchor];
  id v10 = sub_100149774();

  *(void *)(v4 + 40) = v10;
  id v11 = [v2 trailingAnchor];
  id v12 = [(id)sub_1001497E0() trailingAnchor];
  id v13 = sub_100149774();

  *(void *)(v4 + 48) = v13;
  id v14 = [v2 bottomAnchor];
  id v15 = [(id)sub_1001497E0() bottomAnchor];
  id v16 = sub_100149774();

  *(void *)(v4 + 56) = v16;
  specialized Array._endMutation()();
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 addConstraints:isa];
}

void sub_100145BF4()
{
}

id AmbientAvatarView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithFrame:a1, a2, a3, a4];
}

void AmbientAvatarView.init(frame:)()
{
}

id AmbientAvatarView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AmbientAvatarView();
  [super dealloc];
}

id sub_100145D84(id result, char a2)
{
  if ((a2 & 0x80) == 0) {
    return result;
  }
  return result;
}

uint64_t destroy for AmbientAvatar(uint64_t a1)
{
  swift_release();
  sub_100145DE0(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));

  return swift_release();
}

void sub_100145DE0(id a1, char a2)
{
  if ((a2 & 0x80) == 0) {
}
  }

uint64_t initializeWithCopy for AmbientAvatar(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  id v6 = *(void **)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  id v8 = v4;
  swift_retain();
  sub_100145D84(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AmbientAvatar(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  char v7 = *(void **)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  sub_100145D84(v7, v8);
  id v9 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v8;
  sub_100145DE0(v9, v10);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AmbientAvatar(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_100145DE0(v5, v6);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AmbientAvatar()
{
  return &type metadata for AmbientAvatar;
}

uint64_t sub_100145F78()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100145F94(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6)
  {
    if (a3 >> 6 != 1)
    {
      Hasher._combine(_:)((a2 | a3 ^ 0x80) != 0);
      return;
    }
    Hasher._combine(_:)(3uLL);
    id v5 = (id)a2;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    id v6 = (id)a2;
    NSObject.hash(into:)();
    Hasher._combine(_:)(a3 & 1);
  }

  sub_100145DE0((id)a2, a3);
}

uint64_t sub_100146078(unint64_t a1, unsigned __int8 a2, void *a3, unsigned __int8 a4)
{
  if (!(a2 >> 6))
  {
    if (a4 < 0x40u)
    {
      sub_100123340(0, &qword_100321250);
      sub_100145D84((id)a1, a2);
      sub_100145D84(a3, a4);
      char v10 = static NSObject.== infix(_:_:)();
      sub_100145DE0(a3, a4);
      sub_100145DE0((id)a1, a2);
      char v11 = ((a2 & 1) == 0) ^ a4;
      if ((v10 & 1) == 0) {
        char v11 = 0;
      }
      return v11 & 1;
    }
    goto LABEL_20;
  }
  if (a2 >> 6 == 1)
  {
    if ((a4 & 0xC0) == 0x40)
    {
      sub_100123340(0, &qword_100321250);
      sub_100145D84((id)a1, a2);
      sub_100145D84(a3, a4);
      char v8 = static NSObject.== infix(_:_:)();
      sub_100145DE0(a3, a4);
      sub_100145DE0((id)a1, a2);
      return v8 & 1;
    }
    goto LABEL_20;
  }
  int v12 = a4 & 0xC0;
  if (a1 | a2 ^ 0x80)
  {
    if (v12 != 128 || a3 != (void *)1) {
      goto LABEL_20;
    }
  }
  else if (v12 != 128 || a3)
  {
    goto LABEL_20;
  }
  if (a4 != 128)
  {
LABEL_20:
    char v11 = 0;
    return v11 & 1;
  }
  char v11 = 1;
  return v11 & 1;
}

Swift::Int sub_100146200(unint64_t a1, unsigned __int8 a2)
{
  Hasher.init(_seed:)();
  if (a2 >> 6)
  {
    if (a2 >> 6 != 1)
    {
      Hasher._combine(_:)((a1 | a2 ^ 0x80) != 0);
      return Hasher._finalize()();
    }
    Hasher._combine(_:)(3uLL);
    id v4 = (id)a1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    id v5 = (id)a1;
    NSObject.hash(into:)();
    Hasher._combine(_:)(a2 & 1);
  }
  sub_100145DE0((id)a1, a2);
  return Hasher._finalize()();
}

Swift::Int sub_1001462D8()
{
  return sub_100146200(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_1001462E4(uint64_t a1)
{
  sub_100145F94(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_1001462F0()
{
  unint64_t v1 = *(void *)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
    {
      Hasher._combine(_:)((v1 | v2 ^ 0x80) != 0);
      return Hasher._finalize()();
    }
    Hasher._combine(_:)(3uLL);
    id v3 = (id)v1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(2uLL);
    id v4 = (id)v1;
    NSObject.hash(into:)();
    Hasher._combine(_:)(v2 & 1);
  }
  sub_100145DE0((id)v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1001463C0(uint64_t a1, uint64_t a2)
{
  return sub_100146078(*(void *)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

void sub_1001463D8(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10011EB3C(&qword_100321ED0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v10);
  int v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100146700(v1, (uint64_t)&v36);
  uint64_t v33 = *((void *)&v36 + 1);
  uint64_t v34 = (void *)v36;
  uint64_t v32 = v37;
  int v35 = v39;
  __int16 v13 = v38;
  long long v42 = *v1;
  long long v36 = *v1;
  sub_10011EB3C(&qword_100321ED8);
  State.wrappedValue.getter();
  id v14 = v41[0];
  id v15 = [v41[0] identifier];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  char v29 = v12;
  static TaskPriority.userInitiated.getter();
  id v30 = (id)v42;
  sub_100145240((uint64_t)&v42 + 8, (uint64_t)v43, &qword_100321EE8);
  long long v36 = v2[1];
  id v37 = (void *)*((void *)v2 + 4);
  sub_100147D40((uint64_t *)&v36, (uint64_t)v41);
  sub_100145240((uint64_t)&v37, (uint64_t)v40, &qword_100321EF0);
  uint64_t v19 = swift_allocObject();
  long long v20 = v2[1];
  *(_OWORD *)(v19 + 16) = *v2;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = *((void *)v2 + 4);
  uint64_t v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v8[*(int *)(v5 + 44)], v12, v31);
  id v22 = (uint64_t *)&v8[*(int *)(v5 + 48)];
  *id v22 = v16;
  v22[1] = v18;
  *(void *)char v8 = &unk_100321EF8;
  *((void *)v8 + 1) = v19;
  uint64_t v23 = sub_10011EB3C(&qword_100321F00);
  sub_100147F28((uint64_t)v8, a1 + *(int *)(v23 + 36));
  uint64_t v25 = v33;
  id v24 = v34;
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v25;
  id v26 = v32;
  *(void *)(a1 + 16) = v32;
  *(_WORD *)(a1 + 24) = v13;
  LOBYTE(v5) = v35;
  *(unsigned char *)(a1 + 26) = v35;
  id v27 = v30;
  sub_10013B674((uint64_t)v43);
  sub_100147F90((uint64_t)v41);
  sub_10013B674((uint64_t)v40);
  swift_bridgeObjectRetain();
  sub_100147FC0(v24, v25, v26, v13, v5);
  sub_100148090((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v21);
  swift_bridgeObjectRelease();
  sub_1001480F0(v24, v25, v26, v13, v5);
}

void sub_100146700(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  char v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v38 = a1[1];
  uint64_t v39 = *((void *)a1 + 4);
  sub_10011EB3C(&qword_100321F10);
  State.wrappedValue.getter();
  uint64_t v9 = *(void **)v35;
  char v10 = v35[8];
  int v11 = v35[8] >> 6;
  if (v11)
  {
    if (v11 == 1)
    {
      int v12 = self;
      id v13 = v9;
      id v14 = [v12 clearColor];
      *(_OWORD *)int v35 = (unint64_t)v9;
      *(void *)&v35[16] = v14;
      __int16 v36 = 0;
      char v37 = 1;
      id v15 = v14;
      sub_10011EB3C(&qword_100321F18);
      sub_100148A8C();
      sub_100148C38();
LABEL_21:
      _ConditionalContent<>.init(storage:)();
      sub_100145DE0(v9, v10);
LABEL_26:

      goto LABEL_27;
    }
    if (*(void *)v35 | v35[8] ^ 0x80)
    {
      long long v38 = *a1;
      sub_10011EB3C(&qword_100321ED8);
      State.wrappedValue.getter();
      uint64_t v28 = *(void **)v35;
      v35[8] = 1;
      sub_100148B44();
      id v15 = v28;
      _ConditionalContent<>.init(storage:)();
      *(void *)int v35 = v38;
      *(void *)&v35[8] = BYTE8(v38);
      *(void *)&v35[16] = 0;
      __int16 v36 = 0;
      sub_10011EB3C(&qword_100321F30);
      sub_10011EB3C(&qword_100321F48);
      sub_100148AC8();
      sub_100148B90();
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v40)) {
        __int16 v29 = 256;
      }
      else {
        __int16 v29 = 0;
      }
      *(_OWORD *)int v35 = v38;
      *(void *)&v35[16] = v39;
      __int16 v36 = v29 | v40;
      char v37 = 0;
      sub_10011EB3C(&qword_100321F18);
      sub_100148A8C();
      sub_100148C38();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_26;
    }
    *(void *)int v35 = static Color.clear.getter();
    v35[8] = 0;
    sub_100148B44();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    *(void *)int v35 = v38;
    *(void *)&v35[8] = BYTE8(v38);
    *(void *)&v35[16] = 0;
    __int16 v36 = 0;
    sub_10011EB3C(&qword_100321F30);
    sub_10011EB3C(&qword_100321F48);
    sub_100148AC8();
    sub_100148B90();
    _ConditionalContent<>.init(storage:)();
    if (HIBYTE(v40)) {
      __int16 v23 = 256;
    }
    else {
      __int16 v23 = 0;
    }
    *(_OWORD *)int v35 = v38;
    *(void *)&v35[16] = v39;
    __int16 v36 = v23 | v40;
    char v37 = 0;
    sub_10011EB3C(&qword_100321F18);
    sub_100148A8C();
    sub_100148C38();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    if (v35[8])
    {
      id v24 = sub_100146F34();
      id v25 = [v24 backgroundColor];

      if (!v25)
      {
        id v26 = [self blackColor];
        id v25 = [v26 colorWithAlphaComponent:0.1];
      }
      *(void *)int v35 = v9;
      *(void *)&v35[8] = 1;
      *(void *)&v35[16] = v25;
      LOBYTE(v36) = 0;
      sub_100145D84(v9, v10);
      id v15 = v25;
      sub_10011EB3C(&qword_100321F60);
      sub_100148C38();
      sub_100149494((uint64_t)&unk_100321F58);
      _ConditionalContent<>.init(storage:)();
      *(_OWORD *)int v35 = v38;
      *(void *)&v35[16] = v39;
      LOBYTE(v36) = v40;
      HIBYTE(v36) = 1;
      sub_10011EB3C(&qword_100321F30);
      sub_10011EB3C(&qword_100321F48);
      sub_100148AC8();
      sub_100148B90();
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v40)) {
        __int16 v27 = 256;
      }
      else {
        __int16 v27 = 0;
      }
      *(_OWORD *)int v35 = v38;
      *(void *)&v35[16] = v39;
      __int16 v36 = v27 | v40;
      char v37 = 0;
      sub_10011EB3C(&qword_100321F18);
      sub_100148A8C();
      goto LABEL_21;
    }
    id v16 = *(id *)v35;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v17 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v34[1] = v17;
    *(void *)int v35 = v17;
    *(_OWORD *)&v35[8] = xmmword_100286FE0;
    LOBYTE(v36) = 1;
    swift_retain();
    sub_10011EB3C(&qword_100321F60);
    sub_100148C38();
    sub_100149494((uint64_t)&unk_100321F58);
    _ConditionalContent<>.init(storage:)();
    *(_OWORD *)int v35 = v38;
    *(void *)&v35[16] = v39;
    LOBYTE(v36) = v40;
    HIBYTE(v36) = 1;
    sub_10011EB3C(&qword_100321F30);
    sub_10011EB3C(&qword_100321F48);
    sub_100148AC8();
    sub_100148B90();
    _ConditionalContent<>.init(storage:)();
    long long v18 = v38;
    uint64_t v19 = v39;
    char v20 = HIBYTE(v40);
    char v21 = v40;
    if (HIBYTE(v40)) {
      __int16 v22 = 256;
    }
    else {
      __int16 v22 = 0;
    }
    *(_OWORD *)int v35 = v38;
    *(void *)&v35[16] = v39;
    __int16 v36 = v22 | v40;
    char v37 = 0;
    sub_100148168(v38, *((uint64_t *)&v38 + 1), v39, v40, SHIBYTE(v40), (uint64_t (*)(uint64_t, uint64_t))sub_100148038, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_100148044);
    sub_10011EB3C(&qword_100321F18);
    sub_100148A8C();
    _ConditionalContent<>.init(storage:)();
    sub_100145DE0(v9, v10);
    sub_100148168(v18, *((uint64_t *)&v18 + 1), v19, v21, v20, (uint64_t (*)(uint64_t, uint64_t))sub_100148184, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_100148190);
  }
  swift_release();
LABEL_27:
  uint64_t v30 = *((void *)&v38 + 1);
  uint64_t v31 = v39;
  __int16 v32 = v40;
  char v33 = v41;
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = v30;
  *(void *)(a2 + 16) = v31;
  *(_WORD *)(a2 + 24) = v32;
  *(unsigned char *)(a2 + 26) = v33;
}

id sub_100146F34()
{
  long long v5 = *v0;
  sub_10011EB3C(&qword_100321ED8);
  State.wrappedValue.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned int v2 = [v7 isKeyAvailable:v1, v5];

  if (!v2) {
    return 0;
  }
  long long v6 = *v0;
  State.wrappedValue.getter();
  id v3 = [v7 wallpaper:v6];

  return v3;
}

uint64_t sub_100147020(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = type metadata accessor for Date();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[13] = v4;
  v1[14] = v3;
  return _swift_task_switch(sub_100147124, v4, v3);
}

uint64_t sub_100147124()
{
  sub_100120364();
  static Date.now.getter();
  NSString v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *NSString v1 = v0;
  v1[1] = sub_1001471B8;
  return sub_100147490();
}

uint64_t sub_1001471B8()
{
  sub_100120364();
  sub_10012A1B4();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v7 + 128) = v6;
  *(unsigned char *)(v7 + 49) = v8;
  swift_task_dealloc();
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_1001472B4, v10, v9);
}

uint64_t sub_1001472B4()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  swift_release();
  static Date.now.getter();
  Date.timeIntervalSince(_:)();
  double v5 = v4;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v1, v3);
  if (v5 <= 0.05)
  {
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v15 = *(void *)(v14 + 32);
    long long v16 = *(_OWORD *)(v14 + 16);
    *(void *)(v0 + 40) = *(void *)(v0 + 128);
    char v17 = *(unsigned char *)(v0 + 49);
    uint64_t v18 = *(void *)(v0 + 88);
    uint64_t v19 = *(void *)(v0 + 64);
    *(_OWORD *)(v0 + 16) = v16;
    *(void *)(v0 + 32) = v15;
    *(unsigned char *)(v0 + 48) = v17;
    sub_10011EB3C(&qword_100321F10);
    State.wrappedValue.setter();
    v6(v18, v19);
  }
  else
  {
    char v8 = *(void **)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 64);
    char v12 = *(unsigned char *)(v0 + 49);
    v7.n128_u64[0] = 0x3FE6666666666666;
    sub_100147A34(v7, 0.0);
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v8;
    *(unsigned char *)(v13 + 32) = v12;
    withAnimation<A>(_:_:)();
    swift_release();
    swift_task_dealloc();
    v6(v9, v11);
    sub_100145DE0(v8, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  char v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_100147490()
{
  void v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_100147528, v3, v2);
}

uint64_t sub_100147528()
{
  if (sub_100147AF8())
  {
    if (qword_1003205E8 != -1) {
      swift_once();
    }
    *(_OWORD *)(v0 + 16) = *(_OWORD *)*(void *)(v0 + 40);
    sub_10011EB3C(&qword_100321ED8);
    State.wrappedValue.getter();
    uint64_t v1 = *(void *)(v0 + 32);
    *(void *)(v0 + 72) = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100147684;
    return PosterSnapshotService.takeSnapshot(contact:)(v1);
  }
  else
  {
    swift_release();
    double v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v4(1, 128);
  }
}

uint64_t sub_100147684()
{
  sub_10012A1B4();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  double v4 = (void *)v0[9];
  uint64_t v5 = *v1;
  sub_10012A1CC();
  void *v6 = v5;
  *(void *)(v8 + 88) = v7;
  swift_task_dealloc();

  uint64_t v9 = v0[8];
  uint64_t v10 = v0[7];
  return _swift_task_switch(sub_1001477A0, v10, v9);
}

uint64_t sub_1001477A0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  if (!v1) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void **)(v0 + 88);
  id v3 = sub_100146F34();
  id v4 = [v3 type];

  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_17;
  }
  char v10 = sub_100149790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v10)
  {
LABEL_17:
    [v2 size];
    double v22 = v21;
    __int16 v23 = self;
    id v24 = [v23 mainScreen];
    [v24 bounds];
    CGFloat v26 = v25;
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;

    v47.origin.double x = v26;
    v47.origin.double y = v28;
    v47.size.double width = v30;
    v47.size.double height = v32;
    double Width = CGRectGetWidth(v47);
    id v34 = [v23 mainScreen];
    [v34 bounds];
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;
    CGFloat v42 = v41;

    v48.origin.double x = v36;
    v48.origin.double y = v38;
    v48.size.double width = v40;
    v48.size.double height = v42;
    double Height = CGRectGetHeight(v48);
    if (Height >= Width) {
      double Height = Width;
    }
    uint64_t v19 = v22 == Height;
    uint64_t v20 = *(void *)(v0 + 88);
    goto LABEL_22;
  }
LABEL_8:
  id v11 = sub_100146F34();
  id v12 = [v11 type];

  if (!v12)
  {
LABEL_14:

LABEL_15:
    uint64_t v19 = 128;
    uint64_t v20 = 1;
    goto LABEL_22;
  }
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = sub_100149790();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v18 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v19 = 64;
LABEL_22:
  double v44 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v44(v20, v19);
}

uint64_t sub_100147A34(__n128 a1, double a2)
{
  if (a2 <= -1.0)
  {
    double v2 = INFINITY;
  }
  else if (a2 >= 0.0)
  {
    double v2 = 1.0;
    if (a2 != 0.0)
    {
      double v2 = 1.0 - a2;
      if (a2 > 1.0) {
        double v2 = 0.0;
      }
    }
  }
  else
  {
    double v2 = 1.0 / (a2 + 1.0);
  }
  return static Animation.spring(response:dampingFraction:blendDuration:)(a1, v2, 0.0);
}

uint64_t sub_100147A8C(uint64_t a1, void *a2, char a3)
{
  return State.wrappedValue.setter();
}

uint64_t sub_100147AF8()
{
  id v0 = sub_100146F34();
  id v1 = [v0 type];

  if (!v1) {
    goto LABEL_8;
  }
  double v2 = (void *)CNWallpaperTypeMemoji;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    char v10 = 1;
    goto LABEL_17;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  id v9 = v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
LABEL_8:
    id v11 = sub_100146F34();
    id v1 = [v11 type];

    if (!v1)
    {
      char v10 = 0;
      return v10 & 1;
    }
    double v2 = (void *)CNWallpaperTypeMonogram;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15) {
      char v10 = 1;
    }
    else {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
LABEL_17:
    id v17 = v2;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10 & 1;
  }
  char v10 = 1;
  return v10 & 1;
}

BOOL sub_100147C84(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_100147C94(uint64_t a1, char a2)
{
}

Swift::Int sub_100147CBC(char a1)
{
  return Hasher._finalize()();
}

void sub_100147D04(uint64_t a1@<X8>)
{
}

uint64_t sub_100147D40(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t sub_100147D58()
{
  swift_release();
  sub_100145DE0(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100147DAC()
{
  sub_100120364();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100147E3C;
  return sub_100147020(v0 + 16);
}

uint64_t sub_100147E3C()
{
  sub_100120364();
  uint64_t v1 = *v0;
  sub_10012A1CC();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100147F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C(&qword_100321ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100147F90(uint64_t a1)
{
  return a1;
}

id sub_100147FC0(void *a1, uint64_t a2, void *a3, __int16 a4, char a5)
{
  if ((a5 & 1) == 0) {
    return (id)sub_100148168((uint64_t)a1, a2, (uint64_t)a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(uint64_t, uint64_t))sub_100148038, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_100148044);
  }
  id v5 = a1;

  return a3;
}

id sub_100148038(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

id sub_100148044(void *a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    return (id)swift_retain();
  }
  else
  {
    id v6 = a1;
    return a3;
  }
}

uint64_t sub_100148090(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C(&qword_100321ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1001480F0(void *a1, uint64_t a2, void *a3, __int16 a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    sub_100148168((uint64_t)a1, a2, (uint64_t)a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(uint64_t, uint64_t))sub_100148184, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_100148190);
  }
}

uint64_t sub_100148168(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, void))
{
  if (a5) {
    return a7(a1, a2, a3, a4 & 1);
  }
  else {
    return a6(a1, a2 & 1);
  }
}

void sub_100148184(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

void sub_100148190(void *a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    swift_release();
  }
  else
  {
  }
}

uint64_t sub_1001481DC()
{
  return sub_100147A8C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

BOOL sub_1001481FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100147C84(*a1, *a2);
}

Swift::Int sub_100148208()
{
  return sub_100147CBC(*v0);
}

void sub_100148210(uint64_t a1)
{
  sub_100147C94(a1, *v1);
}

Swift::Int sub_100148218()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10014825C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v9 = a1;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v10 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v12 = v10;
    char v13 = 0;
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    uint64_t v12 = 0;
    char v13 = 1;
    _ConditionalContent<>.init(storage:)();
  }
  char v11 = v15;
  *(void *)a2 = v14;
  *(unsigned char *)(a2 + 8) = v11;
}

id sub_10014842C@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X2>, double (**a4)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  char v6 = a2 & 1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(unsigned char *)(v7 + 24) = v6;
  *(void *)(v7 + 32) = a3;
  *a4 = sub_100149334;
  a4[1] = (double (*)@<D0>(uint64_t@<X8>))v7;
  id v8 = a1;

  return a3;
}

double sub_1001484B8@<D0>(void *a1@<X1>, char a2@<W2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  char v7 = a2 & 1;
  GeometryProxy.size.getter();
  double v9 = v8;
  GeometryProxy.size.getter();
  if (v10 < v9) {
    double v9 = v10;
  }
  id v11 = a3;
  uint64_t v26 = Color.init(uiColor:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v12 = v31;
  char v13 = v32;
  uint64_t v14 = v33;
  char v15 = v34;
  uint64_t v16 = v35;
  uint64_t v24 = v36;
  if (a2) {
    uint64_t v17 = static Alignment.top.getter();
  }
  else {
    uint64_t v17 = static Alignment.center.getter();
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  sub_10014864C(a1, v7, (uint64_t)__src, COERCE__INT64(v9 * 0.5 * 1.41421356));
  sub_100145240((uint64_t)__src, (uint64_t)v27, &qword_100321FA8);
  sub_100145240((uint64_t)v27, (uint64_t)__src, &qword_100321FA8);
  __src[24] = v19;
  __src[25] = v20;
  char v30 = v13;
  char v29 = v15;
  memcpy((void *)(a4 + 80), __src, 0xD0uLL);
  char v21 = v30;
  char v22 = v29;
  *(void *)a4 = v26;
  double result = 2.0;
  *(_OWORD *)(a4 + 8) = xmmword_100286FF0;
  *(void *)(a4 + 24) = 0x3FC3333333333333;
  *(void *)(a4 + 32) = v12;
  *(unsigned char *)(a4 + 40) = v21;
  *(void *)(a4 + 48) = v14;
  *(unsigned char *)(a4 + 56) = v22;
  *(void *)(a4 + 64) = v16;
  *(void *)(a4 + 72) = v24;
  *(_WORD *)(a4 + 288) = 256;
  return result;
}

uint64_t sub_10014864C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, uint64_t a4@<D0>)
{
  if (a2)
  {
    sub_10014825C(a1, (uint64_t)v38);
    uint64_t v18 = v38[0];
    char v19 = v38[1];
    char v20 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    __dst[0] = v18;
    LOBYTE(__dst[1]) = v19;
    __dst[2] = 0;
    LOWORD(__dst[3]) = 257;
    LOBYTE(__dst[4]) = v20;
    __dst[5] = v21;
    __dst[6] = v22;
    __dst[7] = v23;
    __dst[8] = v24;
    LOBYTE(__dst[9]) = 0;
    sub_100149344((uint64_t)__dst);
  }
  else
  {
    sub_10014825C(a1, (uint64_t)v38);
    uint64_t v6 = v38[0];
    char v7 = v38[1];
    uint64_t v8 = static Alignment.center.getter();
    LOBYTE(v38[0]) = v7;
    v37[0] = 1;
    LOBYTE(v28) = 0;
    LOBYTE(v27) = 1;
    sub_100176E40(0, (uint64_t)__src, 0, v27, a4, v28, v8, v9, v6, v7, 0, 1);
    sub_1001494EC(v6, v7);
    LOBYTE(v6) = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    memcpy(__dst, __src, sizeof(__dst));
    char v31 = v6;
    uint64_t v32 = v11;
    uint64_t v33 = v13;
    uint64_t v34 = v15;
    uint64_t v35 = v17;
    char v36 = 0;
    sub_1001494F8((uint64_t)__dst);
  }
  sub_100145240((uint64_t)__dst, (uint64_t)v37, &qword_100321FB0);
  sub_10011EB3C(&qword_100321FB8);
  sub_10011EB3C(&qword_100321FC0);
  sub_100149380((uint64_t)&unk_100321FC8);
  sub_100149380((uint64_t)&unk_100322000);
  _ConditionalContent<>.init(storage:)();
  memcpy(v37, v38, 0xBAuLL);
  FactoryOutcome.rawValue.getter(v37, v25);
  sub_100145240((uint64_t)v37, (uint64_t)v38, &qword_100321FA8);
  return sub_100145240((uint64_t)v38, a3, &qword_100321FA8);
}

id sub_1001488D4@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  return sub_10014842C(*(void **)v1, *(unsigned char *)(v1 + 8), *(void **)(v1 + 16), a1);
}

id sub_1001488E4(uint64_t a1, uint64_t a2)
{
  id v3 = objc_allocWithZone((Class)CNAvatarView);

  return [v3 initWithContact:a2];
}

id sub_10014892C(void *a1)
{
  return [a1 setContact:];
}

id sub_100148938(uint64_t a1)
{
  return sub_1001488E4(a1, *v1);
}

id sub_100148940(void *a1)
{
  return sub_10014892C(a1);
}

uint64_t sub_100148958()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_10014899C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001492A8();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100148A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001492A8();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100148A64()
{
}

unint64_t sub_100148A8C()
{
  return sub_1001491C0((uint64_t)&unk_100321F20);
}

unint64_t sub_100148AC8()
{
  unint64_t result = qword_100321F28;
  if (!qword_100321F28)
  {
    sub_1001221B0(&qword_100321F30);
    sub_100148B44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F28);
  }
  return result;
}

unint64_t sub_100148B44()
{
  unint64_t result = qword_100321F38;
  if (!qword_100321F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F38);
  }
  return result;
}

unint64_t sub_100148B90()
{
  unint64_t result = qword_100321F40;
  if (!qword_100321F40)
  {
    sub_1001221B0(&qword_100321F48);
    sub_100148C38();
    sub_100149494((uint64_t)&unk_100321F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F40);
  }
  return result;
}

unint64_t sub_100148C38()
{
  unint64_t result = qword_100321F50;
  if (!qword_100321F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F50);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CircledImageView(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for CircledImageView(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for CircledImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  char v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

__n128 initializeWithTake for CircledImageView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CircledImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for CircledImageView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircledImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CircledImageView()
{
  return &type metadata for CircledImageView;
}

ValueMetadata *type metadata accessor for ContactAvatarView()
{
  return &type metadata for ContactAvatarView;
}

uint64_t initializeBufferWithCopyOfBuffer for AmbientAvatar.Avatar(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100145D84(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for AmbientAvatar.Avatar(uint64_t a1)
{
}

uint64_t assignWithCopy for AmbientAvatar.Avatar(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100145D84(*(id *)a2, v4);
  id v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100145DE0(v5, v6);
  return a1;
}

uint64_t initializeWithTake for VoicemailManagerMessageChanges(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for AmbientAvatar.Avatar(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100145DE0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmbientAvatar.Avatar(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 9))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AmbientAvatar.Avatar(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_100149008(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100149028(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_100149038(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    char v2 = 0x80;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AmbientAvatar.Avatar()
{
  return &type metadata for AmbientAvatar.Avatar;
}

unint64_t sub_100149074()
{
  unint64_t result = qword_100321F68;
  if (!qword_100321F68)
  {
    sub_1001221B0(&qword_100321F00);
    sub_100149114();
    sub_1001496DC((uint64_t)&unk_100321F90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F68);
  }
  return result;
}

unint64_t sub_100149114()
{
  unint64_t result = qword_100321F70;
  if (!qword_100321F70)
  {
    sub_1001221B0(&qword_100321F78);
    sub_1001491C0((uint64_t)&unk_100321F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F70);
  }
  return result;
}

unint64_t sub_1001491C0(uint64_t a1)
{
  unint64_t result = sub_1001497D4(a1);
  if (!result)
  {
    sub_1001497B8(0, v5);
    v3();
    v2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10014923C()
{
  unint64_t result = qword_100321F98;
  if (!qword_100321F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321F98);
  }
  return result;
}

uint64_t sub_10014928C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001492A8()
{
  unint64_t result = qword_100321FA0;
  if (!qword_100321FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321FA0);
  }
  return result;
}

uint64_t sub_1001492F4()
{
  return _swift_deallocObject(v0, 40, 7);
}

double sub_100149334@<D0>(uint64_t a1@<X8>)
{
  return sub_1001484B8(*(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_100149344(uint64_t result)
{
  *(unsigned char *)(result + 185) = 1;
  return result;
}

unint64_t sub_100149350()
{
  return sub_100149380((uint64_t)&unk_100321FD0);
}

unint64_t sub_100149380(uint64_t a1)
{
  unint64_t result = sub_1001497D4(a1);
  if (!result)
  {
    sub_1001497B8(0, v4);
    v2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1001493EC()
{
  unint64_t result = qword_100321FE0;
  if (!qword_100321FE0)
  {
    sub_1001221B0(&qword_100321FE8);
    sub_100149494((uint64_t)&unk_100321FF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100321FE0);
  }
  return result;
}

unint64_t sub_100149494(uint64_t a1)
{
  unint64_t result = sub_1001497D4(a1);
  if (!result)
  {
    sub_1001497B8(0, v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1001494EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001494F8(uint64_t result)
{
  *(unsigned char *)(result + 185) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for CircledImageView.ContentMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CircledImageView.ContentMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100149654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10014967C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100149684(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CircledImageView.ContentMode()
{
  return &type metadata for CircledImageView.ContentMode;
}

unint64_t sub_1001496A0()
{
  return sub_1001496DC((uint64_t)&unk_100322008);
}

unint64_t sub_1001496DC(uint64_t a1)
{
  unint64_t result = sub_1001497D4(a1);
  if (!result)
  {
    sub_1001221B0(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100149720()
{
  unint64_t result = qword_100322018;
  if (!qword_100322018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322018);
  }
  return result;
}

id sub_100149774()
{
  unsigned int v4 = *(const char **)(v2 + 520);
  return [v0 v4:v1];
}

uint64_t sub_100149790()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001497B8(uint64_t a1, uint64_t *a2)
{
  return sub_1001221B0(a2);
}

uint64_t sub_1001497D4(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1001497E0()
{
  return *(void *)(v0 + v1);
}

void sub_1001497EC()
{
  qword_10032CCD0 = 0x402E000000000000;
}

void sub_1001497FC()
{
  qword_10032CCD8 = 0;
}

void sub_100149808()
{
  qword_10032CCE0 = 0x4024000000000000;
}

void sub_100149818()
{
  qword_10032CCE8 = 0x4024000000000000;
}

void sub_100149828(char a1)
{
  if (*((unsigned char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls) != (a1 & 1))
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
    uint64_t v3 = v1;
    unsigned int v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412546;
      BOOL v7 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v10 = v3;

      *(_WORD *)(v6 + 12) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: shouldHideControls for %@: %{BOOL}d", (uint8_t *)v6, 0x12u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v8 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
    if (v8)
    {
      id v9 = v8;
      sub_100149A44((uint64_t)v9);
    }
  }
}

id sub_100149A44(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls))
  {
    BOOL v3 = 1;
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v5 = [Strong getRTTState];
      swift_unknownObjectRelease();
      BOOL v3 = v5 == (id)4;
    }
    else
    {
      BOOL v3 = 0;
    }
  }
  id v6 = sub_100149CCC();
  BOOL v7 = v6;
  double v8 = 0.0;
  if (v3) {
    double v9 = 0.0;
  }
  else {
    double v9 = 1.0;
  }
  [v6 setAlpha:v9];

  id v10 = sub_100149CAC();
  [v10 setAlpha:v9];

  id v11 = sub_100149CEC();
  uint64_t v12 = v11;
  double v13 = 0.0;
  if (!v3 && *(unsigned char *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel)) {
    double v13 = 1.0;
  }
  [v11 setAlpha:v13];

  if (!v3)
  {
    if (*(void *)(a1 + direct field offset for SOSUIWebRTCState.cameraFacing)) {
      double v8 = 1.0;
    }
    else {
      double v8 = 0.0;
    }
  }
  [*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton) setAlpha:v8];
  double v14 = 0.0;
  double v15 = 0.0;
  if (!v3)
  {
    double v15 = 1.0;
    if (!*(void *)(a1 + direct field offset for SOSUIWebRTCState.cameraFacing)) {
      double v15 = 0.0;
    }
  }
  [*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton) setAlpha:v15];
  [*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton) setAlpha:v9];
  if (!v3)
  {
    if (*(void *)(a1 + direct field offset for SOSUIWebRTCState.state) == 3) {
      double v14 = 1.0;
    }
    else {
      double v14 = 0.0;
    }
  }
  [*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel) setAlpha:v14];
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView);
  double v17 = 0.0;
  if (!v3 && *(void *)(a1 + direct field offset for SOSUIWebRTCState.state) == 3) {
    double v17 = 1.0;
  }

  return [v16 setAlpha:v17];
}

void sub_100149C58(char a1)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls);
  *(unsigned char *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls) = a1;
  sub_100149828(v2);
}

void sub_100149C70(uint64_t a1)
{
}

void sub_100149C7C(uint64_t a1)
{
}

void sub_100149C88(uint64_t a1)
{
}

void sub_100149C94(uint64_t a1)
{
}

void sub_100149CA0(uint64_t a1)
{
}

id sub_100149CAC()
{
  return sub_100149D0C(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___liveLabel, (uint64_t (*)(void))&type metadata accessor for EELiveLabel);
}

id sub_100149CCC()
{
  return sub_100149D0C(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___callNumberLabel, (uint64_t (*)(void))&type metadata accessor for EECallNumberLabel);
}

id sub_100149CEC()
{
  return sub_100149D0C(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___webRTCQualityLabel, (uint64_t (*)(void))&type metadata accessor for EELiveLabel);
}

id sub_100149D0C(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  unsigned int v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = [objc_allocWithZone((Class)a2(0)) init];
    BOOL v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    unsigned int v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100149D80()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  if (qword_1003205A0 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  double v14 = self;
  id v15 = [v14 clearColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v16 = [v14 systemWhiteColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100123340(0, &qword_100323D60);
  sub_1001B434C();
  UIButton.Configuration.image.setter();
  id v17 = [self configurationWithTextStyle:UIFontTextStyleBody];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  id v18 = [self buttonWithType:1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v13, v9);
  sub_10011EB80((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter();
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v19 = self;
  id v20 = v18;
  id v21 = [v19 mainBundle];
  v28._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x47494C4853414C46;
  v22._object = (void *)0xEA00000000005448;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28);

  sub_1001A748C(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  [v20 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v20;
}

id sub_10014A188()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  if (qword_1003205A8 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  id v14 = [self clearColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v15 = [self buttonWithType:1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v13, v9);
  sub_10011EB80((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter();
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = self;
  id v17 = v15;
  id v18 = [v16 mainBundle];
  v28._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 1297043290;
  v19._object = (void *)0xE400000000000000;
  v20.value._countAndFlagsBits = 0x65536C6C61436E49;
  v20.value._object = (void *)0xED00006563697672;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v28);

  sub_1001A748C(v22._countAndFlagsBits, (uint64_t)v22._object, v17);
  [v17 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v17;
  aBlock[4] = sub_10015A6C8;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014A630;
  aBlock[3] = &unk_1002D26F0;
  Swift::String v24 = _Block_copy(aBlock);
  id v25 = v17;
  swift_release();
  [v25 setAccessibilityValueBlock:v24];
  _Block_release(v24);

  [v25 setAccessibilityTraits:];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v25;
}

id sub_10014A5F0(void *a1)
{
  id result = [a1 titleLabel];
  if (result) {
    return (id)sub_10015A6E8(result, (SEL *)&selRef_text);
  }
  return result;
}

id sub_10014A630(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  uint64_t v4 = v3;
  swift_release();
  if (v4)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }

  return v5;
}

id sub_10014A6B4()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  if (qword_1003205A0 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  id v14 = self;
  id v15 = [v14 clearColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v16 = [v14 systemWhiteColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100123340(0, &qword_100323D60);
  sub_1001B434C();
  UIButton.Configuration.image.setter();
  id v17 = [self configurationWithTextStyle:UIFontTextStyleBody];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  id v18 = [self buttonWithType:1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v13, v9);
  sub_10011EB80((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter();
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v18 setAlpha:0.0];
  Swift::String v19 = self;
  id v20 = v18;
  id v21 = [v19 mainBundle];
  v28._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x4D41435F50494C46;
  v22._object = (void *)0xEB00000000415245;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28);

  sub_1001A748C(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  [v20 setAccessibilityTraits:];
  [v20 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v20;
}

id sub_10014AB20()
{
  return sub_10014B878(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttAudioRouteButton, (uint64_t (*)(void))sub_10014AB40);
}

id sub_10014AB40()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  if (qword_1003205A0 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  id v14 = self;
  id v15 = [v14 clearColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v16 = [v14 systemWhiteColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100123340(0, &qword_100323D60);
  sub_1001B434C();
  UIButton.Configuration.image.setter();
  id v17 = [self configurationWithTextStyle:UIFontTextStyleBody];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  id v18 = [self buttonWithType:1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v13, v9);
  sub_10011EB80((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter();
  v43[0] = v9;
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v19 = self;
  id v20 = v18;
  id v21 = [v19 mainBundle];
  v44._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x4F525F4F49445541;
  v22._object = (void *)0xEB00000000455455;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v44);

  sub_1001A748C(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  [v20 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  id v26 = [objc_allocWithZone((Class)type metadata accessor for ButtonBackgroundViewEffectView()) init];
  [v26 setUserInteractionEnabled:0];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v20 insertSubview:v26 atIndex:0];
  uint64_t v27 = self;
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100286FD0;
  id v29 = [v26 leadingAnchor];
  id v30 = [v20 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v28 + 32) = v31;
  id v32 = [v26 trailingAnchor];
  id v33 = [v20 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v28 + 40) = v34;
  id v35 = [v26 topAnchor];
  id v36 = [v20 topAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v28 + 48) = v37;
  id v38 = [v26 bottomAnchor];
  id v39 = [v20 bottomAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v28 + 56) = v40;
  v43[1] = v28;
  specialized Array._endMutation()();
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  (*(void (**)(char *, void))(v10 + 8))(v13, v43[0]);
  return v20;
}

id sub_10014B1C0()
{
  return sub_10014B878(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttCallControlsButton, (uint64_t (*)(void))sub_10014B1E0);
}

id sub_10014B1E0()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  if (qword_1003205A0 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  id v14 = self;
  id v15 = [v14 clearColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v16 = [v14 systemWhiteColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100123340(0, &qword_100323D60);
  sub_1001B434C();
  UIButton.Configuration.image.setter();
  id v17 = [self configurationWithTextStyle:UIFontTextStyleBody];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  id v18 = [self buttonWithType:1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v13, v9);
  sub_10011EB80((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter();
  v43[0] = v9;
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v19 = self;
  id v20 = v18;
  id v21 = [v19 mainBundle];
  v44._object = (void *)0xE000000000000000;
  v22._object = (void *)0x8000000100235C50;
  v22._countAndFlagsBits = 0xD000000000000012;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v44);

  sub_1001A748C(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  [v20 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  id v26 = [objc_allocWithZone((Class)type metadata accessor for ButtonBackgroundViewEffectView()) init];
  [v26 setUserInteractionEnabled:0];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v20 insertSubview:v26 atIndex:0];
  uint64_t v27 = self;
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100286FD0;
  id v29 = [v26 leadingAnchor];
  id v30 = [v20 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v28 + 32) = v31;
  id v32 = [v26 trailingAnchor];
  id v33 = [v20 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v28 + 40) = v34;
  id v35 = [v26 topAnchor];
  id v36 = [v20 topAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v28 + 48) = v37;
  id v38 = [v26 bottomAnchor];
  id v39 = [v20 bottomAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v28 + 56) = v40;
  v43[1] = v28;
  specialized Array._endMutation()();
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  (*(void (**)(char *, void))(v10 + 8))(v13, v43[0]);
  return v20;
}

id sub_10014B858()
{
  return sub_10014B878(&OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttVideoButton, (uint64_t (*)(void))sub_10014B8D8);
}

id sub_10014B878(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_10014B8D8()
{
  uint64_t v0 = sub_10011EB3C((uint64_t *)&unk_100321350);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  if (qword_1003205A0 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  id v14 = self;
  id v15 = [v14 systemWhiteColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v16 = [v14 systemBlackColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100123340(0, &qword_100323D60);
  sub_1001B434C();
  UIButton.Configuration.image.setter();
  id v17 = [self configurationWithTextStyle:UIFontTextStyleBody];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  id v18 = [self buttonWithType:1];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v13, v9);
  sub_10011EB80((uint64_t)v3, 0, 1, v9);
  UIButton.configuration.setter();
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v19 = self;
  id v20 = v18;
  id v21 = [v19 mainBundle];
  v28._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0x49565F4553554150;
  v22._object = (void *)0xEB000000004F4544;
  v23.value._countAndFlagsBits = 0x65536C6C61436E49;
  v23.value._object = (void *)0xED00006563697672;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28);

  sub_1001A748C(v25._countAndFlagsBits, (uint64_t)v25._object, v20);
  [v20 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v20;
}

id sub_10014BCE8()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self systemFontOfSize:20.0];
  [v0 setFont:v1];

  [v0 setNumberOfLines:0];
  [v0 setTextAlignment:1];
  uint64_t v2 = self;
  id v3 = [v2 dynamicLabelColor];
  [v0 setTextColor:v3];

  id v4 = v0;
  id v5 = [v2 clearColor];
  [v4 setBackgroundColor:v5];

  return v4;
}

id sub_10014BE24()
{
  id v0 = [self effectWithStyle:1];
  id v1 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v0];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [v1 layer];
  [v2 setCornerRadius:10.0];

  id v3 = [v1 layer];
  [v3 setMasksToBounds:1];

  return v1;
}

id sub_10014BF08()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self darkGrayColor];
  [v0 setBackgroundColor:v1];

  return v0;
}

id sub_10014BF90()
{
  sub_100123340(0, &qword_100323D60);
  id v0 = [self configurationWithScale:3];
  id v1 = sub_10014C0D8(0xD00000000000001DLL, 0x8000000100235AF0, v0);
  id v2 = [objc_allocWithZone((Class)UIImageView) initWithImage:v1];

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = self;
  id v4 = v2;
  id v5 = [v3 darkGrayColor];
  [v4 setBackgroundColor:v5];

  id v6 = [v3 whiteColor];
  [v4 setTintColor:v6];

  return v4;
}

id sub_10014C0D8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() systemImageNamed:v4 withConfiguration:a3];

  return v5;
}

void sub_10014C148()
{
  sub_1001233C4();
  id v1 = v0;
  uint64_t v84 = v2;
  uint64_t v82 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100122300();
  uint64_t v4 = v3;
  __chkstk_darwin(v5, v6);
  id v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9, v10);
  sub_10015BA2C();
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = sub_10015B684(v11);
  __chkstk_darwin(v12, v13);
  sub_10015BA2C();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_currentState] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView] = 0;
  uint64_t v83 = OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_avCaptureDevice] = 0;
  uint64_t v81 = OBJC_IVAR___EmergencyWebRTCViewController_avCaptureQueue;
  sub_100123340(0, (unint64_t *)&qword_100321370);
  id v14 = v0;
  static DispatchQoS.unspecified.getter();
  v88[0] = _swiftEmptyArrayStorage;
  sub_10015B09C((unint64_t *)&qword_100322268, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10011EB3C((uint64_t *)&unk_100324020);
  sub_10015A5D4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v82);
  sub_10015BB78();
  *(void *)&v0[v81] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v15 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  id v16 = objc_allocWithZone((Class)type metadata accessor for ZoomStateMachine());
  *(void *)&v14[v15] = sub_10015B94C();
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor] = 0x3FF0000000000000;
  v14[OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate] = 0xBFF0000000000000;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate] = 0xBFF0000000000000;
  v14[OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel] = 0;
  id v17 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel;
  id v18 = self;
  Swift::String v19 = (objc_class *)[v18 mainBundle];
  v20.super.Class isa = v19;
  sub_10015B598(0xD000000000000016, 0x8000000100235A60, 0x65536C6C61436E49, 0xED00006563697672, v20);

  id v21 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateTitleLabel());
  *(void *)&v17[(void)v14] = EEWaitingStateTitleLabel.init(titleString:)();
  uint64_t v22 = OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel;
  Swift::String_optional v23 = (objc_class *)[v18 mainBundle];
  v24.super.Class isa = v23;
  sub_10015B598(0xD000000000000019, 0x8000000100235A80, 0x65536C6C61436E49, 0xED00006563697672, v24);

  id v25 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateSubtitleLabel());
  *(void *)&v14[v22] = EEWaitingStateSubtitleLabel.init(titleString:)();
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___liveLabel] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___callNumberLabel] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___webRTCQualityLabel] = 0;
  uint64_t v26 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  *(void *)&v14[v26] = sub_100149D80();
  uint64_t v27 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
  Swift::String v28 = (objc_class *)type metadata accessor for ButtonBackgroundViewEffectView();
  id v29 = [objc_allocWithZone(v28) init];
  sub_10015B858(v29);
  sub_10015B8E0();
  *(void *)&v14[v27] = v29;
  id v30 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
  id v31 = [objc_allocWithZone(v28) init];
  sub_10015B858(v31);
  sub_10015B8E0();
  *(void *)&v30[(void)v14] = v31;
  id v32 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
  id v33 = [objc_allocWithZone(v28) init];
  sub_10015B858(v33);
  sub_10015B8E0();
  *(void *)&v32[(void)v14] = v33;
  uint64_t v34 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  *(void *)&v14[v34] = sub_10014A188();
  uint64_t v35 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  *(void *)&v14[v35] = sub_10014A6B4();
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttAudioRouteButton] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttCallControlsButton] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttVideoButton] = 0;
  uint64_t v36 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  *(void *)&v14[v36] = sub_10014BCE8();
  uint64_t v37 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  *(void *)&v14[v37] = sub_10014BE24();
  uint64_t v38 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  *(void *)&v14[v38] = sub_10014BF08();
  uint64_t v39 = OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView;
  *(void *)&v14[v39] = sub_10014BF90();
  uint64_t v40 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView;
  id v41 = sub_10015BAF0(objc_allocWithZone((Class)UIScrollView), "initWithFrame:");
  sub_10015BB10(v41);
  *(void *)&v14[v40] = v41;
  uint64_t v42 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView;
  id v43 = [objc_allocWithZone((Class)UIView) init];
  sub_10015BB10(v43);
  *(void *)&v14[v42] = v43;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints] = _swiftEmptyArrayStorage;
  Swift::String v44 = v84;
  double v45 = *(void **)&v1[v83];
  *(void *)&v1[v83] = v84;
  id v46 = v44;

  CGRect v47 = (objc_class *)type metadata accessor for EmergencyWebRTCViewController();
  v86.receiver = v14;
  v86.super_class = v47;
  uint64_t v83 = (uint64_t)v47;
  [super initWithNibName:0 bundle:0];
  uint64_t v49 = qword_100320540;
  id v50 = v48;
  if (v49 != -1) {
    swift_once();
  }
  uint64_t v51 = type metadata accessor for Logger();
  sub_10011EC48(v51, (uint64_t)qword_10032CBE8);
  id v52 = v46;
  id v53 = v50;
  id v54 = v52;
  uint64_t v55 = v53;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = sub_10015B8C8();
    uint64_t v59 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v58 = 138412546;
    v88[0] = v55;
    uint64_t v60 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v59 = v55;

    *(_WORD *)(v58 + 12) = 2112;
    if (v84)
    {
      v88[0] = v54;
      id v61 = v54;
    }
    else
    {
      v88[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v59[1] = v84;

    _os_log_impl((void *)&_mh_execute_header, v56, v57, "EnhancedEmergency: created EmergencyWebRTCViewController: %@, videoStreamingRequest: %@", (uint8_t *)v58, 0x16u);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
    uint64_t v62 = &unk_100322000;
  }
  else
  {

    uint64_t v56 = v55;
    uint64_t v62 = (void *)&unk_100322000;
  }

  uint64_t v63 = (objc_class *)[objc_allocWithZone((Class)type metadata accessor for PHSOSUIWebViewEventsHelper()) init];
  *(void *)((char *)v63
            + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate
            + 8) = &off_1002D2690;
  swift_unknownObjectWeakAssign();
  long long v64 = *(Class *)((char *)&v55->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper);
  *(Class *)((char *)&v55->isa + OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper) = v63;
  long long v65 = v63;

  id v66 = objc_allocWithZone((Class)type metadata accessor for SOSUIWebRTCView());
  long long v67 = v65;
  uint64_t v68 = SOSUIWebRTCView.init(frame:delegate:)();
  uint64_t v69 = OBJC_IVAR___EmergencyWebRTCViewController_webRTCView;
  long long v70 = *(Class *)((char *)&v55->isa + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView);
  *(Class *)((char *)&v55->isa + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView) = (Class)v68;

  id v71 = objc_allocWithZone((Class)type metadata accessor for EmergencyActionButtonsWaitingView());
  long long v72 = (objc_class *)sub_1001A5D08(0);
  unint64_t v73 = *(Class *)((char *)&v55->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
  *(Class *)((char *)&v55->isa + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView) = v72;

  uint64_t v89 = v83;
  v88[0] = v55;
  objc_allocWithZone((Class)UIPinchGestureRecognizer);
  uint64_t v74 = v55;
  id v75 = sub_10015A3B8(v88, (uint64_t)"pinch:");
  uint64_t v76 = *(Class *)((char *)&v55->isa + v69);
  if (v76) {
    [v76 addGestureRecognizer:v75];
  }
  NSString v77 = String._bridgeToObjectiveC()();
  NSString v78 = String._bridgeToObjectiveC()();
  id v79 = sub_10000FA3C(v77, v78);

  if (v79)
  {
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v87, 0, 32);
  }
  sub_10015A628((uint64_t)v87, (uint64_t)v88);
  if (v89)
  {
    if (swift_dynamicCast()) {
      *((unsigned char *)&v74->isa + v62[21]) = v85;
    }
  }
  else
  {
    sub_10013C174((uint64_t)v88, (uint64_t *)&unk_100321630);
  }
  sub_100123384();
}

void sub_10014CBE0()
{
  sub_1001233C4();
  id v1 = v0;
  v41[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100122300();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8, v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = sub_10015B684(v10);
  __chkstk_darwin(v11, v12);
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR___EmergencyWebRTCViewController_shouldHideControls] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webViewEventsHelper] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_currentState] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_avCaptureDevice] = 0;
  uint64_t v13 = OBJC_IVAR___EmergencyWebRTCViewController_avCaptureQueue;
  sub_100123340(0, (unint64_t *)&qword_100321370);
  static DispatchQoS.unspecified.getter();
  v41[1] = _swiftEmptyArrayStorage;
  sub_10015B09C((unint64_t *)&qword_100322268, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10011EB3C((uint64_t *)&unk_100324020);
  sub_10015A5D4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v3 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v41[0]);
  sub_10015BB78();
  *(void *)&v0[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v14 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  id v15 = objc_allocWithZone((Class)type metadata accessor for ZoomStateMachine());
  *(void *)&v0[v14] = sub_10015B94C();
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBottomAnchor] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonRTTBottomAnchor] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor] = 0x3FF0000000000000;
  v0[OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest] = 0;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate] = 0xBFF0000000000000;
  v0[OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel] = 0;
  id v16 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel;
  id v17 = self;
  id v18 = [v17 mainBundle];
  sub_10015B39C(0xD000000000000016, 0x8000000100235A60);

  id v19 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateTitleLabel());
  *(void *)&v16[(void)v1] = EEWaitingStateTitleLabel.init(titleString:)();
  uint64_t v20 = OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel;
  id v21 = [v17 mainBundle];
  sub_10015B39C(0xD000000000000019, 0x8000000100235A80);

  id v22 = objc_allocWithZone((Class)type metadata accessor for EEWaitingStateSubtitleLabel());
  *(void *)((char *)v1 + v20) = EEWaitingStateSubtitleLabel.init(titleString:)();
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___liveLabel) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___callNumberLabel) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___webRTCQualityLabel) = 0;
  uint64_t v23 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  *(void *)((char *)v1 + v23) = sub_100149D80();
  uint64_t v24 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
  id v25 = (objc_class *)type metadata accessor for ButtonBackgroundViewEffectView();
  id v26 = [objc_allocWithZone(v25) init];
  sub_10015B858(v26);
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)((char *)v1 + v24) = v26;
  uint64_t v27 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
  id v28 = [objc_allocWithZone(v25) init];
  sub_10015B858(v28);
  [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v27[(void)v1] = v28;
  id v29 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
  id v30 = [objc_allocWithZone(v25) init];
  sub_10015B858(v30);
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v29[(void)v1] = v30;
  uint64_t v31 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  *(void *)((char *)v1 + v31) = sub_10014A188();
  uint64_t v32 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  *(void *)((char *)v1 + v32) = sub_10014A6B4();
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttAudioRouteButton) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttCallControlsButton) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController____lazy_storage___rttVideoButton) = 0;
  uint64_t v33 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  *(void *)((char *)v1 + v33) = sub_10014BCE8();
  uint64_t v34 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  *(void *)((char *)v1 + v34) = sub_10014BE24();
  uint64_t v35 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  *(void *)((char *)v1 + v35) = sub_10014BF08();
  uint64_t v36 = OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView;
  *(void *)((char *)v1 + v36) = sub_10014BF90();
  uint64_t v37 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView;
  id v38 = sub_10015BAF0(objc_allocWithZone((Class)UIScrollView), "initWithFrame:");
  sub_10015BB10(v38);
  *(void *)((char *)v1 + v37) = v38;
  uint64_t v39 = OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView;
  id v40 = [objc_allocWithZone((Class)UIView) init];
  sub_10015BB10(v40);
  *(void *)((char *)v1 + v39) = v40;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint) = 0;
  *(void *)((char *)v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints) = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10014D26C(uint64_t a1)
{
}

void sub_10014D278(uint64_t a1)
{
}

void sub_10014D284(uint64_t a1)
{
}

void sub_10014D290(uint64_t a1)
{
}

void sub_10014D29C(uint64_t a1)
{
}

void sub_10014D2A8(uint64_t a1)
{
}

void sub_10014D2B4(uint64_t a1)
{
}

void sub_10014D2C0(uint64_t a1)
{
}

uint64_t sub_10014D2CC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewWaitingStateConstraints) = a1;
  return swift_bridgeObjectRelease();
}

#error "10014D30C: call analysis failed (funcsize=15)"

void sub_10014D368(char a1)
{
  uint64_t v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for EmergencyWebRTCViewController();
  [super viewDidAppear:a1 & 1];
  uint64_t v4 = OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest;
  if (*((unsigned char *)v2 + OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest) == 1)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    uint64_t v6 = (void *)sub_100138D44(v5, (uint64_t)qword_10032CBE8);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v7))
    {
      uint64_t v8 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v8);
      sub_1001443D4((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: proceeding with pending startVideoPreview request");
      sub_100120278();
    }

    *((unsigned char *)v2 + v4) = 0;
    sub_10015312C();
  }
}

id sub_10014D4B0(uint64_t a1)
{
  uint64_t v3 = v1;
  v40.receiver = v3;
  v40.super_class = (Class)type metadata accessor for EmergencyWebRTCViewController();
  [super traitCollectionDidChange:a1];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = [Strong videoStreamingState];
    swift_unknownObjectRelease();
    if (v6 == (id)1)
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      uint64_t v8 = (void *)sub_100138D44(v7, (uint64_t)qword_10032CBE8);
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (sub_100138CCC(v9))
      {
        uint64_t v2 = sub_100138CE8();
        *(_WORD *)uint64_t v2 = 0;
        sub_10012601C((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: requestToReorderWebView from traitCollectionDidChange");
        sub_100120278();
      }

      uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v12)
      {
        [v12 requestToReorderWebView];
        swift_unknownObjectRelease();
      }
    }
  }
  id v13 = [v3 traitCollection];
  id v14 = [v13 preferredContentSizeCategory];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v15) {
    goto LABEL_55;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_56;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v17) {
    goto LABEL_55;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_56;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v19) {
    goto LABEL_55;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_56;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v21) {
    goto LABEL_55;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_56:

    double v33 = 66.0;
    double v34 = 51.0;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v23)
  {
LABEL_55:
    sub_10015B970();
    goto LABEL_56;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_56;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v25)
  {
    sub_10015B970();
    goto LABEL_65;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_65:

    double v33 = 59.4;
    double v34 = 45.9;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v27)
  {
    sub_10015B970();
    goto LABEL_67;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_67:

    double v33 = 54.56;
    double v34 = 42.16;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v29)
  {
    sub_10015B970();
    goto LABEL_69;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_69:

    double v33 = 49.28;
    double v34 = 38.08;
    goto LABEL_57;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == sub_10015B57C() && v13 == v31)
  {
    sub_10015B970();
    goto LABEL_71;
  }
  sub_10015B2C8();
  sub_10015B6CC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_71:

    goto LABEL_72;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_72:
  double v33 = 44.0;
  double v34 = 34.0;
LABEL_57:
  uint64_t v35 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint];
  if (v35) {
    [v35 setConstant:v33];
  }
  uint64_t v36 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint];
  if (v36) {
    [v36 setConstant:v34];
  }
  uint64_t v37 = *(void **)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint];
  if (v37) {
    [v37 setConstant:v33];
  }
  [*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton] layoutIfNeeded];
  [*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton] layoutIfNeeded];
  [*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flashButton] layoutIfNeeded];
  double v38 = v33 * 0.5;
  [*(id *)&v3[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView] _setCornerRadius:v38];
  [*(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView + (void)v3) _setCornerRadius:v38];
  return [*(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView + (void)v3) _setCornerRadius:v34 * 0.5];
}

void sub_10014DA1C()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 frontmostAudioOrVideoCall];

  id v2 = sub_100149CCC();
  if (v1)
  {
    id v3 = [v1 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }
  [v2 setText:v4];

  id v5 = sub_100149CAC();
  id v6 = (objc_class *)[self mainBundle];
  sub_10015BC10();
  sub_10015B5B4();
  v7.super.Class isa = v6;
  uint64_t v12 = sub_10015B598(v8, v9, v10, v11, v7);
  uint64_t v14 = v13;

  sub_1001B6E08(v12, v14, v5);
  id v15 = sub_100149CEC();
  sub_1001B6E08(0x202C412F4E3A5246, 0xEE00412F4E3A5242, v15);
}

void sub_10014DC04(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10015B760();
  uint64_t v24 = v22;
  id v25 = *(void **)&v22[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v25 && (id v26 = *(void **)&v22[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView]) != 0)
  {
    id v27 = v25;
    id v28 = v26;
    [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v27 layer];
    if (qword_1003205B0 != -1) {
      swift_once();
    }
    id v109 = v28;
    [v29 setCornerRadius:*(double *)&qword_10032CCE0];

    id v30 = [v27 layer];
    [v30 setMasksToBounds:1];

    id v31 = sub_10015BBD8();
    if (!v31) {
      goto LABEL_30;
    }
    uint64_t v32 = v31;
    [v31 addSubview:v27];

    uint64_t v33 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
    id v34 = [*(id *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView) layer];
    [v34 setCornerRadius:*(double *)&qword_10032CCE0];

    id v35 = [*(id *)((char *)v24 + v33) layer];
    [v35 setMasksToBounds:1];

    id v36 = sub_10015BBD8();
    if (!v36)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v37 = v36;
    [v36 addSubview:*(void *)((char *)v24 + v33)];

    [v27 setIsAccessibilityElement:1];
    double v38 = self;
    id v39 = v27;
    id v40 = [v38 mainBundle];
    sub_10015BC10();
    uint64_t v41 = sub_10015B39C(0x4449565F4556494CLL, 0xEF444545465F4F45);
    uint64_t v43 = v42;

    sub_1001A748C(v41, v43, v39);
    [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
    swift_unknownObjectWeakAssign();
    id v44 = sub_10015BBD8();
    if (!v44)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    double v45 = v44;
    [v44 addSubview:v28];

    id v46 = sub_10015BBD8();
    if (!v46)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    CGRect v47 = v46;
    uint64_t v48 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
    [v46 addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton)];

    uint64_t v49 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
    [*(id *)((char *)v24 + v48) addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView)];
    [*(id *)((char *)v24 + v48) sendSubviewToBack:*(void *)((char *)v24 + v49)];
    id v50 = sub_10015B870();
    if (!v50)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v51 = v50;
    id v52 = v39;
    uint64_t v53 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
    [v50 addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton)];

    id v54 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
    [*(id *)((char *)v24 + v53) addSubview:*(void *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView + (void)v24)];
    [*(id *)((char *)v24 + v53) sendSubviewToBack:*(void *)&v54[(void)v24]];
    id v55 = sub_10015B870();
    if (!v55)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v56 = v55;
    uint64_t v57 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
    [v55 addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton)];

    uint64_t v58 = (char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
    [*(id *)((char *)v24 + v57) addSubview:*(void *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView + (void)v24)];
    [*(id *)((char *)v24 + v57) sendSubviewToBack:*(void *)&v58[(void)v24]];
    id v59 = sub_10015B870();
    if (!v59)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v60 = v59;
    uint64_t v61 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
    [v59 addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView)];

    id v62 = sub_10015B870();
    if (!v62)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v63 = v62;
    uint64_t v64 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
    [v62 addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel)];

    id v65 = sub_10015B870();
    if (!v65)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    id v66 = v65;
    id v67 = sub_100149CAC();
    sub_10015B81C((uint64_t)v67);

    id v68 = [v24 view];
    if (!v68)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v69 = v68;
    id v70 = sub_100149CCC();
    sub_10015B81C((uint64_t)v70);

    id v71 = [v24 view];
    if (!v71)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    long long v72 = v71;
    id v73 = sub_100149CEC();
    sub_10015B81C((uint64_t)v73);

    id v74 = [v24 view];
    if (!v74)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    id v75 = v74;
    uint64_t v76 = *(void **)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView);
    [v74 addSubview:v76];

    NSString v77 = *(void **)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView);
    [v76 addSubview:v77];
    [v77 addSubview:*(void *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel + (void)v24)];
    [v77 addSubview:*(void *)((char *)v24 + OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel)];
    id v78 = sub_100149CAC();
    sub_10015B7CC(v78);

    id v79 = sub_100149CCC();
    sub_10015B7CC(v79);

    id v80 = sub_100149CEC();
    sub_10015B7CC(v80);

    sub_10015B7CC(*(void **)((char *)v24 + v48));
    sub_10015B7CC(*(void **)((char *)v24 + v57));
    sub_10015B7CC(*(void **)((char *)v24 + v64));
    sub_10015B7CC(*(void **)((char *)v24 + v61));
    sub_10015B9A4(*(void **)((char *)v24 + v48), v81, v82, (uint64_t)"flashButtonTapped");
    sub_10015B9A4(*(void **)((char *)v24 + v53), v83, v84, (uint64_t)"flipCameraButtonTapped");
    sub_10015B9A4(*(void **)((char *)v24 + v57), v85, v86, (uint64_t)"zoomButtonTapped");
    id v87 = [v24 view];
    if (!v87)
    {
LABEL_42:
      __break(1u);
      return;
    }
    int64_t v88 = v87;
    id v89 = [v87 topAnchor];

    id v90 = [v52 topAnchor];
    id v91 = [v89 constraintEqualToAnchor:v90];

    uint64_t v92 = sub_10015BB90();
    sub_10014D26C(v92);
    id v93 = [*(id *)((char *)v24 + v53) topAnchor];
    id v94 = [v52 topAnchor];
    uint64_t v95 = v94;
    if (qword_1003205B8 != -1) {
      id v94 = (id)swift_once();
    }
    id v96 = sub_10015B494((uint64_t)v94, "constraintEqualToAnchor:constant:");

    uint64_t v97 = sub_10015BB90();
    sub_10014D278(v97);
    id v98 = [*(id *)((char *)v24 + v53) trailingAnchor];
    id v99 = [v52 trailingAnchor];
    sub_10015B494((uint64_t)v99, "constraintEqualToAnchor:constant:");

    uint64_t v100 = sub_10015BB90();
    sub_10014D284(v100);
    sub_10014E6AC();

    uint64_t v101 = v109;
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v102 = type metadata accessor for Logger();
    uint64_t v101 = sub_100138D44(v102, (uint64_t)qword_10032CBE8);
    os_log_type_t v103 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v101, v103))
    {
      unint64_t v104 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v104);
      _os_log_impl((void *)&_mh_execute_header, v101, v103, "EnhancedEmergency: Trying to configure webView, but view is nil", v23, 2u);
      sub_100120278();
    }
  }

  id v105 = sub_10015B870();
  if (!v105)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v106 = v105;
  [v105 setBackgroundColor:[self blackColor]];

  sub_10015B69C();
}

void sub_10014E468()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton) widthAnchor];
  id v2 = [v1 constraintEqualToConstant:44.0];

  sub_10014D2C0((uint64_t)v2);
  id v3 = [*(id *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton) widthAnchor];
  id v4 = [v3 constraintEqualToConstant:34.0];

  sub_10014D2B4((uint64_t)v4);
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton), "widthAnchor"));
  id v6 = [v5 constraintEqualToConstant:44.0];

  sub_10014D2A8((uint64_t)v6);
  NSBundle v7 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonWidthConstraint);
  if (v7)
  {
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonWidthConstraint);
    if (v8)
    {
      uint64_t v9 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWidthConstraint);
      if (v9)
      {
        uint64_t v10 = self;
        sub_10011EB3C((uint64_t *)&unk_100321360);
        uint64_t v11 = sub_10015BB60();
        *(_OWORD *)(v11 + 16) = xmmword_100286400;
        *(void *)(v11 + 32) = v7;
        *(void *)(v11 + 40) = v8;
        *(void *)(v11 + 48) = v9;
        specialized Array._endMutation()();
        sub_100123340(0, (unint64_t *)&qword_100324B40);
        id v12 = v7;
        id v13 = v8;
        id v14 = v9;
        id v15 = v12;
        id v16 = v13;
        id v17 = v14;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v10 activateConstraints:isa];
      }
    }
  }
}

void sub_10014E6AC()
{
  id v1 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (!v1 || (id v2 = v0, (v3 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView]) == 0))
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v264 = type metadata accessor for Logger();
    v275 = sub_100138D44(v264, (uint64_t)qword_10032CBE8);
    os_log_type_t v265 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v275, v265))
    {
      v266 = (_WORD *)sub_100138CE8();
      sub_10015B690(v266);
      sub_10015B4E0((void *)&_mh_execute_header, v275, v267, "EnhancedEmergency: Trying to set up constraint for webView, but view is nil");
      sub_100120278();
    }
    goto LABEL_37;
  }
  id v4 = self;
  id v5 = v1;
  id v273 = v3;
  id v6 = [v4 mainScreen];
  [v6 bounds];
  double v8 = v7;
  double v10 = v9;

  if (v10 > v8) {
    double v11 = v10;
  }
  else {
    double v11 = v8;
  }
  if (v8 >= v10) {
    double v12 = v10;
  }
  else {
    double v12 = v8;
  }
  id v13 = self;
  [v13 inComingCallAndInCallControlsBottomPaddingRatio];
  double v15 = v14;
  if (qword_1003205B8 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_10032CCE8;
  [v13 inCallControlButtonSizeRatio];
  double v18 = v17;
  [v13 inCallControlButtonVerticalSpacingRatio];
  double v20 = v19;
  uint64_t v271 = OBJC_IVAR___EmergencyWebRTCViewController_zoomButton;
  id v21 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton] bottomAnchor];
  id v22 = [v2 view];
  if (!v22)
  {
    __break(1u);
    goto LABEL_41;
  }
  id v23 = v22;
  id v24 = [v22 bottomAnchor];

  id v25 = [v21 constraintEqualToAnchor:v24 constant:-(v11 * v15 + v12 * v18 + v12 * v18 + v11 * v20 + 26.0)];
  id v26 = v25;
  sub_100149C88((uint64_t)v25);
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v27 = sub_10015BAC4();
  *(_OWORD *)(v27 + 16) = xmmword_100286FD0;
  id v28 = [v5 heightAnchor];
  id v29 = [v28 constraintEqualToConstant:v11 * 0.39];

  *(void *)(v27 + 32) = v29;
  id v30 = [v5 widthAnchor];
  id v31 = [v30 constraintEqualToConstant:v12 * 0.39];

  *(void *)(v27 + 40) = v31;
  id v32 = [v5 topAnchor];
  id v33 = [v2 view];
  if (!v33)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v34 = v33;
  v269 = v26;
  id v35 = [v33 topAnchor];

  id v36 = [v32 constraintEqualToAnchor:v35 constant:22.0];
  *(void *)(v27 + 48) = v36;
  id v37 = [v5 centerXAnchor];
  id v38 = [v2 view];
  if (!v38)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v39 = v38;
  id v40 = [v38 centerXAnchor];

  id v41 = [v37 constraintEqualToAnchor:v40];
  *(void *)(v27 + 56) = v41;
  specialized Array._endMutation()();
  sub_10014D2CC(v27);
  id v272 = self;
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v272 activateConstraints:isa];

  uint64_t v43 = sub_10015BAC4();
  *(_OWORD *)(v43 + 16) = xmmword_100286FD0;
  uint64_t v44 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  id v45 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView] topAnchor];
  id v46 = v5;
  id v47 = [v5 topAnchor];
  id v48 = [v45 constraintEqualToAnchor:v47];

  *(void *)(v43 + 32) = v48;
  id v49 = [*(id *)&v2[v44] bottomAnchor];
  id v50 = sub_10015B7E4((uint64_t)[v46 bottomAnchor]);

  *(void *)(v43 + 40) = v50;
  id v51 = [*(id *)&v2[v44] leadingAnchor];
  id v52 = sub_10015B7E4((uint64_t)[v46 leadingAnchor]);

  *(void *)(v43 + 48) = v52;
  id v53 = [*(id *)&v2[v44] trailingAnchor];
  id v54 = sub_10015B7E4((uint64_t)[v46 trailingAnchor]);

  *(void *)(v43 + 56) = v54;
  specialized Array._endMutation()();
  Class v55 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v272 activateConstraints:v55];

  sub_10014E468();
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_100287330;
  uint64_t v57 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollView];
  id v58 = [v57 topAnchor];
  id v270 = v46;
  id v59 = [v46 bottomAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59 constant:24.0];

  *(void *)(v56 + 32) = v60;
  id v61 = [v57 leadingAnchor];
  id v62 = [v2 view];
  if (!v62)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v63 = v62;
  double v64 = v16 + v16;
  id v65 = [v62 leadingAnchor];

  id v66 = [v61 constraintEqualToAnchor:v65 constant:v16 + v16];
  *(void *)(v56 + 40) = v66;
  id v67 = [v57 trailingAnchor];
  id v68 = [v2 view];
  if (!v68)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v69 = v68;
  id v70 = [v68 trailingAnchor];

  id v71 = [v67 constraintEqualToAnchor:v70 constant:-v64];
  *(void *)(v56 + 48) = v71;
  long long v72 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_titleLabelScrollViewContentView];
  id v73 = [v72 topAnchor];
  id v74 = [v57 contentLayoutGuide];
  id v75 = [v74 topAnchor];

  id v76 = [v73 constraintEqualToAnchor:v75];
  *(void *)(v56 + 56) = v76;
  id v77 = [v72 leadingAnchor];
  id v78 = sub_10015B930();
  id v79 = [v78 leadingAnchor];

  id v80 = sub_10015B83C();
  *(void *)(v56 + 64) = v80;
  id v81 = [v72 trailingAnchor];
  id v82 = sub_10015B930();
  id v83 = [v82 trailingAnchor];

  id v84 = sub_10015B83C();
  *(void *)(v56 + 72) = v84;
  id v85 = [v72 bottomAnchor];
  id v86 = sub_10015B930();
  id v87 = [v86 bottomAnchor];

  id v88 = sub_10015B83C();
  *(void *)(v56 + 80) = v88;
  id v89 = [v72 widthAnchor];
  v274 = v57;
  id v90 = [v57 frameLayoutGuide];
  id v91 = [v90 widthAnchor];

  id v92 = sub_10015B83C();
  *(void *)(v56 + 88) = v92;
  id v93 = (SEL *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel;
  id v94 = [*(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel + (void)v2) topAnchor];
  id v95 = sub_10015B5F0((uint64_t)[v72 topAnchor]);

  *(void *)(v56 + 96) = v95;
  id v96 = [*(id *)((char *)v93 + (void)v2) leadingAnchor];
  id v97 = sub_10015B5F0((uint64_t)[v72 leadingAnchor]);

  *(void *)(v56 + 104) = v97;
  id v98 = [*(id *)((char *)v93 + (void)v2) trailingAnchor];
  id v99 = sub_10015B5F0((uint64_t)[v72 trailingAnchor]);

  *(void *)(v56 + 112) = v99;
  uint64_t v100 = OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel;
  id v101 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel] topAnchor];
  id v102 = sub_10015B9C0();
  id v103 = [v101 constraintEqualToAnchor:v102 constant:6.0];

  *(void *)(v56 + 120) = v103;
  id v104 = [*(id *)&v2[v100] leadingAnchor];
  id v105 = sub_10015B5F0((uint64_t)[v72 leadingAnchor]);

  *(void *)(v56 + 128) = v105;
  id v106 = [*(id *)&v2[v100] trailingAnchor];
  id v107 = sub_10015B5F0((uint64_t)[v72 trailingAnchor]);

  *(void *)(v56 + 136) = v107;
  id v108 = [*(id *)&v2[v100] v93[257]];
  id v109 = [v72 v93[257]];
  id v110 = sub_10015B610((uint64_t)v109, "constraintEqualToAnchor:");

  *(void *)(v56 + 144) = v110;
  id v111 = [v273 v93[257]];
  id v112 = [v2 view];
  if (!v112)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  unsigned long long v113 = v112;
  id v114 = [v112 safeAreaLayoutGuide];

  id v115 = [v114 v93[257]];
  id v116 = [v111 constraintEqualToAnchor:v115 constant:-16.0];

  *(void *)(v56 + 152) = v116;
  id v117 = [v273 leadingAnchor];
  id v118 = [v2 view];
  if (!v118)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  unint64_t v119 = v118;
  id v120 = [v118 leadingAnchor];

  id v121 = [v117 constraintEqualToAnchor:v120];
  *(void *)(v56 + 160) = v121;
  id v122 = [v273 trailingAnchor];
  id v123 = [v2 view];
  if (!v123)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  unint64_t v124 = v123;
  id v125 = [v123 trailingAnchor];

  id v126 = [v122 constraintEqualToAnchor:v125];
  *(void *)(v56 + 168) = v126;
  id v127 = [v273 topAnchor];
  id v128 = [v274 bottomAnchor];
  id v129 = [v127 constraintEqualToAnchor:v128 constant:12.0];

  *(void *)(v56 + 176) = v129;
  id v130 = sub_100149CAC();
  id v131 = [v130 topAnchor];

  id v132 = [v2 view];
  if (!v132)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v133 = v132;
  id v134 = [v132 topAnchor];

  id v135 = [v131 constraintEqualToAnchor:v134 constant:v11 * v15];
  *(void *)(v56 + 184) = v135;
  id v136 = sub_100149CAC();
  id v137 = [v136 centerXAnchor];

  id v138 = [v2 view];
  if (!v138)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v139 = v138;
  id v140 = [v138 centerXAnchor];

  id v142 = sub_10015B494(v141, "constraintEqualToAnchor:");
  *(void *)(v56 + 192) = v142;
  id v143 = sub_100149CCC();
  id v144 = [v143 topAnchor];

  id v145 = sub_100149CAC();
  id v146 = [v145 bottomAnchor];

  id v148 = sub_10015B610(v147, "constraintEqualToAnchor:");
  *(void *)(v56 + 200) = v148;
  id v149 = sub_100149CCC();
  id v150 = [v149 centerXAnchor];

  id v151 = [v2 view];
  if (!v151)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v152 = v151;
  id v153 = [v151 centerXAnchor];

  id v155 = sub_10015B494(v154, "constraintEqualToAnchor:");
  *(void *)(v56 + 208) = v155;
  id v156 = sub_100149CEC();
  id v157 = [v156 topAnchor];

  id v158 = sub_100149CCC();
  id v159 = [v158 bottomAnchor];

  id v161 = sub_10015B610(v160, "constraintEqualToAnchor:");
  *(void *)(v56 + 216) = v161;
  id v162 = sub_100149CEC();
  id v163 = [v162 centerXAnchor];

  id v164 = [v2 view];
  if (!v164)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v165 = v164;
  id v166 = [v164 centerXAnchor];

  id v168 = sub_10015B494(v167, "constraintEqualToAnchor:");
  *(void *)(v56 + 224) = v168;
  uint64_t v169 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  int v170 = (SEL *)[*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flashButton] centerYAnchor];
  id v171 = sub_100149CAC();
  id v172 = [v171 bottomAnchor];

  id v174 = sub_10015B610(v173, "constraintEqualToAnchor:");
  *(void *)(v56 + 232) = v174;
  id v175 = sub_10015B9DC();
  id v176 = [v2 view];
  if (!v176)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v177 = v176;
  uint64_t v178 = v170;
  uint64_t v179 = (SEL *)[v176 v170[416]];

  id v180 = [v175 constraintEqualToAnchor:v179 constant:v16 + v16];
  *(void *)(v56 + 240) = v180;
  id v181 = [*(id *)&v2[v169] heightAnchor];
  id v182 = [(id)sub_10015BA14() widthAnchor];
  id v183 = sub_10015B288((uint64_t)v182);

  *(void *)(v56 + 248) = v183;
  uint64_t v184 = v169;
  uint64_t v185 = OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView;
  id v186 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView] v178[416]];
  id v187 = [(id)sub_10015BBCC() v178[416]];
  id v188 = sub_10015B288((uint64_t)v187);

  *(void *)(v56 + 256) = v188;
  id v189 = [*(id *)&v2[v185] trailingAnchor];
  id v190 = sub_10015B288((uint64_t)[*(id *)&v2[v184] trailingAnchor]);

  *(void *)(v56 + 264) = v190;
  id v191 = [*(id *)&v2[v185] topAnchor];
  id v192 = sub_10015B288((uint64_t)[*(id *)&v2[v184] topAnchor]);

  *(void *)(v56 + 272) = v192;
  id v193 = [*(id *)&v2[v185] bottomAnchor];
  uint64_t v268 = v184;
  id v194 = sub_10015B288((uint64_t)[*(id *)&v2[v184] bottomAnchor]);

  *(void *)(v56 + 280) = v194;
  uint64_t v195 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  id v196 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton] heightAnchor];
  id v197 = [(id)sub_10015BBCC() widthAnchor];
  id v198 = sub_10015B288((uint64_t)v197);

  *(void *)(v56 + 288) = v198;
  v199 = (SEL *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView;
  id v200 = sub_10015B9DC();
  id v201 = [(id)sub_10015BBCC() v179[416]];
  id v202 = sub_10015B288((uint64_t)v201);

  *(void *)(v56 + 296) = v202;
  id v203 = [*(id *)((char *)v199 + (void)v2) trailingAnchor];
  id v204 = sub_10015B288((uint64_t)[*(id *)&v2[v195] trailingAnchor]);

  *(void *)(v56 + 304) = v204;
  id v205 = [*(id *)((char *)v199 + (void)v2) topAnchor];
  id v206 = sub_10015B288((uint64_t)[*(id *)&v2[v195] topAnchor]);

  *(void *)(v56 + 312) = v206;
  id v207 = sub_10015B9C0();
  id v208 = [(id)sub_10015BBCC() v199[257]];
  id v209 = sub_10015B288((uint64_t)v208);

  *(void *)(v56 + 320) = v209;
  uint64_t v210 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel;
  id v211 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel] centerXAnchor];
  id v212 = sub_10015B288((uint64_t)[v270 centerXAnchor]);

  *(void *)(v56 + 328) = v212;
  id v213 = [*(id *)&v2[v210] centerYAnchor];
  id v214 = sub_10015B288((uint64_t)[v270 centerYAnchor]);

  *(void *)(v56 + 336) = v214;
  uint64_t v215 = OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView;
  id v216 = [*(id *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView] topAnchor];
  id v217 = [(id)sub_10015BA14() topAnchor];
  id v218 = sub_10015B494((uint64_t)v217, "constraintEqualToAnchor:constant:");

  *(void *)(v56 + 344) = v218;
  id v219 = [*(id *)&v2[v215] leadingAnchor];
  id v220 = [(id)sub_10015BA14() leadingAnchor];
  id v221 = sub_10015B494((uint64_t)v220, "constraintEqualToAnchor:constant:");

  *(void *)(v56 + 352) = v221;
  id v222 = [*(id *)&v2[v215] trailingAnchor];
  id v223 = [(id)sub_10015BA14() trailingAnchor];
  id v224 = sub_10015B494((uint64_t)v223, "constraintEqualToAnchor:constant:");

  *(void *)(v56 + 360) = v224;
  id v225 = [*(id *)&v2[v215] bottomAnchor];
  id v226 = [(id)sub_10015BA14() bottomAnchor];
  id v227 = sub_10015B494((uint64_t)v226, "constraintEqualToAnchor:constant:");

  *(void *)(v56 + 368) = v227;
  *(void *)(v56 + 376) = v269;
  v228 = *(void **)&v2[v271];
  v275 = v269;
  id v229 = [v228 centerXAnchor];
  id v230 = [v2 view];
  if (!v230)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    return;
  }
  v231 = v230;
  v232 = (SEL *)[v230 centerXAnchor];

  id v234 = sub_10015B494(v233, "constraintEqualToAnchor:");
  *(void *)(v56 + 384) = v234;
  id v235 = [*(id *)&v2[v271] heightAnchor];
  id v236 = [(id)sub_10015BA20() widthAnchor];
  id v237 = sub_10015B288((uint64_t)v236);

  *(void *)(v56 + 392) = v237;
  v238 = (SEL *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView;
  id v239 = sub_10015B9DC();
  id v240 = [(id)sub_10015BA20() v232[416]];
  id v241 = sub_10015B288((uint64_t)v240);

  *(void *)(v56 + 400) = v241;
  id v242 = [*(id *)((char *)v238 + (void)v2) trailingAnchor];
  id v243 = [(id)sub_10015BA20() trailingAnchor];
  id v244 = sub_10015B288((uint64_t)v243);

  *(void *)(v56 + 408) = v244;
  id v245 = [*(id *)((char *)v238 + (void)v2) topAnchor];
  id v246 = [(id)sub_10015BA20() topAnchor];
  id v247 = sub_10015B288((uint64_t)v246);

  *(void *)(v56 + 416) = v247;
  id v248 = sub_10015B9C0();
  id v249 = [(id)sub_10015BA20() v238[257]];
  id v250 = sub_10015B288((uint64_t)v249);

  *(void *)(v56 + 424) = v250;
  specialized Array._endMutation()();
  Class v251 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v272 activateConstraints:v251];

  v252 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTopConstraint];
  if (v252) {
    sub_10015B8FC(v252);
  }
  v253 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonWaitingStateTrailingConstraint];
  if (v253) {
    sub_10015B8FC(v253);
  }
  v254 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint];
  if (v254) {
    sub_10015B8FC(v254);
  }
  id v255 = [*(id *)&v2[v195] bottomAnchor];
  id v256 = [*(id *)&v2[v268] bottomAnchor];
  id v257 = sub_10015B494((uint64_t)v256, "constraintEqualToAnchor:");

  uint64_t v258 = sub_10015BB90();
  sub_10014D290(v258);
  id v259 = [*(id *)&v2[v195] trailingAnchor];
  id v260 = [v2 view];
  if (!v260) {
    goto LABEL_54;
  }
  v261 = v260;
  id v262 = [v260 trailingAnchor];

  id v263 = [v259 constraintEqualToAnchor:v262 constant:-v64];
  sub_10014D29C((uint64_t)v263);

LABEL_37:
}

void sub_1001501A4()
{
  uint64_t v1 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v2 = sub_10015B684(v1);
  __chkstk_darwin(v2, v3);
  sub_10015B464();
  id v4 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v4)
  {
    id v5 = v4;
    static TaskPriority.userInitiated.getter();
    uint64_t v6 = type metadata accessor for TaskPriority();
    sub_10015B310(v6);
    id v7 = v5;
    double v8 = v0;
    uint64_t v9 = static MainActor.shared.getter();
    double v10 = (void *)sub_10015B77C();
    _DWORD v10[2] = v9;
    _OWORD v10[3] = &protocol witness table for MainActor;
    v10[4] = v7;
    void v10[5] = v8;
    sub_10012D67C();
    swift_release();
  }
}

uint64_t sub_100150298(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  __int16 v5[8] = a5;
  v5[9] = type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v9 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x208) + **(int **)((swift_isaMask & *a4) + 0x208));
  id v7 = (void *)swift_task_alloc();
  v5[11] = v7;
  *id v7 = v5;
  v7[1] = sub_1001503D4;
  return v9();
}

uint64_t sub_1001503D4()
{
  sub_100120498();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  uint64_t *v5 = v4;
  uint64_t *v5 = *v1;
  *(void *)(v4 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v9 = sub_10015085C;
  }
  else
  {
    *(void *)(v4 + 104) = v3;
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v10;
    uint64_t v9 = sub_10015054C;
  }
  return _swift_task_switch(v9, v6, v8);
}

uint64_t sub_10015054C()
{
  uint64_t v2 = *(char **)(v0 + 104);
  swift_release();
  uint64_t v3 = *(void **)&v2[direct field offset for SOSUIWebtRTCCapabilities.zoom];
  uint64_t v4 = v3;

  if (v3)
  {
    double v5 = *(double *)&v4[direct field offset for SOSUIWebtRTCDoubleRange.min];
    double v6 = *(double *)&v4[direct field offset for SOSUIWebtRTCDoubleRange.max];
    double v7 = v6;
    double v8 = v5;
  }
  else
  {
    double v7 = 0.0;
    double v6 = -1.0;
    double v5 = -1.0;
    double v8 = 0.0;
  }
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v10 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  double v11 = *(double *)(*(void *)(v9 + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
                  + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  id v13 = sub_100138D44(v12, (uint64_t)qword_10032CBE8);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (sub_10015B380(v14))
  {
    uint64_t v15 = sub_100120414();
    *(_DWORD *)uint64_t v15 = 134218496;
    *(double *)(v0 + 40) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2048;
    *(double *)(v0 + 48) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2048;
    *(double *)(v0 + 56) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v1, "EnhancedEmergency: min support zoom is %f, max support zoom is %f, current zoom level is %f", (uint8_t *)v15, 0x20u);
    sub_100120278();
  }

  if (v3 && v8 > 0.0 && v7 > 0.0 && v8 < v7 && v8 <= v11 && v11 <= v7)
  {
    *(double *)(*(void *)(v9 + v10)
              + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom) = round(v8 * 10.0) / 10.0;
    *(double *)(*(void *)(v9 + v10)
              + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom) = round(v7 * 10.0) / 10.0;
    *(double *)(*(void *)(v9 + v10)
              + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_midZoom) = round(v11 * 10.0) / 10.0;
    *(unsigned char *)(*(void *)(v9 + v10)
             + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_isZoomSupported) = 1;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0xE000000000000000;
    Double.write<A>(to:)();
    sub_10015BB9C();
    sub_1001509D8(*(void *)(v0 + 16), *(void *)(v0 + 24));

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  sub_1001202F0();
  return v16();
}

uint64_t sub_10015085C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10015B550(v13, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  os_log_type_t v14 = (void *)Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (sub_10015B380(v15))
  {
    sub_10015B4AC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    *(void *)(v12 + 32) = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't configure zoom, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_1001509D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10011EB3C((uint64_t *)&unk_1003259A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100286410;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v7 = sub_100123340(0, &qword_100322350);
  swift_bridgeObjectRetain();
  double v8 = NSFontAttributeName;
  *(void *)(inited + 40) = static UIFont.preferredFont(forTextStyle:weight:)();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v9 = self;
  uint64_t v10 = NSForegroundColorAttributeName;
  id v11 = [v9 yellowColor];
  *(void *)(inited + 104) = sub_100123340(0, &qword_100322358);
  *(void *)(inited + 80) = v11;
  type metadata accessor for Key(0);
  sub_10015B09C(&qword_100320E40, type metadata accessor for Key);
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  id v13 = objc_allocWithZone((Class)NSAttributedString);
  id v14 = sub_10015A4FC(a1, a2, v12);
  [*(id *)(v3 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton) setAttributedTitle:v14 forState:0];
}

void sub_100150BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  uint64_t v24 = OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView;
  uint64_t v25 = *(void **)&v22[OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView];
  if (v25)
  {
    id v26 = v25;
    sub_1001A71BC();

    uint64_t v27 = *(void **)&v23[v24];
    if (v27) {
      [v27 removeFromSuperview];
    }
  }
  sub_100149C7C(0);
  [*(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel + (void)v23) removeFromSuperview];
  [*(id *)&v23[OBJC_IVAR___EmergencyWebRTCViewController_waitingStateSubtitlelabel] removeFromSuperview];
  uint64_t v28 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
  [*(id *)&v23[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton] removeFromSuperview];
  id v29 = [v23 view];
  if (v29)
  {
    id v30 = v29;
    [v29 addSubview:*(void *)&v23[v28]];

    id v38 = *(void **)&v23[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateBottomConstraint];
    if (v38) {
      sub_10015B8FC(v38);
    }
    id v39 = *(void **)&v23[OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonSharingStateTrailingConstraint];
    if (v39) {
      LODWORD(v39) = sub_10015B8FC(v39);
    }
    sub_100150CD0((int)v39, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
  }
  else
  {
    __break(1u);
  }
}

void sub_100150CD0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10015B760();
  uint64_t v23 = *(void **)&v22[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (!v23)
  {
    sub_10015B69C();
    return;
  }
  uint64_t v24 = v22;
  uint64_t v25 = *(void **)&v22[OBJC_IVAR___EmergencyWebRTCViewController_viewControllerWaitingStateHeightConstraint];
  id v58 = v23;
  id v26 = v23;
  if (v25) {
    [v25 setActive:0];
  }
  uint64_t v27 = self;
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 deactivateConstraints:isa];

  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v29 = sub_10015BAC4();
  *(_OWORD *)(v29 + 16) = xmmword_100286FD0;
  id v30 = [v58 topAnchor];
  id v31 = [v24 view];
  if (!v31)
  {
    __break(1u);
    goto LABEL_15;
  }
  int v32 = v31;
  id v33 = [v31 topAnchor];

  id v35 = sub_10015B610(v34, "constraintEqualToAnchor:");
  *(void *)(v29 + 32) = v35;
  id v36 = [v58 bottomAnchor];
  id v37 = sub_10015B914();
  if (!v37)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v38 = v37;
  id v39 = [v37 bottomAnchor];

  id v41 = sub_10015B610(v40, "constraintEqualToAnchor:");
  *(void *)(v29 + 40) = v41;
  id v42 = [v58 leadingAnchor];
  id v43 = sub_10015B914();
  if (!v43)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v44 = v43;
  id v45 = [v43 leadingAnchor];

  id v47 = sub_10015B610(v46, "constraintEqualToAnchor:");
  *(void *)(v29 + 48) = v47;
  id v48 = [v58 trailingAnchor];
  id v49 = sub_10015B914();
  if (!v49)
  {
LABEL_17:
    __break(1u);
    return;
  }
  id v50 = v49;
  id v51 = [v49 trailingAnchor];

  id v53 = sub_10015B610(v52, "constraintEqualToAnchor:");
  *(void *)(v29 + 56) = v53;
  specialized Array._endMutation()();
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:v54];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong runAnimationToFullScreenWebView];
    swift_unknownObjectRelease();
  }
  sub_10015B69C();
}

void sub_100151018()
{
  [*(id *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton) isSelected];
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_100138CCC(v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)double v5 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v1, "EnhancedEmergency: flash button tapped, current selected state: %{BOOL}d", v5, 8u);
    sub_100120278();
  }

  sub_100155404();
  sub_100151184();
}

void sub_100151184()
{
  sub_1001233C4();
  int v2 = v1;
  uint64_t v3 = sub_10011EB3C((uint64_t *)&unk_100321350);
  uint64_t v4 = sub_10015B684(v3);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  double v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = &v32[-v11];
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = &v32[-v15];
  __chkstk_darwin(v14, v17);
  double v19 = &v32[-v18];
  uint64_t v20 = OBJC_IVAR___EmergencyWebRTCViewController_flashButton;
  [*(id *)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton) setSelected:(v2 & 1) == 0];
  id v21 = *(id *)(v0 + v20);
  UIButton.configuration.getter();
  uint64_t v22 = type metadata accessor for UIButton.Configuration();
  int v23 = sub_100120F20((uint64_t)v19, 1, v22);
  int v33 = v2;
  if (v23)
  {
    sub_100125C94((uint64_t)v19, (uint64_t)v8);
    UIButton.configuration.setter();

    sub_10013C174((uint64_t)v19, (uint64_t *)&unk_100321350);
  }
  else
  {
    uint64_t v24 = self;
    uint64_t v25 = &selRef_systemBlackColor;
    if (v2) {
      uint64_t v25 = &selRef_systemWhiteColor;
    }
    id v26 = [v24 *v25];
    UIButton.Configuration.baseForegroundColor.setter();
    UIButton.configuration.setter();
  }
  id v27 = *(id *)(v0 + v20);
  UIButton.configuration.getter();
  if (sub_100120F20((uint64_t)v16, 1, v22))
  {
    sub_100125C94((uint64_t)v16, (uint64_t)v8);
    UIButton.configuration.setter();

    sub_10013C174((uint64_t)v16, (uint64_t *)&unk_100321350);
  }
  else
  {
    uint64_t v28 = self;
    uint64_t v29 = &selRef_clearColor;
    if ((v33 & 1) == 0) {
      uint64_t v29 = &selRef_systemWhiteColor;
    }
    id v30 = [v28 *v29];
    UIButton.Configuration.baseBackgroundColor.setter();
    UIButton.configuration.setter();
  }
  id v31 = *(id *)(v0 + v20);
  UIButton.configuration.getter();
  if (sub_100120F20((uint64_t)v12, 1, v22))
  {
    sub_100125C94((uint64_t)v12, (uint64_t)v8);
    UIButton.configuration.setter();

    sub_10013C174((uint64_t)v12, (uint64_t *)&unk_100321350);
  }
  else
  {
    sub_100123340(0, &qword_100323D60);
    sub_10015BB78();
    sub_1001B434C();
    UIButton.Configuration.image.setter();
    UIButton.configuration.setter();
  }
  sub_100123384();
}

void sub_1001514B4()
{
  uint64_t v1 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v2 = sub_10015B684(v1);
  __chkstk_darwin(v2, v3);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (sub_10015B668(v6))
  {
    uint64_t v7 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v7);
    sub_10015B628((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: webview request to start streaming video");
    sub_100120278();
  }

  uint64_t v10 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_webRTCView);
  if (v10 && (uint64_t v11 = *(void **)(v0 + OBJC_IVAR___EmergencyWebRTCViewController_videoStreamingRequest)) != 0)
  {
    id v12 = v10;
    id v13 = v11;
    static TaskPriority.userInitiated.getter();
    uint64_t v14 = type metadata accessor for TaskPriority();
    sub_10015B310(v14);
    id v15 = v12;
    id v16 = v13;
    uint64_t v17 = sub_10015BA98();
    uint64_t v18 = (void *)sub_10015B77C();
    void v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    void v18[4] = v15;
    v18[5] = v13;
    sub_10012D67C();
    swift_release();
  }
  else
  {
    int v23 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (sub_10015B6E4(v19))
    {
      uint64_t v20 = (_WORD *)sub_100138CE8();
      sub_10015B690(v20);
      sub_10015B4E0((void *)&_mh_execute_header, v23, v21, "EnhancedEmergency: trying to stream video, but webView or request is nil");
      sub_100120278();
    }
    uint64_t v22 = (void *)sub_10015B8BC();
  }
}

uint64_t sub_1001516A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[3] = a4;
  void v5[4] = a5;
  type metadata accessor for MainActor();
  void v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  void v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_10015173C, v7, v6);
}

uint64_t sub_10015173C()
{
  sub_10015BC1C();
  uint64_t v1 = (void *)v0[4];
  id v2 = [v1 streamingURL];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v0[8] = v5;
  id v6 = [v1 token];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v0[9] = v9;
  sub_10015B740();
  id v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 448) + **(int **)(v10 + 448));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  void *v11 = v0;
  v11[1] = sub_1001518B8;
  return v13(v3, v5, v7, v9);
}

uint64_t sub_1001518B8()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v3 = v2;
  sub_10012A1CC();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_10012A1CC();
  void *v6 = v5;
  v3[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[6];
    uint64_t v8 = v3[7];
    uint64_t v9 = sub_100151A04;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v3[6];
    uint64_t v8 = v3[7];
    uint64_t v9 = sub_1001519AC;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_1001519AC()
{
  sub_100120364();
  swift_release();
  sub_1001202F0();
  return v0();
}

uint64_t sub_100151A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  id v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't stream video, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100151B74()
{
}

uint64_t sub_100151BA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[3] = type metadata accessor for MainActor();
  void v4[4] = static MainActor.shared.getter();
  uint64_t v8 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x1D0) + **(int **)((swift_isaMask & *a4) + 0x1D0));
  id v6 = (void *)swift_task_alloc();
  void v4[5] = v6;
  void *v6 = v4;
  v6[1] = sub_100151CDC;
  return v8();
}

uint64_t sub_100151CDC()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_100151E5C;
  }
  else {
    uint64_t v9 = sub_100151E04;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100151E04()
{
  sub_100120364();
  swift_release();
  sub_1001202F0();
  return v0();
}

uint64_t sub_100151E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  id v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't end video stream, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100151FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v7 = sub_10015B684(v6);
  __chkstk_darwin(v7, v8);
  sub_10015BA2C();
  uint64_t v11 = v10 - v9;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  id v13 = sub_100138D44(v12, (uint64_t)qword_10032CBE8);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_10015BA3C((void *)&_mh_execute_header, v13, v15, "EnhancedEmergency: webview request to unpause streaming video");
    sub_100120278();
  }

  uint64_t v16 = *(void **)&v2[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v16)
  {
    id v17 = v16;
    static TaskPriority.userInitiated.getter();
    uint64_t v18 = type metadata accessor for TaskPriority();
    sub_10015B3FC(v11, v19, v20, v18);
    id v21 = v17;
    id v22 = v3;
    uint64_t v23 = sub_10015BB84();
    sub_100142F48(v23);
    uint64_t v24 = static MainActor.shared.getter();
    uint64_t v25 = (void *)sub_10015BAC4();
    v25[2] = v24;
    v25[3] = &protocol witness table for MainActor;
    v25[4] = v21;
    v25[5] = v22;
    v25[6] = a1;
    v25[7] = a2;
    sub_10012D67C();
    swift_release();
  }
  else
  {
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v26))
    {
      id v27 = (_WORD *)sub_100138CE8();
      sub_10015B690(v27);
      sub_10015B4E0((void *)&_mh_execute_header, v29, v28, "EnhancedEmergency: trying to unpause video stream, but webView is nil");
      sub_100120278();
    }
  }
}

uint64_t sub_1001521E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  uint64_t v7[5] = a7;
  _OWORD v7[3] = a5;
  void v7[6] = type metadata accessor for MainActor();
  v7[7] = static MainActor.shared.getter();
  uint64_t v11 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x190) + **(int **)((swift_isaMask & *a4) + 0x190));
  uint64_t v9 = (void *)swift_task_alloc();
  v7[8] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_100152328;
  return v11();
}

uint64_t sub_100152328()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_1001524EC;
  }
  else {
    uint64_t v9 = sub_100152450;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100152450()
{
  sub_100120364();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong videoStreamingAboutToStart];
    uint64_t Strong = (void *)swift_unknownObjectRelease();
  }
  uint64_t v2 = *(void (**)(void *))(v0 + 32);
  if (v2) {
    v2(Strong);
  }
  sub_1001202F0();
  return v3();
}

uint64_t sub_1001524EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  id v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't unpause video stream, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100152648()
{
  sub_1001233C4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v7 = sub_10015B684(v6);
  __chkstk_darwin(v7, v8);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_100138D44(v9, (uint64_t)qword_10032CBE8);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_10015BA3C((void *)&_mh_execute_header, v10, v12, "EnhancedEmergency: webview request to pause streaming video");
    sub_100120278();
  }

  uint64_t v13 = OBJC_IVAR___EmergencyWebRTCViewController_webRTCView;
  os_log_type_t v14 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v14)
  {
    id v15 = v14;
    sub_10015B888();
    uint64_t v16 = type metadata accessor for TaskPriority();
    sub_10015B310(v16);
    uint64_t v17 = v0;
    sub_100142F48(v5);
    uint64_t v18 = (void *)static MainActor.shared.getter();
    uint64_t v19 = (void *)sub_10015BB60();
    void v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    void v19[4] = v17;
    v19[5] = v5;
    v19[6] = v3;
    sub_10012D67C();
    swift_release();
  }
  else
  {
    uint64_t v18 = (void *)Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (sub_100138CCC(v20))
    {
      *(_WORD *)sub_100138CE8() = 0;
      sub_10012601C((void *)&_mh_execute_header, v21, v22, "EnhancedEmergency: trying to pause video stream, but webView is nil");
      sub_100120278();
    }
  }
  uint64_t v23 = *(void **)&v1[v13];
  if (v23)
  {
    id v24 = v23;
    sub_10015B888();
    uint64_t v25 = type metadata accessor for TaskPriority();
    sub_10015B310(v25);
    id v26 = v18;
    uint64_t v27 = static MainActor.shared.getter();
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = v27;
    id v28[3] = &protocol witness table for MainActor;
    v28[4] = v26;
    sub_10012D67C();
    swift_release();
  }
  sub_100123384();
}

uint64_t sub_100152894(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[3] = a5;
  void v6[4] = a6;
  v6[5] = type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v10 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x180) + **(int **)((swift_isaMask & *a4) + 0x180));
  uint64_t v8 = (void *)swift_task_alloc();
  v6[7] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1001529D0;
  return v10();
}

uint64_t sub_1001529D0()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_100152B64;
  }
  else {
    uint64_t v9 = sub_100152AF8;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100152AF8()
{
  sub_100120364();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_release();
  if (v1) {
    (*(void (**)(uint64_t))(v0 + 24))(v2);
  }
  sub_1001202F0();
  return v3();
}

uint64_t sub_100152B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10015BBB4();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't pause video stream, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_100152CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  void v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  void v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100152D50, v6, v5);
}

uint64_t sub_100152D50()
{
  sub_10015BC1C();
  uint64_t v1 = (void *)v0[3];
  id v2 = [self mainBundle];
  sub_10015BC10();
  uint64_t v3 = sub_10015B39C(0x564F5F4553554150, 0xED000059414C5245);
  uint64_t v5 = v4;

  v0[7] = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)((swift_isaMask & *v1) + 0x248)
                                                + **(int **)((swift_isaMask & *v1) + 0x248));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  void *v6 = v0;
  v6[1] = sub_100152ED8;
  return v8(v3, v5);
}

uint64_t sub_100152ED8()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v3 = v2;
  sub_10012A1CC();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_10012A1CC();
  void *v6 = v5;
  v3[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[5];
    uint64_t v8 = v3[6];
    uint64_t v9 = sub_100152FC4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v3[5];
    uint64_t v8 = v3[6];
    uint64_t v9 = sub_100151E04;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_100152FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't set pause string, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_10015312C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v3 = sub_10015B684(v2);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = (void *)sub_100138D44(v7, (uint64_t)qword_10032CBE8);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (sub_10015B668(v9))
  {
    uint64_t v10 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v10);
    sub_10015B628((void *)&_mh_execute_header, v11, v12, "EnhancedEmergency: webview request to start video preview");
    sub_100120278();
  }

  uint64_t v13 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v13)
  {
    os_log_type_t v14 = v13;
    id v15 = [v14 window];

    if (v15)
    {
      static TaskPriority.userInitiated.getter();
      uint64_t v16 = type metadata accessor for TaskPriority();
      sub_10015B3FC((uint64_t)v6, v17, v18, v16);
      uint64_t v19 = v14;
      uint64_t v20 = v0;
      uint64_t v21 = static MainActor.shared.getter();
      uint64_t v22 = (void *)sub_10015B77C();
      v22[2] = v21;
      v22[3] = &protocol witness table for MainActor;
      void v22[4] = v19;
      v22[5] = v20;
      sub_10012D67C();
      swift_release();
    }
    else
    {
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v28))
      {
        uint64_t v29 = (uint8_t *)sub_100138CE8();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v6, "EnhancedEmergency: webview window is nil, queue startVideoPreview request", v29, 2u);
        sub_100120278();
        id v30 = v14;
      }
      else
      {
        id v30 = v27;
        uint64_t v27 = v14;
      }

      v1[OBJC_IVAR___EmergencyWebRTCViewController_hasPendingStartVideoPreviewRequest] = 1;
    }
  }
  else
  {
    int v32 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (sub_10015B6E4(v23))
    {
      uint64_t v24 = (_WORD *)sub_100138CE8();
      sub_10015B690(v24);
      sub_10015B4E0((void *)&_mh_execute_header, v32, v25, "EnhancedEmergency: trying to start video preview, but webView is nil");
      sub_100120278();
    }
    id v26 = (void *)sub_10015B8BC();
  }
}

uint64_t sub_1001533B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  void v5[5] = a4;
  void v5[6] = a5;
  v5[7] = type metadata accessor for MainActor();
  __int16 v5[8] = static MainActor.shared.getter();
  os_log_type_t v9 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x1A8) + **(int **)((swift_isaMask & *a4) + 0x1A8));
  uint64_t v7 = (void *)swift_task_alloc();
  v5[9] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_1001534F0;
  return v9();
}

uint64_t sub_1001534F0()
{
  sub_10012026C();
  sub_1001201F8();
  uint64_t v3 = v2;
  sub_10012A1CC();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_10012A1CC();
  void *v6 = v5;
  v3[10] = v0;
  swift_task_dealloc();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v8;
  v3[12] = v7;
  if (v0) {
    os_log_type_t v9 = sub_100153C00;
  }
  else {
    os_log_type_t v9 = sub_100153620;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100153620()
{
  sub_1001204EC();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[6];
  if (v6)
  {
    uint64_t v8 = sub_10015B8C8();
    *(_DWORD *)uint64_t v8 = 134218240;
    v0[3] = *(void *)&v7[OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2048;
    v0[4] = *(void *)&v7[OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: startVideoPreview, setFrameRate:%f, setMaximumBitrate:%f", (uint8_t *)v8, 0x16u);
    sub_100120278();
  }
  else
  {
  }
  os_log_type_t v9 = (void *)v0[5];
  uint64_t v21 = (swift_isaMask & *v9) + 608;
  uint64_t v20 = *(void *)((swift_isaMask & *v9) + 0x260) + **(int **)((swift_isaMask & *v9) + 0x260);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[13] = v10;
  void *v10 = v0;
  v10[1] = sub_100153870;
  sub_10015BA04((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v20, v21);
  return v18();
}

uint64_t sub_100153870()
{
  sub_10012026C();
  sub_10015B47C();
  sub_10012A1CC();
  void *v4 = v3;
  void *v4 = *v2;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  sub_10015BB54();
  uint64_t v6 = *(void *)(v5 + 96);
  uint64_t v7 = *(void *)(v1 + 88);
  if (v0) {
    uint64_t v8 = sub_100153D60;
  }
  else {
    uint64_t v8 = sub_10015397C;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10015397C()
{
  sub_10012026C();
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v13 = (swift_isaMask & *v1) + 576;
  uint64_t v12 = *(void *)((swift_isaMask & *v1) + 0x240) + **(int **)((swift_isaMask & *v1) + 0x240);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100153A9C;
  sub_10015BA04((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13);
  return v10();
}

uint64_t sub_100153A9C()
{
  sub_10012026C();
  sub_10015B47C();
  sub_10012A1CC();
  void *v4 = v3;
  void *v4 = *v2;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  sub_10015BB54();
  uint64_t v6 = *(void *)(v5 + 96);
  uint64_t v7 = *(void *)(v1 + 88);
  if (v0) {
    uint64_t v8 = sub_100153EC0;
  }
  else {
    uint64_t v8 = sub_100153BA8;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100153BA8()
{
  sub_100120364();
  swift_release();
  sub_1001202F0();
  return v0();
}

uint64_t sub_100153C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10011EC48(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't start video preview, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_100153D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10011EC48(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't start video preview, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_100153EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10011EC48(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't start video preview, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100154020()
{
}

void sub_100154050()
{
  sub_1001233C4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v6 = sub_10015B684(v5);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = sub_100138D44(v10, (uint64_t)qword_10032CBE8);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)sub_100138CE8();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v4, v13, 2u);
    sub_100120278();
  }

  os_log_type_t v14 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v14)
  {
    id v15 = v14;
    static TaskPriority.userInitiated.getter();
    uint64_t v16 = type metadata accessor for TaskPriority();
    sub_10015B3FC((uint64_t)v9, v17, v18, v16);
    id v19 = v15;
    uint64_t v20 = static MainActor.shared.getter();
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    uint64_t v21[3] = &protocol witness table for MainActor;
    v21[4] = v19;
    sub_10012D67C();
    swift_release();

    sub_100123384();
  }
  else
  {
    os_log_t v27 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v22))
    {
      uint64_t v23 = (_WORD *)sub_100138CE8();
      sub_10015B690(v23);
      _os_log_impl((void *)&_mh_execute_header, v27, v22, v2, v0, 2u);
      sub_100120278();
    }
    sub_100123384();
  }
}

uint64_t sub_100154274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 32) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10015430C, v6, v5);
}

uint64_t sub_10015430C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x118))(v2);
  sub_1001202F0();
  return v3();
}

void sub_100154534(double a1, double a2)
{
  *(double *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate] = a1;
  *(double *)&v2[OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate] = a2;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  uint64_t v8 = v2;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v6))
  {
    uint64_t v7 = sub_10015B8C8();
    *(_DWORD *)uint64_t v7 = 134218240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v5, v3, "EnhancedEmergency: setFrameRateAndMaximumBitRate, stored frameRate: %f bitRate: %f", (uint8_t *)v7, 0x16u);
    sub_100120278();
  }
  else
  {
  }
}

void sub_1001546AC()
{
  uint64_t v1 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v2 = sub_10015B684(v1);
  __chkstk_darwin(v2, v3);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (sub_10015B668(v6))
  {
    uint64_t v7 = (float *)sub_10015B4AC();
    sub_10015B794(v7, 3.852e-34);
    sub_10015BBF0((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: webview request to set frameRate as %f");
    sub_100120278();
  }

  uint64_t v10 = *(char **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
  if (v10
    && ((uint64_t v11 = *(void *)&v10[direct field offset for SOSUIWebRTCState.state], v11 != 6) ? (v12 = v11 == 0) : (v12 = 1),
        v12))
  {
    uint64_t v13 = v10;
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      *(_WORD *)sub_100138CE8() = 0;
      sub_10015B988((void *)&_mh_execute_header, v14, v16, "EnhancedEmergency: setFrameRate, webview state is either NotLoaded or FatalError, can't set frame rate, early return");
      sub_100120278();
    }
    else
    {

      os_log_type_t v14 = v13;
    }
  }
  else
  {
    uint64_t v17 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
    if (v17)
    {
      id v18 = v17;
      sub_10015B888();
      uint64_t v19 = type metadata accessor for TaskPriority();
      sub_10015B310(v19);
      os_log_type_t v14 = v0;
      uint64_t v20 = v0;
      static MainActor.shared.getter();
      uint64_t v21 = (void *)sub_10015BB60();
      sub_10015BADC(v21, (uint64_t)&protocol witness table for MainActor);
      sub_10012D67C();
      swift_release();
    }
    else
    {
      os_log_type_t v14 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v14, v22))
      {
        uint64_t v23 = (_WORD *)sub_100138CE8();
        sub_10015B690(v23);
        sub_10015B4E0((void *)&_mh_execute_header, v14, v24, "EnhancedEmergency: trying to set frameRate, but webView is nil");
        sub_100120278();
      }
    }
  }
}

uint64_t sub_10015491C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 24) = a1;
  *(void *)(v6 + 40) = type metadata accessor for MainActor();
  *(void *)(v6 + 48) = static MainActor.shared.getter();
  BOOL v12 = (uint64_t (*)(__n128))(*(void *)((swift_isaMask & *a5) + 0x260)
                                       + **(int **)((swift_isaMask & *a5) + 0x260));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 56) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100154A70;
  v10.n128_f64[0] = a1;
  return v12(v10);
}

uint64_t sub_100154A70()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_100154C04;
  }
  else {
    uint64_t v9 = sub_100154B98;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100154B98()
{
  sub_100120364();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  *(void *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_appliedFrameRate) = v2;
  sub_1001202F0();
  return v3();
}

uint64_t sub_100154C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10015BBB4();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't set frameRate, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100154D58()
{
  uint64_t v1 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v2 = sub_10015B684(v1);
  __chkstk_darwin(v2, v3);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (sub_10015B668(v6))
  {
    uint64_t v7 = (float *)sub_10015B4AC();
    sub_10015B794(v7, 3.852e-34);
    sub_10015BBF0((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: webview request to set maximum bitRate as %f");
    sub_100120278();
  }

  __n128 v10 = *(char **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
  if (v10
    && ((uint64_t v11 = *(void *)&v10[direct field offset for SOSUIWebRTCState.state], v11 != 6) ? (v12 = v11 == 0) : (v12 = 1),
        v12))
  {
    uint64_t v13 = v10;
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      *(_WORD *)sub_100138CE8() = 0;
      sub_10015B988((void *)&_mh_execute_header, v14, v16, "EnhancedEmergency: setBitRate, webview state is either NotLoaded or FatalError, can't set bit rate, early return");
      sub_100120278();
    }
    else
    {

      os_log_type_t v14 = v13;
    }
  }
  else
  {
    uint64_t v17 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
    if (v17)
    {
      id v18 = v17;
      sub_10015B888();
      uint64_t v19 = type metadata accessor for TaskPriority();
      sub_10015B310(v19);
      os_log_type_t v14 = v0;
      uint64_t v20 = v0;
      static MainActor.shared.getter();
      uint64_t v21 = (void *)sub_10015BB60();
      sub_10015BADC(v21, (uint64_t)&protocol witness table for MainActor);
      sub_10012D67C();
      swift_release();
    }
    else
    {
      os_log_type_t v14 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v14, v22))
      {
        uint64_t v23 = (_WORD *)sub_100138CE8();
        sub_10015B690(v23);
        sub_10015B4E0((void *)&_mh_execute_header, v14, v24, "EnhancedEmergency: trying to set maximum bitRate, but webView is nil");
        sub_100120278();
      }
    }
  }
}

uint64_t sub_100154FC8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 24) = a1;
  *(void *)(v6 + 40) = type metadata accessor for MainActor();
  *(void *)(v6 + 48) = static MainActor.shared.getter();
  BOOL v12 = (uint64_t (*)(__n128))(*(void *)((swift_isaMask & *a5) + 0x240)
                                       + **(int **)((swift_isaMask & *a5) + 0x240));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 56) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10015511C;
  v10.n128_f64[0] = a1;
  return v12(v10);
}

uint64_t sub_10015511C()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_1001552B0;
  }
  else {
    uint64_t v9 = sub_100155244;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100155244()
{
  sub_100120364();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  *(void *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_appliedBitRate) = v2;
  sub_1001202F0();
  return v3();
}

uint64_t sub_1001552B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10015BBB4();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't set maximum bitRate, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100155404()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v3 = sub_10015B684(v2);
  __chkstk_darwin(v3, v4);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = (void *)sub_100138D44(v5, (uint64_t)qword_10032CBE8);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (sub_10015B668(v7))
  {
    uint64_t v8 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v8);
    sub_10015B628((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: webview request to toggle torch");
    sub_100120278();
  }

  uint64_t v11 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v11)
  {
    id v12 = v11;
    sub_10015B888();
    uint64_t v13 = type metadata accessor for TaskPriority();
    sub_10015B310(v13);
    os_log_type_t v14 = v0;
    uint64_t v15 = v0;
    uint64_t v16 = sub_10015BA98();
    uint64_t v17 = (void *)sub_10015B77C();
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    void v17[4] = v14;
    v17[5] = v1;
    sub_10012D67C();
    swift_release();
  }
  else
  {
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (sub_10015B6E4(v18))
    {
      uint64_t v19 = (_WORD *)sub_100138CE8();
      sub_10015B690(v19);
      sub_10015B4E0((void *)&_mh_execute_header, v22, v20, "EnhancedEmergency: trying to toggle torch, but webView is nil");
      sub_100120278();
    }
    uint64_t v21 = (void *)sub_10015B8BC();
  }
}

uint64_t sub_1001555D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  _OWORD v5[3] = a5;
  void v5[4] = type metadata accessor for MainActor();
  void v5[5] = static MainActor.shared.getter();
  uint64_t v9 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x1F0) + **(int **)((swift_isaMask & *a4) + 0x1F0));
  os_log_type_t v7 = (void *)swift_task_alloc();
  void v5[6] = v7;
  *os_log_type_t v7 = v5;
  v7[1] = sub_10015570C;
  return v9();
}

uint64_t sub_10015570C()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_1001558E0;
  }
  else {
    uint64_t v9 = sub_100155834;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100155834()
{
  sub_100120364();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong torchStateChangeTo:[*(id *)(*(void *)(v0 + 24) + OBJC_IVAR___EmergencyWebRTCViewController_flashButton) isSelected]];
    swift_unknownObjectRelease();
  }
  sub_1001202F0();
  return v2();
}

uint64_t sub_1001558E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't toggle torch, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_100155A3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v3 = sub_10015B684(v2);
  __chkstk_darwin(v3, v4);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = (void *)sub_100138D44(v5, (uint64_t)qword_10032CBE8);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (sub_10015B668(v7))
  {
    uint64_t v8 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v8);
    sub_10015B628((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: flipCameraButtonTapped, request to flip camera");
    sub_100120278();
  }

  uint64_t v11 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v11)
  {
    uint64_t v12 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0xA0);
    uint64_t v13 = v11;
    os_log_type_t v14 = (char *)v12();
    uint64_t v15 = *(void *)&v14[direct field offset for SOSUIWebRTCState.cameraFacing];

    if (v15 == 1)
    {
      [*(id *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_flashButton] setAlpha:0.0];
      [*(id *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_zoomButton] setAlpha:0.0];
    }
    static TaskPriority.userInitiated.getter();
    uint64_t v16 = type metadata accessor for TaskPriority();
    sub_10015B310(v16);
    uint64_t v17 = v13;
    uint64_t v18 = v1;
    uint64_t v19 = sub_10015BA98();
    uint64_t v20 = (void *)sub_10015B77C();
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    void v20[4] = v17;
    v20[5] = v1;
    sub_10012D67C();
    swift_release();
  }
  else
  {
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (sub_10015B6E4(v21))
    {
      uint64_t v22 = (_WORD *)sub_100138CE8();
      sub_10015B690(v22);
      sub_10015B4E0((void *)&_mh_execute_header, v25, v23, "EnhancedEmergency: trying to flip camera, but webView is nil");
      sub_100120278();
    }
    uint64_t v24 = (void *)sub_10015B8BC();
  }
}

uint64_t sub_100155C94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  _OWORD v5[3] = a4;
  void v5[4] = a5;
  void v5[5] = type metadata accessor for MainActor();
  void v5[6] = static MainActor.shared.getter();
  uint64_t v9 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x1D8) + **(int **)((swift_isaMask & *a4) + 0x1D8));
  os_log_type_t v7 = (void *)swift_task_alloc();
  v5[7] = v7;
  *os_log_type_t v7 = v5;
  v7[1] = sub_100155DD0;
  return v9();
}

uint64_t sub_100155DD0()
{
  sub_10012026C();
  sub_1001201F8();
  sub_10012A1CC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10012A1CC();
  void *v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10015B7C0();
  if (v0) {
    uint64_t v9 = sub_10015603C;
  }
  else {
    uint64_t v9 = sub_100155EF8;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100155EF8()
{
  sub_10012026C();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = (char *)(*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 24)) + 0xA0))();
    uint64_t v4 = *(void *)&v3[direct field offset for SOSUIWebRTCState.cameraFacing];

    [v2 cameraFacingChange:v4];
    swift_unknownObjectRelease();
  }
  UIAccessibilityNotifications v5 = UIAccessibilityAnnouncementNotification;
  sub_10015A6E8(*(id *)(*(void *)(v0 + 32) + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton), (SEL *)&selRef_accessibilityValue);
  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  UIAccessibilityPostNotification(v5, v7);
  swift_unknownObjectRelease();
  sub_1001202F0();
  return v8();
}

uint64_t sub_10015603C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10015BBB4();
  sub_10015B550(v12, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B3DC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_10015B260(v15);
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: can't flip camera, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

void sub_1001561D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  uint64_t v3 = sub_10015B684(v2);
  __chkstk_darwin(v3, v4);
  sub_10015B464();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = (void *)sub_100138D44(v5, (uint64_t)qword_10032CBE8);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (sub_10015B668(v7))
  {
    uint64_t v8 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v8);
    sub_10015B628((void *)&_mh_execute_header, v9, v10, "EnhancedEmergency: zoomButtonTapped, request to change Zoom level");
    sub_100120278();
  }

  uint64_t v11 = *(void **)&v0[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v11)
  {
    id v12 = v11;
    sub_10015B888();
    uint64_t v13 = type metadata accessor for TaskPriority();
    sub_10015B310(v13);
    os_log_type_t v14 = v0;
    uint64_t v15 = v0;
    uint64_t v16 = sub_10015BA98();
    uint64_t v17 = (void *)sub_10015B77C();
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    void v17[4] = v1;
    v17[5] = v14;
    sub_10012D67C();
    swift_release();
  }
  else
  {
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (sub_10015B6E4(v18))
    {
      uint64_t v19 = (_WORD *)sub_100138CE8();
      sub_10015B690(v19);
      sub_10015B4E0((void *)&_mh_execute_header, v22, v20, "EnhancedEmergency: trying to set zoom level, but webView is nil");
      sub_100120278();
    }
    uint64_t v21 = (void *)sub_10015B8BC();
  }
}

uint64_t sub_1001563A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  uint8_t v5[16] = a5;
  type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[18] = v7;
  v5[19] = v6;
  return _swift_task_switch(sub_10015643C, v7, v6);
}

uint64_t sub_10015643C()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  *(void *)(v0 + 160) = OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine;
  uint64_t v4 = *(void *)(v2 + v3);
  double v5 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
  *(double *)(v0 + 88) = v5;
  double v6 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_midZoom);
  if (v5 >= v6)
  {
    double v6 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom);
    if (v5 >= v6) {
      double v6 = *(double *)(v4 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom);
    }
  }
  *(double *)(v0 + 96) = v6;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  *(void *)(v0 + 168) = sub_10011EC48(v7, (uint64_t)qword_10032CBE8);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (sub_10015B4C4(v9))
  {
    uint64_t v10 = sub_10015B8C8();
    *(_DWORD *)uint64_t v10 = 134218240;
    swift_beginAccess();
    *(void *)(v0 + 104) = *(void *)(v0 + 88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2048;
    *(double *)(v0 + 112) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v1, "EnhancedEmergency: current zoom level is %f, next zoom level is %f", (uint8_t *)v10, 0x16u);
    sub_100120278();
  }

  swift_beginAccess();
  sub_10015B740();
  uint64_t v22 = *(void *)(v11 + 504) + **(int **)(v11 + 504);
  uint64_t v23 = v11 + 504;
  id v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v12;
  void *v12 = v0;
  v12[1] = sub_1001566E4;
  sub_10015BA04((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v22, v23);
  return v20();
}

uint64_t sub_1001566E4()
{
  sub_10012026C();
  sub_10015B47C();
  sub_10012A1CC();
  void *v4 = v3;
  void *v4 = *v2;
  *(void *)(v3 + 184) = v0;
  swift_task_dealloc();
  sub_10015BB54();
  uint64_t v6 = *(void *)(v5 + 152);
  uint64_t v7 = *(void *)(v1 + 144);
  if (v0) {
    uint64_t v8 = sub_100156914;
  }
  else {
    uint64_t v8 = sub_1001567F0;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1001567F0()
{
  sub_100120498();
  uint64_t v1 = *((void *)v0 + 20);
  uint64_t v2 = *((void *)v0 + 15);
  swift_release();
  double v3 = v0[12];
  *(double *)(*(void *)(v2 + v1)
            + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = v3;
  v0[8] = 0.0;
  v0[9] = -2.68156159e154;
  Double.write<A>(to:)();
  sub_10015BB9C();
  uint64_t v4 = sub_10015BB84();
  sub_1001509D8(v4, v5);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong zoomLevelChange:v3];
    swift_unknownObjectRelease();
  }
  UIAccessibilityNotifications v7 = UIAccessibilityAnnouncementNotification;
  sub_10015BB84();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  UIAccessibilityPostNotification(v7, v8);

  sub_1001202F0();
  return v9();
}

uint64_t sub_100156914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10015B348();
  sub_1001204EC();
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = (void *)Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (sub_10015B380(v14))
  {
    sub_10015B4AC();
    sub_10015B42C();
    sub_10015B2F0(5.7779e-34);
    *(void *)(v12 + 80) = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10015B5D8();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v15, v16, "EnhancedEmergency: trying to set zoom level, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  sub_10015B364();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
}

void sub_100156AA0(void *a1)
{
  uint64_t v2 = *(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
  if (v2)
  {
    id v12 = v2;
    uint64_t v4 = (char *)[a1 state];
    if ((unint64_t)(v4 - 1) >= 2)
    {
      if (v4 == (char *)3)
      {
        *(void *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor] = *(void *)(*(void *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine]
                                                                                             + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v8 = type metadata accessor for Logger();
        os_log_type_t v9 = sub_100138D44(v8, (uint64_t)qword_10032CBE8);
        os_log_type_t v10 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v9, v10))
        {
          *(_WORD *)sub_100138CE8() = 0;
          sub_10015B988((void *)&_mh_execute_header, v9, v11, "EnhancedEmergency: pinch session ended");
          sub_100120278();
        }
      }
    }
    else
    {
      [a1 scale];
      double v6 = v5 * *(double *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_lastZoomFactor];
      uint64_t v7 = *(void *)&v1[OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine];
      if (v6 <= *(double *)(v7
                           + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom))
        double v6 = *(double *)(v7
                       + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom);
      if (*(double *)(v7 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom) < v6) {
        double v6 = *(double *)(v7
      }
                       + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom);
      sub_100156C4C(v1, v12, v6);
    }
  }
}

uint64_t sub_100156C4C(void *a1, void *a2, double a3)
{
  uint64_t v6 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v6 - 8, v7);
  os_log_type_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v10 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v9, 0, 1, v10);
  type metadata accessor for MainActor();
  id v11 = a1;
  id v12 = a2;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  *(void *)(v14 + 32) = v11;
  *(double *)(v14 + 40) = round(a3 * 100.0) / 100.0;
  *(void *)(v14 + 48) = v12;
  sub_10012D67C();
  return swift_release();
}

uint64_t sub_100156D88(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a6;
  *(double *)(v6 + 48) = a1;
  *(void *)(v6 + 40) = a5;
  type metadata accessor for MainActor();
  *(void *)(v6 + 64) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = v7;
  return _swift_task_switch(sub_100156E28, v8, v7);
}

uint64_t sub_100156E28()
{
  uint64_t v15 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 88) = sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v5))
  {
    uint64_t v6 = *(char **)(v0 + 40);
    uint64_t v7 = sub_10015B8C8();
    uint64_t v14 = sub_100120414();
    *(_DWORD *)uint64_t v7 = 134218242;
    *(void *)(v0 + 24) = *(void *)(*(void *)&v6[OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine]
                                     + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v8 = Double.description.getter();
    *(void *)(v0 + 32) = sub_1001412B0(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, (os_log_type_t)v1, "EnhancedEmergency: Setting zoom level from pinch, current zoom level is %f, next zoom level is %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  uint64_t v13 = (uint64_t (*)(__n128))(*(void *)((swift_isaMask & **(void **)(v0 + 56)) + 0x1F8)
                                       + **(int **)((swift_isaMask & **(void **)(v0 + 56)) + 0x1F8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v10;
  void *v10 = v0;
  v10[1] = sub_1001570D4;
  v11.n128_u64[0] = *(void *)(v0 + 48);
  return v13(v11);
}

uint64_t sub_1001570D4()
{
  sub_10012026C();
  sub_10015B47C();
  sub_10012A1CC();
  void *v4 = v3;
  void *v4 = *v2;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  sub_10015BB54();
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v1 + 72);
  if (v0) {
    uint64_t v8 = sub_1001572D0;
  }
  else {
    uint64_t v8 = sub_1001571E0;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1001571E0()
{
  sub_100120498();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_release();
  *(void *)(*(void *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
            + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = v1;
  uint64_t v7 = Double.description.getter();
  uint64_t v8 = v3;
  sub_10015BB9C();
  sub_1001509D8(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong zoomLevelChange:*(double *)(v0 + 48)];
    swift_unknownObjectRelease();
  }
  sub_1001202F0();
  return v5();
}

uint64_t sub_1001572D0()
{
  sub_10015BC1C();
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = (void *)Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (sub_10015B380(v3))
  {
    sub_10015B4AC();
    uint64_t v4 = (void *)sub_10015B42C();
    _DWORD *v0 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v1 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    sub_10015B2A8((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: trying to set zoom level, error: %@");
    sub_10011EB3C(&qword_100322A70);
    sub_10015B448();
    sub_100120278();
    sub_100120278();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001202F0();
  return v8();
}

void sub_1001574A0()
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = (void *)sub_100138D44(v0, (uint64_t)qword_10032CBE8);
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v2))
  {
    os_log_type_t v3 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v3);
    sub_1001443D4((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: preparing WebRTC view for pip, hiding controls and labels");
    sub_100120278();
  }

  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = sub_10015A78C;
  uint64_t v16 = v7;
  __n128 v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_10012EDF4;
  uint64_t v14 = &unk_1002D2740;
  uint64_t v8 = _Block_copy(&v11);
  swift_release();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = sub_10015A794;
  uint64_t v16 = v9;
  __n128 v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_10017D380;
  uint64_t v14 = &unk_1002D2768;
  uint64_t v10 = _Block_copy(&v11);
  swift_release();
  [v6 animateWithDuration:v8 animations:v10 completion:0.2];
  _Block_release(v10);
  _Block_release(v8);
}

void sub_1001576AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    os_log_type_t v2 = *(void **)(Strong + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
    id v3 = v2;

    if (v2)
    {
      swift_beginAccess();
      uint64_t v4 = swift_unknownObjectWeakLoadStrong();
      if (v4)
      {
        uint64_t v5 = (void *)v4;
        sub_100149A44((uint64_t)v3);
      }
    }
  }
}

void sub_100157750()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if ([*(id *)(Strong + OBJC_IVAR___EmergencyWebRTCViewController_flashButton) isSelected])
    {
      sub_100155404();
      sub_100155404();
    }
  }
}

void sub_1001577C4()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  id v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: restoring WebRTC view from pip, showing controls and labels");
    sub_100120278();
  }

  uint64_t v8 = *(void **)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  if (v8)
  {
    id v9 = v8;
    sub_100149A44((uint64_t)v9);
  }
}

void sub_1001578B8()
{
  sub_10015B760();
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  id v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: showPlaceHolderViewWithExclamation as mitigations are active");
    sub_100120278();
  }

  uint64_t v8 = OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView;
  [*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView) setAlpha:1.0];
  [*(id *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton) setAlpha:0.0];
  uint64_t v9 = OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView;
  [*(id *)(v1 + v8) addSubview:*(void *)(v1 + OBJC_IVAR___EmergencyWebRTCViewController_exclamationImageView)];
  uint64_t v10 = self;
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v11 = sub_10015B77C();
  *(_OWORD *)(v11 + 16) = xmmword_100286B60;
  id v12 = [*(id *)(v1 + v9) centerXAnchor];
  id v13 = [*(id *)(v1 + v8) centerXAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v11 + 32) = v14;
  id v15 = [*(id *)(v1 + v9) centerYAnchor];
  id v16 = [*(id *)(v1 + v8) centerYAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v11 + 40) = v17;
  specialized Array._endMutation()();
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 activateConstraints:isa];
  sub_10015B69C();
}

void sub_100157B08()
{
}

id sub_100157B60(uint64_t a1)
{
  return sub_10015A35C(a1, type metadata accessor for EmergencyWebRTCViewController);
}

uint64_t type metadata accessor for EmergencyWebRTCViewController()
{
  return self;
}

void *sub_100157EB4(const char *a1, SEL *a2)
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = sub_100138D44(v6, (uint64_t)qword_10032CBE8);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_10015B380(v8))
  {
    uint64_t v9 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v2, a1, v3, 2u);
    sub_100120278();
  }

  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result *a2];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_100158018(void *a1)
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  id v8 = a1;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)sub_10015B4AC();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    id v7 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v8;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "EnhancedEmergency: encoutered a webRTC error: %@", v5, 0xCu);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
}

void *sub_1001581CC(uint64_t a1)
{
  sub_10015B6B8(a1, direct field offset for SOSUIWebRTCQualityMessage.framesPerSecond);
  sub_10015B6B8(v3, direct field offset for SOSUIWebRTCQualityMessage.bitrate);
  sub_10015B6B8(v4, direct field offset for SOSUIWebRTCQualityMessage.packetLoss);
  sub_10015B6B8(v5, direct field offset for SOSUIWebRTCQualityMessage.jitter);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  id v7 = sub_100138D44(v6, (uint64_t)qword_10032CBE8);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_100138CCC(v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218752;
    sub_10015BB28();
    *(_WORD *)(v9 + 12) = 2048;
    sub_10015BB28();
    *(_WORD *)(v9 + 22) = 2048;
    sub_10015BB28();
    *(_WORD *)(v9 + 32) = 2048;
    sub_10015BB28();
    _os_log_impl((void *)&_mh_execute_header, v7, v1, "EnhancedEmergency: videoStreamQualityChanged, frameRate = %f, biteRate = %f, packetLoss = %f, jitter = %f", (uint8_t *)v9, 0x2Au);
    sub_100120278();
  }

  id v10 = sub_100149CEC();
  v11._countAndFlagsBits = 3822150;
  v11._object = (void *)0xE300000000000000;
  String.append(_:)(v11);
  Double.write<A>(to:)();
  v12._countAndFlagsBits = 0x3A5242202CLL;
  v12._object = (void *)0xE500000000000000;
  String.append(_:)(v12);
  Double.write<A>(to:)();
  sub_1001B6E08(0, 0xE000000000000000, v10);

  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result videoStreamQuality:a1];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_100158430()
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  oslog = sub_100138D44(v0, (uint64_t)qword_10032CBE8);
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (_WORD *)sub_100138CE8();
    sub_10015B690(v2);
    sub_10015B4E0((void *)&_mh_execute_header, oslog, v3, "EnhancedEmergency: encountered video stream lost");
    sub_100120278();
  }
}

void sub_1001584F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v181 = OBJC_IVAR___EmergencyWebRTCViewController_currentState;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  uint64_t v5 = v4;
  uint64_t v6 = a1;
  sub_100149C70((uint64_t)a1);
  uint64_t v7 = *(void *)&v6[direct field offset for SOSUIWebRTCState.state];
  os_log_type_t v8 = &unk_100322000;
  uint64_t v9 = &unk_100322000;
  id v10 = (char **)v4;
  Swift::String v11 = &selRef_emergencyTitleLabel;
  switch(v7)
  {
    case 0:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      id v13 = (void *)sub_100138D44(v12, (uint64_t)qword_10032CBE8);
      os_log_type_t v14 = static os_log_type_t.default.getter();
      Swift::String v11 = v10;
      if (sub_10015B4C4(v14))
      {
        id v15 = (_WORD *)sub_100138CE8();
        sub_10015B718(v15);
        sub_10015B4FC((void *)&_mh_execute_header, v16, v17, "EnhancedEmergency: received state change from webView, state is NotLoaded");
        uint64_t v5 = (char *)&unk_100322000;
        sub_100120278();
      }

      sub_10015B538(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel));
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView);
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView);
      goto LABEL_80;
    case 1:
      uint64_t v179 = (uint64_t)v5;
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      uint64_t v177 = sub_10011EC48(v24, (uint64_t)qword_10032CBE8);
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        *(_WORD *)sub_100138CE8() = 0;
        sub_10015BA3C((void *)&_mh_execute_header, v25, v27, "EnhancedEmergency: received state change from webView, state is CallGood");
        uint64_t v9 = &unk_100322000;
        sub_100120278();
      }

      os_log_type_t v28 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton);
      id v29 = *(id *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_flashButtonBackdropView);
      [v28 frame];
      [v29 _setCornerRadius:v30 * 0.5];

      uint64_t v31 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton);
      id v32 = *(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_zoomButtonBackdropView + v2);
      [v31 frame];
      [v32 _setCornerRadius:v33 * 0.5];

      sub_100149A44((uint64_t)v6);
      [*(id *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView) setAlpha:0.0];
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong cameraTurnedOnForRemoteSide];
        swift_unknownObjectRelease();
      }
      id v35 = (void *)swift_unknownObjectWeakLoadStrong();
      Swift::String v11 = v10;
      if (v35)
      {
        id v36 = v6;
        id v37 = [v35 videoStreamingState];
        swift_unknownObjectRelease();
        BOOL v145 = v37 == (id)3;
        uint64_t v6 = v36;
        if (v145) {
          goto LABEL_24;
        }
      }
      id v38 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v38)
      {
        id v39 = v6;
        id v40 = [v38 videoStreamingState];
        swift_unknownObjectRelease();
        BOOL v145 = v40 == (id)7;
        uint64_t v6 = v39;
        if (v145) {
          goto LABEL_24;
        }
      }
      id v41 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v41)
      {
        id v42 = v6;
        id v43 = [v41 videoStreamingState];
        swift_unknownObjectRelease();
        BOOL v145 = v43 == (id)4;
        uint64_t v6 = v42;
        if (v145)
        {
LABEL_24:
          uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v44)
          {
            [v44 videoStreamingAboutToStart];
            uint64_t v44 = (void *)swift_unknownObjectRelease();
          }
          sub_100150BB8((uint64_t)v44, v45, v46, v47, v48, v49, v50, v51, v174, v175, v177, v179, v181, *(uint64_t *)&v182, v183, v184, v185, v186, v187,
            v188,
            v189,
            v190);
        }
      }
      double v52 = *(double *)&v6[direct field offset for SOSUIWebRTCState.zoomLevel];
      id v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.default.getter();
      if (sub_10015B4C4(v54))
      {
        Class v55 = v6;
        uint64_t v56 = (uint8_t *)sub_10015B4AC();
        *(_DWORD *)uint64_t v56 = 134217984;
        double v182 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)&unk_100322000, "EnhancedEmergency: Setting zoom level to %f", v56, 0xCu);
        uint64_t v6 = v55;
        sub_100120278();
      }

      os_log_type_t v8 = &unk_100322000;
      *(double *)(*(void *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
                + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = v52;
      double v182 = 0.0;
      uint64_t v183 = 0xE000000000000000;
      Double.write<A>(to:)();
      sub_10015BB9C();
      sub_1001509D8(0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      uint64_t v57 = (void *)swift_unknownObjectWeakLoadStrong();
      uint64_t v5 = (char *)v179;
      if (!v57) {
        goto LABEL_84;
      }
      [v57 zoomLevelChange:v52];
      break;
    case 2:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v58 = type metadata accessor for Logger();
      id v59 = (void *)sub_100138D44(v58, (uint64_t)qword_10032CBE8);
      os_log_type_t v60 = static os_log_type_t.default.getter();
      Swift::String v11 = v10;
      if (sub_10015B4C4(v60))
      {
        id v61 = (_WORD *)sub_100138CE8();
        sub_10015B718(v61);
        sub_10015B4FC((void *)&_mh_execute_header, v62, v63, "EnhancedEmergency: received state change from webView, state is CallPaused");
        uint64_t v5 = (char *)&unk_100322000;
        sub_100120278();
      }

      [*(id *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel) setAlpha:0.0];
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView);
      id v64 = sub_100149CCC();
      [v64 setAlpha:1.0];

      id v65 = sub_100149CAC();
      [v65 setAlpha:1.0];

      id v66 = sub_100149CEC();
      id v67 = v66;
      if (*(unsigned char *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_showWebRTCQualityLabel)) {
        double v68 = 1.0;
      }
      else {
        double v68 = 0.0;
      }
      [v66 setAlpha:v68];

      sub_10015BA68(OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton);
      sub_10015BA68(OBJC_IVAR___EmergencyWebRTCViewController_zoomButton);
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView);
      uint64_t v69 = (void *)swift_unknownObjectWeakLoadStrong();
      os_log_type_t v8 = (void *)&unk_100322000;
      if (!v69) {
        goto LABEL_84;
      }
      [v69 cameraTurnedOffForRemoteSide];
      break;
    case 3:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      id v180 = v5;
      uint64_t v70 = type metadata accessor for Logger();
      id v71 = (void *)sub_100138D44(v70, (uint64_t)qword_10032CBE8);
      os_log_type_t v72 = static os_log_type_t.default.getter();
      if (sub_10015B4C4(v72))
      {
        *(_WORD *)sub_100138CE8() = 0;
        sub_10015B4FC((void *)&_mh_execute_header, v73, v74, "EnhancedEmergency: received state change from webView, state is CallPoor");
        sub_100120278();
      }

      sub_100123340(0, &qword_100323D60);
      sub_10015BB78();
      id v75 = sub_1001B434C();
      id v76 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel);
      if (v75)
      {
        id v77 = v75;
        uint64_t v78 = (uint64_t)v6;
        id v79 = v76;
        id v80 = v77;
      }
      else
      {
        uint64_t v78 = (uint64_t)v6;
        id v132 = objc_allocWithZone((Class)UIImage);
        id v133 = v76;
        id v80 = [v132 init];
        id v77 = 0;
      }
      id v134 = self;
      id v135 = v77;
      id v136 = (objc_class *)[v134 mainBundle];
      sub_10015BC10();
      sub_10015BB78();
      sub_10015B5B4();
      v137.super.Class isa = v136;
      sub_10015B598(v138, v139, v140, v141, v137);

      sub_10018CAFC((uint64_t)v80);
      swift_bridgeObjectRelease();

      uint64_t v6 = (char *)v78;
      sub_100149A44(v78);
      [*(id *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView) setAlpha:0.0];

      uint64_t v5 = v180;
      Swift::String v11 = v10;
      uint64_t v9 = (void *)&unk_100322000;
LABEL_80:
      os_log_type_t v8 = (void *)&unk_100322000;
      goto LABEL_84;
    case 4:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v81 = type metadata accessor for Logger();
      id v82 = (void *)sub_100138D44(v81, (uint64_t)qword_10032CBE8);
      os_log_type_t v83 = static os_log_type_t.default.getter();
      Swift::String v11 = v10;
      if (sub_10015B4C4(v83))
      {
        id v84 = (_WORD *)sub_100138CE8();
        sub_10015B718(v84);
        sub_10015B4FC((void *)&_mh_execute_header, v85, v86, "EnhancedEmergency: received state change from webView, state is Idle");
        uint64_t v5 = (char *)&unk_100322000;
        sub_100120278();
      }

      sub_10015312C();
      double v87 = *(double *)&v6[direct field offset for SOSUIWebRTCState.zoomLevel];
      *(double *)(*(void *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_zoomStateMachine)
                + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom) = v87;
      id v88 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v88)
      {
        [v88 zoomLevelChange:v87];
        swift_unknownObjectRelease();
      }
      sub_1001501A4();
      goto LABEL_84;
    case 5:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v89 = type metadata accessor for Logger();
      id v90 = (void *)sub_100138D44(v89, (uint64_t)qword_10032CBE8);
      os_log_type_t v91 = static os_log_type_t.default.getter();
      if (sub_10015B4C4(v91))
      {
        *(_WORD *)sub_100138CE8() = 0;
        sub_10015B4FC((void *)&_mh_execute_header, v92, v93, "EnhancedEmergency: received state change from webView, state is Preview");
        sub_100120278();
      }

      sub_10015B804(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel));
      sub_10015B804(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView));
      id v94 = sub_100149CCC();
      sub_10015B804(v94);

      id v95 = sub_100149CAC();
      sub_10015B804(v95);

      id v96 = sub_100149CEC();
      sub_10015B804(v96);

      sub_10015B804(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_flashButton));
      sub_10015B804(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_zoomButton));
      uint64_t v97 = OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton;
      [*(id *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton) setAlpha:1.0];
      id v98 = *(void **)(v2 + v97);
      id v99 = *(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButtonBackdropView + v2);
      [v98 frame];
      [v99 _setCornerRadius:v100 * 0.5];

      uint64_t v9 = &unk_100322000;
      [*(id *)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView) setAlpha:0.0];
      id v101 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
      Swift::String v11 = v10;
      os_log_type_t v8 = (void *)&unk_100322000;
      if (v101)
      {
        id v102 = v101;
        id v103 = sub_1001A4AF0();
        [v103 setUserInteractionEnabled:1];
      }
      goto LABEL_84;
    case 6:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v104 = type metadata accessor for Logger();
      id v105 = (void *)sub_100138D44(v104, (uint64_t)qword_10032CBE8);
      os_log_type_t v106 = static os_log_type_t.default.getter();
      Swift::String v11 = v10;
      if (sub_10015B4C4(v106))
      {
        id v107 = (_WORD *)sub_100138CE8();
        sub_10015B718(v107);
        sub_10015B4FC((void *)&_mh_execute_header, v108, v109, "EnhancedEmergency: received state change from webView, state is FatalError");
        uint64_t v5 = (char *)&unk_100322000;
        sub_100120278();
      }

      sub_10015B538(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel));
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView);
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView);
      id v110 = sub_100149CAC();
      sub_10015B538(v110);

      id v111 = sub_100149CEC();
      sub_10015B538(v111);

      uint64_t v112 = OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView;
      unsigned long long v113 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
      if (v113)
      {
        id v114 = v113;
        sub_1001A71BC();
      }
      sub_100151184();
      id v115 = *(void **)(v2 + v112);
      if (v115)
      {
        id v116 = v115;
        id v117 = sub_1001A4AF0();
        [v117 setUserInteractionEnabled:0];
      }
      id v118 = (void *)swift_unknownObjectWeakLoadStrong();
      os_log_type_t v8 = &unk_100322000;
      if (!v118) {
        goto LABEL_84;
      }
      uint64_t v119 = *(void *)&v6[direct field offset for SOSUIWebRTCState.error];
      if (v119) {
        uint64_t v120 = *(unsigned __int8 *)(v119 + direct field offset for SOSUIWebRTCErrorMessage.retryable);
      }
      else {
        uint64_t v120 = 0;
      }
      [v118 handleFatalErrorWithRetryable:v120];
      break;
    case 7:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v121 = type metadata accessor for Logger();
      id v122 = (void *)sub_100138D44(v121, (uint64_t)qword_10032CBE8);
      os_log_type_t v123 = static os_log_type_t.default.getter();
      Swift::String v11 = v10;
      if (sub_10015B4C4(v123))
      {
        unint64_t v124 = (_WORD *)sub_100138CE8();
        sub_10015B718(v124);
        sub_10015B4FC((void *)&_mh_execute_header, v125, v126, "EnhancedEmergency: received state change from webView, state is Connecting");
        uint64_t v5 = (char *)&unk_100322000;
        sub_100120278();
      }

      sub_10015B538(*(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_cameraStateLabel));
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_cameraStateBackgroundView);
      id v127 = sub_100149CCC();
      sub_10015B538(v127);

      id v128 = sub_100149CAC();
      sub_10015B538(v128);

      id v129 = sub_100149CEC();
      sub_10015B538(v129);

      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_flashButton);
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_zoomButton);
      sub_10015BA68(OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton);
      sub_10015B51C(OBJC_IVAR___EmergencyWebRTCViewController_webViewPlaceHolderView);
      id v130 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_actionButtonsWaitingView);
      os_log_type_t v8 = (void *)&unk_100322000;
      if (v130)
      {
        id v131 = v130;
        sub_1001A6E70();
      }
      goto LABEL_84;
    default:
      sub_10015B754();
      if (!v145) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_10011EC48(v18, (uint64_t)qword_10032CBE8);
      id v176 = v6;
      uint64_t v19 = v6;
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v178 = v5;
        uint64_t v22 = (uint8_t *)sub_10015B4AC();
        double v182 = COERCE_DOUBLE(sub_100120414());
        *(_DWORD *)uint64_t v22 = 136315138;
        Swift::String v23 = SOSUIWebRTCStateName.getValue()();
        uint64_t v184 = sub_1001412B0(v23._countAndFlagsBits, (unint64_t)v23._object, (uint64_t *)&v182);
        os_log_type_t v8 = (void *)&unk_100322000;
        uint64_t v9 = (void *)&unk_100322000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "EnhancedEmergency: received unknown state change from webView, state is %s", v22, 0xCu);
        swift_arrayDestroy();
        Swift::String v11 = &selRef_emergencyTitleLabel;
        sub_100120278();
        uint64_t v5 = v178;
        sub_100120278();
      }
      else
      {
      }
      uint64_t v6 = v176;
      goto LABEL_84;
  }
  swift_unknownObjectRelease();
LABEL_84:
  id v142 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v142)
  {
    [v142 webRTCstateChange:v6];
    swift_unknownObjectRelease();
  }
  if ((*(unsigned char *)(*(void *)(v2 + v8[13])
                 + OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_isZoomSupported) & 1) == 0)
    [*(id *)(v2 + v9[31]) setAlpha:0.0];
  id v143 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v143 || (id v144 = [v143 getRTTState], swift_unknownObjectRelease(), v144))
  {
    BOOL v145 = v7 == 1 || v7 == 3;
    if (v145)
    {
      id v146 = (void *)swift_unknownObjectWeakLoadStrong();
      if (!v146 || (id v147 = [v146 getRTTState], swift_unknownObjectRelease(), v147 != (id)2))
      {
        id v148 = (void *)swift_unknownObjectWeakLoadStrong();
        if (!v148 || (id v149 = [v148 getRTTState], swift_unknownObjectRelease(), v149 != (id)4))
        {
          id v150 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v150)
          {
            [v150 transitionToRTTState:2];
LABEL_108:
            swift_unknownObjectRelease();
          }
        }
      }
    }
    else if (v7 != 2 {
           || (id v151 = (void *)swift_unknownObjectWeakLoadStrong()) == 0
    }
           || (unsigned int v152 = [v151 isShownAboveCoverSheet], swift_unknownObjectRelease(), !v152)
           || (id v153 = (void *)swift_unknownObjectWeakLoadStrong()) == 0
           || (id v154 = [v153 getRTTState], swift_unknownObjectRelease(), v154 != (id)4))
    {
      id v155 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v155)
      {
        [v155 transitionToRTTState:1];
        goto LABEL_108;
      }
    }
  }
  uint64_t v156 = *(void *)(v2 + v181);
  if (v11)
  {
    if (!v156) {
      goto LABEL_118;
    }
    uint64_t v157 = *(void *)(v156 + direct field offset for SOSUIWebRTCState.state);
    if (*(void *)&v5[direct field offset for SOSUIWebRTCState.state] == v157) {
      goto LABEL_122;
    }
LABEL_115:
    if (v157 == 5)
    {
      UIAccessibilityNotifications v158 = UIAccessibilityAnnouncementNotification;
      id v159 = objc_retain(objc_retain(*(id *)((char *)OBJC_IVAR___EmergencyWebRTCViewController_waitingStateTitlelabel
                                           + v2)));
      sub_10015A6E8(v159, (SEL *)&selRef_accessibilityLabel);
      if (v160)
      {
        NSString v161 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v161 = 0;
      }
      UIAccessibilityPostNotification(v158, v161);
      swift_unknownObjectRelease();
      goto LABEL_121;
    }
LABEL_118:
    id v159 = 0;
LABEL_121:
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v159);

    goto LABEL_122;
  }
  if (v156)
  {
    uint64_t v157 = *(void *)(v156 + direct field offset for SOSUIWebRTCState.state);
    goto LABEL_115;
  }
LABEL_122:
  id v162 = *(void **)(v2 + OBJC_IVAR___EmergencyWebRTCViewController_flipCameraButton);
  id v163 = self;
  id v164 = v162;
  uint64_t v165 = (objc_class *)[v163 mainBundle];
  sub_10015BB40();
  sub_10015B5B4();
  v166.super.Class isa = v165;
  uint64_t v171 = sub_10015B598(v167, v168, v169, v170, v166);
  uint64_t v173 = v172;

  sub_100125D5C(v171, v173, v164);
}

void sub_10015972C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10015B760();
  a21 = v23;
  a22 = v24;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10011EC48(v25, (uint64_t)qword_10032CBE8);
  swift_bridgeObjectRetain_n();
  os_log_type_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (sub_10015B380(v27))
  {
    os_log_type_t v28 = (uint8_t *)sub_10015B4AC();
    a10 = sub_100120414();
    *(_DWORD *)os_log_type_t v28 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v29 = Array.description.getter();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    sub_1001412B0(v29, v31, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v22, "EnhancedEmergency: EmergencyWebRTCViewController,connected,webRTCConnectedAddresses: %s", v28, 0xCu);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v33 = (void *)Strong;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v33 webRTCConnectedAddresses:isa];

    swift_unknownObjectRelease();
  }
  sub_10015B69C();
}

NSObject *sub_100159908()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF126PHSOSUIWebViewEventsHelper_delegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for PHSOSUIWebViewEventsHelper();
  id v1 = [super init];
  uint64_t v2 = qword_100320540;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  uint64_t v5 = v3;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v8 = 138412290;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: created PHSOSUIWebViewEventsHelper: %@", v8, 0xCu);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v6 = v5;
  }

  return v5;
}

uint64_t sub_100159B08(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100158018(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100159BD0(uint64_t a1)
{
  return sub_100159E44(a1, (void (*)(uint64_t))sub_1001581CC);
}

uint64_t sub_100159C50()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100158430();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100159CF0(uint64_t a1)
{
  return sub_100159E44(a1, (void (*)(uint64_t))sub_1001584F0);
}

uint64_t sub_100159D70(uint64_t a1)
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 1;
  }
  id v2 = [self validateServerCertificateChallenge:a1];
  swift_unknownObjectRelease();
  return (uint64_t)v2;
}

uint64_t sub_100159E2C(uint64_t a1)
{
  return sub_100159E44(a1, (void (*)(uint64_t))sub_10015972C);
}

uint64_t sub_100159E44(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    a2(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100159F20()
{
  return sub_10015A35C(0, type metadata accessor for PHSOSUIWebViewEventsHelper);
}

uint64_t type metadata accessor for PHSOSUIWebViewEventsHelper()
{
  return self;
}

id sub_100159F70(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_isZoomSupported] = 0;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_minZoom] = a1;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_maxZoom] = a2;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_midZoom] = a3;
  *(double *)&v4[OBJC_IVAR____TtC13InCallServiceP33_9515DAA0F91B8B6E1F143ED1CB3A5EF116ZoomStateMachine_currentZoom] = a4;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for ZoomStateMachine();
  return [super init];
}

void sub_100159FE4()
{
}

id sub_10015A038()
{
  return sub_10015A35C(0, type metadata accessor for ZoomStateMachine);
}

uint64_t type metadata accessor for ZoomStateMachine()
{
  return self;
}

id sub_10015A078()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for ButtonBackgroundViewEffectView();
  [super initWithEffect:0];
  id v2 = self;
  id v3 = v1;
  id v4 = [v2 effectWithBlurRadius:100.0];
  v11[0] = xmmword_100287340;
  v11[1] = xmmword_100287350;
  void v11[2] = xmmword_100287360;
  v11[3] = xmmword_100287370;
  void v11[4] = xmmword_100287380;
  id result = [self _colorEffectCAMatrix:v11];
  if (result)
  {
    objc_super v6 = result;
    if (v4)
    {
      sub_10011EB3C((uint64_t *)&unk_100321360);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_100286B60;
      *(void *)(v7 + 32) = v4;
      *(void *)(v7 + 40) = v6;
      *(void *)&v11[0] = v7;
      specialized Array._endMutation()();
      sub_100123340(0, &qword_100322278);
      id v8 = v4;
      id v9 = v6;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v3 setBackgroundEffects:isa];

      objc_super v6 = v8;
    }
    else
    {
      id v8 = v3;
    }

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10015A24C()
{
}

uint64_t sub_10015A2C8(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void sub_10015A2E0()
{
}

id sub_10015A340()
{
  return sub_10015A35C(0, type metadata accessor for ButtonBackgroundViewEffectView);
}

id sub_10015A35C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for ButtonBackgroundViewEffectView()
{
  return self;
}

id sub_10015A3B8(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    objc_super v6 = sub_10012CB98(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    __chkstk_darwin(v6, v6);
    id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    sub_100129FFC((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [v2 initWithTarget:v10 action:a2];
  swift_unknownObjectRelease();
  return v11;
}

id sub_10015A4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_10015B09C(&qword_100320E40, type metadata accessor for Key);
    v6.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  id v7 = [v3 initWithString:v5 attributes:v6.super.isa];

  return v7;
}

unint64_t sub_10015A5D4()
{
  unint64_t result = qword_100322270;
  if (!qword_100322270)
  {
    sub_1001221B0((uint64_t *)&unk_100324020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322270);
  }
  return result;
}

uint64_t sub_10015A628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C((uint64_t *)&unk_100321630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015A690()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10015A6C8()
{
  return sub_10014A5F0(*(void **)(v0 + 16));
}

uint64_t sub_10015A6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10015A6E0()
{
  return swift_release();
}

uint64_t sub_10015A6E8(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_10015A754()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10015A78C()
{
}

void sub_10015A794()
{
}

uint64_t sub_10015A7A0()
{
  sub_100120498();
  sub_10015B728();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  double v8 = sub_10015B648();
  return sub_100156D88(v8, v3, v4, v5, v6, v7);
}

uint64_t sub_10015A83C()
{
  sub_10015BAB0();
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  sub_100120290();
  sub_10015BA84();
  return sub_1001563A4(v3, v4, v5, v6, v7);
}

uint64_t sub_10015A8D0()
{
  sub_10015BAB0();
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  sub_100120290();
  sub_10015BA84();
  return sub_100155C94(v3, v4, v5, v6, v7);
}

uint64_t sub_10015A964()
{
  sub_10015BAB0();
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  sub_100120290();
  sub_10015BA84();
  return sub_1001555D0(v3, v4, v5, v6, v7);
}

uint64_t sub_10015A9F8()
{
  sub_100120498();
  sub_10015B728();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  double v8 = sub_10015B648();
  return sub_100154FC8(v8, v3, v4, v5, v6, v7);
}

uint64_t sub_10015AA94()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10015AADC()
{
  sub_100120498();
  sub_10015B728();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  double v8 = sub_10015B648();
  return sub_10015491C(v8, v3, v4, v5, v6, v7);
}

uint64_t sub_10015AB78()
{
  sub_10012026C();
  sub_10015BA58();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_100129B3C;
  uint64_t v3 = sub_10015B700();
  return sub_100154274(v3, v4, v5, v6);
}

uint64_t sub_10015AC0C()
{
  sub_10015BAB0();
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  sub_100120290();
  sub_10015BA84();
  return sub_1001533B4(v3, v4, v5, v6, v7);
}

uint64_t sub_10015ACA0()
{
  sub_10012026C();
  sub_10015BA58();
  uint64_t v0 = swift_task_alloc();
  id v1 = (void *)sub_10012A254(v0);
  *id v1 = v2;
  v1[1] = sub_10012A1B0;
  uint64_t v3 = sub_10015B700();
  return sub_100152CB8(v3, v4, v5, v6);
}

uint64_t sub_10015AD30()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10015AD80()
{
  sub_100120498();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_10012A254(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_10012A1B0;
  uint64_t v5 = sub_10015B8A0();
  return sub_100152894(v5, v6, v7, v8, v9, v1);
}

uint64_t sub_10015AE28()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10015AE80()
{
  sub_10015BC1C();
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10012A254(v3);
  void *v4 = v5;
  v4[1] = sub_10012A1B0;
  uint64_t v6 = sub_10015B8A0();
  return sub_1001521E8(v6, v7, v8, v9, v10, v2, v1);
}

uint64_t sub_10015AF38()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10015AF78()
{
  sub_10012026C();
  sub_10015BA58();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10012A1B0;
  uint64_t v3 = sub_10015B700();
  return sub_100151BA4(v3, v4, v5, v6);
}

uint64_t sub_10015B00C()
{
  sub_10015BAB0();
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10012A1B0;
  sub_100120290();
  sub_10015BA84();
  return sub_1001516A4(v3, v4, v5, v6, v7);
}

uint64_t sub_10015B09C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015B0E8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10015B130()
{
  sub_10015BAB0();
  sub_100120498();
  sub_100120460();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10012A254(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10012A1B0;
  sub_100120290();
  sub_10015BA84();
  return sub_100150298(v3, v4, v5, v6, v7);
}

uint64_t sub_10015B1C0()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    char v5 = 1;
  }
  else
  {
    sub_10015BB84();
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_10015B254(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(v2 + a2);
  *(void *)(v2 + a2) = a1;
}

uint64_t sub_10015B260(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_10015B288(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 520);
  return [v1 v4:a1];
}

void sub_10015B2A8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10015B2C8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10015B2F0(float a1)
{
  *uint64_t v1 = a1;
  return swift_errorRetain();
}

uint64_t sub_10015B310(uint64_t a1)
{
  sub_10011EB80(v1, 0, 1, a1);
  return type metadata accessor for MainActor();
}

BOOL sub_10015B380(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10015B39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x65536C6C61436E49;
  unint64_t v5 = 0xED00006563697672;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_10015B3DC()
{
  return swift_slowAlloc();
}

uint64_t sub_10015B3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10011EB80(a1, 0, 1, a4);
  return type metadata accessor for MainActor();
}

uint64_t sub_10015B42C()
{
  return swift_slowAlloc();
}

uint64_t sub_10015B448()
{
  return swift_arrayDestroy();
}

id sub_10015B494(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

uint64_t sub_10015B4AC()
{
  return swift_slowAlloc();
}

BOOL sub_10015B4C4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_10015B4E0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

void sub_10015B4FC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

id sub_10015B51C@<X0>(uint64_t a1@<X8>)
{
  os_log_type_t v4 = *(void **)(v2 + a1);
  os_log_type_t v5 = *(const char **)(v1 + 2456);
  return [v4 v5:0.0];
}

id sub_10015B538(void *a1)
{
  uint64_t v3 = *(const char **)(v1 + 2456);
  return [a1 v3:0.0];
}

uint64_t sub_10015B550(uint64_t a1, uint64_t a2)
{
  sub_10011EC48(a1, a2);
  return swift_errorRetain();
}

uint64_t sub_10015B57C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10015B598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5)
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v8 = 0;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_10015B5D8()
{
  void *v0 = v1;
  return swift_errorRelease();
}

id sub_10015B5F0(uint64_t a1)
{
  os_log_type_t v4 = *(const char **)(v1 + 520);
  return [v2 v4:a1];
}

id sub_10015B610(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

void sub_10015B628(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

double sub_10015B648()
{
  return v0;
}

BOOL sub_10015B668(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10015B684(uint64_t a1)
{
  return a1 - 8;
}

_WORD *sub_10015B690(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

double sub_10015B6B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return *(double *)(a1 + a2);
}

uint64_t sub_10015B6CC()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_10015B6E4(os_log_type_t a1)
{
  uint64_t v4 = *(NSObject **)(v1 - 56);
  return os_log_type_enabled(v4, a1);
}

uint64_t sub_10015B700()
{
  return v0;
}

_WORD *sub_10015B718(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_10015B77C()
{
  return swift_allocObject();
}

uint64_t sub_10015B794(float *a1, float a2)
{
  *a1 = a2;
  *(void *)(v2 - 88) = v4;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id sub_10015B7CC(void *a1)
{
  uint64_t v3 = *(const char **)(v1 + 2456);
  return [a1 v3:0.0];
}

id sub_10015B7E4(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v1 + 520);
  return [v2 v4:a1];
}

id sub_10015B804(void *a1)
{
  uint64_t v3 = *(const char **)(v1 + 2456);
  return [a1 v3:0.0];
}

id sub_10015B81C(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 3832);
  return [v1 v4:a1];
}

id sub_10015B83C()
{
  uint64_t v4 = *(const char **)(v0 + 520);
  return [v1 v4:v2];
}

id sub_10015B858(void *a1)
{
  uint64_t v3 = *(const char **)(v1 + 1648);
  return [a1 v3];
}

id sub_10015B870()
{
  uint64_t v3 = *(const char **)(v1 + 688);
  return [v0 v3];
}

uint64_t sub_10015B888()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_10015B8A0()
{
  return v0;
}

uint64_t sub_10015B8BC()
{
  return *(void *)(v0 - 56);
}

uint64_t sub_10015B8C8()
{
  return swift_slowAlloc();
}

id sub_10015B8E0()
{
  uint64_t v3 = *(const char **)(v1 + 1392);
  return [v0 v3];
}

id sub_10015B8FC(void *a1)
{
  uint64_t v3 = *(const char **)(v1 + 2144);
  return [a1 v3:1];
}

id sub_10015B914()
{
  uint64_t v3 = *(const char **)(v1 + 688);
  return [v0 v3];
}

id sub_10015B930()
{
  uint64_t v3 = *(const char **)(v0 + 1816);
  return [v1 v3];
}

id sub_10015B94C()
{
  return sub_100159F70(-1.0, -1.0, -1.0, -1.0);
}

uint64_t sub_10015B970()
{
  return swift_bridgeObjectRelease_n();
}

void sub_10015B988(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

id sub_10015B9A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(const char **)(v5 + 3840);
  return [a1 v7:v4 a4:64];
}

id sub_10015B9C0()
{
  uint64_t v3 = *(void **)(v0 + v1);
  return [v3 bottomAnchor];
}

id sub_10015B9DC()
{
  uint64_t v3 = *(void **)(v0 + v1);
  return [v3 leadingAnchor];
}

_WORD *sub_10015B9F8(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_10015BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_10015BA14()
{
  return *(void *)(v0 + v1);
}

uint64_t sub_10015BA20()
{
  return *(void *)(v0 + v1);
}

void sub_10015BA3C(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

id sub_10015BA68@<X0>(uint64_t a1@<X8>)
{
  os_log_type_t v4 = *(void **)(v2 + a1);
  uint64_t v5 = *(const char **)(v1 + 2456);
  return [v4 v5:1.0];
}

uint64_t sub_10015BA98()
{
  return static MainActor.shared.getter();
}

uint64_t sub_10015BAC4()
{
  return swift_allocObject();
}

void *sub_10015BADC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[2] = v2;
  result[3] = a2;
  result[4] = v4;
  result[5] = v5;
  result[6] = v3;
  return result;
}

id sub_10015BAF0(id a1, SEL a2)
{
  return [a1 a2:0.0, 0.0, 0.0, 0.0];
}

id sub_10015BB10(void *a1)
{
  uint64_t v3 = *(const char **)(v1 + 1392);
  return [a1 v3];
}

uint64_t sub_10015BB28()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10015BB40()
{
  return 0x4152454D4143;
}

uint64_t sub_10015BB60()
{
  return swift_allocObject();
}

uint64_t sub_10015BB84()
{
  return v0;
}

uint64_t sub_10015BB90()
{
  return v0;
}

void sub_10015BB9C()
{
  uint64_t v1 = 38851;
  unint64_t v2 = 0xA200000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10015BBB4()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10015BBCC()
{
  return *(void *)(v0 + v1);
}

id sub_10015BBD8()
{
  uint64_t v3 = *(const char **)(v1 + 688);
  return [v0 v3];
}

void sub_10015BBF0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

void sub_10015BC28(char a1)
{
  uint64_t v2 = v1;
  v18.receiver = v1;
  v18.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  if (qword_100320568 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v4 = [self sharedApplication];
  id v5 = [v4 delegate];

  if (v5)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      swift_unknownObjectRetain();
      id v7 = ICSApplicationDelegate.bannerPresentationManager.getter();
      swift_unknownObjectRelease();
      id v5 = v7;
      uint64_t v8 = (void *)dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v8 = 0;
      id v5 = 0;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v6 = 0;
  }
  id v9 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsShareCardViewController());
  id v10 = v8;
  uint64_t v11 = (void *)ConversationControlsShareCardViewController.init(conversationControlsManager:)();
  sub_10015C59C();
  uint64_t v12 = v2;
  ConversationControlsShareCardViewController.delegate.setter();
  id v13 = [v11 sheetPresentationController];
  if (v13)
  {
    os_log_type_t v14 = v13;
    sub_10011EB3C((uint64_t *)&unk_100321360);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_100286EB0;
    *(void *)(v15 + 32) = [self mediumDetent];
    specialized Array._endMutation()();
    sub_10015C5E8();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v14 setDetents:isa];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    ConversationControlsShareCardViewController.updateSheetDetent.setter();

    swift_release();
  }
  [v12 presentViewController:v11 animated:1 completion:0];

  uint64_t v17 = *(void **)&v12[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController];
  *(void *)&v12[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController] = v11;
}

uint64_t sub_10015BF3C(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    sub_10011EB3C((uint64_t *)&unk_100321360);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100286EB0;
    *(void *)(v6 + 32) = a1;
    v16[0] = v6;
    specialized Array._endMutation()();
    sub_10015C5E8();
    id v7 = a1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 setDetents:isa v16[0]];
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v10 = (void *)result;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a1;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_10015C6A8;
    *(void *)(v12 + 24) = v11;
    v16[4] = sub_10015C6C0;
    void v16[5] = v12;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1001A75C8;
    v16[3] = &unk_1002D2A38;
    id v13 = _Block_copy(v16);
    id v14 = a1;
    swift_retain();
    swift_retain();
    swift_release();
    [v10 animateChanges:v13];

    _Block_release(v13);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_10015C170(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    id v5 = [a2 identifier];
    [v4 setSelectedDetentIdentifier:v5];
  }
}

uint64_t sub_10015C25C()
{
  if ([v0 _remoteViewControllerProxy])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_10015A628((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    sub_10011EB3C(&qword_1003223A0);
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10012D318((uint64_t)v4);
    return 0;
  }
}

id sub_10015C318(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController] = 0;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  id v8 = [super initWithNibName:v7 bundle:a3];

  return v8;
}

id sub_10015C420(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13InCallService34ShareCardRemoteAlertViewController_shareViewController] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  [super initWithCoder:a1];

  return v4;
}

uint64_t type metadata accessor for ShareCardRemoteAlertViewController()
{
  return self;
}

void *sub_10015C4DC()
{
  if (qword_100320568 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t result = (void *)sub_10015C25C();
  if (result)
  {
    [result dismiss];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_10015C59C()
{
  unint64_t result = qword_1003223A8;
  if (!qword_1003223A8)
  {
    type metadata accessor for ShareCardRemoteAlertViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003223A8);
  }
  return result;
}

unint64_t sub_10015C5E8()
{
  unint64_t result = qword_1003223B0;
  if (!qword_1003223B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1003223B0);
  }
  return result;
}

uint64_t sub_10015C628()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015C660(void *a1)
{
  return sub_10015BF3C(a1, v1);
}

uint64_t sub_10015C668()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10015C6A8()
{
  sub_10015C170(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10015C6B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015C6C0()
{
  return sub_1001A75A0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10015C6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10015C6D8()
{
  return swift_release();
}

NSString sub_10015C6E0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10032CCF0 = (uint64_t)result;
  return result;
}

NSString sub_10015C718()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10032CCF8 = (uint64_t)result;
  return result;
}

NSString sub_10015C750()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10032CD00 = (uint64_t)result;
  return result;
}

NSString sub_10015C788()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10032CD08 = (uint64_t)result;
  return result;
}

NSString sub_10015C7C0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10032CD10 = (uint64_t)result;
  return result;
}

uint64_t sub_10015C82C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10015C89C()
{
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

void *sub_10015C918()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_tuCall);
  id v2 = v1;
  return v1;
}

void sub_10015C9A4(uint64_t a1)
{
}

void sub_10015C9B0(uint64_t a1)
{
}

void sub_10015C9BC(uint64_t a1)
{
}

void sub_10015C9C8(uint64_t a1)
{
}

void sub_10015C9D4(uint64_t a1)
{
}

void sub_10015C9E0(uint64_t a1)
{
}

void sub_10015C9EC(uint64_t a1)
{
}

uint64_t sub_10015CA1C()
{
  return *(void *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState);
}

uint64_t sub_10015CA54(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState) = result;
  return result;
}

void sub_10015CA64(uint64_t a1)
{
}

void sub_10015CA70(uint64_t a1)
{
}

uint64_t sub_10015CAA0()
{
  return *(void *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState);
}

uint64_t sub_10015CAD8(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState) = result;
  return result;
}

void sub_10015CAE8()
{
  sub_1001233C4();
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100122300();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  sub_10016ADA4();
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6, v7);
  uint64_t v8 = sub_10016AD7C();
  uint64_t v9 = sub_10015B684(v8);
  __chkstk_darwin(v9, v10);
  sub_10016AC28();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_tuCall] = 0;
  *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController] = 0;
  *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController] = 0;
  *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController] = 0;
  *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator] = 0;
  *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper] = 0;
  uint64_t v28 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestQueue;
  sub_100123340(0, (unint64_t *)&qword_100321370);
  uint64_t v11 = v0;
  static DispatchQoS.unspecified.getter();
  id v32 = _swiftEmptyArrayStorage;
  sub_10016A690((unint64_t *)&qword_100322268, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10011EB3C((uint64_t *)&unk_100324020);
  sub_10016A9CC((unint64_t *)&qword_100322270, (uint64_t *)&unk_100324020);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v29);
  *(void *)&v0[v28] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest] = 0;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet] = &_swiftEmptySetSingleton;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest] = 0;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_maxRequestCountPerRequestType] = 3;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation] = 0;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState] = 0;
  v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted] = 0;
  v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls] = 0;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState] = 3;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState] = 3;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector] = [objc_allocWithZone((Class)type metadata accessor for EnhancedEmergencyDataCollector()) init];
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount] = 0;
  *(void *)&v11[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount] = 0;

  v31.receiver = v11;
  v31.super_class = (Class)type metadata accessor for EnhancedEmergencyCoordinator();
  uint64_t v12 = (char *)[super init];
  uint64_t v13 = *(void *)&v12[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestQueue];
  id v14 = objc_allocWithZone((Class)CLEEDRequestHelper);
  uint64_t v15 = v12;
  id v16 = [v14 initWithDelegate:v15 andQueue:v13];
  uint64_t v17 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper;
  objc_super v18 = *(void **)&v15[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
  *(void *)&v15[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper] = v16;

  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10011EC48(v19, (uint64_t)qword_10032CBE8);
  uint64_t v20 = v15;
  os_log_type_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (sub_10016AC70(v22))
  {
    os_log_type_t v30 = v22;
    uint64_t v23 = sub_10015B8C8();
    uint64_t v24 = (void *)sub_10016AD24();
    *(_DWORD *)uint64_t v23 = 138412546;
    id v32 = v20;
    uint64_t v25 = v20;
    sub_10016AE5C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v24 = v20;

    *(_WORD *)(v23 + 12) = 2112;
    os_log_type_t v26 = *(NSObject **)&v15[v17];
    if (v26)
    {
      id v32 = v26;
      os_log_type_t v27 = v26;
    }
    else
    {
      id v32 = 0;
    }
    sub_10016AE5C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v24[1] = v26;

    _os_log_impl((void *)&_mh_execute_header, v21, v30, "EnhancedEmergency: created EnhancedEmergencyCoordinator: %@, eedRequestHelper: %@", (uint8_t *)v23, 0x16u);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {

    os_log_type_t v21 = v20;
  }

  sub_1001646D4();
  sub_100162510();
  sub_100163FD0();
  sub_100164124();
  sub_10015D4E4();

  sub_100123384();
}

id sub_10015D084()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v2 parentViewController];

  if (!v3) {
    goto LABEL_9;
  }
  id result = [v2 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  id v6 = [result window];

  if (!v6
    && (sub_1001D30EC(*(void *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState), (uint64_t)&off_1002D1008) & 1) == 0)
  {
LABEL_9:

    return 0;
  }
  id result = [v2 view];
  if (result)
  {
    uint64_t v7 = result;
    [result alpha];
    double v9 = v8;

    return (id)(v9 != 0.0);
  }
LABEL_12:
  __break(1u);
  return result;
}

id sub_10015D1D8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v2 parentViewController];

  if (!v3)
  {

    return 0;
  }
  id result = [v2 view];
  if (result)
  {
    uint64_t v5 = result;
    id v6 = [result window];

    return (id)(v6 != 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10015D2B8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted);
}

uint64_t sub_10015D2F0(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted) = result;
  return result;
}

uint64_t sub_10015D328()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls);
}

void sub_10015D38C(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls) = a1;
  sub_10015D39C();
}

void sub_10015D39C()
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  os_log_type_t v2 = sub_10011EC48(v1, (uint64_t)qword_10032CBE8);
  id v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v5))
  {
    id v6 = (uint8_t *)sub_10016AEF0();
    *(_DWORD *)id v6 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v4, v2, "EnhancedEmergency: should hide video streaming controls: %{BOOL}d", v6, 8u);
    sub_100120278();
  }
  else
  {
  }
  uint64_t v7 = *(void **)&v3[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v7)
  {
    char v8 = v3[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls];
    id v9 = v7;
    sub_100149C58(v8);
  }
}

void sub_10015D4E4()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  id v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    os_log_type_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: setting up app active notification observers");
    sub_100120278();
  }

  id v8 = [self defaultCenter];
  [v8 addObserver:v1 selector:"appWillResignActive" name:UIApplicationWillResignActiveNotification object:0];

  id v9 = sub_10016AEAC();
  uint64_t v13 = v9;
  if (qword_1003205C0 != -1) {
    id v9 = (id)swift_once();
  }
  sub_10016AB88((uint64_t)v9, v10, v11, v12, qword_10032CCF0);

  id v14 = sub_10016AEAC();
  objc_super v18 = v14;
  if (qword_1003205C8 != -1) {
    id v14 = (id)swift_once();
  }
  sub_10016AB88((uint64_t)v14, v15, v16, v17, qword_10032CCF8);

  id v19 = sub_10016AEAC();
  uint64_t v23 = v19;
  if (qword_1003205D0 != -1) {
    id v19 = (id)swift_once();
  }
  sub_10016AB88((uint64_t)v19, v20, v21, v22, qword_10032CD00);

  id v24 = sub_10016AEAC();
  uint64_t v28 = v24;
  if (qword_1003205D8 != -1) {
    id v24 = (id)swift_once();
  }
  sub_10016AB88((uint64_t)v24, v25, v26, v27, qword_10032CD08);

  id v29 = sub_10016AEAC();
  id v30 = v29;
  if (qword_1003205E0 != -1)
  {
    swift_once();
    id v29 = v30;
  }
  [v29 addObserver:v1 selector:"handleBannerUploadRequestPickerDuringStreaming" name:qword_10032CD10 object:0];
}

void sub_10015D7C8()
{
  sub_10015B760();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10011EC48(v1, (uint64_t)qword_10032CBE8);
  uint64_t v2 = v0;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_10016AC70(v4))
  {
    os_log_type_t v5 = (uint8_t *)sub_10015B4AC();
    uint64_t v6 = (void *)sub_10016AEF0();
    *(_DWORD *)os_log_type_t v5 = 138412290;
    uint64_t v7 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v7) {
      id v8 = v7;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "EnhancedEmergency: going to end video streaming and clean eedRequestHelper: %@", v5, 0xCu);
    sub_10011EB3C(&qword_100322A70);
    sub_10016B0C8();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  [*(id *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper] cleanup];
  sub_10015C9E0(0);
  id v9 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v9)
  {
    id v10 = v9;
    sub_100151B74();
  }
  uint64_t v11 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector;
  id v12 = *(id *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector];
  sub_10016EF1C();

  id v13 = *(id *)&v2[v11];
  sub_100170184();

  sub_10015B69C();
}

void sub_10015DA24()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v1)
  {
    uint64_t v2 = v0;
    id v12 = v1;
    if (sub_10015D084())
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      os_log_type_t v4 = (void *)sub_100138D44(v3, (uint64_t)qword_10032CBE8);
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v5))
      {
        uint64_t v6 = (_WORD *)sub_100138CE8();
        sub_10015B9F8(v6);
        sub_1001443D4((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: request to puase video when device is locked");
        sub_100120278();
      }

      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong removeWebRTCViewController:v12];
        swift_unknownObjectRelease();
      }
      sub_10016AE9C();
      sub_100152648();
      id v10 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v10)
      {
        [v10 hideWebRTCViewController:v12];
        swift_unknownObjectRelease();
      }
      [v2 transitionToRTTState:1];
      uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v11)
      {
        [v11 requestToAddResumeCameraLabel];
        swift_unknownObjectRelease();
      }
      if (*(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState] == 3) {
        sub_100160598();
      }
    }
  }
}

void sub_10015DC24()
{
  sub_1001233C4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_10015BA2C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = (uint64_t)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_delegate];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong requestToPresentVideoStreamingRequestBanner];
    swift_unknownObjectRelease();
  }
  id v14 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v14)
  {
    [v14 requestHapticForRequest];
    swift_unknownObjectRelease();
  }
  uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    [v15 requestToEnableVideoStreamingButton];
    swift_unknownObjectRelease();
  }
  uint64_t v37 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController;
  uint64_t v16 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v16)
  {
    uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong();
    id v18 = v16;
    if (v17)
    {
      [v17 removeWebRTCViewController:v18];
      swift_unknownObjectRelease();
    }
    sub_10015C9B0(0);
  }
  id v19 = objc_allocWithZone((Class)type metadata accessor for EmergencyWebRTCViewController());
  id v38 = v3;
  sub_10014C148();
  uint64_t v21 = v20;
  sub_100149C58(v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls]);
  id v22 = v21;
  sub_10015C9B0((uint64_t)v21);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10011EC48(v23, (uint64_t)qword_10032CBE8);
  id v24 = v1;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (sub_10016AC70(v26))
  {
    uint64_t v35 = v11;
    uint64_t v36 = v6;
    uint64_t v27 = sub_10015B8C8();
    uint64_t v28 = (void *)sub_10016AD24();
    *(_DWORD *)uint64_t v27 = 138412546;
    id v29 = v24;
    sub_10016B0B4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v28 = v24;

    *(_WORD *)(v27 + 12) = 2112;
    id v30 = *(void **)&v1[v37];
    if (v30)
    {
      id v31 = v30;
      sub_10016B0B4();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v28[1] = v30;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "EnhancedEmergency: emergencyCoordinator :%@ created webTRCViewController: %@", (uint8_t *)v27, 0x16u);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();

    uint64_t v11 = v35;
    uint64_t v6 = v36;
  }
  else
  {
  }
  swift_unknownObjectWeakAssign();
  id v32 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v32)
  {
    [v32 addWebRTCViewController:v22];
    swift_unknownObjectRelease();
  }
  sub_10015E048();
  id v33 = *(id *)&v24[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector];
  id v34 = [v38 ID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.uuidString.getter();
  sub_10016AE90();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
  sub_10016E2FC(v11, v12);
  swift_bridgeObjectRelease();

  sub_100123384();
}

void sub_10015E048()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 streamingFPS];
    uint64_t v4 = (uint64_t)[v2 streamingBitrate];

    if ((unsigned __int128)(v4 * (__int128)1000) >> 64 != (1000 * v4) >> 63)
    {
      __break(1u);
      return;
    }
    double v5 = (double)(uint64_t)v3;
    double v6 = (double)(1000 * v4);
  }
  else
  {
    double v5 = 24.0;
    double v6 = 800000.0;
  }
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v7)
  {
    id v8 = v7;
    sub_100154534(v5, v6);
  }
}

void sub_10015E140()
{
  sub_10016AF7C();
  sub_10016AF64();
  sub_100122300();
  __chkstk_darwin(v2, v3);
  sub_10013FC4C();
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v4)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    id v6 = v4;
    if (Strong)
    {
      [Strong removeMediaRequestViewController:v6];
      swift_unknownObjectRelease();
    }
    sub_10015C9BC(0);
  }
  id v7 = [objc_allocWithZone((Class)type metadata accessor for EmergencyMediaRequestViewController()) init];
  id v8 = (char *)v7;
  sub_10015C9BC((uint64_t)v7);
  *(void *)&v8[OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate + 8] = &off_1002D2A60;
  swift_unknownObjectWeakAssign();
  uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    [v9 requestToPresentMediaUploadRequestBanner];
    swift_unknownObjectRelease();
  }
  uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    [v10 requestHapticForRequest];
    swift_unknownObjectRelease();
  }
  unsigned __int8 v11 = sub_10015D084();
  uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v11)
  {
    if (v12)
    {
      [v12 requestToPresentMediaUploadRequestBannerDuringStreaming];
      swift_unknownObjectRelease();
    }
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    id v14 = sub_100138D44(v13, (uint64_t)qword_10032CBE8);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (sub_10015B4C4(v15))
    {
      *(_WORD *)sub_100138CE8() = 0;
      sub_10016ADD0((void *)&_mh_execute_header, v14, v16, "EnhancedEmergency: handleMediaUploadRequest, videoStreamingIsOnScreen, inform user about new upload request via a banner");
      sub_100120278();
    }
  }
  else if (v12)
  {
    [v12 addMediaRequestViewController:v8];
    swift_unknownObjectRelease();
  }
  uint64_t v17 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  id v18 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
  id v19 = v17;
  if (v18)
  {
    id v20 = [v18 ID];
    sub_10016AE78();

    id v18 = (void *)UUID.uuidString.getter();
    uint64_t v22 = v21;
    uint64_t v23 = sub_10016ABEC();
    v24(v23);
  }
  else
  {
    uint64_t v22 = 0xE000000000000000;
  }
  sub_10016E2FC((uint64_t)v18, v22);
  swift_bridgeObjectRelease();

  sub_10016AC40();
}

id sub_10015E410()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v2)
  {
    id v3 = v2;
    sub_100152648();
  }

  return [v1 transitionToRTTState:1];
}

void sub_10015E478()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  id v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    double v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: get notification that request wanna dismiss from Jindo action");
    sub_100120278();
  }

  if (sub_10015D084())
  {
    [v1 cancelVideoStreamingRequest];
  }
  else
  {
    sub_10015E564();
  }
}

void sub_10015E564()
{
  sub_10016AF7C();
  sub_10016AF64();
  sub_100122300();
  __chkstk_darwin(v2, v3);
  sub_10013FC4C();
  os_log_type_t v4 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (!v4) {
    goto LABEL_15;
  }
  uint64_t v5 = qword_100320540;
  id v25 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = (void *)sub_100138D44(v6, (uint64_t)qword_10032CBE8);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_10015B380(v8))
  {
    uint64_t v9 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v9);
    sub_10016ABAC((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: emergency coordinator gets notified cancelMediaUploadRequest");
    sub_100120278();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong removeMediaRequestViewController:v25];
    swift_unknownObjectRelease();
  }
  sub_100160BD4();
  sub_10016210C();
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v13)
  {
    id v14 = v13;
    if ([v14 uploadMigitation] == (id)2 && (os_log_type_t v15 = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
    {
      [v15 requestToAddPhotoMitigationLabel];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
  if (v16)
  {
    uint64_t v17 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v18 = v16;
    id v19 = v17;
    id v20 = [v18 ID];
    sub_10016AE78();

    UUID.uuidString.getter();
    uint64_t v21 = sub_10016ACD0();
    v22(v21);
    sub_10016AC54();
    swift_bridgeObjectRelease();

LABEL_15:
    sub_10016AC40();
    return;
  }
  sub_10016AC40();
}

void sub_10015E7F4()
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = sub_100138D44(v1, (uint64_t)qword_10032CBE8);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)sub_100138CE8();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "EnhancedEmergency: get notification that request to choose photo from Jindo action", v4, 2u);
    sub_100120278();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong hideRTTConversationIfNeeded];
    swift_unknownObjectRelease();
  }
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v6)
  {
    id v7 = v6;
    os_log_type_t v8 = (void *)Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v9))
    {
      uint64_t v10 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v10);
      sub_1001443D4((void *)&_mh_execute_header, v11, v12, "EnhancedEmergency: requesting passcode unlock");
      sub_100120278();
    }

    id v13 = [self sharedInstance];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = sub_10012A264();
      *(void *)(v15 + 16) = v7;
      aBlock[4] = sub_10016A9C4;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D380;
      aBlock[3] = &unk_1002D3078;
      uint64_t v16 = _Block_copy(aBlock);
      id v17 = v7;
      swift_release();
      [v14 requestPasscodeUnlockWithCompletion:v16];
      _Block_release(v16);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    id v29 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (sub_10016AEC4(v18, v19, v20, v21, v22, v23, v24, v25, v28, v29))
    {
      os_log_type_t v26 = (_WORD *)sub_100138CE8();
      sub_10015B690(v26);
      sub_10015B4E0((void *)&_mh_execute_header, v30, v27, "EnhancedEmergency: get notification that request to choose photo from Jindo action, but mediaRequestViewController doesn't exist");
      sub_100120278();
    }
  }
}

void sub_10015EA88(char a1, void *a2)
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: got passcode unlock %{BOOL}d", v7, 8u);
    swift_slowDealloc();
  }

  if (a1)
  {
    [a2 requestContinue];
  }
  else
  {
    os_log_type_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: passcode unlock failed, not continuing with media request", v10, 2u);
      swift_slowDealloc();
    }
  }
}

void *sub_10015EC78()
{
  return sub_100166014("EnhancedEmergency: get notification to preview request from banner action", (SEL *)&selRef_hideRTTConversationIfNeeded);
}

void sub_10015ECD4()
{
  sub_10016AF7C();
  sub_10016AF64();
  sub_100122300();
  __chkstk_darwin(v1, v2);
  sub_10013FC4C();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = sub_100138D44(v3, (uint64_t)qword_10032CBE8);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_10016ADD0((void *)&_mh_execute_header, v4, v6, "EnhancedEmergency: handleBannerUploadRequestDismissDuringStreaming");
    sub_100120278();
  }

  id v7 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (!v7) {
    goto LABEL_12;
  }
  id v28 = v7;
  if ([v28 uploadMigitation] != (id)2)
  {

LABEL_12:
    sub_100160BD4();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong requestToEnableMediaUploadButton];
      swift_unknownObjectRelease();
    }
    int v21 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
    if (!v21) {
      goto LABEL_17;
    }
    int v22 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v15 = v21;
    id v16 = v22;
    id v23 = [v15 ID];
    sub_10016AE78();

    UUID.uuidString.getter();
    uint64_t v24 = sub_10016ABEC();
    v25(v24);
    sub_10016AC54();
    swift_bridgeObjectRelease();
LABEL_16:

LABEL_17:
    sub_10016AC40();
    return;
  }
  os_log_type_t v8 = (void *)Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (sub_10015B380(v9))
  {
    uint64_t v10 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v10);
    sub_10016ABAC((void *)&_mh_execute_header, v11, v12, "EnhancedEmergency: handleBannerUploadRequestDismissDuringStreaming, ignore user's dismiss request due to upload mitigation to drop the request");
    sub_100120278();
  }

  id v13 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
  if (v13)
  {
    id v14 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v15 = v13;
    id v16 = v14;
    id v17 = [v15 ID];
    sub_10016AE78();

    UUID.uuidString.getter();
    uint64_t v18 = sub_10016ABEC();
    v19(v18);
    sub_10016AC54();
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  sub_10016AC40();
}

void sub_10015EFE4()
{
}

void sub_10015F004(char a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (swift_beginAccess(), (uint64_t v7 = swift_unknownObjectWeakLoadStrong()) != 0))
  {
    os_log_type_t v8 = v7;
    os_log_type_t v9 = *(void **)(v7 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
    if (v9)
    {
      uint64_t v10 = v9;
      if ([v10 uploadMigitation] == (id)2)
      {
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v11 = type metadata accessor for Logger();
        sub_10011EC48(v11, (uint64_t)qword_10032CBE8);
        uint64_t v12 = Logger.logObject.getter();
        os_log_type_t v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v12, v13))
        {
          id v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "EnhancedEmergency: handleBannerUploadRequestPickerDuringStreaming, cannot start upload request due to upload mitigation to drop request", v14, 2u);
          swift_slowDealloc();
        }

        id v15 = *(Class *)((char *)&v8->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
        if (v15)
        {
          id v16 = *(Class *)((char *)&v8->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
          id v17 = v15;
          id v18 = v16;
          id v19 = [v17 ID];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v20 = UUID.uuidString.getter();
          uint64_t v22 = v21;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
          sub_10016E308(v20, v22);
          swift_bridgeObjectRelease();

          os_log_type_t v8 = v17;
        }
        else
        {

          os_log_type_t v8 = v10;
        }
        goto LABEL_45;
      }
    }
    uint64_t v26 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController;
    if (!*(Class *)((char *)&v8->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController))
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10011EC48(v27, (uint64_t)qword_10032CBE8);
      id v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "EnhancedEmergency: handling media banner accept, didn't find an media request viewController, create a new one", v30, 2u);
        swift_slowDealloc();
      }

      id v31 = [objc_allocWithZone((Class)type metadata accessor for EmergencyMediaRequestViewController()) init];
      id v32 = (char *)v31;
      sub_10015C9BC((uint64_t)v31);
      id v33 = v8;
      id v34 = Logger.logObject.getter();
      int v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, (os_log_type_t)v35))
      {
        uint64_t v70 = v34;
        HIDWORD(v72) = v35;
        uint64_t v74 = v32;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 138412546;
        id v76 = v33;
        uint64_t v73 = v33;
        uint64_t v37 = v33;
        id v71 = v77;
        id v38 = (void *)v69;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v38 = v8;

        *(_WORD *)(v36 + 12) = 2112;
        uint64_t v75 = v26;
        id v39 = *(Class *)((char *)&v8->isa + v26);
        if (v39)
        {
          id v76 = *(NSObject **)((char *)&v8->isa + v26);
          id v40 = v39;
        }
        else
        {
          id v76 = 0;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v41 = v70;
        v38[1] = v39;

        _os_log_impl((void *)&_mh_execute_header, v41, BYTE4(v72), "EnhancedEmergency: emergencyCoordinator :%@ created emegencyMediaRequestViewController: %@", (uint8_t *)v36, 0x16u);
        sub_10011EB3C(&qword_100322A70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        id v32 = v74;
        uint64_t v26 = v75;
      }
      else
      {

        id v41 = v33;
      }

      *(void *)&v32[OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate + 8] = &off_1002D2A60;
      swift_unknownObjectWeakAssign();
    }
    sub_100160BD4();
    id v42 = *(Class *)((char *)&v8->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
    if (v42)
    {
      id v43 = *(Class *)((char *)&v8->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
      id v44 = v42;
      id v45 = v43;
      id v46 = [v44 ID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v47 = UUID.uuidString.getter();
      uint64_t v49 = v48;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      sub_10016E308(v47, v49);
      swift_bridgeObjectRelease();
    }
    uint64_t v50 = *(Class *)((char *)&v8->isa + v26);
    if (v50)
    {
      id v51 = v50;
      if (sub_10015D084())
      {
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v52 = type metadata accessor for Logger();
        sub_10011EC48(v52, (uint64_t)qword_10032CBE8);
        id v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          Class v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Class v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "EnhancedEmergency: we have an ongoing video streaming request, pause the video and handle media upload accept from banner", v55, 2u);
          swift_slowDealloc();
        }

        sub_10015F8F8(v56, v57, v58, v59, v60, v61, v62, v63, (os_log_type_t)v69, (uint64_t)v70, (uint64_t)v71, v72, (uint64_t)v73, (uint64_t)v74, v75, (uint64_t)v76, v77[0], v77[1], v77[2],
          v77[3],
          *(uint64_t *)type,
          v79);
      }
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      sub_10011EC48(v64, (uint64_t)qword_10032CBE8);
      id v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v65, v66))
      {
        id v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v67 = 0;
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "EnhancedEmergency: handling media upload accept from banner", v67, 2u);
        swift_slowDealloc();
      }

      [v51 requestContinue];
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong addMediaRequestViewController:v51];
        swift_unknownObjectRelease();
      }
      sub_1001D7F34();
    }
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10011EC48(v23, (uint64_t)qword_10032CBE8);
    os_log_type_t v8 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v24))
    {
      int v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v24, "EnhancedEmergency: handleBannerUploadRequestPickerDuringStreaming, but passcode unlock failed or self is nil, early return", v25, 2u);
      swift_slowDealloc();
    }
  }
LABEL_45:
}

void sub_10015F8F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_log_type_t type, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10015B760();
  uint64_t v23 = v22;
  os_log_type_t v24 = *(void **)&v22[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v24)
  {
    id typea = v24;
    if (sub_10015D084())
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      uint64_t v26 = (void *)sub_100138D44(v25, (uint64_t)qword_10032CBE8);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v27))
      {
        id v28 = (_WORD *)sub_100138CE8();
        sub_10015B9F8(v28);
        sub_1001443D4((void *)&_mh_execute_header, v29, v30, "EnhancedEmergency: handling video stream button events, webview is on screen, remove it");
        sub_100120278();
      }

      sub_100152648();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong hideWebRTCViewController:typea];
        swift_unknownObjectRelease();
      }
      sub_10016213C();
      [v23 transitionToRTTState:1];
      goto LABEL_25;
    }
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    int v56 = (void *)sub_100138D44(v55, (uint64_t)qword_10032CBE8);
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v57))
    {
      int v58 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v58);
      sub_1001443D4((void *)&_mh_execute_header, v59, v60, "EnhancedEmergency: handling video stream button events, webview is not on screen, add it back and start video streaming");
      sub_100120278();
    }

    int v61 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v61)
    {
      [v61 addWebRTCViewController:typea];
      swift_unknownObjectRelease();
    }
    uint64_t v62 = *(void *)&v23[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState];
    if (v62 == 7)
    {
      if (v23[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted] == 1)
      {
        sub_10016AE9C();
        sub_1001514B4();
        goto LABEL_25;
      }
    }
    else if (v62 != 4)
    {
      uint64_t v63 = sub_10016AE9C();
      sub_100151FB8(v63, v64);
      [v23 transitionToRTTState:3];
LABEL_25:
      sub_10015B69C();

      return;
    }
    sub_10015312C();
    double v68 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v68) {
      goto LABEL_25;
    }
    [v68 bringWebRTCViewControllerToFront:typea];

    sub_10015B69C();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    os_log_type_t v33 = sub_10011EC48(v32, (uint64_t)qword_10032CBE8);
    id v34 = (void *)Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (sub_1001203DC(v35))
    {
      uint64_t v36 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v36);
      sub_1001443D4((void *)&_mh_execute_header, v37, v38, "EnhancedEmergency: handling video stream button events, didn't find an existing webview, create a new one");
      sub_100120278();
    }

    id v39 = *(void **)&v23[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest];
    id v40 = objc_allocWithZone((Class)type metadata accessor for EmergencyWebRTCViewController());
    id v41 = v39;
    sub_10014C148();
    id v43 = v42;
    sub_100149C58(v23[OBJC_IVAR___PHEnhancedEmergencyCoordinator_shouldHideVideoStreamingControls]);
    id v44 = v43;
    sub_10015C9B0((uint64_t)v43);
    id v45 = v44;
    id v46 = v23;
    id v47 = v45;
    uint64_t v48 = v46;
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (sub_10015B380(v50))
    {
      os_log_type_t typeb = v33;
      uint64_t v51 = sub_10015B8C8();
      uint64_t v52 = (void *)sub_10016AD24();
      *(_DWORD *)uint64_t v51 = 138412546;
      id v53 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v52 = v48;

      *(_WORD *)(v51 + 12) = 2112;
      id v54 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v52[1] = v43;

      _os_log_impl((void *)&_mh_execute_header, v49, typeb, "EnhancedEmergency: emergencyCoordinator :%@ created webTRCViewController: %@", (uint8_t *)v51, 0x16u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }
    else
    {
    }
    swift_unknownObjectWeakAssign();
    id v67 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v67)
    {
      [v67 addWebRTCViewController:v47];
      swift_unknownObjectRelease();
    }
    sub_10015E048();

    sub_10015B69C();
  }
}

#error "10015FE34: call analysis failed (funcsize=18)"

void sub_10015FE5C()
{
}

void sub_10015FE7C(uint64_t a1, uint64_t a2)
{
  id v4 = [self sharedInstance];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_10012A264();
    swift_unknownObjectWeakInit();
    v8[4] = a1;
    void v8[5] = v6;
    v8[0] = _NSConcreteStackBlock;
    sub_10016AE6C();
    _DWORD v8[2] = sub_10017D380;
    _OWORD v8[3] = a2;
    uint64_t v7 = _Block_copy(v8);
    swift_release();
    [v5 requestPasscodeUnlockWithCompletion:v7, v8[0]];
    _Block_release(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_10015FF70(char a1)
{
  if ((a1 & 1) != 0 && (swift_beginAccess(), (uint64_t v1 = swift_unknownObjectWeakLoadStrong()) != 0))
  {
    uint64_t v2 = (char *)v1;
    uint64_t v3 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController;
    id v4 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
    if (v4) {
      goto LABEL_19;
    }
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10011EC48(v5, (uint64_t)qword_10032CBE8);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: handling media upload button events, didn't find an media request viewController, create a new one", v8, 2u);
      swift_slowDealloc();
    }

    id v9 = [objc_allocWithZone((Class)type metadata accessor for EmergencyMediaRequestViewController()) init];
    uint64_t v10 = (char *)v9;
    sub_10015C9BC((uint64_t)v9);
    uint64_t v11 = v2;
    uint64_t v12 = Logger.logObject.getter();
    int v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      HIDWORD(v40) = v13;
      uint64_t v42 = (uint64_t)v10;
      uint64_t v14 = swift_slowAlloc();
      id v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412546;
      id v16 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v41 = (uint64_t)v15;
      *id v15 = v2;

      *(_WORD *)(v14 + 12) = 2112;
      uint64_t v43 = v3;
      id v17 = *(void **)&v2[v3];
      if (v17)
      {
        uint64_t v44 = *(void *)&v2[v3];
        id v18 = v17;
      }
      else
      {
        uint64_t v44 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v15[1] = v17;

      _os_log_impl((void *)&_mh_execute_header, v12, BYTE4(v40), "EnhancedEmergency: emergencyCoordinator :%@ created emegencyMediaRequestViewController: %@", (uint8_t *)v14, 0x16u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v10 = (char *)v42;
    }
    else
    {

      uint64_t v12 = v11;
    }

    *(void *)&v10[OBJC_IVAR___PHEmergencyMediaRequestViewController_delegate + 8] = &off_1002D2A60;
    swift_unknownObjectWeakAssign();

    id v4 = *(void **)&v2[v3];
    if (v4)
    {
LABEL_19:
      uint64_t v11 = v4;
      if (sub_10015D084())
      {
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        sub_10011EC48(v22, (uint64_t)qword_10032CBE8);
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "EnhancedEmergency: we have an ongoing video streaming request, pause the video and handle handleMediaUploadButtonTapped", v25, 2u);
          swift_slowDealloc();
        }

        sub_10015F8F8(v26, v27, v28, v29, v30, v31, v32, v33, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49,
          v50,
          v51,
          v52);
      }
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong addMediaRequestViewController:v11];
        swift_unknownObjectRelease();
      }
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_10011EC48(v35, (uint64_t)qword_10032CBE8);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "EnhancedEmergency: handling media upload button events", v38, 2u);
        swift_slowDealloc();
      }

      if (*(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState] == 1) {
        sub_1001D7F34();
      }
    }
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10011EC48(v19, (uint64_t)qword_10032CBE8);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v20, "EnhancedEmergency: wanna handle MediaUploadButtonTapped, but passcode unlock failed or self is nil", v21, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100160598()
{
  sub_1001233C4();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  type metadata accessor for UUID();
  sub_100122300();
  __chkstk_darwin(v5, v6);
  sub_10016AC10();
  os_log_type_t v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest];
  if (!v7)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    uint64_t v52 = sub_100138D44(v9, (uint64_t)qword_10032CBE8);
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v52, v10)) {
      goto LABEL_28;
    }
    uint64_t v11 = (_DWORD *)sub_10015B4AC();
    v53[0] = sub_100120414();
    _DWORD *v11 = 136315138;
    sub_10016AD3C();
    uint64_t v12 = String.init<A>(reflecting:)();
    uint64_t v54 = sub_1001412B0(v12, v13, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10016B050((void *)&_mh_execute_header, v14, v15, "EnhancedEmergency: trying to update state: %s for video streaming request but it's nil");
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
LABEL_25:

    goto LABEL_26;
  }
  uint64_t v52 = *(NSObject **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest];
  if (v4 == 1)
  {
    v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequestHasBeenAccepted] = 1;
    id v8 = v7;
  }
  else
  {
    id v16 = v7;
    if (![v0 isShownAboveCoverSheet]
      || *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState] != 4)
    {
      [v0 transitionToRTTState:1];
    }
  }
  uint64_t v17 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState;
  if (*(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState] != v4)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    int v27 = sub_100138D44(v26, (uint64_t)qword_10032CBE8);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (sub_10016AE20(v28))
    {
      int v29 = (_DWORD *)sub_10015B4AC();
      v53[0] = sub_100120414();
      _DWORD *v29 = 136315138;
      uint64_t v54 = v4;
      type metadata accessor for CLEEDRequestState(0);
      uint64_t v30 = sub_10016B070();
      uint64_t v32 = sub_1001412B0(v30, v31, v53);
      sub_10016ABD8(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10016AF2C((void *)&_mh_execute_header, v27, v1, "EnhancedEmergency: set video streaming state to: %s");
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }

    *(void *)&v0[v17] = v4;
    int v33 = (void *)Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (sub_10016AE04(v34))
    {
      uint64_t v35 = (_DWORD *)sub_10015B4AC();
      v53[0] = sub_100120414();
      *uint64_t v35 = 136315138;
      sub_10016AD3C();
      uint64_t v36 = sub_10016B070();
      uint64_t v38 = sub_1001412B0(v36, v37, v53);
      sub_10016ABD8(v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10016AFB0((void *)&_mh_execute_header, v39, v40, "EnhancedEmergency: calling eed to update video streaming state to: %s");
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }

    uint64_t v41 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v41)
    {
      id v42 = v41;
      id v43 = [v52 ID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_100138D8C();
      v44();
      uint64_t v45 = (void *)swift_allocObject();
      void v45[2] = v4;
      v45[3] = v52;
      v45[4] = v2;
      v53[4] = (uint64_t)sub_10016A91C;
      v53[5] = (uint64_t)v45;
      v53[0] = (uint64_t)_NSConcreteStackBlock;
      v53[1] = 1107296256;
      v53[2] = (uint64_t)sub_100160BD0;
      v53[3] = (uint64_t)&unk_1002D2FB0;
      uint64_t v46 = _Block_copy(v53);
      uint64_t v47 = v52;
      uint64_t v48 = v2;
      uint64_t v49 = swift_release();
      sub_10016AF90(v49, "handleResponse:forRequest:completion:");

      _Block_release(v46);
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  Class isa = (void *)sub_100138D44(v18, (uint64_t)qword_10032CBE8);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (sub_100138CCC(v20))
  {
    uint64_t v21 = (_DWORD *)sub_10015B4AC();
    v53[0] = sub_100120414();
    _DWORD *v21 = 136315138;
    sub_10016AD3C();
    uint64_t v22 = String.init<A>(reflecting:)();
    uint64_t v54 = sub_1001412B0(v22, v23, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10016AFF0((void *)&_mh_execute_header, v24, v25, "EnhancedEmergency: trying to update state: %s for video streaming, but already in that state");
    sub_10016B0C8();
    sub_100120278();
    sub_100120278();

LABEL_24:
LABEL_26:
    sub_100123384();
    return;
  }

LABEL_28:
  sub_100123384();
}

void sub_100160BD4()
{
  sub_1001233C4();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  type metadata accessor for UUID();
  sub_100122300();
  __chkstk_darwin(v5, v6);
  sub_10016AC28();
  os_log_type_t v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest];
  if (v7)
  {
    uint64_t v8 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState;
    uint64_t v9 = *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState];
    uint64_t v10 = qword_100320540;
    uint64_t v59 = v7;
    if (v9 == v4)
    {
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      Class isa = (void *)sub_100138D44(v11, (uint64_t)qword_10032CBE8);
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (sub_100138CCC(v13))
      {
        uint64_t v14 = (_DWORD *)sub_10015B4AC();
        v60[0] = sub_100120414();
        _DWORD *v14 = 136315138;
        sub_10016AD3C();
        uint64_t v15 = String.init<A>(reflecting:)();
        uint64_t v61 = sub_1001412B0(v15, v16, v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10016AFF0((void *)&_mh_execute_header, v17, v18, "EnhancedEmergency: trying to update state: %s for media upload, but already in that state");
        sub_10016B0C8();
        sub_100120278();
        sub_100120278();

LABEL_29:
LABEL_31:
        sub_100123384();
        return;
      }

      goto LABEL_20;
    }
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    int v27 = sub_100138D44(v26, (uint64_t)qword_10032CBE8);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (sub_10016AE20(v28))
    {
      int v29 = (_DWORD *)sub_10015B4AC();
      v60[0] = sub_100120414();
      _DWORD *v29 = 136315138;
      uint64_t v61 = v4;
      type metadata accessor for CLEEDRequestState(0);
      uint64_t v30 = sub_10016B070();
      uint64_t v32 = sub_1001412B0(v30, v31, v60);
      sub_10016ABD8(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10016AF2C((void *)&_mh_execute_header, v27, v1, "EnhancedEmergency: set media upload state to: %s");
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }

    *(void *)&v2[v8] = v4;
    if (v4 == 4)
    {
      uint64_t v33 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount;
      uint64_t v34 = *(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount];
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35)
      {
        __break(1u);
        return;
      }
      *(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount] = v36;
      unint64_t v37 = v2;
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (sub_10016AE20(v39))
      {
        *(_DWORD *)sub_10015B4AC() = 134217984;
        v60[0] = *(void *)&v2[v33];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        sub_10016ADEC((void *)&_mh_execute_header, v38, v1, "EnhancedEmergency: User has NotNow(ed) the media upload request. NotNow Request count: %ld");
        sub_100120278();
      }
      else
      {

        uint64_t v38 = v37;
      }
    }
    id v42 = (void *)Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (sub_10016AE04(v43))
    {
      uint64_t v44 = (_DWORD *)sub_10015B4AC();
      v60[0] = sub_100120414();
      _DWORD *v44 = 136315138;
      sub_10016AD3C();
      uint64_t v45 = sub_10016B070();
      uint64_t v47 = sub_1001412B0(v45, v46, v60);
      sub_10016ABD8(v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10016AFB0((void *)&_mh_execute_header, v48, v49, "EnhancedEmergency: calling eed to update media upload state to: %s");
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }

    uint64_t v50 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v50)
    {
      id v51 = v50;
      id v52 = [v59 ID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_100138D8C();
      v53();
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v4;
      v54[3] = v59;
      v54[4] = v2;
      v60[4] = (uint64_t)sub_10016A8BC;
      v60[5] = (uint64_t)v54;
      v60[0] = (uint64_t)_NSConcreteStackBlock;
      v60[1] = 1107296256;
      v60[2] = (uint64_t)sub_100160BD0;
      v60[3] = (uint64_t)&unk_1002D2F60;
      uint64_t v55 = _Block_copy(v60);
      int v56 = v59;
      os_log_type_t v57 = v2;
      uint64_t v58 = swift_release();
      sub_10016AF90(v58, "handleResponse:forRequest:completion:");

      _Block_release(v55);
      goto LABEL_29;
    }
LABEL_30:

    goto LABEL_31;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v59 = sub_100138D44(v19, (uint64_t)qword_10032CBE8);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v59, v20))
  {
    uint64_t v21 = (_DWORD *)sub_10015B4AC();
    v60[0] = sub_100120414();
    _DWORD *v21 = 136315138;
    sub_10016AD3C();
    uint64_t v22 = String.init<A>(reflecting:)();
    uint64_t v61 = sub_1001412B0(v22, v23, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10016B050((void *)&_mh_execute_header, v24, v25, "EnhancedEmergency: trying to update state: %s for media upload request but it's nil");
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
    goto LABEL_30;
  }
LABEL_20:
  sub_100123384();
}

void sub_100161268(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, const char *a7, void (*a8)(uint64_t), void *a9, const char *a10)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10011EC48(v12, (uint64_t)qword_10032CBE8);
    swift_errorRetain();
    id v13 = a4;
    swift_errorRetain();
    id v14 = v13;
    oslog = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = sub_100120414();
      uint64_t v17 = (void *)sub_10016AD24();
      uint64_t v65 = sub_100120414();
      *(_DWORD *)uint64_t v16 = 136315650;
      type metadata accessor for CLEEDRequestState(0);
      uint64_t v18 = String.init<A>(reflecting:)();
      sub_1001412B0(v18, v19, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2112;
      id v20 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v17 = v14;

      *(_WORD *)(v16 + 22) = 2112;
      swift_errorRetain();
      uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v17[1] = v64;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, a7, (uint8_t *)v16, 0x20u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      sub_100120278();
      sub_10016B030();
      sub_100120278();
      sub_100120278();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_14;
  }
  if (!a1) {
    return;
  }
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (!v24) {
    return;
  }
  uint64_t v25 = v24;
  oslog = a1;
  a8(v25);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_10011EC48(v26, (uint64_t)qword_10032CBE8);
  int v27 = a5;
  os_log_type_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v28, v29))
  {

LABEL_14:

    return;
  }
  uint64_t v30 = sub_100120414();
  unint64_t v31 = (void *)sub_10016AD24();
  uint64_t v59 = sub_100120414();
  uint64_t v65 = v59;
  *(_DWORD *)uint64_t v30 = 136315650;
  type metadata accessor for CLEEDRequestState(0);
  uint64_t v32 = String.init<A>(reflecting:)();
  uint64_t v34 = sub_1001412B0(v32, v33, &v65);
  sub_10016AF08(v34, v35, v36, v30 + 12, v37, v38, v39, v40, (uint64_t)format, v59, (uint64_t)oslog, v34);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t v41 = swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 12) = 2112;
  uint64_t v48 = *(void **)&v27[*a9];
  if (v48)
  {
    id v49 = v48;
    sub_10016AF08((uint64_t)v49, v50, v51, v52, v53, v54, v55, v56, (uint64_t)formata, v60, (uint64_t)osloga, (char)v48);
  }
  else
  {
    sub_10016AF08(v41, v42, v43, v30 + 22, v44, v45, v46, v47, (uint64_t)formata, v60, (uint64_t)osloga, 0);
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *unint64_t v31 = v48;

  *(_WORD *)(v30 + 22) = 2112;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  v31[1] = 0;
  _os_log_impl((void *)&_mh_execute_header, v28, v29, a10, (uint8_t *)v30, 0x20u);
  sub_10011EB3C(&qword_100322A70);
  swift_arrayDestroy();
  sub_100120278();
  sub_10016B030();
  sub_100120278();
  sub_100120278();
}

void sub_100161774()
{
  sub_1001233C4();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  type metadata accessor for UUID();
  sub_100122300();
  __chkstk_darwin(v5, v6);
  sub_10013FC4C();
  if (!v4)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v53 = sub_100138D44(v8, (uint64_t)qword_10032CBE8);
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v9))
    {
      uint64_t v10 = (_WORD *)sub_100138CE8();
      sub_10015B690(v10);
      sub_10015B4E0((void *)&_mh_execute_header, v53, v11, "EnhancedEmergency: new video streaming request is nil");
      sub_100120278();
    }
    goto LABEL_23;
  }
  os_log_type_t v7 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation];
  if (!v7)
  {
    id v12 = v4;
    goto LABEL_10;
  }
  id v51 = v4;
  id v52 = v7;
  if (([v52 newStreamingAllowed] & 1) == 0)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    unint64_t v31 = (void *)sub_100138D44(v30, (uint64_t)qword_10032CBE8);
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (sub_10016AB5C(v32))
    {
      unint64_t v33 = (_WORD *)sub_100138CE8();
      sub_10016AC04(v33);
      sub_1001443F4((void *)&_mh_execute_header, v34, v35, "EnhancedEmergency: setVideoStreamingRequest, new video streaming request not allowed due to mitigations in place, early return");
      sub_100120278();
    }
    else
    {
    }
LABEL_23:
    sub_100123384();

    return;
  }

LABEL_10:
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10011EC48(v13, (uint64_t)qword_10032CBE8);
  id v14 = v4;
  os_log_type_t v15 = (void *)Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  uint64_t v50 = v1;
  if (sub_10016ACB4(v16))
  {
    uint64_t v17 = (_DWORD *)sub_10015B4AC();
    uint64_t v18 = (void *)sub_10016AEF0();
    _DWORD *v17 = 138412290;
    id v49 = v2;
    id v19 = v14;
    id v20 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v18 = v4;

    id v14 = v19;
    uint64_t v2 = v49;
    sub_10016B010();
    sub_10016ADEC(v21, v22, v23, v24);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  if (sub_10015D1D8() & 1) != 0 || (sub_10015D084())
  {
    uint64_t v25 = (void *)Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (sub_10016AB5C(v26))
    {
      int v27 = (_WORD *)sub_100138CE8();
      sub_10016AC04(v27);
      sub_1001443F4((void *)&_mh_execute_header, v28, v29, "EnhancedEmergency: we have an ongoing request, wait until it's finished before it can be opened");
      sub_100120278();
    }
    else
    {
    }
LABEL_33:
    sub_100123384();
    return;
  }
  uint64_t v38 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount;
  uint64_t v39 = *(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount];
  BOOL v40 = __OFADD__(v39, 1);
  uint64_t v41 = v39 + 1;
  if (!v40)
  {
    *(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount] = v41;
    uint64_t v42 = v2;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (sub_10016AE04(v44))
    {
      *(_DWORD *)sub_10015B4AC() = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      sub_10016ADEC((void *)&_mh_execute_header, v43, (os_log_type_t)v14, "EnhancedEmergency: setVideoStreamingRequest, streamingRequestCount:%ld after receiving the request");
      sub_100120278();
    }
    else
    {

      uint64_t v43 = v42;
    }

    id v45 = v14;
    sub_10015C9EC((uint64_t)v4);
    *(Class *)((char *)&v42->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState) = (Class)3;
    id v46 = *(id *)((char *)&v42->isa + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v47 = [v45 ID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.uuidString.getter();
    sub_10016AE90();
    sub_100138D8C();
    v48();
    sub_10016E228(1, v50, v38);
    swift_bridgeObjectRelease();

    sub_10015DC24();
    goto LABEL_33;
  }
  __break(1u);
}

void sub_100161CA0()
{
  sub_1001233C4();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10015BA2C();
  uint64_t v12 = v11 - v10;
  if (v4)
  {
    uint64_t v13 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
    if (!v13)
    {
      id v18 = v4;
LABEL_10:
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10011EC48(v19, (uint64_t)qword_10032CBE8);
      id v20 = v4;
      uint64_t v21 = (void *)Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (sub_10016ACB4(v22))
      {
        uint64_t v49 = v2;
        os_log_type_t v23 = (_DWORD *)sub_10015B4AC();
        uint64_t v45 = v12;
        uint64_t v24 = (void *)sub_10016AEF0();
        _DWORD *v23 = 138412290;
        uint64_t v1 = (uint64_t)(v23 + 1);
        id v25 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v24 = v4;

        sub_10016B010();
        sub_10016AF2C(v26, v27, v28, v29);
        sub_10011EB3C(&qword_100322A70);
        swift_arrayDestroy();
        uint64_t v12 = v45;
        sub_100120278();
        uint64_t v2 = v49;
        sub_100120278();
      }
      else
      {
      }
      if (sub_10015D1D8())
      {
        uint64_t v30 = (void *)Logger.logObject.getter();
        os_log_type_t v31 = static os_log_type_t.default.getter();
        if (sub_10016AB5C(v31))
        {
          os_log_type_t v32 = (_WORD *)sub_100138CE8();
          sub_10016AC04(v32);
          sub_1001443F4((void *)&_mh_execute_header, v33, v34, "EnhancedEmergency: we have an ongoing request, wait until it's finished before it can be opened");
          sub_100120278();

LABEL_28:
          sub_100123384();
          return;
        }
      }
      else
      {
        id v20 = v20;
        sub_10015CA64((uint64_t)v4);
        *(void *)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState) = 3;
        id v35 = *(id *)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
        id v36 = [v20 ID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        UUID.uuidString.getter();
        sub_10016AE90();
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v5);
        sub_10016E228(2, v12, v1);
        swift_bridgeObjectRelease();

        sub_10015E140();
      }

      goto LABEL_28;
    }
    id v46 = v4;
    id v47 = v13;
    if ([v47 newUploadAllowed])
    {

      goto LABEL_10;
    }
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    uint64_t v38 = (void *)sub_100138D44(v37, (uint64_t)qword_10032CBE8);
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (sub_10016AB5C(v39))
    {
      BOOL v40 = (_WORD *)sub_100138CE8();
      sub_10016AC04(v40);
      sub_1001443F4((void *)&_mh_execute_header, v41, v42, "EnhancedEmergency: setMediaUploadRequest, new upload request not allowed due to mitigations in place, early return");
      sub_100120278();
    }
    else
    {
    }
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    uint64_t v48 = sub_100138D44(v14, (uint64_t)qword_10032CBE8);
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v15))
    {
      os_log_type_t v16 = (_WORD *)sub_100138CE8();
      sub_10015B690(v16);
      sub_10015B4E0((void *)&_mh_execute_header, v48, v17, "EnhancedEmergency: new media upload request is nil");
      sub_100120278();
    }
  }
  sub_100123384();
}

void sub_10016210C()
{
}

void sub_10016213C()
{
}

void sub_10016216C()
{
  sub_1001233C4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100122300();
  uint64_t v45 = v7;
  uint64_t v46 = v6;
  __chkstk_darwin(v6, v8);
  sub_100138CB8();
  uint64_t v42 = v9;
  sub_100138DB4();
  type metadata accessor for DispatchQoS();
  sub_100122300();
  uint64_t v43 = v11;
  uint64_t v44 = v10;
  __chkstk_darwin(v10, v12);
  sub_100138CB8();
  uint64_t v41 = v13;
  sub_100138DB4();
  uint64_t v40 = type metadata accessor for DispatchTime();
  sub_100122300();
  uint64_t v15 = v14;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  id v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  os_log_type_t v23 = (char *)&v39 - v22;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  id v25 = (void *)sub_100138D44(v24, (uint64_t)qword_10032CBE8);
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (sub_10016ACB4(v26))
  {
    int v27 = (_WORD *)sub_100138CE8();
    sub_10016AC04(v27);
    sub_10016B010();
    _os_log_impl(v28, v29, v30, v31, v2, 2u);
    sub_100120278();
  }

  sub_100123340(0, (unint64_t *)&qword_100321370);
  os_log_type_t v32 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  os_log_type_t v39 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v33 = v40;
  v39(v20, v40);
  uint64_t v34 = sub_10012A264();
  *(void *)(v34 + 16) = v5;
  v47[4] = v4;
  v47[5] = v34;
  v47[0] = _NSConcreteStackBlock;
  v47[1] = 1107296256;
  v47[2] = sub_10012EDF4;
  v47[3] = v2;
  id v35 = _Block_copy(v47);
  id v36 = v5;
  swift_release();
  static DispatchQoS.unspecified.getter();
  v47[0] = _swiftEmptyArrayStorage;
  sub_10016A690((unint64_t *)&qword_1003218E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10011EB3C((uint64_t *)&unk_100321380);
  sub_10016A9CC((unint64_t *)&qword_1003218F0, (uint64_t *)&unk_100321380);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v35);

  sub_100138D8C();
  v37();
  sub_100138D8C();
  v38();
  v39(v23, v33);
  sub_100123384();
}

void sub_100162510()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: fetch all pending requests");
    sub_100120278();
  }

  if (*(void *)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper])
  {
    uint64_t v8 = sub_10012A264();
    *(void *)(v8 + 16) = v1;
    void v12[4] = sub_10016A7F8;
    void v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    sub_10016AE6C();
    void v12[2] = sub_100163F30;
    void v12[3] = &unk_1002D2D30;
    _Block_copy(v12);
    id v9 = sub_10016B114();
    uint64_t v10 = v1;
    uint64_t v11 = swift_release();
    sub_10016B09C(v11, "fetchAllPendingRequestsWithCompletion:");
    _Block_release(v3);
  }
}

void sub_100162664(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (qword_100320540 != -1) {
      goto LABEL_45;
    }
    goto LABEL_3;
  }
  if (!a1)
  {
    if (qword_100320540 != -1) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  id v67 = a3;
  double v68 = v16;
  uint64_t v69 = v10;
  uint64_t v70 = v14;
  uint64_t v71 = v13;
  uint64_t v72 = v7;
  uint64_t v73 = v6;
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v76 = a1 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v77 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  int v27 = &_ss4Int8VN_ptr;
  os_log_type_t v28 = qword_10032CBE8;
  os_log_t v29 = &_ss4Int8VN_ptr;
  *(void *)&long long v30 = 136315138;
  long long v75 = v30;
  uint64_t v74 = (char *)&type metadata for Any + 8;
  if (!v25) {
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v31 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  for (unint64_t i = v31 | (v26 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v26 << 6))
  {
    sub_10013BCE8(*(void *)(a1 + 48) + 40 * i, (uint64_t)v88);
    v86[0] = v88[0];
    v86[1] = v88[1];
    uint64_t v87 = v89;
    v36.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    self;
    uint64_t v37 = swift_dynamicCastObjCClass();
    if (v37)
    {
      uint64_t v54 = v37;
      sub_100123340(0, (unint64_t *)&qword_100321370);
      uint64_t v55 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v56 = swift_allocObject();
      os_log_type_t v57 = v67;
      *(void *)(v56 + 16) = v67;
      *(void *)(v56 + 24) = v54;
      os_log_type_t v83 = sub_10016A808;
      uint64_t v84 = v56;
      aBlock = _NSConcreteStackBlock;
      uint64_t v80 = 1107296256;
      uint64_t v58 = &unk_1002D2DD0;
LABEL_42:
      uint64_t v81 = sub_10012EDF4;
      id v82 = v58;
      uint64_t v61 = _Block_copy(&aBlock);
      id v62 = v57;
      uint64_t v63 = v36.isa;
      swift_release();
      uint64_t v64 = v68;
      static DispatchQoS.unspecified.getter();
      aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10016A690((unint64_t *)&qword_1003218E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10011EB3C((uint64_t *)&unk_100321380);
      sub_10016A9CC((unint64_t *)&qword_1003218F0, (uint64_t *)&unk_100321380);
      uint64_t v65 = v69;
      uint64_t v66 = v73;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v61);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v65, v66);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v71);
      sub_10013B8C0((uint64_t)v86);
LABEL_43:
      swift_release();
      return;
    }

    v36.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    self;
    uint64_t v38 = swift_dynamicCastObjCClass();
    if (v38)
    {
      uint64_t v59 = v38;
      sub_100123340(0, (unint64_t *)&qword_100321370);
      uint64_t v55 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v60 = swift_allocObject();
      os_log_type_t v57 = v67;
      *(void *)(v60 + 16) = v67;
      *(void *)(v60 + 24) = v59;
      os_log_type_t v83 = sub_10016A800;
      uint64_t v84 = v60;
      aBlock = _NSConcreteStackBlock;
      uint64_t v80 = 1107296256;
      uint64_t v58 = &unk_1002D2D80;
      goto LABEL_42;
    }

    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_10011EC48(v39, (uint64_t)v28);
    sub_10013BCE8((uint64_t)v86, (uint64_t)&aBlock);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v78 = v26;
      uint64_t v43 = a1;
      uint64_t v44 = v29;
      uint64_t v45 = v28;
      uint64_t v46 = v27;
      uint64_t v47 = v42;
      uint64_t v85 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = v75;
      uint64_t v48 = AnyHashable.description.getter();
      *(void *)(v47 + 4) = sub_1001412B0(v48, v49, &v85);
      swift_bridgeObjectRelease();
      sub_10013B8C0((uint64_t)&aBlock);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "EnhancedEmergency: new pending request is nil or can't cast its type, request: %s", (uint8_t *)v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      int v27 = v46;
      os_log_type_t v28 = v45;
      os_log_t v29 = v44;
      a1 = v43;
      uint64_t v26 = (uint64_t)v78;
      swift_slowDealloc();
    }
    else
    {

      sub_10013B8C0((uint64_t)&aBlock);
    }
    sub_10013B8C0((uint64_t)v86);
    if (v25) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v33 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v33 >= v77) {
      goto LABEL_43;
    }
    unint64_t v34 = *(void *)(v76 + 8 * v33);
    ++v26;
    if (!v34)
    {
      uint64_t v26 = v33 + 1;
      if (v33 + 1 >= v77) {
        goto LABEL_43;
      }
      unint64_t v34 = *(void *)(v76 + 8 * v26);
      if (!v34)
      {
        uint64_t v26 = v33 + 2;
        if (v33 + 2 >= v77) {
          goto LABEL_43;
        }
        unint64_t v34 = *(void *)(v76 + 8 * v26);
        if (!v34)
        {
          int64_t v35 = v33 + 3;
          if (v35 >= v77) {
            goto LABEL_43;
          }
          unint64_t v34 = *(void *)(v76 + 8 * v35);
          if (!v34)
          {
            while (1)
            {
              uint64_t v26 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                break;
              }
              if (v26 >= v77) {
                goto LABEL_43;
              }
              unint64_t v34 = *(void *)(v76 + 8 * v26);
              ++v35;
              if (v34) {
                goto LABEL_23;
              }
            }
            __break(1u);
LABEL_47:
            swift_once();
LABEL_38:
            uint64_t v51 = type metadata accessor for Logger();
            sub_10011EC48(v51, (uint64_t)qword_10032CBE8);
            uint64_t v78 = Logger.logObject.getter();
            os_log_type_t v52 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v78, v52))
            {
              uint64_t v53 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v53 = 0;
              _os_log_impl((void *)&_mh_execute_header, v78, v52, "EnhancedEmergency: trying to fetch all pending requests, but requestSet is nil", v53, 2u);
              swift_slowDealloc();
            }
LABEL_34:
            uint64_t v50 = v78;

            return;
          }
          uint64_t v26 = v35;
        }
      }
    }
LABEL_23:
    unint64_t v25 = (v34 - 1) & v34;
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger();
  sub_10011EC48(v17, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v78, v18))
  {
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_34;
  }
  uint64_t v19 = (uint8_t *)swift_slowAlloc();
  id v20 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v19 = 138412290;
  swift_errorRetain();
  uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
  aBlock = (void **)v21;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  void *v20 = v21;
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v78, v18, "EnhancedEmergency: trying to fetch all pending requests, but failed with error: %@", v19, 0xCu);
  sub_10011EB3C(&qword_100322A70);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
}

void sub_100162FF0(char *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_streamingRequestCount] >= 3)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10011EC48(v9, (uint64_t)qword_10032CBE8);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, reached maxRequestCountPerRequestType for streaming. Reject the new request", v12, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = *(void **)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v13)
    {
      id v14 = v13;
      id v15 = [a2 ID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a2;
      *(void *)(v17 + 24) = a1;
      aBlock[4] = sub_10016A810;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100160BD0;
      aBlock[3] = &unk_1002D2E20;
      os_log_type_t v18 = _Block_copy(aBlock);
      id v19 = a2;
      id v20 = a1;
      swift_release();
      [v14 handleResponse:0 forRequest:isa completion:v18];
      _Block_release(v18);
    }
  }
  else
  {
    sub_100161774();
  }
}

void sub_1001632A4(void *a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
    swift_errorRetain();
    id v5 = a3;
    swift_errorRetain();
    id v6 = v5;
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      id v10 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v6;

      *(_WORD *)(v8 + 12) = 2112;
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v9[1] = v28;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, EED returned error while updating state:Rejected for video streaming request: %@, error: %@", (uint8_t *)v8, 0x16u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (a1)
    {
      self;
      uint64_t v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = a1;
        sub_10015C9EC(v13);
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        sub_10011EC48(v15, (uint64_t)qword_10032CBE8);
        id v16 = a3;
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = swift_slowAlloc();
          os_log_t osloga = v14;
          id v20 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 138412546;
          id v21 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v20 = v16;

          *(_WORD *)(v19 + 12) = 2112;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v20[1] = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, finished updating state:Rejected for video streaming request: %@, error: %@", (uint8_t *)v19, 0x16u);
          sub_10011EB3C(&qword_100322A70);
          swift_arrayDestroy();
          id v14 = osloga;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "EnhancedEmergency: fetchAllPendingRequest, pendingVideoStreamingRequest, reset videoStreamingRequest due to rate limiting", v24, 2u);
          swift_slowDealloc();
          unint64_t v25 = v14;
        }
        else
        {
          unint64_t v25 = v22;
          uint64_t v22 = v14;
        }
      }
    }
    sub_10016213C();
  }
}

void sub_100163790(char *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequestCount] >= 3)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10011EC48(v9, (uint64_t)qword_10032CBE8);
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: fetchAllPendingRequest, reached maxRequestCountPerRequestType for media upload. Reject the new request", v12, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = *(void **)&a1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v13)
    {
      id v14 = v13;
      id v15 = [a2 ID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a2;
      *(void *)(v17 + 24) = a1;
      aBlock[4] = sub_10016A818;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100160BD0;
      aBlock[3] = &unk_1002D2E70;
      os_log_type_t v18 = _Block_copy(aBlock);
      id v19 = a2;
      id v20 = a1;
      swift_release();
      [v14 handleResponse:0 forRequest:isa completion:v18];
      _Block_release(v18);
    }
  }
  else
  {
    sub_100161CA0();
  }
}

void sub_100163A44(void *a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
    swift_errorRetain();
    id v5 = a3;
    swift_errorRetain();
    id v6 = v5;
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      id v10 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v6;

      *(_WORD *)(v8 + 12) = 2112;
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v9[1] = v28;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "EnhancedEmergency: fetchAllPendingRequest, pendingMediaUploadRequest, EED returned error while updating state:Rejected for media upload request: %@, error: %@", (uint8_t *)v8, 0x16u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (a1)
    {
      self;
      uint64_t v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = a1;
        sub_10015CA64(v13);
        if (qword_100320540 != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        sub_10011EC48(v15, (uint64_t)qword_10032CBE8);
        id v16 = a3;
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = swift_slowAlloc();
          os_log_t osloga = v14;
          id v20 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 138412546;
          id v21 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v20 = v16;

          *(_WORD *)(v19 + 12) = 2112;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v20[1] = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "EnhancedEmergency: fetchAllPendingRequest,pendingMediaUploadRequest, finished updating state:Rejected for media upload request: %@, error: %@", (uint8_t *)v19, 0x16u);
          sub_10011EB3C(&qword_100322A70);
          swift_arrayDestroy();
          id v14 = osloga;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "EnhancedEmergency: fetchAllPendingRequest,pendingMediaUploadRequest, reset mediaUploadRequest due to rate limiting", v24, 2u);
          swift_slowDealloc();
          unint64_t v25 = v14;
        }
        else
        {
          unint64_t v25 = v22;
          uint64_t v22 = v14;
        }
      }
    }
    sub_10016210C();
  }
}

uint64_t sub_100163F30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100163FD0()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: fetch video streaming request");
    sub_100120278();
  }

  if (*(void *)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper])
  {
    uint64_t v8 = sub_10012A264();
    *(void *)(v8 + 16) = v1;
    void v12[4] = sub_10016A770;
    void v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    sub_10016AE6C();
    void v12[2] = sub_100160BD0;
    void v12[3] = &unk_1002D2C90;
    _Block_copy(v12);
    id v9 = sub_10016B114();
    id v10 = v1;
    uint64_t v11 = swift_release();
    sub_10016B09C(v11, "fetchCurrentStreamingRequestWithCompletion:");
    _Block_release(v3);
  }
}

void sub_100164124()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: fetch media upload request");
    sub_100120278();
  }

  if (*(void *)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper])
  {
    uint64_t v8 = sub_10012A264();
    *(void *)(v8 + 16) = v1;
    void v12[4] = sub_10016A6E8;
    void v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    sub_10016AE6C();
    void v12[2] = sub_100160BD0;
    void v12[3] = &unk_1002D2BF0;
    _Block_copy(v12);
    id v9 = sub_10016B114();
    id v10 = v1;
    uint64_t v11 = swift_release();
    sub_10016B09C(v11, "fetchCurrentMediaUploadRequestWithCompletion:");
    _Block_release(v3);
  }
}

void sub_100164278()
{
  sub_1001233C4();
  uint64_t v2 = v1;
  uint64_t v32 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100122300();
  __chkstk_darwin(v12, v13);
  uint64_t v14 = sub_10016AD7C();
  sub_100122300();
  __chkstk_darwin(v15, v16);
  sub_10016AC28();
  if (!v9)
  {
    uint64_t v23 = v17;
    sub_100123340(0, (unint64_t *)&qword_100321370);
    unint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v11;
    *(void *)(v24 + 24) = v7;
    v34[4] = v5;
    v34[5] = v24;
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 1107296256;
    void v34[2] = sub_10012EDF4;
    v34[3] = v32;
    unint64_t v25 = _Block_copy(v34);
    id v26 = v11;
    id v27 = v7;
    swift_release();
    static DispatchQoS.unspecified.getter();
    v34[0] = _swiftEmptyArrayStorage;
    sub_10016A690((unint64_t *)&qword_1003218E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10011EB3C((uint64_t *)&unk_100321380);
    sub_10016A9CC((unint64_t *)&qword_1003218F0, (uint64_t *)&unk_100321380);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v25);

    sub_100138D8C();
    v28();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v14);
    goto LABEL_7;
  }
  os_log_type_t v18 = v2;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10011EC48(v19, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  int64_t v33 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v20))
  {
    id v21 = (_DWORD *)sub_10015B4AC();
    uint64_t v22 = (void *)sub_10016AEF0();
    _DWORD *v21 = 138412290;
    swift_errorRetain();
    v34[0] = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v34[0];
    swift_errorRelease();
    swift_errorRelease();
    sub_10016ADEC((void *)&_mh_execute_header, v33, v20, v18);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();

LABEL_7:
    sub_100123384();
    return;
  }
  swift_errorRelease();
  swift_errorRelease();
  sub_100123384();
}

void *sub_10016463C(void *result, uint64_t a2, void *a3, void (*a4)(void *), SEL *a5)
{
  if (result)
  {
    uint64_t v7 = result;
    *(void *)(a2 + *a3) = 3;
    id v8 = result;
    a4(v7);
    id result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result *a5];
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1001646D4()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: fetch the mitigations");
    sub_100120278();
  }

  if (*(void *)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper])
  {
    uint64_t v8 = sub_10012A264();
    *(void *)(v8 + 16) = v1;
    void v12[4] = sub_10016A6E0;
    void v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    sub_10016AE6C();
    void v12[2] = sub_100160BD0;
    void v12[3] = &unk_1002D2BA0;
    _Block_copy(v12);
    id v9 = sub_10016B114();
    id v10 = v1;
    uint64_t v11 = swift_release();
    sub_10016B09C(v11, "fetchMitigationsWithCompletion:");
    _Block_release(v3);
  }
}

void sub_100164828(void *a1, uint64_t a2)
{
  if (a2)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v5 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "EnhancedEmergency: fetchMitigations, failed with error: %@", v4, 0xCu);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else if (a1)
  {
    oslog = a1;
    sub_100164B60();
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10011EC48(v6, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "EnhancedEmergency: fetchMitigations, but mitigations is nil", v8, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100164AD4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100164B60()
{
  sub_1001233C4();
  os_log_type_t v4 = v3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  sub_100122300();
  uint64_t v7 = v6;
  __chkstk_darwin(v8, v9);
  sub_10016ADA4();
  uint64_t v19 = type metadata accessor for DispatchQoS();
  sub_100122300();
  uint64_t v11 = v10;
  __chkstk_darwin(v12, v13);
  sub_10016AC10();
  sub_100123340(0, (unint64_t *)&qword_100321370);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v0;
  *(void *)(v15 + 24) = v4;
  void v20[4] = sub_10016A6D8;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10012EDF4;
  v20[3] = &unk_1002D2B50;
  uint64_t v16 = _Block_copy(v20);
  id v17 = v0;
  id v18 = v4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  v20[0] = _swiftEmptyArrayStorage;
  sub_10016A690((unint64_t *)&qword_1003218E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10011EB3C((uint64_t *)&unk_100321380);
  sub_10016A9CC((unint64_t *)&qword_1003218F0, (uint64_t *)&unk_100321380);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v19);
  sub_100123384();
}

void sub_100164DB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_10015CA70((uint64_t)a2);
  sub_100164DFC(v3);
  sub_100164F58();
}

void sub_100164DFC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v2)
  {
    id v11 = v2;
    if ([a1 uploadMigitation] != (id)2) {
      goto LABEL_11;
    }
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    uint64_t v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v6))
    {
      uint64_t v7 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v7);
      sub_1001443D4((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: processMediaMitigations,requestToDisableMediaUploadButton in 6-up");
      sub_100120278();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong requestToDisableMediaUploadButton];

      swift_unknownObjectRelease();
    }
    else
    {
LABEL_11:
    }
  }
}

void sub_100164F58()
{
  sub_10015B760();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  if [v3 dropStreaming] && (sub_10015D084())
  {
    uint64_t v5 = *(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState];
    if (v5 == 1)
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      unint64_t v31 = (void *)sub_100138D44(v30, (uint64_t)qword_10032CBE8);
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v32))
      {
        int64_t v33 = (_WORD *)sub_100138CE8();
        sub_10015B9F8(v33);
        sub_1001443D4((void *)&_mh_execute_header, v34, v35, "EnhancedEmergency: processStreamingMitigations, in accepted screen, hide the webrtc view controller");
        sub_100120278();
      }

      NSObject v36 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
      if (!v36) {
        goto LABEL_33;
      }
      id v14 = v36;
      sub_100151B74();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong hideWebRTCViewController:v14];
        swift_unknownObjectRelease();
      }
      uint64_t v38 = (void *)swift_unknownObjectWeakLoadStrong();
      if (!v38) {
        goto LABEL_32;
      }
      [v38 requestToAddMitigationLabel];

      swift_unknownObjectRelease();
    }
    else if (v5 == 3)
    {
      os_log_type_t v6 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
      if (v6)
      {
        uint64_t v7 = qword_100320540;
        id v8 = v6;
        if (v7 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        uint64_t v10 = sub_100138D44(v9, (uint64_t)qword_10032CBE8);
        os_log_type_t v11 = static os_log_type_t.default.getter();
        if (sub_100138CCC(v11))
        {
          uint64_t v12 = (uint8_t *)sub_100138CE8();
          *(_WORD *)uint64_t v12 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)&selRef_callDisplayContextChangedNotification_, "EnhancedEmergency: processStreamingMitigations, in Preview screen, hide video preview due to mitigations", v12, 2u);
          sub_100120278();
        }

        sub_100151B74();
        sub_1001578B8();
      }
      if (qword_100320540 == -1) {
        goto LABEL_12;
      }
      goto LABEL_50;
    }
LABEL_33:
    uint64_t v39 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v39)
    {
      [v39 requestToDisableVideoStreamingButton];
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(*(void *)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector]
             + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped) = 1;
    goto LABEL_48;
  }
  unsigned int v19 = [v4 dropStreaming];
  uint64_t v20 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController;
  id v21 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v19)
  {
    if (!v21) {
      goto LABEL_48;
    }
    goto LABEL_33;
  }
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = &selRef_callDisplayContextChangedNotification_;
    p_name = &OBJC_PROTOCOL___TUAudioDeviceControllerDelegate.name;
    unint64_t v25 = "RIncomingCallTextViewAdapterWrapper\"";
    if ((uint64_t)[v4 streamingFPS] >= 1)
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_10011EC48(v26, (uint64_t)qword_10032CBE8);
      id v27 = v4;
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (sub_10015B4C4(v29))
      {
        *(_DWORD *)sub_10015B4AC() = 134217984;
        [v27 streamingFPS];
        sub_10016B088();
        unint64_t v25 = "@\"PRIncomingCallTextViewAdapterWrapper\"" + 3;
        uint64_t v23 = &selRef_callDisplayContextChangedNotification_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        sub_10016AF2C((void *)&_mh_execute_header, v28, v1, "EnhancedEmergency: processStreamingMitigations,setFrameRate:%ld");
        p_name = (char **)(&OBJC_PROTOCOL___TUAudioDeviceControllerDelegate + 8);
        sub_100120278();
      }
      else
      {
      }
      [v27 v23[257]];
      sub_1001546AC();
    }

    uint64_t v40 = *(void **)&v2[v20];
    if (v40)
    {
      uint64_t v2 = v40;
      if ((uint64_t)[v4 streamingBitrate] >= 1)
      {
        if (p_name[168] != (char *)-1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        sub_10011EC48(v41, (uint64_t)qword_10032CBE8);
        uint64_t v42 = v4;
        uint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.default.getter();
        if (sub_100138CCC(v44))
        {
          uint64_t v45 = (uint8_t *)sub_10015B4AC();
          *(_DWORD *)uint64_t v45 = *((void *)v25 + 107);
          [v42 streamingBitrate];
          sub_10016B088();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v22, "EnhancedEmergency: processStreamingMitigations,setMaximumBitRateKbps:%ld", v45, 0xCu);
          sub_100120278();
        }
        else
        {

          uint64_t v43 = v42;
        }

        uint64_t v46 = (uint64_t)[v42 streamingBitrate];
        if ((unsigned __int128)(v46 * (__int128)1000) >> 64 != (1000 * v46) >> 63)
        {
          __break(1u);
LABEL_50:
          swift_once();
LABEL_12:
          uint64_t v13 = type metadata accessor for Logger();
          id v14 = (id)sub_100138D44(v13, (uint64_t)qword_10032CBE8);
          os_log_type_t v15 = static os_log_type_t.default.getter();
          if (sub_1001203DC(v15))
          {
            uint64_t v16 = (_WORD *)sub_100138CE8();
            sub_10015B9F8(v16);
            sub_1001443D4((void *)&_mh_execute_header, v17, v18, "EnhancedEmergency: processStreamingMitigations, in Preview screen, wait for user to choose NotNow/Accept and then apply mitigation");
            sub_100120278();
          }
LABEL_32:

          goto LABEL_33;
        }
        sub_100154D58();
      }
    }
  }
LABEL_48:
  sub_10015B69C();
}

id sub_1001654C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedEmergencyCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedEmergencyCoordinator()
{
  return self;
}

void sub_10016561C()
{
  os_log_type_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v1)
  {
    if (*(void *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState) != 4)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v3 = (void *)Strong;
        id v4 = v1;
        [v3 insertWebViewUnderButtonControls:v4];

        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_100165708()
{
  os_log_type_t v1 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v1)
  {
    objc_super v2 = v0;
    id v17 = v1;
    sub_100160598();
    id v3 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_tuCall];
    if (v3) {
      [v3 setHasEmergencyVideoStream:1];
    }
    if (sub_10015D084())
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      uint64_t v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v6))
      {
        uint64_t v7 = (_WORD *)sub_100138CE8();
        sub_10015B9F8(v7);
        sub_1001443D4((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: emergency coordinator gets notified videoStreamingAboutToStart, inserting webview under controls");
        sub_100120278();
      }

      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong insertWebViewUnderButtonControls:v17];
        swift_unknownObjectRelease();
      }
      [v2 transitionToRTTState:2];
    }
    else
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      uint64_t v12 = (void *)sub_100138D44(v11, (uint64_t)qword_10032CBE8);
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v13))
      {
        id v14 = (_WORD *)sub_100138CE8();
        sub_10015B9F8(v14);
        sub_1001443D4((void *)&_mh_execute_header, v15, v16, "EnhancedEmergency: emergency coordinator gets notified videoStreamingAboutToStart, but webview is already removed, pause video");
        sub_100120278();
      }

      sub_10015E410();
    }
  }
}

void sub_100165930()
{
  sub_10016AF7C();
  sub_10016AF64();
  sub_100122300();
  __chkstk_darwin(v2, v3);
  sub_10013FC4C();
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (!v4) {
    goto LABEL_18;
  }
  uint64_t v5 = qword_100320540;
  id v26 = v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = (void *)sub_100138D44(v6, (uint64_t)qword_10032CBE8);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_10015B380(v8))
  {
    uint64_t v9 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v9);
    sub_10016ABAC((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: emergency coordinator gets notified cancelVideoStreamingRequest");
    sub_100120278();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong hideWebRTCViewController:v26];
    swift_unknownObjectRelease();
  }
  sub_10016213C();
  sub_100160598();
  os_log_type_t v13 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (!v13) {
    goto LABEL_13;
  }
  id v14 = v13;
  if (![v14 dropStreaming])
  {

LABEL_13:
    uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v16) {
      goto LABEL_16;
    }
    [v16 requestToAddResumeCameraLabel];
    goto LABEL_15;
  }
  uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    [v15 requestToAddMitigationLabel];

LABEL_15:
    swift_unknownObjectRelease();
    goto LABEL_16;
  }

LABEL_16:
  id v17 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest);
  if (v17)
  {
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v19 = v17;
    id v20 = v18;
    id v21 = [v19 ID];
    sub_10016AE78();

    UUID.uuidString.getter();
    uint64_t v22 = sub_10016ACD0();
    v23(v22);
    sub_10016AC54();
    swift_bridgeObjectRelease();

LABEL_18:
    sub_10016AC40();
    return;
  }
  sub_10016AC40();
}

void sub_100165BE4()
{
  sub_1001233C4();
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v5 = v4;
  __chkstk_darwin(v6, v7);
  sub_10016AC10();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10011EC48(v8, (uint64_t)qword_10032CBE8);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (sub_10015B4C4(v10))
  {
    *(_WORD *)sub_100138CE8() = 0;
    sub_10016ADD0((void *)&_mh_execute_header, v9, v11, "EnhancedEmergency: emergency coordinator gets notified startVideoStreamingRequest because of button press");
    sub_100120278();
  }

  uint64_t v12 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest);
  if (v12)
  {
    os_log_type_t v13 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v14 = v12;
    id v15 = v13;
    id v16 = [v14 ID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = UUID.uuidString.getter();
    uint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
    sub_10016E308(v17, v19);
    swift_bridgeObjectRelease();
  }
  id v20 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v20)
  {
    id v21 = v20;
    if ([v21 dropStreaming])
    {
      uint64_t v22 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
      if (v22)
      {
        id v23 = v22;
        sub_100151B74();
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          [Strong hideWebRTCViewController:v23];
          swift_unknownObjectRelease();
        }
        uint64_t v25 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v25)
        {
          [v25 requestToAddMitigationLabel];
          swift_unknownObjectRelease();
        }
        id v26 = (void *)Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.default.getter();
        if (sub_10016AB5C(v27))
        {
          uint64_t v28 = (_WORD *)sub_100138CE8();
          sub_10016AC04(v28);
          sub_1001443F4((void *)&_mh_execute_header, v29, v30, "EnhancedEmergency: continueVideoStreamingRequest, drop streaming because mitigation is being applied");
          sub_100120278();
        }
      }
      goto LABEL_22;
    }
  }
  unint64_t v31 = (void *)Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v32))
  {
    int64_t v33 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v33);
    sub_1001443D4((void *)&_mh_execute_header, v34, v35, "EnhancedEmergency: continueVideoStreamingRequest, can start video streaming without any mitigations");
    sub_100120278();
  }

  NSObject v36 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v36)
  {
    id v21 = v36;
    sub_1001514B4();
LABEL_22:
  }
  sub_100123384();
}

void sub_100165F24()
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v12 = sub_100138D44(v0, (uint64_t)qword_10032CBE8);
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (sub_10016AEC4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12))
  {
    uint64_t v9 = (_WORD *)sub_100138CE8();
    sub_10015B690(v9);
    sub_10015B4E0((void *)&_mh_execute_header, v13, v10, "EnhancedEmergency: emergency coordinator gets notified camera is turned off for remote side");
    sub_100120278();
  }
}

void *sub_100166014(const char *a1, SEL *a2)
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  int v7 = sub_100138D44(v6, (uint64_t)qword_10032CBE8);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_10015B380(v8))
  {
    uint64_t v9 = (_WORD *)sub_100138CE8();
    sub_100138E4C(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v2, a1, v3, 2u);
    sub_100120278();
  }

  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result *a2];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_100166178()
{
  if (sub_10015D084())
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    os_log_type_t v1 = (void *)sub_100138D44(v0, (uint64_t)qword_10032CBE8);
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v2))
    {
      int v3 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v3);
      sub_1001443D4((void *)&_mh_execute_header, v4, v5, "EnhancedEmergency: emergency coordinator gets notified to requestAnimationToFullScreenWebView, run the animation");
      sub_100120278();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong requestAnimationToFullScreenWebView];
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    uint64_t v19 = sub_100138D44(v7, (uint64_t)qword_10032CBE8);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (sub_10016AEC4(v8, v9, v10, v11, v12, v13, v14, v15, v18, v19))
    {
      id v16 = (_WORD *)sub_100138CE8();
      sub_10015B690(v16);
      sub_10015B4E0((void *)&_mh_execute_header, v20, v17, "EnhancedEmergency: emergency coordinator gets notified to requestAnimationToFullScreenWebView, but webview is already removed");
      sub_100120278();
    }
  }
}

void sub_100166358()
{
  os_log_type_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  int v3 = (void *)sub_100138D44(v2, (uint64_t)qword_10032CBE8);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v4))
  {
    uint64_t v5 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v5);
    sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: received error state, right now going to reset webView and constructing error UI");
    sub_100120278();
  }

  [v1 cameraTurnedOffForRemoteSide];
  uint64_t v8 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController;
  int v9 = *(void **)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v9)
  {
    id v10 = v9;
    sub_100154020();

    int v11 = *(void **)&v1[v8];
    if (v11)
    {
      id v14 = v11;
      sub_100160598();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong hideWebRTCViewController:v14];
        swift_unknownObjectRelease();
      }
      int v13 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v13)
      {
        [v13 requestToAddErrorLabelWithRetryable:1];

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

void sub_10016654C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  uint64_t v2 = sub_10016ACA0();
  sub_10016D718(v2);
}

void sub_100166608()
{
}

void sub_100166658(char a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  sub_10016DB24(a1);
}

void sub_10016670C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  uint64_t v2 = sub_10016ACA0();
  sub_10016DDAC(v2);
}

void sub_1001667C8()
{
  id v1 = *(id *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  uint64_t v2 = sub_10016ACA0();
  sub_10016DCB0(v2);
}

void sub_100166870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10015B760();
  a21 = v23;
  a22 = v24;
  uint64_t v25 = v22;
  uint64_t v27 = v26;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10011EC48(v28, (uint64_t)qword_10032CBE8);
  swift_bridgeObjectRetain_n();
  uint64_t v29 = (void *)Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (sub_10015B380(v30))
  {
    unint64_t v31 = (_DWORD *)sub_10015B4AC();
    a10 = sub_100120414();
    *unint64_t v31 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v32 = Array.description.getter();
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    sub_1001412B0(v32, v34, &a10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_10016AFD0((void *)&_mh_execute_header, v35, v36, "EnhancedEmergency: webRTCConnectedAddresses, received addresses: %s");
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v37 = *(id *)(v25 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
  sub_10016E5E8(v27);

  sub_10015B69C();
}

#error "100166A48: call analysis failed (funcsize=25)"

void sub_100166A74()
{
  sub_10016AF7C();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v4 = v3;
  __chkstk_darwin(v5, v6);
  sub_10015BA2C();
  uint64_t v9 = v8 - v7;
  id v10 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest);
  if (v10)
  {
    int v11 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_dataCollector);
    id v12 = v10;
    id v13 = v11;
    id v14 = [v12 ID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = UUID.uuidString.getter();
    uint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v2);
    sub_10016E308(v15, v17);
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation);
  if (v18)
  {
    id v19 = v18;
    if ([v19 uploadMigitation] == (id)2)
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong requestToAddPhotoMitigationLabel];
        swift_unknownObjectRelease();
      }
      id v21 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
      if (v21)
      {
        uint64_t v22 = qword_100320540;
        id v23 = v21;
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        uint64_t v25 = (void *)sub_100138D44(v24, (uint64_t)qword_10032CBE8);
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (sub_10015B380(v26))
        {
          uint64_t v27 = (_WORD *)sub_100138CE8();
          sub_100138E4C(v27);
          sub_10016ABAC((void *)&_mh_execute_header, v28, v29, "EnhancedEmergency: continueMediaUploadRequest, cannot start upload request due to upload mitigation to drop request");
          sub_100120278();
        }

        os_log_type_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v30)
        {
          [v30 removeMediaRequestViewController:v23];

          swift_unknownObjectRelease();
        }
        else
        {
        }
      }
      else
      {
      }
      goto LABEL_22;
    }
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v32 = (void *)sub_100138D44(v31, (uint64_t)qword_10032CBE8);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (sub_1001203DC(v33))
  {
    unint64_t v34 = (_WORD *)sub_100138CE8();
    sub_10015B9F8(v34);
    sub_1001443D4((void *)&_mh_execute_header, v35, v36, "EnhancedEmergency: emergency coordinator gets notified continueMediaUploadRequest");
    sub_100120278();
  }

  id v37 = *(void **)(v1 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v37)
  {
    id v38 = v37;
    sub_1001D7F34();
  }
  sub_100160BD4();
LABEL_22:
  sub_10016AC40();
}

void sub_100166D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001233C4();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v262 = v25;
  uint64_t v26 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v28 = v27;
  __chkstk_darwin(v29, v30);
  sub_10013FC4C();
  uint64_t v31 = type metadata accessor for String.Encoding();
  uint64_t v32 = sub_10015B684(v31);
  __chkstk_darwin(v32, v33);
  sub_100138CB8();
  uint64_t v264 = v34;
  uint64_t v35 = sub_10011EB3C(&qword_100324AA0);
  uint64_t v36 = sub_10015B684(v35);
  __chkstk_darwin(v36, v37);
  sub_100138CB8();
  uint64_t v276 = v38;
  sub_100138DB4();
  uint64_t v39 = type metadata accessor for URL();
  sub_100122300();
  uint64_t v41 = v40;
  uint64_t v44 = __chkstk_darwin(v42, v43);
  uint64_t v46 = (char *)&v248 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v47);
  sub_10016AD70();
  sub_10016AB78();
  __chkstk_darwin(v48, v49);
  sub_10016AD70();
  uint64_t v283 = v50;
  __chkstk_darwin(v51, v52);
  v278 = (char *)&v248 - v53;
  uint64_t v54 = sub_10011EB3C(&qword_1003224E8);
  uint64_t v55 = sub_10015B684(v54);
  __chkstk_darwin(v55, v56);
  sub_10016ACF0();
  sub_10016AB78();
  __chkstk_darwin(v57, v58);
  sub_10016AD70();
  sub_10016AB78();
  __chkstk_darwin(v59, v60);
  sub_10016AD70();
  sub_10016AB78();
  __chkstk_darwin(v61, v62);
  uint64_t v265 = (uint64_t)&v248 - v63;
  sub_100138DB4();
  uint64_t v279 = type metadata accessor for UTType();
  sub_100122300();
  v291 = v64;
  __chkstk_darwin(v65, v66);
  sub_10016ACF0();
  v293 = v67;
  __chkstk_darwin(v68, v69);
  v292 = (char *)&v248 - v70;
  sub_100138DB4();
  uint64_t v285 = type metadata accessor for PHPickerResult();
  sub_100122300();
  uint64_t v290 = v71;
  __chkstk_darwin(v72, v73);
  sub_10016ACF0();
  sub_10016AB78();
  uint64_t v76 = __chkstk_darwin(v74, v75);
  __chkstk_darwin(v76, v77);
  sub_10016AD70();
  sub_10016AB78();
  __chkstk_darwin(v78, v79);
  sub_10016AD70();
  sub_10016AB78();
  uint64_t v82 = __chkstk_darwin(v80, v81);
  __chkstk_darwin(v82, v83);
  uint64_t v87 = (char *)&v248 - v86;
  id v88 = *(void **)&v24[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest];
  if (!v88)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v101 = type metadata accessor for Logger();
    v293 = sub_100138D44(v101, (uint64_t)qword_10032CBE8);
    os_log_type_t v102 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v293, v102))
    {
      id v103 = (_WORD *)sub_100138CE8();
      sub_10015B690(v103);
      sub_10015B4E0((void *)&_mh_execute_header, v293, v104, "EnhancedEmergency: trying to upload media, but mediaUploadRequest is nil");
      sub_100120278();
    }
    goto LABEL_18;
  }
  uint64_t v289 = v41;
  id v272 = v85;
  v275 = v84;
  uint64_t v89 = *(void **)&v24[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mitigation];
  uint64_t v287 = v39;
  if (!v89)
  {
    id v107 = v88;
    goto LABEL_23;
  }
  id v90 = v24;
  id v91 = v88;
  v288 = v89;
  if ([v288 uploadMigitation] != (id)2)
  {

    uint64_t v24 = v90;
LABEL_23:
    uint64_t v250 = v21;
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v108 = type metadata accessor for Logger();
    uint64_t v109 = sub_10011EC48(v108, (uint64_t)qword_10032CBE8);
    uint64_t v110 = v262;
    swift_bridgeObjectRetain();
    uint64_t v280 = v109;
    id v111 = Logger.logObject.getter();
    os_log_type_t v112 = static os_log_type_t.default.getter();
    BOOL v113 = sub_1001203DC(v112);
    uint64_t v252 = v26;
    uint64_t v251 = v28;
    if (v113)
    {
      *(_DWORD *)sub_10015B4AC() = 134217984;
      v295[0] = *(void *)(v262 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10016ADEC((void *)&_mh_execute_header, v111, (os_log_type_t)v21, "EnhancedEmergency: the media to be uploaded has count of %ld ");
      uint64_t v110 = v262;
      sub_100120278();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v114 = v285;
    uint64_t v115 = *(void *)(v110 + 16);
    uint64_t v116 = v276;
    v254 = v88;
    if (v115)
    {
      v253 = v46;
      id v249 = v24;
      id v255 = &v24[OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet];
      id v117 = *(void (**)(void))(v290 + 16);
      uint64_t v118 = v110 + ((*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80));
      uint64_t v282 = *(void *)(v290 + 72);
      v288 = (void *)((char *)v291 + 8);
      v281 = (void (**)(void))(v290 + 8);
      uint64_t v256 = v290 + 32;
      v277 = (char *)v291 + 32;
      uint64_t v270 = v289 + 32;
      uint64_t v269 = APP_SANDBOX_READ;
      int v268 = SANDBOX_EXTENSION_DEFAULT;
      uint64_t v119 = (void (**)(uint64_t, uint64_t, uint64_t))(v289 + 16);
      uint64_t v267 = (void (**)(void))(v289 + 8);
      id v248 = &v297;
      uint64_t v120 = v290 + 16;
      swift_bridgeObjectRetain();
      *(void *)&long long v121 = 136315138;
      long long v271 = v121;
      id v257 = (char *)&type metadata for Any + 8;
      uint64_t v122 = v279;
      uint64_t v290 = v120;
      v284 = v87;
      v286 = v117;
      id v273 = v119;
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v117)(v87, v118, v114);
        static UTType.image.getter();
        os_log_type_t v123 = (void *)PHPickerResult.itemProvider.getter();
        unint64_t v124 = v87;
        static UTType.image.getter();
        UTType.identifier.getter();
        sub_10016AE90();
        id v117 = (void (*)(void))v288;
        uint64_t v125 = (void (*)(void))*v288;
        sub_10016ABCC();
        v126();
        NSString v127 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned int v128 = [v123 hasItemConformingToTypeIdentifier:v127];

        v291 = v125;
        if (v128)
        {
          static UTType.image.getter();
          uint64_t v129 = 1;
        }
        else
        {
          id v130 = (void *)PHPickerResult.itemProvider.getter();
          static UTType.movie.getter();
          UTType.identifier.getter();
          sub_10016AE90();
          uint64_t v125 = v291;
          sub_10016ABCC();
          v125();
          NSString v131 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          int v132 = [v130 hasItemConformingToTypeIdentifier:v131];

          if ((v132 & 1) == 0)
          {
            uint64_t v289 = v115;
            uint64_t v87 = v272;
            uint64_t v114 = v285;
            id v163 = v286;
            sub_10016B01C();
            v163();
            id v164 = sub_10016AC88();
            uint64_t v122 = static os_log_type_t.error.getter();
            if (sub_10016AC70((os_log_type_t)v122))
            {
              LODWORD(v260) = v122;
              unint64_t v165 = (unint64_t)v130;
              NSBundle v166 = (_DWORD *)sub_10015B4AC();
              uint64_t v259 = sub_100120414();
              unsigned __int32 v167 = sub_10016ADC0(v259).n128_u32[0];
              v266 = v166;
              *NSBundle v166 = v167;
              uint64_t v168 = sub_10016AB00((uint64_t)v295);
              ((void (*)(uint64_t))v163)(v168);
              sub_10011EB80((uint64_t)v166, 0, 1, v114);
              uint64_t v169 = (uint64_t)v166;
              uint64_t v170 = v258;
              sub_1001692B4(v169, v258);
              if (sub_100120F20(v170, 1, v114) == 1)
              {
                sub_10016931C(v170, &qword_1003224E8);
                sub_10016AF18();
                uint64_t v115 = v289;
                uint64_t v171 = v281;
              }
              else
              {
                sub_10016AF58();
                uint64_t v203 = sub_10016AD54();
                v204(v203);
                uint64_t v205 = sub_10016AB00((uint64_t)&v292);
                ((void (*)(uint64_t))v163)(v205);
                uint64_t v170 = String.init<A>(reflecting:)();
                unint64_t v165 = v206;
                uint64_t v171 = v281;
                sub_10016AE4C();
                v207();
                uint64_t v87 = v284;
                uint64_t v115 = v289;
              }
              sub_10016931C(v265, &qword_1003224E8);
              uint64_t v208 = sub_1001412B0(v170, v165, v295);
              uint64_t v122 = (uint64_t)v266;
              *(void *)(v266 + 1) = v208;
              swift_bridgeObjectRelease();
              id v209 = *v171;
              sub_10016AE4C();
              v209();
              _os_log_impl((void *)&_mh_execute_header, v164, (os_log_type_t)v260, "EnhancedEmergency: can't save result: %s, it's not image or video", (uint8_t *)v122, 0xCu);
              uint64_t v116 = v259;
              sub_10016B0C8();
              sub_100120278();
              sub_100120278();

              uint64_t v210 = sub_10016AB1C();
              v211(v210);
              sub_10016AE4C();
              v209();
              sub_10016B100();
              goto LABEL_68;
            }

            double v182 = *v281;
            sub_10016AAF0();
            v182();
            uint64_t v183 = sub_10016AB1C();
            v184(v183);
            sub_10016AAF0();
            v182();
            uint64_t v87 = v124;
            id v117 = v163;
            goto LABEL_56;
          }
          static UTType.movie.getter();
          uint64_t v129 = 2;
        }
        id v133 = v292;
        sub_10016ABCC();
        v125();
        sub_10016AF58();
        v134(v133, v293, v122);
        uint64_t v87 = v284;
        PHPickerResult._filePromiseURL(contentType:)();
        uint64_t v135 = v287;
        if (sub_100120F20(v116, 1, v287) != 1)
        {
          uint64_t v289 = v115;
          sub_10016AF58();
          v143(v278, v116, v135);
          URL.path.getter();
          URL.init(fileURLWithPath:)();
          swift_bridgeObjectRelease();
          URL.path.getter();
          String.utf8CString.getter();
          swift_bridgeObjectRelease();
          uint64_t v144 = sandbox_extension_issue_file();
          swift_release();
          BOOL v145 = v273;
          if (!v144)
          {
            uint64_t v175 = sub_10016AC88();
            os_log_type_t v176 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v175, v176))
            {
              uint64_t v177 = (_WORD *)sub_100138CE8();
              sub_10016AC04(v177);
              _os_log_impl((void *)&_mh_execute_header, v175, v176, "EnhancedEmergency: sandbox_extension_issue_file failed", (uint8_t *)v129, 2u);
              sub_100120278();
            }

            uint64_t v178 = *v267;
            uint64_t v114 = v287;
            sub_10016AAF0();
            v178();
            sub_10016AAF0();
            v178();
            sub_10016ABCC();
            v179();
            uint64_t v180 = sub_10016AB38();
            v181(v180);
            goto LABEL_67;
          }
          static String.Encoding.utf8.getter();
          uint64_t v146 = String.init(cString:encoding:)();
          if (!v147)
          {
            id v193 = (void *)sub_10016AC88();
            os_log_type_t v194 = static os_log_type_t.error.getter();
            if (sub_10016ACB4(v194))
            {
              uint64_t v195 = sub_10015B4AC();
              uint64_t v196 = sub_100120414();
              *(_DWORD *)uint64_t v195 = sub_10016ADC0(v196).n128_u32[0];
              uint64_t v296 = v144;
              sub_10011EB3C(&qword_100322500);
              uint64_t v197 = String.init<A>(reflecting:)();
              *(void *)(v195 + 4) = sub_1001412B0(v197, v198, v295);
              swift_bridgeObjectRelease();
              sub_10016B010();
              _os_log_impl(v199, v200, v201, "EnhancedEmergency: Unable to create string from sandbox_extension token:%s", (uint8_t *)v195, 0xCu);
              swift_arrayDestroy();
              sub_100120278();
              sub_100120278();
            }

            id v202 = *v267;
            uint64_t v114 = v287;
            goto LABEL_65;
          }
          uint64_t v116 = v146;
          uint64_t v122 = v147;
          id v148 = *v145;
          uint64_t v149 = v261;
          v148(v261, v283, v287);
          PHPickerResult.assetIdentifier.getter();
          if (v150) {
            uint64_t v151 = v150;
          }
          else {
            uint64_t v151 = 0xE000000000000000;
          }
          id v152 = objc_allocWithZone((Class)CLEEDMediaItem);
          id v154 = sub_1001690F4(v149, v151, v129, v153);
          if (!v154)
          {
            v148((uint64_t)v253, v283, v287);
            id v212 = sub_10016AC88();
            os_log_type_t v213 = static os_log_type_t.error.getter();
            uint64_t v122 = v213;
            if (os_log_type_enabled(v212, v213))
            {
              id v214 = (uint8_t *)sub_10015B4AC();
              v266 = (_DWORD *)sub_100120414();
              v295[0] = (uint64_t)v266;
              *(_DWORD *)id v214 = v271;
              id v260 = v214 + 4;
              uint64_t v215 = URL.path.getter();
              uint64_t v296 = sub_1001412B0(v215, v216, v295);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              id v217 = *v267;
              uint64_t v114 = v287;
              sub_10016AE3C();
              v217();
              _os_log_impl((void *)&_mh_execute_header, v212, (os_log_type_t)v122, "EnhancedEmergency: trying to create a CLEEDMediaItem with url: %s, but it's nil", v214, 0xCu);
              uint64_t v122 = (uint64_t)v266;
              swift_arrayDestroy();
              sub_100120278();
              sub_100120278();

              sub_10016AE3C();
              v217();
              sub_10016AE3C();
              v217();
              goto LABEL_66;
            }

            id v202 = *v267;
            uint64_t v114 = v287;
            sub_10016AAF0();
            v202();
LABEL_65:
            sub_10016AAF0();
            v202();
            ((void (*)(char *, uint64_t))v202)(v278, v114);
LABEL_66:
            uint64_t v218 = sub_10016AB1C();
            v219(v218);
            uint64_t v220 = sub_10016AB38();
            v221(v220);
            uint64_t v116 = v276;
LABEL_67:
            id v117 = v286;
            uint64_t v115 = v289;
            goto LABEL_68;
          }
          id v155 = v154;
          swift_beginAccess();
          id v156 = v155;
          sub_1001695E4(&v296, v156);
          uint64_t v157 = (void *)v296;
          swift_endAccess();

          UIAccessibilityNotifications v158 = *v267;
          uint64_t v114 = v287;
          sub_10016AAF0();
          v158();
          sub_10016AAF0();
          v158();
          uint64_t v159 = sub_10016AB1C();
          v160(v159);
          uint64_t v161 = sub_10016AB38();
          v162(v161);
LABEL_55:
          sub_10016B100();
LABEL_56:
          uint64_t v115 = v289;
          goto LABEL_68;
        }
        sub_10016931C(v116, &qword_100324AA0);
        id v136 = v87;
        uint64_t v87 = v275;
        uint64_t v114 = v285;
        id v117 = v286;
        sub_10016B01C();
        v117();
        NSBundle v137 = sub_10016AC88();
        uint64_t v122 = static os_log_type_t.error.getter();
        if (sub_10016AC70((os_log_type_t)v122))
        {
          uint64_t v289 = v115;
          unint64_t v138 = v135;
          uint64_t v139 = sub_10015B4AC();
          v266 = (_DWORD *)sub_100120414();
          *(_DWORD *)uint64_t v139 = sub_10016ADC0((uint64_t)v266).n128_u32[0];
          uint64_t v140 = sub_10016AB00((uint64_t)&a10);
          ((void (*)(uint64_t))v117)(v140);
          sub_10011EB80(v135, 0, 1, v114);
          uint64_t v141 = v135;
          uint64_t v142 = v263;
          sub_1001692B4(v141, v263);
          if (sub_100120F20(v142, 1, v114) == 1)
          {
            sub_10016931C(v142, &qword_1003224E8);
            sub_10016AF18();
            id v117 = (void (*)(void))v281;
          }
          else
          {
            sub_10016AF58();
            uint64_t v185 = sub_10016AD54();
            v186(v185);
            uint64_t v187 = sub_10016AB00((uint64_t)&v292);
            ((void (*)(uint64_t))v117)(v187);
            uint64_t v142 = String.init<A>(reflecting:)();
            unint64_t v138 = v188;
            id v117 = (void (*)(void))v281;
            sub_10016ABCC();
            v189();
            uint64_t v87 = v284;
          }
          sub_10016931C(v274, &qword_1003224E8);
          *(void *)(v139 + 4) = sub_1001412B0(v142, v138, v295);
          swift_bridgeObjectRelease();
          uint64_t v190 = *(void (**)(void))v117;
          sub_10016ABCC();
          v190();
          _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v122, "EnhancedEmergency: can't save result: %s, filePromise url is nil", (uint8_t *)v139, 0xCu);
          uint64_t v116 = (uint64_t)v266;
          swift_arrayDestroy();
          sub_100120278();
          sub_100120278();

          uint64_t v191 = sub_10016AD04();
          v192(v191);
          ((void (*)(char *, uint64_t))v190)(v87, v114);
          goto LABEL_55;
        }

        uint64_t v172 = *v281;
        sub_10016AAF0();
        v172();
        uint64_t v173 = sub_10016AD04();
        v174(v173);
        sub_10016AAF0();
        v172();
        uint64_t v87 = v136;
LABEL_68:
        v118 += v282;
        if (!--v115)
        {
          swift_bridgeObjectRelease();
          id v88 = v254;
          uint64_t v24 = v249;
          break;
        }
      }
    }
    swift_beginAccess();
    uint64_t v222 = swift_bridgeObjectRetain();
    uint64_t v223 = sub_1001683CC(v222);
    swift_bridgeObjectRelease();
    if (v223 < 1)
    {
      uint64_t v233 = (void *)sub_10016AC88();
      os_log_type_t v234 = static os_log_type_t.error.getter();
      if (sub_10016AB5C(v234))
      {
        id v235 = (_WORD *)sub_100138CE8();
        sub_10016AC04(v235);
        sub_1001443F4((void *)&_mh_execute_header, v236, v237, "EnhancedEmergency: mediaSet count is 0");
        sub_100120278();

LABEL_80:
        sub_100123384();
        return;
      }
    }
    else
    {
      id v224 = v24;
      id v225 = (void *)sub_10016AC88();
      os_log_type_t v226 = static os_log_type_t.default.getter();
      if (sub_10015B380(v226))
      {
        uint64_t v227 = sub_10015B4AC();
        v295[0] = sub_100120414();
        *(_DWORD *)uint64_t v227 = 136315138;
        v293 = (v227 + 4);
        sub_100123340(0, &qword_1003224F0);
        sub_1001691F4();
        swift_bridgeObjectRetain();
        uint64_t v228 = Set.description.getter();
        unint64_t v230 = v229;
        swift_bridgeObjectRelease();
        uint64_t v294 = sub_1001412B0(v228, v230, v295);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v88 = v254;
        swift_bridgeObjectRelease();
        sub_10016AFD0((void *)&_mh_execute_header, v231, v232, "EnhancedEmergency: trying to send mediaSet for upload: %s");
        swift_arrayDestroy();
        sub_100120278();
        sub_100120278();
      }
      else
      {
      }
      v238 = *(void **)&v224[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
      if (v238)
      {
        sub_100123340(0, &qword_1003224F0);
        sub_1001691F4();
        id v239 = v238;
        swift_bridgeObjectRetain();
        Class isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v241 = [v88 ID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        Class v242 = UUID._bridgeToObjectiveC()().super.isa;
        sub_100138D8C();
        v243();
        uint64_t v244 = swift_allocObject();
        *(void *)(v244 + 16) = v88;
        *(void *)(v244 + 24) = v224;
        v295[4] = (uint64_t)sub_100169294;
        v295[5] = v244;
        v295[0] = (uint64_t)_NSConcreteStackBlock;
        v295[1] = 1107296256;
        v295[2] = (uint64_t)sub_1001E5860;
        v295[3] = (uint64_t)&unk_1002D2AB0;
        id v245 = _Block_copy(v295);
        id v246 = v88;
        id v247 = v224;
        swift_release();
        [v239 mediaUploadList:isa forRequestID:v242 completion:v245];

        _Block_release(v245);
        goto LABEL_80;
      }
    }

    goto LABEL_80;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v92 = type metadata accessor for Logger();
  uint64_t v93 = (void *)sub_100138D44(v92, (uint64_t)qword_10032CBE8);
  os_log_type_t v94 = static os_log_type_t.default.getter();
  if (sub_10016AB5C(v94))
  {
    id v95 = (_WORD *)sub_100138CE8();
    sub_10016AC04(v95);
    sub_1001443F4((void *)&_mh_execute_header, v96, v97, "EnhancedEmergency: uploadMedia, cannot uplaod media due to upload mitigation.");
    sub_100120278();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong requestToDisableMediaUploadButton];
    swift_unknownObjectRelease();
  }
  id v99 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v99)
  {
    [v99 requestToAddPhotoMitigationLabel];

    sub_100123384();
    swift_unknownObjectRelease();
    return;
  }

LABEL_18:
  sub_100123384();
}

uint64_t sub_1001683CC(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return __CocoaSet.count.getter();
  }
  else {
    return *(void *)(a1 + 16);
  }
}

uint64_t sub_1001683EC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v11);
  id v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123340(0, (unint64_t *)&qword_100321370);
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a2;
  _OWORD v15[3] = a1;
  void v15[4] = a3;
  aBlock[4] = sub_10016A684;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10012EDF4;
  aBlock[3] = &unk_1002D2B00;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_errorRetain();
  id v18 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10016A690((unint64_t *)&qword_1003218E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10011EB3C((uint64_t *)&unk_100321380);
  sub_10016A9CC((unint64_t *)&qword_1003218F0, (uint64_t *)&unk_100321380);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v20);
}

uint64_t sub_1001686D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10011EC48(v11, (uint64_t)qword_10032CBE8);
  id v12 = a1;
  swift_errorRetain();
  id v13 = v12;
  swift_errorRetain();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = a3;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v29[0] = v26;
    *(_DWORD *)uint64_t v16 = 136315394;
    v24[1] = v16 + 4;
    id v17 = [v13 ID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10016A690(&qword_100322510, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v28 = sub_1001412B0(v18, v20, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2112;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v28 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      uint64_t v28 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v21 = 0;
    }
    void *v25 = v21;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "EnhancedEmergency: finished sending mediaSet for media upload request: %s, error: %@", (uint8_t *)v16, 0x16u);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v27;
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v22 = (void *)(a3 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaSet);
  swift_beginAccess();
  *uint64_t v22 = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

void sub_100168AC4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emegencyMediaRequestViewController);
  if (v1)
  {
    uint64_t v2 = qword_100320540;
    id v10 = v1;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    uint64_t v4 = (void *)sub_100138D44(v3, (uint64_t)qword_10032CBE8);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v5))
    {
      uint64_t v6 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v6);
      sub_1001443D4((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: emergency coordinator gets notified requestToRemoveMediaRequestViewController");
      sub_100120278();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong removeMediaRequestViewController:v10];
      swift_unknownObjectRelease();
    }
    sub_10016210C();
  }
}

#error "100168CA0: call analysis failed (funcsize=115)"

void sub_100168E18(void *a1)
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10011EC48(v3, (uint64_t)qword_10032CBE8);
  id v4 = v1;
  id v5 = a1;
  id v6 = v4;
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  int v9 = static os_log_type_t.default.getter();
  if (sub_10016AC70((os_log_type_t)v9))
  {
    HIDWORD(v32) = v9;
    uint64_t v10 = sub_100120414();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412802;
    id v12 = (char *)v6;
    sub_10016B168((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v30, v32, (char)v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v6;

    *(_WORD *)(v10 + 12) = 2112;
    unint64_t v20 = *(void **)&v12[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
    if (v20)
    {
      uint64_t v34 = *(void *)&v12[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRequestHelper];
      id v21 = v20;
      sub_10016B168((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v31, v33, v34);
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v11[1] = v20;

    *(_WORD *)(v10 + 22) = 2112;
    id v29 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void v11[2] = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, BYTE4(v33), "EnhancedEmergency: enhancedEmergencyCoordinator %@ gets notified form eedRequestHelper %@ that mitigations needs to be applied %@", (uint8_t *)v10, 0x20u);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  sub_100164B60();
}

id sub_1001690F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, NSURL *a4@<X8>)
{
  id v5 = v4;
  URL._bridgeToObjectiveC()(a4);
  uint64_t v10 = v9;
  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v5 initWithURL:v10 assetIdentifier:v11 sandboxExtension:v12 mediaType:a3];

  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
  return v13;
}

unint64_t sub_1001691F4()
{
  unint64_t result = qword_1003224F8;
  if (!qword_1003224F8)
  {
    sub_100123340(255, &qword_1003224F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003224F8);
  }
  return result;
}

uint64_t sub_100169254()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100169294(uint64_t a1)
{
  return sub_1001683EC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10016929C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001692AC()
{
  return swift_release();
}

uint64_t sub_1001692B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C(&qword_1003224E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016931C(uint64_t a1, uint64_t *a2)
{
  sub_10011EB3C(a2);
  sub_100138D8C();
  v3();
  return a1;
}

uint64_t sub_100169374(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_100169390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10015B760();
  NSString v11 = v10;
  id v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = *v10;
  if ((*v10 & 0xC000000000000001) == 0)
  {
    Swift::Int v20 = *(void *)(v16 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v21 = NSObject._rawHashValue(seed:)(v20);
    uint64_t v22 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v23 = v21 & ~v22;
    sub_10016AF44();
    if (v24)
    {
      type metadata accessor for PerRequestMetricData();
      id v25 = *(id *)(*(void *)(v16 + 48) + 8 * v23);
      char v26 = static NSObject.== infix(_:_:)();

      if (v26)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v31 = *(void **)(*(void *)(*v11 + 48) + 8 * v23);
        *uint64_t v15 = v31;
        id v32 = v31;
        goto LABEL_21;
      }
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        sub_10016AF44();
        if ((v28 & 1) == 0) {
          break;
        }
        id v29 = *(id *)(*(void *)(v16 + 48) + 8 * v23);
        char v30 = static NSObject.== infix(_:_:)();

        if (v30) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *v11;
    uint64_t *v11 = 0x8000000000000000;
    id v18 = v13;
    sub_100169F44((uint64_t)v18, v23, isUniquelyReferenced_nonNull_native);
    uint64_t *v11 = v40;
    goto LABEL_20;
  }
  if (v16 < 0) {
    uint64_t v17 = *v10;
  }
  else {
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v18 = v13;
  uint64_t v19 = __CocoaSet.member(for:)();

  if (v19)
  {
    swift_bridgeObjectRelease();

    type metadata accessor for PerRequestMetricData();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    *uint64_t v15 = a10;
    swift_unknownObjectRelease();
LABEL_21:
    sub_10015B69C();
    return;
  }
  uint64_t v33 = __CocoaSet.count.getter();
  if (!__OFADD__(v33, 1))
  {
    Swift::Int v34 = sub_100169888(v17, v33 + 1);
    uint64_t v39 = (void *)v34;
    if (*(void *)(v34 + 24) <= *(void *)(v34 + 16))
    {
      id v38 = v18;
      sub_100169C70();
      uint64_t v35 = v39;
    }
    else
    {
      uint64_t v35 = (void *)v34;
      id v36 = v18;
    }
    sub_100169EC0((uint64_t)v18, v35);
    uint64_t *v11 = (uint64_t)v35;
LABEL_20:
    swift_bridgeObjectRelease();
    *uint64_t v15 = v18;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1001695E4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100123340(0, &qword_1003224F0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100169A74(v7, result + 1);
    char v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_100169C70();
      unint64_t v23 = v28;
    }
    else
    {
      unint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_100169EC0((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v10 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v11 = NSObject._rawHashValue(seed:)(v10);
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_100123340(0, &qword_1003224F0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = static NSObject.== infix(_:_:)();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v3 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = static NSObject.== infix(_:_:)();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10016A0DC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_100169888(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_10011EB3C(&qword_100322518);
  uint64_t v2 = static _SetStorage.convert(_:capacity:)();
  uint64_t v14 = v2;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  type metadata accessor for PerRequestMetricData();
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_100169C70();
      uint64_t v2 = v14;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

Swift::Int sub_100169A74(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_10011EB3C(&qword_100322508);
  uint64_t v2 = static _SetStorage.convert(_:capacity:)();
  uint64_t v14 = v2;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_100123340(0, &qword_1003224F0);
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_100169C70();
      uint64_t v2 = v14;
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

void sub_100169C70()
{
  sub_10015B760();
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10011EB3C(v3);
  uint64_t v4 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v5 = v4;
  if (*(void *)(v2 + 16))
  {
    char v28 = v0;
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v7 = (void *)(v2 + 56);
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v11 = v4 + 56;
    swift_retain();
    int64_t v12 = 0;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = v19 + (v12 << 6))
    {
      uint64_t v20 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      unint64_t v21 = NSObject._rawHashValue(seed:)(*(void *)(v5 + 40)) & ~(-1 << *(unsigned char *)(v5 + 32));
      if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
      {
        sub_10016B140();
        while (++v24 != v25 || (v23 & 1) == 0)
        {
          BOOL v26 = v24 == v25;
          if (v24 == v25) {
            uint64_t v24 = 0;
          }
          v23 |= v26;
          if (*(void *)(v11 + 8 * v24) != -1)
          {
            sub_10016B12C();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_10016B154();
LABEL_30:
      *(void *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v5 + 48) + 8 * v22) = v20;
      ++*(void *)(v5 + 16);
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v10) {
        goto LABEL_32;
      }
      ++v12;
      if (!v7[v15])
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v10) {
          goto LABEL_32;
        }
        if (!v7[v12])
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v10) {
            goto LABEL_32;
          }
          if (!v7[v12])
          {
            int64_t v16 = v15 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v28;
              sub_10016B0E0();
              if (v27 > 63) {
                sub_100169374(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *unint64_t v7 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            if (!v7[v16])
            {
              while (1)
              {
                int64_t v12 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v10) {
                  goto LABEL_32;
                }
                ++v16;
                if (v7[v12]) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v16;
          }
        }
      }
LABEL_20:
      sub_10016AEE0();
      unint64_t v9 = v18 & v17;
    }
  }
  swift_release();
  *uint64_t v1 = v5;
  sub_10015B69C();
}

unint64_t sub_100169EC0(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_100169F44(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100169C70();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10016A284();
      goto LABEL_14;
    }
    sub_10016A410();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for PerRequestMetricData();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void sub_10016A0DC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100169C70();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10016A284();
      goto LABEL_14;
    }
    sub_10016A410();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100123340(0, &qword_1003224F0);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void sub_10016A284()
{
  sub_10016AF7C();
  uint64_t v1 = v0;
  sub_10011EB3C(v2);
  uint64_t v3 = (void *)*v0;
  uint64_t v4 = static _SetStorage.copy(original:)();
  if (!v3[2])
  {
LABEL_28:
    swift_release();
    *uint64_t v1 = v4;
    sub_10016AC40();
    return;
  }
  sub_10016B0E0();
  unint64_t v6 = v3 + 7;
  unint64_t v8 = (unint64_t)(v7 + 63) >> 6;
  if ((void *)v4 != v3 || v5 >= &v3[v8 + 7]) {
    memmove(v5, v3 + 7, 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v4 + 16) = v3[2];
  sub_10016B0E0();
  uint64_t v12 = v3[7];
  uint64_t v13 = -1;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  unint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  if ((v13 & v12) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v16 | (v10 << 6); ; unint64_t i = v22 + (v10 << 6))
  {
    char v23 = *(void **)(v3[6] + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v23;
    id v24 = v23;
    if (v14) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15) {
      goto LABEL_28;
    }
    ++v10;
    if (!v6[v18])
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_28;
      }
      if (!v6[v10])
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_28;
        }
        if (!v6[v10]) {
          break;
        }
      }
    }
LABEL_25:
    sub_10016AEE0();
    unint64_t v14 = v21 & v20;
  }
  int64_t v19 = v18 + 3;
  if (v19 >= v15) {
    goto LABEL_28;
  }
  if (v6[v19])
  {
    int64_t v10 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v15) {
      goto LABEL_28;
    }
    ++v19;
    if (v6[v10]) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_10016A410()
{
  sub_10015B760();
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  sub_10011EB3C(v3);
  uint64_t v4 = static _SetStorage.resize(original:capacity:move:)();
  if (!v2[2])
  {
    swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    sub_10015B69C();
    return;
  }
  uint64_t v27 = v0;
  sub_10016B0E0();
  unint64_t v6 = v2 + 7;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v2[7];
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v4 + 56;
  swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = v18 + (v11 << 6))
  {
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(v2[6] + 8 * i);
    unint64_t v21 = NSObject._rawHashValue(seed:)(v19) & ~(-1 << *(unsigned char *)(v4 + 32));
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
    {
      sub_10016B140();
      while (++v24 != v25 || (v23 & 1) == 0)
      {
        BOOL v26 = v24 == v25;
        if (v24 == v25) {
          uint64_t v24 = 0;
        }
        v23 |= v26;
        if (*(void *)(v10 + 8 * v24) != -1)
        {
          sub_10016B12C();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    sub_10016B154();
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v4 + 48) + 8 * v22) = v20;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    ++v11;
    if (!v6[v14])
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_32;
      }
      if (!v6[v11])
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_32;
        }
        if (!v6[v11]) {
          break;
        }
      }
    }
LABEL_20:
    sub_10016AEE0();
    unint64_t v8 = v17 & v16;
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v9)
  {
LABEL_32:
    swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_34;
  }
  if (v6[v15])
  {
    int64_t v11 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_32;
    }
    ++v15;
    if (v6[v11]) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_10016A63C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016A684()
{
  return sub_1001686D4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10016A690(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10016A6D8()
{
  sub_100164DB0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10016A6E0(void *a1, uint64_t a2)
{
}

void sub_10016A6E8()
{
}

void *sub_10016A730()
{
  return sub_10016463C(*(void **)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadState, (void (*)(void *))sub_10015CA64, (SEL *)&selRef_requestToEnableMediaUploadButton);
}

void sub_10016A770()
{
}

void *sub_10016A7B8()
{
  return sub_10016463C(*(void **)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingState, (void (*)(void *))sub_10015C9EC, (SEL *)&selRef_requestToEnableVideoStreamingButton);
}

void sub_10016A7F8(uint64_t a1, uint64_t a2)
{
  sub_100162664(a1, a2, *(void **)(v2 + 16));
}

void sub_10016A800()
{
  sub_100163790(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10016A808()
{
  sub_100162FF0(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10016A810(void *a1, uint64_t a2)
{
  sub_1001632A4(a1, a2, *(void **)(v2 + 16));
}

void sub_10016A818(void *a1, uint64_t a2)
{
  sub_100163A44(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10016A820()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016A858()
{
  return sub_100162510();
}

uint64_t sub_10016A87C()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10016A8BC(void *a1, uint64_t a2)
{
  sub_100161268(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), (uint64_t)CLEEDUploadRequest_ptr, "EnhancedEmergency: EED returned error while updating state: %s for media upload request: %@, error: %@", sub_10015CA64, &OBJC_IVAR___PHEnhancedEmergencyCoordinator_mediaUploadRequest, "EnhancedEmergency: finished updating state: %s for media upload request: %@, error: %@");
}

void sub_10016A91C(void *a1, uint64_t a2)
{
  sub_100161268(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), (uint64_t)CLEEDStreamingRequest_ptr, "EnhancedEmergency: EED returned error while updating state: %s for video streaming request: %@, error: %@", sub_10015C9EC, &OBJC_IVAR___PHEnhancedEmergencyCoordinator_videoStreamingRequest, "EnhancedEmergency: finished updating state: %s for video streaming request: %@, error: %@");
}

uint64_t sub_10016A97C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10016A9B4(char a1)
{
}

void sub_10016A9BC(char a1)
{
}

void sub_10016A9C4(char a1)
{
  sub_10015EA88(a1, *(void **)(v1 + 16));
}

uint64_t sub_10016A9CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001221B0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016AB00@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_10016AB1C()
{
  return *(void *)(v0 - 184);
}

uint64_t sub_10016AB38()
{
  return v0;
}

BOOL sub_10016AB5C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_10016AB78()
{
  *(void *)(v1 - 256) = v0;
}

id sub_10016AB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(const char **)(v8 + 3768);
  return [v6 v10:v5 v7:a5];
}

void sub_10016ABAC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_10016ABD8(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_10016ABEC()
{
  return v0;
}

_WORD *sub_10016AC04(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

void sub_10016AC54()
{
  sub_10016E308(v0, v1);
}

BOOL sub_10016AC70(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10016AC88()
{
  return Logger.logObject.getter();
}

uint64_t sub_10016ACA0()
{
  return v0;
}

BOOL sub_10016ACB4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10016ACD0()
{
  return v0;
}

uint64_t sub_10016AD04()
{
  return *(void *)(v0 - 184);
}

uint64_t sub_10016AD24()
{
  return swift_slowAlloc();
}

void sub_10016AD3C()
{
  *(void *)(v1 - 88) = v0;
  type metadata accessor for CLEEDRequestState(0);
}

uint64_t sub_10016AD54()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_10016AD7C()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10016ADA4()
{
  return 0;
}

__n128 sub_10016ADC0(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return *(__n128 *)(v1 - 368);
}

void sub_10016ADD0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

void sub_10016ADEC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

BOOL sub_10016AE04(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

BOOL sub_10016AE20(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10016AE5C()
{
  return v0 - 96;
}

uint64_t sub_10016AE78()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10016AE9C()
{
  return 0;
}

id sub_10016AEAC()
{
  uint64_t v3 = *(const char **)(v1 + 2376);
  return [v0 v3];
}

BOOL sub_10016AEC4(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

uint64_t sub_10016AEF0()
{
  return swift_slowAlloc();
}

char *sub_10016AF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

void sub_10016AF2C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_10016AF64()
{
  return type metadata accessor for UUID();
}

id sub_10016AF90(uint64_t a1, const char *a2)
{
  return [v4 a2:v5 v3:v2];
}

void sub_10016AFB0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_10016AFD0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_10016AFF0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10016B030()
{
  return swift_arrayDestroy();
}

void sub_10016B050(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v8 = *(NSObject **)(v6 - 144);
  _os_log_impl(a1, v8, v5, a4, v4, 0xCu);
}

uint64_t sub_10016B070()
{
  return String.init<A>(reflecting:)();
}

id sub_10016B09C(uint64_t a1, const char *a2)
{
  return [v3 a2:v2];
}

uint64_t sub_10016B0B4()
{
  return v0 - 96;
}

uint64_t sub_10016B0C8()
{
  return swift_arrayDestroy();
}

uint64_t *sub_10016B0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

id sub_10016B114()
{
  return v0;
}

char *sub_10016B168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

void sub_10016B17C(uint64_t a1)
{
}

void sub_10016B188(uint64_t a1)
{
}

void sub_10016B194()
{
  sub_10016B17C(0);

  sub_10016B188(0);
}

void sub_10016B224(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClassUnconditional();
  id v7 = a1;
  id v4 = sub_10016B354(v3);
  sub_10016B17C((uint64_t)v4);
  sub_10016B188((uint64_t)[objc_allocWithZone((Class)TUHardwareControlsBroadcaster) init]);
  os_log_type_t v5 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_carPlayWindow);
  if (v5)
  {
    id v6 = v5;
    [v6 setHidden:0];
  }
}

id sub_10016B354(uint64_t a1)
{
  id v1 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:a1];
  id v2 = [objc_allocWithZone((Class)PHCarPlayInCallViewController) init];
  [v1 setRootViewController:v2];

  return v1;
}

id sub_10016B3CC()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_carPlayWindow] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService20CarPlaySceneDelegate_hardwareControlsBroadcaster] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlaySceneDelegate();
  return [super init];
}

id sub_10016B43C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlaySceneDelegate();
  [super dealloc];
}

uint64_t type metadata accessor for CarPlaySceneDelegate()
{
  return self;
}

unint64_t sub_10016B4E8(uint64_t a1)
{
  unint64_t result = 1701736302;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x66664F6F65646976;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x10016B5C0);
  }
  return result;
}

#error "10016B5E4: call analysis failed (funcsize=25)"

uint64_t sub_10016B684()
{
  return *(void *)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState);
}

id sub_10016B6BC(char a1)
{
  uint64_t v3 = v1;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10011EC48(v5, (uint64_t)qword_10032CBE8);
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (sub_10015B380(v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v16 = v9;
    if (a1) {
      uint64_t v10 = 1702195828;
    }
    else {
      uint64_t v10 = 0x65736C6166;
    }
    if (a1) {
      unint64_t v11 = 0xE400000000000000;
    }
    else {
      unint64_t v11 = 0xE500000000000000;
    }
    uint64_t v15 = sub_1001412B0(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v2, "EnhancedEmergency: updating for RTT enabled: %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }

  if ((a1 & 1) == 0) {
    return [v3 transitionToRTTState:0 v15, v16];
  }
  if (sub_10015D084())
  {
    unint64_t v12 = v3;
    uint64_t v13 = 2;
  }
  else
  {
    unint64_t v12 = v3;
    uint64_t v13 = 1;
  }
  return [v12 transitionToRTTState:v13, v15, v16];
}

void sub_10016B8E0(uint64_t a1)
{
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  uint64_t v5 = v1;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (sub_10015B380(v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    unint64_t v9 = sub_10016B4E8(*(void *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState]);
    sub_1001412B0(v9, v10, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    unint64_t v11 = sub_10016B4E8(a1);
    sub_1001412B0(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v2, "EnhancedEmergency: transitioning from RTT state %s to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  uint64_t v13 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState;
  uint64_t v14 = *(void *)&v5[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState];
  if (v14 != a1)
  {
    if (a1)
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return;
      }
      id v16 = [Strong getCurrentCall];
      swift_unknownObjectRelease();
      if (!v16) {
        return;
      }
      unsigned int v17 = [v16 isRTT];

      if (!v17) {
        return;
      }
      uint64_t v14 = *(void *)&v5[v13];
    }
    *(void *)&v5[v13] = a1;
    if (v14 == 4) {
      sub_10016BBD8();
    }
    switch(a1)
    {
      case 0:
      case 1:
      case 3:
        sub_10016C4C4();
        break;
      case 2:
        sub_10016BE6C();
        break;
      case 4:
        sub_10016C0B0();
        break;
      default:
        uint64_t v18 = a1;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x10016BBC4);
    }
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0);
  }
}

void sub_10016BBD8()
{
  id v1 = *(void **)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v1)
  {
    os_log_type_t v2 = v0;
    uint64_t v3 = qword_100320540;
    Swift::Int v19 = v1;
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)sub_100138CE8();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency: leaving pip state, stopping pip and restoring UI", v7, 2u);
      sub_100120278();
    }

    if ([v2 isShownAboveCoverSheet])
    {
      uint64_t v8 = (void *)Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (sub_1001203DC(v9))
      {
        unint64_t v10 = (_WORD *)sub_100138CE8();
        sub_10015B9F8(v10);
        sub_1001443D4((void *)&_mh_execute_header, v11, v12, "EnhancedEmergency: ICS shown above cover sheet, resuming video streaming");
        sub_100120278();
      }

      sub_100151FB8(0, 0);
    }
    uint64_t v13 = *(void **)&v2[OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator];
    if (v13)
    {
      id v14 = v13;
      sub_100143AA0();
    }
    sub_1001577C4();
    uint64_t v15 = *(void **)&v19[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
    if (v15) {
      [v15 setAccessibilityActivateBlock:0];
    }
    sub_10015C9D4(0);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong addWebRTCViewController:v19];
      swift_unknownObjectRelease();
    }
    unsigned int v17 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v17)
    {
      [v17 hideRTTConversationIfNeeded];
      swift_unknownObjectRelease();
    }
    uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v18)
    {
      [v18 insertWebViewUnderButtonControls:v19];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_10016BE6C()
{
  uint64_t v2 = v0;
  uint64_t v3 = OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController);
  if (v4)
  {
    id v5 = [v4 view];
    if (!v5)
    {
      __break(1u);
      return;
    }
    os_log_type_t v6 = v5;
    id v22 = [v5 superview];

    os_log_type_t v7 = v22;
    if (v22) {
      goto LABEL_21;
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v23 = [Strong getCurrentCall];
  swift_unknownObjectRelease();
  if (!v23) {
    return;
  }
  os_log_type_t v9 = *(void **)(v2 + v3);
  if (v9)
  {
    unint64_t v10 = *(void **)(v2 + v3);
LABEL_11:
    uint64_t v12 = qword_100320540;
    id v13 = v9;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10011EC48(v14, (uint64_t)qword_10032CBE8);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (sub_10015B380(v16))
    {
      unsigned int v17 = (uint8_t *)sub_100138CE8();
      *(_WORD *)unsigned int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v1, "EnhancedEmergency: showing RTT message view", v17, 2u);
      sub_100120278();
    }

    id v18 = v10;
    sub_10015C9C8((uint64_t)v10);
    Swift::Int v19 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v19)
    {
      [v19 hideCallControls];
      swift_unknownObjectRelease();
    }
    id v20 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
    if (v20)
    {
      id v21 = v20;
      sub_10012505C(v18);
    }
    goto LABEL_20;
  }
  id v11 = [self viewControllerForCall:v23];
  if (v11)
  {
    unint64_t v10 = v11;
    os_log_type_t v9 = 0;
    goto LABEL_11;
  }
LABEL_20:
  os_log_type_t v7 = v23;
LABEL_21:
}

void sub_10016C0B0()
{
  os_log_type_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)sub_100138CE8();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "EnhancedEmergency: showing RTT conversation and starting pip", v5, 2u);
    sub_100120278();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong showRTTConversation];
    swift_unknownObjectRelease();
  }
  os_log_type_t v7 = *(void **)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController];
  if (v7 && swift_unknownObjectWeakLoadStrong())
  {
    self;
    uint64_t v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      os_log_type_t v9 = (void *)v8;
      uint64_t v29 = v7;
      id v27 = [v9 view];
      swift_unknownObjectRelease();
      if (v27)
      {
        unint64_t v10 = *(void **)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController];
        if (v10)
        {
          id v11 = v10;
          sub_1001256F0(v11);
        }
        if (objc_msgSend(v1, "isShownAboveCoverSheet", v27))
        {
          uint64_t v12 = (void *)Logger.logObject.getter();
          os_log_type_t v13 = static os_log_type_t.default.getter();
          if (sub_1001203DC(v13))
          {
            uint64_t v14 = (_WORD *)sub_100138CE8();
            sub_10015B9F8(v14);
            sub_1001443D4((void *)&_mh_execute_header, v15, v16, "EnhancedEmergency: ICS shown above cover sheet, pausing video streaming and not starting pip");
            sub_100120278();
          }

          sub_100152648();
        }
        else
        {
          id v18 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v18)
          {
            [v18 removeWebRTCViewControllerForPIP:v29];
            swift_unknownObjectRelease();
          }
          Swift::Int v19 = (char *)objc_allocWithZone((Class)type metadata accessor for EnhancedEmergencyPIPCoordinator());
          id v20 = sub_10016CB98(v28, v29, v19);
          sub_10015C9D4((uint64_t)v20);
          id v21 = *(char **)&v1[OBJC_IVAR___PHEnhancedEmergencyCoordinator_pipCoordinator];
          if (v21)
          {
            *(void *)&v21[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_delegate + 8] = &off_1002D30C0;
            swift_unknownObjectWeakAssign();
            id v22 = v21;
            sub_1001439C0();
          }
        }
        sub_1001574A0();
        id v23 = *(void **)&v29[OBJC_IVAR___EmergencyWebRTCViewController_webRTCView];
        if (v23)
        {
          uint64_t v24 = swift_allocObject();
          swift_unknownObjectWeakInit();
          aBlock[4] = sub_10016CD18;
          aBlock[5] = v24;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10018CC54;
          aBlock[3] = &unk_1002D30F8;
          uint64_t v25 = _Block_copy(aBlock);
          id v26 = v23;
          swift_release();
          [v26 setAccessibilityActivateBlock:v25];

          _Block_release(v25);
          return;
        }

        unsigned int v17 = (char *)v28;
      }
      else
      {
        unsigned int v17 = v29;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_10016C4C4()
{
  os_log_type_t v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_rttRecentMessageViewController);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = qword_100320540;
    id v13 = v1;
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
    id v5 = (void *)Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v6))
    {
      os_log_type_t v7 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v7);
      sub_1001443D4((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: showing call controls");
      sub_100120278();
    }

    unint64_t v10 = *(void **)(v2 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
    if (v10)
    {
      id v11 = v10;
      sub_1001256F0(v13);
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong showCallControls];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

BOOL sub_10016C690()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  os_log_type_t v1 = Strong;
  if (Strong)
  {
    [Strong transitionToRTTState:2];
  }
  return v1 != 0;
}

void sub_10016C6FC()
{
  if (*(void *)&v0[OBJC_IVAR___PHEnhancedEmergencyCoordinator_eedRTTState] == 4)
  {
    os_log_type_t v1 = v0;
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
    uint64_t v3 = (void *)Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (sub_1001203DC(v4))
    {
      id v5 = (_WORD *)sub_100138CE8();
      sub_10015B9F8(v5);
      sub_1001443D4((void *)&_mh_execute_header, v6, v7, "EnhancedEmergency: got appWillResignActive notification, stopping pip");
      sub_100120278();
    }

    [v1 transitionToRTTState:2];
  }
}

id sub_10016C838()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v1 = [Strong getAudioRouteMenu];
  swift_unknownObjectRelease();
  return v1;
}

void sub_10016C8E0()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___PHEnhancedEmergencyCoordinator_emergencyWebRTCViewController);
  if (v1)
  {
    id v2 = v1;
    sub_1001244D0();
  }
}

uint64_t sub_10016C994()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (!v1) {
    return 0;
  }
  self;
  id v2 = (void *)swift_dynamicCastObjCClass();
  id v3 = v2;
  if (!v2)
  {
    swift_unknownObjectRelease();
    return (uint64_t)v3;
  }
  id v4 = [v2 currentInCallScene];
  if (!v4)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v5 = v4;
  if ([v4 isBeingShownAboveCoverSheet])
  {
    swift_unknownObjectRelease();

    return 1;
  }
  else
  {
    id v3 = [v3 isPresentingFullScreenOverlayCallUI];
    swift_unknownObjectRelease();
  }
  return (uint64_t)v3;
}

ValueMetadata *type metadata accessor for EnhancedEmergencyRTTState()
{
  return &type metadata for EnhancedEmergencyRTTState;
}

unint64_t sub_10016CAE8()
{
  unint64_t result = qword_100322558;
  if (!qword_100322558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322558);
  }
  return result;
}

void sub_10016CB34(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setOverrideInterruptionExemptionIdentifier:v4];
}

char *sub_10016CB98(void *a1, void *a2, char *a3)
{
  *(void *)&a3[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_presentationController] = a2;
  id v6 = objc_allocWithZone((Class)PGPictureInPictureProxy);
  uint64_t v7 = a3;
  id v8 = a2;
  unint64_t result = (char *)[v6 initWithControlsStyle:4 viewController:v8];
  if (result)
  {
    *(void *)&v7[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy] = result;
    *(void *)&v7[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_sourceView] = a1;
    id v10 = a1;

    v15.receiver = v7;
    v15.super_class = (Class)type metadata accessor for EnhancedEmergencyPIPCoordinator();
    id v11 = [super init];
    uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC13InCallService31EnhancedEmergencyPIPCoordinator_pictureInPictureProxy];
    id v13 = v11;
    [v12 setDelegate:v13];
    id v14 = v12;
    sub_10016CB34(0xD000000000000014, 0x8000000100236520, v14);

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10016CCE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_10016CD18()
{
  return sub_10016C690();
}

uint64_t sub_10016CD20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10016CD30()
{
  return swift_release();
}

void sub_10016CD38(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  [super viewWillAppear:a1 & 1];
  [v1 setHandlesCallWaitingCalls:1];
  id v3 = [self defaultCenter];
  uint64_t v4 = TUCallCenterVideoCallStatusChangedNotification;
  id v5 = [self mainQueue];
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v9[4] = sub_10016D348;
  void v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_10016CF24;
  _OWORD v9[3] = &unk_1002D3148;
  uint64_t v7 = _Block_copy(v9);
  swift_release();
  id v8 = [v3 addObserverForName:v4 object:0 queue:v5 usingBlock:v7];
  _Block_release(v7);
  swift_unknownObjectRelease();
}

void sub_10016CEC8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    [Strong updateCallGroups];
  }
}

uint64_t sub_10016CF24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v7(v6);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_10016D06C()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 currentAudioAndVideoCallGroups];

  sub_10016D2D0();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id sub_10016D14C(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  [v3 initWithCallDisplayStyleManager:a1];

  return v3;
}

id sub_10016D1CC(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  id v5 = [super initWithCallDisplayStyleManager:a1 contactsCache:a2];

  return v5;
}

id sub_10016D278()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallParticipantsViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CallParticipantsViewController()
{
  return self;
}

unint64_t sub_10016D2D0()
{
  unint64_t result = qword_100323DA0;
  if (!qword_100323DA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100323DA0);
  }
  return result;
}

uint64_t sub_10016D310()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10016D348()
{
}

uint64_t sub_10016D350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10016D360()
{
  return swift_release();
}

id sub_10016D368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestType] = a1;
  uint64_t v4 = &v3[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestID];
  *(void *)uint64_t v4 = a2;
  *((void *)v4 + 1) = a3;
  id v5 = v3;
  *(CFAbsoluteTime *)&v5[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestArrivalTime] = CFAbsoluteTimeGetCurrent();
  *(void *)&v5[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestShownToUserTime] = 0xBFF0000000000000;
  *(void *)&v5[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestActedUponByUserTime] = 0xBFF0000000000000;

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for PerRequestMetricData();
  return [super init];
}

void sub_10016D3F8()
{
}

id sub_10016D438()
{
  return sub_100170840(type metadata accessor for PerRequestMetricData);
}

uint64_t type metadata accessor for PerRequestMetricData()
{
  return self;
}

uint64_t sub_10016D488(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingInterface);
  *id v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

id sub_10016D4A4()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_bitRateArray] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_frameRateArray] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_packetLossArray] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_jitterRateArray] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorDefault] = -32767;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet] = &_swiftEmptySetSingleton;
  v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingRequestReceived] = 0;
  v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minBitRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minFrameRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxPacketLoss] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minJitterRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_totalBytesTransmittedWebRTCStream] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration] = 0xBFF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime] = 0xBFF0000000000000;
  v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchTurnedOnByButtonPress] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingDuration] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime] = 0xBFF0000000000000;
  id v1 = v0;
  *(CFAbsoluteTime *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_emergencyCallStartTime] = CFAbsoluteTimeGetCurrent();
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime] = 0xBFF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoDuration] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime] = 0xBFF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoDuration] = 0;
  v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_firstQualityMessageAfterStreamingWasUnpaused] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime] = 0xBFF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCQualityMessageCountSinceStreamingStart] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError] = -32767;
  v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery] = 1;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraFacing] = 1;
  uint64_t v2 = &v1[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingInterface];
  *uint64_t v2 = 0x64696C61766E49;
  v2[1] = 0xE700000000000000;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for EnhancedEmergencyDataCollector();
  return [super init];
}

void sub_10016D718(uint64_t a1)
{
  double v3 = sub_10015B6B8(a1, direct field offset for SOSUIWebRTCQualityMessage.framesPerSecond);
  if (v25) {
    double v4 = v3;
  }
  else {
    double v4 = -1.0;
  }
  double v6 = sub_10015B6B8(v2, direct field offset for SOSUIWebRTCQualityMessage.bitrate);
  if (v25) {
    double v8 = v6;
  }
  else {
    double v8 = v7;
  }
  double v10 = sub_10015B6B8(v5, direct field offset for SOSUIWebRTCQualityMessage.packetLoss);
  if (v25) {
    double v12 = v10;
  }
  else {
    double v12 = v11;
  }
  double v14 = sub_10015B6B8(v9, direct field offset for SOSUIWebRTCQualityMessage.jitter);
  if (v25) {
    double v16 = v14;
  }
  else {
    double v16 = v15;
  }
  double v17 = sub_10015B6B8(v13, direct field offset for SOSUIWebRTCQualityMessage.bytesSent);
  if (v25) {
    double v19 = v17;
  }
  else {
    double v19 = v18;
  }
  uint64_t v20 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime;
  double v21 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime);
  if (v21 > 0.0)
  {
    uint64_t v22 = *(void *)(v1
                    + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCQualityMessageCountSinceStreamingStart);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
    *(void *)(v1
              + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCQualityMessageCountSinceStreamingStart) = v24;
  }
  BOOL v25 = v21 > 0.0
     && *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState) == 2;
  if (v25)
  {
    uint64_t v26 = *(void *)(v1
                    + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCQualityMessageCountSinceStreamingStart);
    if (v26 == 1)
    {
      *(unsigned char *)(v1
               + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_firstQualityMessageAfterStreamingWasUnpaused) = 1;
      if (v8 <= v18) {
        goto LABEL_44;
      }
      goto LABEL_28;
    }
  }
  LOBYTE(v26) = 0;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_firstQualityMessageAfterStreamingWasUnpaused) = 0;
  if (v8 > v18)
  {
LABEL_28:
    double v27 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minBitRate);
    BOOL v28 = v27 != v18;
    if (v8 < v27) {
      BOOL v28 = 0;
    }
    if (v21 > 0.0 && (v26 & 1) == 0 && !v28) {
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minBitRate) = v8;
    }
    double v29 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate);
    if (v29 == v18 || v29 < v8) {
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxBitRate) = v8;
    }
    if (v21 <= 0.0) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) == 0)
    {
      sub_100170AD0();
      sub_1001BAF00();
      sub_100170CBC();
      sub_100170BA8();
      *(double *)(v31 + 32) = v8;
      swift_endAccess();
    }
LABEL_44:
    if (v4 <= -1.0) {
      goto LABEL_64;
    }
    goto LABEL_47;
  }
  if (v4 > v18)
  {
LABEL_47:
    double v32 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minFrameRate);
    BOOL v33 = v32 == -1.0 || v4 < v32;
    if (v33
      && (*(unsigned char *)(v1
                   + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_firstQualityMessageAfterStreamingWasUnpaused) & 1) == 0
      && *(double *)(v1 + v20) > 0.0)
    {
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minFrameRate) = v4;
    }
    double v34 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate);
    if (v34 == -1.0 || v34 < v4) {
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxFrameRate) = v4;
    }
    if ((*(unsigned char *)(v1
                   + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_firstQualityMessageAfterStreamingWasUnpaused) & 1) == 0
      && *(double *)(v1 + v20) > 0.0)
    {
      sub_100170AD0();
      sub_1001BAF00();
      sub_100170CBC();
      sub_100170BA8();
      *(double *)(v36 + 32) = v4;
      swift_endAccess();
    }
LABEL_64:
    if (v12 <= -1.0) {
      goto LABEL_73;
    }
    goto LABEL_65;
  }
  double v41 = -1.0;
  if (v12 > -1.0)
  {
LABEL_65:
    sub_100170C7C();
    if (v25 || v38 < v12) {
      *(double *)(v1 + v37) = v12;
    }
    if (*(double *)(v1 + v20) > 0.0)
    {
      sub_100170AD0();
      sub_1001BAF00();
      sub_100170CBC();
      sub_100170BA8();
      *(double *)(v40 + 32) = v12;
      swift_endAccess();
    }
LABEL_73:
    double v41 = -1.0;
    if (v16 <= -1.0)
    {
LABEL_89:
      double v41 = -1.0;
      goto LABEL_90;
    }
LABEL_74:
    double v42 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minJitterRate);
    BOOL v43 = v42 == v41 || v16 < v42;
    if (v43 && *(double *)(v1 + v20) > 0.0) {
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minJitterRate) = v16;
    }
    double v44 = *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate);
    if (v44 == v41 || v44 < v16) {
      *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxJitterRate) = v16;
    }
    if (*(double *)(v1 + v20) > 0.0)
    {
      sub_100170AD0();
      sub_1001BAF00();
      sub_100170CBC();
      sub_100170BA8();
      *(double *)(v46 + 32) = v16;
      swift_endAccess();
    }
    goto LABEL_89;
  }
  if (v16 > -1.0) {
    goto LABEL_74;
  }
LABEL_90:
  if (v19 <= v41) {
    return;
  }
  double v47 = v19
      + *(double *)(v1
                  + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_totalBytesTransmittedWebRTCStream);
  if ((~*(void *)&v47 & 0x7FF0000000000000) == 0) {
    goto LABEL_101;
  }
  if (v47 <= -9.22337204e18)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v47 >= 9.22337204e18)
  {
LABEL_103:
    __break(1u);
    return;
  }
  if ((uint64_t)v47 != 0x7FFFFFFFFFFFFFFFLL) {
    *(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_totalBytesTransmittedWebRTCStream) = v47;
  }
}

void sub_10016DAD4()
{
  sub_100170C7C();
  if (!(v8 ^ v4 | v3))
  {
    double v5 = *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel);
    if (v5 == v2 || v5 > v1) {
      *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomsub_10011E3C8(&qword_100320E10, type metadata accessor for Level) = v1;
    }
    double v7 = *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel);
    BOOL v8 = v7 == -1.0 || v7 < v1;
    if (v8) {
      *(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomsub_10011E3C8(&qword_100320E10, type metadata accessor for Level) = v1;
    }
  }
}

void sub_10016DB24(char a1)
{
  uint64_t v2 = v1;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10011EC48(v4, (uint64_t)qword_10032CBE8);
  double v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    double v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)double v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "EnhancedEmergency:torchStateChangeTo,torchTurnedOn:%{BOOL}d", v7, 8u);
    sub_100120278();
  }

  if (a1)
  {
    *(CFAbsoluteTime *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime) = CFAbsoluteTimeGetCurrent();
    char v8 = 1;
  }
  else
  {
    uint64_t v9 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime;
    if (*(double *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime) < 0.0) {
      return;
    }
    double Current = CFAbsoluteTimeGetCurrent();
    char v8 = 0;
    double v11 = vabdd_f64(Current, *(double *)(v2 + v9));
    double v12 = -0.0;
    if (*(double *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration) > 0.0) {
      double v12 = *(double *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration);
    }
    *(double *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration) = v11 + v12;
    *(void *)(v2 + v9) = 0xBFF0000000000000;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchTurnedOnByButtonPress) = v8;
}

void sub_10016DCB0(uint64_t a1)
{
  if (a1 == 1)
  {
    sub_100170BBC();
    if (!(v4 ^ v5 | v3))
    {
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100170D1C(Current);
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchTurnedOnByButtonPress) == 1)
    {
      uint64_t v7 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime;
      sub_100170BBC();
      if (!(!v3 & v8)) {
        *(CFAbsoluteTime *)(v1 + v7) = CFAbsoluteTimeGetCurrent();
      }
    }
LABEL_10:
    *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraFacing) = a1;
    return;
  }
  if (!a1)
  {
    *(CFAbsoluteTime *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = CFAbsoluteTimeGetCurrent();
    sub_100170BBC();
    if (!(v4 ^ v5 | v3))
    {
      double v9 = CFAbsoluteTimeGetCurrent();
      sub_100170D1C(v9);
    }
    goto LABEL_10;
  }
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

void sub_10016DDAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + direct field offset for SOSUIWebRTCState.state);
  switch(v2)
  {
    case 0:
      uint64_t v4 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) = 0xBFF0000000000000;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = 0xBFF0000000000000;
      goto LABEL_19;
    case 1:
      uint64_t v14 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState;
      uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState);
      if (v15 == 2)
      {
        sub_100170C9C(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime);
        if (v6 ^ v7 | v5) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
      if (v15 != 3) {
        goto LABEL_49;
      }
      sub_100170C9C(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime);
      if (!(v6 ^ v7 | v5))
      {
LABEL_45:
        double Current = CFAbsoluteTimeGetCurrent();
        sub_100170CD8(Current);
      }
LABEL_46:
      if (*(void *)(v1 + v14) == 2
        && !*(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraFacing))
      {
        *(CFAbsoluteTime *)(v1
                          + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = CFAbsoluteTimeGetCurrent();
      }
LABEL_49:
      if (*(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError) != -32767) {
        *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery) = 1;
      }
      uint64_t v26 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime;
      sub_100170BBC();
      if (!(!v5 & v27)) {
        *(CFAbsoluteTime *)(v1 + v26) = CFAbsoluteTimeGetCurrent();
      }
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchTurnedOnByButtonPress) == 1)
      {
        uint64_t v16 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime;
        sub_100170BBC();
        if (!(!v5 & v27)) {
LABEL_55:
        }
          *(CFAbsoluteTime *)(v1 + v16) = CFAbsoluteTimeGetCurrent();
      }
      goto LABEL_41;
    case 2:
      if (*(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState) == 3)
      {
        sub_100170BBC();
        if (!(v6 ^ v7 | v5))
        {
          double v8 = CFAbsoluteTimeGetCurrent();
          sub_100170A9C(v8);
        }
      }
      sub_100170BBC();
      if (!(v6 ^ v7 | v5))
      {
        double v9 = CFAbsoluteTimeGetCurrent();
        sub_100170A9C(v9);
      }
      sub_100170BBC();
      if (!(v6 ^ v7 | v5))
      {
        double v10 = CFAbsoluteTimeGetCurrent();
        sub_100170A9C(v10);
      }
      sub_100170BBC();
      if (!(v6 ^ v7 | v5))
      {
        double v11 = CFAbsoluteTimeGetCurrent();
        sub_100170A9C(v11);
      }
      *(CFAbsoluteTime *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime) = CFAbsoluteTimeGetCurrent();
      goto LABEL_40;
    case 3:
      *(CFAbsoluteTime *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) = CFAbsoluteTimeGetCurrent();
      uint64_t v16 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime;
      sub_100170BBC();
      if (!v6) {
        goto LABEL_41;
      }
      goto LABEL_55;
    case 4:
      uint64_t v3 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) = 0xBFF0000000000000;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = 0xBFF0000000000000;
      *(void *)(v1 + v3) = 0xBFF0000000000000;
      uint64_t v4 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime;
LABEL_19:
      *(void *)(v1 + v4) = 0xBFF0000000000000;
      goto LABEL_40;
    case 5:
    case 7:
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) = 0xBFF0000000000000;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) = 0xBFF0000000000000;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime) = 0xBFF0000000000000;
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime) = 0xBFF0000000000000;
      goto LABEL_40;
    case 6:
      uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState);
      if (v13 == 2)
      {
        sub_100170C9C(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime);
        if (v6 ^ v7 | v5) {
          goto LABEL_30;
        }
        goto LABEL_29;
      }
      if (v13 == 3)
      {
        sub_100170C9C(OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime);
        if (!(v6 ^ v7 | v5))
        {
LABEL_29:
          double v17 = CFAbsoluteTimeGetCurrent();
          sub_100170CD8(v17);
        }
      }
LABEL_30:
      if (*(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) > 0.0)
      {
        double v18 = CFAbsoluteTimeGetCurrent();
        sub_100170B40(v18);
      }
      if (*(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime) > 0.0)
      {
        double v19 = CFAbsoluteTimeGetCurrent();
        sub_100170B40(v19);
      }
      if (*(double *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime) > 0.0)
      {
        double v20 = CFAbsoluteTimeGetCurrent();
        sub_100170B40(v20);
      }
      uint64_t v21 = *(void *)(a1 + direct field offset for SOSUIWebRTCState.error);
      if (v21) {
        uint64_t v22 = *(void *)(v21 + direct field offset for SOSUIWebRTCErrorMessage.errorCode);
      }
      else {
        uint64_t v22 = -32767;
      }
      *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError) = v22;
      *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery) = 0;
LABEL_40:
      *(void *)(v1
                + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCQualityMessageCountSinceStreamingStart) = 0;
LABEL_41:
      uint64_t v23 = OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState;
      uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState);
      if (v2 != v24)
      {
        *(void *)(v1 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_previousWebRTCState) = v24;
        *(void *)(v1 + v23) = v2;
      }
      return;
    case 8:
      sub_10016EDF4();
      goto LABEL_41;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x10016E204);
  }
}

void sub_10016E228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone((Class)type metadata accessor for PerRequestMetricData());
  swift_bridgeObjectRetain();
  id v9 = sub_10016D368(a1, a2, a3);
  swift_beginAccess();
  id v10 = v9;
  sub_100169390((uint64_t)&v20, (uint64_t)v10, v11, v12, v13, v14, v15, v16, v18, v19);
  double v17 = v20;
  swift_endAccess();

  if (a1 == 1) {
    *(unsigned char *)(v4 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingRequestReceived) = 1;
  }
}

void sub_10016E2FC(uint64_t a1, uint64_t a2)
{
}

void sub_10016E308(uint64_t a1, uint64_t a2)
{
}

void sub_10016E314(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  char v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet);
  sub_100170A5C();
  uint64_t v8 = *v7;
  if ((*v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for PerRequestMetricData();
    sub_10017092C();
    Set.Iterator.init(_cocoa:)();
    uint64_t v8 = v26;
    uint64_t v24 = v27;
    uint64_t v9 = v28;
    int64_t v10 = v29;
    unint64_t v11 = v30;
  }
  else
  {
    uint64_t v24 = v8 + 56;
    uint64_t v9 = ~(-1 << *(unsigned char *)(v8 + 32));
    sub_100170E3C();
    unint64_t v11 = v12 & v13;
    swift_bridgeObjectRetain();
    int64_t v10 = 0;
  }
  int64_t v23 = (unint64_t)(v9 + 64) >> 6;
  if (v8 < 0) {
    goto LABEL_7;
  }
  while (1)
  {
    if (v11)
    {
      uint64_t v14 = (v11 - 1) & v11;
      unint64_t v15 = __clz(__rbit64(v11)) | (v10 << 6);
      int64_t v16 = v10;
      goto LABEL_24;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v18 >= v23) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v18);
    int64_t v16 = v10 + 1;
    if (!v19)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v23) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v24 + 8 * v16);
      if (!v19)
      {
        int64_t v16 = v10 + 3;
        if (v10 + 3 >= v23) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v24 + 8 * v16);
        if (!v19)
        {
          int64_t v16 = v10 + 4;
          if (v10 + 4 >= v23) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v24 + 8 * v16);
          if (!v19)
          {
            int64_t v20 = v10 + 5;
            while (v20 < v23)
            {
              unint64_t v19 = *(void *)(v24 + 8 * v20++);
              if (v19)
              {
                int64_t v16 = v20 - 1;
                goto LABEL_23;
              }
            }
LABEL_34:
            sub_100138B60();
            return;
          }
        }
      }
    }
LABEL_23:
    uint64_t v14 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v16 << 6);
LABEL_24:
    double v17 = (char *)*(id *)(*(void *)(v8 + 48) + 8 * v15);
    if (!v17) {
      goto LABEL_34;
    }
    while (1)
    {
      BOOL v21 = *(void *)&v17[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestID] == a1
         && *(void *)&v17[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestID + 8] == a2;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)()) && *(double *)&v17[*a3] < 0.0)
      {
        uint64_t v22 = *a3;
        *(CFAbsoluteTime *)&v17[v22] = CFAbsoluteTimeGetCurrent();
      }

      int64_t v10 = v16;
      unint64_t v11 = v14;
      if ((v8 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_7:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for PerRequestMetricData();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        double v17 = v25;
        swift_unknownObjectRelease();
        int64_t v16 = v10;
        uint64_t v14 = v11;
        if (v25) {
          continue;
        }
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

void sub_10016E5E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v60 = 0;
  if ((getifaddrs(&v60) & 0x80000000) == 0)
  {
    uint64_t v4 = v60;
    if (v60)
    {
      uint64_t v56 = a1 + 32;
      char v5 = 1;
      p_name = &OBJC_PROTOCOL___TUAudioDeviceControllerDelegate.name;
      while (1)
      {
        if ((v5 & 1) == 0) {
          uint64_t v4 = v4->ifa_next;
        }
        if (!v4) {
          break;
        }
        char v5 = 0;
        if (v4->ifa_name)
        {
          uint64_t v7 = String.init(cString:)();
          ifa_addr = v4->ifa_addr;
          if (ifa_addr)
          {
            uint64_t v52 = v7;
            unint64_t v57 = v8;
            uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
            *(void *)(v10 + 16) = 1025;
            uint64_t v58 = v10;
            unint64_t v11 = (char *)(v10 + 32);
            bzero((void *)(v10 + 32), 0x401uLL);
            sa_famildouble y = ifa_addr->sa_family;
            BOOL v13 = sa_family == 2 || sa_family == 30;
            if (v13 && !getnameinfo(ifa_addr, ifa_addr->sa_len, v11, 0x401u, 0, 0, 2))
            {
              uint64_t v14 = *(void *)(v58 + 16);
              if (!v14) {
                goto LABEL_69;
              }
              if (*v11)
              {
                uint64_t v15 = 0;
                uint64_t v16 = v14 - 1;
                while (v16 != v15)
                {
                  if (!*(unsigned __int8 *)(v58 + 33 + v15++)) {
                    goto LABEL_22;
                  }
                }
                __break(1u);
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
LABEL_22:
              swift_bridgeObjectRetain();
              uint64_t v54 = static String._fromUTF8Repairing(_:)();
              unint64_t v19 = v18;
              swift_bridgeObjectRelease();
              if (p_name[168] != (char *)-1) {
                swift_once();
              }
              uint64_t v20 = type metadata accessor for Logger();
              sub_10011EC48(v20, (uint64_t)qword_10032CBE8);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              BOOL v21 = Logger.logObject.getter();
              os_log_type_t v22 = static os_log_type_t.default.getter();
              unint64_t v53 = v19;
              uint64_t v51 = v4;
              if (os_log_type_enabled(v21, v22))
              {
                uint64_t v23 = swift_slowAlloc();
                v59[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v23 = 136315394;
                swift_bridgeObjectRetain();
                *(void *)(v23 + 4) = sub_1001412B0(v54, v19, v59);
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v23 + 12) = 2080;
                swift_bridgeObjectRetain();
                *(void *)(v23 + 14) = sub_1001412B0(v52, v57, v59);
                swift_bridgeObjectRelease_n();
                _os_log_impl((void *)&_mh_execute_header, v21, v22, "EnhancedEmergency:processNetworkInterfaceForStreamingSession,ipAddressFromIFConfig:%s,interface name:%s", (uint8_t *)v23, 0x16u);
                swift_arrayDestroy();
                sub_100120278();
                uint64_t v4 = v51;
                sub_100120278();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
              }
              uint64_t v55 = *(void *)(a1 + 16);
              if (v55)
              {
                uint64_t v49 = a1;
                uint64_t v50 = v2;
                swift_bridgeObjectRetain();
                uint64_t v24 = 0;
                BOOL v25 = (void *)v54;
                while (1)
                {
                  unint64_t v26 = *(void *)(v56 + 16 * v24 + 8);
                  uint64_t v27 = HIBYTE(v26) & 0xF;
                  if ((v26 & 0x2000000000000000) == 0) {
                    uint64_t v27 = *(void *)(v56 + 16 * v24) & 0xFFFFFFFFFFFFLL;
                  }
                  v59[0] = *(void *)(v56 + 16 * v24);
                  v59[1] = v26;
                  v59[2] = 0;
                  v59[3] = v27;
                  swift_bridgeObjectRetain();
                  Swift::String_optional v28 = String.Iterator.next()();
                  object = v28.value._object;
                  if (v28.value._object)
                  {
                    uint64_t countAndFlagsBits = v28.value._countAndFlagsBits;
                    do
                    {
                      if (countAndFlagsBits != 91 || object != (void *)0xE100000000000000)
                      {
                        char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        BOOL v33 = countAndFlagsBits == 93 && object == (void *)0xE100000000000000;
                        BOOL v34 = v33;
                        if ((v32 & 1) == 0 && !v34 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                        {
                          v35._uint64_t countAndFlagsBits = countAndFlagsBits;
                          v35._object = object;
                          String.append(_:)(v35);
                        }
                      }
                      swift_bridgeObjectRelease();
                      Swift::String_optional v36 = String.Iterator.next()();
                      uint64_t countAndFlagsBits = v36.value._countAndFlagsBits;
                      object = v36.value._object;
                    }
                    while (v36.value._object);
                    object = 0;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRetain_n();
                  uint64_t v37 = Logger.logObject.getter();
                  os_log_type_t v38 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v37, v38))
                  {
                    uint64_t v39 = (uint8_t *)swift_slowAlloc();
                    v59[0] = swift_slowAlloc();
                    *(_DWORD *)uint64_t v39 = 136315138;
                    swift_bridgeObjectRetain();
                    sub_1001412B0((uint64_t)object, 0xE000000000000000, v59);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl((void *)&_mh_execute_header, v37, v38, "EnhancedEmergency:processNetworkInterfaceForStreamingSession,addressFromWebRTCFiltered:%s", v39, 0xCu);
                    swift_arrayDestroy();
                    BOOL v25 = (void *)v54;
                    sub_100120278();
                    unint64_t v19 = v53;
                    sub_100120278();
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                  if (object == v25 && v19 == 0xE000000000000000) {
                    break;
                  }
                  char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v41) {
                    goto LABEL_61;
                  }
                  if (++v24 == v55)
                  {
                    swift_bridgeObjectRelease();
                    a1 = v49;
                    uint64_t v2 = v50;
                    p_name = (char **)(&OBJC_PROTOCOL___TUAudioDeviceControllerDelegate + 8);
                    uint64_t v4 = v51;
                    goto LABEL_59;
                  }
                }
                swift_bridgeObjectRelease();
LABEL_61:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v2 = v50;
                sub_10016D488(v52, v57);
                swift_bridgeObjectRelease();
                p_name = &OBJC_PROTOCOL___TUAudioDeviceControllerDelegate.name;
                break;
              }
LABEL_59:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRelease();
          char v5 = 0;
        }
      }
      if (p_name[168] == (char *)-1) {
        goto LABEL_63;
      }
LABEL_70:
      swift_once();
LABEL_63:
      uint64_t v42 = type metadata accessor for Logger();
      sub_10011EC48(v42, (uint64_t)qword_10032CBE8);
      BOOL v43 = v2;
      double v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        v59[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 136315138;
        uint64_t v47 = *(void *)&v43[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingInterface];
        unint64_t v48 = *(void *)&v43[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingInterface
                            + 8];
        swift_bridgeObjectRetain();
        sub_1001412B0(v47, v48, v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "EnhancedEmergency:processNetworkInterfaceForStreamingSession,completed,videoStreamingInterface:%s", v46, 0xCu);
        swift_arrayDestroy();
        sub_100120278();
        sub_100120278();
      }
      else
      {
      }
      freeifaddrs(v60);
    }
  }
}

void sub_10016EDF4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_currentWebRTCState);
  if (v1 == 2)
  {
    uint64_t v2 = (double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime);
    if (*(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoStartTime) <= 0.0) {
      goto LABEL_8;
    }
    uint64_t v3 = &OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoDuration;
    goto LABEL_7;
  }
  if (v1 == 3)
  {
    uint64_t v2 = (double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime);
    if (*(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoStartTime) > 0.0)
    {
      uint64_t v3 = &OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoDuration;
LABEL_7:
      *(double *)(v0 + *v3) = *(double *)(v0 + *v3) + vabdd_f64(CFAbsoluteTimeGetCurrent(), *v2);
      *uint64_t v2 = -1.0;
    }
  }
LABEL_8:
  if (*(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingStartTime) > 0.0)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    sub_100170B24(Current);
  }
  if (*(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingStartTime) > 0.0)
  {
    double v5 = CFAbsoluteTimeGetCurrent();
    sub_100170B24(v5);
  }
  if (*(double *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONStartTime) > 0.0)
  {
    double v6 = CFAbsoluteTimeGetCurrent();
    sub_100170B24(v6);
  }
}

void sub_10016EF1C()
{
  if ((v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingRequestReceived] & 1) == 0)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10011EC48(v8, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "EnhancedEmergency: submitCAMetric, No streaming request received during emergency call, early return", v10, 2u);
      sub_100120278();
    }
    sub_100170DC8();

    return;
  }
  sub_10016EDF4();
  double Current = CFAbsoluteTimeGetCurrent();
  double v153 = 0.0;
  double v2 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_emergencyCallStartTime];
  double v3 = 0.0;
  if (v2 > 0.0)
  {
    double v3 = vabdd_f64(Current, v2);
    double v153 = v3;
  }
  uint64_t v152 = 0;
  double v4 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingDuration];
  if (v4 > 0.0)
  {
    if (*(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_cameraUserFacingDuration] > 0.0)
    {
      sub_100170C38();
      uint64_t v152 = v5;
    }
    uint64_t v151 = 0;
    if (*(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_torchONDuration] > 0.0)
    {
      sub_100170C38();
      uint64_t v151 = v6;
    }
    uint64_t v150 = 0;
    if (v3 > 0.0)
    {
      sub_100170C38();
      uint64_t v150 = v7;
      goto LABEL_19;
    }
LABEL_21:
    double v149 = 0.0;
    goto LABEL_22;
  }
  uint64_t v150 = 0;
  uint64_t v151 = 0;
  if (v3 <= 0.0) {
    goto LABEL_21;
  }
LABEL_19:
  double v149 = 0.0;
  double v13 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_pausedVideoDuration];
  if (v13 > 0.0) {
    double v149 = ceil(v13 / v3 * 100.0);
  }
LABEL_22:
  double v148 = 0.0;
  if (v4 > 0.0)
  {
    double v14 = *(double *)&v0[OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_unstableVideoDuration];
    if (v14 > 0.0) {
      double v148 = ceil(v14 / v4 * 100.0);
    }
  }
  double v147 = 0.0;
  sub_100170A5C();
  sub_100170E10();
  if (v15)
  {
    double v16 = sub_100170CAC();
    do
      double v16 = sub_100170B94(v16);
    while (!v18);
    double v147 = sub_100170E04(v17, v16);
  }
  double v146 = 0.0;
  sub_100170A5C();
  sub_100170E10();
  if (v19)
  {
    double v20 = sub_100170CAC();
    do
      double v20 = sub_100170B94(v20);
    while (!v18);
    double v146 = sub_100170E04(v21, v20);
  }
  double v145 = 0.0;
  sub_100170A5C();
  sub_100170E10();
  if (v22)
  {
    double v23 = sub_100170CAC();
    do
      double v23 = sub_100170B94(v23);
    while (!v18);
    double v145 = sub_100170E04(v24, v23);
  }
  double v144 = 0.0;
  sub_100170A5C();
  sub_100170E10();
  if (v25)
  {
    double v26 = sub_100170CAC();
    do
      double v26 = sub_100170B94(v26);
    while (!v18);
    double v144 = sub_100170E04(v27, v26);
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10011EC48(v28, (uint64_t)qword_10032CBE8);
  *(double *)type = v144;
  uint64_t v29 = v0;
  unint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 134220544;
    sub_100170B5C();
    *(_WORD *)(v32 + 12) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 22) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 32) = 2048;
    sub_100170B5C();

    *(_WORD *)(v32 + 42) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 52) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 62) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 72) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 82) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 92) = 2048;
    sub_100170B5C();
    *(_WORD *)(v32 + 102) = 2048;
    aBlock[0] = *(void *)type;
    sub_100170B5C();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "EnhancedEmergency: submitCAMetric frontCameraVideoPercentage:%f torchOnPercentage:%f callDuration:%f videoOnDuration:%f videoOnPercentage:%f videoPausedPercentage:%f unstableVideoPercentage:%f averageBitRate:%f avgFrameRate:%f averagePacketLoss:%f averageJitterRate:%f", (uint8_t *)v32, 0x70u);
    sub_100120278();
  }
  else
  {

    unint64_t v30 = v29;
  }

  BOOL v33 = v29;
  BOOL v34 = Logger.logObject.getter();
  os_log_type_t typea = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, typea))
  {
    uint64_t v35 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 134221314;
    uint64_t v143 = *(uint64_t *)((char *)&v33->isa + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minBitRate);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 12) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 22) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 32) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 42) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 52) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 62) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 72) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 82) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 92) = 2048;
    uint64_t v143 = *(uint64_t *)((char *)&v33->isa
                      + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 102) = 1024;
    LODWORD(v143) = *((unsigned __int8 *)&v33->isa
                    + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 108) = 2048;
    sub_100170A40();
    *(_WORD *)(v35 + 118) = 1024;
    LODWORD(v143) = *((unsigned __int8 *)&v33->isa
                    + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 124) = 2080;
    uint64_t v37 = *(uint64_t *)((char *)&v33->isa
                     + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingInterface);
    unint64_t v36 = *(unint64_t *)((char *)&v33[1].isa
                              + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_videoStreamingInterface);
    swift_bridgeObjectRetain();
    uint64_t v143 = sub_1001412B0(v37, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, typea, "EnhancedEmergency: submitCAMetric minBitRate:%f maxBitRate:%f minFrameRate:%f maxFrameRate:%f maxPacketLoss:%f minJitterRate:%f maxJitterRate:%f maxZoomLevel:%f minZoomLevel:%f webRTCViewError:%ld webRTCViewErrorRecovery:%{BOOL}d totalBytesTransmittedWebRTCStream in MB:%f streamingDropped:%{BOOL}d videoStreamingInterface:%s", (uint8_t *)v35, 0x86u);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {
  }
  sub_100123340(0, &qword_100321250);
  Dictionary.init(dictionaryLiteral:)();
  sub_1001709E4();
  if (v18)
  {
    __break(1u);
    goto LABEL_135;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_136;
  }
  uint64_t v41 = (uint64_t)v39;
  sub_100170AF4(objc_allocWithZone((Class)NSNumber));
  sub_100170A28();
  sub_100170C2C();
  sub_100170B74(0xD000000000000021, v42, (uint64_t)"totalBytesTransmittedWebRTCStream");
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_139;
  }
  id v44 = sub_100170C64();
  sub_100170C4C(v44);
  sub_100170A28();
  sub_100170C2C();
  sub_100170B74(0xD000000000000017, v45, (uint64_t)"unstableVideoPercentage");
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_142;
  }
  id v46 = sub_100170C64();
  sub_100170C4C(v46);
  sub_100170A28();
  sub_100170C2C();
  sub_100170B74(0xD00000000000001ALL, v47, (uint64_t)"frontCameraVideoPercentage");
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_145;
  }
  id v48 = sub_100170C64();
  sub_100170C4C(v48);
  sub_100170A28();
  uint64_t v49 = sub_100170C88();
  sub_1001AECBC(v49, 0x617275446C6C6163, 0xEC0000006E6F6974, v50);
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_148;
  }
  id v51 = sub_100170C64();
  sub_100170C4C(v51);
  sub_100170A28();
  uint64_t v52 = sub_100170C88();
  sub_1001AECBC(v52, 0x446E4F6F65646976, 0xEF6E6F6974617275, v53);
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_151;
  }
  id v54 = sub_100170C64();
  sub_100170C4C(v54);
  sub_100170A28();
  sub_100170C2C();
  sub_100170A74(v55, (uint64_t)"videoOnPercentage");
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_154;
  }
  id v56 = sub_100170C64();
  sub_100170C4C(v56);
  sub_100170A28();
  sub_100170C2C();
  sub_100170B74(0xD000000000000015, v57, (uint64_t)"videoPausedPercentage");
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  sub_100170C7C();
  if (v40 ^ v43 | v18)
  {
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  sub_100170A1C();
  if (!v40) {
    goto LABEL_157;
  }
  id v58 = sub_100170C64();
  sub_100170C4C(v58);
  sub_100170A28();
  sub_100170C2C();
  sub_100170A74(v59, (uint64_t)"torchOnPercentage");
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  if (v60 <= -9.22337204e18)
  {
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_160;
  }
  id v61 = sub_100170B0C();
  sub_100170AF4(v61);
  sub_100170A28();
  uint64_t v62 = sub_100170BF0();
  sub_100170E1C(v62, v63 | 0x426E0000, v64, v65);
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  if (v66 <= -9.22337204e18)
  {
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_163;
  }
  id v67 = sub_100170B0C();
  sub_100170AF4(v67);
  sub_100170A28();
  uint64_t v68 = sub_100170AB8();
  sub_100170E1C(v68, v69 | 0x42780000, v70, v71);
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_164:
    __break(1u);
    goto LABEL_165;
  }
  if (v72 <= -9.22337204e18)
  {
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_166;
  }
  id v73 = sub_100170B0C();
  sub_100170AF4(v73);
  sub_100170A28();
  uint64_t v74 = sub_100170D38();
  sub_1001AECBC(v74, v75 | 0x4265676172650000, 0xEE00657461527469, v76);
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_167:
    __break(1u);
    goto LABEL_168;
  }
  if (v77 <= -9.22337204e18)
  {
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_169;
  }
  id v78 = sub_100170B0C();
  sub_100170AF4(v78);
  sub_100170A28();
  uint64_t v79 = sub_100170BF0();
  sub_100170C08(v79, v80 | 0x466E0000, v81, v82);
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if (v83 <= -9.22337204e18)
  {
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_172;
  }
  id v84 = sub_100170B0C();
  sub_100170AF4(v84);
  sub_100170A28();
  uint64_t v85 = sub_100170AB8();
  sub_100170C08(v85, v86 | 0x46780000, v87, v88);
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  if (v89 <= -9.22337204e18)
  {
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_175;
  }
  id v90 = sub_100170B0C();
  sub_100170AF4(v90);
  sub_100170A28();
  uint64_t v91 = sub_100170D38();
  sub_100170C08(v91, v92 | 0x46670000, v93, v94);
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_176:
    __break(1u);
    goto LABEL_177;
  }
  if (v95 <= -9.22337204e18)
  {
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_178;
  }
  id v96 = sub_100170B0C();
  sub_100170AF4(v96);
  sub_100170A28();
  uint64_t v97 = sub_100170AB8();
  sub_1001AECBC(v97, v98 | 0x656B636150780000, 0xED000073736F4C74, v99);
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_179:
    __break(1u);
    goto LABEL_180;
  }
  if (v100 <= -9.22337204e18)
  {
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_181;
  }
  id v101 = sub_100170B0C();
  sub_100170AF4(v101);
  sub_100170A28();
  sub_100170C2C();
  sub_100170A74(v102, (uint64_t)"averagePacketLoss");
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  if (v103 <= -9.22337204e18)
  {
LABEL_183:
    __break(1u);
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_184;
  }
  id v104 = sub_100170B0C();
  sub_100170AF4(v104);
  sub_100170A28();
  uint64_t v105 = sub_100170BF0();
  sub_100170CF4(v105, v106 | 0x4A6E0000, v107, v108);
  sub_100170A04();
  sub_1001709E4();
  if (v18)
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  if (v109 <= -9.22337204e18)
  {
LABEL_186:
    __break(1u);
LABEL_187:
    __break(1u);
    goto LABEL_188;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_187;
  }
  id v110 = sub_100170B0C();
  sub_100170AF4(v110);
  sub_100170A28();
  uint64_t v111 = sub_100170AB8();
  sub_100170CF4(v111, v112 | 0x4A780000, v113, v114);
  sub_100170A04();
  sub_100170A5C();
  sub_1001709E4();
  if (v18)
  {
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  if (v115 <= -9.22337204e18)
  {
LABEL_189:
    __break(1u);
LABEL_190:
    __break(1u);
    return;
  }
  sub_1001709F4();
  if (!v40) {
    goto LABEL_190;
  }
  id v116 = sub_100170B0C();
  sub_100170AF4(v116);
  sub_100170A28();
  sub_100170C2C();
  sub_100170A74(v117, (uint64_t)"averageJitterRate");
  sub_100170D74();
  [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)((char *)&v33->isa + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_maxZoomLevel)];
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v118 = sub_100170DF0();
  sub_100170D50(v118, 0x5A78616Du, v119, v120);
  sub_100170D74();
  [objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)((char *)&v33->isa + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_minZoomLevel)];
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v121 = sub_100170DF0();
  sub_100170D50(v121, 0x5A6E696Du, v122, v123);
  sub_100170D74();
  id v124 = [objc_allocWithZone((Class)NSNumber) initWithBool:*((unsigned __int8 *)&v33->isa+ OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_streamingDropped)];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v41;
  sub_1001AECBC((uint64_t)v124, 0xD000000000000010, 0x80000001002366B0, isUniquelyReferenced_nonNull_native);
  sub_100170D74();
  sub_100123340(0, &qword_100321C80);
  swift_bridgeObjectRetain();
  id v126 = sub_100170110();
  char v127 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v41;
  sub_1001AECBC((uint64_t)v126, 0xD000000000000017, 0x8000000100236A10, v127);
  sub_100170A04();
  uint64_t v128 = *(uint64_t *)((char *)&v33->isa + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewError);
  if (v128 != -32767)
  {
    [objc_allocWithZone((Class)NSNumber) initWithLongLong:v128];
    sub_100170A28();
    uint64_t v129 = sub_100170C88();
    sub_1001AECBC(v129, 0x6956435452626577, 0xEF726F7272457765, v130);
    sub_100170D74();
    id v131 = [objc_allocWithZone((Class)NSNumber) initWithBool:*((unsigned __int8 *)&v33->isa+ OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_webRTCViewErrorRecovery)];
    char v132 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v41;
    sub_1001AECBC((uint64_t)v131, 0xD000000000000017, 0x80000001002369F0, v132);
    sub_100170A04();
  }
  NSString v133 = String._bridgeToObjectiveC()();
  uint64_t v134 = swift_allocObject();
  *(void *)(v134 + 16) = aBlock;
  aBlock[4] = (uint64_t)sub_1001709D0;
  aBlock[5] = v134;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001ACB18;
  aBlock[3] = (uint64_t)&unk_1002D31E8;
  uint64_t v135 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v135);

  id v136 = Logger.logObject.getter();
  os_log_type_t v137 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v136, v137))
  {
    unint64_t v138 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v138 = 0;
    _os_log_impl((void *)&_mh_execute_header, v136, v137, "Metric submitted successfully for topic com.apple.incallservice.eed", v138, 2u);
    sub_100120278();
  }

  sub_100170DC8();
}

id sub_100170110()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithString:v1];

  return v2;
}

uint64_t sub_100170184()
{
  double v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC13InCallService30EnhancedEmergencyDataCollector_requestMetricDataSet);
  sub_100170A5C();
  uint64_t v4 = *v3;
  if ((*v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for PerRequestMetricData();
    sub_10017092C();
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v60[4];
    uint64_t v54 = v60[5];
    uint64_t v5 = v60[6];
    int64_t v6 = v60[7];
    unint64_t v7 = v60[8];
  }
  else
  {
    uint64_t v54 = v4 + 56;
    uint64_t v8 = ~(-1 << *(unsigned char *)(v4 + 32));
    sub_100170E3C();
    unint64_t v7 = v9 & v10;
    swift_bridgeObjectRetain();
    uint64_t v5 = v8;
    int64_t v6 = 0;
  }
  int64_t v53 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v55 = v4;
  if (v4 < 0) {
    goto LABEL_7;
  }
LABEL_5:
  if (v7)
  {
    uint64_t v11 = (v7 - 1) & v7;
    unint64_t v12 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v13 = v6;
    goto LABEL_24;
  }
  int64_t v16 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v16 >= v53) {
      return sub_100138B60();
    }
    unint64_t v17 = *(void *)(v54 + 8 * v16);
    int64_t v13 = v6 + 1;
    if (!v17)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v53) {
        return sub_100138B60();
      }
      unint64_t v17 = *(void *)(v54 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v53) {
          return sub_100138B60();
        }
        unint64_t v17 = *(void *)(v54 + 8 * v13);
        if (!v17)
        {
          int64_t v13 = v6 + 4;
          if (v6 + 4 >= v53) {
            return sub_100138B60();
          }
          unint64_t v17 = *(void *)(v54 + 8 * v13);
          if (!v17)
          {
            int64_t v18 = v6 + 5;
            while (v18 < v53)
            {
              unint64_t v17 = *(void *)(v54 + 8 * v18++);
              if (v17)
              {
                int64_t v13 = v18 - 1;
                goto LABEL_23;
              }
            }
            return sub_100138B60();
          }
        }
      }
    }
LABEL_23:
    uint64_t v11 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_24:
    uint64_t v15 = (char *)*(id *)(*(void *)(v4 + 48) + 8 * v12);
    if (v15)
    {
      while (1)
      {
        uint64_t v19 = swift_allocObject();
        sub_100123340(0, &qword_100321250);
        *(void *)(v19 + 16) = Dictionary.init(dictionaryLiteral:)();
        sub_1001709E4();
        if (v21) {
          break;
        }
        if (v20 <= -9.22337204e18) {
          goto LABEL_49;
        }
        sub_1001709F4();
        if (!v23) {
          goto LABEL_50;
        }
        unint64_t v56 = v11;
        int64_t v57 = v13;
        [objc_allocWithZone((Class)NSNumber) initWithLongLong:(uint64_t)v22];
        sub_100170DA4();
        swift_isUniquelyReferenced_nonNull_native();
        sub_100170D8C();
        unint64_t v24 = sub_10013B954(0xD000000000000026, 0x8000000100236A60);
        uint64_t v26 = *(void *)(v11 + 16);
        BOOL v27 = (v25 & 1) == 0;
        Swift::Int v28 = v26 + v27;
        if (__OFADD__(v26, v27)) {
          goto LABEL_51;
        }
        unint64_t v29 = v24;
        char v30 = v25;
        sub_10011EB3C(&qword_100322738);
        os_log_type_t v31 = v60;
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v28))
        {
          os_log_type_t v31 = (void *)v60[0];
          unint64_t v32 = sub_10013B954(0xD000000000000026, 0x8000000100236A60);
          if ((v30 & 1) != (v33 & 1)) {
            goto LABEL_56;
          }
          unint64_t v29 = v32;
        }
        uint64_t v34 = v60[0];
        if (v30)
        {
          os_log_type_t v31 = *(void **)(v60[0] + 56);

          v31[v29] = v2;
        }
        else
        {
          sub_100170BC8();
          *uint64_t v35 = 0xD000000000000026;
          v35[1] = 0x8000000100236A60;
          sub_100170E50();
          if (v37) {
            goto LABEL_53;
          }
          *(void *)(v34 + 16) = v36;
        }
        *(void *)(v19 + 16) = v34;
        swift_bridgeObjectRelease();
        swift_endAccess();
        [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)&v15[OBJC_IVAR____TtC13InCallService20PerRequestMetricData_requestType]];
        sub_100170DA4();
        swift_isUniquelyReferenced_nonNull_native();
        sub_100170D8C();
        unint64_t v38 = sub_10013B954(0xD000000000000022, 0x8000000100236A90);
        char v40 = v39;
        uint64_t v41 = v31[2];
        BOOL v42 = (v39 & 1) == 0;
        if (__OFADD__(v41, v42)) {
          goto LABEL_52;
        }
        unint64_t v43 = v38;
        uint64_t v4 = v55;
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v41 + v42))
        {
          unint64_t v44 = sub_10013B954(0xD000000000000022, 0x8000000100236A90);
          if ((v40 & 1) != (v45 & 1)) {
            goto LABEL_56;
          }
          unint64_t v43 = v44;
        }
        uint64_t v46 = v60[0];
        if (v40)
        {
          uint64_t v47 = *(void *)(v60[0] + 56);

          *(void *)(v47 + 8 * v43) = v2;
        }
        else
        {
          sub_100170BC8();
          void *v48 = 0xD000000000000022;
          v48[1] = 0x8000000100236A90;
          sub_100170E50();
          if (v37) {
            goto LABEL_54;
          }
          *(void *)(v46 + 16) = v49;
        }
        *(void *)(v19 + 16) = v46;
        swift_bridgeObjectRelease();
        swift_endAccess();
        NSString v50 = String._bridgeToObjectiveC()();
        aBlock[4] = sub_1001709B0;
        uint64_t v59 = v19;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001ACB18;
        aBlock[3] = &unk_1002D3198;
        id v51 = _Block_copy(aBlock);
        Swift::Bool v1 = v59;
        swift_retain();
        swift_release();
        AnalyticsSendEventLazy();

        _Block_release(v51);
        swift_release();

        unint64_t v7 = v56;
        int64_t v6 = v57;
        if ((v55 & 0x8000000000000000) == 0) {
          goto LABEL_5;
        }
LABEL_7:
        uint64_t v14 = __CocoaSet.Iterator.next()();
        if (v14)
        {
          v60[0] = v14;
          type metadata accessor for PerRequestMetricData();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v15 = (char *)aBlock[0];
          swift_unknownObjectRelease();
          int64_t v13 = v6;
          uint64_t v11 = v7;
          if (v15) {
            continue;
          }
        }
        return sub_100138B60();
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    return sub_100138B60();
  }
LABEL_55:
  __break(1u);
LABEL_56:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1001707E4()
{
  return swift_bridgeObjectRetain();
}

id sub_100170828()
{
  return sub_100170840(type metadata accessor for EnhancedEmergencyDataCollector);
}

id sub_100170840(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedEmergencyDataCollector()
{
  return self;
}

unint64_t sub_10017092C()
{
  unint64_t result = qword_100322730;
  if (!qword_100322730)
  {
    type metadata accessor for PerRequestMetricData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322730);
  }
  return result;
}

uint64_t sub_100170978()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001709B0()
{
  return sub_1001707E4();
}

uint64_t sub_1001709B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001709C8()
{
  return swift_release();
}

uint64_t sub_1001709D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100170A04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100170A28()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100170A40()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100170A5C()
{
  return swift_beginAccess();
}

void sub_100170A74(char a1@<W3>, uint64_t a2@<X8>)
{
  sub_1001AECBC(v2, 0xD000000000000011, (a2 - 32) | 0x8000000000000000, a1);
}

double sub_100170A9C(double a1)
{
  double result = v4 + vabdd_f64(a1, *(double *)(v1 + v2));
  *(double *)(v1 + v3) = result;
  *(void *)(v1 + v2) = 0xBFF0000000000000;
  return result;
}

uint64_t sub_100170AB8()
{
  return v0;
}

uint64_t sub_100170AD0()
{
  return swift_beginAccess();
}

id sub_100170AF4(void *a1)
{
  double v4 = *(const char **)(v2 + 2384);
  return [a1 v4:v1];
}

id sub_100170B0C()
{
  uint64_t v2 = *(objc_class **)(v0 + 2064);
  return objc_allocWithZone(v2);
}

double sub_100170B24(double a1)
{
  double result = v4 + vabdd_f64(a1, *(double *)(v2 + v1));
  *(double *)(v2 + v3) = result;
  *(void *)(v2 + v1) = 0xBFF0000000000000;
  return result;
}

double sub_100170B40(double a1)
{
  double result = v4 + vabdd_f64(a1, *(double *)(v1 + v2));
  *(double *)(v1 + v3) = result;
  *(void *)(v1 + v2) = 0xBFF0000000000000;
  return result;
}

uint64_t sub_100170B5C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_100170B74(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X8>)
{
  sub_1001AECBC(v3, a1, (a3 - 32) | 0x8000000000000000, a2);
}

double sub_100170B94(double a1)
{
  return a1 + *(double *)(v2 + 8 * v1);
}

void sub_100170BA8()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

double sub_100170BBC()
{
  return *(double *)(v0 + v1);
}

void sub_100170BC8()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

uint64_t sub_100170BF0()
{
  return v0;
}

void sub_100170C08(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2 | 0x656D617200000000;
  sub_1001AECBC(a1, v5, 0xEC00000065746152, a4);
}

id sub_100170C4C(void *a1)
{
  uint64_t v4 = *(const char **)(v2 + 2400);
  return [a1 v4:v1];
}

id sub_100170C64()
{
  uint64_t v2 = *(objc_class **)(v0 + 2064);
  return objc_allocWithZone(v2);
}

uint64_t sub_100170C88()
{
  return v0;
}

double sub_100170C9C@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

double sub_100170CAC()
{
  return 0.0;
}

uint64_t sub_100170CBC()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  return sub_1001BAF78(v2);
}

double sub_100170CD8(double a1)
{
  double result = v4 + vabdd_f64(a1, *v2);
  *(double *)(v1 + v3) = result;
  *uint64_t v2 = -1.0;
  return result;
}

void sub_100170CF4(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2 | 0x6574746900000000;
  sub_1001AECBC(a1, v5, 0xED00006574615272, a4);
}

double sub_100170D1C(double a1)
{
  double result = v4 + vabdd_f64(a1, *(double *)(v1 + v2));
  *(double *)(v1 + v3) = result;
  *(void *)(v1 + v2) = 0xBFF0000000000000;
  return result;
}

uint64_t sub_100170D38()
{
  return v0;
}

void sub_100170D50(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2 | 0x4C6D6F6F00000000;
  sub_1001AECBC(a1, v5, 0xEC0000006C657665, a4);
}

uint64_t sub_100170D74()
{
  return swift_bridgeObjectRelease();
}

void sub_100170D8C()
{
  void *v0 = 0x8000000000000000;
}

uint64_t sub_100170DA4()
{
  return swift_beginAccess();
}

uint64_t sub_100170DF0()
{
  return v0;
}

double sub_100170E04@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  return a2 / (double)a1;
}

void sub_100170E1C(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2 | 0x6152746900000000;
  sub_1001AECBC(a1, v5, 0xEA00000000006574, a4);
}

void sub_100170E50()
{
  *(void *)(*(void *)(v0 + 56) + 8 * v1) = v2;
}

id sub_100170E98()
{
  return sub_100172038(OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact);
}

void sub_100170F00(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact);
  *(void *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact) = a1;
  id v3 = a1;

  sub_100170F58();
}

id sub_100170F58()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView) setContact:*(void *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact)];
}

uint64_t sub_100170FA4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur);
}

id sub_100171008(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur) = a1;
  return sub_100171594(a1);
}

id sub_10017104C()
{
  return sub_100172038(OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView);
}

void sub_100171058(uint64_t a1)
{
}

void sub_100171064(uint64_t a1)
{
}

id sub_100171070(void *a1, char a2, char a3)
{
  *(void *)&v3[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon] = 0;
  id v7 = objc_allocWithZone((Class)CNAvatarView);
  uint64_t v8 = v3;
  id v9 = [v7 initWithContact:a1];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView] = v9;
  *(void *)&v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_contact] = a1;
  v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur] = a2;
  v8[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled] = a3;
  id v10 = v9;
  id v11 = a1;

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for BlurrableAvatarView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 addSubview:v10];
  sub_10017135C();
  sub_100171594(a2);

  return v12;
}

void sub_1001711EC()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100171280()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BlurrableAvatarView();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView];
  if (v1)
  {
    id v2 = [v1 layer];
    [v0 bounds];
    [v2 setCornerRadius:CGRectGetWidth(v4) * 0.5];
  }
}

void sub_10017135C()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100286FD0;
  CGRect v4 = *(void **)&v1[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_cnAvatarView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = sub_100172040();

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 bottomAnchor];
  id v9 = [v1 bottomAnchor];
  id v10 = sub_100172040();

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 leadingAnchor];
  id v12 = [v1 leadingAnchor];
  id v13 = sub_100172040();

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 trailingAnchor];
  id v15 = [v1 trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v3 + 56) = v16;
  specialized Array._endMutation()();
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
  sub_10015B69C();
}

id sub_100171594(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView;
  if ((a1 & 1) != 0
    && (!*(void *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView)
     || !*(void *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon)))
  {
    sub_100171650();
    sub_10017198C();
    uint64_t v3 = OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView;
  }
  CGRect v4 = *(void **)(v1 + v3);
  if (v4) {
    [v4 setHidden:(a1 & 1) == 0];
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon);
  if (result)
  {
    if (a1) {
      uint64_t v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled);
    }
    else {
      uint64_t v6 = 1;
    }
    return [result setHidden:v6];
  }
  return result;
}

void sub_100171650()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIVisualEffectView) init];
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100286EB0;
  *(void *)(v3 + 32) = [self effectWithStyle:16];
  v16[0] = v3;
  specialized Array._endMutation()();
  sub_100123340(0, &qword_100322278);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setBackgroundEffects:isa];

  id v5 = [v2 layer];
  [v5 setMasksToBounds:1];

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = v2;
  sub_100171058((uint64_t)v2);
  sub_100123340(0, &qword_100323D60);
  id v7 = sub_1001B434C();
  if (v7)
  {
    id v8 = v7;
    id v9 = [self configurationWithPointSize:25.0];
    id v10 = [v8 imageWithSymbolConfiguration:v9];
  }
  else
  {
    id v10 = 0;
  }
  id v11 = [objc_allocWithZone((Class)UIImageView) initWithImage:v10];

  id v12 = [self secondaryLabelColor];
  [v11 setTintColor:v12];

  [v11 setUserInteractionEnabled:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setHidden:v1[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled]];
  id v13 = v11;
  sub_100171064((uint64_t)v11);
  v16[3] = type metadata accessor for BlurrableAvatarView();
  v16[0] = v1;
  objc_allocWithZone((Class)UITapGestureRecognizer);
  id v14 = v1;
  id v15 = sub_100171ED4(v16, (uint64_t)"didTapWithSender:");
  [v6 addGestureRecognizer:v15];
  [v14 addSubview:v6];
  [v14 addSubview:v13];
}

void sub_10017198C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectView];
  if (v1 && (id v2 = *(void **)&v0[OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_blurEffectViewIcon]) != 0)
  {
    uint64_t v3 = self;
    sub_10011EB3C((uint64_t *)&unk_100321360);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100287680;
    id v5 = v1;
    id v6 = v2;
    id v7 = [v5 topAnchor];
    id v8 = [v0 topAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    *(void *)(v4 + 32) = v9;
    id v10 = [v5 bottomAnchor];
    id v11 = sub_100172018((uint64_t)[v0 bottomAnchor]);

    *(void *)(v4 + 40) = v11;
    id v12 = [v5 leadingAnchor];
    id v13 = sub_100172018((uint64_t)[v0 leadingAnchor]);

    *(void *)(v4 + 48) = v13;
    id v14 = [v5 trailingAnchor];
    id v15 = sub_100172018((uint64_t)[v0 trailingAnchor]);

    *(void *)(v4 + 56) = v15;
    id v16 = [v6 centerXAnchor];
    id v17 = sub_100172018((uint64_t)[v0 centerXAnchor]);

    *(void *)(v4 + 64) = v17;
    id v18 = [v6 centerYAnchor];
    id v19 = sub_100172018((uint64_t)[v0 centerYAnchor]);

    *(void *)(v4 + 72) = v19;
    id v20 = [v6 widthAnchor];
    id v21 = [v0 widthAnchor];
    id v22 = [v20 constraintLessThanOrEqualToAnchor:v21];

    *(void *)(v4 + 80) = v22;
    id v23 = [v6 heightAnchor];
    id v24 = [v0 heightAnchor];
    id v25 = [v23 constraintLessThanOrEqualToAnchor:v24];

    *(void *)(v4 + 88) = v25;
    specialized Array._endMutation()();
    sub_100123340(0, (unint64_t *)&qword_100324B40);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:isa];

    sub_10015B69C();
  }
  else
  {
    sub_10015B69C();
  }
}

id sub_100171D48()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_isCommunicationSafetyEnabled) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC13InCallService19BlurrableAvatarView_wantsBlur) = 0;
    return sub_100171594(0);
  }
  return result;
}

void sub_100171DD0()
{
}

id sub_100171E10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlurrableAvatarView();
  [super dealloc];
}

uint64_t type metadata accessor for BlurrableAvatarView()
{
  return self;
}

id sub_100171ED4(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    id v6 = sub_10012CB98(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    __chkstk_darwin(v6, v6);
    id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    sub_100129FFC((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = [v2 initWithTarget:v10 action:a2];
  swift_unknownObjectRelease();
  return v11;
}

id sub_100172018(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 520);
  return [v1 v4:a1];
}

id sub_100172038@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(v1 + a1);
}

id sub_100172040()
{
  uint64_t v4 = *(const char **)(v2 + 520);
  return [v0 v4:v1];
}

uint64_t AddCallControlService.controlEnabledPublisher.getter()
{
  return swift_retain();
}

uint64_t FaceTimeControlService.validityStatePublisher.getter()
{
  return swift_retain();
}

uint64_t MuteControlService.__allocating_init(call:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  MuteControlService.init(call:)(a1);
  return v2;
}

void *MuteControlService.init(call:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10011EB3C(&qword_100322798);
  sub_100122300();
  uint64_t v6 = v5;
  __chkstk_darwin(v7, v8);
  sub_10015BA2C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for MuteState();
  __chkstk_darwin(v12 - 8, v13);
  sub_10015BA2C();
  uint64_t v16 = v15 - v14;
  void v2[5] = &_swiftEmptySetSingleton;
  void v2[4] = a1;
  sub_10011EB3C(&qword_100321220);
  swift_allocObject();
  id v17 = a1;
  v2[2] = CurrentValueSubject.init(_:)();
  sub_1001723C0(v16);
  sub_10011EB3C(&qword_1003227A0);
  swift_allocObject();
  v2[3] = CurrentValueSubject.init(_:)();
  sub_100122B20(&qword_1003227A8, &qword_1003227A0);
  sub_1001728BC(&qword_1003227B0, 255, (void (*)(uint64_t))&type metadata accessor for MuteState);
  Publisher<>.removeDuplicates()();
  swift_allocObject();
  swift_weakInit();
  sub_100122B20(&qword_1003227B8, &qword_100322798);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v18 = [self defaultCenter];
  uint64_t v19 = TUCallIsUplinkMutedChangedNotification;
  swift_retain();
  [v18 addObserver:v2 selector:"isUplinkMutedChanged:" name:v19 object:0];

  swift_release();
  return v2;
}

uint64_t sub_1001723C0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = [v1 isUplinkMuted];
  uint64_t v4 = type metadata accessor for MuteState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  uint64_t v6 = (unsigned int *)&enum case for MuteState.muted(_:);
  if (!v3) {
    uint64_t v6 = (unsigned int *)&enum case for MuteState.unmuted(_:);
  }
  uint64_t v7 = *v6;

  return v5(a1, v7, v4);
}

uint64_t sub_100172454()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10017248C()
{
  uint64_t v0 = type metadata accessor for MuteState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v6 = *(id *)(Strong + 32);
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for MuteState.muted(_:), v0);
    char v7 = static MuteState.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    [v6 setUplinkMuted:v7 & 1];
  }
}

void sub_1001725E4()
{
}

void sub_1001725EC()
{
  uint64_t v1 = type metadata accessor for MuteState();
  sub_100122300();
  uint64_t v3 = v2;
  __chkstk_darwin(v4, v5);
  sub_10015BA2C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = *(void *)(v0 + 32);
  Notification.object.getter();
  if (v13)
  {
    sub_100172940();
    if (swift_dynamicCast())
    {
      unsigned __int8 v10 = [v11 isEqualToCall:v9];

      if (v10)
      {
        sub_1001723C0(v8);
        CurrentValueSubject.send(_:)();
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v1);
      }
    }
  }
  else
  {
    sub_10012D318((uint64_t)v12);
  }
}

uint64_t MuteControlService.deinit()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MuteControlService.__deallocating_deinit()
{
  MuteControlService.deinit();

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_100172874(uint64_t a1, uint64_t a2)
{
  return sub_1001728BC(&qword_1003227C0, a2, (void (*)(uint64_t))type metadata accessor for MuteControlService);
}

uint64_t sub_1001728BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MuteControlService()
{
  return self;
}

uint64_t sub_100172928()
{
  return swift_retain();
}

uint64_t sub_100172934()
{
  return swift_retain();
}

unint64_t sub_100172940()
{
  unint64_t result = qword_100323D80;
  if (!qword_100323D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100323D80);
  }
  return result;
}

id sub_100172980(void *a1)
{
  objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewController());
  uint64_t v3 = v1;
  id v4 = a1;
  *(void *)&v3[OBJC_IVAR___ICSVideoMessageRootViewController_player] = VideoMessagePlayerViewController.init(viewModel:)();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for VideoMessageRootViewController();
  [super initWithNibName:0 bundle:0];

  return v5;
}

void sub_100172A3C()
{
}

void sub_100172AA8()
{
  id v1 = sub_10017311C();
  if (!v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = v1;
  id v3 = [self systemBlackColor];
  [v2 setBackgroundColor:v3];

  id v4 = *(void **)&v0[OBJC_IVAR___ICSVideoMessageRootViewController_player];
  id v5 = sub_100173134();
  if (!v5)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = v5;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = sub_10017311C();
  if (!v7)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v7;
  id v9 = sub_100173134();
  if (!v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned __int8 v10 = v9;
  [v8 addSubview:v9];

  [v0 addChildViewController:v4];
  [v4 didMoveToParentViewController:v0];
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100286FD0;
  id v12 = sub_100173134();
  if (!v12)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = v12;
  id v14 = [v12 leadingAnchor];

  id v15 = sub_10017311C();
  if (!v15)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v16 = v15;
  id v17 = [v15 safeAreaLayoutGuide];

  id v18 = [v17 leadingAnchor];
  id v19 = sub_10017314C();

  *(void *)(v11 + 32) = v19;
  id v20 = sub_100173134();
  if (!v20)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v21 = v20;
  id v22 = [v20 trailingAnchor];

  id v23 = sub_10017311C();
  if (!v23)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v24 = v23;
  id v25 = [v23 safeAreaLayoutGuide];

  id v26 = [v25 trailingAnchor];
  id v27 = sub_10017314C();

  *(void *)(v11 + 40) = v27;
  id v28 = sub_100173134();
  if (!v28)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v29 = v28;
  id v30 = [v28 topAnchor];

  id v31 = sub_10017311C();
  if (!v31)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v32 = v31;
  id v33 = [v31 safeAreaLayoutGuide];

  id v34 = [v33 topAnchor];
  id v35 = sub_10017314C();

  *(void *)(v11 + 48) = v35;
  id v36 = sub_100173134();
  if (!v36)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  char v37 = v36;
  id v38 = [v36 bottomAnchor];

  id v39 = sub_10017311C();
  if (!v39)
  {
LABEL_27:
    __break(1u);
    return;
  }
  char v40 = v39;
  uint64_t v41 = self;
  id v42 = [v40 safeAreaLayoutGuide];

  id v43 = [v42 bottomAnchor];
  id v44 = [v38 constraintEqualToAnchor:v43];

  *(void *)(v11 + 56) = v44;
  specialized Array._endMutation()();
  sub_10013DFE4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 activateConstraints:isa];
}

void sub_100172F54()
{
}

id sub_100172FAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMessageRootViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for VideoMessageRootViewController()
{
  return self;
}

void sub_100173014(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
  {
    id v2 = [self sharedApplication];
    id v3 = [v2 delegate];

    if (v3)
    {
      self;
      [(id)swift_dynamicCastObjCClassUnconditional() dismissVideoMessageSceneSession];
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10017311C()
{
  id v3 = *(const char **)(v1 + 688);
  return [v0 v3];
}

id sub_100173134()
{
  id v3 = *(const char **)(v1 + 688);
  return [v0 v3];
}

id sub_10017314C()
{
  id v4 = *(const char **)(v2 + 520);
  return [v0 v4:v1];
}

uint64_t UniqueAddress._placeholder.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*UniqueAddress._placeholder.modify())(void, void)
{
  return FactoryOutcome.rawValue.getter;
}

uint64_t UniqueAddress.wrappedValue.getter()
{
  return v0;
}

ValueMetadata *type metadata accessor for UniqueAddress()
{
  return &type metadata for UniqueAddress;
}

id sub_1001731A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoMessagePlayerViewModel.PlayerSpatiality();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10011EB3C(&qword_100324AA0);
  __chkstk_darwin(v7 - 8, v8);
  unsigned __int8 v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  sub_10011EB80((uint64_t)v10, 0, 1, v11);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for VideoMessagePlayerViewModel.PlayerSpatiality.remote(_:), v2);
  id v12 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewModel());
  uint64_t v13 = (void *)VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
  id v14 = objc_allocWithZone((Class)type metadata accessor for VideoMessageRootViewController());
  return sub_100172980(v13);
}

double sub_100173470()
{
  return *(double *)(v0 + OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage);
}

id sub_1001734D8(double a1)
{
  *(double *)&v1[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = a1;
  return [v1 setNeedsDisplay];
}

id sub_1001734F4()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = 0x4020000000000000;
  uint64_t v1 = OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  id v4 = [v2 systemDarkGreenColor];
  id v5 = [v4 CGColor];

  *(void *)&v0[v1] = v5;
  uint64_t v6 = OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor;
  id v7 = [v2 systemGreenColor];
  id v8 = [v7 CGColor];

  *(void *)&v3[v6] = v8;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PHRingLayer();
  return [super init];
}

char *sub_100173628(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = 0x4020000000000000;
  uint64_t v3 = OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor;
  id v4 = self;
  id v5 = v1;
  id v6 = [v4 systemDarkGreenColor];
  id v7 = [v6 CGColor];

  *(void *)&v1[v3] = v7;
  uint64_t v8 = OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor;
  id v9 = [v4 systemGreenColor];
  id v10 = [v9 CGColor];

  *(void *)&v5[v8] = v10;
  sub_10012CB98(a1, a1[3]);
  uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
  v24.receiver = v5;
  v24.super_class = (Class)type metadata accessor for PHRingLayer();
  [super initWithLayer:v11];
  swift_unknownObjectRelease();
  sub_10012A154((uint64_t)a1, (uint64_t)v23);
  uint64_t v13 = (char *)v12;
  if (swift_dynamicCast())
  {
    [v22 percentage];
    uint64_t v15 = v14;

    *(void *)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = v15;
    *(void *)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = *(void *)&v22[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth];
    uint64_t v16 = *(void **)&v22[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
    id v17 = *(void **)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
    *(void *)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor] = v16;
    id v18 = v16;

    id v19 = *(id *)&v22[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
    sub_100129FFC((uint64_t)a1);
    id v20 = *(void **)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
    *(void *)&v13[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor] = v19;
  }
  else
  {

    sub_100129FFC((uint64_t)a1);
  }
  return v13;
}

void sub_100173890()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_percentage] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth] = 0x4020000000000000;
  uint64_t v1 = OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor;
  uint64_t v2 = self;
  id v3 = [v2 systemDarkGreenColor];
  id v4 = [v3 CGColor];

  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor;
  id v6 = [v2 systemGreenColor];
  id v7 = [v6 CGColor];

  *(void *)&v0[v5] = v7;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001739B4()
{
  sub_1001741CC();
  BOOL v2 = v2 && v0 == v1;
  if (v2 || (sub_1001741A0() & 1) != 0) {
    return 1;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v5 = String._bridgeToObjectiveC()();
  v7.receiver = ObjCClassFromMetadata;
  v7.super_class = (Class)&OBJC_METACLASS____TtC13InCallService11PHRingLayer;
  [super needsDisplayForKey:v5];

  return (uint64_t)v3;
}

id sub_100173AB0(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  sub_1001741CC();
  BOOL v8 = v8 && v6 == v7;
  if (v8 || (sub_1001741A0() & 1) != 0)
  {
    sub_10017414C();
    swift_bridgeObjectRetain();
    id v9 = sub_1001BF990(a1, a2);
    id v10 = [v3 presentationLayer];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 percentage];
    }
    else
    {
      [v3 percentage];
    }
    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v9 setFromValue:isa];
  }
  else
  {
    NSString v13 = String._bridgeToObjectiveC()();
    v15.receiver = v3;
    v15.super_class = (Class)type metadata accessor for PHRingLayer();
    [super actionForKey:v13];
  }
  return v9;
}

void sub_100173C54(CGContext *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = type metadata accessor for CGPathFillRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  BOOL v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for PHRingLayer();
  v37.receiver = v2;
  v37.super_class = v9;
  [(CGContext *)&v37 drawInContext:a1];
  id v10 = sub_1001741EC();
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 bounds];
    sub_100174204();
  }
  else
  {
    [v2 bounds];
    sub_100174204();
  }
  id v12 = (char *)sub_1001741EC();
  if (v12)
  {
    double v36 = *(double *)&v12[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth];
  }
  else
  {
    double v36 = *(double *)&v2[OBJC_IVAR____TtC13InCallService11PHRingLayer_lineWidth];
  }
  id v13 = sub_1001741EC();
  if (v13)
  {
    uint64_t v14 = v13;
    [v13 percentage];
    double v35 = v15;
  }
  else
  {
    [v2 percentage];
    double v35 = v16;
  }
  id v17 = (char *)sub_1001741EC();
  if (v17)
  {
    id v18 = v17;
    id v19 = (CGColor *)*(id *)&v17[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
  }
  else
  {
    id v19 = (CGColor *)*(id *)&v2[OBJC_IVAR____TtC13InCallService11PHRingLayer_strokeColor];
  }
  id v20 = (char *)sub_1001741EC();
  if (v20)
  {
    id v21 = v20;
    id v22 = (CGColor *)*(id *)&v20[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
  }
  else
  {
    id v22 = (CGColor *)*(id *)&v2[OBJC_IVAR____TtC13InCallService11PHRingLayer_fillColor];
  }
  v38.origin.double x = sub_10017418C();
  CGFloat v23 = CGRectGetMaxX(v38) * 0.5;
  v39.origin.double x = sub_10017418C();
  CGFloat v24 = CGRectGetMaxY(v39) * 0.5;
  sub_100174218();
  id v25 = self;
  double v26 = sub_10017418C();
  id v29 = [v27 v28:v26];
  id v30 = (const CGPath *)[v29 CGPath];
  CGContextSaveGState(a1);
  CGContextAddPath(a1, v30);
  CGContextSetFillColorWithColor(a1, v22);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for CGPathFillRule.winding(_:), v4);
  CGContextRef.fillPath(using:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  CGContextRestoreGState(a1);
  double v31 = sub_100174218();
  CGFloat v32 = v36;
  id v33 = [v25 bezierPathWithArcCenter:1 radius:v23 startAngle:v24 endAngle:v31 * 0.5 - v36 * 0.5 clockwise:-1.57079633];
  id v34 = (const CGPath *)[v33 CGPath];
  CGContextSaveGState(a1);
  CGContextAddPath(a1, v34);
  CGContextSetStrokeColorWithColor(a1, v19);
  CGContextSetLineCap(a1, kCGLineCapRound);
  CGContextSetLineWidth(a1, v32);
  CGContextStrokePath(a1);
  CGContextSetShouldAntialias(a1, 1);
  CGContextRestoreGState(a1);
}

id sub_1001740A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PHRingLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for PHRingLayer()
{
  return self;
}

unint64_t sub_10017414C()
{
  unint64_t result = qword_100321C78;
  if (!qword_100321C78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100321C78);
  }
  return result;
}

double sub_10017418C()
{
  return v0;
}

uint64_t sub_1001741A0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

id sub_1001741EC()
{
  id v3 = *(const char **)(v1 + 1552);
  return [v0 v3];
}

double sub_100174218()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetWidth(*(CGRect *)&v5);
}

uint64_t *PosterSnapshotService.shared.unsafeMutableAddressor()
{
  if (qword_1003205E8 != -1) {
    swift_once();
  }
  return &static PosterSnapshotService.shared;
}

uint64_t sub_100174284()
{
  type metadata accessor for PosterSnapshotService();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10017662C();
  static PosterSnapshotService.shared = v0;
  return result;
}

uint64_t static PosterSnapshotService.shared.getter()
{
  if (qword_1003205E8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t PosterSnapshotService.prewarmSnapshot(call:)()
{
  sub_10012026C();
  v1[3] = v2;
  v1[4] = v0;
  type metadata accessor for MainActor();
  void v1[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v4;
  return _swift_task_switch(sub_1001743E4, v3, v4);
}

uint64_t sub_1001743E4()
{
  uint64_t v1 = sub_1001766A0(*(void **)(v0 + 24));
  if (v1)
  {
    if (*(void *)(v1 + 16))
    {
      uint64_t v2 = *(void *)(v0 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v3 = [self tu_contactStoreConfigurationForCall:v2];
      id v4 = [objc_allocWithZone((Class)CNContactStore) initWithConfiguration:v3];
      *(void *)(v0 + 64) = v4;

      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_10011EB3C((uint64_t *)&unk_100321360);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_100286B60;
      uint64_t v7 = (void *)CNContactWallpaperKey;
      uint64_t v8 = (void *)CNContactWallpaperMetadataKey;
      *(void *)(v6 + 32) = CNContactWallpaperKey;
      *(void *)(v6 + 40) = v8;
      specialized Array._endMutation()();
      id v9 = v7;
      id v10 = v8;
      sub_10011EB3C(&qword_100322930);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = 0;
      id v12 = [v4 unifiedContactWithIdentifier:v5 keysToFetch:isa error:v0 + 16];
      *(void *)(v0 + 72) = v12;

      id v13 = *(void **)(v0 + 16);
      if (v12)
      {
        id v14 = v13;
        double v15 = (void *)swift_task_alloc();
        *(void *)(v0 + 80) = v15;
        *double v15 = v0;
        v15[1] = sub_1001746C4;
        return PosterSnapshotService.takeSnapshot(contact:)((uint64_t)v12);
      }
      id v17 = v13;
      swift_release();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001202F0();
  return v18();
}

uint64_t sub_1001746C4()
{
  sub_10012026C();
  id v3 = v2;
  sub_100176B24();
  uint64_t v4 = *v1;
  sub_100120354();
  void *v5 = v4;
  swift_task_dealloc();

  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_1001747EC, v7, v6);
}

uint64_t sub_1001747EC()
{
  sub_10012026C();
  uint64_t v1 = *(void **)(v0 + 72);

  swift_release();
  sub_1001202F0();
  return v2();
}

uint64_t PosterSnapshotService.prewarmSnapshot(contact:)()
{
  sub_100120364();
  uint64_t v2 = v1;
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *id v3 = v0;
  v3[1] = sub_100174918;
  return PosterSnapshotService.takeSnapshot(contact:)(v2);
}

uint64_t sub_100174918()
{
  sub_100120364();
  uint64_t v2 = v1;
  sub_1001201F8();
  uint64_t v3 = *v0;
  sub_100120354();
  void *v4 = v3;
  swift_task_dealloc();

  sub_1001202F0();
  return v5();
}

uint64_t PosterSnapshotService.takeSnapshot(contact:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_100176B6C((uint64_t)sub_1001749FC, v1);
}

uint64_t sub_1001749FC()
{
  sub_10015BC1C();
  id v1 = [*(id *)(v0 + 16) wallpaper];
  *(void *)(v0 + 32) = v1;
  if (!v1)
  {
    sub_100176B98();
    sub_10013C404();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v2 = v1;
  id v3 = [*(id *)(v0 + 16) identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  *(void *)(v0 + 40) = v5;
  id v6 = [v2 posterArchiveData];
  uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)(v0 + 48) = v7;
  *(void *)(v0 + 56) = v9;
  sub_1001766F8(v2);
  *(void *)(v0 + 64) = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v11;
  void *v11 = v0;
  v11[1] = sub_100174B68;
  sub_10013C404();
  return sub_100174D38();
}

uint64_t sub_100174B68()
{
  sub_1001201F8();
  unint64_t v2 = v1[7];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[3];
  uint64_t v5 = *v0;
  sub_100120354();
  void *v6 = v5;
  *(void *)(v8 + 80) = v7;
  swift_task_dealloc();
  sub_100138A00(v3, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100174CDC, v4, 0);
}

uint64_t sub_100174CDC()
{
  sub_100120364();

  sub_100176B98();
  return v1();
}

uint64_t sub_100174D38()
{
  sub_100120364();
  v1[15] = v2;
  uint8_t v1[16] = v0;
  v1[13] = v3;
  v1[14] = v4;
  v1[12] = v5;
  sub_10011EB3C(&qword_100320BD0);
  v1[17] = swift_task_alloc();
  sub_100176BC8();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_100174DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  sub_10012A298();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  uint64_t v25 = *(void *)(v22[16] + 112);
  v22[18] = v25;
  if (v25)
  {
    swift_retain();
    double v26 = (void *)swift_task_alloc();
    v22[19] = v26;
    sub_10011EB3C((uint64_t *)&unk_100322A90);
    void *v26 = v22;
    v26[1] = sub_1001752AC;
LABEL_3:
    sub_10012A238();
    return Task<>.value.getter(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
  }
  double v35 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v22[9] = 0;
  id v37 = [v35 unarchiveConfigurationFromData:isa error:v22 + 9];
  v22[20] = v37;

  CGRect v38 = (void *)v22[9];
  if (v37)
  {
    uint64_t v39 = v22[16];
    uint64_t v40 = v22[17];
    uint64_t v42 = v22[12];
    uint64_t v41 = v22[13];
    id v43 = v38;
    static TaskPriority.userInitiated.getter();
    uint64_t v44 = type metadata accessor for TaskPriority();
    sub_10011EB80(v40, 0, 1, v44);
    unint64_t v45 = sub_10017683C();
    uint64_t v46 = (void *)swift_allocObject();
    v46[2] = v39;
    v46[3] = v45;
    v46[4] = v39;
    v46[5] = v42;
    v46[6] = v41;
    v46[7] = v37;
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v47 = v37;
    *(void *)(v39 + 112) = sub_10012D7BC();
    swift_release();
    uint64_t v48 = *(void *)(v39 + 112);
    v22[21] = v48;
    if (v48)
    {
      swift_retain();
      uint64_t v49 = (void *)swift_task_alloc();
      v22[22] = v49;
      sub_10011EB3C((uint64_t *)&unk_100322A90);
      void *v49 = v22;
      v49[1] = sub_1001757FC;
      goto LABEL_3;
    }
    sub_100176B40();
    id v58 = (void *)v22[20];
    uint64_t v60 = v22[12];
    uint64_t v59 = v22[13];
    swift_bridgeObjectRetain();
    sub_1001AE6A0(v60, v59);
    uint64_t v52 = v61;
    swift_endAccess();

    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  id v50 = v38;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v51 = type metadata accessor for Logger();
  sub_10011EC48(v51, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v52, v53))
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_15:

    goto LABEL_16;
  }
  uint64_t v54 = (uint8_t *)swift_slowAlloc();
  a10 = swift_slowAlloc();
  sub_100176BA4(4.8149e-34);
  sub_10011EB3C(&qword_1003215E0);
  uint64_t v55 = String.init<A>(reflecting:)();
  uint64_t v57 = sub_1001412B0(v55, v56, &a10);
  sub_100176B74(v57);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v52, v53, "PosterSnapshotService: unarchiving configuration error: %s", v54, 0xCu);
  swift_arrayDestroy();
  sub_100120278();
  sub_100120278();

  swift_errorRelease();
LABEL_16:
  swift_task_dealloc();
  sub_10012A238();
  return v64(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1001752AC()
{
  sub_10012026C();
  sub_100176B24();
  uint64_t v2 = *v1;
  sub_100120354();
  *uint64_t v3 = v2;
  swift_task_dealloc();

  sub_100176BC8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1001753D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  sub_10012A298();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  swift_release();
  uint64_t v25 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v22[9] = 0;
  id v27 = [v25 unarchiveConfigurationFromData:isa error:v22 + 9];
  v22[20] = v27;

  uint64_t v28 = (void *)v22[9];
  if (v27)
  {
    uint64_t v29 = v22[16];
    uint64_t v30 = v22[17];
    uint64_t v32 = v22[12];
    uint64_t v31 = v22[13];
    id v33 = v28;
    static TaskPriority.userInitiated.getter();
    uint64_t v34 = type metadata accessor for TaskPriority();
    sub_10011EB80(v30, 0, 1, v34);
    unint64_t v35 = sub_10017683C();
    double v36 = (void *)swift_allocObject();
    uint64_t v36[2] = v29;
    v36[3] = v35;
    v36[4] = v29;
    v36[5] = v32;
    v36[6] = v31;
    v36[7] = v27;
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v37 = v27;
    *(void *)(v29 + 112) = sub_10012D7BC();
    swift_release();
    uint64_t v38 = *(void *)(v29 + 112);
    v22[21] = v38;
    if (v38)
    {
      swift_retain();
      uint64_t v39 = (void *)swift_task_alloc();
      v22[22] = v39;
      sub_10011EB3C((uint64_t *)&unk_100322A90);
      *uint64_t v39 = v22;
      v39[1] = sub_1001757FC;
      sub_10012A238();
      return Task<>.value.getter(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14);
    }
    sub_100176B40();
    unint64_t v56 = (void *)v22[20];
    uint64_t v58 = v22[12];
    uint64_t v57 = v22[13];
    swift_bridgeObjectRetain();
    sub_1001AE6A0(v58, v57);
    id v50 = v59;
    swift_endAccess();

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  id v48 = v28;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  sub_10011EC48(v49, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  id v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v50, v51))
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_12:

    goto LABEL_13;
  }
  uint64_t v52 = (uint8_t *)swift_slowAlloc();
  a10 = swift_slowAlloc();
  sub_100176BA4(4.8149e-34);
  sub_10011EB3C(&qword_1003215E0);
  uint64_t v53 = String.init<A>(reflecting:)();
  uint64_t v55 = sub_1001412B0(v53, v54, &a10);
  sub_100176B74(v55);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v50, v51, "PosterSnapshotService: unarchiving configuration error: %s", v52, 0xCu);
  swift_arrayDestroy();
  sub_100120278();
  sub_100120278();

  swift_errorRelease();
LABEL_13:
  swift_task_dealloc();
  sub_10012A238();
  return v62(v60, v61, v62, v63, v64, v65, v66, v67, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1001757FC()
{
  sub_10012026C();
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_100120354();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  sub_100176BC8();
  return _swift_task_switch(v3, v4, v5);
}

void sub_100175928()
{
  sub_10015BC1C();
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  *(void *)(v0[16] + 112) = 0;
  swift_release();
  swift_beginAccess();
  uint64_t v3 = (void *)v0[20];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  swift_bridgeObjectRetain();
  if (v1)
  {
    sub_1001AE9A0(v2, (uint64_t)v1, v5, v4);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001AE6A0(v5, v4);
    uint64_t v7 = v6;
    swift_endAccess();
    swift_bridgeObjectRelease();

    uint64_t v3 = v7;
  }

  swift_task_dealloc();
  sub_100176B98();
  sub_10013C404();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_100175A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  void v7[6] = a4;
  v7[7] = a5;
  uint64_t v7[5] = a1;
  return _swift_task_switch(sub_100175A88, a4, 0);
}

uint64_t sub_100175A88()
{
  sub_10012026C();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100139088(v1, v2, v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (v5 == NSObject.hashValue.getter())
    {
      uint64_t v8 = (uint64_t *)v0[5];
      *uint64_t v8 = v5;
      v8[1] = (uint64_t)v7;
      sub_1001202F0();
      return v9();
    }
  }
  uint64_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  void *v11 = v0;
  v11[1] = sub_100175BCC;
  uint64_t v12 = v0[9];
  return sub_100175D3C(v12);
}

uint64_t sub_100175BCC()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v1 = *v0;
  sub_100120354();
  *uint64_t v2 = v1;
  *(void *)(v4 + 88) = v3;
  swift_task_dealloc();
  sub_100176BC8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100175CB0()
{
  sub_10012026C();
  uint64_t v1 = *(void **)(v0 + 88);
  if (v1)
  {
    uint64_t v2 = *(uint64_t **)(v0 + 40);
    id v3 = v1;
    uint64_t v4 = NSObject.hashValue.getter();

    *uint64_t v2 = v4;
    v2[1] = (uint64_t)v1;
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 40);
    void *v5 = 0;
    v5[1] = 0;
  }
  sub_1001202F0();
  return v6();
}

uint64_t sub_100175D3C(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return sub_100176B6C((uint64_t)sub_100175D58, v1);
}

uint64_t sub_100175D58()
{
  sub_10015BC1C();
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  id v3 = [self sharedIncomingCallSnapshotController];
  v0[6] = v3;
  id v4 = [objc_allocWithZone((Class)PRPosterSnapshotDefinition) initWithUniqueIdentifier:PRPosterSnapshotDefinitionIdentifierIncomingCallPosterContentsExcludingBackground includeHeaderElements:0 includesComplications:0 layerSet:1 isUnlocked:1 renderingContent:0 renderingMode:1 previewContent:1];
  v0[7] = v4;
  id v5 = [self snapshotRequestForPRSPosterConfiguration:v2 definition:v4 interfaceOrientation:1];
  v0[8] = v5;
  unint64_t v6 = sub_10017683C();
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  unint64_t v9 = sub_100176890();
  *uint64_t v8 = v0;
  v8[1] = sub_100175F18;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v1, v6, 0xD000000000000025, 0x8000000100236FB0, sub_100176888, v7, v9);
}

uint64_t sub_100175F18()
{
  sub_100120364();
  sub_1001201F8();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100120354();
  void *v5 = v4;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(void *)(v3 + 40);
    uint64_t v7 = sub_1001760F8;
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 40);
    swift_task_dealloc();
    uint64_t v7 = sub_100176010;
    uint64_t v6 = v8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100176010()
{
  uint64_t v1 = (void *)v0[2];
  id v2 = [v1 floatingLayerImage];
  uint64_t v4 = (void *)v0[7];
  uint64_t v3 = (void *)v0[8];
  id v5 = (void *)v0[6];
  if (v2)
  {
    uint64_t v6 = v2;
    id v7 = [self trimmedImageByTrimmingTransparentPixelsFromImage:v2];
  }
  else
  {

    id v7 = 0;
  }
  sub_100176B98();
  return v8(v7);
}

uint64_t sub_1001760F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_10012A298();
  swift_task_dealloc();
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10011EC48(v15, (uint64_t)qword_10032CBE8);
  swift_errorRetain();
  swift_errorRetain();
  double v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  id v20 = v14[7];
  uint64_t v19 = (void *)v14[8];
  id v21 = (void *)v14[6];
  if (v18)
  {
    a9 = v14 + 3;
    a11 = (void *)v14[8];
    id v22 = (uint8_t *)swift_slowAlloc();
    a10 = v21;
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)id v22 = 138412290;
    swift_errorRetain();
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    v14[3] = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v23 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "PosterSnapshotService: PosterKit snapshot failed with error: %@", v22, 0xCu);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    id v20 = v16;
  }
  swift_errorRelease();

  sub_100176B98();
  sub_10012A238();
  return v27(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14);
}

void sub_100176308(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10011EB3C(&qword_100322A78);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_100176964;
  void aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100176530;
  aBlock[3] = &unk_1002D3308;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [a2 executeSnapshotRequest:a3 completion:v12];
  _Block_release(v12);
}

uint64_t sub_1001764B8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    id v3 = a2;
    sub_10011EB3C(&qword_100322A78);
    return CheckedContinuation.resume(returning:)();
  }
  else if (a3)
  {
    swift_errorRetain();
    sub_10011EB3C(&qword_100322A78);
    return CheckedContinuation.resume(throwing:)();
  }
  return result;
}

void sub_100176530(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

uint64_t PosterSnapshotService.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PosterSnapshotService.__deallocating_deinit()
{
  PosterSnapshotService.deinit();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10017662C()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t PosterSnapshotService.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_100176684()
{
  return PosterSnapshotService.unownedExecutor.getter();
}

uint64_t sub_1001766A0(void *a1)
{
  id v1 = [a1 contactIdentifiers];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1001766F8(void *a1)
{
  id v1 = [a1 extensionBundleID];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for PosterSnapshotService()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for PosterSnapshotService.Snapshot(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for PosterSnapshotService.Snapshot(uint64_t a1)
{
}

void *assignWithCopy for PosterSnapshotService.Snapshot(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for PosterSnapshotService.Snapshot(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for PosterSnapshotService.Snapshot()
{
  return &type metadata for PosterSnapshotService.Snapshot;
}

unint64_t sub_10017683C()
{
  unint64_t result = qword_100322A60;
  if (!qword_100322A60)
  {
    type metadata accessor for PosterSnapshotService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322A60);
  }
  return result;
}

void sub_100176888(uint64_t a1)
{
  sub_100176308(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100176890()
{
  unint64_t result = qword_100322A68;
  if (!qword_100322A68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100322A68);
  }
  return result;
}

uint64_t sub_1001768D0()
{
  uint64_t v1 = sub_10011EB3C(&qword_100322A78);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100176964(uint64_t a1, void *a2, uint64_t a3)
{
  sub_10011EB3C(&qword_100322A78);

  return sub_1001764B8(a1, a2, a3);
}

uint64_t sub_1001769F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100176A00()
{
  return swift_release();
}

uint64_t sub_100176A08()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100176A58()
{
  sub_10015BC1C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10011EE00;
  sub_10013C404();
  return sub_100175A60(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100176B40()
{
  *(void *)(*(void *)(v0 + 128) + 112) = 0;
  return swift_beginAccess();
}

uint64_t sub_100176B6C(uint64_t a1, uint64_t a2)
{
  return _swift_task_switch(a1, a2, 0);
}

uint64_t sub_100176B74(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100176BA4(float a1)
{
  *uint64_t v2 = a1;
  *(void *)(v3 + 80) = v1;
  return swift_errorRetain();
}

void destroy for FeedbackView(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FeedbackView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  id v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackView(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackView()
{
  return &type metadata for FeedbackView;
}

uint64_t sub_100176E24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100176E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, __int16 a12)
{
  __int16 v13 = a12;
  double v24 = sub_10017A37C(a1);
  if (!v25) {
    double v24 = -INFINITY;
  }
  double v26 = v14;
  if (v15) {
    double v26 = v24;
  }
  int v27 = v19 & 1;
  double v28 = v16;
  if (v17) {
    double v28 = v26;
  }
  if (v24 > v26 || v26 > v28) {
    goto LABEL_22;
  }
  double v30 = v18;
  if (v27) {
    double v30 = -INFINITY;
  }
  double v31 = v23;
  if (v21) {
    double v31 = v30;
  }
  double v32 = v22;
  if (v20) {
    double v32 = v31;
  }
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v34 = (void *)static Log.runtimeIssuesLog.getter();
    __int16 v13 = a12;
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a2 = a9;
  *(unsigned char *)(a2 + 8) = a10 & 1;
  *(void *)(a2 + 16) = a11;
  *(unsigned char *)(a2 + 24) = v13 & 1;
  *(unsigned char *)(a2 + 25) = HIBYTE(v13) & 1;
  memcpy((void *)(a2 + 32), __src, 0x70uLL);

  return sub_10017A280(a9, a10 & 1);
}

uint64_t sub_100177004@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    double v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  char v32 = v21 & 1;
  *(unsigned char *)(a9 + 16) = v32;
  *(void *)(a9 + 24) = v20;
  memcpy((void *)(a9 + 32), __src, 0x70uLL);
  sub_100179608(a16, v22, v32);

  return swift_bridgeObjectRetain();
}

void *sub_1001771E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v14 = sub_10017A37C(a1);
  if (!v15) {
    double v14 = -INFINITY;
  }
  double v16 = v4;
  if (v5) {
    double v16 = v14;
  }
  double v17 = v6;
  if (v7) {
    double v17 = v16;
  }
  if (v14 > v16 || v16 > v17) {
    goto LABEL_22;
  }
  double v19 = v8;
  if (v9) {
    double v19 = -INFINITY;
  }
  double v20 = v13;
  if (v11) {
    double v20 = v19;
  }
  double v21 = v12;
  if (v10) {
    double v21 = v20;
  }
  if (v19 > v20 || v20 > v21)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    double v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10017A320(v2, a2, &qword_100322BC0);
  uint64_t v24 = sub_10011EB3C(&qword_100322BC8);
  return memcpy((void *)(a2 + *(int *)(v24 + 36)), __src, 0x70uLL);
}

uint64_t sub_10017736C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  sub_10015BA2C();
  char v9 = (_OWORD *)(v8 - v7);
  uint64_t v10 = sub_10011EB3C(&qword_100322AA0);
  __chkstk_darwin(v10 - 8, v11);
  sub_10013FC4C();
  uint64_t v12 = sub_10011EB3C(&qword_100322AA8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12, v14);
  sub_10015BA2C();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10011EB3C(&qword_100322AB0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18, v20);
  sub_10015BA2C();
  uint64_t v23 = v22 - v21;
  *(void *)uint64_t v2 = static HorizontalAlignment.center.getter();
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 16) = 1;
  uint64_t v24 = sub_10011EB3C(&qword_100322AB8);
  sub_100177660(v3, v2 + *(int *)(v24 + 44));
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10017A320(v2, v17, &qword_100322AA0);
  char v25 = (_OWORD *)(v17 + *(int *)(v13 + 44));
  _OWORD *v25 = v41;
  v25[1] = v42;
  v25[2] = v43;
  sub_10013FAFC(v2, &qword_100322AA0);
  id v26 = [self systemGray2Color];
  uint64_t v27 = Color.init(_:)();
  char v28 = static Edge.Set.all.getter();
  sub_10017A320(v17, v23, &qword_100322AA8);
  uint64_t v29 = v23 + *(int *)(v19 + 44);
  *(void *)uint64_t v29 = v27;
  *(unsigned char *)(v29 + 8) = v28;
  sub_10013FAFC(v17, &qword_100322AA8);
  double v30 = (char *)v9 + *(int *)(v5 + 28);
  uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
  type metadata accessor for RoundedCornerStyle();
  sub_10013FC1C();
  (*(void (**)(char *, uint64_t))(v32 + 104))(v30, v31);
  __asm { FMOV            V0.2D, #10.0 }
  *char v9 = _Q0;
  uint64_t v38 = a1 + *(int *)(sub_10011EB3C(&qword_100322AC0) + 36);
  sub_1001794D0((uint64_t)v9, v38);
  *(_WORD *)(v38 + *(int *)(sub_10011EB3C(&qword_100322AC8) + 36)) = 256;
  sub_10017A320(v23, a1, &qword_100322AB0);
  sub_100179534((uint64_t)v9);
  return sub_10013FAFC(v23, &qword_100322AB0);
}

uint64_t sub_100177660@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  id v116 = a1;
  uint64_t v119 = a2;
  uint64_t v2 = sub_10011EB3C(&qword_100322AD0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v129 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  char v117 = (uint64_t *)((char *)&v104 - v7);
  uint64_t v118 = type metadata accessor for Divider();
  uint64_t v128 = *(void *)(v118 - 8);
  uint64_t v9 = __chkstk_darwin(v118, v8);
  char v127 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  id v126 = (char *)&v104 - v12;
  uint64_t v13 = sub_10011EB3C(&qword_100322AD8);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v124 = (uint64_t)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10011EB3C(&qword_100322AC8) - 8;
  __chkstk_darwin(v123, v16);
  uint64_t v122 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for RoundedRectangle();
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (_OWORD *)((char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for Image.ResizingMode();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10011EB3C(&qword_100322AE0);
  uint64_t v29 = v28 - 8;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  id v33 = (char *)&v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v34);
  uint64_t v130 = (uint64_t)&v104 - v35;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v115 = v148[12];
  int v114 = v149;
  uint64_t v113 = v150;
  int v112 = v151;
  uint64_t v110 = v153;
  uint64_t v111 = v152;
  Image.init(_:bundle:)();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v27, enum case for Image.ResizingMode.stretch(_:), v23);
  uint64_t v36 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v37 = v154;
  LOBYTE(v23) = v155;
  uint64_t v38 = v156;
  LODWORD(v121) = v157;
  uint64_t v120 = v158;
  uint64_t v109 = v159;
  uint64_t v39 = (char *)v22 + *(int *)(v19 + 28);
  uint64_t v40 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v41 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v22 = _Q0;
  uint64_t v47 = v122;
  sub_1001794D0((uint64_t)v22, v122);
  *(_WORD *)(v47 + *(int *)(v123 + 44)) = 256;
  sub_10017A320(v47, (uint64_t)&v33[*(int *)(v29 + 44)], &qword_100322AC8);
  *(void *)id v33 = v36;
  *((void *)v33 + 1) = 0;
  *((_WORD *)v33 + 8) = 1;
  *((void *)v33 + 3) = v37;
  v33[32] = v23;
  *((void *)v33 + 5) = v38;
  v33[48] = v121;
  uint64_t v48 = v109;
  *((void *)v33 + 7) = v120;
  *((void *)v33 + 8) = v48;
  uint64_t v125 = v33;
  swift_retain();
  sub_10013FAFC(v47, &qword_100322AC8);
  sub_100179534((uint64_t)v22);
  swift_release();
  sub_100179590((uint64_t)v33, v130);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v49 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v51 = v50;
  LOBYTE(v40) = v52 & 1;
  uint64_t v121 = type metadata accessor for Font.Design();
  uint64_t v53 = v124;
  sub_10011EB80(v124, 1, 1, v121);
  static Font.system(size:weight:design:)();
  sub_10013FAFC(v53, &qword_100322AD8);
  uint64_t v54 = Text.font(_:)();
  uint64_t v56 = v55;
  LOBYTE(v53) = v57;
  swift_release();
  sub_1001795F8(v49, v51, v40);
  swift_bridgeObjectRelease();
  static Color.black.getter();
  uint64_t v58 = Text.foregroundColor(_:)();
  uint64_t v60 = v59;
  LOBYTE(v51) = v61;
  swift_release();
  sub_1001795F8(v54, v56, v53 & 1);
  swift_bridgeObjectRelease();
  uint64_t v62 = Text.bold()();
  uint64_t v122 = v63;
  uint64_t v123 = v62;
  uint64_t v109 = v64;
  int v108 = v65 & 1;
  sub_1001795F8(v58, v60, v51 & 1);
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v66 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v68 = v67;
  LOBYTE(v58) = v69 & 1;
  uint64_t v70 = v124;
  sub_10011EB80(v124, 1, 1, v121);
  static Font.system(size:weight:design:)();
  sub_10013FAFC(v70, &qword_100322AD8);
  uint64_t v71 = Text.font(_:)();
  uint64_t v73 = v72;
  LOBYTE(v54) = v74;
  swift_release();
  sub_1001795F8(v66, v68, v58);
  swift_bridgeObjectRelease();
  static Color.black.getter();
  uint64_t v124 = Text.foregroundColor(_:)();
  uint64_t v120 = v76;
  uint64_t v121 = v75;
  LOBYTE(v60) = v77;
  swift_release();
  LOBYTE(v68) = v60 & 1;
  int v105 = v60 & 1;
  sub_1001795F8(v71, v73, v54 & 1);
  swift_bridgeObjectRelease();
  id v78 = v126;
  Divider.init()();
  uint64_t v79 = static VerticalAlignment.center.getter();
  unsigned __int16 v80 = v116;
  sub_100178188(v160);
  v161[168] = 1;
  memcpy(&v161[7], v160, 0xA0uLL);
  int v107 = 1;
  memcpy(v164, v161, sizeof(v164));
  int v106 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  char v162 = 0;
  uint64_t v89 = static HorizontalAlignment.center.getter();
  uint64_t v90 = (uint64_t)v117;
  *char v117 = v89;
  *(void *)(v90 + 8) = 0;
  *(unsigned char *)(v90 + 16) = 0;
  uint64_t v91 = sub_10011EB3C(&qword_100322AE8);
  sub_100178784(v80, v90 + *(int *)(v91 + 44));
  uint64_t v140 = 0;
  char v141 = 1;
  uint64_t v142 = v115;
  char v143 = v114;
  uint64_t v144 = v113;
  char v145 = v112;
  uint64_t v146 = v111;
  uint64_t v147 = v110;
  v148[0] = &v140;
  uint64_t v92 = (uint64_t)v125;
  sub_10017A320(v130, (uint64_t)v125, &qword_100322AE0);
  uint64_t v93 = v122;
  uint64_t v94 = v123;
  uint64_t v136 = v123;
  uint64_t v137 = v122;
  LOBYTE(v58) = v108;
  char v138 = v108;
  uint64_t v139 = v109;
  v148[1] = v92;
  v148[2] = &v136;
  uint64_t v132 = v124;
  uint64_t v133 = v121;
  char v134 = v68;
  uint64_t v135 = v120;
  v148[3] = &v132;
  double v95 = v127;
  id v96 = v78;
  uint64_t v97 = v118;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v127, v96, v118);
  v148[4] = v95;
  v131[0] = v79;
  v131[1] = 0;
  LOBYTE(v131[2]) = v107;
  memcpy((char *)&v131[2] + 1, v164, 0xA7uLL);
  LOBYTE(v131[23]) = v106;
  *(_DWORD *)((char *)&v131[23] + 1) = *(_DWORD *)v163;
  HIDWORD(v131[23]) = *(_DWORD *)&v163[3];
  v131[24] = v82;
  v131[25] = v84;
  v131[26] = v86;
  v131[27] = v88;
  LOBYTE(v131[28]) = v162;
  v148[5] = v131;
  uint64_t v98 = v90;
  uint64_t v99 = v129;
  sub_10017A320(v90, v129, &qword_100322AD0);
  v148[6] = v99;
  sub_100178354((uint64_t)v148, v119);
  sub_100179608(v94, v93, v58);
  swift_bridgeObjectRetain();
  uint64_t v100 = v124;
  uint64_t v101 = v121;
  LOBYTE(v94) = v105;
  sub_100179608(v124, v121, v105);
  swift_bridgeObjectRetain();
  sub_10013FAFC(v98, &qword_100322AD0);
  char v102 = *(void (**)(char *, uint64_t))(v128 + 8);
  v102(v126, v97);
  sub_1001795F8(v100, v101, v94);
  swift_bridgeObjectRelease();
  sub_1001795F8(v123, v122, v58);
  swift_bridgeObjectRelease();
  sub_10013FAFC(v130, &qword_100322AE0);
  sub_10013FAFC(v129, &qword_100322AD0);
  memcpy(v165, v131, 0xE1uLL);
  sub_100179618((uint64_t)v165);
  v102(v127, v97);
  sub_1001795F8(v132, v133, v134);
  swift_bridgeObjectRelease();
  sub_1001795F8(v136, v137, v138);
  swift_bridgeObjectRelease();
  return sub_10013FAFC((uint64_t)v125, &qword_100322AE0);
}

uint64_t sub_100178188@<X0>(void *a1@<X8>)
{
  sub_10011EB3C(&qword_100322B78);
  State.projectedValue.getter();
  State.projectedValue.getter();
  State.projectedValue.getter();
  long long v5 = v21;
  State.projectedValue.getter();
  long long v4 = v21;
  State.projectedValue.getter();
  long long v2 = v21;
  long long v19 = v21;
  uint64_t v18 = 1;
  uint64_t v20 = v22;
  uint64_t v14 = v22;
  uint64_t v15 = 2;
  long long v16 = v21;
  uint64_t v17 = v22;
  *(void *)&long long v21 = &v18;
  *((void *)&v21 + 1) = &v15;
  uint64_t v11 = v22;
  uint64_t v12 = 3;
  long long v13 = v5;
  uint64_t v8 = v22;
  uint64_t v9 = 4;
  long long v10 = v4;
  uint64_t v22 = &v12;
  uint64_t v23 = &v9;
  uint64_t v6 = 5;
  long long v7 = v2;
  uint64_t v24 = &v6;
  sub_100178518((uint64_t **)&v21, a1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100178354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *(unsigned char *)(*(void *)a1 + 8);
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  char v6 = *(unsigned char *)(*(void *)a1 + 24);
  uint64_t v7 = *(void *)(*(void *)a1 + 32);
  char v8 = *(unsigned char *)(*(void *)a1 + 40);
  long long v9 = *(_OWORD *)(*(void *)a1 + 48);
  *(void *)a2 = **(void **)a1;
  *(unsigned char *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = v8;
  *(_OWORD *)(a2 + 48) = v9;
  long long v10 = (int *)sub_10011EB3C(&qword_100322AF0);
  sub_10017A320(*(void *)(a1 + 8), a2 + v10[12], &qword_100322AE0);
  uint64_t v11 = a2 + v10[16];
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  char v16 = *(unsigned char *)(v12 + 16);
  uint64_t v17 = *(void *)(v12 + 24);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v14;
  *(unsigned char *)(v11 + 16) = v16;
  *(void *)(v11 + 24) = v17;
  uint64_t v18 = a2 + v10[20];
  uint64_t v19 = *(void *)v13;
  uint64_t v28 = *(void *)(v13 + 8);
  char v20 = *(unsigned char *)(v13 + 16);
  char v29 = v20;
  uint64_t v21 = *(void *)(v13 + 24);
  *(void *)uint64_t v18 = *(void *)v13;
  *(void *)(v18 + 8) = v28;
  *(unsigned char *)(v18 + 16) = v20;
  *(void *)(v18 + 24) = v21;
  uint64_t v22 = a2 + v10[24];
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v24 = type metadata accessor for Divider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = (void *)(a2 + v10[28]);
  uint64_t v26 = *(const void **)(a1 + 40);
  memcpy(__dst, v26, 0xE1uLL);
  memmove(v25, v26, 0xE1uLL);
  sub_10017A320(*(void *)(a1 + 48), a2 + v10[32], &qword_100322AD0);
  sub_100179608(v15, v14, v16);
  swift_bridgeObjectRetain();
  sub_100179608(v19, v28, v29);
  swift_bridgeObjectRetain();
  return sub_1001796BC((uint64_t)__dst);
}

uint64_t sub_100178518@<X0>(uint64_t **a1@<X0>, void *a2@<X8>)
{
  long long v2 = a1[1];
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  uint64_t v10 = v2[2];
  uint64_t v9 = v2[3];
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = *v11;
  uint64_t v14 = v11[1];
  uint64_t v16 = v11[2];
  uint64_t v15 = v11[3];
  uint64_t v17 = *v12;
  uint64_t v18 = v12[1];
  uint64_t v20 = v12[2];
  uint64_t v19 = v12[3];
  uint64_t v21 = a1[4];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  uint64_t v25 = v21[2];
  uint64_t v24 = v21[3];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v10;
  a2[7] = v9;
  a2[8] = v13;
  a2[9] = v14;
  a2[10] = v16;
  a2[11] = v15;
  a2[12] = v17;
  a2[13] = v18;
  a2[14] = v20;
  a2[15] = v19;
  a2[16] = v23;
  a2[17] = v22;
  a2[18] = v25;
  a2[19] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_100178608@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = type metadata accessor for Divider();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a2, v4, v5);
  uint64_t v7 = (int *)sub_10011EB3C(&qword_100322B68);
  uint64_t v8 = a2 + v7[12];
  uint64_t v9 = a1[1];
  uint64_t v10 = sub_10011EB3C(&qword_100322AF8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v14)((void *)(v10 - 8), v8, v9, v10);
  v6(a2 + v7[16], a1[2], v5);
  v14(a2 + v7[20], a1[3], v10);
  v6(a2 + v7[24], a1[4], v5);
  uint64_t v11 = a2 + v7[28];
  uint64_t v12 = a1[5];

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v11, v12, v10);
}

uint64_t sub_100178784@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v73 = sub_10011EB3C(&qword_100322AF8);
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v4 = __chkstk_darwin(v73, v3);
  char v74 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v82 = (char *)&v65 - v8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v81 = (char *)&v65 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v79 = (char *)&v65 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  char v69 = (char *)&v65 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v65 - v19;
  uint64_t v78 = type metadata accessor for Divider();
  uint64_t v80 = *(void *)(v78 - 8);
  uint64_t v22 = __chkstk_darwin(v78, v21);
  uint64_t v71 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  char v77 = (char *)&v65 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v30 = (char *)&v65 - v29;
  uint64_t v32 = __chkstk_darwin(v28, v31);
  uint64_t v67 = (char *)&v65 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v76 = (char *)&v65 - v36;
  __chkstk_darwin(v35, v37);
  uint64_t v39 = (char *)&v65 - v38;
  uint64_t v68 = (char *)&v65 - v38;
  Divider.init()();
  long long v40 = *a1;
  long long v85 = a1[1];
  v86[0] = v40;
  long long v84 = a1[2];
  uint64_t v41 = (_OWORD *)swift_allocObject();
  long long v42 = a1[1];
  v41[1] = *a1;
  void v41[2] = v42;
  v41[3] = a1[2];
  sub_100179788((uint64_t)v86);
  sub_100179788((uint64_t)&v85);
  sub_1001797B4((id *)&v84);
  sub_10011EB3C(&qword_100322B00);
  sub_10017A120(&qword_100322B08, &qword_100322B00, (void (*)(void))sub_1001797E0);
  uint64_t v66 = v20;
  Button.init(action:label:)();
  Divider.init()();
  long long v43 = (_OWORD *)swift_allocObject();
  long long v44 = a1[1];
  v43[1] = *a1;
  void v43[2] = v44;
  v43[3] = a1[2];
  sub_100179788((uint64_t)v86);
  sub_100179788((uint64_t)&v85);
  sub_1001797B4((id *)&v84);
  Button.init(action:label:)();
  Divider.init()();
  uint64_t v45 = (_OWORD *)swift_allocObject();
  long long v46 = a1[1];
  v45[1] = *a1;
  void v45[2] = v46;
  v45[3] = a1[2];
  sub_100179788((uint64_t)v86);
  sub_100179788((uint64_t)&v85);
  sub_1001797B4((id *)&v84);
  Button.init(action:label:)();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  uint64_t v70 = v30;
  uint64_t v48 = v78;
  v47(v30, v39, v78);
  v83[0] = (uint64_t)v30;
  uint64_t v49 = v72;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  uint64_t v51 = (uint64_t)v81;
  uint64_t v52 = v73;
  v50(v81, v20, v73);
  v83[1] = v51;
  uint64_t v53 = (uint64_t)v77;
  v47(v77, v76, v48);
  v83[2] = v53;
  uint64_t v54 = (uint64_t)v82;
  uint64_t v55 = v69;
  v50(v82, v69, v52);
  v83[3] = v54;
  uint64_t v56 = (uint64_t)v71;
  char v57 = v67;
  v47(v71, v67, v48);
  v83[4] = v56;
  uint64_t v58 = (uint64_t)v74;
  uint64_t v59 = v79;
  v50(v74, v79, v52);
  v83[5] = v58;
  sub_100178608(v83, v75);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v49 + 8);
  v60(v59, v52);
  char v61 = *(void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v62 = v57;
  uint64_t v63 = v78;
  v61(v62, v78);
  v60(v55, v52);
  v61(v76, v63);
  v60(v66, v52);
  v61(v68, v63);
  v60((char *)v58, v52);
  v61((char *)v56, v63);
  v60(v82, v52);
  v61(v77, v63);
  v60(v81, v52);
  return ((uint64_t (*)(char *, uint64_t))v61)(v70, v63);
}

void *sub_100178E54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10011EB3C(&qword_100322AD8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &__src[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v6 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = static Alignment.center.getter();
  sub_100177004(0.0, 0, 0.0, 1, 300.0, 0, 0.0, 0, (uint64_t)__src, 0.0, 1, 50.0, 0, v13, v14, v6, v8, v12, v10);
  sub_1001795F8(v6, v8, v12);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v15 = type metadata accessor for Font.Design();
  sub_10011EB80((uint64_t)v5, 1, 1, v15);
  uint64_t v16 = static Font.system(size:weight:design:)();
  sub_10013FAFC((uint64_t)v5, &qword_100322AD8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = self;
  id v19 = [v18 systemBlueColor];
  uint64_t v20 = Color.init(_:)();
  uint64_t v21 = swift_getKeyPath();
  id v22 = [v18 systemGray2Color];
  uint64_t v23 = Color.init(_:)();
  char v24 = static Edge.Set.all.getter();
  unint64_t result = memcpy((void *)a1, __src, 0x90uLL);
  *(void *)(a1 + 144) = KeyPath;
  *(void *)(a1 + 152) = v16;
  *(void *)(a1 + 160) = v21;
  *(void *)(a1 + 168) = v20;
  *(void *)(a1 + 176) = v23;
  *(unsigned char *)(a1 + 184) = v24;
  return result;
}

void sub_100179084(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v4 = v2;
    sub_10011EB3C(&qword_100322B78);
    State.wrappedValue.getter();
    sub_1001D08BC(v5, a2 & 1);
  }
  else
  {
    type metadata accessor for ScoreController();
    sub_100179E3C();
    EnvironmentObject.error()();
    __break(1u);
  }
}

void *sub_100179124@<X0>(uint64_t a1@<X8>)
{
  return sub_1001791DC(a1);
}

void sub_100179140(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    id v2 = v1;
    sub_1001D08BC(-1, 0);
  }
  else
  {
    type metadata accessor for ScoreController();
    sub_100179E3C();
    EnvironmentObject.error()();
    __break(1u);
  }
}

void *sub_1001791C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001791DC(a1);
}

void *sub_1001791DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10011EB3C(&qword_100322AD8);
  __chkstk_darwin(v3 - 8, v4);
  sub_10013FC4C();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v5 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = static Alignment.center.getter();
  sub_100177004(0.0, 0, 0.0, 1, 300.0, 0, 0.0, 0, (uint64_t)__src, 0.0, 1, 50.0, 0, v12, v13, v5, v7, v11, v9);
  sub_1001795F8(v5, v7, v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for Font.Design();
  sub_10011EB80(v1, 1, 1, v14);
  uint64_t v15 = static Font.system(size:weight:design:)();
  sub_10013FAFC(v1, &qword_100322AD8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = self;
  id v18 = [v17 systemBlueColor];
  uint64_t v19 = Color.init(_:)();
  uint64_t v20 = swift_getKeyPath();
  id v21 = [v17 systemGray2Color];
  uint64_t v22 = Color.init(_:)();
  char v23 = static Edge.Set.all.getter();
  unint64_t result = memcpy((void *)a1, __src, 0x90uLL);
  *(void *)(a1 + 144) = KeyPath;
  *(void *)(a1 + 152) = v15;
  *(void *)(a1 + 160) = v20;
  *(void *)(a1 + 168) = v19;
  *(void *)(a1 + 176) = v22;
  *(unsigned char *)(a1 + 184) = v23;
  return result;
}

uint64_t sub_1001793F4@<X0>(uint64_t a1@<X8>)
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  type metadata accessor for ScoreController();
  sub_100179E3C();
  uint64_t result = EnvironmentObject.init()();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

uint64_t sub_100179494@<X0>(uint64_t a1@<X8>)
{
  return sub_10017736C(a1);
}

uint64_t sub_1001794D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100179534(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100179590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10011EB3C(&qword_100322AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001795F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100179608(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100179618(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001796BC(uint64_t a1)
{
  return a1;
}

void sub_100179768()
{
  sub_100179084(v0 + 16, 0);
}

uint64_t sub_100179788(uint64_t a1)
{
  return a1;
}

id *sub_1001797B4(id *a1)
{
  id v2 = *a1;
  return a1;
}

unint64_t sub_1001797E0()
{
  unint64_t result = qword_100322B10;
  if (!qword_100322B10)
  {
    sub_1001221B0(&qword_100322B18);
    sub_100179880();
    sub_100122B20((unint64_t *)&unk_100324910, &qword_100322B50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322B10);
  }
  return result;
}

unint64_t sub_100179880()
{
  unint64_t result = qword_100322B20;
  if (!qword_100322B20)
  {
    sub_1001221B0(&qword_100322B28);
    sub_100179920();
    sub_100122B20((unint64_t *)&qword_100322B40, &qword_100322B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322B20);
  }
  return result;
}

unint64_t sub_100179920()
{
  unint64_t result = qword_100322B30;
  if (!qword_100322B30)
  {
    sub_1001221B0(&qword_100322B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322B30);
  }
  return result;
}

void sub_100179998()
{
  sub_100179084(v0 + 16, 1);
}

uint64_t sub_1001799BC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100179A04()
{
  sub_100179140(v0 + 16);
}

uint64_t sub_100179A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  _DWORD v8[2] = a1;
  _OWORD v8[3] = a2;
  v8[4] = a3;
  void v8[5] = a4;
  swift_retain();
  swift_retain();
  return Button.init(action:label:)();
}

uint64_t sub_100179AD4()
{
  sub_10011EB3C(&qword_100322BA8);
  Binding.wrappedValue.setter();
  sub_10011EB3C(&qword_100321508);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1002862D0;
  *(void *)(v0 + 56) = &type metadata for String;
  strcpy((char *)(v0 + 32), "selected star");
  *(_WORD *)(v0 + 46) = -4864;
  print(_:separator:terminator:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100179B94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10011EB3C(&qword_100322AD8);
  __chkstk_darwin(v8 - 8, v9);
  char v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[2] = a1;
  v26[3] = a2;
  v26[4] = a3;
  sub_10011EB3C(&qword_100322BA8);
  Binding.wrappedValue.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  uint64_t v17 = type metadata accessor for Font.Design();
  sub_10011EB80((uint64_t)v11, 1, 1, v17);
  static Font.system(size:weight:design:)();
  sub_10013FAFC((uint64_t)v11, &qword_100322AD8);
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  swift_release();
  sub_1001795F8(v12, v14, v16);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v18;
  *(void *)(a4 + 8) = v20;
  *(unsigned char *)(a4 + 16) = v22 & 1;
  *(void *)(a4 + 24) = v24;
  return result;
}

uint64_t sub_100179D4C()
{
  return sub_100179A0C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_100179D58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100179D84()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100179DB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100179DE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100179E0C()
{
  return EnvironmentValues.foregroundColor.setter();
}

unint64_t sub_100179E3C()
{
  unint64_t result = qword_100322B70;
  if (!qword_100322B70)
  {
    type metadata accessor for ScoreController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322B70);
  }
  return result;
}

uint64_t destroy for StarView()
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for StarView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for StarView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for StarView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StarView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StarView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StarView()
{
  return &type metadata for StarView;
}

unint64_t sub_10017A05C()
{
  unint64_t result = qword_100322B80;
  if (!qword_100322B80)
  {
    sub_1001221B0(&qword_100322AC0);
    sub_10017A120(&qword_100322B88, &qword_100322AB0, (void (*)(void))sub_10017A1C4);
    sub_100122B20(&qword_100322BA0, &qword_100322AC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322B80);
  }
  return result;
}

uint64_t sub_10017A120(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001221B0(a2);
    a3();
    sub_100122B20(&qword_100322B58, &qword_100322B60);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10017A1C4()
{
  unint64_t result = qword_100322B90;
  if (!qword_100322B90)
  {
    sub_1001221B0(&qword_100322AA8);
    sub_100122B20(&qword_100322B98, &qword_100322AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322B90);
  }
  return result;
}

uint64_t sub_10017A264()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017A280(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10017A28C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10017A2CC()
{
  return sub_100179AD4();
}

uint64_t sub_10017A2D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100179B94(v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10017A2E4()
{
  return sub_100122B20(&qword_100322BB0, &qword_100322BB8);
}

uint64_t sub_10017A320(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10011EB3C(a3);
  sub_10013FC1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

double sub_10017A37C(uint64_t a1)
{
  return *(double *)&a1;
}

uint64_t sub_10017A398(uint64_t a1)
{
  return j__swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_10017A3A4(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

id sub_10017A3C4()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for DeclineCallServiceFactory());
  unint64_t v2 = v0;
  id v3 = [v1 init];
  id v4 = [self sharedInstance];
  type metadata accessor for DeclineCallService();
  swift_allocObject();
  id v5 = v4;
  uint64_t v6 = sub_1001BBEF4((uint64_t)v5);

  *(void *)&v2[OBJC_IVAR___ICSGreenTea3PUIHardwareEventHandler_declineCallService] = v6;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for GreenTea3PUIHardwareEventHandler();
  return [super init];
}

uint64_t sub_10017A4C4()
{
  sub_100120364();
  v1[31] = v2;
  v1[32] = v0;
  v1[29] = v3;
  v1[30] = v4;
  v1[28] = v5;
  sub_10011EB3C(&qword_100321178);
  v1[33] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[34] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[35] = v7;
  v1[36] = v6;
  return _swift_task_switch(sub_10017A590, v7, v6);
}

uint64_t sub_10017A590()
{
  sub_100120498();
  id v1 = self;
  id v2 = [v1 sharedInstance];
  id v3 = [v2 frontmostAudioOrVideoCall];
  v0[37] = v3;

  if (!v3) {
    goto LABEL_7;
  }
  id v4 = [v3 provider];
  unsigned int v5 = [v4 supportsDynamicSystemUI];

  if (!v5)
  {

LABEL_7:
    swift_release();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10011EC48(v9, (uint64_t)qword_10032CBE8);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "GreenTea3PHardwareEventHandler is not handling lock event because frontmost call does not support dynamic system UI", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = (void (*)(void))v0[29];

    v13(0);
    goto LABEL_12;
  }
  if (![(id)v0[28] sourceType])
  {
    swift_release();
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10011EC48(v16, (uint64_t)qword_10032CBE8);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "GreenTea3PHardwareEventHandler is not handling lock event because event source is unknown", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = (void (*)(void))v0[29];

    v20(0);
    goto LABEL_12;
  }
  id v6 = [v1 sharedInstance];
  id v7 = [v6 incomingCall];
  v0[38] = v7;

  if (v7) {
    unsigned __int8 v8 = [v7 shouldSuppressRingtone];
  }
  else {
    unsigned __int8 v8 = 0;
  }
  if ([(id)v0[28] sourceType] == (id)2)
  {
    if (v7 || (sub_10017B138() & 1) != 0)
    {
      char v21 = *(void **)(v0[32] + OBJC_IVAR___ICSGreenTea3PUIHardwareEventHandler_declineCallService);
      v0[10] = v0;
      v0[11] = sub_10017AB30;
      uint64_t v22 = swift_continuation_init();
      v0[23] = _NSConcreteStackBlock;
      v0[24] = 0x40000000;
      v0[25] = sub_10017A398;
      v0[26] = &unk_1002D3518;
      v0[27] = v22;
      [v21 declineAnsweringCallDueToLockEventWithCurrentActiveCall:v3 completionHandler:v0 + 23];
      id v23 = v0 + 10;
      goto LABEL_32;
    }
LABEL_28:
    if ((sub_10017B138() & 1) == 0)
    {
LABEL_35:
      swift_release();
      uint64_t v27 = 0;
      goto LABEL_36;
    }
LABEL_29:
    id v23 = [self sharedInstance];
    if (!v23)
    {
      __break(1u);
      return _swift_continuation_await(v23);
    }
    uint64_t v28 = v23;
    unsigned int v29 = [v23 isLockToEndCallEnabled];

    if (v29)
    {
      uint64_t v30 = *(void **)(v0[32] + OBJC_IVAR___ICSGreenTea3PUIHardwareEventHandler_declineCallService);
      v0[2] = v0;
      v0[3] = sub_10017AC94;
      uint64_t v31 = swift_continuation_init();
      v0[18] = _NSConcreteStackBlock;
      v0[19] = 0x40000000;
      v0[20] = sub_10017A398;
      v0[21] = &unk_1002D3500;
      v0[22] = v31;
      [v30 declineAnsweringCallDueToLockEventWithCurrentActiveCall:v3 completionHandler:v0 + 18];
      id v23 = v0 + 2;
LABEL_32:
      return _swift_continuation_await(v23);
    }
    goto LABEL_35;
  }
  if (!v7) {
    goto LABEL_28;
  }
  if (v8) {
    goto LABEL_29;
  }
  uint64_t v24 = v0[33];
  swift_release();
  id v25 = [v7 uniqueProxyIdentifierUUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = 1;
  sub_10011EB80(v24, 0, 1, v26);
  sub_1001AD65C();
  sub_10017B244(v24);
  [v7 suppressRingtone];
LABEL_36:
  uint64_t v33 = (void *)v0[37];
  uint64_t v32 = (void *)v0[38];
  ((void (*)(uint64_t))v0[29])(v27);

LABEL_12:
  swift_task_dealloc();
  sub_1001202F0();
  return v14();
}

uint64_t sub_10017AB30()
{
  sub_100120364();
  sub_1001201F8();
  sub_10012A1CC();
  *id v1 = v0;
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  return _swift_task_switch(sub_10017AC0C, v4, v3);
}

uint64_t sub_10017AC0C()
{
  swift_release();
  uint64_t v2 = *(void **)(v0 + 296);
  id v1 = *(void **)(v0 + 304);
  (*(void (**)(uint64_t))(v0 + 232))(1);

  swift_task_dealloc();
  sub_1001202F0();
  return v3();
}

uint64_t sub_10017AC94()
{
  sub_100120364();
  sub_1001201F8();
  sub_10012A1CC();
  *id v1 = v0;
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  return _swift_task_switch(sub_10017B3F8, v4, v3);
}

uint64_t sub_10017AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[5] = a4;
  void v5[6] = a5;
  _OWORD v5[3] = a2;
  void v5[4] = a3;
  uint64_t v5[2] = a1;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10017AEBC, v7, v6);
}

uint64_t sub_10017AEBC()
{
  sub_100120498();
  id v1 = (void *)v0[6];
  uint64_t v3 = (void *)v0[4];
  uint64_t v2 = (const void *)v0[5];
  uint64_t v5 = (void *)v0[2];
  uint64_t v4 = (const void *)v0[3];
  swift_release();
  uint64_t v6 = _Block_copy(v4);
  v0[8] = _Block_copy(v2);
  uint64_t v7 = swift_allocObject();
  v0[9] = v7;
  *(void *)(v7 + 16) = v6;
  id v8 = v5;
  id v9 = v3;
  id v10 = v1;
  os_log_type_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  void *v11 = v0;
  v11[1] = sub_10017AFD4;
  return sub_10017A4C4();
}

uint64_t sub_10017AFD4()
{
  sub_100120498();
  sub_1001201F8();
  uint64_t v2 = (void (**)(void))v1[8];
  uint64_t v3 = (void *)v1[6];
  uint64_t v4 = (void *)v1[4];
  uint64_t v5 = (void *)v1[2];
  uint64_t v6 = *v0;
  sub_10012A1CC();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  swift_release();

  v2[2](v2);
  _Block_release(v2);
  sub_1001202F0();
  return v8();
}

id sub_10017B138()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 routeController];

  id v2 = [v1 pickedRoute];
  if (!v2) {
    return 0;
  }
  id v3 = [v2 isReceiver];

  return v3;
}

id sub_10017B1DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GreenTea3PUIHardwareEventHandler();
  return [super dealloc];
}

uint64_t type metadata accessor for GreenTea3PUIHardwareEventHandler()
{
  return self;
}

uint64_t sub_10017B244(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C(&qword_100321178);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10017B2A4()
{
  _Block_release(*(const void **)(v0 + 24));
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10017B2FC()
{
  sub_100120498();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_100129B3C;
  id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100322C08 + dword_100322C08);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_10017B3C0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_10017B440()
{
  uint64_t v1 = sub_1001766F8(v0);
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = v1;
    if (v1 == 0xD000000000000028 && (sub_10017B870(), v5) || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v6 = (id *)&CNWallpaperTypeMemoji;
    }
    else if (v4 == 0xD00000000000002CLL && (sub_10017B870(), v5) || (sub_10017B84C() & 1) != 0)
    {
      uint64_t v6 = (id *)&CNWallpaperTypeMonogram;
    }
    else
    {
      if (v4 != 0xD00000000000002ELL || (sub_10017B870(), !v5))
      {
        char v9 = sub_10017B84C();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0) {
          return 0;
        }
        uint64_t v6 = (id *)&CNWallpaperTypePhoto;
        goto LABEL_7;
      }
      uint64_t v6 = (id *)&CNWallpaperTypePhoto;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    id v3 = *v6;
    id v7 = *v6;
  }
  return v3;
}

id sub_10017B59C()
{
  id v1 = [v0 metadata];
  if (!v1) {
    return 0;
  }
  id v2 = (id)sub_10017B770(v1);
  if (v2)
  {
    id v3 = CNWallpaperColorDescriptionKeyRed;
    uint64_t v4 = sub_100139158((uint64_t)v3, (uint64_t)v2);

    if (v4)
    {
      id v5 = CNWallpaperColorDescriptionKeyGreen;
      uint64_t v6 = sub_100139158((uint64_t)v5, (uint64_t)v2);

      if (v6)
      {
        id v7 = CNWallpaperColorDescriptionKeyBlue;
        id v8 = sub_100139158((uint64_t)v7, (uint64_t)v2);

        if (v8)
        {
          id v9 = CNWallpaperColorDescriptionKeyAlpha;
          uint64_t v10 = sub_100139158((uint64_t)v9, (uint64_t)v2);

          swift_bridgeObjectRelease();
          if (v10)
          {
            [v4 doubleValue];
            double v12 = v11;
            [v6 doubleValue];
            double v14 = v13;
            [v8 doubleValue];
            double v16 = v15;
            [v10 doubleValue];
            id v2 = [objc_allocWithZone((Class)UIColor) initWithRed:v12 green:v14 blue:v16 alpha:v17];

            return v2;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v2;
}

uint64_t sub_10017B770(void *a1)
{
  id v2 = [a1 backgroundColorDescription];

  if (!v2) {
    return 0;
  }
  type metadata accessor for CNWallpaperColorDescriptionKey(0);
  sub_10013B914();
  sub_10017B7FC();
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10017B7FC()
{
  unint64_t result = qword_100320DF8;
  if (!qword_100320DF8)
  {
    type metadata accessor for CNWallpaperColorDescriptionKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100320DF8);
  }
  return result;
}

uint64_t sub_10017B84C()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

id sub_10017B880(void *a1)
{
  *(void *)&v1[OBJC_IVAR___ICSScreenSharingBroadcasterRootViewController_bannerPresentationManager] = a1;
  objc_allocWithZone((Class)type metadata accessor for ScreenSharingBroadcasterViewController());
  id v3 = a1;
  uint64_t v4 = v1;
  *(void *)&v4[OBJC_IVAR___ICSScreenSharingBroadcasterRootViewController_containerViewController] = ScreenSharingBroadcasterViewController.init(bannerPresentationManager:)();

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  [super initWithNibName:0 bundle:0];

  return v5;
}

void sub_10017B930()
{
}

id sub_10017B9AC()
{
  id v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  [super viewDidLoad];
  id v2 = *(void **)&v0[OBJC_IVAR___ICSScreenSharingBroadcasterRootViewController_containerViewController];
  id result = sub_10017311C();
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = sub_10017311C();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v5 = result;
  id v6 = [self clearColor];
  [v5 setBackgroundColor:v6];

  id result = sub_100125FD0();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_super v7 = result;
  id result = sub_10017311C();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v8 = result;
  [v7 addSubview:result];

  [v1 addChildViewController:v2];
  [v2 didMoveToParentViewController:v1];
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100286FD0;
  id result = sub_10017311C();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = result;
  id v11 = [result leadingAnchor];

  id result = sub_100125FD0();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  double v12 = result;
  id v13 = [result leadingAnchor];

  id v14 = sub_10017BF8C();
  *(void *)(v9 + 32) = v14;
  id result = sub_10017311C();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  double v15 = result;
  id v16 = [result trailingAnchor];

  id result = sub_100125FD0();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  double v17 = result;
  id v18 = [result trailingAnchor];

  id v19 = sub_10017BF8C();
  *(void *)(v9 + 40) = v19;
  id result = sub_10017311C();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v20 = result;
  id v21 = [result topAnchor];

  id result = sub_100125FD0();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v22 = result;
  id v23 = [result topAnchor];

  id v24 = sub_10017BF8C();
  *(void *)(v9 + 48) = v24;
  id result = sub_10017311C();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v25 = result;
  id v26 = [result bottomAnchor];

  id result = sub_100125FD0();
  if (result)
  {
    uint64_t v27 = result;
    uint64_t v28 = self;
    id v29 = [v27 bottomAnchor];

    id v30 = [v26 constraintEqualToAnchor:v29];
    *(void *)(v9 + 56) = v30;
    specialized Array._endMutation()();
    sub_10013DFE4();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v28 activateConstraints:isa];

    return [v1 setNeedsStatusBarAppearanceUpdate];
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_10017BDF8(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  return [super viewDidAppear:a1 & 1];
}

void sub_10017BE90()
{
}

id sub_10017BEE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterRootViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ScreenSharingBroadcasterRootViewController()
{
  return self;
}

id sub_10017BF8C()
{
  objc_super v4 = *(const char **)(v2 + 520);
  return [v0 v4:v1];
}

uint64_t AddCallControlService.__allocating_init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  AddCallControlService.init(call:callCenter:)(a1, a2);
  return v4;
}

void *AddCallControlService.init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  v3[3] = a1;
  void v3[4] = a2;
  sub_10011EB3C(&qword_100321220);
  swift_allocObject();
  id v6 = a1;
  id v7 = a2;
  _OWORD v3[2] = CurrentValueSubject.init(_:)();
  id v8 = self;
  id v9 = [v8 defaultCenter];
  [v9 addObserver:v3 selector:"callModelDidChange:" name:TUCallModelChangedNotification object:0];

  id v10 = [v8 defaultCenter];
  [v10 addObserver:v3 selector:"callStatusDidChange:" name:TUCallCenterCallStatusChangedNotification object:0];

  sub_10017C318();
  return v3;
}

uint64_t sub_10017C164(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  a4(v9);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_10017C25C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  Notification.object.getter();
  if (v5)
  {
    sub_100123340(0, (unint64_t *)&qword_100323D80);
    if (swift_dynamicCast())
    {
      unsigned __int8 v2 = [v3 isEqualToCall:v1];

      if (v2) {
        sub_10017C318();
      }
    }
  }
  else
  {
    sub_10012D318((uint64_t)v4);
  }
}

uint64_t sub_10017C318()
{
  return CurrentValueSubject.send(_:)();
}

id sub_10017C358()
{
  id result = [*(id *)(v0 + 32) isAddCallAllowed];
  if (result)
  {
    unsigned __int8 v2 = self;
    id result = [v2 sharedInstance];
    if (result)
    {
      id v3 = result;
      unsigned __int8 v4 = [result isSetupAssistantRunning];

      if (v4) {
        return 0;
      }
      uint64_t v5 = *(void **)(v0 + 24);
      if ([v5 isConversation])
      {
        id v6 = [v5 remoteParticipantHandles];
        sub_100123340(0, &qword_1003217C0);
        sub_10017C580();
        uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v8 = sub_1001683C8(v7);
        swift_bridgeObjectRelease();
        if (v8 != 1) {
          return 0;
        }
      }
      id result = [v2 sharedInstance];
      if (result)
      {
        id v9 = result;
        unsigned int v10 = [result isInLostMode];

        return (id)(v10 ^ 1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t AddCallControlService.deinit()
{
  swift_release();

  return v0;
}

uint64_t AddCallControlService.__deallocating_deinit()
{
  AddCallControlService.deinit();

  return _swift_deallocClassInstance(v0, 40, 7);
}

unint64_t sub_10017C510()
{
  unint64_t result = qword_100322C50;
  if (!qword_100322C50)
  {
    type metadata accessor for AddCallControlService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322C50);
  }
  return result;
}

uint64_t type metadata accessor for AddCallControlService()
{
  return self;
}

unint64_t sub_10017C580()
{
  unint64_t result = qword_1003217C8;
  if (!qword_1003217C8)
  {
    sub_100123340(255, &qword_1003217C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003217C8);
  }
  return result;
}

char *sub_10017C5E8(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for VisualVoicemailManager());
  id v7 = a1;
  swift_retain();
  return sub_100119D88(v7, a2, a3);
}

id sub_10017C6E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualVoicemailManagerFactory();
  return [super init];
}

id sub_10017C73C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualVoicemailManagerFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for VisualVoicemailManagerFactory()
{
  return self;
}

uint64_t sub_10017C794()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017C7CC()
{
  return sub_10017C7D4(*(void *)(v0 + 16));
}

uint64_t sub_10017C7D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_10017C7E8(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureWindow();
  [super initWithWindowScene:a1];

  return v3;
}

id sub_10017C860()
{
  v8.receiver = v0;
  v8.super_class = (Class)sub_10017CA1C();
  return sub_10017C9F8((uint64_t)v8.super_class, "initWithFrame:", v1, v2, v3, v4, v5, v6, v8);
}

id sub_10017C8C4(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureWindow();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id sub_10017C93C()
{
  v8.receiver = v0;
  v8.super_class = (Class)sub_10017CA1C();
  return sub_10017C9F8((uint64_t)v8.super_class, "initWithContentRect:", v1, v2, v3, v4, v5, v6, v8);
}

id sub_10017C9A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureWindow();
  return [super dealloc];
}

uint64_t type metadata accessor for SecureWindow()
{
  return self;
}

id sub_10017C9F8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return [super a2:v13 v12:v12 v11:v11 v10:v10];
}

uint64_t sub_10017CA1C()
{
  return type metadata accessor for SecureWindow();
}

id FaceTimeControlService.callCenter.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t FaceTimeControlService.__allocating_init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  FaceTimeControlService.init(call:callCenter:)(a1, a2);
  return v4;
}

void *FaceTimeControlService.init(call:callCenter:)(void *a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for FaceTimeValidityState();
  sub_100122300();
  uint64_t v9 = v8;
  __chkstk_darwin(v10, v11);
  sub_10016AC10();
  void v4[4] = a1;
  void v4[5] = a2;
  sub_10011EB3C(&qword_100321220);
  swift_allocObject();
  id v12 = a1;
  id v13 = a2;
  v4[2] = CurrentValueSubject.init(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v3, enum case for FaceTimeValidityState.unknown(_:), v7);
  sub_10011EB3C(&qword_100322D80);
  swift_allocObject();
  v4[3] = CurrentValueSubject.init(_:)();
  id v14 = self;
  id v15 = [v14 defaultCenter];
  [v15 addObserver:v4 selector:"callStatusDidChange:" name:TUCallCenterCallStatusChangedNotification object:0];

  id v16 = [v14 defaultCenter];
  [v16 addObserver:v4 selector:"faceTimeIDStatusDidChange:" name:TUCallFaceTimeIDStatusChangedNotification object:0];

  sub_10017CC8C();
  sub_10017CE70();

  return v4;
}

void sub_10017CC5C(uint64_t a1)
{
}

uint64_t sub_10017CC8C()
{
  return CurrentValueSubject.send(_:)();
}

void sub_10017CCCC(uint64_t a1)
{
}

void sub_10017CCE4(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 + 32);
  Notification.object.getter();
  if (v8)
  {
    sub_100172940();
    if (swift_dynamicCast())
    {
      unsigned __int8 v5 = [v6 isEqualToCall:v4];

      if (v5) {
        a2();
      }
    }
  }
  else
  {
    sub_10012D318((uint64_t)v7);
  }
}

uint64_t sub_10017CDB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = type metadata accessor for Notification();
  sub_100122300();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  sub_10016AC10();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  a4(v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
}

uint64_t sub_10017CE70()
{
  uint64_t v0 = type metadata accessor for FaceTimeValidityState();
  sub_100122300();
  uint64_t v2 = v1;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017D1E8((uint64_t)v6);
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v6, v0);
}

Swift::Void __swiftcall FaceTimeControlService.requestUpgradeToFaceTime()()
{
  uint64_t v3 = v0 + 32;
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v1 = *(void **)(v3 + 8);
  [v1 requestVideoUpgradeForCall:v2 originatingUIType:27];
  [v2 setIsSendingVideo:1];
  id v8 = [v1 routeController];
  id v4 = [v8 pickedRoute];
  if (v4)
  {
    uint64_t v5 = v4;
    if ([v4 isReceiver])
    {
      id v6 = [v8 speakerRoute];
      if (v6)
      {
        id v7 = v6;
        [v8 pickRoute:v6];

        id v8 = v7;
      }
    }
  }
}

id sub_10017D014()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = [v1 provider];
  unsigned __int8 v3 = [v2 supportsAudioAndVideo];

  if ((v3 & 1) == 0)
  {
    id result = [self sharedInstance];
    if (!result)
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v5 = result;
    unsigned int v6 = [result faceTimeVideoIsAvailable];

    if (!v6) {
      return 0;
    }
  }
  id v7 = [v1 handle];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v7 value];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v10 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v10 < 1
    || ([v1 isConferenced] & 1) != 0
    || ([v1 isVoicemail] & 1) != 0
    || ([v1 isEmergency] & 1) != 0
    || [v1 status] != 1
    || [v1 faceTimeIDStatus] == 1)
  {
    return 0;
  }
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v11 = result;
    unsigned int v12 = [result isSetupAssistantRunning];

    return (id)(v12 ^ 1);
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10017D1E8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = [*(id *)(v1 + 32) faceTimeIDStatus];
  uint64_t v4 = type metadata accessor for FaceTimeValidityState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  unsigned int v6 = (unsigned int *)&enum case for FaceTimeValidityState.valid(_:);
  if (v3 != 2) {
    unsigned int v6 = (unsigned int *)&enum case for FaceTimeValidityState.unknown(_:);
  }
  uint64_t v7 = *v6;

  return v5(a1, v7, v4);
}

uint64_t FaceTimeControlService.deinit()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t FaceTimeControlService.__deallocating_deinit()
{
  FaceTimeControlService.deinit();

  return _swift_deallocClassInstance(v0, 48, 7);
}

unint64_t sub_10017D2EC()
{
  unint64_t result = qword_100322D88;
  if (!qword_100322D88)
  {
    type metadata accessor for FaceTimeControlService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100322D88);
  }
  return result;
}

uint64_t type metadata accessor for FaceTimeControlService()
{
  return self;
}

void sub_10017D35C()
{
}

uint64_t sub_10017D380(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_10017D408()
{
  return *(id *)(v0 + OBJC_IVAR___PHAudioCallViewControllerWrapper_viewController);
}

id sub_10017D418(void *a1, void *a2, double a3)
{
  objc_allocWithZone((Class)type metadata accessor for AudioCallViewController());
  uint64_t v7 = v3;
  id v8 = a1;
  id v9 = a2;
  uint64_t v10 = sub_10017D824(v8, v9, a3);
  swift_unknownObjectWeakAssign();
  *(void *)&v7[OBJC_IVAR___PHAudioCallViewControllerWrapper_viewController] = v10;

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for AudioCallViewControllerWrapper();
  [super init];

  swift_unknownObjectRelease();
  return v11;
}

void sub_10017D564()
{
}

id sub_10017D5A4(uint64_t a1)
{
  return sub_10017DB5C(a1, type metadata accessor for AudioCallViewControllerWrapper);
}

uint64_t type metadata accessor for AudioCallViewControllerWrapper()
{
  return self;
}

uint64_t type metadata accessor for AudioCallViewController()
{
  uint64_t result = qword_100322ED0;
  if (!qword_100322ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10017D638()
{
  return swift_initClassMetadata2();
}

void sub_10017D6A8(uint64_t a1)
{
  id v2 = *(void **)(v1 + qword_100322EC8);
  *(void *)(v1 + qword_100322EC8) = a1;
}

id sub_10017D6BC()
{
  uint64_t v1 = sub_10017D76C();
  if (v1)
  {
    id v2 = (id)v1;
    unsigned int v3 = (id *)&v0[qword_100322EC8];
    if (!*(void *)&v0[qword_100322EC8])
    {
      objc_allocWithZone((Class)type metadata accessor for CallDetailsCoordinator());
      v0;
      id v2 = v2;
      uint64_t v4 = CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)();
      sub_10017D6A8(v4);
    }
  }
  else
  {
    sub_10017D6A8(0);
    unsigned int v3 = (id *)&v0[qword_100322EC8];
  }
  id v5 = *v3;
  id v6 = *v3;
  return v5;
}

uint64_t sub_10017D76C()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (v1)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v2 = ICSApplicationDelegate.bannerPresentationManager.getter();
      uint64_t v3 = dispatch thunk of BannerPresentationManager.conversationControlsManager.getter();
      swift_unknownObjectRelease();

      return v3;
    }
    swift_unknownObjectRelease();
  }
  return 0;
}

char *sub_10017D824(void *a1, void *a2, double a3)
{
  uint64_t v7 = type metadata accessor for AudioCallView();
  __chkstk_darwin(v7 - 8, v8);
  swift_unknownObjectWeakInit();
  *(void *)&v3[qword_100322EC8] = 0;
  *(void *)&v3[qword_100322EB0] = a1;
  id v9 = v3;
  id v10 = a1;
  uint64_t result = (char *)[a2 frontmostCall];
  if (result)
  {
    unsigned int v12 = result;
    type metadata accessor for AudioCallModelManager();
    swift_allocObject();
    id v13 = v10;
    id v14 = a2;
    *(void *)&v9[qword_100322EB8] = sub_10019F15C(v13, v12, v14, a3);

    swift_retain();
    AudioCallView.init(model:)();
    id v15 = (char *)LockScreenHostingController.init(rootView:)();
    uint64_t v16 = *(void *)&v15[qword_100322EB8];
    *(void *)(v16 + 64) = sub_10017E264((unint64_t *)&unk_100322F90);
    swift_unknownObjectWeakAssign();
    double v17 = v15;
    swift_retain();
    sub_10019F2CC();
    swift_release();

    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10017D9E4()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_100322EC8] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10017DA64(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10017D9E4();
}

void sub_10017DA80()
{
}

void sub_10017DAB0()
{
}

void sub_10017DAE0()
{
  swift_release();
  sub_1001443AC(v0 + qword_100322EC0);
  id v1 = *(void **)(v0 + qword_100322EC8);
}

id sub_10017DB40()
{
  return sub_10017DB5C(0, type metadata accessor for AudioCallViewController);
}

id sub_10017DB5C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

void sub_10017DB94(uint64_t a1)
{
  swift_release();
  sub_1001443AC(a1 + qword_100322EC0);
  id v2 = *(void **)(a1 + qword_100322EC8);
}

uint64_t sub_10017DC00()
{
  return type metadata accessor for AudioCallViewController();
}

void sub_10017DC0C()
{
  if ([v0 isReadyToShowCallDetails])
  {
    uint64_t v1 = sub_10017D76C();
    if (v1)
    {
      id v4 = (id)v1;
      if (dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.getter())
      {
        id v2 = sub_10017D6BC();
        if (v2)
        {
          id v3 = v2;
          dispatch thunk of CallDetailsCoordinator.start(withReason:)();
        }
      }
    }
  }
}

void sub_10017DCB4(void *a1)
{
  id v1 = a1;
  sub_10017DC08();
}

BOOL sub_10017DCFC(void *a1)
{
  id v1 = a1;
  BOOL v2 = sub_10017DD30();

  return v2;
}

BOOL sub_10017DD30()
{
  return [*(id *)(v0 + qword_100322EB0) callDisplayStyle] == (id)2;
}

void sub_10017DD64(uint64_t a1, uint64_t a2)
{
  [*(id *)(v2 + qword_100322EB8) callDisplayStyleDidChangeFromStyle:a1 toStyle:a2];

  sub_10017DC0C();
}

void sub_10017DDA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = a1;
  sub_10017DD64(a3, a4);
}

void sub_10017DE04(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    if ((a1 & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (!v4) {
      goto LABEL_9;
    }
    id v5 = (void *)v4;
    if ([self shouldUseFullScreenPeoplePicker])
    {
      id v6 = [self sharedInstance];
      if (!v6) {
        goto LABEL_12;
      }
      uint64_t v7 = v6;
      sub_10017E1E0(1, 0xD000000000000025, 0x8000000100237560, v6);
    }
    id v8 = [v3 view];
    if (v8)
    {
      id v9 = v8;
      [v5 presentPhoneRemoteViewControllerForView:v8];

      swift_unknownObjectRelease();
      id v3 = v9;
LABEL_9:

      return;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

void sub_10017DF34()
{
}

void sub_10017DF54(uint64_t a1, uint64_t a2)
{
  id v4 = [self sharedInstance];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v8[4] = a1;
    void v8[5] = v6;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    _DWORD v8[2] = sub_10017D380;
    _OWORD v8[3] = a2;
    uint64_t v7 = _Block_copy(v8);
    swift_release();
    [v5 requestPasscodeUnlockWithCompletion:v7];
    _Block_release(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_10017E054(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    if (a1)
    {
      id v4 = sub_10017D6BC();
      if (v4)
      {
        id v5 = v4;
        dispatch thunk of CallDetailsCoordinator.start(withReason:)();

        id v3 = v5;
      }
    }
  }
}

void sub_10017E0E0()
{
}

uint64_t sub_10017E120(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10017E264(&qword_100322F80);
  uint64_t result = sub_10017E264(&qword_100322F88);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10017E188()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10017E1C0(char a1)
{
}

uint64_t sub_10017E1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10017E1D8()
{
  return swift_release();
}

void sub_10017E1E0(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a4 setRequestedVCPresentationWithStatusBar:a1 & 1 withReasonLog:v6];
}

void sub_10017E25C(char a1)
{
}

uint64_t sub_10017E264(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioCallViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DeclineControlService.__allocating_init(callCenter:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DeclineControlService.init(callCenter:)(a1);
  return v2;
}

uint64_t DeclineControlService.init(callCenter:)(void *a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 16) = a1;
  id v4 = objc_allocWithZone((Class)type metadata accessor for DeclineCallServiceFactory());
  id v5 = a1;
  id v6 = [v4 init];
  type metadata accessor for DeclineCallService();
  swift_allocObject();
  id v7 = v5;
  id v8 = sub_1001BBEF4((uint64_t)v7);

  *(void *)(v2 + 24) = v8;
  return v2;
}

Swift::Void __swiftcall DeclineControlService.requestDeclineCall()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100320BD0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_10011EB80((uint64_t)v5, 1, 1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  id v8 = (void *)swift_allocObject();
  _DWORD v8[2] = v7;
  _OWORD v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  sub_10012D67C();
  swift_release();
}

uint64_t sub_10017E484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  type metadata accessor for MainActor();
  uint8_t v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v6;
  v4[18] = v5;
  return _swift_task_switch(sub_10017E51C, v6, v5);
}

uint64_t sub_10017E51C()
{
  uint64_t v1 = *(void **)(v0[15] + 24);
  v0[2] = v0;
  v0[3] = sub_10017E614;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10017A398;
  v0[13] = &unk_1002D3668;
  v0[14] = v2;
  [v1 declineAnsweringFrontMostCallViaUserActionWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10017E614()
{
  sub_1001201F8();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 136);
  return _swift_task_switch(sub_10017E6F8, v2, v1);
}

uint64_t sub_10017E6F8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DeclineControlService.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DeclineControlService.__deallocating_deinit()
{
  DeclineControlService.deinit();

  return _swift_deallocClassInstance(v0, 32, 7);
}

void sub_10017E7B4()
{
}

uint64_t sub_10017E7D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10017E818(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100122004;
  return sub_10017E484(a1, v4, v5, v6);
}

uint64_t type metadata accessor for DeclineControlService()
{
  return self;
}

uint64_t sub_10017E8F0(uint64_t a1, void *a2)
{
  id v4 = [self mainBundle];
  v10._object = (void *)0xE000000000000000;
  v5.value._object = (void *)0x8000000100237700;
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000012;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v5, (NSBundle)v4, v7, v10)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_10017E9DC()
{
  return sub_100170110();
}

uint64_t sub_10017EA2C()
{
  return Transcript.text.getter();
}

uint64_t sub_10017EA94()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_confidenceRating);
}

id sub_10017EAAC(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_confidenceRating] = 0;
  *(void *)&v1[OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_confidence] = 0x3FF0000000000000;
  id v4 = &v1[OBJC_IVAR____TtC13InCallService22FTTranscriptionMessage_transcriptData];
  uint64_t v5 = type metadata accessor for Transcript();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

void sub_10017EBA4()
{
}

uint64_t sub_10017EC48()
{
  return type metadata accessor for FTTranscriptionMessage(0);
}

uint64_t type metadata accessor for FTTranscriptionMessage(uint64_t a1)
{
  return sub_10013EFF0(a1, (uint64_t *)&unk_100323090);
}

uint64_t sub_10017EC70()
{
  uint64_t result = type metadata accessor for Transcript();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_10017ED54()
{
  sub_100123340(0, (unint64_t *)&qword_100323250);
  id v1 = [v0 text];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  return sub_100170110();
}

id sub_10017EDE8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  sub_100182DC4();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_10017EE54()
{
  id v1 = [v0 makeTranscriptMessage];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

BOOL sub_10017EEBC(char *a1, char *a2)
{
  return sub_10011DB34(*a1, *a2);
}

Swift::Int sub_10017EEC8()
{
  return sub_10011DB94(*v0);
}

void sub_10017EED0(uint64_t a1)
{
  sub_10011DC6C(a1, *v1);
}

id sub_10017EF28()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100122300();
  uint64_t v2 = v1;
  uint64_t v5 = __chkstk_darwin(v3, v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  Swift::String v10 = (char *)&v16 - v9;
  dispatch thunk of Message.recordUUID.getter();
  uint64_t v11 = sub_100182D90();
  v12(v11);
  id v13 = objc_allocWithZone((Class)type metadata accessor for MessageID(0));
  id v14 = sub_10013ED4C((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v0);
  return v14;
}

uint64_t sub_10017F08C()
{
  return dispatch thunk of Message.provider.getter();
}

uint64_t sub_10017F1B4@<X0>(uint64_t a1@<X8>)
{
  dispatch thunk of Message.callUUID.getter();
  uint64_t v2 = type metadata accessor for UUID();

  return sub_10011EB80(a1, 0, 1, v2);
}

uint64_t sub_10017F23C()
{
  LOWORD(result) = dispatch thunk of Message.messageType.getter();
  if ((unsigned __int16)result < 3u) {
    return (unsigned __int16)result;
  }
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  dispatch thunk of Message.messageType.getter();
  MessageType.rawValue.getter();
  v1._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017F320()
{
  if (dispatch thunk of Message.isFromUnknown.getter()) {
    return 0;
  }
  else {
    return dispatch thunk of Message.from.getter();
  }
}

id sub_10017F3A0()
{
  sub_10017F320();
  id v1 = v0;
  if (v0)
  {
    uint64_t v2 = self;
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v1 = [v2 normalizedHandleWithDestinationID:v3];
  }
  return v1;
}

id sub_10017F464()
{
  swift_retain();
  uint64_t v0 = (uint64_t (*)(void))sub_10015BB84();
  sub_10017F5B4(v0, v1);
  uint64_t v3 = v2;
  swift_release();
  if (v3)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }

  return v4;
}

id sub_10017F4EC()
{
  dispatch thunk of Message.recipient.getter();
  id v1 = v0;
  if (v0)
  {
    uint64_t v2 = self;
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v1 = [v2 normalizedHandleWithDestinationID:v3];
  }
  return v1;
}

uint64_t sub_10017F5B4(uint64_t (*a1)(void), SEL *a2)
{
  NSString v3 = (void *)a1();
  if (!v3) {
    return 0;
  }
  NSString v4 = v3;
  id v5 = [v3 *a2];
  if (!v5)
  {

    return 0;
  }
  uint64_t v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v7;
}

uint64_t sub_10017F6B0()
{
  if (*(unsigned char *)(v0 + 32) != 1) {
    return *(void *)(v0 + 24);
  }
  int v1 = (unsigned __int16)dispatch thunk of Message.mailboxType.getter();
  uint64_t v2 = 1;
  if (v1 == 2) {
    uint64_t v2 = 2;
  }
  if (v1 == 1) {
    uint64_t result = 3;
  }
  else {
    uint64_t result = v2;
  }
  *(void *)(v0 + 24) = result;
  *(unsigned char *)(v0 + 32) = 0;
  return result;
}

uint64_t sub_10017F748()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) == 1)
  {
    return sub_10017F6B0();
  }
  else
  {
    int v2 = (unsigned __int16)dispatch thunk of Message.mailboxType.getter();
    uint64_t v3 = 1;
    if (v2 == 2) {
      uint64_t v3 = 2;
    }
    if (v2 == 1) {
      return 3;
    }
    else {
      return v3;
    }
  }
}

uint64_t sub_10017F7E0(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) = 1;
  *(void *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_10017F7FC()
{
  int v1 = *(unsigned __int8 *)(v0 + 33);
  if (v1 == 2)
  {
    char v2 = dispatch thunk of Message.isRead.getter();
    *(unsigned char *)(v0 + 33) = v2 & 1;
  }
  else
  {
    char v2 = v1 & 1;
  }
  return v2 & 1;
}

uint64_t sub_10017F85C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) != 1) {
    return dispatch thunk of Message.isRead.getter() & 1;
  }

  return sub_10017F7FC();
}

uint64_t sub_10017F8DC(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) = 1;
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t sub_10017F9E8()
{
  return dispatch thunk of Message.dateCreated.getter();
}

void sub_10017FA24()
{
  uint64_t v3 = sub_10011EB3C(&qword_100324AA0);
  uint64_t v4 = sub_10015B684(v3);
  __chkstk_darwin(v4, v5);
  sub_10013FC4C();
  uint64_t v6 = sub_10011EB3C((uint64_t *)&unk_100323128);
  uint64_t v7 = sub_10015B684(v6);
  __chkstk_darwin(v7, v8);
  sub_100120524();
  if (sub_10017FC54() == 2
    && (dispatch thunk of Message.isRTT.getter() & 1) != 0
    && TUCallScreeningRTTEnabled())
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript) == 1 && sub_10017FE74())
    {
      self;
      uint64_t v9 = (void *)swift_dynamicCastObjCClass();
      if (v9)
      {
        id v10 = [v9 conversation];
        swift_unknownObjectRelease();
        if (v10)
        {
          id v11 = [v10 utterances];

          if (v11)
          {
            [v11 count];
          }
          else
          {
            __break(1u);
          }
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    int v12 = sub_10017FC54();
    if (v12)
    {
      if (v12 == 1) {
        return;
      }
      sub_10017FEE4(v2);
      uint64_t v16 = type metadata accessor for Transcript();
      sub_100120F20(v2, 1, v16);
      id v14 = (uint64_t *)&unk_100323128;
      uint64_t v15 = v2;
    }
    else
    {
      sub_1001806B8((uint64_t)&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, (uint64_t (*)(uint64_t))&dispatch thunk of Message.sandboxTranscriptFile.getter, v1);
      uint64_t v13 = type metadata accessor for URL();
      sub_100120F20(v1, 1, v13);
      id v14 = &qword_100324AA0;
      uint64_t v15 = v1;
    }
    sub_10013FAFC(v15, v14);
  }
}

uint64_t sub_10017FC54()
{
  unsigned __int16 v0 = dispatch thunk of Message.messageType.getter();
  if (v0 < 3u) {
    return 0x10002u >> (8 * v0);
  }
  if (qword_100320550 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CC18);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    dispatch thunk of Message.messageType.getter();
    uint64_t v6 = String.init<A>(describing:)();
    sub_1001412B0(v6, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unexpected Message type %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return 0;
}

uint64_t sub_10017FE4C()
{
  return dispatch thunk of Message.isRTT.getter() & 1;
}

uint64_t sub_10017FE74()
{
  uint64_t v1 = OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    uint64_t v3 = (uint64_t)sub_100180D58(v0);
    uint64_t v4 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    swift_unknownObjectRetain();
    sub_100182804(v4);
  }
  sub_100182814(v2);
  return v3;
}

uint64_t sub_10017FEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10011EB3C(&qword_100323238);
  uint64_t v4 = sub_10015B684(v3);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v9);
  id v11 = &v18[-v10];
  uint64_t v12 = v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptData;
  swift_beginAccess();
  sub_100182824(v12, (uint64_t)v11, &qword_100323238);
  uint64_t v13 = sub_10011EB3C((uint64_t *)&unk_100323128);
  if (sub_100120F20((uint64_t)v11, 1, v13) != 1) {
    return sub_1001828B4((uint64_t)v11, a1, (uint64_t *)&unk_100323128);
  }
  sub_10013FAFC((uint64_t)v11, &qword_100323238);
  dispatch thunk of Message.transcript.getter();
  uint64_t v14 = sub_10015BB84();
  sub_100182824(v14, v15, v16);
  sub_10011EB80((uint64_t)v8, 0, 1, v13);
  swift_beginAccess();
  sub_10018286C((uint64_t)v8, v12, &qword_100323238);
  return swift_endAccess();
}

uint64_t sub_1001800AC()
{
  return dispatch thunk of Message.duration.getter();
}

BOOL sub_1001800F8()
{
  dispatch thunk of Message.transcriptionStatus.getter();
  int v0 = (unsigned __int16)TranscriptionStatus.rawValue.getter();
  return v0 != (unsigned __int16)TranscriptionStatus.rawValue.getter();
}

BOOL sub_100180134()
{
  dispatch thunk of Message.mailboxType.getter();
  int v0 = (unsigned __int16)MailboxType.rawValue.getter();
  return v0 == (unsigned __int16)MailboxType.rawValue.getter();
}

uint64_t sub_100180198()
{
  int v1 = *(unsigned __int8 *)(v0 + 34);
  if (v1 != 2) {
    return v1 & 1;
  }
  uint64_t result = 0;
  *(unsigned char *)(v0 + 34) = 0;
  return result;
}

uint64_t sub_1001801E0(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty) = 1;
  *(unsigned char *)(v1 + 34) = result;
  return result;
}

uint64_t sub_100180210()
{
  return dispatch thunk of Message.isSensitive.getter() & 1;
}

uint64_t sub_10018033C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = sub_10011EB3C(&qword_100324AA0);
  sub_10013FC1C();
  __chkstk_darwin(v6, v7);
  sub_100182C3C();
  __chkstk_darwin(v8, v9);
  id v11 = &v30[-v10];
  uint64_t v12 = sub_10011EB3C(&qword_100323240);
  uint64_t v13 = sub_10015B684(v12);
  __chkstk_darwin(v13, v14);
  sub_100182C58();
  __chkstk_darwin(v15, v16);
  id v18 = &v30[-v17];
  sub_100182CA8();
  sub_100182824(v2, (uint64_t)v18, &qword_100323240);
  if (sub_100120F20((uint64_t)v18, 1, v5) == 1)
  {
    sub_10013FAFC((uint64_t)v18, &qword_100323240);
    id v19 = (void *)dispatch thunk of Message.sandboxMessageFile.getter();
    uint64_t v20 = (void *)dispatch thunk of SandboxExtendedURL.sandboxResolvedURL.getter();

    if (v20)
    {
      uint64_t v21 = type metadata accessor for URL();
      sub_100182C84(v21);
      uint64_t v22 = sub_1001828FC(&qword_100323248, (void (*)(uint64_t))&type metadata accessor for URL);
      sub_100182D5C(v22);

      if (sub_100120F20(v3, 1, (uint64_t)v19) == 1)
      {
        uint64_t v23 = (uint64_t)v11;
        uint64_t v24 = 1;
      }
      else
      {
        uint64_t v27 = sub_100182CCC();
        v28(v27);
        uint64_t v23 = (uint64_t)v11;
        uint64_t v24 = 0;
      }
      uint64_t v25 = 1;
      uint64_t v26 = (uint64_t)v19;
    }
    else
    {
      type metadata accessor for URL();
      uint64_t v23 = sub_100182D7C();
    }
    sub_10011EB80(v23, v24, v25, v26);
    sub_100182824((uint64_t)v11, v1, &qword_100324AA0);
    sub_100182BF8();
    sub_10018286C(v1, v2, &qword_100323240);
    swift_endAccess();
  }
  else
  {
    id v11 = v18;
  }
  return sub_1001828B4((uint64_t)v11, a1, &qword_100324AA0);
}

uint64_t sub_1001806B8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_10011EB3C(&qword_100324AA0);
  sub_10013FC1C();
  __chkstk_darwin(v9, v10);
  sub_100182C3C();
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v35[-v13];
  uint64_t v15 = sub_10011EB3C(&qword_100323240);
  uint64_t v16 = sub_10015B684(v15);
  __chkstk_darwin(v16, v17);
  sub_100182C58();
  __chkstk_darwin(v18, v19);
  uint64_t v21 = &v35[-v20];
  sub_100182CA8();
  sub_100182824(a1, (uint64_t)v21, &qword_100323240);
  if (sub_100120F20((uint64_t)v21, 1, v8) == 1)
  {
    uint64_t v22 = sub_10013FAFC((uint64_t)v21, &qword_100323240);
    uint64_t v23 = a2(v22);
    if (v23
      && (uint64_t v24 = (void *)v23,
          uint64_t v25 = (void *)dispatch thunk of SandboxExtendedURL.sandboxResolvedURL.getter(),
          v24,
          v25))
    {
      uint64_t v26 = type metadata accessor for URL();
      sub_100182C84(v26);
      uint64_t v27 = sub_1001828FC(&qword_100323248, (void (*)(uint64_t))&type metadata accessor for URL);
      sub_100182D5C(v27);

      if (sub_100120F20(v4, 1, (uint64_t)v24) == 1)
      {
        uint64_t v28 = (uint64_t)v14;
        uint64_t v29 = 1;
      }
      else
      {
        uint64_t v32 = sub_100182CCC();
        v33(v32);
        uint64_t v28 = (uint64_t)v14;
        uint64_t v29 = 0;
      }
      uint64_t v30 = 1;
      uint64_t v31 = (uint64_t)v24;
    }
    else
    {
      type metadata accessor for URL();
      uint64_t v28 = sub_100182D7C();
    }
    sub_10011EB80(v28, v29, v30, v31);
    sub_100182824((uint64_t)v14, v3, &qword_100324AA0);
    sub_100182BF8();
    sub_10018286C(v3, a1, &qword_100323240);
    swift_endAccess();
  }
  else
  {
    uint64_t v14 = v21;
  }
  return sub_1001828B4((uint64_t)v14, a3, &qword_100324AA0);
}

uint64_t sub_100180924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10011EB3C(&qword_100324AA0);
  uint64_t v6 = sub_10015B684(v5);
  __chkstk_darwin(v6, v7);
  sub_10013FC4C();
  if (a3)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = 1;
  }
  sub_10011EB80(v3, v9, 1, v8);
  swift_retain();
  uint64_t v10 = sub_10015BB84();
  sub_1001809E4(v10, v11);
  return swift_release();
}

uint64_t sub_1001809E4(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10011EB3C(&qword_100323240);
  uint64_t v6 = sub_10015B684(v5);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001828B4(a1, (uint64_t)v9, &qword_100324AA0);
  uint64_t v10 = sub_10011EB3C(&qword_100324AA0);
  sub_10011EB80((uint64_t)v9, 0, 1, v10);
  uint64_t v11 = v2 + *a2;
  swift_beginAccess();
  sub_10018286C((uint64_t)v9, v11, &qword_100323240);
  return swift_endAccess();
}

uint64_t sub_100180B00(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  LOBYTE(a3) = a3(v4);
  swift_release();
  return a3 & 1;
}

id sub_100180B40()
{
  uint64_t v1 = sub_10011EB3C(&qword_100324AA0);
  uint64_t v2 = sub_10015B684(v1);
  __chkstk_darwin(v2, v3);
  sub_100120524();
  uint64_t v4 = type metadata accessor for URL();
  sub_100122300();
  __chkstk_darwin(v5, v6);
  sub_10013FC4C();
  sub_10018033C(v0);
  if (sub_100120F20(v0, 1, v4) == 1)
  {
    sub_10013FAFC(v0, &qword_100324AA0);
    return 0;
  }
  else
  {
    uint64_t v8 = sub_100182D90();
    v9(v8);
    id v10 = [self defaultManager];
    URL.path.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v7 = [v10 fileExistsAtPath:v11];

    uint64_t v12 = sub_10015BB84();
    v13(v12);
  }
  return v7;
}

uint64_t sub_100180D40(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript);
  *(void *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript) = a1;
  return sub_100182804(v2);
}

id sub_100180D58(uint64_t a1)
{
  uint64_t v2 = sub_10011EB3C(&qword_100324AA0);
  uint64_t v4 = __chkstk_darwin(v2, v3);
  __chkstk_darwin(v4, v5);
  id v7 = (char *)&v43 - v6;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v46 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  NSString v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10011EB3C((uint64_t *)&unk_100323128);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Transcript();
  uint64_t v44 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v43 - v22;
  uint64_t v24 = type metadata accessor for UUID();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1;
  int v28 = sub_10017FC54();
  if (!v28)
  {
    uint64_t v31 = v46;
    sub_1001806B8((uint64_t)&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, (uint64_t (*)(uint64_t))&dispatch thunk of Message.sandboxTranscriptFile.getter, (uint64_t)v7);
    if (sub_100120F20((uint64_t)v7, 1, v8) == 1)
    {
      sub_10013FAFC((uint64_t)v7, &qword_100324AA0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v11, v7, v8);
      uint64_t v35 = Data.init(contentsOf:options:)();
      unint64_t v37 = v36;
      sub_100123340(0, &qword_100323220);
      sub_100123340(0, &qword_100323228);
      uint64_t v38 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      uint64_t v40 = v38;
      if (v38)
      {
        uint64_t v41 = (objc_class *)type metadata accessor for VisualTranscriptionMessage();
        long long v42 = (char *)objc_allocWithZone(v41);
        *(void *)&v42[OBJC_IVAR___MPVisualTranscriptionMessage_vmTranscript] = v40;
        v48.receiver = v42;
        v48.super_class = v41;
        id v29 = [super init];
        sub_100138A00(v35, v37);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
      sub_100138A00(v35, v37);
    }
    id v29 = 0;
LABEL_9:
    uint64_t v30 = v47;
    goto LABEL_14;
  }
  id v29 = 0;
  uint64_t v30 = v47;
  if (v28 != 1)
  {
    if ((dispatch thunk of Message.isRTT.getter() & 1) != 0 && TUCallScreeningRTTEnabled())
    {
      sub_100123340(0, &qword_100323230);
      dispatch thunk of Message.callUUID.getter();
      id v29 = sub_1001814F4((uint64_t)v27);
    }
    else
    {
      sub_10017FEE4((uint64_t)v15);
      uint64_t v32 = v45;
      if (sub_100120F20((uint64_t)v15, 1, v45) == 1)
      {
        sub_10013FAFC((uint64_t)v15, (uint64_t *)&unk_100323128);
        id v29 = 0;
      }
      else
      {
        uint64_t v33 = v44;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v23, v15, v32);
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v20, v23, v32);
        id v34 = objc_allocWithZone((Class)type metadata accessor for FTTranscriptionMessage(0));
        id v29 = sub_10017EAAC((uint64_t)v20);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v32);
      }
    }
  }
LABEL_14:
  *(unsigned char *)(v30 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript) = 1;
  return v29;
}

id sub_1001814F4(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 initWithCallUUID:isa];

  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_100181590()
{
  sub_10013FAFC(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___dataURL, &qword_100323240);
  sub_10013FAFC(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___thumbnailURL, &qword_100323240);
  sub_10013FAFC(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, &qword_100323240);
  sub_10013FAFC(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptData, &qword_100323238);
  sub_100182804(*(void *)(v0 + OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcript));
  return v0;
}

uint64_t sub_100181624()
{
  sub_100181590();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10018167C()
{
  return type metadata accessor for FTMessage(0);
}

uint64_t type metadata accessor for FTMessage(uint64_t a1)
{
  return sub_10013EFF0(a1, (uint64_t *)&unk_100323100);
}

void sub_1001816A4()
{
  sub_1001817C8(319, (unint64_t *)&unk_100323110, &qword_100324AA0);
  if (v0 <= 0x3F)
  {
    sub_1001817C8(319, &qword_100323120, (uint64_t *)&unk_100323128);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1001817C8(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_1001221B0(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_100181818(double a1)
{
  if (sub_10017F85C()) {
    return 0;
  }
  if (a1 > 5.0) {
    return 1;
  }
  dispatch thunk of Message.duration.getter();
  return v3 / 3.0 < a1;
}

id sub_1001818C4(void *a1)
{
  uint64_t v2 = sub_10017F5B4((uint64_t (*)(void))sub_10017F3A0, (SEL *)&selRef_normalizedValue);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    return 0;
  }
  dispatch thunk of Message.from.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10011EB3C(&qword_100322930);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 contactForDestinationId:v7 keysToFetch:isa];

  return v9;
}

uint64_t sub_100181A48(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = dispatch thunk of Message.from.getter();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7) {
    return 0;
  }
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100286EB0;
  id v9 = self;
  *(void *)(v8 + 32) = [v9 descriptorForRequiredKeysForStyle:0];
  specialized Array._endMutation()();
  id v10 = sub_1001818C4(a1);
  swift_bridgeObjectRelease();
  if (v10)
  {
    if ([v10 isSuggested])
    {
      sub_100181BB8();
      sub_100182DC4();
LABEL_10:

      return v2;
    }
    id v11 = [v9 stringFromContact:v10 style:0];
    if (v11)
    {
      uint64_t v12 = v11;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100182DC4();

      goto LABEL_10;
    }

    return 0;
  }
  sub_100181BB8();
  sub_100182DC4();
  return v2;
}

uint64_t sub_100181BB8()
{
  unint64_t v0 = self;
  dispatch thunk of Message.from.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 normalizedHandleWithDestinationID:v1];

  if (!v2) {
    return 0;
  }
  sub_100182950(v2, (SEL *)&selRef_normalizedValue);
  if (v3)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }
  sub_100182950(v2, (SEL *)&selRef_isoCountryCode);
  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = (id)TUFormattedPhoneNumber();

  if (!v7)
  {

    return 0;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v8;
}

uint64_t sub_100181D7C()
{
  uint64_t v1 = v0;
  uint64_t v87 = sub_10011EB3C(&qword_100324AA0);
  sub_10013FC1C();
  __chkstk_darwin(v2, v3);
  sub_100138CB8();
  uint64_t v86 = v4;
  type metadata accessor for Date();
  sub_100122300();
  uint64_t v84 = v5;
  uint64_t v85 = v6;
  __chkstk_darwin(v5, v7);
  sub_100138CB8();
  uint64_t v83 = v8;
  sub_10011EB3C(&qword_100321178);
  sub_10013FC1C();
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  _StringGuts.grow(_:)(699);
  v13._object = (void *)0x80000001002379E0;
  v13._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v13);
  id v14 = *(id *)(v0 + 16);
  id v15 = [v14 description];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  v19._uint64_t countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);

  id v82 = v14;
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = sub_100182CE4() & 0xFFFFFFFFFFFFLL | 0x3A64000000000000;
  v20._object = (void *)0xE900000000000020;
  String.append(_:)(v20);
  id v21 = sub_10017EF28();
  id v22 = [v21 description];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  v26._uint64_t countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);

  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = sub_100182DA4() | 0x6F72702000000000;
  v27._object = (void *)0xEF203A7265646976;
  String.append(_:)(v27);
  v92._uint64_t countAndFlagsBits = dispatch thunk of Message.provider.getter();
  sub_100182BAC(v92);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = sub_100182DA4() | 0x6C61632000000000;
  v28._object = (void *)0xEF203A444955556CLL;
  String.append(_:)(v28);
  sub_10017F1B4((uint64_t)v12);
  v93._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  sub_100182BAC(v93);
  swift_bridgeObjectRelease();
  v29._object = (void *)0x8000000100237A00;
  v29._uint64_t countAndFlagsBits = 0xD000000000000012;
  uint64_t v80 = 0xD000000000000012;
  String.append(_:)(v29);
  uint64_t v88 = sub_10017F23C();
  _print_unlocked<A, B>(_:_:)();
  sub_100182D2C();
  v30._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v30);
  uint64_t v88 = sub_10017F5B4((uint64_t (*)(void))sub_10017F3A0, (SEL *)&selRef_normalizedValue);
  uint64_t v89 = v31;
  sub_10011EB3C(&qword_100323200);
  v32._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  uint64_t v81 = 0xD00000000000001BLL;
  sub_100182BC4(0xD00000000000001BLL, (uint64_t)"\n    senderISOCountryCode: ");
  uint64_t v33 = sub_10017F5B4((uint64_t (*)(void))sub_10017F3A0, (SEL *)&selRef_isoCountryCode);
  v35._uint64_t countAndFlagsBits = sub_100182BDC(v33, v34);
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  v36._object = (void *)0x8000000100237A60;
  v36._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v36);
  uint64_t v37 = sub_10017F5B4((uint64_t (*)(void))sub_10017F4EC, (SEL *)&selRef_normalizedValue);
  v39._uint64_t countAndFlagsBits = sub_100182BDC(v37, v38);
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  uint64_t v79 = 0xD00000000000001DLL;
  sub_100182BC4(0xD00000000000001DLL, (uint64_t)"\n    receiverISOCountryCode: ");
  uint64_t v40 = sub_10017F5B4((uint64_t (*)(void))sub_10017F4EC, (SEL *)&selRef_isoCountryCode);
  v42._uint64_t countAndFlagsBits = sub_100182BDC(v40, v41);
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  v43._object = (void *)0x8000000100237AA0;
  v43._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v43);
  uint64_t v44 = sub_10017F320();
  v94._uint64_t countAndFlagsBits = sub_100182BDC(v44, v45);
  sub_100182BAC(v94);
  swift_bridgeObjectRelease();
  sub_100182D10((uint64_t)"\n    dirtyFolder: ");
  uint64_t v88 = sub_10017F6B0();
  _print_unlocked<A, B>(_:_:)();
  v46._uint64_t countAndFlagsBits = sub_100182DA4() | 0x6C6F662000000000;
  v46._object = (void *)0xED0000203A726564;
  String.append(_:)(v46);
  uint64_t v88 = sub_10017F748();
  _print_unlocked<A, B>(_:_:)();
  sub_100182D2C();
  v47._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v47);
  if (sub_10017F7FC()) {
    uint64_t v48 = 1702195828;
  }
  else {
    uint64_t v48 = 0x65736C6166;
  }
  sub_100182B94(v48);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = sub_100182DA4() | 0x6165722000000000;
  v49._object = (void *)0xEB00000000203A64;
  String.append(_:)(v49);
  if (sub_10017F85C()) {
    uint64_t v50 = 1702195828;
  }
  else {
    uint64_t v50 = 0x65736C6166;
  }
  sub_100182B94(v50);
  swift_bridgeObjectRelease();
  v51._uint64_t countAndFlagsBits = sub_100182DB0();
  String.append(_:)(v51);
  uint64_t v52 = v83;
  dispatch thunk of Message.dateCreated.getter();
  sub_1001828FC(&qword_100323208, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v53 = v84;
  v95._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  sub_100182BAC(v95);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v52, v53);
  sub_100182BC4(0xD00000000000001FLL, (uint64_t)"\n    isTranscriptionAvailable: ");
  sub_10017FA24();
  if (v54) {
    uint64_t v55 = 1702195828;
  }
  else {
    uint64_t v55 = 0x65736C6166;
  }
  sub_100182B94(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 0x727564202020200ALL;
  v56._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v56);
  dispatch thunk of Message.duration.getter();
  Double.write<A>(to:)();
  sub_100182D2C();
  v57._uint64_t countAndFlagsBits = v81;
  String.append(_:)(v57);
  sub_100182D3C();
  sub_100182BC4(0xD000000000000015, (uint64_t)"\n    isTranscribing: ");
  sub_100182D3C();
  v58._object = (void *)0x8000000100237B60;
  v58._uint64_t countAndFlagsBits = v79;
  String.append(_:)(v58);
  if (sub_1001800F8()) {
    uint64_t v59 = 1702195828;
  }
  else {
    uint64_t v59 = 0x65736C6166;
  }
  sub_100182B94(v59);
  swift_bridgeObjectRelease();
  sub_100182DD0((uint64_t)"\n    isBlocked: ");
  if (sub_100180134()) {
    uint64_t v60 = 1702195828;
  }
  else {
    uint64_t v60 = 0x65736C6166;
  }
  sub_100182B94(v60);
  swift_bridgeObjectRelease();
  sub_100182DD0((uint64_t)"\n    isDeleted: ");
  if (sub_100180198()) {
    uint64_t v61 = 1702195828;
  }
  else {
    uint64_t v61 = 0x65736C6166;
  }
  sub_100182B94(v61);
  swift_bridgeObjectRelease();
  v62._object = (void *)0x8000000100237BC0;
  v62._uint64_t countAndFlagsBits = v80;
  String.append(_:)(v62);
  if (dispatch thunk of Message.isSensitive.getter()) {
    uint64_t v63 = 1702195828;
  }
  else {
    uint64_t v63 = 0x65736C6166;
  }
  sub_100182B94(v63);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = sub_100182DB0();
  v64._object = (void *)0xEE00203A4C525561;
  String.append(_:)(v64);
  uint64_t v65 = v86;
  sub_10018033C(v86);
  v96._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  sub_100182BAC(v96);
  swift_bridgeObjectRelease();
  sub_100182BC4(0xD000000000000013, (uint64_t)"\n    thumbnailURL: ");
  sub_1001806B8((uint64_t)&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___thumbnailURL, (uint64_t (*)(uint64_t))&dispatch thunk of Message.sandboxThumbnailFile.getter, v65);
  v97._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  sub_100182BAC(v97);
  swift_bridgeObjectRelease();
  sub_100182D10((uint64_t)"\n    transcriptURL: ");
  sub_1001806B8((uint64_t)&OBJC_IVAR____TtC13InCallService9FTMessage____lazy_storage___transcriptURL, (uint64_t (*)(uint64_t))&dispatch thunk of Message.sandboxTranscriptFile.getter, v65);
  v98._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  sub_100182BAC(v98);
  swift_bridgeObjectRelease();
  v66._uint64_t countAndFlagsBits = sub_100182CE4() & 0xFFFFFFFFFFFFLL | 0x5273000000000000;
  v66._object = (void *)0xEC000000203A5454;
  String.append(_:)(v66);
  if (dispatch thunk of Message.isRTT.getter()) {
    uint64_t v67 = 1702195828;
  }
  else {
    uint64_t v67 = 0x65736C6166;
  }
  sub_100182B94(v67);
  swift_bridgeObjectRelease();
  sub_100182BC4(0xD000000000000016, (uint64_t)"\n    isDataAvailable: ");
  if (sub_100180B40()) {
    uint64_t v68 = 1702195828;
  }
  else {
    uint64_t v68 = 0x65736C6166;
  }
  sub_100182B94(v68);
  swift_bridgeObjectRelease();
  sub_100182BC4(0xD000000000000011, (uint64_t)"\n    transcript: ");
  uint64_t v88 = sub_10017FE74();
  sub_10011EB3C((uint64_t *)&unk_100323210);
  v99._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  sub_100182BAC(v99);
  swift_bridgeObjectRelease();
  sub_100182BC4(0xD000000000000018, (uint64_t)"\n    didLoadTranscript: ");
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript)) {
    uint64_t v69 = 1702195828;
  }
  else {
    uint64_t v69 = 0x65736C6166;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_didLoadTranscript)) {
    unint64_t v70 = 0xE400000000000000;
  }
  else {
    unint64_t v70 = 0xE500000000000000;
  }
  unint64_t v71 = v70;
  String.append(_:)(*(Swift::String *)&v69);
  swift_bridgeObjectRelease();
  v72._uint64_t countAndFlagsBits = sub_100182CE4() & 0xFFFFFFFFFFFFLL | 0x4473000000000000;
  v72._object = (void *)0xEE00203A79747269;
  String.append(_:)(v72);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty)) {
    uint64_t v73 = 1702195828;
  }
  else {
    uint64_t v73 = 0x65736C6166;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13InCallService9FTMessage_isDirty)) {
    unint64_t v74 = 0xE400000000000000;
  }
  else {
    unint64_t v74 = 0xE500000000000000;
  }
  unint64_t v75 = v74;
  String.append(_:)(*(Swift::String *)&v73);
  swift_bridgeObjectRelease();
  sub_100182D10((uint64_t)"\n    messageSource: ");
  LOBYTE(v88) = sub_10017FC54();
  _print_unlocked<A, B>(_:_:)();
  v76._uint64_t countAndFlagsBits = 0x202020202020200ALL;
  v76._object = (void *)0xEA00000000002920;
  String.append(_:)(v76);
  return v90;
}

uint64_t sub_1001827BC()
{
  return sub_100181D7C();
}

uint64_t sub_1001827E0()
{
  return sub_100181D78();
}

uint64_t sub_100182804(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100182814(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_100182824(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100182CF4(a1, a2, a3);
  sub_10013FC1C();
  uint64_t v4 = sub_100182C74();
  v5(v4);
  return v3;
}

uint64_t sub_10018286C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100182CF4(a1, a2, a3);
  sub_10013FC1C();
  uint64_t v4 = sub_100182C74();
  v5(v4);
  return v3;
}

uint64_t sub_1001828B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100182CF4(a1, a2, a3);
  sub_10013FC1C();
  uint64_t v4 = sub_100182C74();
  v5(v4);
  return v3;
}

uint64_t sub_1001828FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100182944(void *a1)
{
  return sub_100182950(a1, (SEL *)&selRef_normalizedValue);
}

uint64_t sub_100182950(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t getEnumTagSinglePayload for FTMessageSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for FTMessageSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100182B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_100182B2C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FTMessageSource()
{
  return &type metadata for FTMessageSource;
}

unint64_t sub_100182B48()
{
  unint64_t result = qword_100323258;
  if (!qword_100323258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100323258);
  }
  return result;
}

void sub_100182B94(uint64_t a1)
{
  uint64_t v3 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100182BAC(Swift::String a1)
{
  String.append(_:)(a1);
}

void sub_100182BC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_100182BDC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 104) = a2;
  return String.init<A>(describing:)();
}

uint64_t sub_100182BF8()
{
  sub_10011EB80(v1, 0, 1, v0);
  return swift_beginAccess();
}

uint64_t sub_100182C74()
{
  return v0;
}

uint64_t sub_100182C84(uint64_t a1)
{
  return sub_10011EB80(v1, 1, 1, a1);
}

uint64_t sub_100182CA8()
{
  return swift_beginAccess();
}

uint64_t sub_100182CCC()
{
  return v0;
}

uint64_t sub_100182CE4()
{
  return 0x69202020200ALL;
}

uint64_t sub_100182CF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10011EB3C(a3);
}

void sub_100182D10(uint64_t a1@<X8>)
{
  uint64_t v4 = v1;
  unint64_t v3 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v4);
}

void sub_100182D3C()
{
  uint64_t v1 = 0x65736C6166;
  unint64_t v2 = 0xE500000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100182D5C(uint64_t a1)
{
  return dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)(v3, v2, v1, a1);
}

uint64_t sub_100182D7C()
{
  return v0;
}

uint64_t sub_100182D90()
{
  return v0;
}

uint64_t sub_100182DA4()
{
  return 538976266;
}

uint64_t sub_100182DB0()
{
  return 0x746164202020200ALL;
}

void sub_100182DD0(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_100182E08()
{
  id v0 = [self mainBundle];
  uint64_t v1 = sub_100142F58(0xD000000000000028, 0x8000000100237D30);

  return v1;
}

id sub_100182EA8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_100182F24()
{
  id v0 = [self mainBundle];
  uint64_t v1 = sub_100142F58(19279, 0xE200000000000000);

  return v1;
}

void sub_100182F9C()
{
  byte_100323260 = 0;
}

void sub_100182FC0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (byte_100323260)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10011EC48(v3, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "MirroringToMacAlert is already presented.", v5, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v6 = (objc_class *)ObjectType;
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10011EC48(v7, (uint64_t)qword_10032CBE8);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Presenting MirroringToMacAlert.", v10, 2u);
      swift_slowDealloc();
    }

    byte_100323260 = 1;
    v12.receiver = v1;
    v12.super_class = v6;
    [super show];
  }
}

id sub_1001831FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

uint64_t type metadata accessor for MirroringToMacAlert()
{
  return self;
}

id sub_1001832B0()
{
  return [v0 cnk_hasTooManyCallsForCallWaitingBanner];
}

uint64_t initializeBufferWithCopyOfBuffer for VoicemailManagerMessageChanges(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VoicemailManagerMessageChanges()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for VoicemailManagerMessageChanges(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VoicemailManagerMessageChanges(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoicemailManagerMessageChanges(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VoicemailManagerMessageChanges(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100183418(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_100183430(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for VoicemailManagerMessageChanges()
{
  return &type metadata for VoicemailManagerMessageChanges;
}

unint64_t sub_100183458(uint64_t a1, char a2)
{
  unint64_t result = 0xD000000000000025;
  switch(a2)
  {
    case 1:
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000028;
      goto LABEL_5;
    case 2:
      sub_1001835B0();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000027;
LABEL_5:
      sub_10011EB3C(&qword_100320BC8);
      goto LABEL_6;
    case 3:
      return result;
    default:
      sub_1001835B0();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000027;
      type metadata accessor for MessageID(0);
LABEL_6:
      v3._uint64_t countAndFlagsBits = Array.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      v4._uint64_t countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      String.append(_:)(v4);
      return v5;
  }
}

unint64_t sub_1001835A0()
{
  return sub_100183458(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_1001835B0()
{
  _StringGuts.grow(_:)(42);
}

double sub_1001835D0()
{
  double result = 10.0;
  xmmword_100323290 = xmmword_100287F10;
  *(_OWORD *)&qword_1003232A0 = xmmword_100287F10;
  return result;
}

uint64_t sub_100183690()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  sub_100142F48(v1);
  return v1;
}

uint64_t sub_100183778(uint64_t a1, uint64_t a2)
{
  Swift::String v3 = (void *)(v2 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  *Swift::String v3 = a1;
  v3[1] = a2;
  return sub_100142E2C(v4);
}

char *sub_100183798(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  id v5 = objc_allocWithZone((Class)UIVisualEffectView);
  uint64_t v6 = v1;
  id v7 = [v5 init];
  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100286EB0;
  *(void *)(v8 + 32) = [self effectWithStyle:16];
  uint64_t v26 = v8;
  specialized Array._endMutation()();
  sub_100123340(0, &qword_100322278);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 setBackgroundEffects:isa];

  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_blurEffectView] = v7;
  id v10 = objc_allocWithZone((Class)UILabel);
  id v11 = v7;
  id v12 = [v10 init];
  id v13 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v12 setFont:v13];

  id v14 = [self secondaryLabelColor];
  [v12 setTextColor:v14];

  [v12 setNumberOfLines:2];
  [v12 setTextAlignment:1];
  id v15 = [self mainBundle];
  v27._object = (void *)0xE000000000000000;
  v16._object = (void *)0x8000000100237FD0;
  v16._uint64_t countAndFlagsBits = 0xD000000000000021;
  v17.value._uint64_t countAndFlagsBits = 0x65536C6C61436E49;
  v17.value._object = (void *)0xED00006563697672;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v27);

  sub_1001B6E08(v19._countAndFlagsBits, (uint64_t)v19._object, v12);
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_descriptionLabel] = v12;
  id v20 = v12;
  *(void *)&v6[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_revealButton] = sub_100183B54(a1);

  v25.receiver = v6;
  v25.super_class = ObjectType;
  id v21 = [(char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0]];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v21 addSubview:*(void *)&v21[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_blurEffectView]];
  [v21 addSubview:*(void *)&v21[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_descriptionLabel]];
  id v22 = *(void **)&v21[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_revealButton];
  if (v22)
  {
    id v23 = v22;
    [v21 addSubview:v23];
    [v23 addTarget:v21 action:"didTapButton" forControlEvents:0x2000];
  }
  sub_100183F64();

  return v21;
}

void *sub_100183B54(char a1)
{
  uint64_t v2 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UIButton.Configuration();
  uint64_t v14 = __chkstk_darwin(v12, v13);
  Swift::String v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  id v21 = (char *)&v32 - v20;
  id v22 = 0;
  if ((a1 & 1) == 0)
  {
    uint64_t v23 = v19;
    uint64_t v33 = v18;
    static UIButton.Configuration.gray()();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v7);
    UIButton.Configuration.cornerStyle.setter();
    id v24 = [self whiteColor];
    UIButton.Configuration.baseForegroundColor.setter();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for UIButton.Configuration.Size.medium(_:), v2);
    UIButton.Configuration.buttonSize.setter();
    id v25 = [self mainBundle];
    v34._object = (void *)0xE000000000000000;
    v26._object = (void *)0x8000000100238000;
    v26._uint64_t countAndFlagsBits = 0xD000000000000022;
    v27.value._uint64_t countAndFlagsBits = 0x65536C6C61436E49;
    v27.value._object = (void *)0xED00006563697672;
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v34._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v34);

    UIButton.Configuration.title.setter();
    sub_100123340(0, &qword_100323D60);
    sub_1001B434C();
    UIButton.Configuration.image.setter();
    UIButton.Configuration.imagePlacement.setter();
    UIButton.Configuration.imagePadding.setter();
    if (qword_1003205F0 != -1) {
      swift_once();
    }
    UIButton.Configuration.contentInsets.setter();
    sub_100123340(0, &qword_1003232F8);
    uint64_t v29 = v23;
    uint64_t v30 = v33;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v21, v33);
    id v22 = (void *)UIButton.init(configuration:primaryAction:)();
    [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v30);
  }
  return v22;
}

void sub_100183F64()
{
  uint64_t v1 = v0;
  sub_10011EB3C((uint64_t *)&unk_100321360);
  unint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100286FD0;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_blurEffectView];
  id v4 = [v3 topAnchor];
  id v5 = [v1 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 bottomAnchor];
  id v8 = [v1 bottomAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v2 + 40) = v9;
  id v10 = [v3 leadingAnchor];
  id v11 = [v1 leadingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v2 + 48) = v12;
  id v13 = [v3 trailingAnchor];
  id v14 = [v1 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v2 + 56) = v15;
  unint64_t v41 = v2;
  specialized Array._endMutation()();
  Swift::String v16 = *(void **)&v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_descriptionLabel];
  id v17 = [v16 centerYAnchor];
  id v18 = [v1 centerYAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  id v20 = [v16 leadingAnchor];
  id v21 = [v1 leadingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:17.0];

  id v23 = [v16 trailingAnchor];
  id v24 = [v1 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:-17.0];

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v26, 3))
  {
    __break(1u);
  }
  else
  {
    sub_1001849C8(v26 + 3);
    specialized Array._endMutation()();
    id v19 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_5;
    }
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v27 = v22;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v28 = v25;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_revealButton];
  if (v29)
  {
    id v30 = v29;
    id v31 = [v30 topAnchor];
    id v32 = [v16 bottomAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32 constant:8.0];

    id v34 = [v30 centerXAnchor];
    id v35 = [v1 centerXAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFADD__(v37, 2))
    {
      __break(1u);
    }
    else
    {
      sub_1001849C8(v37 + 2);
      specialized Array._endMutation()();
      id v33 = v33;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_14:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v38 = v36;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_17;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_14;
  }
LABEL_17:
  Swift::String v39 = self;
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 activateConstraints:isa];
}

void sub_10018466C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001846F4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100184780()
{
  uint64_t v1 = v0;
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10011EC48(v2, (uint64_t)qword_10032CBE8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Did tap reveal button", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC13InCallService35PHContactWallpaperSensitiveBlurView_didTapRevealButton);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    sub_100142E2C((uint64_t)v6);
  }
}

void sub_1001848F4()
{
}

uint64_t type metadata accessor for PHContactWallpaperSensitiveBlurView()
{
  return self;
}

uint64_t sub_1001849C8(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_100184A88()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100184AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100184AD0()
{
  return swift_release();
}

BOOL sub_100184AD8()
{
  id v0 = [self _carScreen];
  id v1 = v0;
  if (v0) {

  }
  return v1 != 0;
}

id sub_100184B28()
{
  id v0 = [self defaultPIPController];
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  id v2 = [v0 isPIPProxyInterrupted];

  return v2;
}

void *sub_100184B8C()
{
  id v0 = [self sharedInstance];
  id v1 = TUCallCenter.activeVideoCall.getter();

  return v1;
}

id sub_100184C04()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 videoDeviceController];

  id v2 = [v1 isPreviewRunning];
  return v2;
}

id sub_100184C7C()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() predicateMatchingBundleIdentifier:v0];

  return v1;
}

objc_class *sub_100184CE0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100123340(0, (unint64_t *)&qword_100321370);
  id v1 = (void *)static OS_dispatch_queue.main.getter();
  id v2 = objc_allocWithZone(ObjectType);
  unint64_t v3 = sub_100184DCC(v1);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

objc_class *sub_100184DCC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_10011EB3C(&qword_100323490);
  sub_100122300();
  uint64_t v74 = v3;
  uint64_t v75 = v4;
  __chkstk_darwin(v3, v5);
  sub_100138CB8();
  uint64_t v73 = v6;
  uint64_t v7 = sub_10011EB3C(&qword_100323498);
  __chkstk_darwin(v7 - 8, v8);
  sub_100138CB8();
  uint64_t v78 = v9;
  sub_10011EB3C(&qword_1003234A0);
  sub_100122300();
  uint64_t v69 = v10;
  uint64_t v70 = v11;
  __chkstk_darwin(v10, v12);
  sub_100138CB8();
  uint64_t v66 = v13;
  sub_10011EB3C(&qword_1003234A8);
  sub_100122300();
  uint64_t v71 = v14;
  uint64_t v72 = v15;
  __chkstk_darwin(v14, v16);
  sub_100138CB8();
  uint64_t v67 = v17;
  uint64_t v18 = type metadata accessor for NSNotificationCenter.Publisher();
  sub_100122300();
  uint64_t v20 = v19;
  uint64_t v65 = v19;
  uint64_t v23 = __chkstk_darwin(v21, v22);
  id v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v23, v26);
  uint64_t v29 = (char *)&v61 - v28;
  uint64_t v31 = __chkstk_darwin(v27, v30);
  char v77 = (char *)&v61 - v32;
  __chkstk_darwin(v31, v33);
  id v35 = (char *)&v61 - v34;
  id v36 = (BOOL (**)())&v1[OBJC_IVAR___ICSCameraStateMonitor_viewState];
  void *v36 = sub_100184AD8;
  v36[1] = 0;
  uint64_t v36[2] = (BOOL (*)())UniqueAddress.init();
  v36[3] = 0;
  v36[4] = (BOOL (*)())UniqueAddress.init();
  v36[5] = 0;
  v36[6] = (BOOL (*)())UniqueAddress.init();
  v36[7] = 0;
  v36[8] = (BOOL (*)())sub_100184B28;
  v36[9] = 0;
  uint64_t v37 = (void *(**)())&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall];
  void *v37 = sub_100184B8C;
  v37[1] = 0;
  id v38 = (id (**)())&v1[OBJC_IVAR___ICSCameraStateMonitor_isPreviewRunning];
  *id v38 = sub_100184C04;
  v38[1] = 0;
  uint64_t v39 = OBJC_IVAR___ICSCameraStateMonitor_faceTimeProcessPredicate;
  sub_100123340(0, &qword_1003234B0);
  uint64_t v40 = v1;
  *(void *)&v1[v39] = sub_100184C7C();
  *(void *)&v40[OBJC_IVAR___ICSCameraStateMonitor_subscriptions] = &_swiftEmptySetSingleton;
  unint64_t v41 = &v40[OBJC_IVAR___ICSCameraStateMonitor_timerState];
  *(_OWORD *)unint64_t v41 = 0u;
  *((_OWORD *)v41 + 1) = 0u;
  *((void *)v41 + 4) = 0;
  uint64_t v42 = (uint64_t)&v40[OBJC_IVAR___ICSCameraStateMonitor_state];
  uint64_t v43 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  sub_10011EB80(v42, 1, 2, v43);
  *(void *)&v40[OBJC_IVAR___ICSCameraStateMonitor_queue] = a1;
  id v44 = a1;
  id v64 = v44;

  v80.receiver = v40;
  v80.super_class = ObjectType;
  id v45 = [super init];
  Swift::String v46 = self;
  uint64_t ObjectType = (objc_class *)v45;
  id v47 = [v46 defaultCenter];
  uint64_t v68 = v35;
  NSNotificationCenter.publisher(for:object:)();

  id v48 = [v46 defaultCenter];
  Swift::String v49 = v77;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v63 = v29;
  v50(v29, v35, v18);
  v50(v25, v49, v18);
  sub_100189BC4((unint64_t *)&qword_100325BF0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  Publishers.Merge.init(_:_:)();
  id v79 = v44;
  uint64_t v62 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v51 = v78;
  sub_10011EB80(v78, 1, 1, v62);
  uint64_t v61 = sub_100123340(0, (unint64_t *)&qword_100321370);
  sub_100122B20(&qword_1003234B8, &qword_1003234A0);
  sub_100187EAC();
  Publisher.receive<A>(on:options:)();
  sub_100189CFC(v51, &qword_100323498);
  sub_100138D8C();
  v52();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100122B20(&qword_1003234C8, &qword_1003234A8);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  sub_100138D8C();
  v53();
  sub_100189E34();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v54 = [v46 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v55 = v64;
  id v79 = v64;
  uint64_t v56 = v78;
  sub_10011EB80(v78, 1, 1, v62);
  Publisher.receive<A>(on:options:)();
  sub_100189CFC(v56, &qword_100323498);
  Swift::String v57 = *(void (**)(void))(v65 + 8);
  sub_100189E24();
  v57();
  swift_allocObject();
  Swift::String v58 = ObjectType;
  swift_unknownObjectWeakInit();
  sub_100122B20(&qword_1003234D0, &qword_100323490);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  sub_100138D8C();
  v59();
  sub_100189E34();
  AnyCancellable.store(in:)();
  swift_endAccess();

  swift_release();
  sub_100189E24();
  v57();
  sub_100189E24();
  v57();
  return v58;
}

void sub_1001855C8()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for CameraStateMonitor.State(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10011EB3C(&qword_100323498);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v74 = (uint64_t)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10011EB3C(&qword_1003234D8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10011EB3C(&qword_1003234E0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (void *)((char *)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)&v1[OBJC_IVAR___ICSCameraStateMonitor_queue];
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v18);
  id v73 = v23;
  uint64_t v24 = _dispatchPreconditionTest(_:)();
  uint64_t v26 = *(void (**)(void *, uint64_t))(v19 + 8);
  uint64_t v25 = v19 + 8;
  v26(v22, v18);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once();
LABEL_11:
    uint64_t v39 = type metadata accessor for Logger();
    sub_10011EC48(v39, (uint64_t)qword_10032CC68);
    swift_unknownObjectRetain_n();
    uint64_t v40 = v1;
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      if (v24)
      {
        v79[0] = v24;
        v79[1] = v14;
        v79[2] = v25;
        objc_super v80 = v17;
        swift_unknownObjectRetain();
        sub_10011EB3C(&qword_1003234E8);
        uint64_t v44 = String.init<A>(reflecting:)();
        unint64_t v46 = v45;
      }
      else
      {
        unint64_t v46 = 0xE300000000000000;
        uint64_t v44 = 7104878;
      }
      v79[0] = sub_1001412B0(v44, v46, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_100189AF0(v18, (uint64_t)v79);
      uint64_t v64 = sub_1001DC304((uint64_t)v79);
      unint64_t v66 = v65;
      sub_100189CFC((uint64_t)v79, &qword_100325A20);
      v79[0] = sub_1001412B0(v64, v66, (uint64_t *)&v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Call status changed for call: %s, but timer state does not need to be changed (timerState: %s).", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return;
  }
  uint64_t v71 = v17;
  uint64_t v72 = v14;
  uint64_t v27 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall];
  uint64_t v28 = swift_retain();
  uint64_t v24 = v27(v28);
  uint64_t v14 = v29;
  uint64_t v25 = v30;
  uint64_t v17 = v31;
  swift_release();
  uint64_t v18 = (uint64_t)&v1[OBJC_IVAR___ICSCameraStateMonitor_timerState];
  swift_beginAccess();
  sub_100189AF0(v18, (uint64_t)v79);
  uint64_t v81 = v24;
  uint64_t v82 = v14;
  uint64_t v83 = v25;
  uint64_t v84 = v17;
  if (v80)
  {
    if (v24)
    {
      sub_100129FFC((uint64_t)v79);
      goto LABEL_10;
    }
    if (qword_100320570 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_10011EC48(v47, (uint64_t)qword_10032CC68);
    id v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Video call is no longer active, unsubscribing from camera state changes.", v50, 2u);
      swift_slowDealloc();
    }

    uint64_t v51 = type metadata accessor for CameraStateMonitor.Snapshot(0);
    sub_10011EB80((uint64_t)v5, 1, 2, v51);
    uint64_t v52 = (uint64_t)&v1[OBJC_IVAR___ICSCameraStateMonitor_state];
    swift_beginAccess();
    sub_100189B28((uint64_t)v5, v52);
    swift_endAccess();
    uint64_t v78 = 0;
    long long v76 = 0u;
    long long v77 = 0u;
    swift_beginAccess();
    sub_100189B8C((uint64_t)&v76, v18);
    swift_endAccess();
    sub_100129FFC((uint64_t)v79);
  }
  else
  {
    if (!v24)
    {
LABEL_10:
      if (qword_100320570 == -1) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
    if (qword_100320570 != -1) {
      swift_once();
    }
    uint64_t v70 = v13;
    uint64_t v32 = type metadata accessor for Logger();
    sub_10011EC48(v32, (uint64_t)qword_10032CC68);
    swift_unknownObjectRetain_n();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      id v36 = (void *)swift_slowAlloc();
      uint64_t v69 = v36;
      uint64_t v68 = v35;
      *(_DWORD *)id v35 = 136315138;
      v75[0] = v36;
      v67[1] = v35 + 4;
      *(void *)&long long v76 = v24;
      *((void *)&v76 + 1) = v14;
      *(void *)&long long v77 = v25;
      *((void *)&v77 + 1) = v17;
      swift_unknownObjectRetain();
      sub_10011EB3C(&qword_1003234E8);
      uint64_t v37 = String.init<A>(reflecting:)();
      *(void *)&long long v76 = sub_1001412B0(v37, v38, (uint64_t *)v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Call status changed for call: %s, starting timer to poll for camera state changes.", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    sub_100123340(0, &qword_1003234F0);
    id v53 = [self mainRunLoop];
    uint64_t v54 = type metadata accessor for NSRunLoop.SchedulerOptions();
    sub_10011EB80((uint64_t)v12, 1, 1, v54);
    uint64_t v55 = static NSTimer.publish(every:tolerance:on:in:options:)();

    sub_100189CFC((uint64_t)v12, &qword_1003234D8);
    *(void *)&long long v76 = v55;
    type metadata accessor for NSTimer.TimerPublisher();
    sub_100189BC4(&qword_1003234F8, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
    uint64_t v56 = ConnectablePublisher.autoconnect()();
    swift_release();
    *(void *)&long long v76 = v56;
    Swift::String v57 = v73;
    v75[0] = v73;
    uint64_t v58 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v59 = v74;
    sub_10011EB80(v74, 1, 1, v58);
    id v60 = v57;
    sub_10011EB3C(&qword_100323500);
    sub_100123340(0, (unint64_t *)&qword_100321370);
    sub_100122B20(&qword_100323508, &qword_100323500);
    sub_100187EAC();
    uint64_t v61 = v71;
    Publisher.receive<A>(on:options:)();
    sub_100189CFC(v59, &qword_100323498);

    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100122B20(&qword_100323510, &qword_1003234E0);
    uint64_t v62 = v70;
    uint64_t v63 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v61, v62);
    *((void *)&v77 + 1) = type metadata accessor for AnyCancellable();
    uint64_t v78 = &protocol witness table for AnyCancellable;
    swift_unknownObjectRelease();
    *(void *)&long long v76 = v63;
    swift_beginAccess();
    sub_100189B8C((uint64_t)&v76, v18);
    swift_endAccess();
  }
}

void sub_1001860D4()
{
  id v1 = *(uint64_t (**)(uint64_t))(v0 + OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    swift_getObjectType();
    dispatch thunk of Call.isSendingVideo.setter();
    id v4 = [self sharedInstance];
    id v5 = [v4 videoDeviceController];

    [v5 stopPreview];
    if (qword_100320570 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10011EC48(v6, (uint64_t)qword_10032CC68);
    swift_unknownObjectRetain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = dispatch thunk of Call.uniqueProxyIdentifier.getter();
      sub_1001412B0(v10, v11, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Camera failed for call: %s. Force disabling video...", v9, 0xCu);
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    if (qword_100320570 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10011EC48(v12, (uint64_t)qword_10032CC68);
    oslog = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "Not updating camera state on monitor because we have no active video call.", v14, 2u);
      sub_100120278();
    }
  }
}

uint64_t sub_100186510()
{
  return type metadata accessor for CameraStateMonitor(0);
}

uint64_t type metadata accessor for CameraStateMonitor(uint64_t a1)
{
  return sub_10013EFF0(a1, (uint64_t *)&unk_100323368);
}

uint64_t sub_100186538()
{
  uint64_t result = type metadata accessor for CameraStateMonitor.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CameraStateMonitor.State(uint64_t a1)
{
  return sub_10013EFF0(a1, (uint64_t *)&unk_1003233E8);
}

uint64_t sub_100186648()
{
  return sub_100142F98();
}

uint64_t sub_1001866B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return sub_100189DEC();
}

uint64_t sub_1001866EC()
{
  return sub_100142F98();
}

uint64_t sub_100186758(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  return sub_100189DEC();
}

id sub_100186790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  v8[4] = a3();
  void v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  _DWORD v8[2] = sub_10018CC54;
  _OWORD v8[3] = a4;
  uint64_t v6 = _Block_copy(v8);
  swift_release();

  return v6;
}

uint64_t sub_10018682C()
{
  return sub_100142F98();
}

void sub_100186898(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);
}

uint64_t destroy for CameraStateMonitor.TimerState(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return sub_100129FFC(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for CameraStateMonitor.TimerState(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for CameraStateMonitor.TimerState(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_100129FFC(a1);
    goto LABEL_7;
  }
  sub_100186A80((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *sub_100186A80(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for CameraStateMonitor.TimerState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    sub_100129FFC(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraStateMonitor.TimerState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CameraStateMonitor.TimerState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_100186DAC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_100186DC4(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraStateMonitor.TimerState()
{
  return &type metadata for CameraStateMonitor.TimerState;
}

uint64_t destroy for CameraStateMonitor.ViewState()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CameraStateMonitor.ViewState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CameraStateMonitor.ViewState(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for CameraStateMonitor.ViewState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

_OWORD *assignWithTake for CameraStateMonitor.ViewState(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraStateMonitor.ViewState(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraStateMonitor.ViewState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraStateMonitor.ViewState()
{
  return &type metadata for CameraStateMonitor.ViewState;
}

uint64_t *sub_1001870BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for CameraStateMonitor.Snapshot(0);
    if (sub_100120F20((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
      *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
      sub_10011EB80((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for CameraStateMonitor.Snapshot(uint64_t a1)
{
  return sub_10013EFF0(a1, qword_100323450);
}

uint64_t sub_1001871F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  uint64_t result = sub_100120F20(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Date();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_100187284(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  if (sub_100120F20((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    *((unsigned char *)a1 + *(int *)(v6 + 24)) = *((unsigned char *)a2 + *(int *)(v6 + 24));
    sub_10011EB80((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

unsigned char *sub_100187364(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  int v7 = sub_100120F20((uint64_t)a1, 2, v6);
  int v8 = sub_100120F20((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      return a1;
    }
    sub_100189D7C((uint64_t)a1, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  sub_10011EB80((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_1001874DC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  if (sub_100120F20((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    *((unsigned char *)a1 + *(int *)(v6 + 24)) = *((unsigned char *)a2 + *(int *)(v6 + 24));
    sub_10011EB80((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

unsigned char *sub_1001875BC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  int v7 = sub_100120F20((uint64_t)a1, 2, v6);
  int v8 = sub_100120F20((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      return a1;
    }
    sub_100189D7C((uint64_t)a1, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  a1[*(int *)(v6 + 20)] = a2[*(int *)(v6 + 20)];
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  sub_10011EB80((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_100187734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100187748);
}

uint64_t sub_100187748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  unsigned int v5 = sub_100120F20(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_100187790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001877A4);
}

uint64_t sub_1001877A4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for CameraStateMonitor.Snapshot(0);

  return sub_10011EB80(a1, v5, a3, v6);
}

uint64_t sub_100187804(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CameraStateMonitor.Snapshot(0);

  return sub_100120F20(a1, 2, v2);
}

uint64_t sub_100187848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CameraStateMonitor.Snapshot(0);

  return sub_10011EB80(a1, a2, 2, v4);
}

uint64_t sub_100187894()
{
  uint64_t result = type metadata accessor for CameraStateMonitor.Snapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_10018790C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1001879E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100187A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100187AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100187B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100187BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100187C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100187C6C);
}

uint64_t sub_100187C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100189DF4();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_100120F20(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100187D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100187D1C);
}

void sub_100187D1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100189DF4();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_10011EB80(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t sub_100187DA4()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100187E3C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100187E74()
{
  return sub_1001D3284(*(void *)(v0 + 16));
}

uint64_t sub_100187E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___ICSCameraStateMonitor_viewState;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a2;
  return sub_100189DEC();
}

uint64_t sub_100187E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100187EA4()
{
  return swift_release();
}

unint64_t sub_100187EAC()
{
  unint64_t result = qword_1003234C0;
  if (!qword_1003234C0)
  {
    sub_100123340(255, (unint64_t *)&qword_100321370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003234C0);
  }
  return result;
}

uint64_t sub_100187F0C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100187F44(uint64_t a1)
{
  sub_100187FA4(a1, v1, sub_1001855C8);
}

void sub_100187F74(uint64_t a1)
{
  sub_100187FA4(a1, v1, sub_1001860D4);
}

void sub_100187FA4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v5 = (void *)Strong;
    a3();
  }
}

void sub_100188000()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10011EB3C(&qword_100323518);
  __chkstk_darwin(v2 - 8, v3);
  int v5 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CameraStateMonitor.State(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v159 = (uint64_t)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  char v162 = (char *)&v147 - v11;
  uint64_t v12 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  uint64_t v14 = __chkstk_darwin(v12, v13);
  uint64_t v157 = (uint64_t)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v153 = (uint64_t)&v147 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v149 = (uint64_t)&v147 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v25 = (char *)&v147 - v24;
  uint64_t v27 = __chkstk_darwin(v23, v26);
  id v163 = (char *)&v147 - v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v32 = (char *)&v147 - v31;
  uint64_t v34 = __chkstk_darwin(v30, v33);
  uint64_t v151 = (uint64_t)&v147 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v152 = (uint64_t)&v147 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v164 = (uint64_t)&v147 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v158 = (uint64_t)&v147 - v44;
  __chkstk_darwin(v43, v45);
  uint64_t v47 = (char *)&v147 - v46;
  uint64_t v48 = type metadata accessor for DispatchPredicate();
  uint64_t v49 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v50);
  uint64_t v52 = (char *)&v147 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v53 = *(void **)(v1 + OBJC_IVAR___ICSCameraStateMonitor_queue);
  *(void *)uint64_t v52 = v53;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v52, enum case for DispatchPredicate.onQueue(_:), v48);
  id v54 = v53;
  int v55 = _dispatchPreconditionTest(_:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v48);
  if ((v55 & 1) == 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v161 = (uint64_t)v25;
  uint64_t v150 = v32;
  uint64_t v56 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall);
  uint64_t v57 = swift_retain();
  uint64_t v32 = (char *)v56(v57);
  swift_release();
  if (v32)
  {
    double v148 = v5;
    sub_10011EB3C(&qword_100323520);
    uint64_t v52 = (char *)swift_allocObject();
    *((_OWORD *)v52 + 1) = xmmword_100287F50;
    uint64_t v58 = (void *)(v1 + OBJC_IVAR___ICSCameraStateMonitor_viewState);
    uint64_t v59 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_viewState);
    uint64_t v60 = swift_retain();
    LOBYTE(v59) = v59(v60);
    swift_release();
    v52[32] = v59 & 1;
    uint64_t v61 = (uint64_t (*)(uint64_t))v58[2];
    uint64_t v62 = swift_retain();
    LOBYTE(v61) = v61(v62);
    swift_release();
    v52[33] = v61 & 1;
    uint64_t v63 = (uint64_t (*)(uint64_t))v58[4];
    uint64_t v64 = swift_retain();
    LOBYTE(v63) = v63(v64);
    swift_release();
    v52[34] = v63 & 1;
    unint64_t v65 = (uint64_t (*)(uint64_t))v58[6];
    uint64_t v66 = swift_retain();
    LOBYTE(v65) = v65(v66);
    swift_release();
    v52[35] = v65 & 1;
    uint64_t v67 = (uint64_t (*)(uint64_t))v58[8];
    uint64_t v68 = swift_retain();
    LOBYTE(v67) = v67(v68);
    swift_release();
    v52[36] = v67 & 1;
    int v55 = sub_1001D30F0(1, (uint64_t)v52);
    swift_getObjectType();
    char v69 = dispatch thunk of Call.isSendingVideo.getter();
    uint64_t v156 = v1;
    if ((v69 & 1) != 0
      && (uint64_t v70 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_isPreviewRunning),
          uint64_t v71 = swift_retain(),
          LOBYTE(v70) = v70(v71),
          swift_release(),
          (v70 & 1) != 0))
    {
      LODWORD(v1) = !sub_10018930C();
    }
    else
    {
      LOBYTE(v1) = 0;
    }
    if (qword_100320570 == -1)
    {
LABEL_8:
      int v160 = v55 ^ 1;
      uint64_t v72 = type metadata accessor for Logger();
      uint64_t v73 = sub_10011EC48(v72, (uint64_t)qword_10032CC68);
      swift_bridgeObjectRetain();
      uint64_t v74 = Logger.logObject.getter();
      os_log_type_t v75 = static os_log_type_t.debug.getter();
      BOOL v76 = os_log_type_enabled(v74, v75);
      uint64_t v77 = (uint64_t)v162;
      uint64_t v154 = v32;
      char v155 = v47;
      if (v76)
      {
        uint64_t v78 = swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        uint64_t v147 = v73;
        v167[0] = v79;
        *(_DWORD *)uint64_t v78 = 136315650;
        v166[0] = (uint64_t)v52;
        swift_bridgeObjectRetain();
        sub_10011EB3C(&qword_100323528);
        uint64_t v80 = String.init<A>(reflecting:)();
        v166[0] = sub_1001412B0(v80, v81, v167);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 1024;
        LODWORD(v166[0]) = v160 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v78 + 18) = 1024;
        LODWORD(v166[0]) = v1 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "Camera state timer fired. Calculated current view state to be: %s (isViewForCameraVisible: %{BOOL}d, isSendingVideo: %{BOOL}d)", (uint8_t *)v78, 0x18u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v47 = v155;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v86 = (uint64_t)v163;
      Date.init()();
      v47[*(int *)(v12 + 20)] = v1 & 1;
      v47[*(int *)(v12 + 24)] = v160 & 1;
      uint64_t v87 = v156 + OBJC_IVAR___ICSCameraStateMonitor_state;
      swift_beginAccess();
      sub_100189C3C(v87, v77, (void (*)(void))type metadata accessor for CameraStateMonitor.State);
      int v88 = sub_100120F20(v77, 2, v12);
      uint64_t v89 = v161;
      if (v88)
      {
        if (v88 != 1)
        {
          uint64_t v111 = v153;
          sub_100189C3C((uint64_t)v47, v153, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          if (v1)
          {
            char v112 = *(unsigned char *)(v111 + *(int *)(v12 + 24));
            sub_100189D7C(v111, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
            uint64_t v113 = v157;
            if ((v112 & 1) == 0)
            {
              sub_100189D7C((uint64_t)v47, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
              swift_unknownObjectRelease();
              return;
            }
          }
          else
          {
            sub_100189D7C(v111, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
            uint64_t v113 = v157;
          }
          sub_100189C3C((uint64_t)v47, v113, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          unint64_t v91 = Logger.logObject.getter();
          os_log_type_t v92 = static os_log_type_t.debug.getter();
          if (!os_log_type_enabled(v91, v92))
          {
            swift_unknownObjectRelease();
            sub_100189D7C(v113, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
            goto LABEL_43;
          }
          Swift::String v93 = (uint8_t *)swift_slowAlloc();
          uint64_t v131 = swift_slowAlloc();
          id v163 = (char *)v87;
          v166[0] = v131;
          *(_DWORD *)Swift::String v93 = 136315138;
          uint64_t v132 = (uint64_t)v148;
          sub_100189C3C(v113, (uint64_t)v148, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          sub_10011EB80(v132, 0, 1, v12);
          uint64_t v133 = sub_1001DC390(v132);
          uint64_t v134 = v12;
          unint64_t v136 = v135;
          sub_100189CFC(v132, &qword_100323518);
          uint64_t v165 = sub_1001412B0(v133, v136, v166);
          uint64_t v47 = v155;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v12 = v134;
          swift_bridgeObjectRelease();
          sub_100189D7C(v157, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          uint64_t v100 = "View state changed from inconsistent state -> %s.";
LABEL_38:
          _os_log_impl((void *)&_mh_execute_header, v91, v92, v100, v93, 0xCu);
          swift_arrayDestroy();
          uint64_t v87 = (uint64_t)v163;
          swift_slowDealloc();
          swift_slowDealloc();
          swift_unknownObjectRelease();
LABEL_43:

          goto LABEL_44;
        }
        uint64_t v90 = v158;
        sub_100189C3C((uint64_t)v47, v158, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        unint64_t v91 = Logger.logObject.getter();
        os_log_type_t v92 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v91, v92))
        {
          Swift::String v93 = (uint8_t *)swift_slowAlloc();
          uint64_t v94 = swift_slowAlloc();
          id v163 = (char *)v87;
          v166[0] = v94;
          *(_DWORD *)Swift::String v93 = 136315138;
          uint64_t v95 = (uint64_t)v148;
          sub_100189C3C(v90, (uint64_t)v148, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          sub_10011EB80(v95, 0, 1, v12);
          uint64_t v96 = sub_1001DC390(v95);
          uint64_t v97 = v12;
          unint64_t v99 = v98;
          sub_100189CFC(v95, &qword_100323518);
          uint64_t v165 = sub_1001412B0(v96, v99, v166);
          uint64_t v47 = v155;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v12 = v97;
          swift_bridgeObjectRelease();
          sub_100189D7C(v158, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          uint64_t v100 = "Changing state from unknown to %s.";
          goto LABEL_38;
        }
        sub_100189D7C(v90, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);

        swift_unknownObjectRelease();
LABEL_44:
        uint64_t v138 = v159;
        sub_100189C98((uint64_t)v47, v159);
        sub_10011EB80(v138, 0, 2, v12);
        swift_beginAccess();
        sub_100189B28(v138, v87);
        swift_endAccess();
        return;
      }
      sub_100189C98(v77, v164);
      uint64_t v101 = v152;
      sub_100189C3C((uint64_t)v47, v152, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
      if (v1)
      {
        uint64_t v102 = v101;
        char v103 = *(unsigned char *)(v101 + *(int *)(v12 + 24));
        sub_100189D7C(v102, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        if ((v103 & 1) == 0)
        {
          uint64_t v104 = *(int *)(v12 + 20);
          int v105 = *(unsigned __int8 *)(v164 + v104);
          sub_100189C3C(v164, v86, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          if (v105 == 1)
          {
            char v106 = *(unsigned char *)(v86 + *(int *)(v12 + 24));
            sub_100189D7C(v86, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
            if ((v106 & 1) == 0)
            {
              int v107 = *(unsigned __int8 *)(v164 + v104);
              uint64_t v108 = v149;
              sub_100189C3C(v164, v149, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
              if (v107 == 1)
              {
                char v109 = *(unsigned char *)(v108 + *(int *)(v12 + 24));
                sub_100189D7C(v108, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
                if ((v109 & 1) == 0)
                {
                  Date.timeIntervalSince(_:)();
                  if (v110 > 3.0) {
                    sub_1001893EC();
                  }
                }
              }
              else
              {
                sub_100189D7C(v108, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
              }
              swift_unknownObjectRelease();
              sub_100189D7C(v164, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
              sub_100189D7C((uint64_t)v47, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
              return;
            }
          }
          else
          {
            sub_100189D7C(v86, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          }
          sub_100189C3C(v164, v89, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
          uint64_t v139 = Logger.logObject.getter();
          os_log_type_t v140 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v139, v140))
          {
            uint64_t v141 = swift_slowAlloc();
            uint64_t v142 = swift_slowAlloc();
            id v163 = (char *)v87;
            v166[0] = v142;
            *(_DWORD *)uint64_t v141 = 136315394;
            uint64_t v143 = (uint64_t)v148;
            sub_100189C3C(v89, (uint64_t)v148, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
            sub_10011EB80(v143, 0, 1, v12);
            uint64_t v144 = sub_1001DC390(v143);
            unint64_t v146 = v145;
            sub_100189CFC(v143, &qword_100323518);
            uint64_t v165 = sub_1001412B0(v144, v146, v166);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100189D7C(v89, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
            *(_WORD *)(v141 + 12) = 2048;
            uint64_t v165 = 0x4008000000000000;
            uint64_t v47 = v155;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v139, v140, "We detected an inconsistent view state %s -> inconsistent state. Will hold for %f seconds before we take action.", (uint8_t *)v141, 0x16u);
            swift_arrayDestroy();
            uint64_t v87 = (uint64_t)v163;
            swift_slowDealloc();
            swift_slowDealloc();
            swift_unknownObjectRelease();

            uint64_t v130 = v164;
            goto LABEL_41;
          }
          swift_unknownObjectRelease();

          uint64_t v137 = v89;
          goto LABEL_40;
        }
      }
      else
      {
        sub_100189D7C(v101, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
      }
      uint64_t v114 = v151;
      sub_100189C3C(v164, v151, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
      uint64_t v115 = (uint64_t)v150;
      sub_100189C3C((uint64_t)v47, (uint64_t)v150, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
      id v116 = Logger.logObject.getter();
      os_log_type_t v117 = static os_log_type_t.debug.getter();
      int v118 = v117;
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v119 = swift_slowAlloc();
        LODWORD(v162) = v118;
        uint64_t v120 = v119;
        uint64_t v161 = swift_slowAlloc();
        v166[0] = v161;
        *(_DWORD *)uint64_t v120 = 136315394;
        id v163 = (char *)v87;
        uint64_t v121 = (uint64_t)v148;
        sub_100189C3C(v114, (uint64_t)v148, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        sub_10011EB80(v121, 0, 1, v12);
        uint64_t v122 = v12;
        uint64_t v123 = sub_1001DC390(v121);
        unint64_t v125 = v124;
        sub_100189CFC(v121, &qword_100323518);
        uint64_t v165 = sub_1001412B0(v123, v125, v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100189D7C(v114, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        *(_WORD *)(v120 + 12) = 2080;
        sub_100189C3C(v115, v121, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        sub_10011EB80(v121, 0, 1, v122);
        uint64_t v126 = sub_1001DC390(v121);
        unint64_t v128 = v127;
        sub_100189CFC(v121, &qword_100323518);
        uint64_t v129 = v126;
        uint64_t v47 = v155;
        uint64_t v165 = sub_1001412B0(v129, v128, v166);
        uint64_t v12 = v122;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100189D7C(v115, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v162, "View state changed from %s -> %s.", (uint8_t *)v120, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();

        uint64_t v87 = (uint64_t)v163;
        uint64_t v130 = v164;
LABEL_41:
        sub_100189D7C(v130, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
        goto LABEL_44;
      }
      swift_unknownObjectRelease();

      sub_100189D7C(v115, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
      uint64_t v137 = v114;
LABEL_40:
      sub_100189D7C(v137, (void (*)(void))type metadata accessor for CameraStateMonitor.Snapshot);
      uint64_t v130 = v164;
      goto LABEL_41;
    }
LABEL_52:
    swift_once();
    goto LABEL_8;
  }
  if (qword_100320570 != -1) {
    swift_once();
  }
  uint64_t v82 = type metadata accessor for Logger();
  sub_10011EC48(v82, (uint64_t)qword_10032CC68);
  uint64_t v83 = Logger.logObject.getter();
  os_log_type_t v84 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v85 = 0;
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "Not updating camera state on monitor because we have no active video call.", v85, 2u);
    swift_slowDealloc();
  }
}

BOOL sub_10018930C()
{
  sub_100123340(0, &qword_100323530);
  id v1 = [self predicateMatching:*(void *)(v0 + OBJC_IVAR___ICSCameraStateMonitor_faceTimeProcessPredicate)];
  id v2 = sub_100189A1C(v1);
  id v3 = [v2 currentState];
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned int v5 = [v3 taskState];

    return v5 == 4;
  }
  else
  {

    return 0;
  }
}

void sub_1001893EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CameraStateMonitor.State(0);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v51[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  sub_100122300();
  uint64_t v8 = v7;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (uint64_t *)((char *)&v51[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR___ICSCameraStateMonitor_queue);
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v6);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v15 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  sub_10011EB80((uint64_t)v5, 2, 2, v15);
  swift_beginAccess();
  uint64_t v16 = sub_100142F98();
  sub_100189B28(v16, v17);
  swift_endAccess();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_activeVideoCall);
  uint64_t v19 = swift_retain();
  uint64_t v20 = v18(v19);
  swift_release();
  if (v20)
  {
    swift_getObjectType();
    dispatch thunk of Call.isSendingVideo.setter();
    id v21 = [self sharedInstance];
    id v22 = [v21 videoDeviceController];

    [v22 stopPreview];
    if (qword_100320570 == -1)
    {
LABEL_4:
      uint64_t v23 = type metadata accessor for Logger();
      sub_10011EC48(v23, (uint64_t)qword_10032CC68);
      swift_unknownObjectRetain_n();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 134218242;
        uint64_t v50 = 0x4008000000000000;
        v51[0] = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v28 = dispatch thunk of Call.uniqueProxyIdentifier.getter();
        uint64_t v50 = sub_1001412B0(v28, v29, v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "View state was hidden with camera active for %f seconds for call: %s. Force disabling video...", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        sub_100120278();
        sub_100120278();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      uint64_t v34 = self;
      v51[0] = 0;
      v51[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(82);
      v35._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v35._object = (void *)0x8000000100238130;
      String.append(_:)(v35);
      Double.write<A>(to:)();
      v36._object = (void *)0x8000000100238160;
      v36._uint64_t countAndFlagsBits = 0xD000000000000021;
      String.append(_:)(v36);
      sub_10011EB3C(&qword_100323520);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_100287F50;
      uint64_t v38 = (void *)(v1 + OBJC_IVAR___ICSCameraStateMonitor_viewState);
      uint64_t v39 = *(void (**)(uint64_t))(v1 + OBJC_IVAR___ICSCameraStateMonitor_viewState);
      uint64_t v40 = swift_retain();
      v39(v40);
      sub_100189E0C();
      *(unsigned char *)(v37 + 32) = v39 & 1;
      uint64_t v41 = (void (*)(uint64_t))v38[2];
      uint64_t v42 = swift_retain();
      v41(v42);
      sub_100189E0C();
      *(unsigned char *)(v37 + 33) = v41 & 1;
      uint64_t v43 = (void (*)(uint64_t))v38[4];
      uint64_t v44 = swift_retain();
      v43(v44);
      sub_100189E0C();
      *(unsigned char *)(v37 + 34) = v43 & 1;
      uint64_t v45 = (void (*)(uint64_t))v38[6];
      uint64_t v46 = swift_retain();
      v45(v46);
      sub_100189E0C();
      *(unsigned char *)(v37 + 35) = v45 & 1;
      uint64_t v47 = (void (*)(uint64_t))v38[8];
      uint64_t v48 = swift_retain();
      v47(v48);
      sub_100189E0C();
      *(unsigned char *)(v37 + 36) = v47 & 1;
      uint64_t v50 = v37;
      sub_10011EB3C(&qword_100323528);
      v49._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v49);
      swift_bridgeObjectRelease();
      uint64_t v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v34 simulateCrashReportWithReason:v31 pid:getpid() code:3735931409];
      swift_unknownObjectRelease();
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_100320570 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10011EC48(v30, (uint64_t)qword_10032CC68);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Not updating camera state on monitor because we have no active video call.", v33, 2u);
    sub_100120278();
  }
LABEL_12:
}

id sub_100189A1C(void *a1)
{
  id v6 = 0;
  id v2 = [(id)swift_getObjCClassFromMetadata() handleForPredicate:a1 error:&v6];
  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v2;
}

uint64_t sub_100189AF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100189B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CameraStateMonitor.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100189B8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100189BC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100189C0C(uint64_t a1)
{
  sub_100187FA4(a1, v1, sub_100188000);
}

uint64_t sub_100189C3C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10013FC1C();
  uint64_t v4 = sub_100142F98();
  v5(v4);
  return a2;
}

uint64_t sub_100189C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CameraStateMonitor.Snapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100189CFC(uint64_t a1, uint64_t *a2)
{
  sub_10011EB3C(a2);
  sub_10013FC1C();
  sub_100138D8C();
  v3();
  return a1;
}

uint64_t sub_100189D4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100189D7C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10013FC1C();
  sub_100138D8C();
  v3();
  return a1;
}

uint64_t sub_100189DEC()
{
  return swift_release();
}

uint64_t sub_100189E0C()
{
  return swift_release();
}

uint64_t sub_100189E34()
{
  return swift_beginAccess();
}

uint64_t sub_100189E54()
{
  uint64_t v0 = type metadata accessor for ObjectTracker.Tracker();
  sub_100123658(v0, qword_100323538);
  sub_10011EC48(v0, (uint64_t)qword_100323538);
  type metadata accessor for ObjectTracker();
  static ObjectTracker.shared.getter();
  sub_10018A0F4();
  sub_10011EB3C(&qword_100323550);
  uint64_t v1 = type metadata accessor for ObjectTracker.Rule();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1002862D0;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for ObjectTracker.Rule.exclusive(_:), v1);
  sub_10018A298(v4);
  ObjectTracker.tracker(for:with:)();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10018A01C(uint64_t (*a1)(uint64_t))
{
  if (qword_1003205F8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for ObjectTracker.Tracker();
  sub_10011EC48(v3, (uint64_t)qword_100323538);
  return a1(v1);
}

unint64_t sub_10018A0F4()
{
  unint64_t result = qword_100321940;
  if (!qword_100321940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100321940);
  }
  return result;
}

uint64_t sub_10018A134(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_10011EB3C((uint64_t *)&unk_100323570);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  while (v5 < *(void *)(a1 + 16))
  {
    Swift::UInt32 v7 = *(_DWORD *)(a1 + 32 + 4 * v5);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v7);
    uint64_t result = Hasher._finalize()();
    uint64_t v8 = -1 << v3[32];
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
    uint64_t v13 = *((void *)v3 + 6);
    if (((1 << v9) & v11) != 0)
    {
      if (*(_DWORD *)(v13 + 4 * v9) == v7) {
        goto LABEL_13;
      }
      uint64_t v14 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v14;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          break;
        }
        if (*(_DWORD *)(v13 + 4 * v9) == v7) {
          goto LABEL_13;
        }
      }
    }
    *(void *)(v6 + 8 * v10) = v12 | v11;
    *(_DWORD *)(v13 + 4 * v9) = v7;
    uint64_t v15 = *((void *)v3 + 2);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_18;
    }
    *((void *)v3 + 2) = v17;
LABEL_13:
    if (++v5 == v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10018A298(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ObjectTracker.Rule();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2, v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v37 = (char *)&v28 - v8;
  if (!*(void *)(a1 + 16))
  {
    unint64_t v10 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_10011EB3C(&qword_100323558);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v10 = (unsigned char *)result;
  uint64_t v32 = *(void *)(a1 + 16);
  if (!v32)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  unint64_t v11 = 0;
  uint64_t v31 = a1 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
  uint64_t v35 = v33 + 16;
  uint64_t v36 = result + 56;
  uint64_t v12 = (void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v29 = a1;
  uint64_t v30 = (uint64_t (**)(unint64_t, char *, uint64_t))(v33 + 32);
  while (v11 < *(void *)(a1 + 16))
  {
    uint64_t v13 = *(void *)(v33 + 72);
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
    v14(v37, v31 + v13 * v11, v2);
    sub_10018A5BC(&qword_100323560);
    uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v16 = -1 << v10[32];
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
    uint64_t v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      unint64_t v34 = v11;
      uint64_t v21 = ~v16;
      while (1)
      {
        v14(v6, *((void *)v10 + 6) + v17 * v13, v2);
        sub_10018A5BC(&qword_100323568);
        char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v23 = *v12;
        (*v12)(v6, v2);
        if (v22) {
          break;
        }
        unint64_t v17 = (v17 + 1) & v21;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
        uint64_t v20 = 1 << v17;
        if ((v19 & (1 << v17)) == 0)
        {
          a1 = v29;
          unint64_t v11 = v34;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v37, v2);
      a1 = v29;
      unint64_t v11 = v34;
    }
    else
    {
LABEL_10:
      uint64_t v24 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (*v30)(*((void *)v10 + 6) + v17 * v13, v24, v2);
      uint64_t v25 = *((void *)v10 + 2);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_18;
      }
      *((void *)v10 + 2) = v27;
    }
    if (++v11 == v32) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10018A5BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ObjectTracker.Rule();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10018A608(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureOverlayWindow();
  [super initWithWindowScene:a1];

  return v3;
}

id sub_10018A680()
{
  v8.receiver = v0;
  v8.super_class = (Class)sub_10018B2B8();
  return sub_10017C9F8((uint64_t)v8.super_class, "initWithFrame:", v1, v2, v3, v4, v5, v6, v8);
}

id sub_10018A6E4(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureOverlayWindow();
  [super initWithCoder:a1];

  return v3;
}

id sub_10018A75C()
{
  v8.receiver = v0;
  v8.super_class = (Class)sub_10018B2B8();
  return sub_10017C9F8((uint64_t)v8.super_class, "initWithContentRect:", v1, v2, v3, v4, v5, v6, v8);
}

id sub_10018A7C0()
{
  return sub_10018B180(type metadata accessor for SecureOverlayWindow);
}

uint64_t type metadata accessor for SecureOverlayWindow()
{
  return self;
}

void *sub_10018A830()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window);
  id v2 = v1;
  return v1;
}

void sub_10018A8BC(uint64_t a1)
{
}

void sub_10018A8C8(uint64_t a1)
{
}

void sub_10018A8D4(id a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  objc_super v8 = (void *)((char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10018B228();
  *objc_super v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  char v9 = _dispatchPreconditionTest(_:)();
  unint64_t v11 = *(void (**)(void *, uint64_t))(v5 + 8);
  id v10 = (id)(v5 + 8);
  v11(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  id v12 = [self sharedApplication];
  id v13 = [v12 delegate];

  if (!v13) {
    return;
  }
  self;
  uint64_t v14 = (void *)swift_dynamicCastObjCClass();
  if (v14)
  {
    id v15 = [v14 sceneManager];
    [v15 registerGenericScene:a1 ofType:2];

    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (!v16)
    {
      if (qword_100320540 != -1) {
        swift_once();
      }
      uint64_t v42 = type metadata accessor for Logger();
      sub_10011EC48(v42, (uint64_t)qword_10032CBE8);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Received a non-UIWindowScene with a compact role - requesting scene dismissal", v45, 2u);
        swift_slowDealloc();
      }
LABEL_32:

      goto LABEL_33;
    }
    uint64_t v17 = v16;
    a1 = a1;
    objc_super v8 = ICSApplicationDelegate.bannerPresentationManager.getter();
    id v18 = [objc_allocWithZone((Class)type metadata accessor for SecureOverlayWindow()) initWithWindowScene:v17];
    sub_10018A8BC((uint64_t)v18);
    uint64_t v19 = OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window;
    uint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window];
    if (v20)
    {
      id v21 = objc_allocWithZone((Class)type metadata accessor for ScreenSharingBroadcasterRootViewController());
      id v22 = v20;
      uint64_t v23 = v8;
      id v24 = sub_10017B880(v8);
      [v22 setRootViewController:v24];

      uint64_t v25 = *(void **)&v2[v19];
      if (v25)
      {
        [v25 setHidden:0];
        BOOL v26 = *(void **)&v2[v19];
        if (v26)
        {
          id v27 = [v26 _bindingLayer];
          [v27 setDisableUpdateMask:32];
        }
      }
    }
    id v28 = [objc_allocWithZone((Class)type metadata accessor for SecureWindow()) initWithWindowScene:v17];
    sub_10018A8C8((uint64_t)v28);
    uint64_t v29 = OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow;
    uint64_t v30 = *(void **)&v2[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow];
    if (v30)
    {
      [v30 setUserInteractionEnabled:0];
      uint64_t v31 = *(void **)&v2[v29];
      if (v31)
      {
        id v32 = [v31 layer];
        [v32 setAllowsHitTesting:0];

        uint64_t v33 = *(void **)&v2[v29];
        if (v33)
        {
          unint64_t v34 = self;
          id v35 = v33;
          id v36 = [v34 clearColor];
          [v35 setBackgroundColor:v36];

          uint64_t v37 = *(void **)&v2[v29];
          if (v37)
          {
            uint64_t v38 = *(void **)&v2[v19];
            if (v38)
            {
              id v39 = v37;
              [v38 windowLevel];
              UIWindowLevel v41 = v40;
            }
            else
            {
              UIWindowLevel v41 = UIWindowLevelNormal;
              id v46 = v37;
            }
            type metadata accessor for Level(0);
            *(UIWindowLevel *)&v54[2] = v41;
            v54[1] = 0x3F50624DD2F1A9FCLL;
            sub_10018B268();
            static _UIKitNumericRawRepresentable.- infix(_:_:)();
            [v37 setWindowLevel:*(double *)&v54[3]];

            uint64_t v47 = *(void **)&v2[v29];
            if (v47) {
              [v47 setHidden:0];
            }
          }
        }
      }
    }
    id v10 = [objc_allocWithZone((Class)CACloningTerminatorLayer) init];
    uint64_t v48 = *(void **)&v2[v29];
    if (v48)
    {
      id v2 = (char *)[v48 layer];
      if (v2)
      {
        while (1)
        {
          id v49 = [v2 superlayer];

          if (!v49) {
            break;
          }
          uint64_t v50 = (char *)[v2 superlayer];

          id v2 = v50;
          if (!v50) {
            goto LABEL_29;
          }
        }
        [v2 addSublayer:v10];
      }
    }
    else
    {
      id v2 = 0;
    }
LABEL_29:
    if (qword_100320540 == -1)
    {
LABEL_30:
      uint64_t v51 = type metadata accessor for Logger();
      sub_10011EC48(v51, (uint64_t)qword_10032CBE8);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v43, v52))
      {

        swift_unknownObjectRelease();
        return;
      }
      id v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v52, "Finished creating new generic scene for ScreenSharingBroadcasterSceneDelegate", v53, 2u);
      swift_slowDealloc();

      goto LABEL_32;
    }
LABEL_37:
    swift_once();
    goto LABEL_30;
  }
LABEL_33:
  swift_unknownObjectRelease();
}

void sub_10018AFD4()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (v1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      sub_10018A8BC(0);
      [v3 dismissScreenSharingBroadcasterSession];
    }
    swift_unknownObjectRelease();
  }
}

id sub_10018B0F8()
{
  *(void *)&v0[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_window] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13InCallService37ScreenSharingBroadcasterSceneDelegate_cloneTerminatingWindow] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterSceneDelegate();
  return [super init];
}

id sub_10018B168()
{
  return sub_10018B180(type metadata accessor for ScreenSharingBroadcasterSceneDelegate);
}

id sub_10018B180(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for ScreenSharingBroadcasterSceneDelegate()
{
  return self;
}

unint64_t sub_10018B228()
{
  unint64_t result = qword_100321370;
  if (!qword_100321370)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100321370);
  }
  return result;
}

unint64_t sub_10018B268()
{
  unint64_t result = qword_1003235E8;
  if (!qword_1003235E8)
  {
    type metadata accessor for Level(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003235E8);
  }
  return result;
}

uint64_t sub_10018B2B8()
{
  return type metadata accessor for SecureOverlayWindow();
}

uint64_t *sub_10018B2D8()
{
  if (qword_100320608 != -1) {
    swift_once();
  }
  return &qword_10032CD48;
}

uint64_t sub_10018B324()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue_serial.Attributes();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8, v8);
  sub_10018B8C0();
  static DispatchQoS.userInteractive.getter();
  v10[1] = _swiftEmptyArrayStorage;
  sub_10018B900(&qword_1003236B8, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue_serial.Attributes);
  sub_10011EB3C(&qword_1003236C0);
  sub_10018B948();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t result = OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_10032CD40 = result;
  return result;
}

uint64_t *sub_10018B558()
{
  if (qword_100320600 != -1) {
    swift_once();
  }
  return &qword_10032CD40;
}

uint64_t sub_10018B5D4()
{
  type metadata accessor for VoicemailActor();
  uint64_t result = swift_initStaticObject();
  qword_10032CD48 = result;
  return result;
}

uint64_t sub_10018B600()
{
  if (qword_100320600 != -1) {
    swift_once();
  }
  return OS_dispatch_queue_serial_executor.asUnownedSerialExecutor()();
}

uint64_t sub_10018B658()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for VoicemailActor()
{
  return self;
}

uint64_t sub_10018B68C()
{
  return sub_10018B600();
}

uint64_t sub_10018B6A4()
{
  sub_10018B2D8();

  return swift_retain();
}

uint64_t sub_10018B6D4()
{
  return static GlobalActor.sharedUnownedExecutor.getter(v0);
}

id sub_10018B6DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoicemailQueueManager();
  return [super init];
}

id sub_10018B734()
{
  if (qword_100320600 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10032CD40;
  qword_10032CD50 = qword_10032CD40;

  return v0;
}

id sub_10018B798()
{
  if (qword_100320610 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10032CD50;

  return v0;
}

id sub_10018B81C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoicemailQueueManager();
  return [super dealloc];
}

uint64_t type metadata accessor for VoicemailQueueManager()
{
  return self;
}

uint64_t sub_10018B878(uint64_t a1, uint64_t a2)
{
  return sub_10018B900(&qword_100320BE0, a2, (void (*)(uint64_t))type metadata accessor for VoicemailActor);
}

unint64_t sub_10018B8C0()
{
  unint64_t result = qword_1003236B0;
  if (!qword_1003236B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1003236B0);
  }
  return result;
}

uint64_t sub_10018B900(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10018B948()
{
  unint64_t result = qword_1003236C8;
  if (!qword_1003236C8)
  {
    sub_1001221B0(&qword_1003236C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003236C8);
  }
  return result;
}

uint64_t sub_10018B9B4()
{
  id v0 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(0x545F454C42414E55, 0xEE004C4C41435F4FLL);
  sub_10018C0E8();
  return sub_10018C0DC();
}

uint64_t sub_10018BA48()
{
  id v0 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(0xD000000000000021, 0x80000001002383A0);
  sub_10018C0E8();
  return sub_10018C0DC();
}

uint64_t sub_10018BAD4()
{
  id v0 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(19279, 0xE200000000000000);
  sub_10018C0E8();
  return sub_10018C0DC();
}

id sub_10018BB50(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_10018BBCC()
{
  id v0 = [self mainBundle];
  sub_100142FA4();
  sub_100142F58(0x4F4D5F4E5241454CLL, 0xEA00000000004552);
  sub_10018C0E8();
  return sub_10018C0DC();
}

void sub_10018BC40()
{
  byte_1003236D0 = 0;
}

uint64_t sub_10018BC64()
{
  uint64_t v0 = sub_10011EB3C(&qword_100324AA0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  byte_1003236D0 = 0;
  URL.init(string:)();
  if (sub_100120F20((uint64_t)v3, 1, v4) == 1) {
    return sub_1001221F8((uint64_t)v3);
  }
  uint64_t v10 = sub_10018C0DC();
  v11(v10);
  URL._bridgeToObjectiveC()(v12);
  uint64_t v14 = v13;
  uint64_t v15 = 0;
  TUOpenURLWithError();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_10018BE58()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (byte_1003236D0)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10011EC48(v3, (uint64_t)qword_10032CBE8);
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "TelephonyUnsuportedAlert is already presented.", v5, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v6 = (objc_class *)ObjectType;
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10011EC48(v7, (uint64_t)qword_10032CBE8);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Presenting TelephonyUnsuportedAlert.", v10, 2u);
      swift_slowDealloc();
    }

    byte_1003236D0 = 1;
    v12.receiver = v1;
    v12.super_class = v6;
    [super show];
  }
}

uint64_t type metadata accessor for TelephonyUnsuportedAlert()
{
  return self;
}

uint64_t sub_10018C0DC()
{
  return v0;
}

void sub_10018C0E8()
{
}

uint64_t sub_10018C100()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100123658(v0, qword_10032CD58);
  sub_10011EC48(v0, (uint64_t)qword_10032CD58);
  return Logger.init(subsystem:category:)();
}

void sub_10018C178(void *a1)
{
  id v2 = [a1 window];
  if (v2)
  {
    uint64_t v3 = v2;
    os_log_type_t v4 = &selRef_allConferenceParticipantCalls;
    [v2 bounds];
    if (qword_100320618 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10011EC48(v5, (uint64_t)qword_10032CD58);
    id v6 = v3;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    uint64_t v159 = v6;
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v157 = (void *)swift_slowAlloc();
      uint64_t v163 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412546;
      NSBundle v166 = v6;
      id v10 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v157 = v3;

      *(_WORD *)(v9 + 12) = 2080;
      sub_10018CA44();
      uint64_t v11 = CGRect.description.getter();
      NSBundle v166 = (void *)sub_1001412B0(v11, v12, &v163);
      os_log_type_t v4 = &selRef_allConferenceParticipantCalls;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[View Evaluation] Current window %@ has a bound of %s.", (uint8_t *)v9, 0x16u);
      sub_10011EB3C(&qword_100322A70);
      swift_arrayDestroy();
      sub_100120278();
      swift_arrayDestroy();
      sub_100120278();
      sub_100120278();
    }
    else
    {
    }
    NSBundle v166 = a1;
    id v19 = a1;
    swift_beginAccess();
    id v20 = [v19 superview];
    if (v20)
    {
      uint64_t v158 = &v163;
      *(void *)&long long v21 = 138543362;
      *(_OWORD *)uint64_t v161 = v21;
      *(void *)&long long v21 = 138412290;
      long long v156 = v21;
      do
      {
        id v22 = v19;
        id v19 = v20;
        [v20 v4[273]];
        CGFloat v24 = v23;
        CGFloat v26 = v25;
        CGFloat v28 = v27;
        CGFloat v30 = v29;
        [v22 frame];
        v175.origin.double x = v31;
        v175.origin.double y = v32;
        v175.size.double width = v33;
        v175.size.double height = v34;
        v167.origin.double x = v24;
        v167.origin.double y = v26;
        v167.size.double width = v28;
        v167.size.double height = v30;
        if (CGRectContainsRect(v167, v175))
        {
          sub_10018CAC4();
          if (CGRectIsEmpty(v168))
          {
            id v35 = Logger.logObject.getter();
            os_log_type_t v36 = static os_log_type_t.error.getter();
            if (sub_10018CA28(v36))
            {
              sub_10015B4AC();
              uint64_t v37 = (void *)sub_10018C9FC();
              sub_10018C9D4(v37, v38, v39, v40, v41, v42, v43, v44, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
                v163,
                v164,
                v165,
                v166);
              uint64_t v45 = (void *)sub_10018CA18();
              uint64_t v48 = "[View Evaluation] Current view %{public}@ has a zero rect.";
LABEL_39:
              _os_log_impl(v45, v46, v47, v48, (uint8_t *)v22, 0xCu);
              sub_10011EB3C(&qword_100322A70);
              swift_arrayDestroy();
              sub_100120278();
              sub_100120278();
              os_log_type_t v4 = &selRef_allConferenceParticipantCalls;
            }
          }
          else
          {
            sub_10018CAC4();
            if (CGRectGetWidth(v169) == 0.0)
            {
              id v35 = Logger.logObject.getter();
              os_log_type_t v58 = static os_log_type_t.error.getter();
              if (sub_10018CA28(v58))
              {
                sub_10015B4AC();
                uint64_t v59 = (void *)sub_10018C9FC();
                sub_10018C9D4(v59, v60, v61, v62, v63, v64, v65, v66, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
                  v163,
                  v164,
                  v165,
                  v166);
                uint64_t v45 = (void *)sub_10018CA18();
                uint64_t v48 = "[View Evaluation] Current view %{public}@ has a zero width.";
                goto LABEL_39;
              }
            }
            else
            {
              sub_10018CAC4();
              if (CGRectGetHeight(v170) == 0.0)
              {
                id v35 = Logger.logObject.getter();
                os_log_type_t v67 = static os_log_type_t.error.getter();
                if (sub_10018CA28(v67))
                {
                  sub_10015B4AC();
                  uint64_t v68 = (void *)sub_10018C9FC();
                  sub_10018C9D4(v68, v69, v70, v71, v72, v73, v74, v75, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
                    v163,
                    v164,
                    v165,
                    v166);
                  uint64_t v45 = (void *)sub_10018CA18();
                  uint64_t v48 = "[View Evaluation] Current view %{public}@ has a zero height.";
                  goto LABEL_39;
                }
              }
              else
              {
                sub_10018CAC4();
                double Width = CGRectGetWidth(v171);
                v172.origin.double x = sub_10018CA44();
                if (CGRectGetWidth(v172) >= Width)
                {
                  sub_10018CAC4();
                  double Height = CGRectGetHeight(v173);
                  v174.origin.double x = sub_10018CA44();
                  if (CGRectGetHeight(v174) >= Height)
                  {
                    if ([v22 isHidden])
                    {
                      id v35 = Logger.logObject.getter();
                      os_log_type_t v96 = static os_log_type_t.error.getter();
                      if (sub_10018CA28(v96))
                      {
                        sub_10015B4AC();
                        uint64_t v97 = (void *)sub_10018C9FC();
                        sub_10018C9D4(v97, v98, v99, v100, v101, v102, v103, v104, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
                          v163,
                          v164,
                          v165,
                          v166);
                        uint64_t v45 = (void *)sub_10018CA18();
                        uint64_t v48 = "[View Evaluation] Current view %{public}@ is hidden.";
                        goto LABEL_39;
                      }
                    }
                    else
                    {
                      [v22 alpha];
                      double v106 = v105;
                      id v35 = Logger.logObject.getter();
                      if (v106 == 0.0)
                      {
                        os_log_type_t v107 = static os_log_type_t.error.getter();
                        id v22 = (void *)v107;
                        if (os_log_type_enabled(v35, v107))
                        {
                          sub_10015B4AC();
                          HIDWORD(v150) = v22;
                          uint64_t v108 = sub_10018C9FC();
                          sub_10018CA84(*(float *)v161, v108, v109, v110, v111, v112, v113, v114, v115, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (uint64_t)v161[0], (uint64_t)v161[1],
                            v162,
                            v163,
                            v164,
                            v165,
                            v166);
                          uint64_t v116 = sub_10018CADC();
                          uint64_t v45 = (void *)sub_10018CAAC(v116, v117, v118, v119, v120, v121, v122, v123, v145, v148, v151, v154);
                          uint64_t v48 = "[View Evaluation] Current view %{public}@ has alpha of 0.";
                          goto LABEL_39;
                        }
                      }
                      else
                      {
                        os_log_type_t v124 = static os_log_type_t.debug.getter();
                        id v22 = (void *)v124;
                        if (os_log_type_enabled(v35, v124))
                        {
                          sub_10015B4AC();
                          HIDWORD(v150) = v22;
                          uint64_t v125 = sub_10018C9FC();
                          sub_10018CA84(*(float *)&v156, v125, v126, v127, v128, v129, v130, v131, v132, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (uint64_t)v161[0], (uint64_t)v161[1],
                            v162,
                            v163,
                            v164,
                            v165,
                            v166);
                          uint64_t v133 = sub_10018CADC();
                          uint64_t v45 = (void *)sub_10018CAAC(v133, v134, v135, v136, v137, v138, v139, v140, v146, v149, v152, v155);
                          uint64_t v48 = "[View Evaluation] Current view %@.";
                          goto LABEL_39;
                        }
                      }
                    }
                  }
                  else
                  {
                    id v35 = Logger.logObject.getter();
                    os_log_type_t v87 = static os_log_type_t.error.getter();
                    if (sub_10018CA28(v87))
                    {
                      sub_10015B4AC();
                      int v88 = (void *)sub_10018C9FC();
                      sub_10018C9D4(v88, v89, v90, v91, v92, v93, v94, v95, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
                        v163,
                        v164,
                        v165,
                        v166);
                      uint64_t v45 = (void *)sub_10018CA18();
                      uint64_t v48 = "[View Evaluation] Current view %{public}@ has a height larger than the window.";
                      goto LABEL_39;
                    }
                  }
                }
                else
                {
                  id v35 = Logger.logObject.getter();
                  os_log_type_t v77 = static os_log_type_t.error.getter();
                  if (sub_10018CA28(v77))
                  {
                    sub_10015B4AC();
                    uint64_t v78 = (void *)sub_10018C9FC();
                    sub_10018C9D4(v78, v79, v80, v81, v82, v83, v84, v85, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
                      v163,
                      v164,
                      v165,
                      v166);
                    uint64_t v45 = (void *)sub_10018CA18();
                    uint64_t v48 = "[View Evaluation] Current view %{public}@ has a width larger than the window.";
                    goto LABEL_39;
                  }
                }
              }
            }
          }
        }
        else
        {
          id v35 = Logger.logObject.getter();
          os_log_type_t v49 = static os_log_type_t.error.getter();
          if (sub_10018CA28(v49))
          {
            sub_10015B4AC();
            uint64_t v50 = (void *)sub_10018C9FC();
            sub_10018C9D4(v50, v51, v52, v53, v54, v55, v56, v57, v144, v147, v150, v153, v156, *((uint64_t *)&v156 + 1), (uint64_t)v158, (uint64_t)v159, (int)v161[0], (uint64_t)v161[1], v162,
              v163,
              v164,
              v165,
              v166);
            uint64_t v45 = (void *)sub_10018CA18();
            uint64_t v48 = "[View Evaluation] Current view %{public}@ is not entirely contained in parent view.";
            goto LABEL_39;
          }
        }

        uint64_t v141 = v166;
        NSBundle v166 = v19;

        id v20 = [v19 superview];
      }
      while (v20);
    }

    goto LABEL_42;
  }
  if (qword_100320618 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10011EC48(v13, (uint64_t)qword_10032CD58);
  id v160 = a1;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)sub_10015B4AC();
    uint64_t v17 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 138543362;
    uint64_t v163 = (uint64_t)v160;
    id v18 = v160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v17 = v160;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[View Evaluation] Current view %{public}@ has no window.", v16, 0xCu);
    sub_10011EB3C(&qword_100322A70);
    swift_arrayDestroy();
    sub_100120278();
    sub_100120278();

LABEL_42:
    sub_10018CA58();
    return;
  }

  sub_10018CA58();
}

id sub_10018C920()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewEvaluation();
  return [super init];
}

id sub_10018C978()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewEvaluation();
  return [super dealloc];
}

uint64_t type metadata accessor for ViewEvaluation()
{
  return self;
}

id sub_10018C9D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  *(_DWORD *)uint64_t v23 = a17;
  *(void *)(v23 + 4) = a23;
  *a1 = a23;
  return a23;
}

uint64_t sub_10018C9FC()
{
  return swift_slowAlloc();
}

uint64_t sub_10018CA18()
{
  return v0;
}

BOOL sub_10018CA28(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

double sub_10018CA44()
{
  return v0;
}

id sub_10018CA84(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  float *v24 = a1;
  return a24;
}

uint64_t sub_10018CAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *uint64_t v13 = a12;
  return v12;
}

id sub_10018CAC4()
{
  uint64_t v3 = *(const char **)(v1 + 2184);
  return [v0 v3];
}

uint64_t sub_10018CADC()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10018CAFC(uint64_t a1)
{
  uint64_t v2 = v1;
  id v3 = [self textAttachmentWithImage:a1];
  id v4 = [self attributedStringWithAttachment:v3];

  sub_100123340(0, &qword_100323728);
  id v7 = sub_100170110();
  [v7 appendAttributedString:v4];
  id v5 = sub_100170110();
  [v7 appendAttributedString:v5];

  swift_bridgeObjectRetain();
  id v6 = sub_100170110();
  [v7 appendAttributedString:v6];

  [v2 setAttributedText:v7];
}

uint64_t sub_10018CC54(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

unint64_t sub_10018CC94(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

unint64_t sub_10018CCA4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10018CC94(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10018CCD8()
{
  sub_100191FC8();
  uint64_t v2 = (void *)static Features.shared.getter();
  char v3 = dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();

  if (v3)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    id v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (sub_100138CCC(v6))
    {
      id v7 = (_WORD *)sub_100138CE8();
      sub_100138DF0(v7);
      sub_10012601C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: PHAudioCallViewController trying to add webView");
      sub_100120278();
    }

    id v10 = [v1 parentViewController];
    if (v10)
    {
      id v12 = sub_100192000();
      if (!v12)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v13 = v12;
      id v14 = [v12 window];

      if (v14)
      {
        id v15 = sub_100192000();
        if (!v15)
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        uint64_t v16 = v15;
        [v15 alpha];
        double v18 = v17;

        if (v18 == 0.0)
        {
          id v19 = sub_100192000();
          if (v19)
          {
            id v20 = v19;
            [v19 setAlpha:1.0];

LABEL_29:
            [v0 requestToEnableVideoStreamingButton];
            return;
          }
LABEL_46:
          __break(1u);
          return;
        }
      }
    }
    sub_1001921A0(v11, "addChildViewController:");
    id v21 = sub_100192234();
    if (v21)
    {
      id v22 = v21;
      id v23 = sub_100192000();
      if (v23)
      {
        uint64_t v24 = v23;
        sub_100192170((uint64_t)v23, "addSubview:");

        [v1 didMoveToParentViewController:v0];
        id v25 = sub_100192000();
        if (v25)
        {
          CGFloat v26 = v25;
          [v25 setTranslatesAutoresizingMaskIntoConstraints:0];

          id v27 = sub_100192000();
          if (v27)
          {
            CGFloat v28 = v27;
            id v29 = [v27 topAnchor];

            id v30 = [v0 callParticipantsViewController];
            id v31 = [v30 view];

            if (v31)
            {
              id v32 = [v31 bottomAnchor];

              id v33 = [v29 constraintEqualToAnchor:v32];
              sub_100149CA0((uint64_t)v33);
              CGFloat v34 = *(void **)&v1[OBJC_IVAR___EmergencyWebRTCViewController_webViewRTCViewControllerWaitingStataTopAnchor];
              if (v34)
              {
                sub_10011EB3C((uint64_t *)&unk_100321360);
                uint64_t v35 = swift_allocObject();
                *(_OWORD *)(v35 + 16) = xmmword_100286FD0;
                *(void *)(v35 + 32) = v34;
                id v36 = v34;
                id v37 = sub_100192000();
                if (!v37)
                {
LABEL_39:
                  __break(1u);
                  goto LABEL_40;
                }
                uint64_t v38 = v37;
                id v39 = [v37 bottomAnchor];

                id v40 = sub_100192234();
                if (!v40)
                {
LABEL_40:
                  __break(1u);
                  goto LABEL_41;
                }
                uint64_t v41 = v40;
                id v42 = [v40 bottomAnchor];

                id v43 = [v39 constraintEqualToAnchor:v42];
                *(void *)(v35 + 40) = v43;
                id v44 = sub_100192000();
                if (!v44)
                {
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
                uint64_t v45 = v44;
                id v46 = [v44 leadingAnchor];

                id v47 = sub_100192234();
                if (!v47)
                {
LABEL_42:
                  __break(1u);
                  goto LABEL_43;
                }
                uint64_t v48 = v47;
                id v49 = [v47 leadingAnchor];

                id v50 = [v46 constraintEqualToAnchor:v49];
                *(void *)(v35 + 48) = v50;
                id v51 = sub_100192000();
                if (!v51)
                {
LABEL_43:
                  __break(1u);
                  goto LABEL_44;
                }
                uint64_t v52 = v51;
                id v53 = [v51 trailingAnchor];

                id v54 = sub_100192234();
                if (!v54)
                {
LABEL_44:
                  __break(1u);
                  goto LABEL_45;
                }
                uint64_t v55 = v54;
                uint64_t v56 = self;
                id v57 = [v55 trailingAnchor];

                id v58 = [v53 constraintEqualToAnchor:v57];
                *(void *)(v35 + 56) = v58;
                specialized Array._endMutation()();
                sub_100123340(0, (unint64_t *)&qword_100324B40);
                Class isa = sub_100192188().super.isa;
                swift_bridgeObjectRelease();
                [v56 activateConstraints:isa, v35];
              }
              id v60 = [v0 buttonsViewController];
              id v61 = [v60 view];

              if (v61)
              {
                uint64_t v62 = sub_10012A264();
                *(void *)(v62 + 16) = v1;
                uint64_t v78 = sub_100191E88;
                uint64_t v79 = v62;
                uint64_t v74 = _NSConcreteStackBlock;
                uint64_t v75 = 1107296256;
                BOOL v76 = sub_10018CC54;
                os_log_type_t v77 = &unk_1002D3C78;
                uint64_t v63 = _Block_copy(&v74);
                uint64_t v64 = v1;
                swift_release();
                [v61 setAccessibilityElementsHiddenBlock:v63];
                _Block_release(v63);

                id v65 = [v0 callParticipantsViewController];
                id v66 = [v65 view];

                if (v66)
                {
                  uint64_t v67 = sub_10012A264();
                  *(void *)(v67 + 16) = v64;
                  uint64_t v78 = sub_100191E90;
                  uint64_t v79 = v67;
                  uint64_t v74 = _NSConcreteStackBlock;
                  uint64_t v75 = 1107296256;
                  BOOL v76 = sub_10018CC54;
                  os_log_type_t v77 = &unk_1002D3CC8;
                  uint64_t v68 = _Block_copy(&v74);
                  uint64_t v69 = v64;
                  swift_release();
                  [v66 setAccessibilityElementsHiddenBlock:v68];
                  _Block_release(v68);

                  id v70 = [v0 callDetailsViewButton];
                  uint64_t v71 = sub_10012A264();
                  *(void *)(v71 + 16) = v69;
                  uint64_t v78 = sub_100191E98;
                  uint64_t v79 = v71;
                  uint64_t v74 = _NSConcreteStackBlock;
                  uint64_t v75 = 1107296256;
                  BOOL v76 = sub_10018CC54;
                  os_log_type_t v77 = &unk_1002D3D18;
                  uint64_t v72 = _Block_copy(&v74);
                  uint64_t v73 = v69;
                  swift_release();
                  [v70 setIsAccessibilityElementBlock:v72];
                  _Block_release(v72);

                  goto LABEL_29;
                }
                goto LABEL_37;
              }
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
              goto LABEL_38;
            }
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_33;
  }
}

id sub_10018D4A8(char *a1)
{
  uint64_t v1 = *(void *)&a1[OBJC_IVAR___EmergencyWebRTCViewController_currentState];
  if (!v1 || *(void *)(v1 + direct field offset for SOSUIWebRTCState.state) != 5) {
    return 0;
  }
  id result = [a1 view];
  if (result)
  {
    char v3 = result;
    [result alpha];
    double v5 = v4;

    return (id)(v5 > 0.0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10018D53C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  return v1 && (*(void *)(v1 + direct field offset for SOSUIWebRTCState.state) & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

BOOL sub_10018D578(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR___EmergencyWebRTCViewController_currentState);
  return v1 && (*(void *)(v1 + direct field offset for SOSUIWebRTCState.state) & 0xFFFFFFFFFFFFFFFDLL) != 1;
}

void sub_10018D61C()
{
  sub_100191FC8();
  uint64_t v2 = (void *)static Features.shared.getter();
  uint64_t v3 = dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();

  if ((v3 & 1) == 0)
  {
    sub_10019213C();
    return;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  double v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (sub_100138CCC(v6))
  {
    id v7 = (_WORD *)sub_100138CE8();
    sub_100138DF0(v7);
    sub_10012601C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: PHAudioCallViewController trying to remove webView");
    sub_100120278();
  }

  [v1 willMoveToParentViewController:0];
  id v10 = sub_100192048();
  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = v10;
  [v10 removeFromSuperview];

  sub_1001921A0(v12, "removeChildViewController:");
  id v13 = [v0 buttonsViewController];
  id v14 = [v13 *(SEL *)(v3 + 688)];

  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  [v14 setAccessibilityElementsHiddenBlock:0];

  id v15 = [v0 callParticipantsViewController];
  id v16 = [v15 *(SEL *)(v3 + 688)];

  if (!v16)
  {
LABEL_15:
    __break(1u);
    return;
  }
  [v16 setAccessibilityElementsHiddenBlock:0];

  objc_msgSend(objc_msgSend(v0, "callDetailsViewButton"), "setIsAccessibilityElementBlock:", 0);
  sub_10019213C();
}

void sub_10018D890()
{
  [v0 setShouldEnableVideoStreamingButton:1];
  id v1 = [v0 buttonsViewController];
  id v4 = [v1 view];

  if (v4)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 updateControls];
      [v3 changeVideoStreamingButtonTitleWithIsSharing:1];
    }
  }
}

void sub_10018DA64(SEL *a1, char a2)
{
  [v2 *a1, a2 & 1];
  id v3 = [v2 buttonsViewController];
  id v5 = [v3 view];

  if (v5)
  {
    self;
    id v4 = (void *)swift_dynamicCastObjCClass();
    if (v4) {
      [v4 updateControls];
    }
  }
}

void sub_10018DB80()
{
  sub_100191FC8();
  id v1 = (void *)static Features.shared.getter();
  uint64_t v2 = dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();

  if ((v2 & 1) == 0) {
    goto LABEL_13;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  id v4 = (void *)sub_100138D44(v3, (uint64_t)qword_10032CBE8);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (sub_100138CCC(v5))
  {
    os_log_type_t v6 = (_WORD *)sub_100138CE8();
    sub_100138DF0(v6);
    sub_10012601C((void *)&_mh_execute_header, v7, v8, "EnhancedEmergency: PHAudioCallViewController trying to hide webView");
    sub_100120278();
  }

  id v9 = sub_100192048();
  if (!v9)
  {
    __break(1u);
    return;
  }
  id v10 = v9;
  [v9 setAlpha:0.0];

  id v11 = [v0 buttonsViewController];
  id v15 = [v11 *(SEL *)(v2 + 688)];

  if (!v15)
  {
LABEL_13:
    sub_10019213C();
    return;
  }
  self;
  uint64_t v12 = (void *)swift_dynamicCastObjCClass();
  if (v12) {
    [v12 updateControls];
  }
  sub_10019213C();
}

void sub_10018DD6C(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for Features();
  id v4 = (void *)static Features.shared.getter();
  char v5 = dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();

  if (v5)
  {
    if (qword_100320540 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    uint64_t v7 = (void *)sub_100138D44(v6, (uint64_t)qword_10032CBE8);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (sub_100138CCC(v8))
    {
      id v9 = (_WORD *)sub_100138CE8();
      sub_100138DF0(v9);
      sub_10012601C((void *)&_mh_execute_header, v10, v11, "EnhancedEmergency: PHAudioCallViewController trying to remove webView");
      sub_100120278();
    }

    [a1 willMoveToParentViewController:0];
    id v12 = [a1 view];
    if (v12)
    {
      id v13 = v12;
      [v12 removeFromSuperview];

      [v2 removeChildViewController:a1];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10018DF24()
{
  sub_100191FC8();
  uint64_t v2 = (void *)static Features.shared.getter();
  char v3 = dispatch thunk of Features.isEnhancedEmergencyEnabled.getter();

  if ((v3 & 1) == 0) {
    goto LABEL_19;
  }
  if (qword_100320540 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  char v5 = (void *)sub_100138D44(v4, (uint64_t)qword_10032CBE8);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (sub_100138CCC(v6))
  {
    uint64_t v7 = (_WORD *)sub_100138CE8();
    sub_100138DF0(v7);
    sub_10012601C((void *)&_mh_execute_header, v8, v9, "EnhancedEmergency: PHAudioCallViewController trying to add media request viewController");
    sub_100120278();
  }

  sub_1001921A0(v10, "addChildViewController:");
  id v11 = sub_1001921E8();
  if (!v11)
  {
    __break(1u);
    goto LABEL_21;
  }
  id v12 = v11;
  id v13 = sub_1001920B8();
  if (!v13)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v14 = v13;
  sub_100192170((uint64_t)v13, "addSubview:");

  [v1 didMoveToParentViewController:v0];
  id v15 = sub_1001920B8();
  if (!v15)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v16 = v15;
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];

  sub_10011EB3C((uint64_t *)&unk_100321360);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100286FD0;
  id v18 = sub_1001920B8();
  if (!v18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v19 = v18;
  id v20 = [v18 topAnchor];

  id v21 = [v0 callParticipantsViewController];
  id v22 = [v21 view];

  if (!v22)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v23 = [v22 bottomAnchor];

  id v24 = sub_100192120();
  *(void *)(v17 + 32) = v24;
  id v25 = sub_1001920B8();
  if (!v25)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  CGFloat v26 = v25;
  id v27 = [v25 bottomAnchor];

  id v28 = sub_1001921E8();
  if (!v28)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v29 = v28;
  id v30 = [v28 bottomAnchor];

  id v31 = sub_100192120();
  *(void *)(v17 + 40) = v31;
  id v32 = sub_1001920B8();
  if (!v32)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v33 = v32;
  id v34 = [v32 leadingAnchor];

  id v35 = sub_1001921E8();
  if (!v35)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v36 = v35;
  id v37 = [v35 leadingAnchor];

  id v38 = sub_100192120();
  *(void *)(v17 + 48) = v38;
  id v39 = sub_1001920B8();
  if (!v39)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v40 = v39;
  id v41 = [v39 trailingAnchor];

  id v42 = sub_1001921E8();
  if (!v42)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v43 = v42;
  id v44 = self;
  id v45 = [v43 trailingAnchor];

  id v46 = [v41 constraintEqualToAnchor:v45];
  *(void *)(v17 + 56) = v46;
  specialized Array._endMutation()();
  sub_100123340(0, (unint64_t *)&qword_100324B40);
  Class isa = sub_100192188().super.isa;
  swift_bridgeObjectRelease();
  [v44 activateConstraints:isa v17];

  id v48 = [v0 buttonsViewController];
  id v49 = [v48 view];

  if (v49)
  {
    v51[4] = AudioCallBackgroundGradientViewController._canShowWhileLocked();
    v51[5] = 0;
    v51[0] = _NSConcreteStackBlock;
    v51[1] = 1107296256;
    uint64_t v51[2] = sub_10018CC54;
    uint64_t v51[3] = &unk_1002D3C28;
    id v50 = _Block_copy(v51);
    sub_100192170((uint64_t)v50, "setAccessibilityElementsHiddenBlock:");
    _Block_release(v50);

    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)&v1[OBJC_IVAR___PHEmergencyMediaRequestViewController_waitingStateTitlelabel]);
    [v0 requestToEnableMediaUploadButton];
LABEL_19:
    sub_100192104();
    return;
  }
LABEL_31:
  __break(1u);
}