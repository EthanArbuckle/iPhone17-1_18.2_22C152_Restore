uint64_t sub_1000AEB88()
{
  uint64_t vars8;

  sub_1000AEAF0();

  return swift_deallocClassInstance();
}

uint64_t sub_1000AEBE0()
{
  return type metadata accessor for WiFiListItemProvider();
}

unint64_t destroy for WiFiListItemProvider.WiFiState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11SettingsApp20WiFiListItemProviderC9WiFiStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for WiFiListItemProvider.WiFiState(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WiFiListItemProvider.WiFiState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WiFiListItemProvider.WiFiState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000AEDAC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000AEDC4(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WiFiListItemProvider.WiFiState()
{
  return &type metadata for WiFiListItemProvider.WiFiState;
}

unint64_t sub_1000AEDF8()
{
  unint64_t result = qword_100162788;
  if (!qword_100162788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162788);
  }
  return result;
}

uint64_t sub_1000AEE84@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_id, a1);
}

uint64_t sub_1000AEE9C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AEED4()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 4uLL) {
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000AEF1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 4)
      {
LABEL_14:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PasscodeCredentialWrapper(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PasscodeCredentialWrapper(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PasscodeCredentialWrapper(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PasscodeCredentialWrapper(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PasscodeCredentialWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PasscodeCredentialWrapper()
{
  return &type metadata for PasscodeCredentialWrapper;
}

id sub_1000AF104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v57 = type metadata accessor for Logger();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  v54 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v51 - v9;
  uint64_t v11 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v11 - 8);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v2 + OBJC_IVAR____TtC11SettingsApp30CameraSettingsListItemProvider_id, (uint64_t)v10);
  sub_100046BE0((uint64_t)v10, (uint64_t)v8);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v18 = swift_allocObject();
  sub_100058594((uint64_t)v8, v18 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10003FF84(a1, (uint64_t)v13);
  swift_setDeallocating();
  sub_10003DBAC(v18 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_deallocClassInstance();
  uint64_t v19 = (uint64_t)v10;
  uint64_t v20 = v14;
  sub_10003DBAC(v19, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000AE040((uint64_t)v13);
    if (qword_10015F168 != -1) {
      swift_once();
    }
    sub_1000477B0(v57, (uint64_t)qword_10016B028);
    v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Hiding Camera Settings because Shared iPad or ManagedConfiguration/Screen Time Restricted.", v23, 2u);
      swift_slowDealloc();
    }

    goto LABEL_26;
  }
  sub_100058594((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v25 = result;
    uint64_t v26 = (uint64_t)v17;
    int cameraButtonCapability = MobileGestalt_get_cameraButtonCapability();

    id v27 = objc_allocWithZone((Class)LSApplicationRecord);
    id v28 = sub_1000AF988(0xD000000000000010, 0x8000000100123860, 0);
    v30 = v54;
    uint64_t v29 = v55;
    if (v28)
    {

      int v53 = 1;
    }
    else
    {
      int v53 = 0;
    }
    id v31 = objc_allocWithZone((Class)LSApplicationRecord);
    id v32 = sub_1000AF988(0xD000000000000013, 0x8000000100128380, 0);
    uint64_t v33 = v57;
    if (v32)
    {

      int v34 = 1;
    }
    else
    {
      int v34 = 0;
    }
    if (qword_10015F168 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1000477B0(v33, (uint64_t)qword_10016B028);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v30, v35, v33);
    v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v36, v37)) {
      goto LABEL_19;
    }
    uint64_t v38 = v26;
    uint64_t v39 = v20;
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 67109632;
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v41 = result;
      int v42 = MobileGestalt_get_cameraButtonCapability();

      int v58 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v40 + 8) = 1024;
      int v58 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v40 + 14) = 1024;
      int v58 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "CameraSettingsListItemProvider (hasCameraControl: %{BOOL}d, isCameraInstalled: %{BOOL}d, isMessagesInstalled: %{BOOL}d)", (uint8_t *)v40, 0x14u);
      swift_slowDealloc();
      uint64_t v20 = v39;
      uint64_t v26 = v38;
      uint64_t v33 = v57;
      v30 = v54;
      uint64_t v29 = v55;
LABEL_19:

      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v33);
      char v43 = cameraButtonCapability | v53 | v34;
      v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      BOOL v46 = os_log_type_enabled(v44, v45);
      if (v43)
      {
        if (v46)
        {
          v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v47 = 0;
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "Showing Camera Settings.", v47, 2u);
          swift_slowDealloc();
        }

        uint64_t v48 = v56;
        sub_100058594(v26, v56, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        uint64_t v49 = 0;
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v48, v49, 1, v20);
      }
      if (v46)
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Hiding Camera Settings because neither Camera nor Messages are installed (device does not support camera control).", v50, 2u);
        swift_slowDealloc();
      }

      sub_10003DBAC(v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_26:
      uint64_t v49 = 1;
      uint64_t v48 = v56;
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v48, v49, 1, v20);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AF880()
{
  sub_10003DBAC(v0 + OBJC_IVAR____TtC11SettingsApp30CameraSettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_1000AF8F8()
{
  return type metadata accessor for CameraSettingsListItemProvider();
}

uint64_t type metadata accessor for CameraSettingsListItemProvider()
{
  uint64_t result = qword_1001627B8;
  if (!qword_1001627B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AF94C@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp30CameraSettingsListItemProvider_id, a1);
}

id sub_1000AF964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AF104(a1, a2);
}

id sub_1000AF988(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

id sub_1000AFA64()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_softwareUpdateClient;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_softwareUpdateClient];
  if (v3 && ([v3 setDelegate:0], (uint64_t v4 = *(void **)&v0[v2]) != 0))
  {
    [v4 invalidate];
    NSString v5 = *(void **)&v0[v2];
  }
  else
  {
    NSString v5 = 0;
  }
  *(void *)&v0[v2] = 0;

  v7.receiver = v0;
  v7.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1000AFB7C()
{
  return type metadata accessor for GeneralSettingsListItemProvider();
}

uint64_t sub_1000AFBB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_id, a1);
}

uint64_t sub_1000AFC60()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AFC98()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

id sub_1000AFCD0()
{
  id v1 = [v0 representingBundlePath];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = [v0 bundleIconName];
  if (!v3) {
    goto LABEL_7;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  id v8 = objc_allocWithZone((Class)NSBundle);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithPath:v9];

  if (!v10)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  id v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [self imageNamed:v12 inBundle:v11];

  if (!v13)
  {
    if (qword_10015F168 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000477B0(v17, (uint64_t)qword_10016B028);
    swift_bridgeObjectRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446210;
      swift_bridgeObjectRetain();
      sub_100042948(v5, v7, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not find FLFollowUpItem resolvedImage %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  swift_bridgeObjectRelease();
  id result = (id)SFAppTintColor();
  if (result)
  {
    uint64_t v15 = result;
    id v16 = [v13 imageWithTintColor:result];

    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AFFF8()
{
  id v1 = [v0 representingBundlePath];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = objc_allocWithZone((Class)NSBundle);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithPath:v4];

  if (!v5) {
    return 0;
  }
  id v6 = [v5 bundleIdentifier];
  if (!v6)
  {

    return 0;
  }
  unint64_t v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v8;
}

uint64_t sub_1000B00E0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v18 = v0;
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_1000B4A48();
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v20;
    uint64_t v3 = v21;
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    unint64_t v6 = v24;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v3 = v1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v13 = v5;
      goto LABEL_27;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v10) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    uint64_t v13 = v5 + 1;
    if (!v15)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v13);
      if (!v15)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v13);
        if (!v15)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_30;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v13);
          if (!v15)
          {
            uint64_t v16 = v5 + 5;
            while (v10 != v16)
            {
              unint64_t v15 = *(void *)(v3 + 8 * v16++);
              if (v15)
              {
                uint64_t v13 = v16 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            *(void *)(v18 + 80) = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            *(void *)(v18 + 72) = 0;
            swift_release();
            sub_100042A1C(v18 + 16);

            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_10000C810(v18 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            return v18;
          }
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_27:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v12);
    swift_retain();
    if (!v17) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v5 = v13;
      unint64_t v6 = v11;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v13 = v5;
        uint64_t v11 = v6;
        if (v19) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B03BC()
{
  sub_1000B00E0();

  return swift_deallocClassInstance();
}

uint64_t sub_1000B0414()
{
  return type metadata accessor for FollowUpListElementsGenerator();
}

uint64_t sub_1000B041C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  sub_100046B9C(&qword_100164100);
  v7[10] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FollowUpInformationProviderSnapshot();
  v7[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[12] = v9;
  v7[13] = *(void *)(v9 + 64);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  sub_100046B9C(&qword_1001629E0);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v7[19] = type metadata accessor for PrimarySettingsListItemViewType();
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  v7[26] = type metadata accessor for PrimarySettingsListItemIdentifier();
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  v7[29] = swift_task_alloc();
  v7[30] = swift_task_alloc();
  v7[31] = swift_task_alloc();
  v7[32] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FLRenderStyle();
  v7[33] = v10;
  v7[34] = *(void *)(v10 - 8);
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  sub_100046B9C((uint64_t *)&unk_100163AD0);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  v7[39] = swift_task_alloc();
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemModel();
  v7[43] = v11;
  v7[44] = *(void *)(v11 - 8);
  v7[45] = swift_task_alloc();
  v7[46] = swift_task_alloc();
  v7[47] = swift_task_alloc();
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  v7[50] = swift_task_alloc();
  v7[51] = swift_task_alloc();
  v7[52] = swift_task_alloc();
  v7[53] = swift_task_alloc();
  v7[54] = swift_task_alloc();
  v7[55] = swift_task_alloc();
  v7[56] = swift_task_alloc();
  sub_100046B9C(&qword_100163B30);
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for FLFollowUpInformation();
  v7[59] = v12;
  v7[60] = *(void *)(v12 - 8);
  v7[61] = swift_task_alloc();
  v7[62] = swift_task_alloc();
  v7[63] = swift_task_alloc();
  v7[64] = swift_task_alloc();
  v7[65] = swift_task_alloc();
  v7[66] = swift_task_alloc();
  v7[67] = swift_task_alloc();
  return _swift_task_switch(sub_1000B08FC, 0, 0);
}

uint64_t sub_1000B08FC()
{
  *(void *)(v0 + 544) = type metadata accessor for MainActor();
  *(void *)(v0 + 552) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B0994, v2, v1);
}

uint64_t sub_1000B0994()
{
  swift_release();
  *(void *)(v0 + 560) = FLFollowUpModelObserver.primaryAppleAccountFollowUps.getter();
  return _swift_task_switch(sub_1000B0A08, 0, 0);
}

uint64_t sub_1000B0A08()
{
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v0 + 480);
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 352);
    uint64_t v61 = *(void *)(v0 + 344);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v8 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v6 = v3 + 16;
    uint64_t v7 = v8;
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = v1 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v71 = *(void *)(v6 + 56);
    v70 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    v68 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v69 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    v59 = (unsigned char *)(v9 + 17);
    uint64_t v60 = v9;
    unsigned int v67 = enum case for FLRenderStyle.standard(_:);
    uint64_t v57 = (unsigned char *)(v9 + 25);
    int v58 = (uint64_t *)(v9 + 24);
    v66 = (void (**)(uint64_t, uint64_t))(v6 - 8);
    uint64_t v62 = v4;
    v64 = (uint64_t *)(v9 + 16);
    v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v56 = *(void *)(v0 + 560);
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v55 = v10;
    v63 = v8;
    do
    {
      uint64_t v72 = v2;
      v73 = v11;
      uint64_t v13 = *(void *)(v0 + 280);
      uint64_t v12 = *(void *)(v0 + 288);
      uint64_t v14 = *(void *)(v0 + 264);
      v7(*(void *)(v0 + 528), v10, *(void *)(v0 + 472));
      FLFollowUpInformation.renderStyle.getter();
      (*v70)(v13, v67, v14);
      char v15 = static FLRenderStyle.== infix(_:_:)();
      uint64_t v16 = v6;
      uint64_t v17 = *v69;
      (*v69)(v13, v14);
      v17(v12, v14);
      if (v15)
      {
        v7(*(void *)(v0 + 256), *(void *)(v0 + 528), *(void *)(v0 + 472));
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = FLFollowUpInformation.badgeValue.getter();
        uint64_t v19 = *(uint64_t **)(v0 + 200);
        uint64_t v6 = v16;
        if (v20)
        {
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t v23 = v64;
          unint64_t v24 = v59;
        }
        else
        {
          uint64_t v21 = v18;
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t *v64 = v21;
          unint64_t v24 = v57;
          uint64_t v23 = v58;
        }
        uint64_t v11 = v73;
        *(void *)(v60 + 8) = v22;
        uint64_t v26 = *(void *)(v0 + 336);
        uint64_t v27 = *(void *)(v0 + 256);
        uint64_t v28 = *(void *)(v0 + 200);
        *(unsigned char *)uint64_t v23 = 0;
        *unint64_t v24 = 0;
        swift_storeEnumTagMultiPayload();
        sub_100008C40(v27, v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_100066E04(v28, v26 + *(int *)(v61 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        sub_10000C810(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v25 = 0;
        uint64_t v7 = v63;
      }
      else
      {
        uint64_t v25 = 1;
        uint64_t v6 = v16;
        uint64_t v11 = v73;
      }
      uint64_t v29 = *(void *)(v0 + 528);
      uint64_t v30 = *(void *)(v0 + 472);
      uint64_t v32 = *(void *)(v0 + 336);
      uint64_t v31 = *(void *)(v0 + 344);
      (*v68)(v32, v25, 1, v31);
      (*v66)(v29, v30);
      if ((*v65)(v32, 1, v31) == 1)
      {
        sub_10003F5D0(*(void *)(v0 + 336), (uint64_t *)&unk_100163AD0);
      }
      else
      {
        uint64_t v34 = *(void *)(v0 + 440);
        uint64_t v33 = *(void *)(v0 + 448);
        sub_100066E04(*(void *)(v0 + 336), v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100066E04(v33, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)sub_100059C00(0, v11[2] + 1, 1, (unint64_t)v11);
        }
        unint64_t v36 = v11[2];
        unint64_t v35 = v11[3];
        if (v36 >= v35 >> 1) {
          uint64_t v11 = (void *)sub_100059C00(v35 > 1, v36 + 1, 1, (unint64_t)v11);
        }
        uint64_t v37 = *(void *)(v0 + 440);
        v11[2] = v36 + 1;
        sub_100066E04(v37, (uint64_t)v11+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      }
      v10 += v71;
      uint64_t v2 = v72 - 1;
    }
    while (v72 != 1);
    uint64_t v38 = swift_bridgeObjectRelease();
    if (!*(void *)(v56 + 16))
    {
      __break(1u);
      return _swift_task_switch(v38, v39, v40);
    }
    uint64_t v41 = *(void *)(v0 + 472);
    uint64_t v42 = *(void *)(v0 + 480);
    uint64_t v43 = *(void *)(v0 + 464);
    v7(v43, v55, v41);
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v44(v43, 0, 1, v41);
  }
  else
  {
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v44(*(void *)(v0 + 464), 1, 1, *(void *)(v0 + 472));
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 576) = v11;
  *(void *)(v0 + 568) = v44;
  uint64_t v45 = *(void *)(v0 + 472);
  uint64_t v46 = *(void *)(v0 + 480);
  uint64_t v47 = *(void *)(v0 + 464);
  swift_bridgeObjectRelease();
  uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  *(void *)(v0 + 584) = v48;
  *(void *)(v0 + 592) = (v46 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v48(v47, 1, v45) == 1)
  {
    sub_10003F5D0(*(void *)(v0 + 464), &qword_100163B30);
    *(_OWORD *)(v0 + 616) = 0u;
    *(void *)(v0 + 632) = static MainActor.shared.getter();
    uint64_t v49 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v51 = v50;
    v52 = sub_1000B115C;
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 480) + 32))(*(void *)(v0 + 536), *(void *)(v0 + 464), *(void *)(v0 + 472));
    *(void *)(v0 + 600) = static MainActor.shared.getter();
    uint64_t v49 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v51 = v53;
    v52 = sub_1000B0FB4;
  }
  uint64_t v38 = (uint64_t)v52;
  uint64_t v39 = v49;
  uint64_t v40 = v51;
  return _swift_task_switch(v38, v39, v40);
}

uint64_t sub_1000B0FB4()
{
  swift_release();
  *(void *)(v0 + 608) = FLFollowUpModelObserver.followUpGroup(with:)();
  return _swift_task_switch(sub_1000B1030, 0, 0);
}

uint64_t sub_1000B1030()
{
  if (*(void *)(v0 + 608))
  {
    id v1 = [*(id *)(v0 + 608) footerText];
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v5 = v4;
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 480) + 8))(*(void *)(v0 + 536), *(void *)(v0 + 472));
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 480) + 8))(*(void *)(v0 + 536), *(void *)(v0 + 472));
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 624) = v5;
  *(void *)(v0 + 616) = v3;
  *(void *)(v0 + 632) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B115C, v7, v6);
}

uint64_t sub_1000B115C()
{
  swift_release();
  *(void *)(v0 + 640) = FLFollowUpModelObserver.appleServicesFollowUps.getter();
  return _swift_task_switch(sub_1000B11D0, 0, 0);
}

uint64_t sub_1000B11D0()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 480);
    uint64_t v4 = *(void *)(v0 + 352);
    uint64_t v61 = *(void *)(v0 + 344);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v7 = *(void (**)(void, uint64_t, void))(v3 + 16);
    v3 += 16;
    uint64_t v6 = v7;
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = v1 + ((*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64));
    uint64_t v71 = *(void *)(v3 + 56);
    v70 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    v68 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v69 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    v59 = (unsigned char *)(v8 + 17);
    uint64_t v60 = v8;
    unsigned int v67 = enum case for FLRenderStyle.standard(_:);
    uint64_t v57 = (unsigned char *)(v8 + 25);
    int v58 = (uint64_t *)(v8 + 24);
    v66 = (void (**)(uint64_t, uint64_t))(v3 - 8);
    uint64_t v62 = v4;
    v64 = (uint64_t *)(v8 + 16);
    v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v56 = *(void *)(v0 + 640);
    uint64_t v10 = v3;
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v55 = v9;
    v63 = v7;
    do
    {
      uint64_t v72 = v2;
      v73 = v11;
      uint64_t v13 = *(void *)(v0 + 280);
      uint64_t v12 = *(void *)(v0 + 288);
      uint64_t v14 = *(void *)(v0 + 264);
      v6(*(void *)(v0 + 520), v9, *(void *)(v0 + 472));
      FLFollowUpInformation.renderStyle.getter();
      (*v70)(v13, v67, v14);
      char v15 = static FLRenderStyle.== infix(_:_:)();
      uint64_t v16 = v10;
      uint64_t v17 = *v69;
      (*v69)(v13, v14);
      v17(v12, v14);
      if (v15)
      {
        v6(*(void *)(v0 + 248), *(void *)(v0 + 520), *(void *)(v0 + 472));
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = FLFollowUpInformation.badgeValue.getter();
        uint64_t v19 = *(uint64_t **)(v0 + 192);
        uint64_t v10 = v16;
        if (v20)
        {
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t v23 = v64;
          unint64_t v24 = v59;
        }
        else
        {
          uint64_t v21 = v18;
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t *v64 = v21;
          unint64_t v24 = v57;
          uint64_t v23 = v58;
        }
        uint64_t v11 = v73;
        *(void *)(v60 + 8) = v22;
        uint64_t v26 = *(void *)(v0 + 328);
        uint64_t v27 = *(void *)(v0 + 248);
        uint64_t v28 = *(void *)(v0 + 192);
        *(unsigned char *)uint64_t v23 = 0;
        *unint64_t v24 = 0;
        swift_storeEnumTagMultiPayload();
        sub_100008C40(v27, v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_100066E04(v28, v26 + *(int *)(v61 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        sub_10000C810(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v25 = 0;
        uint64_t v6 = v63;
      }
      else
      {
        uint64_t v25 = 1;
        uint64_t v10 = v16;
        uint64_t v11 = v73;
      }
      uint64_t v29 = *(void *)(v0 + 520);
      uint64_t v30 = *(void *)(v0 + 472);
      uint64_t v31 = *(void *)(v0 + 344);
      uint64_t v32 = *(void *)(v0 + 328);
      (*v68)(v32, v25, 1, v31);
      (*v66)(v29, v30);
      if ((*v65)(v32, 1, v31) == 1)
      {
        sub_10003F5D0(*(void *)(v0 + 328), (uint64_t *)&unk_100163AD0);
      }
      else
      {
        uint64_t v34 = *(void *)(v0 + 424);
        uint64_t v33 = *(void *)(v0 + 432);
        sub_100066E04(*(void *)(v0 + 328), v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100066E04(v33, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)sub_100059C00(0, v11[2] + 1, 1, (unint64_t)v11);
        }
        unint64_t v36 = v11[2];
        unint64_t v35 = v11[3];
        if (v36 >= v35 >> 1) {
          uint64_t v11 = (void *)sub_100059C00(v35 > 1, v36 + 1, 1, (unint64_t)v11);
        }
        uint64_t v37 = *(void *)(v0 + 424);
        v11[2] = v36 + 1;
        sub_100066E04(v37, (uint64_t)v11+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      }
      v9 += v71;
      uint64_t v2 = v72 - 1;
    }
    while (v72 != 1);
    uint64_t v38 = swift_bridgeObjectRelease();
    if (!*(void *)(v56 + 16))
    {
      __break(1u);
      return _swift_task_switch(v38, v39, v40);
    }
    v6(*(void *)(v0 + 456), v55, *(void *)(v0 + 472));
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v41 = 1;
  }
  *(void *)(v0 + 648) = v11;
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
  uint64_t v43 = *(void *)(v0 + 472);
  uint64_t v44 = *(void *)(v0 + 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 568))(v44, v41, 1, v43);
  swift_bridgeObjectRelease();
  if (v42(v44, 1, v43) == 1)
  {
    sub_10003F5D0(*(void *)(v0 + 456), &qword_100163B30);
    uint64_t v45 = 0;
    uint64_t v46 = 0;
  }
  else
  {
    uint64_t v47 = *(void *)(v0 + 472);
    uint64_t v48 = *(void *)(v0 + 480);
    uint64_t v49 = *(void *)(v0 + 456);
    uint64_t v45 = FLFollowUpInformation.subtitle.getter();
    uint64_t v46 = v50;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
  }
  *(void *)(v0 + 664) = v46;
  *(void *)(v0 + 656) = v45;
  *(void *)(v0 + 672) = static MainActor.shared.getter();
  uint64_t v51 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v53 = v52;
  uint64_t v38 = (uint64_t)sub_1000B1734;
  uint64_t v39 = v51;
  uint64_t v40 = v53;
  return _swift_task_switch(v38, v39, v40);
}

uint64_t sub_1000B1734()
{
  swift_release();
  uint64_t v1 = FLFollowUpModelObserver.primaryAppleAccountNoGroupFollowUps.getter();
  *(void *)(v0 + 680) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000B17E0;
  return sub_10001C1D8(v1);
}

uint64_t sub_1000B17E0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000B18FC, 0, 0);
}

uint64_t sub_1000B18FC()
{
  *(void *)(v0 + 696) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B1988, v2, v1);
}

uint64_t sub_1000B1988()
{
  swift_release();
  *(void *)(v0 + 704) = FLFollowUpModelObserver.secondaryAppleAccountFollowUps.getter();
  return _swift_task_switch(sub_1000B19FC, 0, 0);
}

uint64_t sub_1000B19FC()
{
  uint64_t v1 = v0[88];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[60];
    uint64_t v4 = v0[44];
    uint64_t v47 = v0[43];
    uint64_t v5 = v0[34];
    uint64_t v8 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v6 = v3 + 16;
    uint64_t v7 = v8;
    uint64_t v9 = v0[23];
    uint64_t v10 = v1 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v55 = *(void *)(v6 + 56);
    uint64_t v53 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    v54 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v43 = (unsigned char *)(v9 + 17);
    uint64_t v44 = (uint64_t *)(v9 + 16);
    unsigned int v51 = enum case for FLRenderStyle.standard(_:);
    uint64_t v45 = v9;
    uint64_t v41 = (unsigned char *)(v9 + 25);
    uint64_t v42 = (uint64_t *)(v9 + 24);
    uint64_t v48 = v4;
    uint64_t v49 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v6 - 8);
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v46 = v8;
    do
    {
      uint64_t v56 = v11;
      uint64_t v57 = v2;
      uint64_t v13 = v0[35];
      uint64_t v12 = v0[36];
      uint64_t v14 = v0[33];
      v7(v0[64], v10, v0[59]);
      FLFollowUpInformation.renderStyle.getter();
      (*v54)(v13, v51, v14);
      char v15 = static FLRenderStyle.== infix(_:_:)();
      uint64_t v16 = v6;
      uint64_t v17 = *v53;
      (*v53)(v13, v14);
      v17(v12, v14);
      if (v15)
      {
        v7(v0[30], v0[64], v0[59]);
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = FLFollowUpInformation.badgeValue.getter();
        uint64_t v19 = (uint64_t *)v0[23];
        uint64_t v6 = v16;
        if (v20)
        {
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          unint64_t v24 = v43;
          uint64_t v23 = v44;
        }
        else
        {
          uint64_t v21 = v18;
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t *v44 = v21;
          unint64_t v24 = v41;
          uint64_t v23 = v42;
        }
        uint64_t v11 = v56;
        *(void *)(v45 + 8) = v22;
        uint64_t v26 = v0[40];
        uint64_t v27 = v0[30];
        uint64_t v28 = v0[23];
        *(unsigned char *)uint64_t v23 = 0;
        *unint64_t v24 = 0;
        swift_storeEnumTagMultiPayload();
        sub_100008C40(v27, v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_100066E04(v28, v26 + *(int *)(v47 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        sub_10000C810(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v25 = 0;
        uint64_t v7 = v46;
      }
      else
      {
        uint64_t v25 = 1;
        uint64_t v6 = v16;
        uint64_t v11 = v56;
      }
      uint64_t v29 = v0[64];
      uint64_t v30 = v0[59];
      uint64_t v31 = v0[43];
      uint64_t v32 = v0[40];
      (*v52)(v32, v25, 1, v31);
      (*v50)(v29, v30);
      if ((*v49)(v32, 1, v31) == 1)
      {
        sub_10003F5D0(v0[40], (uint64_t *)&unk_100163AD0);
      }
      else
      {
        uint64_t v34 = v0[51];
        uint64_t v33 = v0[52];
        sub_100066E04(v0[40], v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100066E04(v33, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)sub_100059C00(0, v11[2] + 1, 1, (unint64_t)v11);
        }
        unint64_t v36 = v11[2];
        unint64_t v35 = v11[3];
        if (v36 >= v35 >> 1) {
          uint64_t v11 = (void *)sub_100059C00(v35 > 1, v36 + 1, 1, (unint64_t)v11);
        }
        uint64_t v37 = v0[51];
        v11[2] = v36 + 1;
        sub_100066E04(v37, (uint64_t)v11+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      }
      v10 += v55;
      uint64_t v2 = v57 - 1;
    }
    while (v57 != 1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  v0[89] = v11;
  v0[90] = static MainActor.shared.getter();
  uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B1E80, v39, v38);
}

uint64_t sub_1000B1E80()
{
  swift_release();
  uint64_t v1 = FLFollowUpModelObserver.secondaryAppleAccountNoGroupFollowUps.getter();
  *(void *)(v0 + 728) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 736) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000B1F2C;
  return sub_10001C1D8(v1);
}

uint64_t sub_1000B1F2C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000B2048, 0, 0);
}

uint64_t sub_1000B2048()
{
  *(void *)(v0 + 744) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B20D4, v2, v1);
}

uint64_t sub_1000B20D4()
{
  swift_release();
  FLFollowUpModelObserver.deviceFollowUpGroupSectionElement.getter();
  return _swift_task_switch(sub_1000B214C, 0, 0);
}

uint64_t sub_1000B214C()
{
  *(void *)(v0 + 752) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B21D8, v2, v1);
}

uint64_t sub_1000B21D8()
{
  swift_release();
  *(void *)(v0 + 760) = FLFollowUpModelObserver.deviceFollowUps.getter();
  return _swift_task_switch(sub_1000B224C, 0, 0);
}

uint64_t sub_1000B224C()
{
  uint64_t v1 = v0[95];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[60];
    uint64_t v4 = v0[44];
    uint64_t v47 = v0[43];
    uint64_t v5 = v0[34];
    uint64_t v8 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v6 = v3 + 16;
    uint64_t v7 = v8;
    uint64_t v9 = v0[22];
    uint64_t v10 = v1 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v55 = *(void *)(v6 + 56);
    uint64_t v53 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    v54 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v43 = (unsigned char *)(v9 + 17);
    uint64_t v44 = (uint64_t *)(v9 + 16);
    unsigned int v51 = enum case for FLRenderStyle.standard(_:);
    uint64_t v45 = v9;
    uint64_t v41 = (unsigned char *)(v9 + 25);
    uint64_t v42 = (uint64_t *)(v9 + 24);
    uint64_t v48 = v4;
    uint64_t v49 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v6 - 8);
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v46 = v8;
    do
    {
      uint64_t v56 = v11;
      uint64_t v57 = v2;
      uint64_t v13 = v0[35];
      uint64_t v12 = v0[36];
      uint64_t v14 = v0[33];
      v7(v0[63], v10, v0[59]);
      FLFollowUpInformation.renderStyle.getter();
      (*v54)(v13, v51, v14);
      char v15 = static FLRenderStyle.== infix(_:_:)();
      uint64_t v16 = v6;
      uint64_t v17 = *v53;
      (*v53)(v13, v14);
      v17(v12, v14);
      if (v15)
      {
        v7(v0[29], v0[63], v0[59]);
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = FLFollowUpInformation.badgeValue.getter();
        uint64_t v19 = (uint64_t *)v0[22];
        uint64_t v6 = v16;
        if (v20)
        {
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          unint64_t v24 = v43;
          uint64_t v23 = v44;
        }
        else
        {
          uint64_t v21 = v18;
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t *v44 = v21;
          unint64_t v24 = v41;
          uint64_t v23 = v42;
        }
        uint64_t v11 = v56;
        *(void *)(v45 + 8) = v22;
        uint64_t v26 = v0[39];
        uint64_t v27 = v0[29];
        uint64_t v28 = v0[22];
        *(unsigned char *)uint64_t v23 = 0;
        *unint64_t v24 = 0;
        swift_storeEnumTagMultiPayload();
        sub_100008C40(v27, v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_100066E04(v28, v26 + *(int *)(v47 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        sub_10000C810(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v25 = 0;
        uint64_t v7 = v46;
      }
      else
      {
        uint64_t v25 = 1;
        uint64_t v6 = v16;
        uint64_t v11 = v56;
      }
      uint64_t v29 = v0[63];
      uint64_t v30 = v0[59];
      uint64_t v31 = v0[43];
      uint64_t v32 = v0[39];
      (*v52)(v32, v25, 1, v31);
      (*v50)(v29, v30);
      if ((*v49)(v32, 1, v31) == 1)
      {
        sub_10003F5D0(v0[39], (uint64_t *)&unk_100163AD0);
      }
      else
      {
        uint64_t v34 = v0[49];
        uint64_t v33 = v0[50];
        sub_100066E04(v0[39], v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100066E04(v33, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)sub_100059C00(0, v11[2] + 1, 1, (unint64_t)v11);
        }
        unint64_t v36 = v11[2];
        unint64_t v35 = v11[3];
        if (v36 >= v35 >> 1) {
          uint64_t v11 = (void *)sub_100059C00(v35 > 1, v36 + 1, 1, (unint64_t)v11);
        }
        uint64_t v37 = v0[49];
        v11[2] = v36 + 1;
        sub_100066E04(v37, (uint64_t)v11+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      }
      v10 += v55;
      uint64_t v2 = v57 - 1;
    }
    while (v57 != 1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  v0[96] = v11;
  v0[97] = static MainActor.shared.getter();
  uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B26D0, v39, v38);
}

uint64_t sub_1000B26D0()
{
  swift_release();
  FLFollowUpModelObserver.newDeviceOutreachFollowUpGroupSectionElement.getter();
  return _swift_task_switch(sub_1000B2748, 0, 0);
}

uint64_t sub_1000B2748()
{
  *(void *)(v0 + 784) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B27D4, v2, v1);
}

uint64_t sub_1000B27D4()
{
  swift_release();
  *(void *)(v0 + 792) = FLFollowUpModelObserver.newDeviceOutreachFollowUps.getter();
  return _swift_task_switch(sub_1000B2848, 0, 0);
}

uint64_t sub_1000B2848()
{
  uint64_t v1 = v0[99];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[60];
    uint64_t v4 = v0[44];
    uint64_t v47 = v0[43];
    uint64_t v5 = v0[34];
    uint64_t v8 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v6 = v3 + 16;
    uint64_t v7 = v8;
    uint64_t v9 = v0[21];
    uint64_t v10 = v1 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v55 = *(void *)(v6 + 56);
    uint64_t v53 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    v54 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v43 = (unsigned char *)(v9 + 17);
    uint64_t v44 = (uint64_t *)(v9 + 16);
    unsigned int v51 = enum case for FLRenderStyle.standard(_:);
    uint64_t v45 = v9;
    uint64_t v41 = (unsigned char *)(v9 + 25);
    uint64_t v42 = (uint64_t *)(v9 + 24);
    uint64_t v48 = v4;
    uint64_t v49 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v6 - 8);
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v46 = v8;
    do
    {
      uint64_t v56 = v11;
      uint64_t v57 = v2;
      uint64_t v13 = v0[35];
      uint64_t v12 = v0[36];
      uint64_t v14 = v0[33];
      v7(v0[62], v10, v0[59]);
      FLFollowUpInformation.renderStyle.getter();
      (*v54)(v13, v51, v14);
      char v15 = static FLRenderStyle.== infix(_:_:)();
      uint64_t v16 = v6;
      uint64_t v17 = *v53;
      (*v53)(v13, v14);
      v17(v12, v14);
      if (v15)
      {
        v7(v0[28], v0[62], v0[59]);
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = FLFollowUpInformation.badgeValue.getter();
        uint64_t v19 = (uint64_t *)v0[21];
        uint64_t v6 = v16;
        if (v20)
        {
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          unint64_t v24 = v43;
          uint64_t v23 = v44;
        }
        else
        {
          uint64_t v21 = v18;
          *uint64_t v19 = FLFollowUpInformation.title.getter();
          uint64_t *v44 = v21;
          unint64_t v24 = v41;
          uint64_t v23 = v42;
        }
        uint64_t v11 = v56;
        *(void *)(v45 + 8) = v22;
        uint64_t v26 = v0[38];
        uint64_t v27 = v0[28];
        uint64_t v28 = v0[21];
        *(unsigned char *)uint64_t v23 = 0;
        *unint64_t v24 = 0;
        swift_storeEnumTagMultiPayload();
        sub_100008C40(v27, v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_100066E04(v28, v26 + *(int *)(v47 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        sub_10000C810(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v25 = 0;
        uint64_t v7 = v46;
      }
      else
      {
        uint64_t v25 = 1;
        uint64_t v6 = v16;
        uint64_t v11 = v56;
      }
      uint64_t v29 = v0[62];
      uint64_t v30 = v0[59];
      uint64_t v31 = v0[43];
      uint64_t v32 = v0[38];
      (*v52)(v32, v25, 1, v31);
      (*v50)(v29, v30);
      if ((*v49)(v32, 1, v31) == 1)
      {
        sub_10003F5D0(v0[38], (uint64_t *)&unk_100163AD0);
      }
      else
      {
        uint64_t v34 = v0[47];
        uint64_t v33 = v0[48];
        sub_100066E04(v0[38], v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100066E04(v33, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)sub_100059C00(0, v11[2] + 1, 1, (unint64_t)v11);
        }
        unint64_t v36 = v11[2];
        unint64_t v35 = v11[3];
        if (v36 >= v35 >> 1) {
          uint64_t v11 = (void *)sub_100059C00(v35 > 1, v36 + 1, 1, (unint64_t)v11);
        }
        uint64_t v37 = v0[47];
        v11[2] = v36 + 1;
        sub_100066E04(v37, (uint64_t)v11+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      }
      v10 += v55;
      uint64_t v2 = v57 - 1;
    }
    while (v57 != 1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  v0[100] = v11;
  v0[101] = static MainActor.shared.getter();
  uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B2CCC, v39, v38);
}

uint64_t sub_1000B2CCC()
{
  swift_release();
  FLFollowUpModelObserver.unauthorizedFollowUpGroupSectionElement.getter();
  return _swift_task_switch(sub_1000B2D44, 0, 0);
}

uint64_t sub_1000B2D44()
{
  *(void *)(v0 + 816) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B2DD0, v2, v1);
}

uint64_t sub_1000B2DD0()
{
  swift_release();
  *(void *)(v0 + 824) = FLFollowUpModelObserver.unauthorizedFollowUps.getter();
  return _swift_task_switch(sub_1000B2E44, 0, 0);
}

uint64_t sub_1000B2E44()
{
  uint64_t v1 = v0[103];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[60];
    uint64_t v4 = v0[44];
    uint64_t v74 = v0[43];
    uint64_t v5 = v0[34];
    uint64_t v8 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v7 = v3 + 16;
    uint64_t v6 = v8;
    uint64_t v9 = v0[20];
    uint64_t v10 = v1 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v81 = *(void *)(v7 + 56);
    v79 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    v80 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    v78 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v70 = (unsigned char *)(v9 + 17);
    uint64_t v71 = (uint64_t *)(v9 + 16);
    unsigned int v77 = enum case for FLRenderStyle.standard(_:);
    uint64_t v72 = v9;
    v68 = (unsigned char *)(v9 + 25);
    v69 = (uint64_t *)(v9 + 24);
    uint64_t v75 = v4;
    v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyArrayStorage;
    v73 = v8;
    do
    {
      uint64_t v82 = v2;
      unint64_t v83 = (unint64_t)v11;
      uint64_t v13 = v0[35];
      uint64_t v12 = v0[36];
      uint64_t v14 = v0[33];
      v6(v0[61], v10, v0[59]);
      FLFollowUpInformation.renderStyle.getter();
      (*v80)(v13, v77, v14);
      char v15 = static FLRenderStyle.== infix(_:_:)();
      uint64_t v16 = *v79;
      (*v79)(v13, v14);
      v16(v12, v14);
      if (v15)
      {
        v6(v0[27], v0[61], v0[59]);
        swift_storeEnumTagMultiPayload();
        uint64_t v17 = FLFollowUpInformation.badgeValue.getter();
        uint64_t v18 = (uint64_t *)v0[20];
        if (v19)
        {
          *uint64_t v18 = FLFollowUpInformation.title.getter();
          uint64_t v23 = v70;
          uint64_t v22 = v71;
        }
        else
        {
          uint64_t v20 = v17;
          *uint64_t v18 = FLFollowUpInformation.title.getter();
          *uint64_t v71 = v20;
          uint64_t v23 = v68;
          uint64_t v22 = v69;
        }
        *(void *)(v72 + 8) = v21;
        uint64_t v25 = v0[37];
        uint64_t v26 = v0[27];
        uint64_t v27 = v0[20];
        *(unsigned char *)uint64_t v22 = 0;
        unsigned char *v23 = 0;
        swift_storeEnumTagMultiPayload();
        sub_100008C40(v26, v25, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_100066E04(v27, v25 + *(int *)(v74 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        sub_10000C810(v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v24 = 0;
        uint64_t v6 = v73;
      }
      else
      {
        uint64_t v24 = 1;
      }
      uint64_t v28 = v0[61];
      uint64_t v29 = v0[59];
      uint64_t v30 = v0[43];
      uint64_t v31 = v0[37];
      (*v78)(v31, v24, 1, v30);
      (*(void (**)(uint64_t, uint64_t))(v7 - 8))(v28, v29);
      if ((*v76)(v31, 1, v30) == 1)
      {
        sub_10003F5D0(v0[37], (uint64_t *)&unk_100163AD0);
        uint64_t v11 = (void *)v83;
      }
      else
      {
        uint64_t v33 = v0[45];
        uint64_t v32 = v0[46];
        sub_100066E04(v0[37], v32, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100066E04(v32, v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        uint64_t v11 = (void *)v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (void *)sub_100059C00(0, *(void *)(v83 + 16) + 1, 1, v83);
        }
        unint64_t v35 = v11[2];
        unint64_t v34 = v11[3];
        if (v35 >= v34 >> 1) {
          uint64_t v11 = (void *)sub_100059C00(v34 > 1, v35 + 1, 1, (unint64_t)v11);
        }
        uint64_t v36 = v0[45];
        v11[2] = v35 + 1;
        sub_100066E04(v36, (uint64_t)v11+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      }
      v10 += v81;
      uint64_t v2 = v82 - 1;
    }
    while (v82 != 1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v64 = v0[96];
  uint64_t v65 = v0[100];
  uint64_t v62 = v0[89];
  uint64_t v63 = v0[5];
  uint64_t v60 = v0[83];
  uint64_t v61 = v0[3];
  uint64_t v58 = v0[81];
  uint64_t v59 = v0[82];
  uint64_t v57 = v0[78];
  uint64_t v54 = v0[72];
  uint64_t v55 = v0[77];
  uint64_t v37 = (void *)v0[15];
  uint64_t v38 = v0[16];
  uint64_t v39 = (int *)v0[11];
  uint64_t v66 = v0[12];
  uint64_t v40 = v0[17];
  uint64_t v67 = v0[18];
  uint64_t v41 = v0[14];
  uint64_t v56 = v0[13];
  uint64_t v42 = v0[10];
  uint64_t v52 = v0[9];
  uint64_t v53 = v42;
  uint64_t v51 = v0[8];
  sub_10003F75C(v67, (uint64_t)v37 + v39[11], &qword_1001629E0);
  sub_10003F75C(v40, (uint64_t)v37 + v39[13], &qword_1001629E0);
  sub_10003F75C(v38, (uint64_t)v37 + v39[15], &qword_1001629E0);
  *uint64_t v37 = v54;
  v37[1] = v55;
  v37[2] = v57;
  v37[3] = v58;
  v37[4] = v59;
  v37[5] = v60;
  v37[6] = v61;
  v37[7] = v62;
  v37[8] = v63;
  *(void *)((char *)v37 + v39[12]) = v64;
  *(void *)((char *)v37 + v39[14]) = v65;
  *(void *)((char *)v37 + v39[16]) = v11;
  uint64_t v43 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  sub_100008C40((uint64_t)v37, v41, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  swift_retain();
  sub_1000A4454(v51);
  uint64_t v45 = static MainActor.shared.getter();
  unint64_t v46 = (*(unsigned __int8 *)(v66 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v47 = (void *)swift_allocObject();
  v47[2] = v45;
  v47[3] = &protocol witness table for MainActor;
  v47[4] = v44;
  sub_100066E04(v41, (uint64_t)v47 + v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  uint64_t v48 = (void *)((char *)v47 + ((v56 + v46 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v48 = v51;
  v48[1] = v52;
  swift_release();
  sub_1000C9558(v53, (uint64_t)&unk_1001629F8, (uint64_t)v47);
  swift_release();
  sub_10000C810((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  sub_10003F5D0(v38, &qword_1001629E0);
  sub_10003F5D0(v40, &qword_1001629E0);
  sub_10003F5D0(v67, &qword_1001629E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(void))v0[1];
  return v49();
}

uint64_t sub_1000B37B8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000B3810(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_10007B630;
  return sub_1000B041C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1000B38E4()
{
  swift_release();
  *(void *)(v0 + 288) = FLFollowUpModelObserver.followUpItem(with:)();
  return _swift_task_switch(sub_1000B395C, 0, 0);
}

uint64_t sub_1000B395C()
{
  uint64_t v2 = *(void **)(v0 + 288);
  if (!v2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    swift_release();
    unint64_t v4 = *(void *)(v0 + 256);
    goto LABEL_49;
  }
  id v116 = sub_1000AFCD0();
  if (v116)
  {
    uint64_t v115 = 0;
    LOBYTE(v3) = 0;
  }
  else
  {
    uint64_t v5 = sub_1000AFFF8();
    if (v6) {
      uint64_t v7 = (void *)v5;
    }
    else {
      uint64_t v7 = 0;
    }
    id v116 = v7;
    if (v6) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v115 = v8;
    if (v6) {
      LOBYTE(v3) = 1;
    }
    else {
      LOBYTE(v3) = -1;
    }
  }
  uint64_t v9 = v2;
  (*(void (**)(void, void, void))(v0 + 240))(*(void *)(v0 + 160), *(void *)(v0 + 216), *(void *)(v0 + 200));
  swift_storeEnumTagMultiPayload();
  id v10 = [v2 title];
  if (!v10) {
    goto LABEL_60;
  }
  uint64_t v11 = v10;
  char v113 = (char)v3;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  id v108 = v9;
  id v15 = [v9 informativeText];
  if (!v15)
  {
LABEL_61:
    sub_10006EB80(v116, v115, v113);
    __break(1u);
LABEL_62:
    sub_10006EB80(v116, v115, v1);
    __break(1u);
LABEL_63:
    sub_10006EB80(v116, v115, v113);
    __break(1u);
LABEL_64:
    sub_10006EB80(v116, v115, v113);
    __break(1u);
    return _swift_task_switch(v103, v104, v105);
  }
  uint64_t v16 = v15;
  unint64_t v1 = *(void *)(v0 + 160);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 112);
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  sub_100008C40(v1, v17, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v22 = v17 + *(int *)(v18 + 20);
  *(void *)uint64_t v22 = v116;
  *(void *)(v22 + 8) = v115;
  LOBYTE(v1) = v113;
  *(unsigned char *)(v22 + 16) = v113;
  *(void *)(v22 + 24) = v12;
  *(void *)(v22 + 32) = v14;
  *(void *)(v22 + 40) = v19;
  *(void *)(v22 + 48) = v21;
  type metadata accessor for PrimarySettingsListItemViewType();
  swift_storeEnumTagMultiPayload();
  sub_10006EB6C(v116, v115, v113);
  sub_10006EB6C(v116, v115, v113);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_100059C00(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v25 = *(void *)(v23 + 16);
  unint64_t v24 = *(void *)(v23 + 24);
  int64_t v26 = v25 + 1;
  if (v25 >= v24 >> 1) {
LABEL_36:
  }
    unint64_t v23 = sub_100059C00(v24 > 1, v26, 1, v23);
  uint64_t v27 = *(void *)(v0 + 136);
  uint64_t v28 = *(void *)(v0 + 120);
  *(void *)(v23 + 16) = v26;
  unint64_t v112 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v111 = *(void *)(v28 + 72);
  sub_100066E04(v27, v23 + v112 + v111 * v25, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  id v29 = [v108 actions];
  if (!v29) {
    goto LABEL_62;
  }
  uint64_t v30 = v29;
  sub_1000B4A08();
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_20;
    }
  }
  else
  {
    int64_t v26 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26)
    {
LABEL_20:
      uint64_t v31 = 0;
      unint64_t v114 = v1 & 0xC000000000000001;
      uint64_t v32 = &selRef_application_configurationForConnectingSceneSession_options_;
      int64_t v109 = v26;
      unint64_t v110 = v1;
      do
      {
        if (v114) {
          uint64_t v33 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v33 = (uint64_t *)*(id *)(v1 + 8 * v31 + 32);
        }
        uint64_t v3 = v33;
        unint64_t v25 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        id v34 = [v33 v32[205]];
        if (v34 || (id v34 = [v3 label]) != 0)
        {
          v117 = v3;
          unint64_t v35 = *(void (**)(uint64_t, uint64_t, unint64_t))(v0 + 240);
          uint64_t v36 = *(void *)(v0 + 216);
          unint64_t v1 = *(void *)(v0 + 200);
          uint64_t v37 = *(void *)(v0 + 152);

          uint64_t v38 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
          v35(v37, v36, v1);
          id v39 = [v3 v32[205]];
          if (!v39)
          {
            id v39 = [v3 label];
            if (!v39) {
              goto LABEL_59;
            }
          }
          unint64_t v40 = v23;
          uint64_t v41 = v3;
          uint64_t v3 = (uint64_t *)(v37 + v38);
          unint64_t v1 = *(void *)(v0 + 144);
          uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v44 = v43;

          *uint64_t v3 = v42;
          v3[1] = v44;
          swift_storeEnumTagMultiPayload();
          id v45 = [v41 label];
          if (!v45)
          {
            sub_10006EB80(v116, v115, v113);
            __break(1u);
LABEL_59:
            sub_10006EB80(v116, v115, v113);
            __break(1u);
LABEL_60:
            sub_10006EB80(v116, v115, (char)v3);
            __break(1u);
            goto LABEL_61;
          }
          unint64_t v46 = v45;
          uint64_t v47 = *(void *)(v0 + 152);
          uint64_t v48 = *(void *)(v0 + 128);
          uint64_t v49 = *(void *)(v0 + 112);
          uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v52 = v51;

          char v53 = FLFollowUpInformation.restrictionEnabled.getter();
          sub_100008C40(v47, v48, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          uint64_t v54 = v48 + *(int *)(v49 + 20);
          *(void *)uint64_t v54 = v116;
          *(void *)(v54 + 8) = v115;
          *(unsigned char *)(v54 + 16) = v113;
          *(void *)(v54 + 24) = v50;
          *(void *)(v54 + 32) = v52;
          *(unsigned char *)(v54 + 40) = v53 & 1;
          swift_storeEnumTagMultiPayload();
          sub_10006EB6C(v116, v115, v113);
          sub_10006EB6C(v116, v115, v113);
          unint64_t v23 = v40;
          unint64_t v56 = *(void *)(v40 + 16);
          unint64_t v55 = *(void *)(v40 + 24);
          swift_bridgeObjectRetain();
          if (v56 >= v55 >> 1) {
            unint64_t v23 = sub_100059C00(v55 > 1, v56 + 1, 1, v40);
          }
          unint64_t v1 = v110;
          uint64_t v32 = &selRef_application_configurationForConnectingSceneSession_options_;
          uint64_t v57 = *(void *)(v0 + 152);
          uint64_t v58 = *(void *)(v0 + 128);
          *(void *)(v23 + 16) = v56 + 1;
          sub_100066E04(v58, v23 + v112 + v56 * v111, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);

          sub_10006EB80(v116, v115, v113);
          swift_bridgeObjectRelease();
          sub_10000C810(v57, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          int64_t v26 = v109;
          unint64_t v25 = v31 + 1;
        }
        else
        {
        }
        ++v31;
      }
      while (v25 != v26);
    }
  }
  unint64_t v118 = v23;
  uint64_t v59 = *(unsigned int *)(v0 + 304);
  uint64_t v61 = *(void *)(v0 + 96);
  uint64_t v60 = *(void *)(v0 + 104);
  uint64_t v63 = *(void *)(v0 + 80);
  uint64_t v62 = *(void *)(v0 + 88);
  uint64_t v65 = *(void *)(v0 + 64);
  uint64_t v64 = *(void *)(v0 + 72);
  uint64_t v66 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  FLFollowUpInformation.groupIdentity.getter();
  FLFollowUpGroupIdentity.accountType.getter();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 104))(v64, v59, v66);
  LOBYTE(v59) = static FLAccountType.== infix(_:_:)();
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v67(v64, v66);
  v67(v63, v66);
  id v68 = [v108 uniqueIdentifier];
  v69 = v68;
  if (v59)
  {
    unint64_t v70 = v118;
    if (v68)
    {
      char v71 = 0;
      goto LABEL_43;
    }
    goto LABEL_63;
  }
  unint64_t v70 = v118;
  if (!v68) {
    goto LABEL_64;
  }
  char v71 = 1;
LABEL_43:
  uint64_t v72 = *(void *)(v0 + 48);
  uint64_t v73 = *(void *)(v0 + 32);
  uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v76 = v75;

  uint64_t v77 = v72 + *(int *)(v73 + 24);
  uint64_t v78 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 1, 1, v78);
  *(void *)uint64_t v72 = v74;
  *(void *)(v72 + 8) = v76;
  *(unsigned char *)(v72 + 16) = v71;
  *(void *)(v72 + 24) = 0;
  *(void *)(v72 + 32) = 0;
  *(void *)(v72 + *(int *)(v73 + 28)) = v70;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v4 = *(void *)(v0 + 256);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v4 = sub_100059D90(0, *(void *)(v4 + 16) + 1, 1, *(void *)(v0 + 256));
  }
  unint64_t v81 = *(void *)(v4 + 16);
  unint64_t v80 = *(void *)(v4 + 24);
  if (v81 >= v80 >> 1) {
    unint64_t v4 = sub_100059D90(v80 > 1, v81 + 1, 1, v4);
  }
  uint64_t v83 = *(void *)(v0 + 208);
  uint64_t v82 = *(void *)(v0 + 216);
  uint64_t v84 = *(void *)(v0 + 200);
  uint64_t v85 = *(void *)(v0 + 160);
  uint64_t v87 = *(void *)(v0 + 40);
  uint64_t v86 = *(void *)(v0 + 48);
  *(void *)(v4 + 16) = v81 + 1;
  sub_100066E04(v86, v4+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v81, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
  swift_release();

  sub_10006EB80(v116, v115, v113);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10006EB80(v116, v115, v113);
  sub_10000C810(v85, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
LABEL_49:
  while (1)
  {
    uint64_t v88 = *(void *)(v0 + 248) + 1;
    if (v88 == *(void *)(v0 + 224)) {
      break;
    }
    *(void *)(v0 + 248) = v88;
    *(void *)(v0 + 256) = v4;
    uint64_t v89 = *(unsigned int *)(v0 + 300);
    v90 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 240);
    uint64_t v91 = *(void *)(v0 + 216);
    uint64_t v93 = *(void *)(v0 + 192);
    uint64_t v92 = *(void *)(v0 + 200);
    uint64_t v95 = *(void *)(v0 + 176);
    uint64_t v94 = *(void *)(v0 + 184);
    uint64_t v96 = *(void *)(v0 + 168);
    unint64_t v97 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 296) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 296))
        + *(void *)(v0 + 232) * v88;
    *(void *)(v0 + 264) = (*(void *)(v0 + 208) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v90(v91, v97, v92);
    FLFollowUpInformation.renderStyle.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 104))(v94, v89, v96);
    LOBYTE(v91) = static FLRenderStyle.== infix(_:_:)();
    v98 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
    v98(v94, v96);
    v98(v93, v96);
    if (v91)
    {
      uint64_t v99 = *(void *)(*(void *)(v0 + 24) + 72);
      *(void *)(v0 + 272) = v99;
      if (v99)
      {
        type metadata accessor for MainActor();
        swift_retain();
        *(void *)(v0 + 280) = static MainActor.shared.getter();
        uint64_t v100 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v102 = v101;
        v103 = sub_1000B38E4;
        uint64_t v104 = v100;
        uint64_t v105 = v102;
        return _swift_task_switch(v103, v104, v105);
      }
    }
    (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v106 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v106(v4);
}

uint64_t sub_1000B4470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  type metadata accessor for FollowUpInformationProviderSnapshot();
  v7[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[10] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B4538, v9, v8);
}

uint64_t sub_1000B4538()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    unint64_t v1 = (uint64_t *)v0[9];
    sub_100008C40(v0[6], (uint64_t)v1, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10000990C(v1);
    swift_release();
  }
  uint64_t v2 = (void (*)(void))v0[7];
  if (v2) {
    v2(v0[6]);
  }
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000B461C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B4654()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B468C()
{
  unint64_t v1 = (int *)type metadata accessor for FollowUpInformationProviderSnapshot();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64) + v3;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  uint64_t v7 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = v4 + 7;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5 + v1[13];
  if (!v9(v11, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v13 = v5 + v1[15];
  if (!v9(v13, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v12)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v12 + 16, v2 | 7);
}

uint64_t sub_1000B48CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FollowUpInformationProviderSnapshot() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_10000ADF0;
  return sub_1000B4470(a1, v6, v7, v8, v9, v11, v12);
}

unint64_t sub_1000B4A08()
{
  unint64_t result = qword_100162A00;
  if (!qword_100162A00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100162A00);
  }
  return result;
}

unint64_t sub_1000B4A48()
{
  unint64_t result = qword_100161650;
  if (!qword_100161650)
  {
    type metadata accessor for AnyCancellable();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161650);
  }
  return result;
}

uint64_t *sub_1000B4AA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    uint64_t v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    uint64_t v25 = a2[8];
    uint64_t v10 = a3[11];
    __dst = (char *)a1 + v10;
    unint64_t v24 = (char *)a2 + v10;
    a1[7] = a2[7];
    a1[8] = v25;
    uint64_t v11 = type metadata accessor for FLFollowUpGroupSectionElement();
    uint64_t v26 = *(void *)(v11 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v24, 1, v11))
    {
      uint64_t v13 = sub_100046B9C(&qword_1001629E0);
      memcpy(__dst, v24, *(void *)(*(void *)(v13 - 8) + 64));
      uint64_t v14 = v26;
    }
    else
    {
      uint64_t v14 = v26;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = a3[13];
    *(uint64_t *)((char *)v6 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    uint64_t v16 = (char *)v6 + v15;
    uint64_t v17 = (char *)a2 + v15;
    swift_bridgeObjectRetain();
    if (v12(v17, 1, v11))
    {
      uint64_t v18 = sub_100046B9C(&qword_1001629E0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = a3[15];
    *(uint64_t *)((char *)v6 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    uint64_t v20 = (char *)v6 + v19;
    uint64_t v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    if (v12(v21, 1, v11))
    {
      uint64_t v22 = sub_100046B9C(&qword_1001629E0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v21, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v11);
    }
    *(uint64_t *)((char *)v6 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    swift_bridgeObjectRetain();
  }
  return v6;
}

char *sub_1000B4DF0(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  *((void *)a1 + 2) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[11];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100046B9C(&qword_1001629E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[12]] = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[13];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100046B9C(&qword_1001629E0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  *(void *)&a1[a3[14]] = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[15];
  uint64_t v22 = &a1[v21];
  unint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    uint64_t v26 = sub_100046B9C(&qword_1001629E0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
LABEL_19:
  *(void *)&a1[a3[16]] = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B5274(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = a3[11];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v11 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100046B9C(&qword_1001629E0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    uint64_t v18 = sub_100046B9C(&qword_1001629E0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  if (v13((const void *)(a2 + v19), 1, v11))
  {
    uint64_t v22 = sub_100046B9C(&qword_1001629E0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_1000B5514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B5528);
}

uint64_t sub_1000B5528(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100046B9C(&qword_1001629E0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000B55DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B55F0);
}

void *sub_1000B55F0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100046B9C(&qword_1001629E0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000B569C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v280 = a3;
  uint64_t v291 = a1;
  uint64_t v265 = a5;
  uint64_t v251 = type metadata accessor for FollowUpInformationProviderSnapshot();
  uint64_t v8 = __chkstk_darwin(v251);
  v250 = (char *)&v246 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v256 = (char *)&v246 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v263 = (char *)&v246 - v13;
  __chkstk_darwin(v12);
  v275 = (char *)&v246 - v14;
  uint64_t v292 = type metadata accessor for FLFollowUpInformation();
  uint64_t v15 = *(void *)(v292 - 8);
  uint64_t v16 = __chkstk_darwin(v292);
  v258 = (char *)&v246 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v254 = (char *)&v246 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v269 = (char *)&v246 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v261 = (char *)&v246 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v277 = (char *)&v246 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v278 = (char *)&v246 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v282 = (char *)&v246 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v279 = (char *)&v246 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v286 = (char *)&v246 - v33;
  __chkstk_darwin(v32);
  v283 = (char *)&v246 - v34;
  uint64_t v35 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v271 = *(void *)(v35 - 8);
  uint64_t v36 = __chkstk_darwin(v35);
  v253 = (char *)&v246 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  v260 = (char *)&v246 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v270 = (char *)&v246 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v284 = (uint64_t)&v246 - v43;
  __chkstk_darwin(v42);
  id v45 = (char *)&v246 - v44;
  uint64_t v274 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v46 = *(void *)(v274 - 8);
  uint64_t v47 = __chkstk_darwin(v274);
  uint64_t v264 = (uint64_t)&v246 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v276 = (uint64_t)&v246 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v281 = (uint64_t)&v246 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v285 = (uint64_t)&v246 - v54;
  __chkstk_darwin(v53);
  unint64_t v56 = (char *)&v246 - v55;
  uint64_t v57 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  uint64_t v58 = __chkstk_darwin(v57 - 8);
  uint64_t v247 = (uint64_t)&v246 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v248 = (uint64_t)&v246 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v252 = (uint64_t)&v246 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v257 = (uint64_t)&v246 - v65;
  __chkstk_darwin(v64);
  v266 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v246 - v66);
  uint64_t v67 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v68 = __chkstk_darwin(v67 - 8);
  v249 = (char *)&v246 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __chkstk_darwin(v68);
  v255 = (char *)&v246 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v262 = (uint64_t)&v246 - v73;
  __chkstk_darwin(v72);
  uint64_t v272 = (uint64_t)&v246 - v74;
  v268 = v5;
  uint64_t v75 = *v5;
  uint64_t v76 = a2;
  uint64_t v77 = *(void *)(v75 + 16);
  uint64_t v287 = a4;
  uint64_t v288 = v76;
  uint64_t v290 = v35;
  uint64_t v259 = v15;
  uint64_t v273 = v46;
  v267 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v75;
  if (!v77)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_27:
    uint64_t v97 = v273;
    v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v273 + 56);
    uint64_t v99 = v266;
    uint64_t v100 = v266;
    uint64_t v101 = 1;
    goto LABEL_31;
  }
  uint64_t v78 = v75 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
  v79 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  unint64_t v80 = (void (**)(char *, uint64_t))(v15 + 8);
  v289 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v81 = v292;
  while (1)
  {
    sub_10003D7B0(v78, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D7B0((uint64_t)v56, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2) {
      break;
    }
    if (EnumCaseMultiPayload)
    {
      sub_10003B938((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
    else
    {
      uint64_t v83 = v283;
      (*v79)(v283, v45, v81);
      uint64_t v84 = FLFollowUpInformation.itemIdentifier.getter();
      if (v85)
      {
        if (v84 == v291 && v85 == v288)
        {
          (*v80)(v83, v81);
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v87 = v83;
        char v88 = v86;
        (*v80)(v87, v81);
        swift_bridgeObjectRelease();
        if (v88) {
          goto LABEL_30;
        }
      }
      else
      {
        (*v80)(v83, v81);
      }
    }
LABEL_4:
    sub_10003B938((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    v78 += (uint64_t)v289;
    if (!--v77) {
      goto LABEL_27;
    }
  }
  uint64_t v89 = &v45[*(int *)(sub_100046B9C(&qword_10015F7F8) + 48)];
  uint64_t v91 = *(void *)v89;
  uint64_t v90 = *((void *)v89 + 1);
  (*v79)(v286, v45, v81);
  uint64_t v92 = FLFollowUpInformation.itemIdentifier.getter();
  if (!v93) {
    goto LABEL_25;
  }
  if (v92 == v291 && v93 == v288)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v94 & 1) == 0) {
      goto LABEL_25;
    }
  }
  if (!v287)
  {
LABEL_25:
    uint64_t v81 = v292;
    (*v80)(v286, v292);
    swift_bridgeObjectRelease();
    uint64_t v35 = v290;
    goto LABEL_4;
  }
  if (v91 != v280 || v90 != v287)
  {
    char v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v81 = v292;
    (*v80)(v286, v292);
    swift_bridgeObjectRelease();
    uint64_t v35 = v290;
    if (v96) {
      goto LABEL_30;
    }
    goto LABEL_4;
  }
  (*v80)(v286, v292);
  swift_bridgeObjectRelease();
  uint64_t v35 = v290;
LABEL_30:
  uint64_t v99 = v266;
  sub_1000597CC((uint64_t)v56, (uint64_t)v266, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v97 = v273;
  v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v273 + 56);
  uint64_t v100 = v99;
  uint64_t v101 = 0;
LABEL_31:
  uint64_t v102 = v274;
  v289 = v98;
  v98((uint64_t)v100, v101, 1, v274);
  swift_bridgeObjectRelease();
  v103 = *(char **)(v97 + 48);
  v286 = (char *)(v97 + 48);
  v283 = v103;
  int v104 = ((uint64_t (*)(void (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v103)(v99, 1, v102);
  uint64_t v105 = (uint64_t)v275;
  uint64_t v106 = v272;
  v107 = v278;
  uint64_t v108 = v271;
  if (v104 == 1)
  {
    sub_10003F5D0((uint64_t)v99, (uint64_t *)&unk_100163AD0);
    int64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56);
    v109(v106, 1, 1, v35);
  }
  else
  {
    sub_10003D7B0((uint64_t)v99, v272, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003B938((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    int64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56);
    v109(v106, 0, 1, v35);
  }
  sub_10003D7B0((uint64_t)v268, v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  unint64_t v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  v268 = (void *)(v108 + 48);
  v267 = v110;
  if (v110(v106, 1, v35) != 1)
  {
    sub_10003B938(v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v137 = v106;
    uint64_t v138 = v265;
    sub_1000597CC(v137, v265, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v109)(v138, 0, 1, v35);
  }
  v266 = v109;
  uint64_t v111 = *(void *)(v105 + 24);
  uint64_t v112 = *(void *)(v111 + 16);
  if (!v112)
  {
    swift_bridgeObjectRetain();
    uint64_t v140 = 1;
LABEL_63:
    uint64_t v141 = v257;
    goto LABEL_67;
  }
  uint64_t v113 = v111 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  unint64_t v114 = (void (**)(char *, uint64_t, uint64_t))(v259 + 32);
  uint64_t v115 = v97;
  id v116 = (void (**)(char *, uint64_t))(v259 + 8);
  uint64_t v117 = *(void *)(v115 + 72);
  swift_bridgeObjectRetain();
  unint64_t v118 = v279;
  uint64_t v119 = v285;
  while (2)
  {
    sub_10003D7B0(v113, v119, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v120 = v284;
    sub_10003D7B0(v119, v284, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    int v121 = swift_getEnumCaseMultiPayload();
    if (v121 != 2)
    {
      if (v121)
      {
        sub_10003B938(v120, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      }
      else
      {
        uint64_t v122 = v120;
        uint64_t v123 = v292;
        (*v114)(v118, v122, v292);
        uint64_t v124 = FLFollowUpInformation.itemIdentifier.getter();
        if (v125)
        {
          if (v124 == v291 && v125 == v288)
          {
            (*v116)(v118, v123);
            swift_bridgeObjectRelease();
            goto LABEL_66;
          }
          char v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v127 = v123;
          char v128 = v126;
          (*v116)(v118, v127);
          swift_bridgeObjectRelease();
          if (v128) {
            goto LABEL_66;
          }
        }
        else
        {
          (*v116)(v118, v123);
        }
      }
      goto LABEL_38;
    }
    v129 = (uint64_t *)(v120 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
    uint64_t v131 = *v129;
    uint64_t v130 = v129[1];
    (*v114)(v282, v120, v292);
    uint64_t v132 = FLFollowUpInformation.itemIdentifier.getter();
    if (!v133) {
      goto LABEL_59;
    }
    if (v132 == v291 && v133 == v288)
    {
      swift_bridgeObjectRelease();
      break;
    }
    char v134 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v134 & 1) == 0)
    {
LABEL_59:
      (*v116)(v282, v292);
      swift_bridgeObjectRelease();
      uint64_t v35 = v290;
      unint64_t v118 = v279;
LABEL_38:
      uint64_t v119 = v285;
      sub_10003B938(v285, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      v113 += v117;
      if (!--v112)
      {
        uint64_t v140 = 1;
        uint64_t v102 = v274;
        uint64_t v105 = (uint64_t)v275;
        uint64_t v97 = v273;
        v107 = v278;
        uint64_t v108 = v271;
        goto LABEL_63;
      }
      continue;
    }
    break;
  }
  if (!v287) {
    goto LABEL_59;
  }
  if (v131 != v280 || v130 != v287)
  {
    char v136 = _stringCompareWithSmolCheck(_:_:expecting:)();
    (*v116)(v282, v292);
    swift_bridgeObjectRelease();
    uint64_t v35 = v290;
    unint64_t v118 = v279;
    if (v136) {
      goto LABEL_66;
    }
    goto LABEL_38;
  }
  (*v116)(v282, v292);
  swift_bridgeObjectRelease();
  uint64_t v35 = v290;
LABEL_66:
  uint64_t v141 = v257;
  sub_1000597CC(v285, v257, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v140 = 0;
  uint64_t v102 = v274;
  uint64_t v105 = (uint64_t)v275;
  uint64_t v97 = v273;
  v107 = v278;
  uint64_t v108 = v271;
LABEL_67:
  uint64_t v285 = v97 + 56;
  v289(v141, v140, 1, v102);
  swift_bridgeObjectRelease();
  int v142 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v283)(v141, 1, v102);
  uint64_t v143 = v262;
  if (v142 == 1)
  {
    sub_10003F5D0(v141, (uint64_t *)&unk_100163AD0);
    uint64_t v144 = 1;
  }
  else
  {
    sub_10003D7B0(v141, v262, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003B938(v141, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v144 = 0;
  }
  uint64_t v145 = (uint64_t)v263;
  uint64_t v146 = v108 + 56;
  v147 = v266;
  v266(v143, v144, 1, v35);
  sub_10003D7B0(v105, v145, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  if (v267(v143, 1, v35) != 1)
  {
    uint64_t v170 = v143;
    sub_10003B938(v145, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10003B938(v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v171 = v265;
    sub_1000597CC(v170, v265, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    v147(v171, 0, 1, v35);
    uint64_t v172 = v272;
    goto LABEL_184;
  }
  uint64_t v284 = v146;
  uint64_t v148 = *(void *)(v145 + 56);
  uint64_t v149 = *(void *)(v148 + 16);
  if (!v149)
  {
    swift_bridgeObjectRetain();
    uint64_t v173 = 1;
    uint64_t v174 = v290;
    uint64_t v175 = (uint64_t)v256;
    uint64_t v176 = (uint64_t)v255;
LABEL_99:
    uint64_t v177 = v252;
    goto LABEL_104;
  }
  uint64_t v150 = v148 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  v151 = (void (**)(char *, uint64_t, uint64_t))(v259 + 32);
  uint64_t v152 = v97;
  v153 = (void (**)(char *, uint64_t))(v259 + 8);
  uint64_t v154 = *(void *)(v152 + 72);
  swift_bridgeObjectRetain();
  uint64_t v155 = (uint64_t)v270;
  uint64_t v156 = v281;
  while (2)
  {
    sub_10003D7B0(v150, v156, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D7B0(v156, v155, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    int v157 = swift_getEnumCaseMultiPayload();
    if (v157 != 2)
    {
      if (v157)
      {
        sub_10003B938(v155, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      }
      else
      {
        uint64_t v158 = v292;
        (*v151)(v107, v155, v292);
        uint64_t v159 = FLFollowUpInformation.itemIdentifier.getter();
        if (v160)
        {
          if (v159 == v291 && v160 == v288)
          {
            (*v153)(v107, v292);
            goto LABEL_102;
          }
          char v161 = _stringCompareWithSmolCheck(_:_:expecting:)();
          (*v153)(v107, v292);
          swift_bridgeObjectRelease();
          if (v161) {
            goto LABEL_103;
          }
        }
        else
        {
          (*v153)(v107, v158);
        }
      }
      goto LABEL_74;
    }
    v162 = (uint64_t *)(v155 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
    uint64_t v164 = *v162;
    uint64_t v163 = v162[1];
    (*v151)(v277, v155, v292);
    uint64_t v165 = FLFollowUpInformation.itemIdentifier.getter();
    if (!v166) {
      goto LABEL_95;
    }
    if (v165 == v291 && v166 == v288)
    {
      swift_bridgeObjectRelease();
      break;
    }
    char v167 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v167 & 1) == 0)
    {
LABEL_95:
      (*v153)(v277, v292);
      swift_bridgeObjectRelease();
      v107 = v278;
      uint64_t v155 = (uint64_t)v270;
LABEL_74:
      uint64_t v156 = v281;
      sub_10003B938(v281, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      v150 += v154;
      if (!--v149)
      {
        uint64_t v173 = 1;
        uint64_t v174 = v290;
        uint64_t v102 = v274;
        uint64_t v105 = (uint64_t)v275;
        uint64_t v145 = (uint64_t)v263;
        uint64_t v175 = (uint64_t)v256;
        uint64_t v176 = (uint64_t)v255;
        uint64_t v97 = v273;
        goto LABEL_99;
      }
      continue;
    }
    break;
  }
  if (!v287) {
    goto LABEL_95;
  }
  if (v164 != v280 || v163 != v287)
  {
    char v169 = _stringCompareWithSmolCheck(_:_:expecting:)();
    (*v153)(v277, v292);
    swift_bridgeObjectRelease();
    v107 = v278;
    uint64_t v155 = (uint64_t)v270;
    if (v169) {
      goto LABEL_103;
    }
    goto LABEL_74;
  }
  (*v153)(v277, v292);
LABEL_102:
  swift_bridgeObjectRelease();
LABEL_103:
  uint64_t v177 = v252;
  sub_1000597CC(v281, v252, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v173 = 0;
  uint64_t v174 = v290;
  uint64_t v102 = v274;
  uint64_t v105 = (uint64_t)v275;
  uint64_t v145 = (uint64_t)v263;
  uint64_t v175 = (uint64_t)v256;
  uint64_t v176 = (uint64_t)v255;
  uint64_t v97 = v273;
LABEL_104:
  v289(v177, v173, 1, v102);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v283)(v177, 1, v102) == 1)
  {
    sub_10003F5D0(v177, (uint64_t *)&unk_100163AD0);
    uint64_t v178 = 1;
  }
  else
  {
    sub_10003D7B0(v177, v176, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003B938(v177, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v178 = 0;
  }
  v179 = v266;
  v266(v176, v178, 1, v174);
  sub_10003D7B0(v145, v175, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  if (v267(v176, 1, v174) != 1)
  {
    sub_10003B938(v175, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10003B938(v145, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10003B938(v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v203 = v265;
    sub_1000597CC(v176, v265, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    v179(v203, 0, 1, v174);
    uint64_t v172 = v272;
    goto LABEL_183;
  }
  uint64_t v180 = *(void *)(v175 + *(int *)(v251 + 48));
  uint64_t v181 = *(void *)(v180 + 16);
  if (!v181)
  {
    swift_bridgeObjectRetain();
    uint64_t v204 = 1;
    uint64_t v205 = v290;
    uint64_t v206 = (uint64_t)v256;
    uint64_t v207 = (uint64_t)v250;
    uint64_t v208 = (uint64_t)v249;
LABEL_136:
    uint64_t v209 = v248;
    goto LABEL_141;
  }
  uint64_t v182 = v180 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  v183 = (void (**)(char *, uint64_t, uint64_t))(v259 + 32);
  uint64_t v184 = v97;
  v185 = (void (**)(char *, uint64_t))(v259 + 8);
  uint64_t v186 = *(void *)(v184 + 72);
  swift_bridgeObjectRetain();
  v187 = v261;
  uint64_t v188 = (uint64_t)v260;
  uint64_t v189 = v276;
  while (2)
  {
    sub_10003D7B0(v182, v189, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D7B0(v189, v188, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    int v190 = swift_getEnumCaseMultiPayload();
    if (v190 != 2)
    {
      if (v190)
      {
        sub_10003B938(v188, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      }
      else
      {
        uint64_t v191 = v292;
        (*v183)(v187, v188, v292);
        uint64_t v192 = FLFollowUpInformation.itemIdentifier.getter();
        if (v193)
        {
          if (v192 == v291 && v193 == v288)
          {
            (*v185)(v187, v292);
            goto LABEL_139;
          }
          char v194 = _stringCompareWithSmolCheck(_:_:expecting:)();
          (*v185)(v187, v292);
          swift_bridgeObjectRelease();
          if (v194) {
            goto LABEL_140;
          }
        }
        else
        {
          (*v185)(v187, v191);
        }
      }
      goto LABEL_111;
    }
    v195 = (uint64_t *)(v188 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
    uint64_t v197 = *v195;
    uint64_t v196 = v195[1];
    (*v183)(v269, v188, v292);
    uint64_t v198 = FLFollowUpInformation.itemIdentifier.getter();
    if (!v199) {
      goto LABEL_132;
    }
    if (v198 == v291 && v199 == v288)
    {
      swift_bridgeObjectRelease();
      break;
    }
    char v200 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v200 & 1) == 0)
    {
LABEL_132:
      (*v185)(v269, v292);
      swift_bridgeObjectRelease();
      v187 = v261;
      uint64_t v188 = (uint64_t)v260;
LABEL_111:
      uint64_t v189 = v276;
      sub_10003B938(v276, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      v182 += v186;
      if (!--v181)
      {
        uint64_t v204 = 1;
        uint64_t v205 = v290;
        uint64_t v102 = v274;
        uint64_t v105 = (uint64_t)v275;
        uint64_t v145 = (uint64_t)v263;
        uint64_t v206 = (uint64_t)v256;
        uint64_t v207 = (uint64_t)v250;
        uint64_t v208 = (uint64_t)v249;
        uint64_t v97 = v273;
        goto LABEL_136;
      }
      continue;
    }
    break;
  }
  if (!v287) {
    goto LABEL_132;
  }
  if (v197 != v280 || v196 != v287)
  {
    char v202 = _stringCompareWithSmolCheck(_:_:expecting:)();
    (*v185)(v269, v292);
    swift_bridgeObjectRelease();
    v187 = v261;
    uint64_t v188 = (uint64_t)v260;
    if (v202) {
      goto LABEL_140;
    }
    goto LABEL_111;
  }
  (*v185)(v269, v292);
LABEL_139:
  swift_bridgeObjectRelease();
LABEL_140:
  uint64_t v209 = v248;
  sub_1000597CC(v276, v248, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v204 = 0;
  uint64_t v205 = v290;
  uint64_t v102 = v274;
  uint64_t v105 = (uint64_t)v275;
  uint64_t v145 = (uint64_t)v263;
  uint64_t v206 = (uint64_t)v256;
  uint64_t v207 = (uint64_t)v250;
  uint64_t v208 = (uint64_t)v249;
  uint64_t v97 = v273;
LABEL_141:
  v289(v209, v204, 1, v102);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v283)(v209, 1, v102) == 1)
  {
    sub_10003F5D0(v209, (uint64_t *)&unk_100163AD0);
    uint64_t v210 = 1;
  }
  else
  {
    sub_10003D7B0(v209, v208, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003B938(v209, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v210 = 0;
  }
  v211 = v266;
  v266(v208, v210, 1, v205);
  sub_10003D7B0(v206, v207, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  if (v267(v208, 1, v205) != 1)
  {
    sub_10003B938(v207, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10003B938(v206, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10003B938(v145, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    sub_10003B938(v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v235 = v265;
    sub_1000597CC(v208, v265, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    v211(v235, 0, 1, v205);
    uint64_t v172 = v272;
    uint64_t v236 = (uint64_t)v255;
    goto LABEL_182;
  }
  uint64_t v212 = *(void *)(v207 + *(int *)(v251 + 56));
  uint64_t v213 = *(void *)(v212 + 16);
  if (!v213)
  {
    swift_bridgeObjectRetain();
    uint64_t v237 = 1;
    uint64_t v238 = v290;
    goto LABEL_178;
  }
  uint64_t v214 = v212 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  uint64_t v215 = v97;
  v216 = (void (**)(char *, uint64_t, uint64_t))(v259 + 32);
  v217 = (void (**)(char *, uint64_t))(v259 + 8);
  uint64_t v218 = *(void *)(v215 + 72);
  swift_bridgeObjectRetain();
  v219 = v254;
  uint64_t v220 = (uint64_t)v253;
  uint64_t v221 = v264;
  while (2)
  {
    sub_10003D7B0(v214, v221, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D7B0(v221, v220, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    int v222 = swift_getEnumCaseMultiPayload();
    if (v222 != 2)
    {
      if (v222)
      {
        sub_10003B938(v220, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      }
      else
      {
        uint64_t v223 = v292;
        (*v216)(v219, v220, v292);
        uint64_t v224 = FLFollowUpInformation.itemIdentifier.getter();
        if (v225)
        {
          if (v224 == v291 && v225 == v288)
          {
            (*v217)(v219, v292);
            goto LABEL_175;
          }
          char v226 = _stringCompareWithSmolCheck(_:_:expecting:)();
          (*v217)(v219, v292);
          swift_bridgeObjectRelease();
          if (v226) {
            goto LABEL_176;
          }
        }
        else
        {
          (*v217)(v219, v223);
        }
      }
      goto LABEL_148;
    }
    v227 = (uint64_t *)(v220 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
    uint64_t v229 = *v227;
    uint64_t v228 = v227[1];
    (*v216)(v258, v220, v292);
    uint64_t v230 = FLFollowUpInformation.itemIdentifier.getter();
    if (!v231) {
      goto LABEL_169;
    }
    if (v230 == v291 && v231 == v288)
    {
      swift_bridgeObjectRelease();
      break;
    }
    char v232 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v232 & 1) == 0)
    {
LABEL_169:
      (*v217)(v258, v292);
      swift_bridgeObjectRelease();
      v219 = v254;
      uint64_t v220 = (uint64_t)v253;
LABEL_148:
      uint64_t v221 = v264;
      sub_10003B938(v264, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      v214 += v218;
      if (!--v213)
      {
        uint64_t v237 = 1;
        goto LABEL_177;
      }
      continue;
    }
    break;
  }
  if (!v287) {
    goto LABEL_169;
  }
  if (v229 != v280 || v228 != v287)
  {
    char v234 = _stringCompareWithSmolCheck(_:_:expecting:)();
    (*v217)(v258, v292);
    swift_bridgeObjectRelease();
    v219 = v254;
    uint64_t v220 = (uint64_t)v253;
    if (v234) {
      goto LABEL_176;
    }
    goto LABEL_148;
  }
  (*v217)(v258, v292);
LABEL_175:
  swift_bridgeObjectRelease();
LABEL_176:
  sub_1000597CC(v264, v247, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v237 = 0;
LABEL_177:
  uint64_t v238 = v290;
  uint64_t v102 = v274;
  uint64_t v105 = (uint64_t)v275;
  uint64_t v145 = (uint64_t)v263;
LABEL_178:
  uint64_t v239 = (uint64_t)v256;
  uint64_t v240 = (uint64_t)v250;
  uint64_t v236 = (uint64_t)v255;
  uint64_t v241 = (uint64_t)v249;
  uint64_t v242 = v247;
  v289(v247, v237, 1, v102);
  swift_bridgeObjectRelease();
  sub_10003B938(v240, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  sub_10003B938(v239, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  sub_10003B938(v145, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  sub_10003B938(v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v283)(v242, 1, v102) == 1)
  {
    sub_10003F5D0(v242, (uint64_t *)&unk_100163AD0);
    uint64_t v243 = 1;
    uint64_t v244 = v265;
  }
  else
  {
    uint64_t v245 = v265;
    sub_10003D7B0(v242, v265, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003B938(v242, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v244 = v245;
    uint64_t v243 = 0;
  }
  uint64_t v172 = v272;
  v266(v244, v243, 1, v238);
  sub_10003F5D0(v241, (uint64_t *)&unk_100161530);
LABEL_182:
  sub_10003F5D0(v236, (uint64_t *)&unk_100161530);
LABEL_183:
  sub_10003F5D0(v262, (uint64_t *)&unk_100161530);
LABEL_184:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10003F5D0(v172, (uint64_t *)&unk_100161530);
}

uint64_t sub_1000B77F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for SearchResult();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v35 = *(void *)(v8 + 72);
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  while (2)
  {
    sub_10003D7B0(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchResult);
    sub_10003D7B0(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SearchResult);
    if (sub_1000460F4((uint64_t)v10, (uint64_t)v7) & 1) != 0 && (static URL.== infix(_:_:)())
    {
      uint64_t v14 = v4[6];
      uint64_t v15 = *(void *)&v10[v14];
      uint64_t v16 = *(void *)&v10[v14 + 8];
      uint64_t v17 = &v7[v14];
      BOOL v18 = v15 == *(void *)v17 && v16 == *((void *)v17 + 1);
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v19 = v4[7];
        uint64_t v20 = &v10[v19];
        uint64_t v21 = *(void *)&v10[v19 + 8];
        uint64_t v22 = &v7[v19];
        uint64_t v23 = *((void *)v22 + 1);
        if (v21)
        {
          if (!v23) {
            break;
          }
          BOOL v24 = *(void *)v20 == *(void *)v22 && v21 == v23;
          if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
LABEL_24:
          if (*(void *)&v10[v4[8]] == *(void *)&v7[v4[8]])
          {
            uint64_t v25 = v4[9];
            uint64_t v27 = *(void **)&v10[v25];
            uint64_t v26 = *(void *)&v10[v25 + 8];
            uint64_t v28 = v10[v25 + 16];
            uint64_t v29 = &v7[v25];
            unint64_t v31 = *(void *)v29;
            uint64_t v30 = *((void *)v29 + 1);
            int v32 = v29[16];
            switch(v28)
            {
              case 1:
                if (v32 != 1) {
                  goto LABEL_37;
                }
                goto LABEL_32;
              case 2:
                if (v32 != 2) {
                  goto LABEL_37;
                }
LABEL_32:
                if (v27 == (void *)v31 && v26 == v30 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  goto LABEL_7;
                }
                goto LABEL_37;
              case 3:
                if (v32 != 3 || v30 | v31) {
                  goto LABEL_37;
                }
                goto LABEL_7;
              default:
                if (v32) {
                  goto LABEL_37;
                }
                sub_10006E244();
                sub_100047728(v27, v26, 0);
                sub_100047728((id)v31, v30, 0);
                char v33 = static NSObject.== infix(_:_:)();
                sub_100046F04((void *)v31, v30, 0);
                sub_100046F04(v27, v26, 0);
                if ((v33 & 1) == 0) {
                  goto LABEL_37;
                }
LABEL_7:
                sub_10003B938((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SearchResult);
                sub_10003B938((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchResult);
                a1 = v36;
                v12 += v35;
                uint64_t result = 1;
                --v11;
                a2 = v37;
                if (v11) {
                  continue;
                }
                return result;
            }
          }
          break;
        }
        if (!v23) {
          goto LABEL_24;
        }
      }
    }
    break;
  }
LABEL_37:
  sub_10003B938((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SearchResult);
  sub_10003B938((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchResult);
  return 0;
}

uint64_t sub_1000B7B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      int v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_1000B7D90(&qword_100162AE0, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
        BOOL v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1000B7D90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B7DD8()
{
  sub_10003DC0C(v0 + OBJC_IVAR____TtC11SettingsApp22iCloudListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_1000B7E60()
{
  return type metadata accessor for iCloudListItemProvider();
}

uint64_t sub_1000B7E68@<X0>(uint64_t a1@<X8>)
{
  return sub_1000578D8(*v1 + OBJC_IVAR____TtC11SettingsApp22iCloudListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000B7F5C()
{
  return type metadata accessor for AppleAccountSignInSheet.Coordinator(0);
}

uint64_t type metadata accessor for AppleAccountSignInSheet.Coordinator(uint64_t a1)
{
  return sub_100036190(a1, (uint64_t *)&unk_100162BD8);
}

uint64_t sub_1000B7F84()
{
  uint64_t result = type metadata accessor for DismissAction();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1000B8020()
{
  id v0 = [objc_allocWithZone((Class)AAUISignInController) init];
  sub_100046B9C(&qword_100162D08);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v0 setDelegate:v2];

  return v0;
}

uint64_t sub_1000B80A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DismissAction();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EFA74((uint64_t)v8);
  uint64_t v9 = (uint64_t *)(v2 + *(int *)(a1 + 20));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = (objc_class *)type metadata accessor for AppleAccountSignInSheet.Coordinator(0);
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v13[OBJC_IVAR____TtCV11SettingsApp23AppleAccountSignInSheet11Coordinator_dismissAction], v8, v5);
  uint64_t v14 = &v13[OBJC_IVAR____TtCV11SettingsApp23AppleAccountSignInSheet11Coordinator_onSuccess];
  *(void *)uint64_t v14 = v11;
  *((void *)v14 + 1) = v10;
  v17.receiver = v13;
  v17.super_class = v12;
  swift_retain();
  id v15 = [super init];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v15;
  return result;
}

uint64_t sub_1000B8200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B8CD4(&qword_100162D00);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000B8280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B8CD4(&qword_100162D00);

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000B8300()
{
}

unint64_t sub_1000B8438()
{
  unint64_t result = qword_100162C48;
  if (!qword_100162C48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100162C48);
  }
  return result;
}

void sub_1000B8478(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_10009F1DC(v4, v5), (v7 & 1) != 0))
  {
    id v8 = *(id *)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRelease();
    if ([v8 success]) {
      (*(void (**)(void))(v2 + OBJC_IVAR____TtCV11SettingsApp23AppleAccountSignInSheet11Coordinator_onSuccess))();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  DismissAction.callAsFunction()();
}

uint64_t *sub_1000B8530(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100046B9C((uint64_t *)&unk_100162C50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1000B8654(uint64_t a1)
{
  sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_1000B86F8(void *a1, void *a2, uint64_t a3)
{
  sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

void *sub_1000B87D0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000B88C4((uint64_t)a1);
    sub_100046B9C((uint64_t *)&unk_100162C50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000B88C4(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100162C50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1000B8924(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1000B89F8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000B88C4((uint64_t)a1);
    uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100162C50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_1000B8AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B8AFC);
}

uint64_t sub_1000B8AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_100160380);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000B8BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B8BD4);
}

uint64_t sub_1000B8BD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100046B9C(&qword_100160380);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000B8C94()
{
  return sub_1000B8CD4(&qword_100162CF8);
}

void *sub_1000B8CC8()
{
  return &protocol witness table for Never;
}

uint64_t sub_1000B8CD4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AppleAccountSignInSheet(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000B8D18()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [self defaultCenter];
  id v3 = v0;
  uint64_t v4 = (void *)static FamilySettingsFactory.FamilySettingsViewsHaveChanged.getter();
  [v2 removeObserver:v3 name:v4 object:0];

  v6.receiver = v3;
  v6.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1000B8EF8()
{
  return type metadata accessor for PrimaryAppleAccountListSectionProvider();
}

uint64_t sub_1000B8F30()
{
  return _swift_deallocObject(v0, 32, 7);
}

void destroy for PrimaryAppleAccountStatus(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v2 = *(void **)(a1 + 40);
  }
}

uint64_t initializeWithCopy for PrimaryAppleAccountStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    int v5 = *(void **)(a2 + 40);
    *(void *)(a1 + 40) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = v5;
  }
  return a1;
}

uint64_t assignWithCopy for PrimaryAppleAccountStatus(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v8 = (void *)*((void *)a2 + 5);
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v9 = v8;
      return a1;
    }
LABEL_7:
    long long v10 = *a2;
    long long v11 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  int v5 = *(void **)(a1 + 40);
  id v6 = (void *)*((void *)a2 + 5);
  *(void *)(a1 + 40) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for PrimaryAppleAccountStatus(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for PrimaryAppleAccountStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PrimaryAppleAccountStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

double sub_1000B92B8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

unint64_t sub_1000B92EC()
{
  unint64_t result = qword_100162DF8;
  if (!qword_100162DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162DF8);
  }
  return result;
}

void sub_1000B9340()
{
  sub_10003CE28(v0, (uint64_t)v5);
  if (v5[1])
  {
    Swift::UInt8 v1 = v6;
    id v2 = v7;
    Hasher._combine(_:)(1uLL);
    id v3 = v2;
    String.hash(into:)();
    String.hash(into:)();
    Hasher._combine(_:)(v1);
    if (v2)
    {
      Hasher._combine(_:)(1u);
      id v4 = v3;
      NSObject.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_1000B9420(uint64_t a1, uint64_t a2)
{
  sub_10003CE28(a1, (uint64_t)v4);
  sub_10003CE28(a2, (uint64_t)v5);
  return sub_10003CBE0((uint64_t)v4, (uint64_t)v5) & 1;
}

Swift::Int sub_1000B946C()
{
  sub_10003CE28(v0, (uint64_t)v2);
  Hasher.init(_seed:)();
  sub_1000B9340();
  return Hasher._finalize()();
}

void sub_1000B94BC()
{
  sub_10003CE28(v0, (uint64_t)&v1);
  sub_1000B9340();
}

Swift::Int sub_1000B94FC()
{
  sub_10003CE28(v0, (uint64_t)v2);
  Hasher.init(_seed:)();
  sub_1000B9340();
  return Hasher._finalize()();
}

uint64_t sub_1000B9550@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  long long v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1000B9C58(a2, a3);
      long long v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1000B97B4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1000B9C00(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      objc_super v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1000B97C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1000B9550((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1000B989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_1000B9550(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1000B9954(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1000B9BBCLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1000B9C58(a3, a4);
                  sub_1000B9C58(a1, a2);
                  char v17 = sub_1000B989C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1000B9C00(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1000B9C58(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1000B989C(v21, v22, v20, a3, a4);
                  sub_1000B9C00(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1000B9C58(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1000B9C58(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1000B97C4(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1000B9C00(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1000B9BEC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000B9C00(a1, a2);
  }
  return a1;
}

uint64_t sub_1000B9C00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000B9C58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

id sub_1000B9CB0()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStore;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStore];
  char v24 = (objc_class *)ObjectType;
  if (v3)
  {
    [v3 removeDelegate:v0];
    uint64_t v4 = *(void **)&v0[v2];
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)&v0[v2] = 0;

  uint64_t v5 = &v0[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_cancellables];
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  uint64_t v25 = v0;
  int v23 = v5;
  if ((*(void *)v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100065774((unint64_t *)&qword_100161650, 255, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    id result = (id)Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v28;
    uint64_t v8 = v29;
    uint64_t v9 = v30;
    uint64_t v10 = v31;
    unint64_t v11 = v32;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    uint64_t v8 = v6 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v6 + 56);
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v10 = 0;
  }
  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  if (v6 < 0) {
    goto LABEL_13;
  }
  while (1)
  {
    if (v11)
    {
      uint64_t v16 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | (v10 << 6);
      uint64_t v18 = v10;
      goto LABEL_30;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v19 >= v15) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v19);
    uint64_t v18 = v10 + 1;
    if (!v20)
    {
      uint64_t v18 = v10 + 2;
      if (v10 + 2 >= v15) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v8 + 8 * v18);
      if (!v20)
      {
        uint64_t v18 = v10 + 3;
        if (v10 + 3 >= v15) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v8 + 8 * v18);
        if (!v20)
        {
          uint64_t v18 = v10 + 4;
          if (v10 + 4 >= v15) {
            goto LABEL_33;
          }
          unint64_t v20 = *(void *)(v8 + 8 * v18);
          if (!v20)
          {
            uint64_t v21 = v10 + 5;
            while (v15 != v21)
            {
              unint64_t v20 = *(void *)(v8 + 8 * v21++);
              if (v20)
              {
                uint64_t v18 = v21 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_1000653C0();
            *(void *)int v23 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            v27.receiver = v25;
            v27.super_class = v24;
            return [super dealloc];
          }
        }
      }
    }
LABEL_29:
    uint64_t v16 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v18 << 6);
LABEL_30:
    uint64_t v22 = *(void *)(*(void *)(v6 + 48) + 8 * v17);
    swift_retain();
    if (!v22) {
      goto LABEL_33;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      id result = (id)swift_release();
      uint64_t v10 = v18;
      unint64_t v11 = v16;
      if ((v6 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_13:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v18 = v10;
        uint64_t v16 = v11;
        if (v26) {
          continue;
        }
      }
      goto LABEL_33;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000BA084(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (qword_10015F170 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000477B0(v12, (uint64_t)qword_10016B040);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    int64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Apple Account is signed in (with profile picture).", v15, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v16 = a3[3];
  uint64_t v24 = a3[2];
  uint64_t v18 = a3[4];
  uint64_t v17 = a3[5];
  uint64_t v19 = a3[6];
  unint64_t v20 = (void *)a3[7];
  a3[2] = a5;
  a3[3] = a6;
  a3[4] = a7;
  a3[5] = a8;
  a3[6] = a9 & 1;
  a3[7] = a1;
  id v21 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v22 = v21;
  sub_100067890(v24, v16, v18, v17, v19, v20);
  sub_1000128F8(a3, a4);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BA268@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void *sub_1000BA410()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1000BA41C()
{
  if (*(void *)(v0 + 24) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000BA46C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1000BA4BC(void *a1, uint64_t a2)
{
  return sub_1000BA084(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
}

uint64_t sub_1000BA4F0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BA528()
{
  swift_release();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1000BA57C(uint64_t a1, unint64_t a2)
{
  if (qword_10015F170 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000477B0(v5, (uint64_t)qword_10016B040);
  id v6 = v2;
  char v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_getObjectType();
    uint64_t v10 = _typeName(_:qualified:)();
    sub_100042948(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100042948(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Start (%s.%s)…", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_retain();
  sub_100046B9C((uint64_t *)&unk_100163BE0);
  sub_10004D2D4(&qword_100162ED0, (uint64_t *)&unk_100163BE0);
  Subject<>.send()();
  swift_release();
  sub_100017480(v6, a1, a2);
}

uint64_t sub_1000BA7D4()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_enManager;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_enManager);
  if (v2) {
    [v2 invalidate];
  }
  sub_100045F84(v0 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_id);
  sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_invalidator);

  return swift_deallocClassInstance();
}

uint64_t sub_1000BA874()
{
  return type metadata accessor for ExposureNotificationsItemProvider();
}

uint64_t sub_1000BA87C@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_id, a1);
}

uint64_t sub_1000BA894()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BA8CC()
{
  return sub_1000BA8F0();
}

uint64_t sub_1000BA8F0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100055498();
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1000BAC18;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100154998;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000BAB58(uint64_t a1)
{
  return sub_100068CA8();
}

uint64_t sub_1000BABCC()
{
  sub_10003E2B4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  sub_100042A1C(v0 + 48);

  return swift_deallocClassInstance();
}

uint64_t sub_1000BAC18()
{
  return sub_1000BAB58(v0);
}

uint64_t sub_1000BAC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for SecondaryAppleAccountItem(uint64_t a1)
{
  return sub_1000BACC8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t sub_1000BACC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((a9 & 1) == 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SecondaryAppleAccountItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1000BAC20(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for SecondaryAppleAccountItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1000BAC20(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1000BACC8(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 initializeWithTake for SecondaryAppleAccountItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SecondaryAppleAccountItem(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1000BACC8(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecondaryAppleAccountItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SecondaryAppleAccountItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000BAFBC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_1000BAFC4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2 & 1;
  return result;
}

void sub_1000BAFD0()
{
  sub_1000BBE80(v0, (uint64_t)v2);
  if (v3)
  {
    Swift::UInt v1 = v2[6];
    Hasher._combine(_:)(1uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
}

Swift::Int sub_1000BB148()
{
  return Hasher._finalize()();
}

uint64_t sub_1000BB230()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000BB30C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000BB3F0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1000BBCEC(v7, v8) & 1;
}

Swift::Int sub_1000BB43C()
{
  Swift::UInt v1 = *(void *)(v0 + 48);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1000BB508()
{
  Swift::UInt v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
}

Swift::Int sub_1000BB5BC()
{
  Swift::UInt v1 = *(void *)(v0 + 48);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_1000BB684(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  void v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_1000BBDCC(v5, v7);
}

Swift::Int sub_1000BB6E0()
{
  sub_1000BBE80(v0, (uint64_t)v2);
  Hasher.init(_seed:)();
  sub_1000BAFD0();
  return Hasher._finalize()();
}

void sub_1000BB730()
{
  sub_1000BBE80(v0, (uint64_t)v1);
  sub_1000BAFD0();
}

Swift::Int sub_1000BB770()
{
  sub_1000BBE80(v0, (uint64_t)v2);
  Hasher.init(_seed:)();
  sub_1000BAFD0();
  return Hasher._finalize()();
}

BOOL sub_1000BB7C4(uint64_t a1, uint64_t a2)
{
  sub_1000BBE80(a1, (uint64_t)v4);
  sub_1000BBE80(a2, (uint64_t)v5);
  return sub_1000BBAD8((uint64_t)v4, (uint64_t)v5);
}

unint64_t sub_1000BB814()
{
  unint64_t result = qword_1001630A0;
  if (!qword_1001630A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001630A0);
  }
  return result;
}

BOOL sub_1000BB868()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() == -1;
}

BOOL sub_1000BB8C8()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() != -1;
}

BOOL sub_1000BB928()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() != -1;
}

BOOL sub_1000BB988()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() == -1;
}

uint64_t sub_1000BB9E8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000BB9F4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  *a1 = v3;
  a1[1] = result;
  return result;
}

unint64_t sub_1000BBA2C()
{
  unint64_t result = qword_1001630A8;
  if (!qword_1001630A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001630A8);
  }
  return result;
}

unint64_t sub_1000BBA84()
{
  unint64_t result = qword_1001630B0;
  if (!qword_1001630B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001630B0);
  }
  return result;
}

BOOL sub_1000BBAD8(uint64_t a1, uint64_t a2)
{
  sub_1000BBE80(a1, (uint64_t)v38);
  uint64_t v3 = v38[0];
  uint64_t v4 = v38[1];
  if ((v45 & 1) == 0)
  {
    uint64_t v14 = v39;
    uint64_t v13 = v40;
    uint64_t v15 = v41;
    uint64_t v16 = v42;
    uint64_t v17 = v43;
    uint64_t v18 = v44;
    sub_1000BBE80(a2, (uint64_t)&v29);
    if (v37) {
      return 0;
    }
    uint64_t v26 = v18;
    uint64_t v21 = v31;
    uint64_t v20 = v32;
    uint64_t v22 = v33;
    uint64_t v28 = v34;
    uint64_t v23 = v36;
    uint64_t v24 = v35;
    if ((v3 != v29 || v4 != v30) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return 0;
    }
    return (v14 == v21 && v13 == v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && (v15 == v22 && v16 == v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && (v17 == v24 && v26 == v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
  }
  uint64_t v5 = v39;
  uint64_t v6 = v40;
  uint64_t v7 = v41;
  uint64_t v8 = v42;
  uint64_t v9 = v43;
  sub_1000BBE80(a2, (uint64_t)&v29);
  if (v37 == 1)
  {
    if ((v10 = v31, uint64_t v11 = v32, v12 = v34, v25 = v35, v27 = v33, v3 == v29) && v4 == v30
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if (v5 == v10 && v6 == v11 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (v7 == v27 && v8 == v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && v9 == v25)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000BBCEC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5]
        || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v9 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7])
        {
          return 1;
        }
        else
        {
          return _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
    }
  }
  return result;
}

BOOL sub_1000BBDCC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5]) {
        return a1[6] == a2[6];
      }
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL result = 0;
      if (v9) {
        return a1[6] == a2[6];
      }
    }
  }
  return result;
}

uint64_t sub_1000BBE80(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t destroy for SecondaryAppleAccountAuthenticationInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SecondaryAppleAccountAuthenticationInformation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SecondaryAppleAccountAuthenticationInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

void *assignWithTake for SecondaryAppleAccountAuthenticationInformation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for SecondaryAppleAccountAuthenticationInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecondaryAppleAccountAuthenticationInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecondaryAppleAccountAuthenticationInformation()
{
  return &type metadata for SecondaryAppleAccountAuthenticationInformation;
}

uint64_t destroy for SecondaryAppleAccountInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SecondaryAppleAccountInformation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SecondaryAppleAccountInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SecondaryAppleAccountInformation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecondaryAppleAccountInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecondaryAppleAccountInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecondaryAppleAccountInformation()
{
  return &type metadata for SecondaryAppleAccountInformation;
}

uint64_t sub_1000BC360()
{
  swift_bridgeObjectRelease();

  sub_100042A1C(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1000BC3A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000BC434()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BC46C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1000BC4AC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v34 = a1;
  uint64_t v31 = a4;
  uint64_t v12 = sub_100046B9C(a4);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a5(0);
  uint64_t v15 = __chkstk_darwin(v33);
  uint64_t v32 = (uint64_t)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v30 = (uint64_t)v27 - v18;
  uint64_t v19 = *(void *)(a3 + 16);
  if (!v19) {
    return _swiftEmptyArrayStorage;
  }
  v27[0] = a7;
  v27[1] = a3;
  uint64_t v20 = a3 + 32;
  uint64_t v28 = v17;
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v29 = a6;
  do
  {
    v34(v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    if ((*v21)(v14, 1, v33) == 1)
    {
      sub_10003F5D0((uint64_t)v14, v31);
    }
    else
    {
      uint64_t v23 = v30;
      sub_10005989C((uint64_t)v14, v30, a6);
      sub_10005989C(v23, v32, a6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (void *)((uint64_t (*)(void, uint64_t, uint64_t, void *))v27[0])(0, v22[2] + 1, 1, v22);
      }
      unint64_t v25 = v22[2];
      unint64_t v24 = v22[3];
      if (v25 >= v24 >> 1) {
        uint64_t v22 = (void *)((uint64_t (*)(BOOL, unint64_t, uint64_t, void *))v27[0])(v24 > 1, v25 + 1, 1, v22);
      }
      v22[2] = v25 + 1;
      a6 = v29;
      sub_10005989C(v32, (uint64_t)v22+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25, v29);
    }
    v20 += 40;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v22;
}

void *sub_1000BC774(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a3;
  uint64_t v41 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v10 = __chkstk_darwin(v41);
  uint64_t v40 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v37 = (uint64_t)v35 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v50 = v4;
  uint64_t v36 = v12;
  uint64_t v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v39 = v8;
  swift_bridgeObjectRetain();
  v35[1] = v9;
  uint64_t v15 = v9 + 48;
  uint64_t v43 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v44 = v15;
    uint64_t v45 = v14;
    uint64_t v16 = *(void *)(v15 - 16);
    uint64_t v17 = *(void *)(v15 - 8);
    uint64_t v18 = *(void *)v15;
    uint64_t v19 = *(void *)(v15 + 8);
    uint64_t v20 = *(void *)(v15 + 16);
    uint64_t v21 = *(void *)(v15 + 24);
    uint64_t v23 = *(void *)(v15 + 32);
    uint64_t v22 = *(void *)(v15 + 40);
    char v24 = *(unsigned char *)(v15 + 48);
    v48[0] = v16;
    v48[1] = v17;
    v48[2] = v18;
    v48[3] = v19;
    v48[4] = v20;
    v48[5] = v21;
    v48[6] = v23;
    v48[7] = v22;
    char v49 = v24;
    uint64_t v46 = v22;
    uint64_t v47 = v20;
    sub_1000BAC20(v16, v17, v18, v19, v20, v21, v23, v22, v24);
    uint64_t v25 = (uint64_t)v39;
    uint64_t v26 = v50;
    v42(v48);
    uint64_t v50 = v26;
    if (v26)
    {
      sub_1000BACC8(v16, v17, v18, v19, v47, v21, v23, v46, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v43;
    }
    sub_1000BACC8(v16, v17, v18, v19, v47, v21, v23, v46, v24);
    if ((*v38)(v25, 1, v41) == 1)
    {
      sub_10003F5D0(v25, (uint64_t *)&unk_100163AD0);
    }
    else
    {
      uint64_t v27 = v25;
      uint64_t v28 = v37;
      sub_10005989C(v27, v37, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      sub_10005989C(v28, v40, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = (void *)sub_100059C00(0, v43[2] + 1, 1, (unint64_t)v43);
      }
      unint64_t v30 = v43[2];
      unint64_t v29 = v43[3];
      uint64_t v31 = v36;
      if (v30 >= v29 >> 1)
      {
        uint64_t v33 = (void *)sub_100059C00(v29 > 1, v30 + 1, 1, (unint64_t)v43);
        uint64_t v31 = v36;
        uint64_t v43 = v33;
      }
      uint64_t v32 = v43;
      v43[2] = v30 + 1;
      sub_10005989C(v40, (uint64_t)v32+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v30, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    }
    uint64_t v15 = v44 + 72;
    uint64_t v14 = v45 - 1;
  }
  while (v45 != 1);
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1000BCB24@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v5 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v30 - v12);
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = a1[4];
  uint64_t v17 = a1[5];
  if (a1[8])
  {
    uint64_t v31 = a1[4];
    uint64_t v32 = a3;
    void *v13 = v14;
    v13[1] = v15;
    swift_storeEnumTagMultiPayload();
    sub_100046BE0((uint64_t)v13, (uint64_t)v11);
    type metadata accessor for StaticPrimarySettingsListItemProvider();
    uint64_t v18 = swift_allocObject();
    sub_10005989C((uint64_t)v11, v18 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    swift_bridgeObjectRetain();
    sub_10003FF84(v33, (uint64_t)v7);
    swift_setDeallocating();
    sub_10003DB4C(v18 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    swift_deallocClassInstance();
    sub_10003DB4C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v19 = type metadata accessor for PrimarySettingsListItemModel();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v7, 1, v19))
    {
      uint64_t v20 = (uint64_t)&v7[*(int *)(v19 + 20)];
      swift_bridgeObjectRetain();
      sub_10003DB4C(v20, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      *(void *)uint64_t v20 = v31;
      *(void *)(v20 + 8) = v17;
      *(void *)(v20 + 16) = 1;
      *(_WORD *)(v20 + 24) = 512;
      type metadata accessor for PrimarySettingsListItemViewType();
      swift_storeEnumTagMultiPayload();
    }
    return sub_1000696E0((uint64_t)v7, (uint64_t)v32);
  }
  else
  {
    uint64_t v22 = a1[6];
    uint64_t v33 = (void *)a1[7];
    *a3 = v14;
    a3[1] = v15;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100040424();
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v28 = type metadata accessor for PrimarySettingsListItemModel();
    unint64_t v29 = (char *)a3 + *(int *)(v28 + 20);
    *(void *)unint64_t v29 = v23;
    *((void *)v29 + 1) = v25;
    v29[16] = v27;
    *((void *)v29 + 3) = v16;
    *((void *)v29 + 4) = v17;
    *((void *)v29 + 5) = v22;
    *((void *)v29 + 6) = v33;
    *((_WORD *)v29 + 28) = 512;
    type metadata accessor for PrimarySettingsListItemViewType();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a3, 0, 1, v28);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000BCEA0()
{
  sub_10003E2B4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000BCEEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000BCB24(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1000BCF0C()
{
  unint64_t result = qword_100163288;
  if (!qword_100163288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163288);
  }
  return result;
}

uint64_t sub_1000BCF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000BD054();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000BCFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000BD054();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000BD02C()
{
}

unint64_t sub_1000BD054()
{
  unint64_t result = qword_100163290;
  if (!qword_100163290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163290);
  }
  return result;
}

id sub_1000BD0A8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v2._countAndFlagsBits = 0xD00000000000001ELL;
  v12._countAndFlagsBits = 0xD000000000000021;
  v12._object = (void *)0x8000000100128D50;
  v2._object = (void *)0x8000000100128D30;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v12);

  id v4 = [v0 mainBundle];
  v5._countAndFlagsBits = 0xD000000000000016;
  v13._object = (void *)0x8000000100124770;
  v5._object = (void *)0x8000000100128D80;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0xD000000000000010;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v13);

  id v7 = objc_allocWithZone((Class)OBWelcomeController);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v7 initWithTitle:v8 detailText:v9 icon:0];

  return v10;
}

unint64_t sub_1000BD238()
{
  unint64_t result = qword_100163298;
  if (!qword_100163298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163298);
  }
  return result;
}

id sub_1000BD28C()
{
  id v0 = [objc_allocWithZone((Class)PSAboutHTMLSheetViewController) init];
  id v1 = (id)PSAboutDeviceSupervision();
  [v0 setHTMLContent:v1 isFragment:1];

  return v0;
}

uint64_t sub_1000BD2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000BD3E4();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000BD358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000BD3E4();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000BD3BC()
{
}

unint64_t sub_1000BD3E4()
{
  unint64_t result = qword_1001632A0;
  if (!qword_1001632A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001632A0);
  }
  return result;
}

id sub_1000BD438()
{
  if (v0[OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_setupObserver] != 1) {
    goto LABEL_4;
  }
  id result = [self sharedConnection];
  if (result)
  {
    Swift::String v2 = result;
    [result unregisterObserver:v0];

LABEL_4:
    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for SupervisedDeviceSectionModelProvider();
    return [super dealloc];
  }
  __break(1u);
  return result;
}

void sub_1000BD5D0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  id v7 = [self sharedConnection];
  if (v7)
  {
    NSString v8 = v7;
    id v9 = [v7 cloudConfigurationDetails];

    if (v9)
    {
      uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v11;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1000619E0((uint64_t)v22), (v13 & 1) != 0))
      {
        sub_100061984(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v23);
      }
      else
      {
        long long v23 = 0u;
        long long v24 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_100061AEC((uint64_t)v22);
      if (*((void *)&v24 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v14 = v20;
          uint64_t v15 = v21;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v16._countAndFlagsBits = 0xD000000000000032;
          v16._object = (void *)0x8000000100128E40;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
          v17._countAndFlagsBits = v14;
          v17._object = v15;
          String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v17);
          swift_bridgeObjectRelease();
          v18._countAndFlagsBits = 0;
          v18._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
          String.LocalizationValue.init(stringInterpolation:)();
          static Locale.current.getter();
          (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
LABEL_12:
          LocalizedStringResource.init(_:table:locale:bundle:comment:)();
          return;
        }
      }
      else
      {
        sub_100064640((uint64_t)&v23);
      }
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_1000BDAC4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[9];
    id v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for PrimarySettingsListItemIdentifier();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v12 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
        goto LABEL_8;
      case 2u:
        uint64_t v14 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
        uint64_t v15 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        Swift::String v16 = (void *)((char *)v9 + v15);
        Swift::String v17 = (void *)((char *)v10 + v15);
        uint64_t v18 = v17[1];
        *Swift::String v16 = *v17;
        v16[1] = v18;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v19 = v10[1];
        *id v9 = *v10;
        v9[1] = v19;
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    uint64_t v20 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000BDDBC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[9];
  char v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    uint64_t v13 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&v7[*(int *)(v13 + 48)] = *(_OWORD *)&v8[*(int *)(v13 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_1000BDF7C(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_100045F84(a1 + v7);
    uint64_t v10 = type metadata accessor for PrimarySettingsListItemIdentifier();
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      uint64_t v14 = sub_100046B9C(&qword_10015F7F8);
      *(_OWORD *)&v8[*(int *)(v14 + 48)] = *(_OWORD *)&v9[*(int *)(v14 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v15 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_release();
  return a1;
}

uint64_t sub_1000BE160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BE174);
}

uint64_t sub_1000BE174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000BE238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BE24C);
}

uint64_t sub_1000BE24C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 36);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

BOOL sub_1000BE30C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v3);
  int v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v1 + *(int *)(a1 + 36), (uint64_t)v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_100046B9C(&qword_10015F7F8);
    swift_bridgeObjectRelease();
    uint64_t v7 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    sub_100045F84((uint64_t)v5);
  }
  return EnumCaseMultiPayload != 2;
}

uint64_t sub_1000BE414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_100046B9C((uint64_t *)&unk_100161530);
  v6[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000BF114, v8, v7);
}

uint64_t sub_1000BE4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  uint64_t v8 = type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  type metadata accessor for MainActor();
  uint64_t v16 = static MainActor.shared.getter();
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v16;
  *((void *)v18 + 3) = &protocol witness table for MainActor;
  *((void *)v18 + 4) = a2;
  *((void *)v18 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v11, v8);
  sub_1000C9558((uint64_t)v14, v21, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1000BE6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_100046B9C((uint64_t *)&unk_100161530);
  v6[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000BE798, v8, v7);
}

uint64_t sub_1000BE798()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  swift_release();
  char v3 = *(unsigned char *)(v2 + 8);
  uint64_t v4 = swift_retain();
  sub_100037090(v4, v3);
  swift_release();
  swift_retain();
  swift_release();
  sub_100036FFC();
  swift_release();
  uint64_t v5 = type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper();
  sub_100046BE0(v2 + *(int *)(v5 + 36), v1);
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 0, 1, v6);
  sub_1000C98F4(v1);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000BE8D8()
{
  return sub_1000BEAE8((uint64_t)&unk_100154D80, (uint64_t)&unk_100163398);
}

uint64_t sub_1000BE8FC()
{
  uint64_t v1 = type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 36);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      break;
    case 2u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000BEAC8()
{
  return sub_1000BEAE8((uint64_t)&unk_100154D58, (uint64_t)&unk_100163388);
}

uint64_t sub_1000BEAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper() - 8);
  return sub_1000BE4E0(v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v5, v6, a1, a2);
}

uint64_t sub_1000BEB7C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_10000ADF0;
  return sub_1000BE414(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_1000BEC88()
{
  uint64_t v1 = type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 36);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      break;
    case 2u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000BEE5C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_10007B630;
  return sub_1000BE6CC(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_1000BEF64()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000BF118()
{
  return sub_1000BF158(0x656C646E75424643, 0xEF6E6F6973726556);
}

uint64_t sub_1000BF13C()
{
  return sub_1000BF158(0xD00000000000001ALL, 0x8000000100128F70);
}

uint64_t sub_1000BF158(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 infoDictionary];
  if (!v5)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_11;
  }
  uint64_t v6 = v5;
  uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_10009F1DC(a1, a2), (v9 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100061984(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_11:
    sub_100064640((uint64_t)&v12);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v11;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000BF270()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v18 - v7;
  id v9 = [v0 infoDictionary];
  if (!v9)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_9;
  }
  uint64_t v10 = v9;
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v11 + 16) || (unint64_t v12 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL), (v13 & 1) == 0))
  {
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_100061984(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1))
  {
LABEL_9:
    sub_100064640((uint64_t)&v19);
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
LABEL_10:
    id v15 = [v1 bundleURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.deletingPathExtension()();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v6, v2);
    uint64_t v14 = URL.lastPathComponent.getter();
    v16(v8, v2);
    return v14;
  }
  return v18;
}

void sub_1000BF4A0(uint64_t a1)
{
}

void sub_1000BF4C4(uint64_t a1)
{
}

void sub_1000BF4E8(uint64_t a1)
{
}

void sub_1000BF50C(uint64_t a1)
{
}

void sub_1000BF530(uint64_t a1)
{
}

void sub_1000BF554(uint64_t a1)
{
}

void sub_1000BF578(uint64_t a1)
{
}

void sub_1000BF59C(uint64_t a1)
{
}

void sub_1000BF5C0(uint64_t a1)
{
}

void sub_1000BF5E4(uint64_t a1)
{
}

void sub_1000BF608(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = (id)SFRuntimeAbsoluteFilePathForPath();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = objc_allocWithZone((Class)NSBundle);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithPath:v8];

  if (v9) {
    *a4 = v9;
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1000BF6C0()
{
  sub_100046B9C(&qword_100160738);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001207B0;
  if (qword_10015F0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10016AF28;
  *(void *)(v0 + 32) = qword_10016AF28;
  uint64_t v2 = qword_10015F0D0;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10016AF20;
  *(void *)(v0 + 40) = qword_10016AF20;
  uint64_t v5 = qword_10015F0E8;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_10016AF38;
  *(void *)(v0 + 48) = qword_10016AF38;
  uint64_t v8 = qword_10015F0E0;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10016AF30;
  *(void *)(v0 + 56) = qword_10016AF30;
  uint64_t v11 = qword_10015F0F0;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  char v13 = (void *)qword_10016AF40;
  *(void *)(v0 + 64) = qword_10016AF40;
  uint64_t v14 = qword_10015F0F8;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_10016AF48;
  *(void *)(v0 + 72) = qword_10016AF48;
  uint64_t v17 = qword_10015F100;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  long long v19 = (void *)qword_10016AF50;
  *(void *)(v0 + 80) = qword_10016AF50;
  uint64_t v20 = qword_10015F108;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_10016AF58;
  *(void *)(v0 + 88) = qword_10016AF58;
  uint64_t v23 = qword_10015F110;
  id v24 = v22;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)qword_10016AF60;
  *(void *)(v0 + 96) = qword_10016AF60;
  uint64_t v31 = v0;
  specialized Array._endMutation()();
  if (v0 < 0 || (v31 & 0x4000000000000000) != 0)
  {
    id v29 = v25;
    unint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v26 = (uint64_t)sub_1000BFAAC(v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = v31 & 0xFFFFFFFFFFFFFF8;
    id v27 = v25;
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = v26;
  sub_1000BFA30(&v31);
  uint64_t result = swift_bridgeObjectRelease();
  qword_10016AF68 = v31;
  return result;
}

uint64_t sub_1000BF9CC()
{
  uint64_t v0 = type metadata accessor for NSBundle.PreferencesPluginLocation();
  sub_10001C174(v0, qword_10016AF70);
  sub_1000477B0(v0, (uint64_t)qword_10016AF70);
  return NSBundle.PreferencesPluginLocation.init(path:)();
}

uint64_t sub_1000BFA30(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000F3764(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1000BFBA4(v6);
  return specialized ContiguousArray._endMutation()();
}

void *sub_1000BFAAC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      id v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100046B9C(&qword_100160738);
      id v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1000E6D48((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

Swift::Int sub_1000BFBA4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v179 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v179 - 8);
  uint64_t v5 = __chkstk_darwin(v179);
  uint64_t v178 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v177 = (char *)&v161 - v7;
  Swift::Int v8 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v8);
  if (result >= v8)
  {
    if (v8 < 0) {
      goto LABEL_193;
    }
    if (v8) {
      return sub_1000C0AC0(0, v8, 1, a1);
    }
    return result;
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_201;
  }
  Swift::Int v166 = result;
  Swift::Int v169 = v8;
  v162 = a1;
  if (v8 < 2)
  {
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
    uint64_t v187 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v172 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      if (v18 < 2)
      {
LABEL_156:
        swift_bridgeObjectRelease();
        *(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        return swift_bridgeObjectRelease();
      }
LABEL_159:
      uint64_t v155 = *v162;
      while (1)
      {
        unint64_t v156 = v18 - 2;
        if (v18 < 2) {
          goto LABEL_188;
        }
        if (!v155) {
          goto LABEL_200;
        }
        uint64_t v157 = *(void *)&v14[16 * v156 + 32];
        uint64_t v158 = *(void *)&v14[16 * v18 + 24];
        sub_1000C0FD0((id *)(v155 + 8 * v157), (id *)(v155 + 8 * *(void *)&v14[16 * v18 + 16]), (id *)(v155 + 8 * v158), v172);
        if (v2) {
          goto LABEL_156;
        }
        if (v158 < v157) {
          goto LABEL_189;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_1000F3750((uint64_t)v14);
        }
        if (v156 >= *((void *)v14 + 2)) {
          goto LABEL_190;
        }
        uint64_t v159 = &v14[16 * v156 + 32];
        *(void *)uint64_t v159 = v157;
        *((void *)v159 + 1) = v158;
        unint64_t v160 = *((void *)v14 + 2);
        if (v18 > v160) {
          goto LABEL_191;
        }
        memmove(&v14[16 * v18 + 16], &v14[16 * v18 + 32], 16 * (v160 - v18));
        *((void *)v14 + 2) = v160 - 1;
        unint64_t v18 = v160 - 1;
        if (v160 <= 2) {
          goto LABEL_156;
        }
      }
    }
  }
  else
  {
    uint64_t v11 = a1;
    uint64_t v12 = v10 >> 1;
    sub_100049E50();
    uint64_t v13 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) = v12;
    a1 = v11;
    uint64_t v172 = (char *)((v13 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v187 = v13;
  }
  uint64_t v173 = v1;
  Swift::Int v15 = 0;
  uint64_t v16 = *a1;
  uint64_t v176 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v163 = v16 + 16;
  uint64_t v164 = v16 - 8;
  uint64_t v14 = (char *)_swiftEmptyArrayStorage;
  char v167 = (char *)&type metadata for Any + 8;
  Swift::Int v17 = v169;
  uint64_t v174 = v16;
  while (2)
  {
    Swift::Int v19 = v15 + 1;
    Swift::Int v170 = v15;
    if (v15 + 1 >= v17) {
      goto LABEL_65;
    }
    uint64_t v20 = *(void **)(v16 + 8 * v15);
    id v21 = *(id *)(v16 + 8 * v19);
    id v22 = v20;
    uint64_t v23 = sub_1000BF270();
    uint64_t v25 = v24;
    if (v23 == sub_1000BF270() && v25 == v26) {
      LODWORD(v171) = 0;
    }
    else {
      LODWORD(v171) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    Swift::Int v15 = v170;
    Swift::Int v19 = v170 + 2;
    if (v170 + 2 >= v169) {
      goto LABEL_56;
    }
    uint64_t v165 = v14;
    uint64_t v28 = (id *)(v163 + 8 * v170);
    while (1)
    {
      unint64_t v30 = *(v28 - 1);
      id v31 = *v28;
      id v32 = v30;
      id v33 = [v31 infoDictionary];
      Swift::Int v175 = v19;
      id v182 = v31;
      if (!v33)
      {
        long long v185 = 0u;
        long long v186 = 0u;
LABEL_35:
        uint64_t v180 = (uint64_t)v28;
        uint64_t v39 = v16;
        id v40 = v32;
        sub_100064640((uint64_t)&v185);
        goto LABEL_37;
      }
      uint64_t v34 = v33;
      uint64_t v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v35 + 16) && (unint64_t v36 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL), (v37 & 1) != 0))
      {
        sub_100061984(*(void *)(v35 + 56) + 32 * v36, (uint64_t)&v185);
      }
      else
      {
        long long v185 = 0u;
        long long v186 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v186 + 1)) {
        goto LABEL_35;
      }
      if (swift_dynamicCast())
      {
        uint64_t v38 = v183;
        uint64_t v181 = v184;
        goto LABEL_38;
      }
      uint64_t v180 = (uint64_t)v28;
      uint64_t v39 = v16;
      id v40 = v32;
LABEL_37:
      id v41 = [v31 bundleURL];
      uint64_t v42 = v178;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v43 = v177;
      URL.deletingPathExtension()();
      uint64_t v44 = *v176;
      uint64_t v45 = v179;
      (*v176)(v42, v179);
      uint64_t v38 = URL.lastPathComponent.getter();
      uint64_t v181 = v46;
      v44(v43, v45);
      id v32 = v40;
      uint64_t v16 = v39;
      uint64_t v28 = (id *)v180;
LABEL_38:
      id v47 = [v32 infoDictionary];
      if (!v47)
      {
        long long v185 = 0u;
        long long v186 = 0u;
LABEL_47:
        sub_100064640((uint64_t)&v185);
LABEL_48:
        uint64_t v52 = v32;
        id v55 = [v32 bundleURL];
        unint64_t v56 = v178;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v57 = v177;
        URL.deletingPathExtension()();
        uint64_t v58 = *v176;
        uint64_t v59 = v179;
        (*v176)(v56, v179);
        uint64_t v54 = URL.lastPathComponent.getter();
        uint64_t v53 = v60;
        v58(v57, v59);
        uint64_t v16 = v174;
        goto LABEL_49;
      }
      uint64_t v48 = v47;
      uint64_t v49 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v49 + 16) && (unint64_t v50 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL), (v51 & 1) != 0))
      {
        sub_100061984(*(void *)(v49 + 56) + 32 * v50, (uint64_t)&v185);
      }
      else
      {
        long long v185 = 0u;
        long long v186 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v186 + 1)) {
        goto LABEL_47;
      }
      if (!swift_dynamicCast()) {
        goto LABEL_48;
      }
      uint64_t v52 = v32;
      uint64_t v54 = v183;
      uint64_t v53 = v184;
LABEL_49:
      if (v38 == v54 && v181 == v53)
      {

        swift_bridgeObjectRelease_n();
        if (v171)
        {
          uint64_t v14 = v165;
          Swift::Int v19 = v175;
          Swift::Int v15 = v170;
          goto LABEL_57;
        }
        goto LABEL_25;
      }
      int v29 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v171 ^ v29)) {
        break;
      }
LABEL_25:
      Swift::Int v19 = v175 + 1;
      ++v28;
      if (v169 == v175 + 1)
      {
        Swift::Int v19 = v169;
        uint64_t v14 = v165;
        goto LABEL_55;
      }
    }
    uint64_t v14 = v165;
    Swift::Int v19 = v175;
LABEL_55:
    Swift::Int v15 = v170;
LABEL_56:
    if (v171)
    {
LABEL_57:
      if (v19 < v15) {
        goto LABEL_194;
      }
      if (v15 < v19)
      {
        uint64_t v61 = (uint64_t *)(v164 + 8 * v19);
        Swift::Int v62 = v19;
        Swift::Int v63 = v15;
        uint64_t v64 = (uint64_t *)(v16 + 8 * v15);
        do
        {
          if (v63 != --v62)
          {
            if (!v16) {
              goto LABEL_199;
            }
            uint64_t v65 = *v64;
            uint64_t *v64 = *v61;
            *uint64_t v61 = v65;
          }
          ++v63;
          --v61;
          ++v64;
        }
        while (v63 < v62);
        Swift::Int v15 = v170;
      }
    }
LABEL_65:
    if (v19 >= v169) {
      goto LABEL_107;
    }
    if (__OFSUB__(v19, v15)) {
      goto LABEL_192;
    }
    if (v19 - v15 >= v166)
    {
      Swift::Int v15 = v170;
LABEL_107:
      if (v19 < v15) {
        goto LABEL_187;
      }
      goto LABEL_108;
    }
    if (__OFADD__(v170, v166)) {
      goto LABEL_195;
    }
    Swift::Int v66 = v169;
    Swift::Int v15 = v170;
    if (v170 + v166 < v169) {
      Swift::Int v66 = v170 + v166;
    }
    if (v66 >= v170)
    {
      if (v19 == v66) {
        goto LABEL_107;
      }
      uint64_t v165 = v14;
      uint64_t v67 = v164 + 8 * v19;
      Swift::Int v168 = v66;
      while (2)
      {
        Swift::Int v175 = v19;
        uint64_t v69 = v67;
        uint64_t v70 = *(void **)(v16 + 8 * v19);
        uint64_t v171 = v69;
        uint64_t v71 = v69;
        while (2)
        {
          uint64_t v72 = *(void **)v71;
          id v73 = v70;
          id v74 = v72;
          id v75 = [v73 infoDictionary];
          id v182 = v73;
          if (!v75)
          {
            long long v185 = 0u;
            long long v186 = 0u;
LABEL_87:
            sub_100064640((uint64_t)&v185);
            goto LABEL_88;
          }
          uint64_t v76 = v75;
          uint64_t v77 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          if (*(void *)(v77 + 16)
            && (unint64_t v78 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL), (v79 & 1) != 0))
          {
            sub_100061984(*(void *)(v77 + 56) + 32 * v78, (uint64_t)&v185);
          }
          else
          {
            long long v185 = 0u;
            long long v186 = 0u;
          }
          swift_bridgeObjectRelease();
          if (!*((void *)&v186 + 1)) {
            goto LABEL_87;
          }
          if (swift_dynamicCast())
          {
            uint64_t v180 = v183;
            uint64_t v181 = v184;
            goto LABEL_89;
          }
LABEL_88:
          id v80 = [v73 bundleURL];
          uint64_t v81 = v178;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v82 = v177;
          URL.deletingPathExtension()();
          uint64_t v83 = *v176;
          uint64_t v84 = v179;
          (*v176)(v81, v179);
          uint64_t v180 = URL.lastPathComponent.getter();
          uint64_t v181 = v85;
          v83(v82, v84);
LABEL_89:
          id v86 = [v74 infoDictionary];
          if (!v86)
          {
            long long v185 = 0u;
            long long v186 = 0u;
LABEL_98:
            sub_100064640((uint64_t)&v185);
LABEL_99:
            uint64_t v91 = v74;
            id v94 = [v74 bundleURL];
            uint64_t v95 = v178;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            char v96 = v177;
            URL.deletingPathExtension()();
            uint64_t v97 = *v176;
            uint64_t v98 = v179;
            (*v176)(v95, v179);
            uint64_t v93 = URL.lastPathComponent.getter();
            uint64_t v92 = v99;
            v97(v96, v98);
            goto LABEL_100;
          }
          uint64_t v87 = v86;
          uint64_t v88 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          if (*(void *)(v88 + 16)
            && (unint64_t v89 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL), (v90 & 1) != 0))
          {
            sub_100061984(*(void *)(v88 + 56) + 32 * v89, (uint64_t)&v185);
          }
          else
          {
            long long v185 = 0u;
            long long v186 = 0u;
          }
          swift_bridgeObjectRelease();
          if (!*((void *)&v186 + 1)) {
            goto LABEL_98;
          }
          if (!swift_dynamicCast()) {
            goto LABEL_99;
          }
          uint64_t v91 = v74;
          uint64_t v93 = v183;
          uint64_t v92 = v184;
LABEL_100:
          if (v180 != v93 || v181 != v92)
          {
            char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v100 & 1) == 0) {
              goto LABEL_75;
            }
            if (!v174) {
              goto LABEL_197;
            }
            uint64_t v101 = *(void **)v71;
            uint64_t v70 = *(void **)(v71 + 8);
            *(void *)uint64_t v71 = v70;
            *(void *)(v71 + 8) = v101;
            v71 -= 8;
            ++v15;
            Swift::Int v68 = v175;
            if (v175 == v15) {
              goto LABEL_76;
            }
            continue;
          }
          break;
        }

        swift_bridgeObjectRelease_n();
LABEL_75:
        Swift::Int v68 = v175;
LABEL_76:
        Swift::Int v19 = v68 + 1;
        Swift::Int v15 = v170;
        uint64_t v67 = v171 + 8;
        uint64_t v16 = v174;
        if (v19 != v168) {
          continue;
        }
        break;
      }
      Swift::Int v19 = v168;
      uint64_t v14 = v165;
      if (v168 < v170) {
        goto LABEL_187;
      }
LABEL_108:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_1000F3458(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      unint64_t v103 = *((void *)v14 + 2);
      unint64_t v102 = *((void *)v14 + 3);
      unint64_t v18 = v103 + 1;
      Swift::Int v104 = v170;
      if (v103 >= v102 >> 1)
      {
        uint64_t v154 = sub_1000F3458((char *)(v102 > 1), v103 + 1, 1, v14);
        Swift::Int v104 = v170;
        uint64_t v14 = v154;
      }
      *((void *)v14 + 2) = v18;
      uint64_t v105 = v14 + 32;
      uint64_t v106 = &v14[16 * v103 + 32];
      *(void *)uint64_t v106 = v104;
      *((void *)v106 + 1) = v19;
      Swift::Int v175 = v19;
      if (v103)
      {
        while (2)
        {
          unint64_t v107 = v18 - 1;
          if (v18 >= 4)
          {
            uint64_t v112 = &v105[16 * v18];
            uint64_t v113 = *((void *)v112 - 8);
            uint64_t v114 = *((void *)v112 - 7);
            BOOL v118 = __OFSUB__(v114, v113);
            uint64_t v115 = v114 - v113;
            if (v118) {
              goto LABEL_176;
            }
            uint64_t v117 = *((void *)v112 - 6);
            uint64_t v116 = *((void *)v112 - 5);
            BOOL v118 = __OFSUB__(v116, v117);
            uint64_t v110 = v116 - v117;
            char v111 = v118;
            if (v118) {
              goto LABEL_177;
            }
            unint64_t v119 = v18 - 2;
            uint64_t v120 = &v105[16 * v18 - 32];
            uint64_t v122 = *(void *)v120;
            uint64_t v121 = *((void *)v120 + 1);
            BOOL v118 = __OFSUB__(v121, v122);
            uint64_t v123 = v121 - v122;
            if (v118) {
              goto LABEL_179;
            }
            BOOL v118 = __OFADD__(v110, v123);
            uint64_t v124 = v110 + v123;
            if (v118) {
              goto LABEL_182;
            }
            if (v124 >= v115)
            {
              int v142 = &v105[16 * v107];
              uint64_t v144 = *(void *)v142;
              uint64_t v143 = *((void *)v142 + 1);
              BOOL v118 = __OFSUB__(v143, v144);
              uint64_t v145 = v143 - v144;
              if (v118) {
                goto LABEL_186;
              }
              BOOL v135 = v110 < v145;
            }
            else
            {
LABEL_126:
              if (v111) {
                goto LABEL_178;
              }
              unint64_t v119 = v18 - 2;
              uint64_t v125 = &v105[16 * v18 - 32];
              uint64_t v127 = *(void *)v125;
              uint64_t v126 = *((void *)v125 + 1);
              BOOL v128 = __OFSUB__(v126, v127);
              uint64_t v129 = v126 - v127;
              char v130 = v128;
              if (v128) {
                goto LABEL_181;
              }
              uint64_t v131 = &v105[16 * v107];
              uint64_t v133 = *(void *)v131;
              uint64_t v132 = *((void *)v131 + 1);
              BOOL v118 = __OFSUB__(v132, v133);
              uint64_t v134 = v132 - v133;
              if (v118) {
                goto LABEL_184;
              }
              if (__OFADD__(v129, v134)) {
                goto LABEL_185;
              }
              if (v129 + v134 < v110) {
                goto LABEL_138;
              }
              BOOL v135 = v110 < v134;
            }
            if (v135) {
              unint64_t v107 = v119;
            }
          }
          else
          {
            if (v18 == 3)
            {
              uint64_t v109 = *((void *)v14 + 4);
              uint64_t v108 = *((void *)v14 + 5);
              BOOL v118 = __OFSUB__(v108, v109);
              uint64_t v110 = v108 - v109;
              char v111 = v118;
              goto LABEL_126;
            }
            uint64_t v136 = *((void *)v14 + 4);
            uint64_t v137 = *((void *)v14 + 5);
            BOOL v118 = __OFSUB__(v137, v136);
            uint64_t v129 = v137 - v136;
            char v130 = v118;
LABEL_138:
            if (v130) {
              goto LABEL_180;
            }
            uint64_t v138 = &v105[16 * v107];
            uint64_t v140 = *(void *)v138;
            uint64_t v139 = *((void *)v138 + 1);
            BOOL v118 = __OFSUB__(v139, v140);
            uint64_t v141 = v139 - v140;
            if (v118) {
              goto LABEL_183;
            }
            if (v141 < v129) {
              goto LABEL_14;
            }
          }
          unint64_t v146 = v107 - 1;
          if (v107 - 1 >= v18)
          {
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
            goto LABEL_196;
          }
          if (!v16) {
            goto LABEL_198;
          }
          v147 = v14;
          uint64_t v148 = &v105[16 * v146];
          uint64_t v149 = *(void *)v148;
          uint64_t v150 = &v105[16 * v107];
          uint64_t v151 = *((void *)v150 + 1);
          uint64_t v152 = v173;
          sub_1000C0FD0((id *)(v16 + 8 * *(void *)v148), (id *)(v16 + 8 * *(void *)v150), (id *)(v16 + 8 * v151), v172);
          uint64_t v173 = v152;
          if (v152) {
            goto LABEL_156;
          }
          if (v151 < v149) {
            goto LABEL_173;
          }
          if (v107 > *((void *)v147 + 2)) {
            goto LABEL_174;
          }
          *(void *)uint64_t v148 = v149;
          *(void *)&v105[16 * v146 + 8] = v151;
          unint64_t v153 = *((void *)v147 + 2);
          if (v107 >= v153) {
            goto LABEL_175;
          }
          uint64_t v14 = v147;
          unint64_t v18 = v153 - 1;
          memmove(&v105[16 * v107], v150 + 16, 16 * (v153 - 1 - v107));
          *((void *)v147 + 2) = v153 - 1;
          if (v153 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v18 = 1;
LABEL_14:
      Swift::Int v17 = v169;
      Swift::Int v15 = v175;
      if (v175 >= v169)
      {
        uint64_t v2 = v173;
        if (v18 < 2) {
          goto LABEL_156;
        }
        goto LABEL_159;
      }
      continue;
    }
    break;
  }
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C0AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v52 = a1;
  uint64_t v60 = type metadata accessor for URL();
  uint64_t v7 = __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v50 - v11;
  uint64_t v51 = a2;
  if (a3 != a2)
  {
    uint64_t v12 = *a4;
    uint64_t v57 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v55 = v12;
    uint64_t v13 = v12 + 8 * a3 - 8;
    uint64_t v54 = (char *)&type metadata for Any + 8;
LABEL_6:
    uint64_t v14 = *(void **)(v55 + 8 * a3);
    uint64_t v15 = v52;
    uint64_t v53 = v13;
    uint64_t v56 = a3;
    while (1)
    {
      uint64_t v16 = *(void **)v13;
      id v17 = v14;
      id v18 = v16;
      id v19 = [v17 infoDictionary];
      id v67 = v17;
      if (!v19) {
        break;
      }
      uint64_t v20 = v19;
      uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v21 + 16) && (unint64_t v22 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL), (v23 & 1) != 0))
      {
        sub_100061984(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v65);
      }
      else
      {
        long long v65 = 0u;
        long long v66 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v66 + 1)) {
        goto LABEL_16;
      }
      if (swift_dynamicCast())
      {
        uint64_t v24 = v63;
        uint64_t v62 = v64;
        goto LABEL_19;
      }
      id v25 = v18;
LABEL_18:
      id v26 = [v17 bundleURL];
      id v27 = v59;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v28 = v58;
      URL.deletingPathExtension()();
      int v29 = *v57;
      uint64_t v30 = v60;
      (*v57)(v27, v60);
      uint64_t v24 = URL.lastPathComponent.getter();
      uint64_t v62 = v31;
      v29(v28, v30);
      id v18 = v25;
LABEL_19:
      id v32 = [v18 infoDictionary];
      id v61 = v18;
      if (!v32)
      {
        long long v65 = 0u;
        long long v66 = 0u;
LABEL_29:
        uint64_t v40 = v15;
        uint64_t v41 = v24;
        sub_100064640((uint64_t)&v65);
LABEL_31:
        id v42 = [v18 bundleURL];
        uint64_t v43 = v59;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v44 = v58;
        URL.deletingPathExtension()();
        uint64_t v45 = *v57;
        uint64_t v46 = v60;
        (*v57)(v43, v60);
        uint64_t v39 = URL.lastPathComponent.getter();
        uint64_t v38 = v47;
        v45(v44, v46);
        uint64_t v36 = v56;
        uint64_t v24 = v41;
        uint64_t v15 = v40;
        goto LABEL_32;
      }
      id v33 = v32;
      uint64_t v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v34 + 16))
      {
        unint64_t v35 = sub_10009F1DC(0x656C646E75424643, 0xEC000000656D614ELL);
        uint64_t v36 = v56;
        if (v37)
        {
          sub_100061984(*(void *)(v34 + 56) + 32 * v35, (uint64_t)&v65);
        }
        else
        {
          long long v65 = 0u;
          long long v66 = 0u;
        }
      }
      else
      {
        long long v65 = 0u;
        long long v66 = 0u;
        uint64_t v36 = v56;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v66 + 1)) {
        goto LABEL_29;
      }
      if (!swift_dynamicCast())
      {
        uint64_t v40 = v15;
        uint64_t v41 = v24;
        goto LABEL_31;
      }
      uint64_t v39 = v63;
      uint64_t v38 = v64;
LABEL_32:
      if (v24 == v39 && v62 == v38)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        a3 = v36 + 1;
        uint64_t v13 = v53 + 8;
        if (a3 == v51) {
          return result;
        }
        goto LABEL_6;
      }
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v48 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v55)
      {
        __break(1u);
        return result;
      }
      uint64_t v49 = *(void **)v13;
      uint64_t v14 = *(void **)(v13 + 8);
      *(void *)uint64_t v13 = v14;
      *(void *)(v13 + 8) = v49;
      v13 -= 8;
      if (v36 == ++v15) {
        goto LABEL_5;
      }
    }
    long long v65 = 0u;
    long long v66 = 0u;
LABEL_16:
    id v25 = v18;
    sub_100064640((uint64_t)&v65);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1000C0FD0(id *a1, id *__src, id *a3, char *__dst)
{
  uint64_t v5 = a3;
  uint64_t v6 = __src;
  uint64_t v7 = (char *)__src - (char *)a1;
  uint64_t v8 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v8 = (char *)__src - (char *)a1;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = (char *)a3 - (char *)__src;
  uint64_t v11 = (char *)a3 - (char *)__src + 7;
  if ((char *)a3 - (char *)__src >= 0) {
    uint64_t v11 = (char *)a3 - (char *)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v45 = a1;
  uint64_t v44 = (void **)__dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_54;
    }
    if (__dst != (char *)__src || &__src[v12] <= (id *)__dst) {
      memmove(__dst, __src, 8 * v12);
    }
    uint64_t v39 = __dst;
    id v26 = (id *)&__dst[8 * v12];
    uint64_t v43 = (char *)v26;
    uint64_t v45 = v6;
    if (a1 >= v6 || v10 < 8)
    {
LABEL_53:
      sub_1000F3694((void **)&v45, (const void **)&v44, &v43);
      return 1;
    }
    id v27 = v6;
    while (1)
    {
      id v42 = v5;
      uint64_t v28 = *--v27;
      id v29 = *(v26 - 1);
      id v30 = v28;
      uint64_t v31 = sub_1000BF270();
      uint64_t v33 = v32;
      if (v31 == sub_1000BF270() && v33 == v34) {
        break;
      }
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v37 = (char *)v42;
      uint64_t v5 = v42 - 1;
      if ((v36 & 1) == 0) {
        goto LABEL_46;
      }
      if (v42 != v6 || v5 >= v6) {
        *uint64_t v5 = *v27;
      }
      uint64_t v45 = v27;
LABEL_51:
      if (v27 > a1)
      {
        uint64_t v6 = v27;
        if (v26 > (id *)v39) {
          continue;
        }
      }
      goto LABEL_53;
    }

    swift_bridgeObjectRelease_n();
    char v37 = (char *)v42;
    uint64_t v5 = v42 - 1;
LABEL_46:
    uint64_t v43 = (char *)(v26 - 1);
    if (v37 < (char *)v26 || v5 >= v26 || v37 != (char *)v26) {
      *uint64_t v5 = *(v26 - 1);
    }
    id v27 = v6;
    --v26;
    goto LABEL_51;
  }
  if (v7 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v9] <= (id *)__dst) {
      memmove(__dst, a1, 8 * v9);
    }
    uint64_t v41 = (void **)&__dst[8 * v9];
    uint64_t v43 = (char *)v41;
    if (v6 < v5 && v7 >= 8)
    {
      uint64_t v13 = (void **)__dst;
      uint64_t v14 = a1;
      while (1)
      {
        uint64_t v15 = v5;
        uint64_t v16 = *v13;
        id v17 = *v6;
        id v18 = v16;
        uint64_t v19 = sub_1000BF270();
        uint64_t v21 = v20;
        if (v19 == sub_1000BF270() && v21 == v22) {
          break;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0) {
          goto LABEL_23;
        }
        id v25 = v6 + 1;
        uint64_t v5 = v15;
        if (v14 < v6 || v14 >= v25 || v14 != v6) {
          *uint64_t v14 = *v6;
        }
LABEL_26:
        ++v14;
        if (v13 < v41)
        {
          uint64_t v6 = v25;
          if (v25 < v5) {
            continue;
          }
        }
        uint64_t v45 = v14;
        goto LABEL_53;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      uint64_t v5 = v15;
      if (v14 != v13) {
        *uint64_t v14 = *v13;
      }
      uint64_t v44 = ++v13;
      id v25 = v6;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t assignWithCopy for FirstAppearanceModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FirstAppearanceModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_1000C1428()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_1000C1444()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000C1488()
{
  uint64_t v0 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  uint64_t v6 = &v19[-v5 - 8];
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Parameters();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v18 = type metadata accessor for GenerativeModelsAvailability();
  uint64_t v11 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v20 = &type metadata for SiriFeatureFlags;
  unint64_t v21 = sub_10004FA88();
  char v14 = isFeatureEnabled(_:)();
  sub_100042A1C((uint64_t)v19);
  if (v14)
  {
    GenerativeModelsAvailability.Parameters.init(useCaseIdentifier:)();
    static GenerativeModelsAvailability.current(parameters:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    GenerativeModelsAvailability.availability.getter();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for GenerativeModelsAvailability.Availability.available(_:), v0);
    char v15 = static GenerativeModelsAvailability.Availability.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
    v16(v4, v0);
    v16(v6, v0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v18);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1000C1758(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016AF98);
}

uint64_t sub_1000C1778(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016AFC8);
}

uint64_t sub_1000C179C(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016AFE0);
}

uint64_t sub_1000C17B8(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016AFF8);
}

uint64_t sub_1000C17E0(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016B088);
}

void sub_1000C1810()
{
}

uint64_t sub_1000C1894()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void (**)(void))(result
                          + OBJC_IVAR____TtC11SettingsAppP33_F16170C8CD22B033163CFC9AD59D599336SettingsAppDebugMenuGestureProxyView_perform);
    swift_retain();

    v2();
    return swift_release();
  }
  return result;
}

id sub_1000C1944()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsAppDebugMenuGestureProxyView();
  return [super dealloc];
}

uint64_t sub_1000C1990()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C19C8()
{
  return sub_1000C1894();
}

void *sub_1000C19D4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SettingsAppDebugMenuGesture(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1000C1A4C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000477B0(v7, (uint64_t)qword_10016AFC8);
  id v8 = a2;
  id v9 = v3;
  id v10 = a1;
  id v11 = v8;
  id v12 = v9;
  id v13 = v10;
  char v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v14, v15))
  {

    if (a2) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v23 = 1;
    goto LABEL_8;
  }
  uint64_t v16 = swift_slowAlloc();
  id v26 = (void *)swift_slowAlloc();
  uint64_t v27 = swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 136316419;
  swift_getObjectType();
  uint64_t v17 = _typeName(_:qualified:)();
  sub_100042948(v17, v18, &v27);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 12) = 2080;
  sub_100042948(0xD000000000000040, 0x8000000100129670, &v27);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v16 + 22) = 2160;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v16 + 32) = 2113;
  id v19 = v13;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  os_log_t log = v14;
  *id v26 = v13;

  *(_WORD *)(v16 + 42) = 2160;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v16 + 52) = 2081;
  id v20 = v11;
  sub_100046B9C(&qword_100163568);
  uint64_t v21 = String.init<A>(describing:)();
  sub_100042948(v21, v22, &v27);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v14, v15, "Start (%s.%s), listController: '%{private,mask.hash}@', rootController: '%{private,mask.hash}s'…", (uint8_t *)v16, 0x3Eu);
  sub_100046B9C((uint64_t *)&unk_100163570);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (!a2) {
    goto LABEL_7;
  }
LABEL_5:
  v28.receiver = v12;
  v28.super_class = ObjectType;
  uint64_t v23 = [super listControllerShouldDeselectAfterFormSheetDisappearance:v13 givenRootController:v11 log:log];
LABEL_8:
  sub_1000C1E14(v12, v13, a2);
  return v23;
}

void sub_1000C1E14(void *a1, void *a2, void *a3)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000477B0(v6, (uint64_t)qword_10016AFC8);
  id v7 = a3;
  id v8 = a1;
  id v9 = a2;
  id v10 = v7;
  id v23 = v8;
  id v11 = v9;
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t type = v13;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136316419;
    swift_getObjectType();
    uint64_t v15 = _typeName(_:qualified:)();
    sub_100042948(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_100042948(0xD000000000000040, 0x8000000100129670, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 22) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 32) = 2113;
    id v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v11;

    *(_WORD *)(v14 + 42) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 52) = 2081;
    id v18 = v10;
    sub_100046B9C(&qword_100163568);
    uint64_t v19 = String.init<A>(describing:)();
    sub_100042948(v19, v20, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, type, "...Complete (%s.%s), listController: '%{private,mask.hash}@', rootController: '%{private,mask.hash}s'.", (uint8_t *)v14, 0x3Eu);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000C2214(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFC8);
  id v5 = v1;
  id v6 = a1;
  id v7 = v5;
  id v8 = v6;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = v28;
    *(_DWORD *)uint64_t v11 = 136315907;
    swift_getObjectType();
    uint64_t v13 = _typeName(_:qualified:)();
    sub_100042948(v13, v14, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_100042948(0xD000000000000030, 0x8000000100129630, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 32) = 2113;
    id v15 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v12 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Start (%s.%s), listController: '%{private,mask.hash}@'…", (uint8_t *)v11, 0x2Au);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v16 = [v8 navigationController];
  if (!v16 || (v17 = v16, unsigned __int8 v18 = sub_10001C66C(), v17, (v18 & 1) == 0))
  {
    v30.receiver = v7;
    v30.super_class = ObjectType;
    [super listControllerShouldNotDeselectAfterAppearing:v8];
LABEL_24:
    sub_1000C26A4(v7, v8);
    return;
  }
  id v19 = [v8 navigationController];
  id v20 = [v8 splitViewController];
  if (!v20)
  {
    uint64_t v24 = 0;
    if (v19)
    {
LABEL_16:

      if (!v24) {
        goto LABEL_22;
      }
LABEL_21:
      swift_unknownObjectRelease();
LABEL_22:
      id v26 = [v8 splitViewController];
      if (v26)
      {
        uint64_t v27 = v26;
        [v26 isCollapsed];
      }
      goto LABEL_24;
    }
LABEL_20:
    if (!v24) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  uint64_t v21 = v20;
  id v22 = [v20 viewControllers];

  sub_100007F84();
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v24)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v24) {
      goto LABEL_15;
    }
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_14;
  }
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v25 = *(id *)(v23 + 32);
LABEL_14:
    uint64_t v24 = (uint64_t)v25;
    goto LABEL_15;
  }
  __break(1u);
}

void sub_1000C26A4(void *a1, void *a2)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFC8);
  id v5 = a1;
  id v6 = a2;
  id v15 = v5;
  id v7 = v6;
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315907;
    swift_getObjectType();
    uint64_t v12 = _typeName(_:qualified:)();
    sub_100042948(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    sub_100042948(0xD000000000000030, 0x8000000100129630, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 32) = 2113;
    id v14 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "...Complete (%s.%s), listController: '%{private,mask.hash}@'.", (uint8_t *)v10, 0x2Au);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000C29E0(void *a1, void *a2, void *a3, uint64_t (*a4)(), uint64_t a5, int a6)
{
  int v120 = a6;
  uint64_t v116 = a4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v112 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v111 = *(void *)(v112 - 8);
  uint64_t v11 = __chkstk_darwin(v112);
  BOOL v118 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v110 = (char *)v104 - v14;
  uint64_t v109 = v15;
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)v104 - v16;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_1000477B0(v17, (uint64_t)qword_10016AFC8);
  id v19 = a3;
  id v20 = v6;
  id v21 = a1;
  id v22 = a2;
  uint64_t v23 = (uint64_t)a3;
  id v24 = v19;
  id v25 = v20;
  id v121 = v21;
  id v26 = v22;
  uint64_t v119 = v18;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    os_log_t v107 = v27;
    uint64_t v31 = v30;
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    id aBlock = v108;
    *(_DWORD *)uint64_t v31 = 136317187;
    id v115 = v24;
    swift_getObjectType();
    uint64_t v33 = _typeName(_:qualified:)();
    uint64_t v106 = v23;
    uint64_t v132 = sub_100042948(v33, v34, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v132 = sub_100042948(0xD000000000000049, 0x80000001001295E0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 22) = 2160;
    uint64_t v132 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v114 = a5;
    *(_WORD *)(v31 + 32) = 2113;
    id v35 = v121;
    uint64_t v132 = (uint64_t)v121;
    id v36 = v121;
    int v105 = v29;
    id v37 = v25;
    id v38 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v104[1] = v32;
    *uint64_t v32 = v35;

    *(_WORD *)(v31 + 42) = 2160;
    uint64_t v132 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 52) = 2113;
    LOBYTE(v35) = v120;
    uint64_t v132 = (uint64_t)v26;
    id v39 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v32[1] = v26;

    id v25 = v37;
    *(_WORD *)(v31 + 62) = 2160;
    uint64_t v132 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 72) = 2081;
    uint64_t v40 = v106;
    uint64_t v132 = v106;
    id v41 = v115;
    sub_100046B9C(&qword_100163568);
    uint64_t v42 = String.init<A>(describing:)();
    uint64_t v132 = sub_100042948(v42, v43, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v24 = v115;
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 82) = 1024;
    LODWORD(v132) = v35 & 1;
    a5 = v114;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v44 = v107;
    _os_log_impl((void *)&_mh_execute_header, v107, (os_log_type_t)v105, "Start (%s.%s), listController: '%{private,mask.hash}@', viewController: '%{private,mask.hash}@', 'rootController: '%{private,mask.hash}s', animated: '%{BOOL}d'…", (uint8_t *)v31, 0x58u);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v45 = (void *)v40;
  }
  else
  {

    uint64_t v46 = v121;
    uint64_t v45 = (void *)v23;
  }
  uint64_t v47 = v118;
  if (!v45)
  {
    id v56 = [v121 navigationController];
    if (v56)
    {
      uint64_t v57 = v56;
      LODWORD(v58) = sub_10001C66C();
    }
    else
    {
      LODWORD(v58) = 0;
    }
    self;
    uint64_t v59 = swift_dynamicCastObjCClass();
    if (v59)
    {
      uint64_t v60 = (void *)v59;
      uint64_t v114 = a5;
      id v61 = v26;
      uint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.default.getter();
      BOOL v64 = os_log_type_enabled(v62, v63);
      v104[0] = v26;
      if (v64)
      {
        uint64_t v65 = swift_slowAlloc();
        LODWORD(v118) = v58;
        uint64_t v58 = (uint8_t *)v65;
        id aBlock = swift_slowAlloc();
        id v115 = v24;
        *(_DWORD *)uint64_t v58 = 136315138;
        swift_getObjectType();
        uint64_t v66 = _typeName(_:qualified:)();
        uint64_t v132 = sub_100042948(v66, v67, &aBlock);
        id v24 = v115;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "viewController is a '%s', defer to default implementation.", v58, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        LOBYTE(v58) = (_BYTE)v118;
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v90 = v114;
      if (v58)
      {
        uint64_t v91 = Logger.logObject.getter();
        os_log_type_t v92 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v93 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v93 = 0;
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "setupController is being presented from a list controller that is in a managed navigation controller, hooking up dismissal.", v93, 2u);
          swift_slowDealloc();
        }

        [v60 setTransitioningDelegate:v25];
      }
      char v130 = v116;
      uint64_t v131 = v90;
      id aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v127 = 1107296256;
      BOOL v128 = sub_1000C3EA4;
      uint64_t v129 = &unk_1001550D0;
      id v94 = _Block_copy(&aBlock);
      id v95 = v61;
      swift_retain();
      swift_release();
      v123.receiver = v25;
      v123.super_class = ObjectType;
      objc_msgSendSuper2(&v123, "listController:pushViewController:givenRootController:withModalStylePopupStateApplicator:animated:", v121, v60, v24, v94, v120 & 1);
      _Block_release(v94);

LABEL_28:
      uint64_t v55 = 0;
      id v26 = (id)v104[0];
      goto LABEL_36;
    }
    uint64_t v129 = (void *)swift_getObjectType();
    id aBlock = (uint64_t)v26;
    id v68 = v26;
    sub_100046B9C((uint64_t *)&unk_100163560);
    if (swift_dynamicCast())
    {
      swift_unknownObjectRelease();
      if (v58)
      {
        v104[0] = v26;
        id v69 = v68;
        uint64_t v70 = v113;
        PreferencesControllerRecipe.init(viewController:)();
        uint64_t v71 = v111;
        uint64_t v72 = *(void (**)(void, void, void))(v111 + 16);
        id v73 = v110;
        uint64_t v74 = v112;
        v72(v110, v70, v112);
        v72(v47, v73, v74);
        unint64_t v75 = (*(unsigned __int8 *)(v71 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
        uint64_t v76 = swift_allocObject();
        *(unsigned char *)(v76 + 16) = v120 & 1;
        uint64_t v77 = v121;
        *(void *)(v76 + 24) = v69;
        *(void *)(v76 + 32) = v77;
        (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v76 + v75, v73, v74);
        id v78 = v77;
        id v79 = v69;
        id v80 = [v78 transitionCoordinator];
        if (v80)
        {
          uint64_t v81 = v80;
          uint64_t v82 = *(void (**)(void, void))(v71 + 8);
          v82(v47, v74);
          uint64_t v83 = Logger.logObject.getter();
          os_log_type_t v84 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v83, v84))
          {
            uint64_t v85 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v85 = 0;
            _os_log_impl((void *)&_mh_execute_header, v83, v84, "listController has an active transition is flight, deferring navigation push to after active transition completes.", v85, 2u);
            swift_slowDealloc();
          }

          char v130 = nullsub_1;
          uint64_t v131 = 0;
          id aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v127 = 1107296256;
          BOOL v128 = sub_1000C4270;
          uint64_t v129 = &unk_100155058;
          id v86 = _Block_copy(&aBlock);
          uint64_t v87 = swift_allocObject();
          *(void *)(v87 + 16) = sub_1000C4C94;
          *(void *)(v87 + 24) = v76;
          char v130 = sub_1000C4D54;
          uint64_t v131 = v87;
          id aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v127 = 1107296256;
          BOOL v128 = sub_1000C4270;
          uint64_t v129 = &unk_1001550A8;
          uint64_t v88 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v81 animateAlongsideTransition:v86 completion:v88];
          _Block_release(v88);
          _Block_release(v86);
          swift_release();
          swift_unknownObjectRelease();
          uint64_t v89 = v112;
        }
        else
        {
          id aBlock = 0;
          uint64_t v103 = Transaction.disablesAnimations.setter();
          __chkstk_darwin(v103);
          v104[-4] = v79;
          v104[-3] = v78;
          v104[-2] = v47;
          swift_retain();
          withTransaction<A>(_:_:)();
          swift_release();
          uint64_t v89 = v112;
          swift_release();
          swift_release();
          uint64_t v82 = *(void (**)(void, void))(v71 + 8);
          v82(v47, v89);
        }
        v82(v113, v89);
        goto LABEL_28;
      }
      char v100 = Logger.logObject.getter();
      os_log_type_t v101 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v100, v101))
      {
        unint64_t v102 = (uint8_t *)swift_slowAlloc();
        id v115 = v24;
        *(_WORD *)unint64_t v102 = 0;
        _os_log_impl((void *)&_mh_execute_header, v100, v101, "listController that requested presentation is not from a managed navigation stack, defer to default implementation.", v102, 2u);
        id v24 = v115;
        swift_slowDealloc();
      }

      char v130 = v116;
      uint64_t v131 = a5;
      id aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v127 = 1107296256;
      BOOL v128 = sub_1000C3EA4;
      uint64_t v129 = &unk_100155008;
      uint64_t v99 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v124.receiver = v25;
      v124.super_class = ObjectType;
      [super listController:v121 pushViewController:v68 givenRootController:v24 withModalStylePopupStateApplicator:v99 animated:v120 & 1];
    }
    else
    {
      char v96 = Logger.logObject.getter();
      os_log_type_t v97 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v98 = 0;
        _os_log_impl((void *)&_mh_execute_header, v96, v97, "viewController is not actually a PSController, defer to default implementation.", v98, 2u);
        swift_slowDealloc();
      }

      char v130 = v116;
      uint64_t v131 = a5;
      id aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v127 = 1107296256;
      BOOL v128 = sub_1000C3EA4;
      uint64_t v129 = &unk_100154FE0;
      uint64_t v99 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v125.receiver = v25;
      v125.super_class = ObjectType;
      [v125 listController:v121 pushViewController:v68 givenRootController:v24 withModalStylePopupStateApplicator:v99 animated:[v120 & 1]];
    }
    _Block_release(v99);
    uint64_t v55 = 0;
    goto LABEL_36;
  }
  char v48 = v45;
  id v49 = v24;
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "rootController is non-nil, defer to default implementation.", v52, 2u);
    swift_slowDealloc();
  }

  char v130 = v116;
  uint64_t v131 = a5;
  id aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v127 = 1107296256;
  BOOL v128 = sub_1000C3EA4;
  uint64_t v129 = &unk_1001550F8;
  uint64_t v53 = _Block_copy(&aBlock);
  id v54 = v49;
  swift_retain();
  swift_release();
  v122.receiver = v25;
  v122.super_class = ObjectType;
  [super listController:v121 pushViewController:v26 givenRootController:v54 withModalStylePopupStateApplicator:v53 animated:v120 & 1];
  _Block_release(v53);

  uint64_t v55 = v48;
LABEL_36:
  sub_1000C3A48(v25, v121, v26, v55);
}

void sub_1000C3A48(void *a1, void *a2, void *a3, void *a4)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000477B0(v8, (uint64_t)qword_10016AFC8);
  id v9 = a4;
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  id v13 = v9;
  id v27 = v10;
  id v14 = v11;
  id v15 = v12;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    id v26 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136317187;
    swift_getObjectType();
    uint64_t v19 = _typeName(_:qualified:)();
    sub_100042948(v19, v20, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    sub_100042948(0xD000000000000049, 0x80000001001295E0, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 22) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 32) = 2113;
    id v21 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v26 = v14;

    *(_WORD *)(v18 + 42) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 52) = 2113;
    id v22 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v26[1] = v15;

    *(_WORD *)(v18 + 62) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 72) = 2081;
    id v23 = v13;
    sub_100046B9C(&qword_100163568);
    uint64_t v24 = String.init<A>(describing:)();
    sub_100042948(v24, v25, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 82) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "...Complete (%s.%s), listController: '%{private,mask.hash}@', viewController: '%{private,mask.hash}@', 'rootController: '%{private,mask.hash}s', animated: '%{BOOL}d'.", (uint8_t *)v18, 0x58u);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1000C3EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1000C3EF8()
{
  return swift_release_n();
}

uint64_t sub_1000C3F90(void *a1, void *a2, uint64_t a3)
{
  id v25 = a2;
  uint64_t appended = type metadata accessor for AppendSettingsNavigationPathAction();
  uint64_t v6 = *(void *)(appended - 8);
  __chkstk_darwin(appended);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000477B0(v9, (uint64_t)qword_10016AFC8);
  id v10 = a1;
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    id v22 = v8;
    uint64_t v14 = v13;
    id v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 141558275;
    uint64_t v26 = 1752392040;
    uint64_t v24 = appended;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2113;
    os_log_t v20 = v11;
    uint64_t v26 = (uint64_t)v10;
    id v15 = v10;
    uint64_t v23 = a3;
    id v16 = v15;
    uint64_t appended = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v10;

    os_log_t v17 = v20;
    _os_log_impl((void *)&_mh_execute_header, v20, v12, "Appending %{private,mask.hash}@ to the navigation path.", (uint8_t *)v14, 0x16u);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v22;
    swift_slowDealloc();
  }
  else
  {
  }
  id v18 = [v25 traitCollection];
  UITraitCollection.appendSettingsNavigationPath.getter();

  type metadata accessor for PreferencesControllerRecipe();
  sub_1000C4D7C();
  AppendSettingsNavigationPathAction.callAsFunction<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, appended);
}

uint64_t sub_1000C4270(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1000C43B4(void *a1, char a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v6 = [a1 navigationController];
  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  if ((sub_10001C66C() & 1) == 0)
  {

LABEL_9:
    v15.receiver = v2;
    v15.super_class = ObjectType;
    return (uint64_t)[super listControllerIsOnTopOfNavigationStack:a1 searchTopMostViewControllerChildren:a2 & 1];
  }
  id v8 = [v7 topViewController];
  id v9 = a1;
  do
  {
    if (v8)
    {
      sub_100007F84();
      id v11 = v9;
      id v12 = v8;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13)
      {

        return 1;
      }
    }
    id v10 = [v9 parentViewController];

    id v9 = v10;
  }
  while (v10);

  return 0;
}

void sub_1000C45FC(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = a1;
    id v6 = [(id)v4 parentController];
    if (!v6)
    {
LABEL_61:

      return;
    }
    id v7 = v6;
    id v8 = [v6 rootController];

    if (v8) {
      goto LABEL_60;
    }
    unsigned int v9 = [(id)v4 usePopupStyle];
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (!v10) {
      goto LABEL_60;
    }
    unint64_t v11 = v10;
    id v7 = v7;
    if (!v9)
    {
      uint64_t v1 = &selRef_application_configurationForConnectingSceneSession_options_;
      if ([(id)v4 modalPresentationStyle] != (id)2)
      {

LABEL_46:
        id v7 = v7;
        if ([(id)v4 v1[251]] == (id)2)
        {
          [(id)v11 formSheetViewDidDisappear];
          id v29 = [(id)v11 childViewControllers];
          sub_100007F84();
          unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v30 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v31)
            {
LABEL_49:
              if (v31 >= 1)
              {
                for (uint64_t i = 0; i != v31; ++i)
                {
                  if ((v30 & 0xC000000000000001) != 0) {
                    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v33 = *(id *)(v30 + 8 * i + 32);
                  }
                  unint64_t v34 = v33;
                  self;
                  id v35 = (void *)swift_dynamicCastObjCClass();
                  if (v35) {
                    [v35 formSheetViewDidDisappear];
                  }
                }
                goto LABEL_59;
              }
LABEL_64:
              __break(1u);
              return;
            }
          }
          else
          {
            uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v31) {
              goto LABEL_49;
            }
          }
LABEL_59:

          swift_bridgeObjectRelease();
          goto LABEL_60;
        }

        id v5 = v7;
LABEL_60:

        id v5 = v7;
        goto LABEL_61;
      }
      [(id)v11 formSheetViewWillDisappear];
      id v19 = [(id)v11 childViewControllers];
      sub_100007F84();
      unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v13 >> 62))
      {
        uint64_t v20 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v20)
        {
LABEL_45:

          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
LABEL_19:
        if (v20 < 1)
        {
          __break(1u);
          goto LABEL_64;
        }
        for (uint64_t j = 0; j != v20; ++j)
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v22 = *(id *)(v13 + 8 * j + 32);
          }
          uint64_t v23 = v22;
          self;
          uint64_t v24 = (void *)swift_dynamicCastObjCClass();
          if (v24) {
            [v24 formSheetViewWillDisappear];
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v1 = &selRef_application_configurationForConnectingSceneSession_options_;
        goto LABEL_46;
      }
LABEL_44:
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v20) {
        goto LABEL_45;
      }
      goto LABEL_19;
    }
    [(id)v11 popupViewWillDisappear];
    id v12 = [(id)v11 childViewControllers];
    uint64_t v4 = sub_100007F84();
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v14) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v14) {
        goto LABEL_30;
      }
    }
    if (v14 < 1)
    {
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    for (uint64_t k = 0; k != v14; ++k)
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(v13 + 8 * k + 32);
      }
      os_log_t v17 = v16;
      self;
      id v18 = (void *)swift_dynamicCastObjCClass();
      if (v18) {
        [v18 popupViewWillDisappear];
      }
    }
LABEL_30:

    swift_bridgeObjectRelease();
    id v7 = v7;
    uint64_t v1 = &selRef_application_configurationForConnectingSceneSession_options_;
    [(id)v11 popupViewDidDisappear];
    unint64_t v13 = (unint64_t)[(id)v11 childViewControllers];
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v4) {
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v4) {
        goto LABEL_59;
      }
    }
    if (v4 >= 1)
    {
      for (uint64_t m = 0; m != v4; ++m)
      {
        if ((v11 & 0xC000000000000001) != 0) {
          id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v26 = *(id *)(v11 + 8 * m + 32);
        }
        id v27 = v26;
        self;
        uint64_t v28 = (void *)swift_dynamicCastObjCClass();
        if (v28) {
          [v28 popupViewDidDisappear];
        }
      }
      goto LABEL_59;
    }
    goto LABEL_43;
  }
}

uint64_t sub_1000C4B70()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C4BA8(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1000C4BC0()
{
  uint64_t v1 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C4C94()
{
  type metadata accessor for PreferencesControllerRecipe();

  return sub_1000C3EF8();
}

uint64_t sub_1000C4CFC()
{
  return sub_1000C3F90(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000C4D1C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C4D54()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1000C4D7C()
{
  unint64_t result = qword_100164190;
  if (!qword_100164190)
  {
    type metadata accessor for PreferencesControllerRecipe();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164190);
  }
  return result;
}

uint64_t sub_1000C4DE8()
{
  return sub_1000C4CFC();
}

unint64_t sub_1000C4E00(uint64_t a1)
{
  uint64_t v118 = a1;
  uint64_t v2 = type metadata accessor for NSBundle.SettingsPluginVariant();
  __chkstk_darwin(v2 - 8);
  uint64_t v116 = type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
  uint64_t v115 = *(void *)(v116 - 8);
  uint64_t v3 = __chkstk_darwin(v116);
  uint64_t v5 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v114 - v6;
  uint64_t v8 = type metadata accessor for FamilyRowStatus();
  uint64_t v117 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NSBundle.PreferencesPluginLocation();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v119 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v124 = *(void *)(v123 - 8);
  uint64_t v14 = __chkstk_darwin(v123);
  id v121 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  objc_super v122 = (char *)&v114 - v16;
  uint64_t v17 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v17);
  id v19 = (uint64_t *)((char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = swift_allocObject();
  *(void *)(v125 + 16) = 0;
  uint64_t v120 = v1;
  sub_100046BE0(v1, (uint64_t)v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v20 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController;
      uint64_t v21 = v118;
      id v22 = *(void **)(v118 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController);
      if (!v22) {
        goto LABEL_82;
      }
      v128[5] = &OBJC_PROTOCOL___PSController;
      uint64_t v23 = swift_dynamicCastObjCProtocolConditional();
      id v24 = v22;
      if (v23)
      {
        id v25 = v122;
        PreferencesControllerRecipe.init(viewController:)();
        uint64_t v26 = v124;
        uint64_t v27 = v123;
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v25, v123);
        type metadata accessor for PreferencesControllerRepresentableModel();
        swift_allocObject();
        uint64_t v28 = v118;
        uint64_t v29 = PreferencesControllerRepresentableModel.init(recipe:)();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
        unint64_t v30 = *(void **)(v28 + v20);
        if (v30)
        {
          *(void *)(v28 + v20) = 0;

          id v24 = v30;
        }

        uint64_t v31 = v29 | 0x4000000000000000;
        uint64_t v32 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v32 - 8) + 8))(v19, v32);
      }
      else
      {
        SettingsAnyPlatformViewControllerRecipe.init(_:)();
        uint64_t v98 = v115;
        uint64_t v99 = v116;
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v5, v7, v116);
        type metadata accessor for SettingsAnyPlatformViewControllerModel();
        swift_allocObject();
        uint64_t v31 = SettingsAnyPlatformViewControllerModel.init(recipe:)();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v7, v99);
        char v100 = *(void **)(v21 + v20);
        if (v100)
        {
          *(void *)(v21 + v20) = 0;

          id v24 = v100;
        }

        uint64_t v101 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v101 - 8) + 8))(v19, v101);
      }
      goto LABEL_64;
    case 3u:
      id v19 = (uint64_t *)v19[1];
      uint64_t v42 = v125;
      uint64_t v43 = v120;
      goto LABEL_26;
    case 4u:
      id v19 = (uint64_t *)v19[1];
      uint64_t v42 = v125;
      uint64_t v43 = v120;
      id v44 = sub_1000C6CE4(v125, v120);
      Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      [v44 setProperty:isa forKey:PSDMCHandleReauthKey];

LABEL_26:
      id v62 = [self defaultStore];
      if (!v62)
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      os_log_type_t v63 = v62;
      NSString v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v19 = (uint64_t *)[v63 accountWithIdentifier:v64];

      if (!v19)
      {
        while (1)
        {
LABEL_82:
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
        }
      }
      if (![self preferredViewControllerClassForAccount:v19 preferiCloudAccount:1]
        || (swift_getObjCClassMetadata(),
            v128[13] = &OBJC_PROTOCOL___PSController,
            (uint64_t v65 = swift_dynamicCastTypeToObjCProtocolConditional()) == 0)
        || ((uint64_t v66 = v65, sub_10002E1D8(0, (unint64_t *)&qword_1001634F8), swift_dynamicCastMetatype())
          ? (uint64_t v67 = v66)
          : (uint64_t v67 = 0),
            !v67))
      {
LABEL_81:

        goto LABEL_82;
      }
      id v68 = sub_1000C6CE4(v42, v43);
      [v68 setProperty:v19 forKey:ACUIAccountKey];

      id v69 = sub_1000C6CE4(v42, v43);
      sub_100046B9C(&qword_1001635C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v71;
      *(void *)(inited + 48) = v19;
      uint64_t v72 = v19;
      sub_10006FA84(inited);
      sub_10002E1D8(0, (unint64_t *)&qword_100162EC0);
      Class v73 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v69 setUserInfo:v73];

      sub_1000C6CE4(v42, v43);
      uint64_t v74 = v122;
      PreferencesControllerRecipe.init(viewControllerClass:specifier:)();
      uint64_t v75 = v124;
      uint64_t v76 = v123;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v74, v123);
      type metadata accessor for PreferencesControllerRepresentableModel();
      swift_allocObject();
      uint64_t v77 = PreferencesControllerRepresentableModel.init(recipe:)();

      (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
LABEL_37:
      swift_release();
      return v77 | 0x4000000000000000;
    case 5u:
      uint64_t v34 = *v19;
      unint64_t v33 = v19[1];
      sub_1000092BC();
      uint64_t v35 = v125;
      uint64_t v36 = v120;
      id v37 = sub_1000C6CE4(v125, v120);
      sub_1000A76A4(v37, v34, v33);
      swift_release();

      swift_bridgeObjectRelease();
      sub_10002E1D8(0, (unint64_t *)&unk_1001635B0);
      sub_1000C6CE4(v35, v36);
      id v38 = v122;
      PreferencesControllerRecipe.init(viewControllerClass:specifier:)();
      uint64_t v39 = v124;
      uint64_t v40 = v123;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v38, v123);
      type metadata accessor for PreferencesControllerRepresentableModel();
      swift_allocObject();
      uint64_t v41 = PreferencesControllerRepresentableModel.init(recipe:)();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
      goto LABEL_55;
    case 6u:
      sub_1000C6CE4(v125, v120);
      if (qword_10015F120 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1000477B0(v11, (uint64_t)qword_10016AF70);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v119, v61, v11);
      goto LABEL_43;
    case 7u:
      static FamilySettingsFactory.sharedProvider.getter();
      sub_1000403E0(v128, v128[3]);
      static FamilySettingsFactory.sharedProvider.getter();
      sub_1000403E0(v127, v127[3]);
      dispatch thunk of FamilySettingsViewsProtocol.rowStatus.getter();
      id v78 = (void *)dispatch thunk of FamilySettingsViewsProtocol.viewController(for:)();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v10, v8);
      sub_100042A1C((uint64_t)v127);
      sub_100042A1C((uint64_t)v128);
      uint64_t v126 = &OBJC_PROTOCOL___PSController;
      uint64_t v79 = swift_dynamicCastObjCProtocolConditional();
      id v80 = v78;
      if (v79)
      {
        sub_1000C6CE4(v125, v120);
        uint64_t v81 = v122;
        PreferencesControllerRecipe.init(viewController:specifier:)();
        uint64_t v82 = v124;
        uint64_t v83 = v123;
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v81, v123);
        type metadata accessor for PreferencesControllerRepresentableModel();
        swift_allocObject();
        uint64_t v77 = PreferencesControllerRepresentableModel.init(recipe:)();

        (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
        goto LABEL_37;
      }
      SettingsAnyPlatformViewControllerRecipe.init(_:)();
      uint64_t v102 = v115;
      uint64_t v103 = v116;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v5, v7, v116);
      type metadata accessor for SettingsAnyPlatformViewControllerModel();
      swift_allocObject();
      uint64_t v31 = SettingsAnyPlatformViewControllerModel.init(recipe:)();

      (*(void (**)(char *, uint64_t))(v102 + 8))(v7, v103);
LABEL_64:
      swift_release();
      return v31;
    case 9u:
      sub_1000C6CE4(v125, v120);
      static NSBundle.PreferencesPluginLocation.default.getter();
      os_log_type_t v84 = v122;
      goto LABEL_53;
    case 0xAu:
    case 0xDu:
    case 0x11u:
    case 0x23u:
      sub_1000C6CE4(v125, v120);
      static NSBundle.PreferencesPluginLocation.default.getter();
LABEL_43:
      os_log_type_t v84 = v122;
      goto LABEL_53;
    case 0xBu:
    case 0xEu:
    case 0xFu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x20u:
    case 0x22u:
    case 0x24u:
    case 0x29u:
    case 0x2Cu:
      sub_1000C6CE4(v125, v120);
      static NSBundle.PreferencesPluginLocation.default.getter();
      os_log_type_t v84 = v122;
      goto LABEL_53;
    case 0xCu:
    case 0x14u:
    case 0x16u:
    case 0x17u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Fu:
    case 0x25u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x2Au:
    case 0x2Fu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
      sub_1000C6CE4(v125, v120);
      static NSBundle.PreferencesPluginLocation.default.getter();
      goto LABEL_52;
    case 0x12u:
      uint64_t v85 = (unint64_t *)&unk_1001635A8;
      goto LABEL_49;
    case 0x13u:
      uint64_t v86 = v125;
      uint64_t v87 = v120;
      id v88 = sub_1000C6CE4(v125, v120);
      NSString v89 = String._bridgeToObjectiveC()();
      [v88 setProperty:v89 forKey:PSDataSourceClassKey];

      sub_1000C6CE4(v86, v87);
      static NSBundle.PreferencesPluginLocation.default.getter();
      uint64_t v90 = v122;
      goto LABEL_47;
    case 0x15u:
      uint64_t v85 = (unint64_t *)&unk_1001635A0;
      goto LABEL_49;
    case 0x18u:
      uint64_t v85 = (unint64_t *)&unk_100163598;
LABEL_49:
      sub_10002E1D8(0, v85);
      goto LABEL_50;
    case 0x21u:
      uint64_t v46 = (uint64_t *)(id)MobileGestalt_get_current_device();
      if (!v46) {
        goto LABEL_77;
      }
      id v19 = v46;
      int pearlIDCapability = MobileGestalt_get_pearlIDCapability();

      uint64_t v48 = v125;
      uint64_t v49 = v120;
      if (!pearlIDCapability) {
        goto LABEL_14;
      }
      uint64_t v50 = (uint64_t *)(id)MobileGestalt_get_current_device();
      if (!v50) {
        goto LABEL_79;
      }
      id v19 = v50;
      char isSimulator = MobileGestalt_get_isSimulator();

      if (isSimulator)
      {
LABEL_14:
        uint64_t v52 = (uint64_t *)(id)MobileGestalt_get_current_device();
        if (!v52) {
          goto LABEL_78;
        }
        id v19 = v52;
        int touchIDCapability = MobileGestalt_get_touchIDCapability();

        if (!touchIDCapability) {
          goto LABEL_18;
        }
        id v54 = (id)MobileGestalt_get_current_device();
        if (!v54)
        {
LABEL_80:
          __break(1u);
          goto LABEL_81;
        }
        uint64_t v55 = v54;
        char v56 = MobileGestalt_get_isSimulator();

        if ((v56 & 1) == 0)
        {
          uint64_t v109 = (void *)(v118
                          + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper);
          if (*(void *)(v118
                         + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper
                         + 8))
          {
            *uint64_t v109 = 0;
            v109[1] = 0;
            id v110 = sub_1000C6CE4(v48, v49);
            NSString v111 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v110 setProperty:v111 forKey:PSSpecifierPasscodeKey];
          }
          uint64_t v60 = (unint64_t *)&unk_100163588;
        }
        else
        {
LABEL_18:
          uint64_t v57 = (void *)(v118 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper);
          if (*(void *)(v118
                         + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper
                         + 8))
          {
            *uint64_t v57 = 0;
            v57[1] = 0;
            id v58 = sub_1000C6CE4(v48, v49);
            NSString v59 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v58 setProperty:v59 forKey:PSSpecifierPasscodeKey];
          }
          uint64_t v60 = (unint64_t *)&unk_100163580;
        }
      }
      else
      {
        uint64_t v106 = (void *)(v118 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper);
        if (*(void *)(v118
                       + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper
                       + 8))
        {
          *uint64_t v106 = 0;
          v106[1] = 0;
          id v107 = sub_1000C6CE4(v48, v49);
          NSString v108 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v107 setProperty:v108 forKey:PSSpecifierPasscodeKey];
        }
        uint64_t v60 = (unint64_t *)&unk_100163590;
      }
      sub_10002E1D8(0, v60);
      sub_1000C6CE4(v48, v49);
      uint64_t v90 = v122;
      PreferencesControllerRecipe.init(viewControllerClass:specifier:)();
LABEL_74:
      uint64_t v112 = v124;
      uint64_t v113 = v123;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v90, v123);
      type metadata accessor for PreferencesControllerRepresentableModel();
      swift_allocObject();
      uint64_t v41 = PreferencesControllerRepresentableModel.init(recipe:)();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v90, v113);
LABEL_55:
      swift_release();
      return v41 | 0x4000000000000000;
    case 0x2Bu:
      type metadata accessor for iCloudHomeViewController();
LABEL_50:
      sub_1000C6CE4(v125, v120);
      os_log_type_t v84 = v122;
      PreferencesControllerRecipe.init(viewControllerClass:specifier:)();
      goto LABEL_54;
    case 0x2Du:
      sub_1000C6CE4(v125, v120);
      static NSBundle.PreferencesPluginLocation.appleInternal.getter();
LABEL_52:
      os_log_type_t v84 = v122;
LABEL_53:
      PreferencesControllerRecipe.init(specifier:bundleName:location:viewControllerClassName:)();
LABEL_54:
      uint64_t v95 = v124;
      uint64_t v96 = v123;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v84, v123);
      type metadata accessor for PreferencesControllerRepresentableModel();
      swift_allocObject();
      uint64_t v41 = PreferencesControllerRepresentableModel.init(recipe:)();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v84, v96);
      goto LABEL_55;
    case 0x2Eu:
      uint64_t v91 = v125;
      uint64_t v92 = v120;
      id v93 = sub_1000C6CE4(v125, v120);
      NSString v94 = String._bridgeToObjectiveC()();
      [v93 setProperty:v94 forKey:PSDataSourceClassKey];

      sub_1000C6CE4(v91, v92);
      static NSBundle.PreferencesPluginLocation.appleInternal.getter();
      uint64_t v90 = v122;
LABEL_47:
      PreferencesControllerRecipe.init(specifier:bundleName:location:viewControllerClassName:)();
      goto LABEL_74;
    case 0x33u:
      static NSBundle.SettingsPluginVariant.default.getter();
      type metadata accessor for SettingsExperiencePlugin();
      swift_allocObject();
      uint64_t v104 = SettingsExperiencePlugin.init(pluginName:variant:)();
      SettingsExperiencePlugin.loadPluginIfNeeded()();
      if (v105)
      {
        swift_release();
        swift_errorRelease();
LABEL_59:
        swift_release();
        return 0xC000000000000000;
      }
      else
      {
        swift_release();
        return v104 | 0x8000000000000000;
      }
    default:
      sub_100045F84((uint64_t)v19);
      goto LABEL_59;
  }
}

uint64_t sub_1000C6CAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000C6CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)(a1 + 16);
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    id v4 = *(id *)(a1 + 16);
  }
  else
  {
    uint64_t v5 = (void *)sub_1000C6D64(a2);
    swift_beginAccess();
    uint64_t v6 = *v3;
    *uint64_t v3 = v5;
    id v4 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v4;
}

uint64_t sub_1000C6D64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000477E8();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [objc_allocWithZone((Class)PSSpecifier) initWithName:v5 target:0 set:0 get:0 detail:0 cell:1 edit:0];

  if (v6)
  {
    char v7 = sub_100070024();
    if (v7 == 74)
    {
      sub_100046BE0(a1, (uint64_t)v4);
    }
    else
    {
      sub_1000F3778(v7);
      uint64_t v9 = v8;
      sub_100046BE0(a1, (uint64_t)v4);
      if (v9)
      {
LABEL_6:
        sub_100045F84((uint64_t)v4);
        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v6 setIdentifier:v10];

        return (uint64_t)v6;
      }
    }
    sub_10004D594();
    goto LABEL_6;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t *sub_1000C6F14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100161530);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v11 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          goto LABEL_10;
        case 2u:
          uint64_t v12 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          uint64_t v13 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
          uint64_t v14 = (uint64_t *)((char *)a1 + v13);
          uint64_t v15 = (uint64_t *)((char *)a2 + v13);
          uint64_t v16 = v15[1];
          *uint64_t v14 = *v15;
          v14[1] = v16;
          swift_bridgeObjectRetain();
          goto LABEL_10;
        case 3u:
        case 4u:
        case 5u:
          uint64_t v17 = a2[1];
          *a1 = *a2;
          a1[1] = v17;
          swift_bridgeObjectRetain();
LABEL_10:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(v8 + 64));
          break;
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

void *sub_1000C7260(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v11 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          goto LABEL_15;
        case 2u:
          uint64_t v14 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          uint64_t v15 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
          uint64_t v16 = (void *)((char *)a1 + v15);
          uint64_t v17 = (void *)((char *)a2 + v15);
          *uint64_t v16 = *v17;
          v16[1] = v17[1];
          swift_bridgeObjectRetain();
          goto LABEL_15;
        case 3u:
        case 4u:
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(v7 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_100045F84((uint64_t)a1);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(sub_100046B9C((uint64_t *)&unk_100161530) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    sub_100045F84((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v13 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v19 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v21 = (void *)((char *)a1 + v20);
        id v22 = (void *)((char *)a2 + v20);
        void *v21 = *v22;
        v21[1] = v22[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        size_t v12 = *(void *)(v7 + 64);
        goto LABEL_8;
    }
  }
LABEL_17:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1000C7790(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100161530);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = sub_100046B9C(&qword_10015F7F8);
      *(_OWORD *)&a1[*(int *)(v12 + 48)] = *(_OWORD *)&a2[*(int *)(v12 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1000C79D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_17;
      }
      sub_100045F84((uint64_t)a1);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v19 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = sub_100046B9C(&qword_10015F7F8);
        *(_OWORD *)&a1[*(int *)(v20 + 48)] = *(_OWORD *)&a2[*(int *)(v20 + 48)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload <= 1)
      {
        uint64_t v15 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_9;
    }
    sub_100045F84((uint64_t)a1);
LABEL_8:
    size_t v13 = *(void *)(*(void *)(sub_100046B9C((uint64_t *)&unk_100161530) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v13);
    goto LABEL_17;
  }
  if (v10) {
    goto LABEL_8;
  }
  unsigned int v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    uint64_t v16 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    uint64_t v17 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&a1[*(int *)(v17 + 48)] = *(_OWORD *)&a2[*(int *)(v17 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (v11 > 1)
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_1000C7D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    int v11 = (v10 >> 57) & 0x18 | v10 & 7;
    unsigned int v12 = 128 - (((v10 >> 57) >> 5) | (4 * v11));
    if (v11) {
      return v12;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000C7E68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (-(int)a2 >> 2) & 0x1F | (32 * (-(int)a2 & 0x7F));
    *(void *)(a1 + *(int *)(a4 + 20)) = (v11 | (v11 << 57)) & 0xF000000000000007;
  }
  return result;
}

void sub_1000C7F38()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D930(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_10004984C((uint64_t)v8, (uint64_t)v5);
    Hasher._combine(_:)(1u);
    sub_100045B14();
    sub_100045F84((uint64_t)v5);
  }
  uint64_t v9 = type metadata accessor for SettingsAppDetailContent();
  unint64_t v10 = *(void *)(v1 + *(int *)(v9 + 20));
  switch(v10 >> 62)
  {
    case 1uLL:
      uint64_t v15 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      type metadata accessor for PreferencesControllerRepresentableModel();
      uint64_t v11 = (unint64_t *)&unk_100163670;
      unsigned int v12 = &type metadata accessor for PreferencesControllerRepresentableModel;
      goto LABEL_10;
    case 2uLL:
      Swift::UInt v13 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      goto LABEL_8;
    case 3uLL:
      Swift::UInt v13 = 1;
LABEL_8:
      Hasher._combine(_:)(v13);
      break;
    default:
      uint64_t v15 = *(void *)(v1 + *(int *)(v9 + 20));
      type metadata accessor for SettingsAnyPlatformViewControllerModel();
      uint64_t v11 = (unint64_t *)&unk_100163678;
      unsigned int v12 = &type metadata accessor for SettingsAnyPlatformViewControllerModel;
LABEL_10:
      sub_100068880(v11, (void (*)(uint64_t))v12);
      dispatch thunk of Hashable.hash(into:)();
      break;
  }
}

Swift::Int sub_1000C8198()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000C81DC()
{
  return Hasher._finalize()();
}

unint64_t sub_1000C821C()
{
  unint64_t result = qword_100163668;
  if (!qword_100163668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163668);
  }
  return result;
}

uint64_t sub_1000C8270(unint64_t *a1, unint64_t *a2)
{
  return sub_1000C85F0(*a1, *a2);
}

void sub_1000C827C(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      type metadata accessor for PreferencesControllerRepresentableModel();
      uint64_t v2 = (unint64_t *)&unk_100163670;
      uint64_t v3 = &type metadata accessor for PreferencesControllerRepresentableModel;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v4 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      goto LABEL_5;
    case 3uLL:
      Swift::UInt v4 = 1;
LABEL_5:
      Hasher._combine(_:)(v4);
      break;
    default:
      type metadata accessor for SettingsAnyPlatformViewControllerModel();
      uint64_t v2 = (unint64_t *)&unk_100163678;
      uint64_t v3 = &type metadata accessor for SettingsAnyPlatformViewControllerModel;
LABEL_7:
      sub_100068880(v2, (void (*)(uint64_t))v3);
      dispatch thunk of Hashable.hash(into:)();
      break;
  }
}

Swift::Int sub_1000C8394(unint64_t a1)
{
  Hasher.init(_seed:)();
  switch(a1 >> 62)
  {
    case 1uLL:
      type metadata accessor for PreferencesControllerRepresentableModel();
      uint64_t v2 = (unint64_t *)&unk_100163670;
      uint64_t v3 = &type metadata accessor for PreferencesControllerRepresentableModel;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v4 = a1 & 0x3FFFFFFFFFFFFFFFLL;
      goto LABEL_5;
    case 3uLL:
      Swift::UInt v4 = 1;
LABEL_5:
      Hasher._combine(_:)(v4);
      break;
    default:
      type metadata accessor for SettingsAnyPlatformViewControllerModel();
      uint64_t v2 = (unint64_t *)&unk_100163678;
      uint64_t v3 = &type metadata accessor for SettingsAnyPlatformViewControllerModel;
LABEL_7:
      sub_100068880(v2, (void (*)(uint64_t))v3);
      dispatch thunk of Hashable.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_1000C84BC()
{
  return sub_1000C8394(*v0);
}

void sub_1000C84C4(uint64_t a1)
{
  sub_1000C827C(a1, *v1);
}

Swift::Int sub_1000C84CC()
{
  unint64_t v1 = *v0;
  Hasher.init(_seed:)();
  switch(v1 >> 62)
  {
    case 1uLL:
      type metadata accessor for PreferencesControllerRepresentableModel();
      uint64_t v2 = (unint64_t *)&unk_100163670;
      uint64_t v3 = &type metadata accessor for PreferencesControllerRepresentableModel;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v4 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      goto LABEL_5;
    case 3uLL:
      Swift::UInt v4 = 1;
LABEL_5:
      Hasher._combine(_:)(v4);
      break;
    default:
      type metadata accessor for SettingsAnyPlatformViewControllerModel();
      uint64_t v2 = (unint64_t *)&unk_100163678;
      uint64_t v3 = &type metadata accessor for SettingsAnyPlatformViewControllerModel;
LABEL_7:
      sub_100068880(v2, (void (*)(uint64_t))v3);
      dispatch thunk of Hashable.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1000C85F0(unint64_t a1, unint64_t a2)
{
  switch(a1 >> 62)
  {
    case 1uLL:
      if (a2 >> 62 != 1) {
        goto LABEL_11;
      }
      type metadata accessor for PreferencesControllerRepresentableModel();
      swift_retain();
      swift_retain();
      char v2 = static PreferencesControllerRepresentableModel.== infix(_:_:)();
      goto LABEL_10;
    case 2uLL:
      if (a2 >> 62 != 2) {
        goto LABEL_11;
      }
      uint64_t result = (a1 & 0x3FFFFFFFFFFFFFFFLL) == (a2 & 0x3FFFFFFFFFFFFFFFLL);
      break;
    case 3uLL:
      if (a2 != 0xC000000000000000) {
        goto LABEL_11;
      }
      uint64_t result = 1;
      break;
    default:
      if (a2 >> 62)
      {
LABEL_11:
        uint64_t result = 0;
      }
      else
      {
        type metadata accessor for SettingsAnyPlatformViewControllerModel();
        swift_retain();
        swift_retain();
        char v2 = static SettingsAnyPlatformViewControllerModel.== infix(_:_:)();
LABEL_10:
        swift_release();
        swift_release();
        uint64_t result = v2 & 1;
      }
      break;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SettingsAppDetailContent.ContentType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for SettingsAppDetailContent.ContentType()
{
  return swift_release();
}

void *assignWithCopy for SettingsAppDetailContent.ContentType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for SettingsAppDetailContent.ContentType(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for SettingsAppDetailContent.ContentType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SettingsAppDetailContent.ContentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SettingsAppDetailContent.ContentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1000C88A8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 == 3) {
    return (*a1 >> 3) + 3;
  }
  else {
    return v1;
  }
}

void *sub_1000C88C4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1000C88D4(unint64_t *result, uint64_t a2)
{
  if (a2 < 3)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 3);
    unint64_t v3 = 0xC000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for SettingsAppDetailContent.ContentType()
{
  return &type metadata for SettingsAppDetailContent.ContentType;
}

uint64_t sub_1000C8914(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    swift_retain();
    sub_10003A440(v8, v9);
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    char v10 = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = v10;
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    swift_retain();
    uint64_t v14 = sub_100046B9C(&qword_100163690);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1000C8A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_10003A440(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_10003A520(v8, v9);
  char v10 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100046B9C(&qword_100163690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1000C8B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_100046B9C(&qword_100163690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1000C8BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  sub_10003A520(v7, v8);
  char v9 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v9;
  swift_release();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_100046B9C(&qword_100163690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1000C8C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C8C78);
}

uint64_t sub_1000C8C78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100046B9C(&qword_100163690);
    char v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000C8D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C8D40);
}

void *sub_1000C8D40(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100046B9C(&qword_100163690);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000C8DEC()
{
  return swift_release();
}

uint64_t sub_1000C8E58()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t sub_1000C8F00()
{
  uint64_t v1 = (int *)(type metadata accessor for PrimarySettingsList() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  sub_10003A520(*(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
  swift_release();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_100046B9C(&qword_100163690);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000C9020()
{
  return PPTTestCase.performScrollTest(_:)();
}

uint64_t sub_1000C9088()
{
  type metadata accessor for ScrollViewProxy();

  return sub_1000C8DEC();
}

uint64_t sub_1000C90F8()
{
  return sub_1000C8E58();
}

uint64_t sub_1000C9114()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000C9150(char a1)
{
  uint64_t v2 = v1;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_100042948(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD00000000000001ELL, 0x800000010012A120, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2082;
    uint64_t v10 = 0xD000000000000016;
    unint64_t v11 = 0x800000010012A100;
    switch(a1)
    {
      case 1:
        unint64_t v11 = 0x8000000100124620;
        uint64_t v10 = 0xD000000000000010;
        break;
      case 2:
        uint64_t v10 = 0xD000000000000019;
        uint64_t v12 = "primaryAppleAccountSignIn";
        goto LABEL_11;
      case 3:
        uint64_t v10 = 0xD000000000000018;
        uint64_t v12 = "applicationDebugSettings";
        goto LABEL_11;
      case 4:
        uint64_t v10 = 0xD000000000000024;
        uint64_t v12 = "appleAccountNetworkReachabilityAlert";
        goto LABEL_11;
      case 5:
        uint64_t v10 = 0xD000000000000020;
        uint64_t v12 = "followUpNetworkReachabilityAlert";
LABEL_11:
        unint64_t v11 = (unint64_t)(v12 - 32) | 0x8000000000000000;
        break;
      case 6:
        unint64_t v11 = 0xED00006C61646F4DLL;
        uint64_t v10 = 0x7055776F6C6C6F66;
        break;
      case 7:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v10 = 7104878;
        break;
      default:
        break;
    }
    sub_100042948(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s), identifier: '%{public}s'…", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (a1 == 7)
  {
    swift_getKeyPath();
    uint64_t v13 = v2;
    sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    a1 = 7;
  }
  else
  {
    sub_1000CDA78(a1);
  }
  sub_1000CD730(v2, a1);
}

uint64_t sub_1000C9558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10003F5D0(a1, &qword_100164100);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000C9704(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1)) {
      break;
    }
    if (v11 >= v23) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v23) {
        goto LABEL_27;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 2;
        if (v11 + 2 >= v23) {
          goto LABEL_27;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v11 + 3;
          if (v11 + 3 >= v23) {
            goto LABEL_27;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v11 + 4;
            if (v11 + 4 >= v23)
            {
LABEL_27:
              swift_release();
              char v20 = 0;
              return v20 & 1;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_30;
                }
                if (v11 >= v23) {
                  goto LABEL_27;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v11);
                ++v16;
                if (v15) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }
      int64_t v11 = v16;
    }
LABEL_18:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_19:
    uint64_t v17 = *(void *)(*(void *)(a3 + 56) + 8 * v13);
    v21[0] = *(unsigned char *)(*(void *)(a3 + 48) + v13);
    uint64_t v22 = v17;
    swift_bridgeObjectRetain();
    char v18 = a1(v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v20 & 1;
    }
    char v19 = v18;
    uint64_t result = swift_bridgeObjectRelease();
    if (v19)
    {
      swift_release();
      char v20 = 1;
      return v20 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000C98F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FLFollowUpInformation();
  uint64_t v96 = *(void *)(v4 - 8);
  uint64_t v97 = v4;
  __chkstk_darwin(v4);
  uint64_t v95 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100046B9C(&qword_100163680);
  __chkstk_darwin(v91);
  uint64_t v92 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v8 = *(void *)(v7 - 8);
  id v106 = (id)v7;
  uint64_t v107 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v89 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v99 = (uint64_t)&v88 - v12;
  __chkstk_darwin(v11);
  uint64_t v102 = (uint64_t)&v88 - v13;
  uint64_t v14 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v90 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v94 = (uint64_t)&v88 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v93 = (uint64_t)&v88 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v101 = (uint64_t)&v88 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  id v25 = (char *)&v88 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v104 = (uint64_t)&v88 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v30 = (char *)&v88 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v88 - v31;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v34 = sub_1000477B0(v33, (uint64_t)qword_10016AFC8);
  sub_10003F75C(a1, (uint64_t)v32, (uint64_t *)&unk_100161530);
  swift_retain_n();
  uint64_t v98 = v34;
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v105 = a1;
  uint64_t v103 = v25;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    v109[0] = v88;
    *(_DWORD *)uint64_t v38 = 136315650;
    uint64_t v39 = _typeName(_:qualified:)();
    uint64_t v108 = sub_100042948(v39, v40, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v100 = v2;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    uint64_t v108 = sub_100042948(0xD000000000000010, 0x8000000100129FD0, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 22) = 2082;
    sub_10003F75C((uint64_t)v32, (uint64_t)v30, (uint64_t *)&unk_100161530);
    id v41 = v106;
    if ((*(unsigned int (**)(char *, uint64_t, id))(v107 + 48))(v30, 1, v106) == 1)
    {
      sub_10003F5D0((uint64_t)v30, (uint64_t *)&unk_100161530);
      unint64_t v42 = 0xE300000000000000;
      uint64_t v43 = 7104878;
    }
    else
    {
      uint64_t v43 = sub_100048BDC();
      unint64_t v42 = v45;
      sub_10003DC6C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
    uint64_t v108 = sub_100042948(v43, v42, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v32, (uint64_t *)&unk_100161530);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Start (%s.%s), identifier: '%{public}s'…", (uint8_t *)v38, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v105;
    uint64_t v44 = v100;
  }
  else
  {
    swift_release_n();
    sub_10003F5D0((uint64_t)v32, (uint64_t *)&unk_100161530);

    uint64_t v44 = v2;
    id v41 = v106;
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v88 - 2) = v44;
  *((unsigned char *)&v88 - 8) = 0;
  uint64_t v47 = v44 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel___observationRegistrar;
  v109[0] = v44;
  uint64_t v100 = sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v48 = v104;
  sub_10003F75C(a1, v104, (uint64_t *)&unk_100161530);
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, id))(v107 + 48);
  if (v49(v48, 1, v41) == 1)
  {
    sub_10003F5D0(v48, (uint64_t *)&unk_100161530);
    goto LABEL_17;
  }
  uint64_t v107 = v47;
  uint64_t v50 = v102;
  sub_1000585FC(v48, v102, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  if (qword_10015F058 != -1) {
    swift_once();
  }
  uint64_t v51 = (uint64_t)(id)qword_10016AE18;
  unint64_t v52 = sub_100042C2C();
  uint64_t v53 = type metadata accessor for PrimarySettingsListItemVisibilityEvaluator();
  v109[3] = (uint64_t)&type metadata for PrimarySettingsListDataModelGenerationContext;
  v109[4] = (uint64_t)&off_100152B50;
  v109[0] = v51;
  *(&v88 - 4) = __chkstk_darwin(v53);
  *(&v88 - 3) = v52;
  *(&v88 - 2) = (uint64_t)v109;
  id v54 = (id)v51;
  LOBYTE(v51) = sub_1000C9704((uint64_t (*)(char *))sub_1000D3B10, (uint64_t)(&v88 - 6), v52);
  sub_100042A1C((uint64_t)v109);

  swift_bridgeObjectRelease();
  if ((v51 & 1) == 0)
  {
    sub_10003DC6C(v50, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);

    id v41 = v106;
    a1 = v105;
LABEL_17:
    sub_1000CAB4C();
    uint64_t v62 = (uint64_t)v103;
    sub_10003F75C(a1, (uint64_t)v103, (uint64_t *)&unk_100161530);
    if (v49(v62, 1, v41) == 1)
    {
LABEL_18:
      sub_1000CCB0C(a1);
LABEL_19:
      sub_10003F5D0(v62, (uint64_t *)&unk_100161530);
      goto LABEL_26;
    }
    uint64_t v63 = v101;
    sub_10003F75C(v62, v101, (uint64_t *)&unk_100161530);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v69 = (uint64_t)v95;
        uint64_t v68 = v96;
        uint64_t v70 = v97;
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v63, v97);
        sub_1000CB6D0(v69, 0, 0);
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
        goto LABEL_19;
      case 2u:
        uint64_t v71 = (uint64_t *)(v63 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
        uint64_t v72 = *v71;
        uint64_t v73 = v71[1];
        uint64_t v75 = (uint64_t)v95;
        uint64_t v74 = v96;
        uint64_t v76 = v97;
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v63, v97);
        sub_1000CB6D0(v75, v72, v73);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
        goto LABEL_19;
      case 6u:
      case 0x2Bu:
        if (sub_1000CB024()) {
          goto LABEL_18;
        }
        sub_10003F5D0(v62, (uint64_t *)&unk_100161530);
        uint64_t v64 = v93;
        sub_10003F75C(a1, v93, (uint64_t *)&unk_100161530);
        if (v49(v64, 1, v41) == 1)
        {
          __break(1u);
LABEL_43:
          __break(1u);
          JUMPOUT(0x1000CA868);
        }
        sub_1000CCF98(v64);
        sub_10003DC6C(v64, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        goto LABEL_26;
      case 0x10u:
        sub_1000D3590();
        goto LABEL_19;
      case 0x21u:
        id v77 = [self sharedConnection];
        if (!v77) {
          goto LABEL_43;
        }
        id v78 = v77;
        unsigned int v79 = [v77 isPasscodeSet];

        uint64_t v80 = v94;
        sub_10003F75C(a1, v94, (uint64_t *)&unk_100161530);
        if (!v79)
        {
          sub_10003F5D0(v80, (uint64_t *)&unk_100161530);
          goto LABEL_18;
        }
        swift_getKeyPath();
        v109[0] = v44;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v81 = v44 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection;
        swift_beginAccess();
        uint64_t v82 = v92 + *(int *)(v91 + 48);
        uint64_t v83 = v81;
        uint64_t v84 = v92;
        sub_10003F75C(v83, v92, (uint64_t *)&unk_100161530);
        sub_10003F75C(v80, v82, (uint64_t *)&unk_100161530);
        if (v49(v84, 1, v41) == 1)
        {
          sub_10003F5D0(v80, (uint64_t *)&unk_100161530);
          if (v49(v82, 1, v41) == 1)
          {
            sub_10003F5D0(v84, (uint64_t *)&unk_100161530);
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v85 = v90;
          sub_10003F75C(v84, v90, (uint64_t *)&unk_100161530);
          if (v49(v82, 1, v41) != 1)
          {
            uint64_t v86 = v89;
            sub_1000585FC(v82, v89, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
            char v87 = sub_1000460F4(v85, v86);
            sub_10003DC6C(v86, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
            sub_10003F5D0(v94, (uint64_t *)&unk_100161530);
            sub_10003DC6C(v85, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
            sub_10003F5D0(v84, (uint64_t *)&unk_100161530);
            if (v87) {
              goto LABEL_18;
            }
LABEL_41:
            sub_1000CB4E8();
            goto LABEL_19;
          }
          sub_10003F5D0(v94, (uint64_t *)&unk_100161530);
          sub_10003DC6C(v85, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        }
        sub_10003F5D0(v84, &qword_100163680);
        goto LABEL_41;
      default:
        sub_10003DC6C(v63, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        goto LABEL_18;
    }
  }
  id v106 = v54;
  uint64_t v55 = v50;
  uint64_t v56 = v99;
  sub_1000579A8(v55, v99, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v57, v58))
  {
    NSString v59 = (uint8_t *)swift_slowAlloc();
    v109[0] = swift_slowAlloc();
    *(_DWORD *)NSString v59 = 136446210;
    uint64_t v60 = sub_100048BDC();
    uint64_t v108 = sub_100042948(v60, v61, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DC6C(v56, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Attempted to select '%{public}s' which is not selectable based on visibility rules.", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003DC6C(v56, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }

  uint64_t v65 = v106;
  uint64_t v66 = swift_getKeyPath();
  __chkstk_darwin(v66);
  *(&v88 - 2) = v44;
  *((unsigned char *)&v88 - 8) = 1;
  v109[0] = v44;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  swift_release();
  sub_10003DC6C(v102, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  a1 = v105;
LABEL_26:
  sub_1000CF5B4(v44, a1, 0xD000000000000010, 0x8000000100129FD0);
  return sub_10003F5D0(a1, (uint64_t *)&unk_100161530);
}

uint64_t sub_1000CA918@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CDF40(&OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection, (uint64_t *)&unk_100161530, a1);
}

uint64_t sub_1000CA934()
{
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1000CA9D4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1000CAA7C()
{
  return swift_release();
}

void sub_1000CAB4C()
{
  uint64_t v1 = v0;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000477B0(v2, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = _typeName(_:qualified:)();
    sub_100042948(v6, v7, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_100042948(0xD000000000000017, 0x800000010012A290, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Start (%s.%s)…", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_getKeyPath();
  uint64_t v17 = v1;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v8 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  if (v8 == 7)
  {
    if (v11)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "No presented item to dismiss, ignoring.", v12, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (v11)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v14 = 0xD000000000000016;
      unint64_t v15 = 0x800000010012A100;
      switch(v8)
      {
        case 1:
          uint64_t v14 = 0xD000000000000010;
          uint64_t v16 = "supervisedDevice";
          goto LABEL_17;
        case 2:
          uint64_t v14 = 0xD000000000000019;
          uint64_t v16 = "primaryAppleAccountSignIn";
          goto LABEL_17;
        case 3:
          uint64_t v14 = 0xD000000000000018;
          uint64_t v16 = "applicationDebugSettings";
          goto LABEL_17;
        case 4:
          uint64_t v14 = 0xD000000000000024;
          uint64_t v16 = "appleAccountNetworkReachabilityAlert";
          goto LABEL_17;
        case 5:
          uint64_t v14 = 0xD000000000000020;
          uint64_t v16 = "followUpNetworkReachabilityAlert";
LABEL_17:
          unint64_t v15 = (unint64_t)(v16 - 32) | 0x8000000000000000;
          break;
        case 6:
          unint64_t v15 = 0xED00006C61646F4DLL;
          uint64_t v14 = 0x7055776F6C6C6F66;
          break;
        default:
          break;
      }
      sub_100042948(v14, v15, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Dismissing identifier '%{public}s'.", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000C9150(7);
  }
  sub_1000CFD30(v1, 0xD000000000000017, 0x800000010012A290);
}

uint64_t sub_1000CB024()
{
  uint64_t v36 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v36);
  uint64_t v37 = (uint64_t)v33 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v7 = *(void *)(v38 - 8);
  uint64_t v8 = __chkstk_darwin(v38);
  os_log_type_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)v33 - v12;
  uint64_t v15 = sub_1000370AC(v11);
  uint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    v33[0] = v14;
    v33[1] = v13;
    uint64_t v34 = v6;
    uint64_t v17 = *(void *)(type metadata accessor for PrimarySettingsListSectionModel() - 8);
    unint64_t v18 = v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v19 = *(void *)(v17 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = swift_bridgeObjectRetain();
      sub_10005C24C(v20);
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
    uint64_t v21 = v39;
    uint64_t v6 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v21[2];
  if (v22)
  {
    uint64_t v23 = (uint64_t)v21 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v24 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000579A8(v23, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      swift_storeEnumTagMultiPayload();
      char v25 = sub_1000460F4((uint64_t)v10, (uint64_t)v3);
      sub_10003DC6C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      if (v25) {
        break;
      }
      sub_10003DC6C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      v23 += v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_1000585FC((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v26 = 0;
  }
  else
  {
LABEL_11:
    uint64_t v26 = 1;
  }
  uint64_t v27 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, v26, 1, v38);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v27) == 1)
  {
    sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100163AD0);
    return 0;
  }
  else
  {
    uint64_t v29 = v35;
    sub_1000585FC((uint64_t)v6, v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v30 = v29 + *(int *)(v27 + 20);
    uint64_t v31 = v37;
    sub_1000579A8(v30, v37, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    sub_10003DC6C(v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_10003DC6C(v31, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      return 0;
    }
    else
    {
      uint64_t result = *(void *)(v31 + 8);
      if (result)
      {
        uint64_t v32 = *(void **)(v31 + 40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1000CB4E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100046B9C(&qword_100164100);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper + 8))
  {
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000477B0(v6, (uint64_t)qword_10016AFC8);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Device has passcode set, requesting modern passcode challenge.", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v1;
    sub_1000C9558((uint64_t)v5, (uint64_t)&unk_100163AE8, (uint64_t)v12);
    return swift_release();
  }
  return result;
}

void sub_1000CB6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v110 = a2;
  uint64_t v111 = a3;
  uint64_t v6 = (char *)type metadata accessor for Logger();
  uint64_t v118 = *((void *)v6 - 1);
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for FLFollowUpInformation();
  uint64_t v120 = *(void **)(v122 - 8);
  uint64_t v9 = v120[8];
  uint64_t v10 = __chkstk_darwin(v122);
  id v121 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = ((char *)&v105 - v11);
  uint64_t v13 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_100163B30);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v112 = (uint64_t)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v113 = (char *)&v105 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v105 - v21;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1000477B0((uint64_t)v6, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v123 = v23;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v119 = v6;
  os_log_t v116 = v12;
  uint64_t v117 = v8;
  uint64_t v114 = v15;
  uint64_t v115 = v9;
  if (v26)
  {
    uint64_t v27 = a1;
    uint64_t v28 = swift_slowAlloc();
    v125[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v29 = _typeName(_:qualified:)();
    v126[0] = sub_100042948(v29, v30, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    v126[0] = sub_100042948(0xD000000000000041, 0x800000010012A180, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Start (%s.%s)…", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v27;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v31 = sub_100056ED8()[9];
  swift_retain();
  swift_release();
  if (!v31)
  {
    swift_retain_n();
    unint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      v125[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315394;
      uint64_t v48 = _typeName(_:qualified:)();
      v126[0] = sub_100042948(v48, v49, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      v126[0] = sub_100042948(0xD000000000000041, 0x800000010012A180, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "…Complete (%s.%s) no observer.", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  uint64_t v32 = (void *)FLFollowUpModelObserver.followUpGroup(with:)();
  if (!v32)
  {
    swift_retain_n();
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      v125[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315394;
      uint64_t v53 = _typeName(_:qualified:)();
      v126[0] = sub_100042948(v53, v54, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      v126[0] = sub_100042948(0xD000000000000041, 0x800000010012A180, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "…Complete (%s.%s) no group.", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    swift_release();
    return;
  }
  id v109 = v32;
  swift_getKeyPath();
  uint64_t v33 = v4 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel___observationRegistrar;
  v125[0] = v4;
  uint64_t v107 = sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  uint64_t v108 = v33;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v34 = v4 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__currentlyLoadingFollowUp;
  swift_beginAccess();
  sub_10003F75C(v34, (uint64_t)v22, &qword_100163B30);
  uint64_t v35 = v120;
  uint64_t v36 = v122;
  uint64_t v105 = (uint64_t (*)(char *, uint64_t, uint64_t))v120[6];
  int v37 = v105(v22, 1, v122);
  sub_10003F5D0((uint64_t)v22, &qword_100163B30);
  if (v37 != 1)
  {
    uint64_t v55 = v117;
    uint64_t v56 = v118;
    uint64_t v57 = v119;
    (*(void (**)(char *, uint64_t, char *))(v118 + 16))(v117, v123, v119);
    ((void (*)(char *, uint64_t, uint64_t))v35[2])(v121, a1, v36);
    swift_retain_n();
    os_log_type_t v58 = Logger.logObject.getter();
    LODWORD(v123) = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v58, (os_log_type_t)v123))
    {
      swift_release_n();
      swift_release();
      swift_unknownObjectRelease();
      ((void (*)(char *, uint64_t))v35[1])(v121, v36);

      swift_release_n();
      (*(void (**)(char *, char *))(v56 + 8))(v55, v57);
      return;
    }
    os_log_t v116 = v58;
    uint64_t v106 = v31;
    uint64_t v59 = swift_slowAlloc();
    uint64_t v115 = swift_slowAlloc();
    v126[0] = v115;
    *(_DWORD *)uint64_t v59 = 136315906;
    uint64_t v60 = _typeName(_:qualified:)();
    uint64_t v124 = sub_100042948(v60, v61, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2080;
    uint64_t v124 = sub_100042948(0xD000000000000041, 0x800000010012A180, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v59 + 22) = 2082;
    uint64_t v62 = v121;
    uint64_t v63 = FLFollowUpInformation.title.getter();
    uint64_t v124 = sub_100042948(v63, v64, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v65 = (void (*)(char *, uint64_t))v35[1];
    v65(v62, v36);
    *(_WORD *)(v59 + 32) = 2082;
    swift_getKeyPath();
    uint64_t v124 = v4;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v66 = v112;
    sub_10003F75C(v34, v112, &qword_100163B30);
    if (v105((char *)v66, 1, v36) != 1)
    {
      uint64_t v67 = FLFollowUpInformation.title.getter();
      unint64_t v69 = v68;
      v65((char *)v66, v36);
      uint64_t v124 = sub_100042948(v67, v69, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v70 = v116;
      _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v123, "…Complete (%s.%s). Ignoring tap on follow up '%{public}s' because currently loading '%{public}s'.", (uint8_t *)v59, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();

      swift_release();
      (*(void (**)(char *, char *))(v118 + 8))(v117, v119);
      return;
    }
    swift_release();
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v38 = (void *)FLFollowUpModelObserver.followUpItem(with:)();
  uint64_t v39 = v38;
  uint64_t v106 = v31;
  if (v38)
  {
    id v40 = [v38 actions];
    id v41 = v109;
    if (v40)
    {
      unint64_t v42 = v40;
      sub_10002E1D8(0, (unint64_t *)&qword_100162A00);
      unint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v44 = v111;
      swift_bridgeObjectRetain();
      id v121 = (char *)sub_1000D33B8(v43, v110, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v121 = 0;
    }
    uint64_t v71 = v39;
  }
  else
  {
    id v41 = v109;
    if (([v109 shouldCoalesceItems] & 1) == 0)
    {
      swift_retain_n();
      swift_unknownObjectRetain_n();
      uint64_t v95 = Logger.logObject.getter();
      uint64_t v96 = v41;
      os_log_type_t v97 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v95, v97))
      {
        uint64_t v98 = swift_slowAlloc();
        v126[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v98 = 136315650;
        uint64_t v99 = _typeName(_:qualified:)();
        uint64_t v124 = sub_100042948(v99, v100, v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 12) = 2080;
        uint64_t v124 = sub_100042948(0xD000000000000041, 0x800000010012A180, v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v98 + 22) = 2082;
        id v101 = [v96 identifier];
        uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v104 = v103;

        uint64_t v124 = sub_100042948(v102, v104, v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v95, v97, "…Complete (%s.%s) item is nil and %{public}s doesn't coalesce items.", (uint8_t *)v98, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {

        swift_release();
        swift_release_n();
        swift_unknownObjectRelease_n();
      }
      return;
    }
    uint64_t v71 = 0;
    id v121 = 0;
  }
  if (![self shouldPreflightNetworkAccessForGroup:v41 item:v71])
  {
LABEL_30:
    uint64_t v119 = (char *)v35[2];
    uint64_t v120 = v71;
    uint64_t v75 = (uint64_t)v113;
    uint64_t v123 = (uint64_t)v39;
    uint64_t v76 = v122;
    ((void (*)(char *, uint64_t, uint64_t))v119)(v113, a1, v122);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v35[7])(v75, 0, 1, v76);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v105 - 2) = (uint64_t (*)(char *, uint64_t, uint64_t))v4;
    *(&v105 - 1) = (uint64_t (*)(char *, uint64_t, uint64_t))v75;
    v126[0] = v4;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10003F5D0(v75, &qword_100163B30);
    uint64_t v78 = type metadata accessor for TaskPriority();
    uint64_t v79 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v114, 1, 1, v78);
    os_log_t v80 = v116;
    ((void (*)(os_log_t, uint64_t, uint64_t))v119)(v116, a1, v76);
    type metadata accessor for MainActor();
    uint64_t v81 = v121;
    uint64_t v119 = v121;
    swift_retain();
    id v82 = v109;
    swift_unknownObjectRetain();
    uint64_t v120 = v120;
    uint64_t v83 = static MainActor.shared.getter();
    unint64_t v84 = (*((unsigned __int8 *)v35 + 80) + 64) & ~(unint64_t)*((unsigned __int8 *)v35 + 80);
    uint64_t v85 = (void *)swift_allocObject();
    v85[2] = v83;
    v85[3] = &protocol witness table for MainActor;
    uint64_t v86 = v123;
    v85[4] = v82;
    v85[5] = v86;
    v85[6] = v81;
    v85[7] = v4;
    ((void (*)(char *, os_log_t, uint64_t))v35[4])((char *)v85 + v84, v80, v76);
    sub_1000C9558(v79, (uint64_t)&unk_100163BA0, (uint64_t)v85);
    swift_unknownObjectRelease();
    swift_release();

    swift_release();
    return;
  }
  id v72 = [self sharedNetworkObserver];
  if (!v72)
  {
LABEL_41:
    __break(1u);
    return;
  }
  uint64_t v73 = v72;
  unsigned __int8 v74 = [v72 isNetworkReachable];

  if (v74) {
    goto LABEL_30;
  }
  char v87 = Logger.logObject.getter();
  os_log_type_t v88 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v89 = 0;
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Presenting Network Alert for Follow Up.", v89, 2u);
    swift_slowDealloc();
  }

  sub_1000CDA78(5);
  swift_retain_n();
  uint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = swift_slowAlloc();
    v126[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 136315394;
    uint64_t v93 = _typeName(_:qualified:)();
    uint64_t v124 = sub_100042948(v93, v94, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v92 + 12) = 2080;
    uint64_t v124 = sub_100042948(0xD000000000000041, 0x800000010012A180, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "…Complete (%s.%s)", (uint8_t *)v92, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    swift_release();
  }
  else
  {

    swift_release_n();
    swift_release();

    swift_unknownObjectRelease();
  }
}

void sub_1000CCB0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000477B0(v10, (uint64_t)qword_10016AFC8);
  sub_10003F75C(a1, (uint64_t)v9, (uint64_t *)&unk_100161530);
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v13 = 136315650;
    uint64_t v14 = _typeName(_:qualified:)();
    uint64_t v22 = sub_100042948(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v22 = sub_100042948(0xD000000000000024, 0x800000010012A260, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 22) = 2082;
    sub_10003F75C((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_100161530);
    uint64_t v16 = type metadata accessor for PrimarySettingsListItemIdentifier();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v7, 1, v16) == 1)
    {
      sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_100161530);
      unint64_t v17 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    else
    {
      uint64_t v18 = sub_100048BDC();
      unint64_t v17 = v19;
      sub_10003DC6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
    uint64_t v22 = sub_100042948(v18, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v9, (uint64_t *)&unk_100161530);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Start (%s.%s), identifier: '%{public}s'…", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10003F5D0((uint64_t)v9, (uint64_t *)&unk_100161530);
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v21 - 2) = v2;
  *(&v21 - 1) = a1;
  uint64_t v23 = v2;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_1000CF5B4(v2, a1, 0xD000000000000024, 0x800000010012A260);
}

void sub_1000CCF98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000477B0(v7, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = a1;
    uint64_t v11 = v10;
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = _typeName(_:qualified:)();
    uint64_t v27 = sub_100042948(v12, v13, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v27 = sub_100042948(0xD000000000000041, 0x8000000100129FF0, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Start (%s.%s)…", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v26;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v14 = [self sharedNetworkObserver];
  if (v14)
  {
    unint64_t v15 = v14;
    unsigned __int8 v16 = [v14 isNetworkReachable];

    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    if (v16)
    {
      if (v19)
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Presenting Primary Apple Account Sign in.", v20, 2u);
        swift_slowDealloc();
      }

      sub_1000579A8(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v21 = type metadata accessor for PrimarySettingsListItemIdentifier();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 0, 1, v21);
      uint64_t v22 = v2
          + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingSelectionForSuccessfulPrimaryAppleAccountSignIn;
      swift_beginAccess();
      sub_1000D3B34((uint64_t)v6, v22);
      swift_endAccess();
      char v23 = 2;
    }
    else
    {
      if (v19)
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Presenting Network Alert.", v24, 2u);
        swift_slowDealloc();
      }

      char v23 = 4;
    }
    sub_1000CDA78(v23);
    sub_1000CFD30(v2, 0xD000000000000041, 0x8000000100129FF0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000CD3CC()
{
  return sub_1000CE37C();
}

uint64_t sub_1000CD3E0(uint64_t a1)
{
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection;
  swift_beginAccess();
  sub_10003F75C(v9, (uint64_t)v8, (uint64_t *)&unk_100161530);
  swift_getKeyPath();
  v11[0] = v1;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10003F75C(v9, (uint64_t)v6, (uint64_t *)&unk_100161530);
    sub_1000E4514(v1, (uint64_t)v6, a1);
    swift_unknownObjectRelease();
    sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100161530);
  }
  swift_beginAccess();
  sub_100039904(a1, v9, (uint64_t *)&unk_100161530);
  swift_endAccess();
  swift_getKeyPath();
  v11[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10003F75C(v9, (uint64_t)v6, (uint64_t *)&unk_100161530);
    sub_1000E5520(v1, (uint64_t)v8, (uint64_t)v6);
    swift_unknownObjectRelease();
    sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100161530);
  }
  sub_10003F5D0(a1, (uint64_t *)&unk_100161530);
  return sub_10003F5D0((uint64_t)v8, (uint64_t *)&unk_100161530);
}

uint64_t sub_1000CD660()
{
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier);
}

void sub_1000CD708(char *a1)
{
}

void sub_1000CD730(uint64_t a1, char a2)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000477B0(v3, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    uint64_t v7 = _typeName(_:qualified:)();
    sub_100042948(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_100042948(0xD00000000000001ELL, 0x800000010012A120, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 22) = 2082;
    uint64_t v9 = 0xD000000000000016;
    unint64_t v10 = 0x800000010012A100;
    switch(a2)
    {
      case 1:
        unint64_t v10 = 0x8000000100124620;
        uint64_t v9 = 0xD000000000000010;
        break;
      case 2:
        uint64_t v9 = 0xD000000000000019;
        uint64_t v11 = "primaryAppleAccountSignIn";
        goto LABEL_11;
      case 3:
        uint64_t v9 = 0xD000000000000018;
        uint64_t v11 = "applicationDebugSettings";
        goto LABEL_11;
      case 4:
        uint64_t v9 = 0xD000000000000024;
        uint64_t v11 = "appleAccountNetworkReachabilityAlert";
        goto LABEL_11;
      case 5:
        uint64_t v9 = 0xD000000000000020;
        uint64_t v11 = "followUpNetworkReachabilityAlert";
LABEL_11:
        unint64_t v10 = (unint64_t)(v11 - 32) | 0x8000000000000000;
        break;
      case 6:
        unint64_t v10 = 0xED00006C61646F4DLL;
        uint64_t v9 = 0x7055776F6C6C6F66;
        break;
      case 7:
        unint64_t v10 = 0xE300000000000000;
        uint64_t v9 = 7104878;
        break;
      default:
        break;
    }
    sub_100042948(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "...Complete (%s.%s), identifier: '%{public}s'", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_1000CDA78(char a1)
{
  uint64_t v2 = v1;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_100042948(v8, v9, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000014, 0x800000010012A040, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2082;
    uint64_t v10 = 0xD000000000000016;
    unint64_t v11 = 0x800000010012A100;
    switch(a1)
    {
      case 1:
        unint64_t v11 = 0x8000000100124620;
        uint64_t v10 = 0xD000000000000010;
        break;
      case 2:
        uint64_t v10 = 0xD000000000000019;
        uint64_t v12 = "primaryAppleAccountSignIn";
        goto LABEL_11;
      case 3:
        uint64_t v10 = 0xD000000000000018;
        uint64_t v12 = "applicationDebugSettings";
        goto LABEL_11;
      case 4:
        uint64_t v10 = 0xD000000000000024;
        uint64_t v12 = "appleAccountNetworkReachabilityAlert";
        goto LABEL_11;
      case 5:
        uint64_t v10 = 0xD000000000000020;
        uint64_t v12 = "followUpNetworkReachabilityAlert";
LABEL_11:
        unint64_t v11 = (unint64_t)(v12 - 32) | 0x8000000000000000;
        break;
      case 6:
        unint64_t v11 = 0xED00006C61646F4DLL;
        uint64_t v10 = 0x7055776F6C6C6F66;
        break;
      default:
        break;
    }
    sub_100042948(v10, v11, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s), identifier: '%{public}s'…", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (a1 == 3
    && (id v13 = [self currentDevice],
        unsigned __int8 v14 = objc_msgSend(v13, "sf_isInternalInstall"),
        v13,
        (v14 & 1) == 0))
  {
    uint64_t v17 = v2;
    char v18 = 3;
  }
  else
  {
    swift_getKeyPath();
    uint64_t v19 = v2;
    sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier) == 6)
    {
      unint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController);
      *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController) = 0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v19 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v17 = v2;
    char v18 = a1;
  }
  sub_1000CF9FC(v17, v18);
}

uint64_t sub_1000CDF24@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CDF40(&OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__currentlyLoadingFollowUp, &qword_100163B30, a1);
}

uint64_t sub_1000CDF40@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_10003F75C(v7, a3, a2);
}

uint64_t sub_1000CE014@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__currentlyLoadingFollowUp;
  swift_beginAccess();
  return sub_10003F75C(v4, a2, &qword_100163B30);
}

uint64_t sub_1000CE0E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100163B30);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003F75C(a1, (uint64_t)v6, &qword_100163B30);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  unint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10003F5D0((uint64_t)v6, &qword_100163B30);
}

uint64_t sub_1000CE228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__currentlyLoadingFollowUp;
  swift_beginAccess();
  sub_100039904(a2, v3, &qword_100163B30);
  return swift_endAccess();
}

uint64_t sub_1000CE29C()
{
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  sub_100037444(v1);
  return v1;
}

uint64_t sub_1000CE368()
{
  return sub_1000CE37C();
}

uint64_t sub_1000CE37C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1000CE428()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000CE50C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = v5 + *a2;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v8 = *(void *)(v6 + 8);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1000CE5CC()
{
  return swift_unknownObjectRelease();
}

void sub_1000CE6B0()
{
  id v0 = [self sharedInstance];
  unsigned int v1 = [v0 launchHasCompleted];

  if (v1)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      PassthroughSubject.send(_:)();
      swift_release();
    }
  }
}

uint64_t sub_1000CE778@<X0>(uint64_t *a1@<X8>)
{
  if (qword_10015F168 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000477B0(v2, (uint64_t)qword_10016B028);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v6 = StaticString.description.getter();
    sub_100042948(v6, v7, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Requesting new snapshot for data model due to invalidation.", v11, 2u);
      swift_slowDealloc();
    }

    uint64_t v12 = sub_100024E3C();
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t result = swift_release();
    *a1 = v12;
    a1[1] = v14;
    a1[2] = v16;
  }
  else
  {
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 1;
  }
  return result;
}

uint64_t sub_1000CE9E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cancellables);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v21 = v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_10003736C((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v24;
    uint64_t v22 = v25;
    uint64_t v5 = v26;
    uint64_t v6 = v27;
    unint64_t v7 = v28;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
    uint64_t v22 = v3 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v3 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v22 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v22 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v22 + 8 * v14);
          if (!v16)
          {
            uint64_t v17 = v6 + 5;
            while (v11 != v17)
            {
              unint64_t v16 = *(void *)(v22 + 8 * v17++);
              if (v16)
              {
                uint64_t v14 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            void *v21 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            sub_10003F5D0(v1+ OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingSelectionForSuccessfulPrimaryAppleAccountSignIn, (uint64_t *)&unk_100161530);
            sub_10003F5D0(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection, (uint64_t *)&unk_100161530);
            swift_bridgeObjectRelease();

            sub_10003F5D0(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__currentlyLoadingFollowUp, &qword_100163B30);
            sub_100035494(*(void *)(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel));
            objc_release(*(id *)(v1
                               + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation));
            swift_release();
            objc_release(*(id *)(v1
                               + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountStatusObserver));
            swift_release();
            objc_release(*(id *)(v1
                               + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountListSectionProvider));
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            sub_1000D4138(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__selectionDelegate);
            sub_1000D4138(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__updateDelegate);
            uint64_t v19 = v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel___observationRegistrar;
            uint64_t v20 = type metadata accessor for ObservationRegistrar();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
            return v1;
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v3 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v23) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CEE64()
{
  sub_1000CE9E4();

  return swift_deallocClassInstance();
}

uint64_t sub_1000CEEBC()
{
  return type metadata accessor for PrimarySettingsListModel();
}

uint64_t sub_1000CEEC4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v58 = v3;
  uint64_t v59 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v57);
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = sub_100046B9C(&qword_1001615C0);
  uint64_t v4 = swift_allocObject();
  long long v56 = xmmword_10011C360;
  uint64_t v55 = v4;
  *(_OWORD *)(v4 + 16) = xmmword_10011C360;
  sub_1000498B0(&v57, v4 + 32);
  uint64_t v5 = sub_10000B8DC();
  uint64_t v6 = type metadata accessor for iCloudListItemProvider();
  uint64_t v7 = swift_allocObject();
  swift_storeEnumTagMultiPayload();
  *(void *)(v7 + OBJC_IVAR____TtC11SettingsApp22iCloudListItemProvider_primaryAppleAccountStatusObserver) = v5;
  uint64_t v58 = v6;
  uint64_t v59 = &off_100154690;
  *(void *)&long long v57 = v7;
  uint64_t v8 = swift_allocObject();
  uint64_t v54 = v8;
  *(_OWORD *)(v8 + 16) = v56;
  sub_1000498B0(&v57, v8 + 32);
  uint64_t v58 = v2;
  uint64_t v59 = &off_100155278;
  *(void *)&long long v57 = a1;
  uint64_t v9 = type metadata accessor for WalletAndApplePayListItemProvider();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_10002BF58((uint64_t)&v57, v2);
  uint64_t v12 = *(void *)(v2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  v49[1] = v13;
  unint64_t v51 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (void *)((char *)v49 - v51);
  uint64_t v50 = *(void (**)(char *))(v12 + 16);
  v50((char *)v49 - v51);
  uint64_t v15 = *v14;
  unint64_t v16 = (void *)(v10 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_invalidator);
  v16[3] = v2;
  v16[4] = &off_100155278;
  *unint64_t v16 = v15;
  *(unsigned char *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = &_swiftEmptySetSingleton;
  v49[0] = v3;
  swift_storeEnumTagMultiPayload();
  *(void *)(v10 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_appSettingsContext) = 0;
  swift_retain();
  sub_100042A1C((uint64_t)&v57);
  uint64_t v58 = v9;
  uint64_t v59 = &off_1001536E0;
  *(void *)&long long v57 = v10;
  uint64_t v17 = swift_allocObject();
  uint64_t v53 = v17;
  *(_OWORD *)(v17 + 16) = v56;
  sub_1000498B0(&v57, v17 + 32);
  uint64_t v58 = v2;
  uint64_t v59 = &off_100155278;
  *(void *)&long long v57 = a1;
  uint64_t v18 = type metadata accessor for PaymentsAndContactlessListItemProvider();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = sub_10002BF58((uint64_t)&v57, v2);
  __chkstk_darwin(v20);
  unint64_t v21 = v51;
  uint64_t v22 = v50;
  v50((char *)v49 - v51);
  uint64_t v23 = *(void *)((char *)v49 - v21);
  uint64_t v24 = (void *)(v19 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_invalidator);
  v24[3] = v2;
  v24[4] = &off_100155278;
  *uint64_t v24 = v23;
  *(void *)(v19 + 16) = &_swiftEmptySetSingleton;
  swift_storeEnumTagMultiPayload();
  *(void *)(v19 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext) = 0;
  swift_retain();
  sub_100042A1C((uint64_t)&v57);
  uint64_t v58 = v18;
  uint64_t v59 = &off_1001535A8;
  *(void *)&long long v57 = v19;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v56;
  sub_1000498B0(&v57, v25 + 32);
  uint64_t v58 = v2;
  uint64_t v59 = &off_100155278;
  *(void *)&long long v57 = a1;
  uint64_t v26 = type metadata accessor for ClassKitListItemProvider();
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = sub_10002BF58((uint64_t)&v57, v2);
  __chkstk_darwin(v28);
  v22((char *)v49 - v21);
  uint64_t v29 = *(void *)((char *)v49 - v21);
  unint64_t v30 = (void *)(v27 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_invalidator);
  v30[3] = v2;
  v30[4] = &off_100155278;
  void *v30 = v29;
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v27 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_showClassKit) = 0;
  *(void *)(v27 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_cancellables) = &_swiftEmptySetSingleton;
  swift_retain();
  sub_100042A1C((uint64_t)&v57);
  uint64_t v58 = v26;
  uint64_t v59 = &off_1001534D8;
  *(void *)&long long v57 = v27;
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v56;
  sub_1000498B0(&v57, v31 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10011EDC0;
  *(void *)(inited + 32) = v55;
  uint64_t v33 = v53;
  *(void *)(inited + 40) = v54;
  *(void *)(inited + 48) = v33;
  *(void *)(inited + 56) = v25;
  *(void *)(inited + 64) = v31;
  swift_bridgeObjectRetain();
  uint64_t v34 = (char *)_swiftEmptyArrayStorage;
  uint64_t v35 = 32;
  while (1)
  {
    uint64_t v36 = *(void *)(inited + v35);
    uint64_t v37 = *(void *)(v36 + 16);
    int64_t v38 = *((void *)v34 + 2);
    int64_t v39 = v38 + v37;
    if (__OFADD__(v38, v37)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v39 <= *((void *)v34 + 3) >> 1)
    {
      if (*(void *)(v36 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v38 <= v39) {
        int64_t v41 = v38 + v37;
      }
      else {
        int64_t v41 = v38;
      }
      uint64_t v34 = sub_10002AF40(isUniquelyReferenced_nonNull_native, v41, 1, v34);
      if (*(void *)(v36 + 16))
      {
LABEL_13:
        uint64_t v42 = *((void *)v34 + 2);
        if ((*((void *)v34 + 3) >> 1) - v42 < v37) {
          goto LABEL_25;
        }
        unint64_t v43 = (unint64_t)&v34[40 * v42 + 32];
        if (v36 + 32 < v43 + 40 * v37 && v43 < v36 + 32 + 40 * v37) {
          goto LABEL_27;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        if (v37)
        {
          uint64_t v45 = *((void *)v34 + 2);
          BOOL v46 = __OFADD__(v45, v37);
          uint64_t v47 = v45 + v37;
          if (v46) {
            goto LABEL_26;
          }
          *((void *)v34 + 2) = v47;
        }
        goto LABEL_3;
      }
    }
    if (v37) {
      goto LABEL_24;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v35 += 8;
    if (v35 == 72)
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_100046B9C(&qword_100163C80);
      swift_arrayDestroy();
      return (uint64_t)v34;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000CF5B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - v11;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000477B0(v13, (uint64_t)qword_10016AFC8);
  sub_10003F75C(a2, (uint64_t)v12, (uint64_t *)&unk_100161530);
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = a3;
    unint64_t v17 = a4;
    uint64_t v18 = v16;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v19 = _typeName(_:qualified:)();
    uint64_t v27 = sub_100042948(v19, v20, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v27 = sub_100042948(v25, v17, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 22) = 2082;
    sub_10003F75C((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_100161530);
    uint64_t v21 = type metadata accessor for PrimarySettingsListItemIdentifier();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21) == 1)
    {
      sub_10003F5D0((uint64_t)v10, (uint64_t *)&unk_100161530);
      unint64_t v22 = 0xE300000000000000;
      uint64_t v23 = 7104878;
    }
    else
    {
      uint64_t v23 = sub_100048BDC();
      unint64_t v22 = v24;
      sub_10003DC6C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
    uint64_t v27 = sub_100042948(v23, v22, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100161530);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "...Complete (%s.%s), identifier: '%{public}s'", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100161530);
  }
}

uint64_t sub_1000CF954(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F75C(a2, (uint64_t)v5, (uint64_t *)&unk_100161530);
  return sub_1000CD3E0((uint64_t)v5);
}

void sub_1000CF9FC(uint64_t a1, char a2)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000477B0(v3, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    uint64_t v7 = _typeName(_:qualified:)();
    sub_100042948(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    sub_100042948(0xD000000000000014, 0x800000010012A040, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 22) = 2082;
    uint64_t v9 = 0xD000000000000016;
    unint64_t v10 = 0x800000010012A100;
    switch(a2)
    {
      case 1:
        unint64_t v10 = 0x8000000100124620;
        uint64_t v9 = 0xD000000000000010;
        break;
      case 2:
        uint64_t v9 = 0xD000000000000019;
        uint64_t v11 = "primaryAppleAccountSignIn";
        goto LABEL_11;
      case 3:
        uint64_t v9 = 0xD000000000000018;
        uint64_t v11 = "applicationDebugSettings";
        goto LABEL_11;
      case 4:
        uint64_t v9 = 0xD000000000000024;
        uint64_t v11 = "appleAccountNetworkReachabilityAlert";
        goto LABEL_11;
      case 5:
        uint64_t v9 = 0xD000000000000020;
        uint64_t v11 = "followUpNetworkReachabilityAlert";
LABEL_11:
        unint64_t v10 = (unint64_t)(v11 - 32) | 0x8000000000000000;
        break;
      case 6:
        unint64_t v10 = 0xED00006C61646F4DLL;
        uint64_t v9 = 0x7055776F6C6C6F66;
        break;
      default:
        break;
    }
    sub_100042948(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "...Complete (%s.%s), identifier: '%{public}s'", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_1000CFD30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000477B0(v5, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = _typeName(_:qualified:)();
    sub_100042948(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    sub_100042948(a2, a3, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "…Complete (%s.%s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1000CFF40()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000CFFEC;
  return sub_1000D0188();
}

uint64_t sub_1000CFFEC()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000D0128, v1, v0);
}

uint64_t sub_1000D0128()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000D0188()
{
  v1[53] = v0;
  sub_100046B9C((uint64_t *)&unk_100161530);
  v1[54] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[55] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[56] = v2;
  v1[57] = v3;
  return _swift_task_switch(sub_1000D0284, v2, v3);
}

uint64_t sub_1000D0284()
{
  uint64_t v1 = (void **)(v0[53] + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[58] = *v1;
  if (v2)
  {
    id v3 = objc_allocWithZone((Class)LAPasscodeVerificationService);
    id v4 = v2;
    id v5 = [v3 init];
    v0[59] = v5;
    id v6 = [objc_allocWithZone((Class)LAPasscodeVerificationServiceOptions) init];
    v0[60] = v6;
    [v6 setDismissUIAfterCompletion:0];
    v0[10] = v0;
    v0[15] = v0 + 52;
    v0[11] = sub_1000D04B0;
    uint64_t v7 = swift_continuation_init();
    v0[23] = _NSConcreteStackBlock;
    v0[24] = 0x40000000;
    v0[25] = sub_1000D143C;
    v0[26] = &unk_1001552F0;
    v0[27] = v7;
    [v5 startInParentVC:v4 options:v6 completion:v0 + 23];
    return _swift_continuation_await(v0 + 10);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1000D04B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 488) = v2;
  uint64_t v3 = *(void *)(v1 + 456);
  uint64_t v4 = *(void *)(v1 + 448);
  if (v2) {
    id v5 = sub_1000D0F04;
  }
  else {
    id v5 = sub_1000D060C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000D060C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[52];
  v1[62] = v2;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  v1[63] = sub_1000477B0(v3, (uint64_t)qword_10016AFC8);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Passcode challenge succeeded, completed, extracting credentials.", v6, 2u);
    swift_slowDealloc();
  }

  v1[2] = v1;
  v1[7] = v1 + 46;
  v1[3] = sub_1000D0800;
  uint64_t v7 = swift_continuation_init();
  v1[33] = _NSConcreteStackBlock;
  v1[34] = 0x40000000;
  v1[35] = sub_1000D14FC;
  v1[36] = &unk_100155308;
  v1[37] = v7;
  [v2 credentialOfType:-9 reply:v1 + 33];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_1000D0800()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 512) = v2;
  uint64_t v3 = *(void *)(v1 + 456);
  uint64_t v4 = *(void *)(v1 + 448);
  if (v2) {
    os_log_type_t v5 = sub_1000D119C;
  }
  else {
    os_log_type_t v5 = sub_1000D095C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000D095C()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 376);
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.fault.getter();
    BOOL v4 = os_log_type_enabled(v2, v3);
    os_log_type_t v5 = *(void **)(v0 + 496);
    id v6 = *(void **)(v0 + 472);
    uint64_t v7 = *(void **)(v0 + 480);
    uint64_t v8 = *(void **)(v0 + 464);
    if (v4)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Extracting credentials from passcode challenge failed unexpectedly.", v9, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 368);
    switch(v1 >> 62)
    {
      case 1uLL:
        uint64_t v31 = (void *)(v0 + 224);
        if (v10 >> 32 < (int)v10) {
          __break(1u);
        }
        sub_1000B9C58(v10, v1);
        swift_retain();
        uint64_t v11 = sub_1000D3114((int)v10, v10 >> 32, v1 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1000D3380);
        uint64_t v13 = v12;
        sub_1000B9BEC(v10, v1);
        goto LABEL_9;
      case 2uLL:
        uint64_t v31 = (void *)(v0 + 224);
        uint64_t v14 = *(void *)(v10 + 16);
        uint64_t v15 = *(void *)(v10 + 24);
        sub_1000D3D20(v10, v1);
        swift_retain();
        swift_retain();
        uint64_t v11 = sub_1000D3114(v14, v15, v1 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1000D3380);
        uint64_t v13 = v16;
        swift_release();
        swift_release();
LABEL_9:
        if (v13) {
          goto LABEL_17;
        }
        *(void *)(v0 + 352) = v10;
        *(void *)(v0 + 360) = v1;
        sub_1000B9C58(v10, v1);
        sub_100046B9C(&qword_100163B08);
        if (swift_dynamicCast())
        {
          sub_1000498B0((long long *)(v0 + 144), (uint64_t)v31);
          sub_1000403E0(v31, *(void *)(v0 + 248));
          if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
          {
            sub_1000403E0(v31, *(void *)(v0 + 248));
            dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
            sub_1000B9BEC(v10, v1);
            uint64_t v11 = *(void *)(v0 + 384);
            uint64_t v13 = *(void *)(v0 + 392);
            sub_100042A1C((uint64_t)v31);
            goto LABEL_18;
          }
          sub_100042A1C((uint64_t)v31);
        }
        else
        {
          *(void *)(v0 + 176) = 0;
          *(_OWORD *)(v0 + 144) = 0u;
          *(_OWORD *)(v0 + 160) = 0u;
          sub_10003F5D0(v0 + 144, (uint64_t *)&unk_100163B10);
        }
        uint64_t v17 = sub_1000D300C(v10, v1);
LABEL_16:
        uint64_t v11 = v17;
        uint64_t v13 = v18;
LABEL_17:
        sub_1000B9BEC(v10, v1);
LABEL_18:
        uint64_t v32 = v10;
        uint64_t v19 = (uint64_t *)(*(void *)(v0 + 424)
                        + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper);
        *uint64_t v19 = v11;
        v19[1] = v13;
        swift_bridgeObjectRelease();
        unint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v20, v21))
        {
          unint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Passcode challenge succeeded, continuing navigation.", v22, 2u);
          swift_slowDealloc();
        }
        uint64_t v23 = *(void **)(v0 + 496);
        unint64_t v24 = *(void **)(v0 + 472);
        uint64_t v25 = *(void **)(v0 + 480);
        uint64_t v26 = *(void **)(v0 + 464);
        uint64_t v27 = *(void *)(v0 + 432);

        uint64_t v28 = type metadata accessor for PrimarySettingsListItemIdentifier();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
        sub_1000CCB0C(v27);

        sub_1000B9BEC(v32, v1);
        sub_10003F5D0(v27, (uint64_t *)&unk_100161530);
        break;
      case 3uLL:
        *(void *)(v0 + 526) = 0;
        *(void *)(v0 + 520) = 0;
        goto LABEL_15;
      default:
        *(void *)(v0 + 534) = v10;
        *(_WORD *)(v0 + 542) = v1;
        *(unsigned char *)(v0 + 544) = BYTE2(v1);
        *(unsigned char *)(v0 + 545) = BYTE3(v1);
        *(unsigned char *)(v0 + 546) = BYTE4(v1);
        *(unsigned char *)(v0 + 547) = BYTE5(v1);
LABEL_15:
        uint64_t v17 = static String._fromUTF8Repairing(_:)();
        goto LABEL_16;
    }
  }
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_1000D0F04()
{
  uint64_t v16 = v0;
  swift_release();
  swift_willThrow();
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000477B0(v1, (uint64_t)qword_10016AFC8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  os_log_type_t v5 = *(void **)(v0 + 472);
  id v6 = *(void **)(v0 + 464);
  if (v4)
  {
    uint64_t v14 = *(void **)(v0 + 464);
    uint64_t v12 = *(void **)(v0 + 480);
    uint64_t v13 = *(void **)(v0 + 472);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = Error.localizedDescription.getter();
    *(void *)(v0 + 400) = sub_100042948(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Passcode challenge failed with error '%s'", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1000D119C()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 496);
  swift_release();
  swift_willThrow();

  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000477B0(v2, (uint64_t)qword_10016AFC8);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  id v6 = *(void **)(v0 + 472);
  uint64_t v7 = *(void **)(v0 + 464);
  if (v5)
  {
    uint64_t v15 = *(void **)(v0 + 464);
    uint64_t v13 = *(void **)(v0 + 480);
    uint64_t v14 = *(void **)(v0 + 472);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = Error.localizedDescription.getter();
    *(void *)(v0 + 400) = sub_100042948(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Passcode challenge failed with error '%s'", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1000D143C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100046B9C(&qword_100162500);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

uint64_t sub_1000D14FC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100046B9C(&qword_100162500);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      id v8 = a2;
      uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    v13[0] = v9;
    v13[1] = v11;
    sub_100049B74((uint64_t)v13, *(void *)(*(void *)(v3 + 64) + 40), (uint64_t *)&unk_100163B20);
    return swift_continuation_throwingResume();
  }
}

void sub_1000D15F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000477B0(v8, (uint64_t)qword_10016AFC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 136315138;
    sub_10003736C((unint64_t *)&qword_1001641B0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v14 = sub_100042948(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Done opening URL: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1000D1880(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[38] = a7;
  v8[39] = a8;
  v8[36] = a5;
  v8[37] = a6;
  v8[35] = a4;
  sub_100046B9C(&qword_100163B30);
  v8[40] = swift_task_alloc();
  sub_100046B9C((uint64_t *)&unk_100161530);
  v8[41] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[42] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[43] = v10;
  v8[44] = v9;
  return _swift_task_switch(sub_1000D1A2C, v10, v9);
}

uint64_t sub_1000D1A2C()
{
  uint64_t v35 = v0;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[36];
  uint64_t v1 = (void *)v0[37];
  uint64_t v3 = type metadata accessor for Logger();
  v0[45] = sub_1000477B0(v3, (uint64_t)qword_10016AFC8);
  id v4 = v1;
  swift_unknownObjectRetain_n();
  id v5 = v2;
  id v6 = v4;
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v33 = v9;
    uint64_t v10 = (void *)v0[35];
    uint64_t v31 = v6;
    uint64_t v32 = v0[36];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446722;
    id v12 = [v10 identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    v0[30] = sub_100042948(v13, v15, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    if (v32 && (id v16 = [v7 uniqueIdentifier]) != 0)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v20 = 0;
    }
    id v6 = v31;
    uint64_t v21 = v0[37];
    v0[15] = v18;
    v0[16] = v20;
    sub_100046B9C(&qword_100163BB0);
    uint64_t v22 = String.init<A>(describing:)();
    v0[32] = sub_100042948(v22, v23, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 22) = 2082;
    v0[33] = v21;
    id v24 = v31;
    sub_100046B9C(&qword_100163BB8);
    uint64_t v25 = String.init<A>(describing:)();
    v0[34] = sub_100042948(v25, v26, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v8, v33, "Performing action on follow up group '%{public}s', item '%{public}s', action: %{public}s.", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
  }
  uint64_t v27 = v0[35];
  id v28 = [objc_allocWithZone((Class)FLPreferencesController) init];
  v0[46] = v28;
  v0[2] = v0;
  v0[7] = v0 + 31;
  v0[3] = sub_1000D1E6C;
  uint64_t v29 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000D29C4;
  v0[13] = &unk_100155348;
  v0[14] = v29;
  [v28 performPreferencesActionForGroup:v27 item:v7 action:v6 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000D1E6C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 352);
  uint64_t v2 = *(void *)(*(void *)v0 + 344);
  return _swift_task_switch(sub_1000D1F74, v2, v1);
}

uint64_t sub_1000D1F74()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void **)(v0 + 368);
  uint64_t v3 = *(void **)(v0 + 288);
  uint64_t v2 = *(void **)(v0 + 296);
  swift_release();
  uint64_t v4 = *(void **)(v0 + 248);

  swift_unknownObjectRetain_n();
  id v5 = v3;
  id v6 = v2;
  id v7 = v5;
  id v8 = v6;
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  id v12 = *(void **)(v0 + 280);
  uint64_t v13 = *(void **)(v0 + 288);
  if (v11)
  {
    uint64_t v65 = v4;
    uint64_t v14 = swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446722;
    id v15 = [v12 identifier];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    *(void *)(v0 + 200) = sub_100042948(v16, v18, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2082;
    if (v13 && (id v19 = [*(id *)(v0 + 288) uniqueIdentifier]) != 0)
    {
      uint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    unint64_t v26 = *(void **)(v0 + 288);
    uint64_t v25 = *(void **)(v0 + 296);
    *(void *)(v0 + 136) = v21;
    *(void *)(v0 + 144) = v23;
    sub_100046B9C(&qword_100163BB0);
    uint64_t v27 = String.init<A>(describing:)();
    *(void *)(v0 + 216) = sub_100042948(v27, v28, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 22) = 2082;
    *(void *)(v0 + 224) = v25;
    id v29 = v25;
    sub_100046B9C(&qword_100163BB8);
    uint64_t v30 = String.init<A>(describing:)();
    *(void *)(v0 + 232) = sub_100042948(v30, v31, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Requesting view controller to present on follow up group '%{public}s', item '%{public}s', action: %{public}s.", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v65;
  }
  else
  {
    id v24 = *(void **)(v0 + 296);
    swift_unknownObjectRelease_n();
  }
  id v32 = [v4 viewControllerToPresent];
  if (v32)
  {
    uint64_t v33 = *(void *)(v0 + 304);
    uint64_t v34 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController;
    uint64_t v35 = *(void **)(v33 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController);
    *(void *)(v33 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController) = v32;
    id v36 = v32;

    id v37 = [v4 presentationStyle];
    if (v37 == (id)1)
    {
      unint64_t v64 = v36;
      sub_1000CDA78(6);
      swift_retain_n();
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        v66[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 136315394;
        uint64_t v50 = _typeName(_:qualified:)();
        *(void *)(v0 + 168) = sub_100042948(v50, v51, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v49 + 12) = 2080;
        *(void *)(v0 + 176) = sub_100042948(0xD000000000000041, 0x800000010012A180, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "…Complete (%s.%s) presenting modal.", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (v37)
      {
        uint64_t v52 = *(void **)(v33 + v34);
        *(void *)(v33 + v34) = 0;

        swift_retain_n();
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v53))
        {
          uint64_t v63 = v36;
          uint64_t v54 = swift_slowAlloc();
          v66[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315394;
          uint64_t v55 = _typeName(_:qualified:)();
          *(void *)(v0 + 152) = sub_100042948(v55, v56, v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v54 + 12) = 2080;
          *(void *)(v0 + 160) = sub_100042948(0xD000000000000041, 0x800000010012A180, v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v42, v53, "…Complete (%s.%s) unknown presentation style.", (uint8_t *)v54, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v38 = *(void *)(v0 + 328);
        uint64_t v39 = *(void *)(v0 + 312);
        uint64_t v40 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        uint64_t v41 = type metadata accessor for PrimarySettingsListItemIdentifier();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 0, 1, v41);
        sub_1000CCB0C(v38);
        sub_10003F5D0(v38, (uint64_t *)&unk_100161530);
        swift_retain_n();
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v63 = v36;
          uint64_t v44 = swift_slowAlloc();
          v66[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v44 = 136315394;
          uint64_t v45 = _typeName(_:qualified:)();
          *(void *)(v0 + 184) = sub_100042948(v45, v46, v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v44 + 12) = 2080;
          *(void *)(v0 + 192) = sub_100042948(0xD000000000000041, 0x800000010012A180, v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "…Complete (%s.%s) updated selection.", (uint8_t *)v44, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
LABEL_17:
          swift_slowDealloc();

          goto LABEL_20;
        }
      }

      swift_release_n();
    }
  }
LABEL_20:
  uint64_t v57 = *(void *)(v0 + 320);
  uint64_t v58 = *(void *)(v0 + 304);
  uint64_t v59 = type metadata accessor for FLFollowUpInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v57, 1, 1, v59);
  swift_getKeyPath();
  uint64_t v60 = swift_task_alloc();
  *(void *)(v60 + 16) = v58;
  *(void *)(v60 + 24) = v57;
  *(void *)(v0 + 208) = v58;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10003F5D0(v57, &qword_100163B30);

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
  return v61();
}

uint64_t sub_1000D29C4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;

  return _swift_continuation_resume(v2);
}

uint64_t sub_1000D2A18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v8 - 8);
  os_log_type_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2
      + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingSelectionForSuccessfulPrimaryAppleAccountSignIn;
  swift_beginAccess();
  sub_10003F75C(v11, (uint64_t)v10, (uint64_t *)&unk_100161530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1) {
    return sub_1000585FC((uint64_t)v10, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }
  sub_10003F5D0((uint64_t)v10, (uint64_t *)&unk_100161530);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000477B0(v12, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = a1;
    uint64_t v25 = v16;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v17 = _typeName(_:qualified:)();
    uint64_t v24 = sub_100042948(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v24 = sub_100042948(0xD000000000000034, 0x800000010012A3F0, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2082;
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = sub_100048BDC();
    unint64_t v21 = v20;
    sub_10003DC6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v24 = sub_100042948(v19, v21, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "(%s.%s): Application is in an unexpected state (no pending selection when called). Falling back to %{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return swift_storeEnumTagMultiPayload();
}

void *sub_1000D2E10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  id v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1000F80C8(0, v6, 0);
    id v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1000579A8(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      uint64_t v17 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_1000F80C8(v10 > 1, v11 + 1, 1);
        id v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = &off_100151D00;
      uint64_t v12 = sub_10002A3A4((uint64_t *)&v14);
      sub_1000579A8((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      v7[2] = v11 + 1;
      sub_1000498B0(&v14, (uint64_t)&v7[5 * v11 + 4]);
      sub_10003DC6C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1000D2FE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000CE50C(a1, &OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__updateDelegate, a2);
}

uint64_t sub_1000D300C(uint64_t a1, unint64_t a2)
{
  sub_1000B9C58(a1, a2);
  sub_1000D31C4(a1, a2);
  sub_1000B9C00(a1, a2);
  uint64_t v4 = static String._fromUTF8Repairing(_:)();
  swift_release();
  return v4;
}

uint64_t sub_1000D3084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1000D30C0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_1000D3114(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_1000D30C0(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_1000D31C4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_100046B9C(&qword_100161508);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_1000B9C58(a1, a2);
        uint64_t v13 = Data._copyContents(initializing:)();
        sub_1000B9C00(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1000D3370);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1000D3380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1000D33B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v17 = a2;
      a2 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(a1 + 8 * a2);
        }
        uint64_t v8 = v7;
        uint64_t v9 = a2 - 3;
        if (__OFADD__(a2 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        id v10 = [v7 identifier];
        if (!v10)
        {
          id v10 = [v8 label];
          if (!v10) {
            break;
          }
        }
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;

        if (a3)
        {
          if (v11 == v17 && v13 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_24:
            swift_bridgeObjectRelease();
            return v8;
          }
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_24;
          }
          goto LABEL_20;
        }

        swift_bridgeObjectRelease();
LABEL_5:
        ++a2;
        if (v9 == v6) {
          goto LABEL_27;
        }
      }
      if (!a3) {
        goto LABEL_24;
      }
LABEL_20:

      goto LABEL_5;
    }
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1000D3590()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v31 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v31 - v10;
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10003F5D0((uint64_t)v2, (uint64_t *)&unk_100163C10);
  }
  else
  {
    uint64_t v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
    uint64_t v36 = v4 + 32;
    id v37 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = v12;
    v12((unint64_t)v11, v2, v3);
    id v38 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
    [v38 setSensitive:1];
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000477B0(v13, (uint64_t)qword_10016AFC8);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v34(v9, v11, v3);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v33 = v4;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v32 = swift_slowAlloc();
      aBlock[0] = v32;
      *(_DWORD *)uint64_t v17 = 136315138;
      v31[1] = v17 + 4;
      sub_10003736C((unint64_t *)&qword_1001641B0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v39 = sub_100042948(v18, v19, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v20 = *(void (**)(char *, uint64_t))(v33 + 8);
      v20(v9, v3);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Opening URL: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v4 = v33;
      swift_slowDealloc();
    }
    else
    {
      unint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
      v20(v9, v3);
    }

    id v21 = [self defaultWorkspace];
    if (v21)
    {
      uint64_t v23 = v21;
      URL._bridgeToObjectiveC()(v22);
      uint64_t v25 = v24;
      unint64_t v26 = v37;
      v34(v37, v11, v3);
      unint64_t v27 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v28 = swift_allocObject();
      v35(v28 + v27, v26, v3);
      aBlock[4] = (uint64_t)sub_1000D4020;
      void aBlock[5] = v28;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000D1880;
      aBlock[3] = (uint64_t)&unk_1001553B0;
      id v29 = _Block_copy(aBlock);
      id v30 = v38;
      swift_release();
      [v23 openURL:v25 configuration:v30 completionHandler:v29];
      _Block_release(v29);

      v20(v11, v3);
    }
    else
    {
      v20(v11, v3);
    }
  }
}

void sub_1000D3AF8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

unint64_t sub_1000D3B10(char *a1)
{
  return sub_100085B10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32)) & 1;
}

uint64_t sub_1000D3B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100161530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1000D3BA0(char *a1)
{
}

void sub_1000D3BC8()
{
  *(unsigned char *)(*(void *)(v0 + 16)
           + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier) = *(unsigned char *)(v0 + 24);
}

void sub_1000D3BE0()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier) = 7;
}

uint64_t sub_1000D3BF4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000D3C34()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000ADF0;
  return sub_1000CFF40();
}

uint64_t sub_1000D3CE8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D3D20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000B9C58(a1, a2);
  }
  return a1;
}

uint64_t sub_1000D3D3C()
{
  return sub_1000CE228(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D3D58()
{
  uint64_t v1 = type metadata accessor for FLFollowUpInformation();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000D3E44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FLFollowUpInformation() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10007B630;
  return sub_1000D192C(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000D3F58()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D3F90()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000D4020(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1000D15F0(a1, a2, v6);
}

uint64_t sub_1000D40A0()
{
  return sub_1000CF954(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D40BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000CE50C(a1, &OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__selectionDelegate, a2);
}

uint64_t sub_1000D40E8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D4120()
{
  return sub_1000BA8CC();
}

void sub_1000D4128()
{
}

uint64_t sub_1000D4130@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000CE778(a1);
}

uint64_t sub_1000D4138(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000D4160()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000D42FC()
{
  return sub_1000353FC();
}

void sub_1000D4318()
{
}

uint64_t sub_1000D4330()
{
  return sub_1000D3D3C();
}

uint64_t sub_1000D4348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100066B08();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000D43AC()
{
}

void sub_1000D43D4()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsAppP33_D5FB2F106141AAB1D580745497402FE038NavigationSplitViewProxyViewController____lazy_storage___oneTimeConfiguration;
  if (*((unsigned char *)v0
       + OBJC_IVAR____TtC11SettingsAppP33_D5FB2F106141AAB1D580745497402FE038NavigationSplitViewProxyViewController____lazy_storage___oneTimeConfiguration) == 1)
  {
    id v2 = [v0 navigationController];
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 _scrollToRevealNavigationBarPart:4 animated:1];
    }
    *((unsigned char *)v0 + v1) = 0;
  }
}

id sub_1000D44A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationSplitViewProxyViewController();
  return [super dealloc];
}

void sub_1000D44DC()
{
  swift_retain();
  uint64_t v1 = (id *)&sub_100036FFC()[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation];
  swift_beginAccess();
  if (!*v1)
  {
    swift_release();
    goto LABEL_6;
  }
  id v2 = *v1;
  swift_release();
  id v3 = [v2 presentedViewController];

  if (!v3)
  {
LABEL_6:
    sub_1000DB000(v0);
    goto LABEL_8;
  }
  uint64_t v4 = (id *)&sub_100036FFC()[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation];
  swift_beginAccess();
  if (*v4)
  {
    id v5 = *v4;
    swift_release();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1000E7544;
    *(void *)(v6 + 24) = v0;
    _OWORD v8[4] = sub_1000C4D54;
    v8[5] = v6;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_10002CC68;
    v8[3] = &unk_1001554E8;
    uint64_t v7 = _Block_copy(v8);
    swift_retain();
    swift_release();
    [v5 dismissViewControllerAnimated:1 completion:v7];
    swift_release();
    _Block_release(v7);

    return;
  }
  swift_release();
LABEL_8:
  swift_release();
}

void sub_1000D46AC(uint64_t a1)
{
  uint64_t v200 = type metadata accessor for Logger();
  uint64_t v190 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  uint64_t v189 = (char *)&v167 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for SettingsAppDetailContent();
  uint64_t v172 = *(void *)(v169 - 8);
  uint64_t v4 = __chkstk_darwin(v169);
  uint64_t v174 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = v5;
  __chkstk_darwin(v4);
  uint64_t v181 = (uint64_t)&v167 - v6;
  uint64_t v7 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v198 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v198 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v193 = (uint64_t)&v167 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v175 = (uint64_t)&v167 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v184 = (uint64_t)&v167 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v171 = (uint64_t)&v167 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v168 = (uint64_t)&v167 - v20;
  __chkstk_darwin(v19);
  uint64_t v178 = (uint64_t)&v167 - v21;
  uint64_t v182 = sub_100046B9C(&qword_100163680);
  __chkstk_darwin(v182);
  uint64_t v186 = (uint64_t)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v180 = (char *)&v167 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v177 = (uint64_t)&v167 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v191 = (uint64_t)&v167 - v29;
  __chkstk_darwin(v28);
  uint64_t v183 = (uint64_t)&v167 - v30;
  uint64_t v31 = sub_100046B9C(&qword_100163F60);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v176 = (uint64_t)&v167 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v197 = (uint64_t)&v167 - v35;
  __chkstk_darwin(v34);
  id v37 = (char *)&v167 - v36;
  uint64_t v38 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)&v167 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v41);
  os_log_type_t v43 = (char *)&v167 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v188 = *(void *)(v187 - 8);
  uint64_t v44 = __chkstk_darwin(v187);
  uint64_t v192 = (uint64_t *)((char *)&v167 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v185 = (uint64_t)&v167 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v179 = (uint64_t)&v167 - v49;
  uint64_t v170 = v50;
  __chkstk_darwin(v48);
  uint64_t v52 = (char *)&v167 - v51;
  uint64_t v199 = v7;
  sub_10003DFC0(a1 + *(int *)(v7 + 20), (uint64_t)v43, type metadata accessor for SettingsURLDestination.Action);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10004F000((uint64_t)v43, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v195 = v1;
    os_log_type_t v53 = sub_100036FFC();
    sub_1000370AC(v53);
    uint64_t v55 = v54;
    swift_release();
    uint64_t v56 = *(void *)(v55 + 16);
    uint64_t v196 = v52;
    uint64_t v194 = a1;
    if (v56 && (unint64_t v57 = sub_10003DD34((uint64_t)v52), (v58 & 1) != 0))
    {
      unint64_t v59 = v57;
      uint64_t v60 = *(void *)(v55 + 56);
      uint64_t v61 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v62 = *(void *)(v61 - 8);
      sub_10003DFC0(v60 + *(void *)(v62 + 72) * v59, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v40, 0, 1, v61);
    }
    else
    {
      uint64_t v61 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v62 = *(void *)(v61 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v40, 1, 1, v61);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for PrimarySettingsListItemModel();
    int v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48))(v40, 1, v61);
    sub_10003F5D0((uint64_t)v40, (uint64_t *)&unk_100163AD0);
    if (v68 == 1)
    {
      uint64_t v69 = (uint64_t)v196;
      if (qword_10015F148 != -1) {
        swift_once();
      }
      sub_1000477B0(v200, (uint64_t)qword_10016AFC8);
      uint64_t v70 = v194;
      uint64_t v71 = v193;
      sub_10003DFC0(v194, v193, type metadata accessor for SettingsURLDestination);
      id v72 = (void (*)(void, void, void, void))v192;
      sub_10003DFC0(v69, (uint64_t)v192, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 141558531;
        uint64_t v204 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v75 + 12) = 2081;
        unint64_t v76 = sub_1000F6F94();
        uint64_t v204 = sub_100042948(v76, v77, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10003DF60(v71, type metadata accessor for SettingsURLDestination);
        *(_WORD *)(v75 + 22) = 2080;
        uint64_t v78 = sub_100048BDC();
        uint64_t v204 = sub_100042948(v78, v79, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10003DF60((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "Destination '%{private,mask.hash}s' is for a selection not possible currently '%s', stashing as pending and returning.", (uint8_t *)v75, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v80 = (uint64_t)v196;
      }
      else
      {

        sub_10003DF60((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_10003DF60(v71, type metadata accessor for SettingsURLDestination);
        uint64_t v80 = v69;
      }
      sub_10003DF60(v80, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v98 = v197;
      sub_10003DFC0(v70, v197, type metadata accessor for SettingsURLDestination);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v198 + 56))(v98, 0, 1, v199);
      uint64_t v99 = v195 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
      swift_beginAccess();
      uint64_t v100 = v98;
      goto LABEL_36;
    }
    uint64_t v81 = v195;
    uint64_t v82 = v195 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
    swift_beginAccess();
    sub_10003F75C(v82, (uint64_t)v37, &qword_100163F60);
    uint64_t v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v198 + 48);
    int v84 = v83(v37, 1, v199);
    sub_10003F5D0((uint64_t)v37, &qword_100163F60);
    if (v84 == 1)
    {
      uint64_t v85 = v183;
      sub_10003DFC0((uint64_t)v196, v183, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v86 = v188;
      char v87 = *(void **)(v188 + 56);
      uint64_t v88 = v187;
      uint64_t v193 = v188 + 56;
      uint64_t v192 = v87;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v87)(v85, 0, 1, v187);
      uint64_t v89 = sub_100036FFC();
      swift_getKeyPath();
      aBlock[0] = (uint64_t)v89;
      sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v90 = (uint64_t)&v89[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection];
      swift_beginAccess();
      uint64_t v91 = v191;
      sub_10003F75C(v90, v191, (uint64_t *)&unk_100161530);
      swift_release();
      uint64_t v92 = v186;
      uint64_t v93 = v186 + *(int *)(v182 + 48);
      sub_10003F75C(v85, v186, (uint64_t *)&unk_100161530);
      sub_10003F75C(v91, v93, (uint64_t *)&unk_100161530);
      unint64_t v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
      if (v94(v92, 1, v88) == 1)
      {
        sub_10003F5D0(v91, (uint64_t *)&unk_100161530);
        sub_10003F5D0(v85, (uint64_t *)&unk_100161530);
        int v95 = v94(v93, 1, v88);
        if (v95 == 1) {
          uint64_t v96 = (uint64_t *)&unk_100161530;
        }
        else {
          uint64_t v96 = &qword_100163680;
        }
        if (v95 == 1) {
          int v97 = -1;
        }
        else {
          int v97 = 0;
        }
      }
      else
      {
        uint64_t v117 = v177;
        sub_10003F75C(v92, v177, (uint64_t *)&unk_100161530);
        if (v94(v93, 1, v88) == 1)
        {
          sub_10003F5D0(v191, (uint64_t *)&unk_100161530);
          sub_10003F5D0(v85, (uint64_t *)&unk_100161530);
          sub_10003DF60(v117, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          int v97 = 0;
          uint64_t v96 = &qword_100163680;
        }
        else
        {
          uint64_t v119 = v93;
          uint64_t v120 = v179;
          sub_10004F000(v119, v179, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          int v97 = sub_1000460F4(v117, v120);
          sub_10003DF60(v120, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          uint64_t v96 = (uint64_t *)&unk_100161530;
          sub_10003F5D0(v191, (uint64_t *)&unk_100161530);
          sub_10003F5D0(v85, (uint64_t *)&unk_100161530);
          sub_10003DF60(v117, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        }
      }
      uint64_t v121 = v88;
      sub_10003F5D0(v92, v96);
      uint64_t v122 = v197;
      uint64_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56);
      uint64_t v124 = v199;
      v123(v197, 1, 1, v199);
      uint64_t v125 = v195 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
      swift_beginAccess();
      sub_1000E7584(v122, v125);
      swift_endAccess();
      sub_10003DFC0(v194, v122, type metadata accessor for SettingsURLDestination);
      v123(v122, 0, 1, v124);
      swift_beginAccess();
      sub_100039904(v122, v82, &qword_100163F60);
      uint64_t v126 = swift_endAccess();
      sub_1000D86AC(v126);
      sub_10003F5D0(v122, &qword_100163F60);
      uint64_t v127 = v185;
      sub_10003DFC0((uint64_t)v196, v185, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
LABEL_42:
        uint64_t v129 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v129 - 8) + 8))(v127, v129);
        if (qword_10015F148 != -1) {
          swift_once();
        }
        sub_1000477B0(v200, (uint64_t)qword_10016AFC8);
        uint64_t v130 = v178;
        sub_10003DFC0(v194, v178, type metadata accessor for SettingsURLDestination);
        uint64_t v131 = Logger.logObject.getter();
        os_log_type_t v132 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v131, v132))
        {
          uint64_t v133 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v133 = 141558275;
          uint64_t v201 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v133 + 12) = 2081;
          unint64_t v134 = sub_1000F6F94();
          uint64_t v201 = sub_100042948(v134, v135, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10003DF60(v130, type metadata accessor for SettingsURLDestination);
          uint64_t v136 = "Destination's selection '%{private,mask.hash}s' is a CFU, setting selection and allowing it to handle needed actions.";
LABEL_46:
          _os_log_impl((void *)&_mh_execute_header, v131, v132, v136, (uint8_t *)v133, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
LABEL_54:

          uint64_t v142 = (uint64_t)v180;
          uint64_t v143 = (void (*)(uint64_t, void, uint64_t, uint64_t))v192;
          sub_100036FFC();
          uint64_t v144 = (uint64_t)v196;
          sub_10003DFC0((uint64_t)v196, v142, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          v143(v142, 0, 1, v121);
          sub_1000C98F4(v142);
          swift_release();
          sub_10003DF60(v144, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          return;
        }
        goto LABEL_53;
      }
      if (EnumCaseMultiPayload != 33)
      {
        if (EnumCaseMultiPayload == 2)
        {
          sub_100046B9C(&qword_10015F7F8);
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
        sub_10003DF60(v127, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        goto LABEL_56;
      }
      id v137 = [self sharedConnection];
      if (v137)
      {
        uint64_t v138 = v137;
        unsigned int v139 = [v137 isPasscodeSet];

        if (v139)
        {
          if (qword_10015F148 != -1) {
            swift_once();
          }
          sub_1000477B0(v200, (uint64_t)qword_10016AFC8);
          uint64_t v130 = v168;
          sub_10003DFC0(v194, v168, type metadata accessor for SettingsURLDestination);
          uint64_t v131 = Logger.logObject.getter();
          os_log_type_t v132 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v131, v132))
          {
            uint64_t v133 = swift_slowAlloc();
            aBlock[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v133 = 141558275;
            uint64_t v201 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v133 + 12) = 2081;
            unint64_t v140 = sub_1000F6F94();
            uint64_t v201 = sub_100042948(v140, v141, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10003DF60(v130, type metadata accessor for SettingsURLDestination);
            uint64_t v136 = "Destination's selection '%{private,mask.hash}s' is for passcode and biometrics, settings selection an"
                   "d letting primarySettingsListModel currentSelection didSet handle actions.";
            goto LABEL_46;
          }
LABEL_53:
          sub_10003DF60(v130, type metadata accessor for SettingsURLDestination);
          goto LABEL_54;
        }
LABEL_56:
        LODWORD(v200) = v97 ^ 1;
        if (v97)
        {
          swift_getKeyPath();
          uint64_t v145 = v195;
          aBlock[0] = v195;
          sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t v146 = v145 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
          swift_beginAccess();
          uint64_t v147 = v146;
          uint64_t v148 = v181;
          sub_10003DFC0(v147, v181, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
          uint64_t v149 = (uint64_t)v196;
        }
        else
        {
          uint64_t v150 = sub_100036FFC();
          uint64_t v149 = (uint64_t)v196;
          unint64_t v151 = sub_1000C4E00((uint64_t)v150);
          swift_release();
          uint64_t v148 = v181;
          sub_10003DFC0(v149, v181, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v192)(v148, 0, 1, v121);
          *(void *)(v148 + *(int *)(v169 + 20)) = v151;
        }
        uint64_t v152 = (uint64_t)v174;
        uint64_t v153 = swift_allocObject();
        swift_weakInit();
        sub_10003DFC0(v148, v152, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
        uint64_t v154 = v171;
        sub_10003DFC0(v194, v171, type metadata accessor for SettingsURLDestination);
        uint64_t v155 = v149;
        uint64_t v156 = v179;
        sub_10003DFC0(v155, v179, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        unint64_t v157 = (*(unsigned __int8 *)(v172 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80);
        unint64_t v158 = (v173 + *(unsigned __int8 *)(v198 + 80) + v157) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
        unint64_t v159 = (v8 + *(unsigned __int8 *)(v188 + 80) + v158) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80);
        uint64_t v160 = swift_allocObject();
        *(void *)(v160 + 16) = v153;
        *(unsigned char *)(v160 + 24) = v200 & 1;
        sub_10004F000(v152, v160 + v157, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
        sub_10004F000(v154, v160 + v158, type metadata accessor for SettingsURLDestination);
        sub_10004F000(v156, v160 + v159, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v161 = (void **)&sub_100036FFC()[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation];
        swift_beginAccess();
        v162 = *v161;
        uint64_t v163 = (uint64_t)v196;
        if (v162)
        {
          swift_endAccess();
          id v164 = v162;
          swift_release();
          uint64_t v165 = swift_allocObject();
          *(void *)(v165 + 16) = sub_1000E8020;
          *(void *)(v165 + 24) = v160;
          aBlock[4] = (uint64_t)sub_1000E95D8;
          void aBlock[5] = v165;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_10002CC68;
          aBlock[3] = (uint64_t)&unk_100155628;
          Swift::Int v166 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          [v164 dismissViewControllerAnimated:1 completion:v166];
          _Block_release(v166);

          swift_release();
          sub_10003DF60(v181, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
          sub_10003DF60(v163, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        }
        else
        {
          sub_10003DF60(v181, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
          sub_10003DF60(v163, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          swift_endAccess();
          swift_release();
          swift_release();
        }
        return;
      }
LABEL_63:
      __break(1u);
      return;
    }
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v101 = v200;
    uint64_t v102 = sub_1000477B0(v200, (uint64_t)qword_10016AFC8);
    uint64_t v103 = v190;
    unint64_t v104 = v189;
    (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v189, v102, v101);
    uint64_t v105 = v184;
    sub_10003DFC0(v194, v184, type metadata accessor for SettingsURLDestination);
    swift_retain_n();
    uint64_t v106 = Logger.logObject.getter();
    uint64_t v107 = v81;
    os_log_type_t v108 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v108))
    {
      uint64_t v109 = swift_slowAlloc();
      uint64_t v193 = swift_slowAlloc();
      aBlock[0] = v193;
      *(_DWORD *)uint64_t v109 = 141558787;
      uint64_t v203 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v109 + 12) = 2081;
      unint64_t v110 = sub_1000F6F94();
      uint64_t v203 = sub_100042948(v110, v111, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DF60(v105, type metadata accessor for SettingsURLDestination);
      *(_WORD *)(v109 + 22) = 2160;
      uint64_t v203 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v109 + 32) = 2081;
      uint64_t v112 = v176;
      sub_10003F75C(v82, v176, &qword_100163F60);
      if (v83((char *)v112, 1, v199) == 1)
      {
        swift_release();
        __break(1u);
        goto LABEL_63;
      }
      uint64_t v113 = v175;
      sub_10004F000(v112, v175, type metadata accessor for SettingsURLDestination);
      unint64_t v114 = sub_1000F6F94();
      unint64_t v116 = v115;
      sub_10003DF60(v113, type metadata accessor for SettingsURLDestination);
      uint64_t v203 = sub_100042948(v114, v116, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v107 = v195;
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v106, v108, "Received new destination request '%{private,mask.hash}s' while one is already in progress ('%{private,mask.hash}s'). Setting as next pending destination.", (uint8_t *)v109, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v190 + 8))(v189, v200);
    }
    else
    {

      swift_release_n();
      sub_10003DF60(v105, type metadata accessor for SettingsURLDestination);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v101);
    }
    sub_10003DF60((uint64_t)v196, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v118 = v197;
    sub_10003DFC0(v194, v197, type metadata accessor for SettingsURLDestination);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v198 + 56))(v118, 0, 1, v199);
    uint64_t v99 = v107 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
    swift_beginAccess();
    uint64_t v100 = v118;
LABEL_36:
    sub_1000E7584(v100, v99);
    swift_endAccess();
    return;
  }
  sub_10003DF60((uint64_t)v43, type metadata accessor for SettingsURLDestination.Action);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  sub_1000477B0(v200, (uint64_t)qword_10016AFC8);
  sub_10003DFC0(a1, (uint64_t)v10, type metadata accessor for SettingsURLDestination);
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 141558275;
    uint64_t v204 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v65 + 12) = 2081;
    unint64_t v66 = sub_1000F6F94();
    uint64_t v204 = sub_100042948(v66, v67, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DF60((uint64_t)v10, type metadata accessor for SettingsURLDestination);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003DF60((uint64_t)v10, type metadata accessor for SettingsURLDestination);
  }
}

uint64_t sub_1000D6558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100036FFC();
  uint64_t v11 = sub_100056ED8();
  swift_release();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = v12;
  uint64_t v14 = v11[9];
  if (v14)
  {
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v14;
    v16[5] = v11;
    v16[6] = sub_1000E8ED0;
    v16[7] = v13;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_10000D9E4((uint64_t)v10, (uint64_t)&unk_1001629D0, (uint64_t)v16);
    swift_release();
    swift_release();
    sub_10003F5D0((uint64_t)v10, &qword_100164100);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1000D67AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v5 = swift_retain();
    unint64_t v6 = sub_10009F168(v5);
    if (v7)
    {
      sub_100061984(*(void *)(a2 + 56) + 32 * v6, (uint64_t)&v9);
      swift_release();
      if (*((void *)&v10 + 1))
      {
        sub_100046B9C(a3);
        if (swift_dynamicCast())
        {
          uint64_t result = v11;
          if (v11) {
            return result;
          }
        }
        goto LABEL_10;
      }
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
      swift_release();
    }
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_10003F5D0((uint64_t)&v9, &qword_1001609A0);
LABEL_10:
  if (qword_10015F040 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10016AE00;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  return v9;
}

uint64_t sub_1000D68E0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v3 = swift_retain();
    unint64_t v4 = sub_10009F168(v3);
    if (v5)
    {
      sub_100061984(*(void *)(a2 + 56) + 32 * v4, (uint64_t)&v7);
      swift_release();
      if (*((void *)&v8 + 1))
      {
        sub_100046B9C((uint64_t *)&unk_100164150);
        if (swift_dynamicCast())
        {
          uint64_t result = v9;
          if (v9) {
            return result;
          }
        }
        goto LABEL_10;
      }
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
      swift_release();
    }
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_10003F5D0((uint64_t)&v7, &qword_1001609A0);
LABEL_10:
  if (qword_10015F040 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10016AE00;
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  return v7;
}

uint64_t sub_1000D6A0C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for NavigationPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1000D6B08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100027268(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000D6C5C(uint64_t a1)
{
  return sub_1000D6C88(a1, (uint64_t (*)(void))sub_10009EE88, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

uint64_t sub_1000D6C88(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000D6E44(int64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v61 = a2;
  uint64_t v8 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v60 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_1001641E8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t)&v47;
  unint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = a4 >> 1;
  uint64_t v20 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v58 = v15;
  unint64_t v59 = a4;
  uint64_t v63 = a1;
  a1 = *v4;
  int64_t v21 = *(void *)(*v4 + 16);
  int64_t v22 = v21 + v20;
  if (__OFADD__(v21, v20))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v24 = *(void *)(a1 + 24) >> 1, v24 < v22))
  {
    if (v21 <= v22) {
      int64_t v25 = v21 + v20;
    }
    else {
      int64_t v25 = v21;
    }
    a1 = sub_10009EEBC(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *uint64_t v4 = a1;
    int64_t v24 = *(void *)(a1 + 24) >> 1;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v26 = v24 - v16;
  if (v19 == a3)
  {
    if (v20 <= 0)
    {
      uint64_t v20 = 0;
      uint64_t v16 = a3;
      goto LABEL_23;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v57 = v16;
    a1 = *(void *)(a1 + 16);
    uint64_t v35 = v62;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    uint64_t v50 = v62 + 56;
    v49(v18, 1, 1, v8);
    uint64_t v26 = v58;
    sub_10003F75C((uint64_t)v18, v58, &qword_1001641E8);
    uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    uint64_t v56 = v35 + 48;
    if (v55(v26, 1, v8) == 1)
    {
LABEL_31:
      sub_10003F5D0((uint64_t)v18, &qword_1001641E8);
      swift_unknownObjectRelease();
      return sub_10003F5D0(v26, &qword_1001641E8);
    }
LABEL_33:
    os_log_type_t v53 = (void (**)(void, void, void))(v62 + 32);
    uint64_t v47 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v48 = (void (**)(char *))(v62 + 16);
    do
    {
      sub_10003F5D0(v26, &qword_1001641E8);
      uint64_t v37 = *v4;
      unint64_t v38 = *(void *)(*v4 + 24);
      int64_t v39 = v38 >> 1;
      if ((uint64_t)(v38 >> 1) < a1 + 1)
      {
        uint64_t v37 = sub_10009EEBC(v38 > 1, a1 + 1, 1, *v4);
        *uint64_t v4 = v37;
        int64_t v39 = *(void *)(v37 + 24) >> 1;
      }
      uint64_t v40 = *(unsigned __int8 *)(v62 + 80);
      sub_10003F75C((uint64_t)v18, (uint64_t)v13, &qword_1001641E8);
      if (v55((uint64_t)v13, 1, v8) == 1)
      {
LABEL_34:
        sub_10003F5D0((uint64_t)v13, &qword_1001641E8);
        int64_t v36 = a1;
      }
      else
      {
        uint64_t v52 = v37 + ((v40 + 32) & ~v40);
        uint64_t v41 = *v53;
        if (a1 <= v39) {
          int64_t v42 = v39;
        }
        else {
          int64_t v42 = a1;
        }
        int64_t v54 = v42;
        os_log_type_t v43 = v60;
        uint64_t v51 = v41;
        while (1)
        {
          v41(v43, v13, v8);
          if (v54 == a1) {
            break;
          }
          sub_10003F5D0((uint64_t)v18, &qword_1001641E8);
          v41(v52 + *(void *)(v62 + 72) * a1, v43, v8);
          if (v57 == v19)
          {
            uint64_t v44 = 1;
            uint64_t v57 = v19;
          }
          else
          {
            uint64_t v46 = sub_100115710(v64, v57, v63, v61, a3, v59);
            (*v48)(v18);
            ((void (*)(uint64_t *, void))v46)(v64, 0);
            if (__OFADD__(v57, 1)) {
              goto LABEL_51;
            }
            ++v57;
            uint64_t v44 = 0;
            os_log_type_t v43 = v60;
          }
          v49(v18, v44, 1, v8);
          sub_10003F75C((uint64_t)v18, (uint64_t)v13, &qword_1001641E8);
          unsigned int v45 = v55((uint64_t)v13, 1, v8);
          ++a1;
          uint64_t v41 = v51;
          if (v45 == 1) {
            goto LABEL_34;
          }
        }
        (*v47)(v43, v8);
        int64_t v36 = v54;
        a1 = v54;
      }
      *(void *)(*v4 + 16) = v36;
      uint64_t v26 = v58;
      sub_10003F75C((uint64_t)v18, v58, &qword_1001641E8);
    }
    while (v55(v26, 1, v8) != 1);
    goto LABEL_31;
  }
  if (v26 < v20)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v20 < 0
    || ((uint64_t v27 = *(void *)(v62 + 72),
         unint64_t v28 = a1
             + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
             + v27 * v16,
         unint64_t v29 = v61 + v27 * a3,
         v29 < v28 + v27 * v20)
      ? (BOOL v30 = v28 >= v29 + v27 * v20)
      : (BOOL v30 = 1),
        !v30))
  {
LABEL_52:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_arrayInitWithCopy();
  if (v20)
  {
    uint64_t v31 = *(void *)(a1 + 16);
    BOOL v32 = __OFADD__(v31, v20);
    uint64_t v33 = v31 + v20;
    if (v32)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(void *)(a1 + 16) = v33;
  }
  uint64_t v16 = v19;
LABEL_23:
  if (v20 == v26) {
    goto LABEL_30;
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1000D74B4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1000E6F7C(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000D7680(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F75C(a1, (uint64_t)v4, (uint64_t *)&unk_100161530);
  return sub_1000C98F4((uint64_t)v4);
}

uint64_t sub_1000D7718(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for NavigationPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000D78A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_1000D793C()
{
  uint64_t v1 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - v5;
  swift_getKeyPath();
  uint64_t v13 = v0;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  sub_10003F75C(v7, (uint64_t)v6, (uint64_t *)&unk_100161530);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1)
  {
    sub_10003F75C((uint64_t)v6, (uint64_t)v4, (uint64_t *)&unk_100161530);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
LABEL_5:
      uint64_t v10 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
      sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100161530);
      return sub_1000D7BC8();
    }
    if (EnumCaseMultiPayload == 2)
    {
      sub_100046B9C(&qword_10015F7F8);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    sub_10003DF60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }
  return sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100161530);
}

uint64_t sub_1000D7B8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D9128(&OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent, (uint64_t)type metadata accessor for SettingsAppDetailContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003DFC0, a1);
}

uint64_t sub_1000D7BC8()
{
  uint64_t v1 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v46 = (uint64_t)&v41 - v8;
  uint64_t v9 = sub_100046B9C(&qword_100163F60);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v44 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v43 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v45 = v0;
  uint64_t v20 = v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
  swift_beginAccess();
  sub_10003F75C(v20, (uint64_t)v13, &qword_100163F60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_10003F5D0((uint64_t)v13, &qword_100163F60);
  }
  sub_10004F000((uint64_t)v13, (uint64_t)v19, type metadata accessor for SettingsURLDestination);
  sub_10003DFC0((uint64_t)&v19[*(int *)(v14 + 20)], (uint64_t)v3, type metadata accessor for SettingsURLDestination.Action);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = v46;
    sub_10004F000((uint64_t)v3, v46, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003DFC0(v22, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v24 = v45;
    if (!EnumCaseMultiPayload)
    {
LABEL_7:
      uint64_t v42 = v20;
      uint64_t v25 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v7, v25);
      swift_getKeyPath();
      v48[3] = v24;
      sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v26 = v24 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
      swift_beginAccess();
      if (*(void *)(v26 + *(int *)(type metadata accessor for SettingsAppDetailContent() + 20)) >> 62 == 1)
      {
        swift_retain();
        uint64_t v27 = (char *)PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
        sub_1000DEB5C((uint64_t)v19, v27, 0);

        swift_release();
        uint64_t v28 = v22;
      }
      else
      {
        if (qword_10015F148 != -1) {
          swift_once();
        }
        uint64_t v31 = type metadata accessor for Logger();
        sub_1000477B0(v31, (uint64_t)qword_10016AFC8);
        uint64_t v32 = v43;
        sub_10003DFC0((uint64_t)v19, v43, type metadata accessor for SettingsURLDestination);
        uint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          uint64_t v41 = v36;
          *(_DWORD *)uint64_t v35 = 141558275;
          uint64_t v47 = 1752392040;
          v48[0] = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v35 + 12) = 2081;
          unint64_t v37 = sub_1000F6F94();
          uint64_t v47 = sub_100042948(v37, v38, v48);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10003DF60(v32, type metadata accessor for SettingsURLDestination);
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "No valid detail content for destination '%{private,mask.hash}s', bailing.", (uint8_t *)v35, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10003DF60(v32, type metadata accessor for SettingsURLDestination);
        }

        uint64_t v39 = v42;
        uint64_t v40 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v44, 1, 1, v14);
        swift_beginAccess();
        sub_100039904(v40, v39, &qword_100163F60);
        swift_endAccess();
        sub_1000D86AC();
        sub_10003F5D0(v40, &qword_100163F60);
        uint64_t v28 = v46;
      }
      sub_10003DF60(v28, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      unint64_t v29 = type metadata accessor for SettingsURLDestination;
      uint64_t v30 = (uint64_t)v19;
      return sub_10003DF60(v30, v29);
    }
    if (EnumCaseMultiPayload == 2)
    {
      sub_100046B9C(&qword_10015F7F8);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_10003DF60(v22, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003DF60((uint64_t)v19, type metadata accessor for SettingsURLDestination);
    uint64_t v30 = (uint64_t)v7;
    unint64_t v29 = (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier;
  }
  else
  {
    sub_10003DF60((uint64_t)v19, type metadata accessor for SettingsURLDestination);
    unint64_t v29 = type metadata accessor for SettingsURLDestination.Action;
    uint64_t v30 = (uint64_t)v3;
  }
  return sub_10003DF60(v30, v29);
}

uint64_t sub_1000D8340@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D837C(a1, &OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent, (uint64_t)type metadata accessor for SettingsAppDetailContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003DFC0, a2);
}

uint64_t sub_1000D837C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X5>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = v9 + *a2;
  swift_beginAccess();
  return a4(v10, a5, a3);
}

uint64_t sub_1000D8464(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SettingsAppDetailContent();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003DFC0(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10003DF60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
}

uint64_t sub_1000D85B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsAppDetailContent();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003DFC0(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  uint64_t v7 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  sub_1000E76C4((uint64_t)v6, v7);
  swift_endAccess();
  sub_1000D793C();
  return sub_10003DF60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
}

uint64_t sub_1000D86AC()
{
  uint64_t v1 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v28 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (uint64_t)&v28 - v5;
  uint64_t v6 = sub_100046B9C(&qword_100163F60);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v28 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v30 = v0;
  uint64_t v15 = v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
  swift_beginAccess();
  sub_10003F75C(v15, (uint64_t)v14, &qword_100163F60);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  int v17 = v16(v14, 1, v1);
  sub_10003F5D0((uint64_t)v14, &qword_100163F60);
  if (v17 != 1) {
    goto LABEL_4;
  }
  sub_1000D8B48((uint64_t)v12);
  if (v16(v12, 1, v1) == 1)
  {
    sub_10003F5D0((uint64_t)v12, &qword_100163F60);
LABEL_4:
    sub_10003F75C(v15, (uint64_t)v9, &qword_100163F60);
    int v18 = v16(v9, 1, v1);
    uint64_t result = sub_10003F5D0((uint64_t)v9, &qword_100163F60);
    if (v18 != 1)
    {
      sub_100046B9C((uint64_t *)&unk_100163BE0);
      sub_10004D2D4(&qword_100162ED0, (uint64_t *)&unk_100163BE0);
      return Subject<>.send()();
    }
    return result;
  }
  uint64_t v20 = v29;
  sub_10004F000((uint64_t)v12, v29, type metadata accessor for SettingsURLDestination);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_1000477B0(v21, (uint64_t)qword_10016AFC8);
  uint64_t v22 = v28;
  sub_10003DFC0(v20, v28, type metadata accessor for SettingsURLDestination);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    unint64_t v26 = sub_1000F6F94();
    uint64_t v31 = sub_100042948(v26, v27, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DF60(v22, type metadata accessor for SettingsURLDestination);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Found pending URL request '%s', queueing it up.", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003DF60(v22, type metadata accessor for SettingsURLDestination);
  }

  sub_1000D46AC(v20);
  return sub_10003DF60(v20, type metadata accessor for SettingsURLDestination);
}

uint64_t sub_1000D8B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_100163F60);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v16[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
  swift_beginAccess();
  sub_10003F75C(v9, (uint64_t)v8, &qword_100163F60);
  uint64_t v10 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v11 = (uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v12 = (*v11)(v8, 1, v10);
  uint64_t v13 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 1);
  if (v12 == 1)
  {
    sub_10003F5D0((uint64_t)v8, &qword_100163F60);
    return (*v13)(a1, 1, 1, v10);
  }
  else
  {
    sub_10004F000((uint64_t)v8, a1, type metadata accessor for SettingsURLDestination);
    uint64_t v15 = *v13;
    (*v13)((uint64_t)v6, 1, 1, v10);
    swift_beginAccess();
    sub_1000E7584((uint64_t)v6, v9);
    swift_endAccess();
    return v15(a1, 0, 1, v10);
  }
}

uint64_t sub_1000D8D20()
{
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__shouldDismissSearch);
}

uint64_t sub_1000D8DC8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__shouldDismissSearch);
  return result;
}

uint64_t sub_1000D8E78()
{
  return swift_release();
}

uint64_t sub_1000D8F48(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__shouldDismissSearch) = a2;
  return result;
}

uint64_t sub_1000D8F58@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D9128(&OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass, (uint64_t)&unk_100163F70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003F75C, a1);
}

uint64_t sub_1000D8F88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D837C(a1, &OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass, (uint64_t)&unk_100163F70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003F75C, a2);
}

uint64_t sub_1000D8FB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163F70);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003F75C(a1, (uint64_t)v6, (uint64_t *)&unk_100163F70);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100163F70);
}

uint64_t sub_1000D90F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D9128(&OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase, (uint64_t)&unk_1001641A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003F75C, a1);
}

uint64_t sub_1000D9128@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = v4 + *a1;
  swift_beginAccess();
  return a3(v9, a4, a2);
}

void sub_1000D920C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F140 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000477B0((uint64_t)v6, (uint64_t)qword_10016AFB0);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v29 = v6;
  uint64_t v30 = v2;
  if (v9)
  {
    uint64_t v10 = swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = _typeName(_:qualified:)();
    uint64_t v31 = sub_100042948(v11, v12, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v31 = sub_100042948(0xD000000000000020, 0x800000010012A790, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Start (%s.%s)…", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    uint64_t v2 = v30;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_getKeyPath();
  v33[0] = v1;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  if (*(void *)(v13 + *(int *)(type metadata accessor for SettingsAppDetailContent() + 20)) >> 62 == 1)
  {
    swift_retain();
    uint64_t v14 = (void *)PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
    self;
    uint64_t v15 = (void *)swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v16 = v15;
      if ([v15 shouldReloadSpecifiersOnResume])
      {
        if (qword_10015F138 != -1) {
          swift_once();
        }
        sub_1000477B0((uint64_t)v29, (uint64_t)qword_10016AF98);
        uint64_t v29 = v14;
        int v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        int v19 = v18;
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v20 = swift_slowAlloc();
          int v27 = v19;
          uint64_t v21 = v20;
          uint64_t v28 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 141558275;
          uint64_t v31 = 1752392040;
          v26[3] = &v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v21 + 12) = 2113;
          v26[1] = v21 + 22;
          v26[2] = v21 + 14;
          uint64_t v31 = (uint64_t)v16;
          uint64_t v22 = v29;
          uint64_t v29 = v17;
          uint64_t v23 = v22;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v28 = v16;

          _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v27, "Reloading specifiers on resume for %{private,mask.hash}@.", (uint8_t *)v21, 0x16u);
          sub_100046B9C((uint64_t *)&unk_100163570);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          os_log_type_t v24 = v29;
        }
        else
        {

          os_log_type_t v24 = v29;
        }

        [v16 reloadSpecifiers];
      }
    }
    swift_release();

    uint64_t v2 = v30;
  }
  swift_getKeyPath();
  uint64_t v31 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v25 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v25, v2);
  NavigationPath.withCollectionProxy(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000132DC(v1, 0xD000000000000020, 0x800000010012A790);
}

void sub_1000D981C()
{
  uint64_t v1 = v0;
  uint64_t v59 = type metadata accessor for NavigationPath();
  uint64_t v61 = *(uint8_t **)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v58);
  uint64_t v56 = (void (*)(char *, uint64_t, uint64_t))((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F140 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = sub_1000477B0(v4, (uint64_t)qword_10016AFB0);
  swift_retain_n();
  uint64_t v55 = v5;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v65[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = _typeName(_:qualified:)();
    uint64_t v63 = sub_100042948(v9, v10, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v63 = sub_100042948(0xD00000000000001FLL, 0x800000010012A730, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Start (%s.%s)…", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_getKeyPath();
  uint64_t v11 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel___observationRegistrar;
  v65[0] = v1;
  uint64_t v12 = sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  if (*(void *)(v13 + *(int *)(type metadata accessor for SettingsAppDetailContent() + 20)) >> 62 == 1)
  {
    uint64_t v14 = v11;
    swift_retain();
    uint64_t v15 = (void *)PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
    unsigned __int8 v16 = [v15 canBeShownFromSuspendedState];

    if ((v16 & 1) == 0)
    {
      uint64_t v33 = v1;
      swift_retain_n();
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136315138;
        uint64_t v61 = v48 + 4;
        uint64_t v49 = sub_100036FFC();
        swift_getKeyPath();
        uint64_t v63 = (uint64_t)v49;
        sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v50 = (uint64_t)&v49[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection];
        swift_beginAccess();
        sub_10003F75C(v50, (uint64_t)v56, (uint64_t *)&unk_100161530);
        swift_release();
        uint64_t v51 = String.init<A>(describing:)();
        uint64_t v62 = sub_100042948(v51, v52, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Root for currentSelection '%s' is a Preferences Controller that cannot be shown from a suspended state.", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      sub_1000D44DC();
      swift_release();
      goto LABEL_20;
    }
    swift_release();
    uint64_t v11 = v14;
  }
  uint64_t v57 = v11;
  uint64_t v64 = 0;
  swift_getKeyPath();
  uint64_t v63 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v17 = v1;
  uint64_t v18 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  int v19 = v61;
  uint64_t v20 = v61 + 16;
  uint64_t v21 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v61 + 2);
  uint64_t v58 = v12;
  uint64_t v23 = v59;
  uint64_t v22 = v60;
  uint64_t v24 = v21(v60, v18, v59);
  __chkstk_darwin(v24);
  *(&v53 - 2) = (uint8_t *)&v64;
  NavigationPath.withCollectionProxy(_:)();
  uint64_t v25 = (void (*)(char *, uint64_t))*((void *)v19 + 1);
  v25(v22, v23);
  swift_getKeyPath();
  uint64_t v54 = v17;
  uint64_t v62 = v17;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = v18;
  uint64_t v56 = (void (*)(char *, uint64_t, uint64_t))v21;
  v21(v22, v18, v23);
  int v27 = v20;
  uint64_t v28 = NavigationPath.count.getter();
  uint64_t v29 = v23;
  uint64_t v30 = (uint64_t (*)(char *, uint64_t))v25;
  uint64_t v61 = v19 + 8;
  v25(v22, v29);
  uint64_t v31 = v64 + 1;
  if (__OFADD__(v64, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = v28 - v31;
    if (!__OFSUB__(v28, v31))
    {
      swift_getKeyPath();
      uint64_t v33 = v54;
      uint64_t v62 = v54;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v35 = v59;
      os_log_type_t v34 = v60;
      v56(v60, v26, v59);
      uint64_t v36 = NavigationPath.count.getter();
      uint64_t v37 = v30(v34, v35);
      if (v36 >= v32)
      {
        __chkstk_darwin(v37);
        *(&v53 - 2) = (uint8_t *)v33;
        *(&v53 - 1) = (uint8_t *)v32;
        uint64_t v62 = 0;
        Transaction.disablesAnimations.setter();
        swift_retain();
        withTransaction<A>(_:_:)();
        swift_release_n();
      }
      else
      {
        swift_retain_n();
        unint64_t v38 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = (_DWORD *)swift_slowAlloc();
          uint64_t v41 = v59;
          os_log_type_t v53 = v27;
          uint64_t v42 = v40;
          *uint64_t v40 = 134349312;
          uint64_t v62 = v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v42 + 6) = 2050;
          uint64_t v55 = (uint64_t)v42 + 14;
          swift_getKeyPath();
          uint64_t v62 = v33;
          os_log_type_t v43 = v39;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t v44 = v60;
          v56(v60, v26, v41);
          uint64_t v45 = NavigationPath.count.getter();
          v30(v44, v41);
          swift_release();
          uint64_t v62 = v45;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v38, v43, "Unexpected number of items to pop '%{public}ld' when there are only '%{public}ld' items in the navigation path.", (uint8_t *)v42, 0x16u);
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
      }
LABEL_20:
      sub_1000132DC(v33, 0xD00000000000001FLL, 0x800000010012A730);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1000DA20C()
{
  uint64_t v0 = sub_100046B9C(&qword_100163F60);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v24 - v4;
  uint64_t v6 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = result + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
    swift_beginAccess();
    sub_10003F75C(v15, (uint64_t)v5, &qword_100163F60);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_release();
      return sub_10003F5D0((uint64_t)v5, &qword_100163F60);
    }
    else
    {
      sub_10004F000((uint64_t)v5, (uint64_t)v12, type metadata accessor for SettingsURLDestination);
      if (qword_10015F148 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_1000477B0(v16, (uint64_t)qword_10016AFC8);
      sub_10003DFC0((uint64_t)v12, (uint64_t)v10, type metadata accessor for SettingsURLDestination);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_t v27 = v17;
        int v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        v29[0] = v26;
        uint64_t v25 = v19;
        *(_DWORD *)int v19 = 136446210;
        uint64_t v24 = v19 + 4;
        unint64_t v20 = sub_1000F6F94();
        uint64_t v28 = sub_100042948(v20, v21, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10003DF60((uint64_t)v10, type metadata accessor for SettingsURLDestination);
        uint64_t v17 = v27;
        _os_log_impl((void *)&_mh_execute_header, v27, v18, "It has been 15 seconds since processing for %{public}s started. Assuming client controller didn't call completion. Cleaning up state so navigation isn't stuck.", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10003DF60((uint64_t)v10, type metadata accessor for SettingsURLDestination);
      }

      uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v22(v3, 1, 1, v6);
      uint64_t v23 = v14 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
      swift_beginAccess();
      sub_1000E7584((uint64_t)v3, v23);
      swift_endAccess();
      v22(v3, 1, 1, v6);
      swift_beginAccess();
      sub_100039904((uint64_t)v3, v15, &qword_100163F60);
      swift_endAccess();
      sub_1000D86AC();
      sub_10003F5D0((uint64_t)v3, &qword_100163F60);
      swift_release();
      return sub_10003DF60((uint64_t)v12, type metadata accessor for SettingsURLDestination);
    }
  }
  return result;
}

uint64_t sub_1000DA6A0()
{
  [self registerApplicationURLStateProvider:0];
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  uint64_t v2 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10003DF60(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  sub_10003F5D0(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination, &qword_100163F60);
  sub_10003F5D0(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination, &qword_100163F60);
  swift_release();
  swift_release();
  swift_release();
  sub_10003F5D0(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass, (uint64_t *)&unk_100163F70);
  sub_10003F5D0(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase, (uint64_t *)&unk_1001641A0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel___observationRegistrar;
  uint64_t v4 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1000DA820()
{
  sub_1000DA6A0();

  return swift_deallocClassInstance();
}

uint64_t sub_1000DA878()
{
  return type metadata accessor for SettingsAppNavigationModel();
}

uint64_t sub_1000DA880(uint64_t a1, void (*a2)(char *, void, uint64_t, uint64_t))
{
  uint64_t v40 = a2;
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v36 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_100163680);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  os_log_type_t v39 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v38 = (uint64_t)&v33 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)&v33 - v17;
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v33 - v19;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v33 = v3;
    uint64_t v34 = v2;
    uint64_t v23 = sub_100036FFC();
    swift_getKeyPath();
    uint64_t v42 = v23;
    sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v24 = (uint64_t)&v23[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection];
    swift_beginAccess();
    sub_10003F75C(v24, (uint64_t)v20, (uint64_t *)&unk_100161530);
    swift_release();
    uint64_t v35 = (char)v40;
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
    v40(v18, 0, 1, v5);
    uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10003F75C((uint64_t)v20, (uint64_t)v10, (uint64_t *)&unk_100161530);
    sub_10003F75C((uint64_t)v18, v25, (uint64_t *)&unk_100161530);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v26((uint64_t)v10, 1, v5) == 1)
    {
      sub_10003F5D0((uint64_t)v18, (uint64_t *)&unk_100161530);
      sub_10003F5D0((uint64_t)v20, (uint64_t *)&unk_100161530);
      if (v26(v25, 1, v5) == 1)
      {
        sub_10003F5D0((uint64_t)v10, (uint64_t *)&unk_100161530);
LABEL_9:
        uint64_t v30 = v37;
        NavigationPath.init()();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(&v33 - 2) = v22;
        *(&v33 - 1) = (uint64_t)v30;
        uint64_t v41 = v22;
        sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v34);
        return swift_release();
      }
    }
    else
    {
      uint64_t v27 = v38;
      sub_10003F75C((uint64_t)v10, v38, (uint64_t *)&unk_100161530);
      if (v26(v25, 1, v5) != 1)
      {
        uint64_t v28 = v36;
        sub_10004F000(v25, v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        char v29 = sub_1000460F4(v27, v28);
        sub_10003DF60(v28, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_10003F5D0((uint64_t)v18, (uint64_t *)&unk_100161530);
        sub_10003F5D0((uint64_t)v20, (uint64_t *)&unk_100161530);
        sub_10003DF60(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_10003F5D0((uint64_t)v10, (uint64_t *)&unk_100161530);
        if (v29) {
          goto LABEL_9;
        }
LABEL_10:
        sub_100036FFC();
        uint64_t v32 = (uint64_t)v39;
        swift_storeEnumTagMultiPayload();
        v40((char *)v32, 0, 1, v5);
        sub_1000C98F4(v32);
        swift_release();
        return swift_release();
      }
      sub_10003F5D0((uint64_t)v18, (uint64_t *)&unk_100161530);
      sub_10003F5D0((uint64_t)v20, (uint64_t *)&unk_100161530);
      sub_10003DF60(v27, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
    sub_10003F5D0((uint64_t)v10, &qword_100163680);
    goto LABEL_10;
  }
  return result;
}

id sub_1000DAF00(void *a1)
{
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000477B0(v2, (uint64_t)qword_10016AFC8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Finish Setup Completion called, dismissing.", v5, 2u);
    swift_slowDealloc();
  }

  return [a1 dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_1000DB000(uint64_t a1)
{
  uint64_t v52 = 0;
  uint64_t v55 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v49 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  os_log_type_t v53 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for SettingsAppDetailContent();
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_100163F68);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v54 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100163F70);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v51 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100046B9C(&qword_100163F60);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SettingsURLDestination(0);
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  uint64_t v22 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
  swift_beginAccess();
  sub_1000E7584((uint64_t)v19, v22);
  swift_endAccess();
  v21(v19, 1, 1, v20);
  uint64_t v23 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
  swift_beginAccess();
  sub_100039904((uint64_t)v19, v23, &qword_100163F60);
  swift_endAccess();
  sub_1000D86AC();
  uint64_t v24 = (uint64_t)v19;
  uint64_t v25 = v54;
  sub_10003F5D0(v24, &qword_100163F60);
  sub_100036FFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v16, 1, 1, v55);
  sub_1000C98F4((uint64_t)v16);
  swift_release();
  swift_getKeyPath();
  uint64_t v57 = a1;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass;
  swift_beginAccess();
  uint64_t v27 = v50;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v13, enum case for UserInterfaceSizeClass.regular(_:), v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v13, 0, 1, v4);
  uint64_t v28 = v25 + *(int *)(v7 + 56);
  sub_10003F75C(v26, v25, (uint64_t *)&unk_100163F70);
  sub_10003F75C((uint64_t)v13, v28, (uint64_t *)&unk_100163F70);
  uint64_t v29 = v27;
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v30(v25, 1, v4) == 1)
  {
    sub_10003F5D0((uint64_t)v13, (uint64_t *)&unk_100163F70);
    if (v30(v28, 1, v4) == 1)
    {
      sub_10003F5D0(v25, (uint64_t *)&unk_100163F70);
LABEL_11:
      sub_10001044C();
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  sub_10003F75C(v25, v51, (uint64_t *)&unk_100163F70);
  if (v30(v28, 1, v4) == 1)
  {
    sub_10003F5D0((uint64_t)v13, (uint64_t *)&unk_100163F70);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v51, v4);
LABEL_6:
    sub_10003F5D0(v25, &qword_100163F68);
    goto LABEL_7;
  }
  uint64_t v34 = v29;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
  uint64_t v36 = v46;
  v35(v46, v28, v4);
  sub_1000373B4((unint64_t *)&unk_100163F80, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  uint64_t v37 = v51;
  char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
  os_log_type_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v36, v4);
  sub_10003F5D0((uint64_t)v13, (uint64_t *)&unk_100163F70);
  v39((char *)v37, v4);
  sub_10003F5D0(v54, (uint64_t *)&unk_100163F70);
  if (v38) {
    goto LABEL_11;
  }
LABEL_7:
  if (qword_10015F198 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000477B0(v47, (uint64_t)qword_10016B0A8);
  uint64_t v32 = v48;
  sub_10003DFC0(v31, v48, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v45 - 2) = a1;
  *(&v45 - 1) = v32;
  uint64_t v56 = a1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10003DF60(v32, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
LABEL_12:
  uint64_t v40 = swift_getKeyPath();
  __chkstk_darwin(v40);
  *(&v45 - 2) = a1;
  *((unsigned char *)&v45 - 8) = 1;
  uint64_t v56 = a1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v41 = *(void *)(a1
                  + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__primarySettingsListScrollToItemSubject);
  uint64_t v42 = qword_10015F048;
  swift_retain();
  if (v42 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  sub_1000D67AC(v41, v56, (uint64_t *)&unk_100163F90);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = (uint64_t)v53;
  swift_storeEnumTagMultiPayload();
  PassthroughSubject.send(_:)();
  swift_release();
  return sub_10003DF60(v43, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

void sub_1000DB92C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v193 = a4;
  uint64_t v191 = a3;
  uint64_t v185 = type metadata accessor for SettingsAppDetailContent();
  uint64_t v187 = *(void *)(v185 - 8);
  uint64_t v7 = *(void *)(v187 + 64);
  uint64_t v8 = __chkstk_darwin(v185);
  uint64_t v196 = (uint64_t)v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v188 = (void *)((char *)v161 - v9);
  uint64_t v10 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AnimationCompletionCriteria();
  uint64_t v182 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v181 = (char *)v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v189 = *(void *)(v183 - 8);
  uint64_t v15 = *(void *)(v189 + 64);
  uint64_t v16 = __chkstk_darwin(v183);
  uint64_t v195 = (void *)((char *)v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v186 = (uint64_t)v161 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v176 = (char *)v161 - v20;
  __chkstk_darwin(v19);
  uint64_t v175 = (uint64_t)v161 - v21;
  uint64_t v198 = type metadata accessor for URLQueryItem();
  uint64_t v184 = *(char **)(v198 - 8);
  uint64_t v22 = __chkstk_darwin(v198);
  uint64_t v179 = (char *)v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v178 = (char *)v161 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v177 = (char *)v161 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v180 = (char *)v161 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v190 = (char *)v161 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)v161 - v32;
  uint64_t v34 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)v161 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for NavigationPath();
  unint64_t v192 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  uint64_t v194 = (char *)v161 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  unint64_t v39 = Strong;
  uint64_t v174 = v15;
  int v173 = a2;
  uint64_t v172 = v13;
  if (a2) {
    goto LABEL_26;
  }
  swift_getKeyPath();
  unint64_t v40 = v39 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel___observationRegistrar;
  *(void *)&long long v200 = v39;
  uint64_t v168 = sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  unint64_t v169 = v40;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t v171 = a5;
  uint64_t v41 = v7;
  uint64_t v42 = v197;
  swift_release();
  unint64_t v43 = v39 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  unint64_t v44 = v192;
  uint64_t v45 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v192 + 16);
  uint64_t v46 = v194;
  unint64_t v167 = v43;
  unint64_t v166 = v192 + 16;
  uint64_t v165 = v45;
  v45(v194, v43, v42);
  LOBYTE(v43) = NavigationPath.isEmpty.getter();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v48 = v42;
  uint64_t v7 = v41;
  a5 = v171;
  unint64_t v164 = v44 + 8;
  uint64_t v163 = v47;
  v47(v46, v48);
  if (v43) {
    goto LABEL_26;
  }
  unint64_t v49 = *(void *)(v191 + *(int *)(v185 + 20));
  if (v49 >> 62 != 1) {
    goto LABEL_26;
  }
  unint64_t v162 = v39;
  uint64_t v50 = *(void *)(v193 + *(int *)(v183 + 24));
  uint64_t v51 = *(void *)(v50 + 16);
  v161[2] = v49 & 0x3FFFFFFFFFFFFFFFLL;
  if (v51)
  {
    uint64_t v185 = *((void *)v184 + 2);
    uint64_t v52 = v50 + ((v184[80] + 32) & ~(unint64_t)v184[80]);
    os_log_type_t v53 = (void (**)(char *, uint64_t))(v184 + 8);
    uint64_t v170 = (void (*)(char *, uint64_t))*((void *)v184 + 9);
    v161[1] = v50;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v54 = v198;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v185)(v33, v52, v54);
      if (URLQueryItem.name.getter() == 1752457584 && v55 == 0xE400000000000000) {
        break;
      }
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v56) {
        goto LABEL_15;
      }
      uint64_t v54 = v198;
      (*v53)(v33, v198);
      v52 += (uint64_t)v170;
      if (!--v51)
      {
        swift_bridgeObjectRelease();
        uint64_t v57 = 1;
        uint64_t v58 = v54;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v59 = v184;
    uint64_t v58 = v198;
    (*((void (**)(char *, char *, uint64_t))v184 + 4))(v36, v33, v198);
    uint64_t v57 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v57 = 1;
    uint64_t v58 = v198;
LABEL_13:
    uint64_t v59 = v184;
  }
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v59 + 7))(v36, v57, 1, v58);
  swift_bridgeObjectRelease();
  int v60 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v59 + 6))(v36, 1, v58);
  unint64_t v39 = v162;
  if (v60 == 1)
  {
    swift_release();
    sub_10003F5D0((uint64_t)v36, (uint64_t *)&unk_100164080);
LABEL_25:
    a5 = v171;
LABEL_26:
    sub_100036FFC();
    sub_10003DFC0(a5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v78 = type metadata accessor for PrimarySettingsListItemIdentifier();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v12, 0, 1, v78);
    sub_1000C98F4(v12);
    swift_release();
    unint64_t v79 = sub_100036FFC();
    swift_getKeyPath();
    *(void *)&long long v200 = v79;
    sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v80 = v79[16];
    swift_release();
    if (v80 == 1)
    {
      if (qword_10015F148 != -1) {
        swift_once();
      }
      uint64_t v81 = type metadata accessor for Logger();
      sub_1000477B0(v81, (uint64_t)qword_10016AFC8);
      uint64_t v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.fault.getter();
      if (!os_log_type_enabled(v82, v83))
      {
        swift_release();

        return;
      }
      int v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "New selection was not selectable, ignoring URL", v84, 2u);
      swift_slowDealloc();

      goto LABEL_37;
    }
    uint64_t v85 = v197;
    uint64_t v86 = swift_allocObject();
    swift_weakInit();
    uint64_t v87 = (uint64_t)v188;
    sub_10003DFC0(v191, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    uint64_t v88 = v186;
    sub_10003DFC0(v193, v186, type metadata accessor for SettingsURLDestination);
    sub_10003DFC0(v87, v196, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    sub_10003DFC0(v88, (uint64_t)v195, type metadata accessor for SettingsURLDestination);
    unint64_t v89 = (*(unsigned __int8 *)(v187 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
    unint64_t v90 = (v7 + *(unsigned __int8 *)(v189 + 80) + v89) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80);
    uint64_t v91 = v90 + v174;
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v86;
    sub_10004F000(v87, v92 + v89, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    sub_10004F000(v88, v92 + v90, type metadata accessor for SettingsURLDestination);
    char v93 = v173;
    *(unsigned char *)(v92 + v91) = v173 & 1;
    if (v93)
    {
      swift_retain();
LABEL_35:
      uint64_t v97 = v196;
      uint64_t v98 = (uint64_t)v195;
      sub_1000E02D4(v86, v196, (uint64_t)v195, v93 & 1);
      swift_release();
      swift_release();
      swift_release();
      sub_10003DF60(v98, type metadata accessor for SettingsURLDestination);
      sub_10003DF60(v97, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
      return;
    }
    swift_getKeyPath();
    *(void *)&long long v200 = v39;
    sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v94 = v39 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
    swift_beginAccess();
    unint64_t v95 = v192;
    uint64_t v96 = v194;
    (*(void (**)(char *, unint64_t, uint64_t))(v192 + 16))(v194, v94, v85);
    LOBYTE(v94) = NavigationPath.isEmpty.getter();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v85);
    if (v94) {
      goto LABEL_35;
    }
    swift_release();
    sub_10003DF60((uint64_t)v195, type metadata accessor for SettingsURLDestination);
    sub_10003DF60(v196, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    uint64_t v202 = 0;
    uint64_t v99 = v181;
    static AnimationCompletionCriteria.logicallyComplete.getter();
    Transaction.addAnimationCompletion(criteria:_:)();
    (*(void (**)(char *, uint64_t))(v182 + 8))(v99, v172);
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = swift_weakInit();
    __chkstk_darwin(v101);
    uint64_t v102 = v193;
    v161[-2] = v100;
    v161[-1] = v102;
    swift_retain();
    withTransaction<A>(_:_:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_37:
    swift_release();
    return;
  }
  uint64_t v61 = URLQueryItem.value.getter();
  uint64_t v63 = v62;
  uint64_t v64 = (void (*)(char *, uint64_t))*((void *)v59 + 1);
  uint64_t v185 = (uint64_t)(v59 + 8);
  uint64_t v170 = v64;
  v64(v36, v58);
  if (!v63)
  {
    swift_release();
    goto LABEL_25;
  }
  uint64_t v195 = (void *)v61;
  if (qword_10015F148 != -1) {
LABEL_84:
  }
    swift_once();
  uint64_t v65 = type metadata accessor for Logger();
  sub_1000477B0(v65, (uint64_t)qword_10016AFC8);
  unint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    int v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Navigation Stack is not empty.", v68, 2u);
    swift_slowDealloc();
  }

  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
  swift_retain_n();
  uint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.debug.getter();
  BOOL v72 = os_log_type_enabled(v70, v71);
  uint64_t v196 = v69;
  if (v72)
  {
    uint64_t v73 = swift_slowAlloc();
    os_log_type_t v74 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 141558275;
    *(void *)&long long v200 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v73 + 12) = 2113;
    swift_beginAccess();
    uint64_t v75 = *(void **)(v196 + 16);
    *(void *)&long long v200 = v75;
    id v76 = v75;
    unint64_t v39 = v162;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v74 = v75;
    uint64_t v77 = v197;
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "Initial controllerToHandleURL is '%{private,mask.hash}@'", (uint8_t *)v73, 0x16u);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    uint64_t v69 = v196;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    uint64_t v77 = v197;
  }
  uint64_t v103 = (uint64_t)v195;

  uint64_t v205 = -1;
  unint64_t v104 = (void *)swift_allocObject();
  *(void *)&long long v200 = v103;
  *((void *)&v200 + 1) = v63;
  uint64_t v202 = 47;
  unint64_t v203 = 0xE100000000000000;
  sub_100030C58();
  uint64_t v105 = StringProtocol.components<A>(separatedBy:)();
  swift_bridgeObjectRelease();
  uint64_t v106 = *(void *)(v105 + 16);
  void v104[2] = v105;
  uint64_t v188 = v104 + 2;
  v104[3] = v105 + 32;
  v104[4] = 0;
  v104[5] = (2 * v106) | 1;
  swift_getKeyPath();
  *(void *)&long long v200 = v39;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v107 = v194;
  uint64_t v108 = v165(v194, v167, v77);
  __chkstk_darwin(v108);
  v161[-4] = v69;
  v161[-3] = v104;
  uint64_t v195 = v104;
  v161[-2] = &v205;
  NavigationPath.withCollectionProxy(_:)();
  v163(v107, v77);
  uint64_t v109 = v183;
  uint64_t v110 = swift_allocBox();
  uint64_t v112 = v111;
  sub_10003DFC0(v193, v111, type metadata accessor for SettingsURLDestination);
  uint64_t v113 = *(int *)(v109 + 24);
  unint64_t v114 = *(void *)(v112 + v113);
  unint64_t v204 = v114;
  uint64_t v115 = *(void *)(v114 + 16);
  uint64_t v191 = v113;
  if (v115)
  {
    uint64_t v186 = v112;
    uint64_t v187 = v110;
    unint64_t v116 = (void (*)(char *, unint64_t, unint64_t))*((void *)v59 + 2);
    unint64_t v117 = (v59[80] + 32) & ~(unint64_t)v59[80];
    uint64_t v118 = *((void *)v59 + 9);
    swift_bridgeObjectRetain_n();
    unint64_t v119 = 0;
    unint64_t v192 = v117;
    unint64_t v120 = v198;
    while (1)
    {
      v116(v190, v114 + v117, v120);
      if (URLQueryItem.name.getter() == 1752457584 && v121 == 0xE400000000000000) {
        break;
      }
      char v122 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t v120 = v198;
      v170(v190, v198);
      if (v122) {
        goto LABEL_49;
      }
      ++v119;
      v117 += v118;
      if (v115 == v119)
      {
        swift_bridgeObjectRelease();
        int64_t v123 = *(void *)(v204 + 16);
        goto LABEL_52;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v120 = v198;
    v170(v190, v198);
LABEL_49:
    swift_bridgeObjectRelease();
    int64_t v123 = v119 + 1;
    if (__OFADD__(v119, 1)) {
      goto LABEL_94;
    }
    unint64_t v125 = v204;
    unint64_t v126 = *(void *)(v204 + 16);
    if (v123 != v126)
    {
      uint64_t v63 = v118 + v117;
      unint64_t v150 = v119 + 1;
      uint64_t v190 = v59 + 40;
      unint64_t v39 = 0xE400000000000000;
      uint64_t v59 = v177;
      while (v150 < v126)
      {
        v116(v59, v125 + v63, v120);
        if (URLQueryItem.name.getter() == 1752457584 && v151 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          unint64_t v120 = v198;
          v170(v59, v198);
        }
        else
        {
          char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t v120 = v198;
          v170(v59, v198);
          if ((v152 & 1) == 0)
          {
            if (v150 != v119)
            {
              if ((v119 & 0x8000000000000000) != 0) {
                goto LABEL_89;
              }
              unint64_t v153 = v204;
              unint64_t v154 = *(void *)(v204 + 16);
              if (v119 >= v154) {
                goto LABEL_90;
              }
              uint64_t v155 = v198;
              v116(v178, v204 + v192 + v119 * v118, v198);
              if (v150 >= v154) {
                goto LABEL_91;
              }
              v116(v179, v153 + v63, v155);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v204 = v153;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v153 = sub_1000E6D20(v153);
                unint64_t v204 = v153;
              }
              uint64_t v59 = v177;
              if (v119 >= *(void *)(v153 + 16)) {
                goto LABEL_92;
              }
              unint64_t v157 = v153 + v192 + v119 * v118;
              unint64_t v158 = *(void (**)(unint64_t, char *, unint64_t))v190;
              unint64_t v159 = v198;
              (*(void (**)(unint64_t, char *, uint64_t))v190)(v157, v179, v198);
              if (v150 >= *(void *)(v204 + 16)) {
                goto LABEL_93;
              }
              v158(v204 + v63, v178, v159);
              unint64_t v120 = v159;
              unint64_t v39 = 0xE400000000000000;
            }
            if (__OFADD__(v119++, 1)) {
              goto LABEL_83;
            }
          }
        }
        int64_t v123 = v150 + 1;
        if (__OFADD__(v150, 1)) {
          goto LABEL_82;
        }
        unint64_t v125 = v204;
        unint64_t v126 = *(void *)(v204 + 16);
        ++v150;
        v63 += v118;
        if (v123 == v126) {
          goto LABEL_51;
        }
      }
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
LABEL_51:
    uint64_t v115 = v119;
LABEL_52:
    uint64_t v124 = (uint64_t)v176;
    uint64_t v110 = v187;
    uint64_t v112 = v186;
    if (v123 >= v115) {
      goto LABEL_53;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    int64_t v123 = 0;
    uint64_t v124 = (uint64_t)v176;
LABEL_53:
    sub_1000E71B0(v115, v123);
    swift_beginAccess();
    long long v127 = *((_OWORD *)v195 + 2);
    long long v200 = *((_OWORD *)v195 + 1);
    long long v201 = v127;
    swift_unknownObjectRetain();
    sub_100046B9C(&qword_1001640A0);
    sub_10004D2D4((unint64_t *)&unk_1001640A8, &qword_1001640A0);
    BidirectionalCollection<>.joined(separator:)();
    swift_unknownObjectRelease();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v120 = v204;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_54;
    }
  }
  unint64_t v120 = sub_10009EE88(0, *(void *)(v120 + 16) + 1, 1, v120);
LABEL_54:
  uint64_t v128 = v197;
  unint64_t v130 = *(void *)(v120 + 16);
  unint64_t v129 = *(void *)(v120 + 24);
  if (v130 >= v129 >> 1) {
    unint64_t v120 = sub_10009EE88(v129 > 1, v130 + 1, 1, v120);
  }
  *(void *)(v120 + 16) = v130 + 1;
  (*((void (**)(unint64_t, char *, uint64_t))v184 + 4))(v120+ ((v184[80] + 32) & ~(unint64_t)v184[80])+ *((void *)v184 + 9) * v130, v180, v198);
  unint64_t v204 = v120;
  *(void *)(v112 + v191) = v120;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  *(void *)&long long v200 = v162;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v131 = v194;
  v165(v194, v167, v128);
  uint64_t v132 = NavigationPath.count.getter();
  v163(v131, v128);
  uint64_t v133 = v205 + 1;
  if (__OFADD__(v205, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v134 = v132 - v133;
    uint64_t v135 = v193;
    if (!__OFSUB__(v132, v133))
    {
      uint64_t v136 = v110;
      uint64_t v137 = swift_allocObject();
      unint64_t v138 = v162;
      swift_weakInit();
      uint64_t v139 = v175;
      sub_10003DFC0(v135, v175, type metadata accessor for SettingsURLDestination);
      sub_10003DFC0(v139, v124, type metadata accessor for SettingsURLDestination);
      unint64_t v140 = (*(unsigned __int8 *)(v189 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80);
      unint64_t v141 = (v174 + v140 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v142 = (v141 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v143 = swift_allocObject();
      *(void *)(v143 + 16) = v137;
      sub_10004F000(v139, v143 + v140, type metadata accessor for SettingsURLDestination);
      *(void *)(v143 + v141) = v136;
      uint64_t v144 = v196;
      *(void *)(v143 + v142) = v196;
      swift_retain();
      swift_retain();
      if (v134 <= 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        sub_1000DE74C(v137, v124, v136, v144);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_10003DF60(v124, type metadata accessor for SettingsURLDestination);
      }
      else
      {
        sub_10003DF60(v124, type metadata accessor for SettingsURLDestination);
        *(void *)&long long v200 = 0;
        uint64_t v145 = v181;
        static AnimationCompletionCriteria.logicallyComplete.getter();
        Transaction.addAnimationCompletion(criteria:_:)();
        (*(void (**)(char *, uint64_t))(v182 + 8))(v145, v172);
        swift_getKeyPath();
        unint64_t v199 = v138;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v146 = v194;
        uint64_t v147 = v197;
        v165(v194, v167, v197);
        NavigationPath.count.getter();
        v163(v146, v147);
        Transaction.disablesAnimations.setter();
        uint64_t v148 = swift_allocObject();
        uint64_t v149 = swift_weakInit();
        __chkstk_darwin(v149);
        v161[-2] = v148;
        v161[-1] = v134;
        swift_retain();
        withTransaction<A>(_:_:)();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_release();
      swift_release();
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
}

uint64_t sub_1000DD6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v108 = a4;
  uint64_t v96 = a2;
  uint64_t v121 = a1;
  uint64_t v6 = sub_100046B9C(&qword_1001640B8);
  __chkstk_darwin(v6 - 8);
  unint64_t v116 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for PreferencesControllerRecipe();
  char v122 = *(char **)(v106 - 8);
  __chkstk_darwin(v106);
  int64_t v123 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NavigationPath.CollectionProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_1001640C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_1001640C8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v104 = v10 + 16;
  v103(v15, v121, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
  sub_1000373B4(&qword_1001640D0, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  uint64_t v105 = v12;
  uint64_t v119 = v9;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v20 = *(int *)(v17 + 44);
  uint64_t v21 = a3;
  uint64_t v102 = v20;
  *(void *)&v19[v20] = 0;
  uint64_t v118 = &v19[*(int *)(sub_100046B9C(&qword_1001640D8) + 36)];
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v95 = a3 + 16;
  swift_beginAccess();
  uint64_t v111 = (void **)(a2 + 16);
  swift_beginAccess();
  uint64_t v22 = sub_1000373B4(&qword_1001640E0, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  uint64_t v23 = (uint64_t)v19;
  uint64_t v24 = v96;
  uint64_t v100 = (long long *)((char *)v125 + 8);
  uint64_t v101 = (void (**)(char *, uint64_t))(v10 + 8);
  unint64_t v114 = (long long *)v132;
  uint64_t v115 = v122 + 56;
  uint64_t v98 = (char *)&v128 + 8;
  uint64_t v99 = &v130[1];
  uint64_t v112 = (void (**)(char *, uint64_t))(v122 + 8);
  uint64_t v113 = (void (**)(char *, uint64_t, uint64_t))(v122 + 32);
  uint64_t v110 = (char *)&type metadata for Any + 8;
  *(void *)&long long v25 = 136315651;
  long long v97 = v25;
  uint64_t v117 = v23;
  uint64_t v26 = v106;
  uint64_t v109 = v21;
  uint64_t v107 = v22;
  while (1)
  {
    uint64_t v27 = v119;
    uint64_t v28 = *(void *)v118;
    uint64_t v29 = v22;
    dispatch thunk of Collection.endIndex.getter();
    if (v28 == v126)
    {
      memset(v130, 0, 48);
    }
    else
    {
      uint64_t v30 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      sub_1000620F8(v31, (uint64_t)v125);
      v30(&v126, 0);
      uint64_t v32 = v105;
      v103(v105, v23, v27);
      dispatch thunk of Collection.formIndex(after:)();
      (*v101)(v32, v27);
      sub_1000498B0(v125, (uint64_t)&v128);
      uint64_t v33 = v102;
      uint64_t v34 = *(void *)(v23 + v102);
      uint64_t v35 = v100;
      sub_1000498B0(&v128, (uint64_t)v100);
      if (__OFADD__(v34, 1)) {
        goto LABEL_59;
      }
      *(void *)(v23 + v33) = v34 + 1;
      v130[0] = v34;
      sub_1000498B0(v35, (uint64_t)v99);
    }
    sub_100049B74((uint64_t)v130, (uint64_t)&v131, &qword_1001640E8);
    if (!v132[3]) {
      return sub_10003F5D0(v117, &qword_1001640C8);
    }
    uint64_t v29 = v24;
    uint64_t v36 = v26;
    uint64_t v37 = v131;
    sub_1000498B0(v114, (uint64_t)v130);
    sub_1000620F8((uint64_t)v130, (uint64_t)v125);
    sub_100046B9C((uint64_t *)&unk_1001640F0);
    uint64_t v38 = (uint64_t)v116;
    char v39 = swift_dynamicCast();
    unint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v115;
    if ((v39 & 1) == 0)
    {
      v40(v38, 1, 1, v36);
      sub_10003F5D0(v38, &qword_1001640B8);
      goto LABEL_38;
    }
    v40(v38, 0, 1, v36);
    (*v113)(v123, v38, v36);
    uint64_t v41 = (char *)PreferencesControllerRecipe.viewControllerIfLoaded.getter();
    if (!v41) {
      goto LABEL_36;
    }
    uint64_t v42 = v41;
    id v43 = [v41 specifier];
    if (!v43
      || (v44 = v43, id v45 = [v43 identifier], v44, !v45))
    {

LABEL_36:
      (*v112)(v123, v36);
LABEL_38:
      if (qword_10015F148 == -1) {
        goto LABEL_39;
      }
      goto LABEL_61;
    }
    char v122 = v42;
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v48 = v47;

    uint64_t v49 = *(void *)(v21 + 32);
    uint64_t v50 = *(void *)(v21 + 40) >> 1;
    if (v49 == v50) {
      goto LABEL_44;
    }
    if (v49 >= v50)
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      swift_once();
LABEL_39:
      uint64_t v72 = type metadata accessor for Logger();
      sub_1000477B0(v72, (uint64_t)qword_10016AFC8);
      sub_1000620F8((uint64_t)v130, (uint64_t)v125);
      swift_retain_n();
      uint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        id v76 = (void *)swift_slowAlloc();
        int64_t v123 = (char *)swift_slowAlloc();
        uint64_t v126 = (uint64_t)v123;
        *(_DWORD *)uint64_t v75 = 141558787;
        *(void *)&long long v128 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v75 + 12) = 2081;
        sub_1000620F8((uint64_t)v125, (uint64_t)&v128);
        uint64_t v77 = String.init<A>(describing:)();
        *(void *)&long long v128 = sub_100042948(v77, v78, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100042A1C((uint64_t)v125);
        *(_WORD *)(v75 + 22) = 2160;
        *(void *)&long long v128 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v75 + 32) = 2113;
        swift_beginAccess();
        unint64_t v79 = *(void **)(v29 + 16);
        uint64_t v124 = v79;
        id v80 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v76 = v79;
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "Item '%{private,mask.hash}s' not valid, controllerToHandleURL is '%{private,mask.hash}@'", (uint8_t *)v75, 0x2Au);
        sub_100046B9C((uint64_t *)&unk_100163570);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();

        sub_100042A1C((uint64_t)v125);
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRetain();
    NSString v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v52 = (id)SFObjectAndOffsetForURLPair();

    uint64_t v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v126 = 0x7463656A626FLL;
    unint64_t v127 = 0xE600000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v53 + 16) && (unint64_t v54 = sub_1000619E0((uint64_t)v125), (v55 & 1) != 0))
    {
      sub_100061984(*(void *)(v53 + 56) + 32 * v54, (uint64_t)&v128);
    }
    else
    {
      long long v128 = 0u;
      long long v129 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100061AEC((uint64_t)v125);
    if (!*((void *)&v129 + 1))
    {
      sub_10003F5D0((uint64_t)&v128, &qword_1001609A0);
      goto LABEL_44;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v57 = v126;
    unint64_t v56 = v127;
    if ((v126 != v46 || v127 != v48) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      break;
    }
    uint64_t v121 = v37;
    swift_bridgeObjectRelease();
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    sub_1000477B0(v58, (uint64_t)qword_10016AFC8);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v62 = (void *)swift_slowAlloc();
      *(void *)&long long v120 = swift_slowAlloc();
      *(void *)&v125[0] = v120;
      *(_DWORD *)uint64_t v61 = v97;
      uint64_t v63 = v29;
      swift_bridgeObjectRetain();
      *(void *)&long long v128 = sub_100042948(v57, v56, (uint64_t *)v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v61 + 12) = 2160;
      *(void *)&long long v128 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v61 + 22) = 2113;
      uint64_t v64 = *(void **)(v29 + 16);
      *(void *)&long long v128 = v64;
      id v65 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v62 = v64;
      uint64_t v29 = v63;
      uint64_t v36 = v106;
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Identifier '%s' is a match to path component, new controllerToHandleURL is '%{private,mask.hash}@'", (uint8_t *)v61, 0x20u);
      sub_100046B9C((uint64_t *)&unk_100163570);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = v109;
    uint64_t v66 = *(void *)(v109 + 32);
    unint64_t v67 = *(void *)(v109 + 40);
    int64_t v68 = v67 >> 1;
    if (__OFSUB__(v67 >> 1, v66)) {
      goto LABEL_55;
    }
    uint64_t v69 = *(void *)(v109 + 32);
    if (v67 >> 1 != v66)
    {
      uint64_t v69 = v66 + 1;
      if (__OFADD__(v66, 1)) {
        goto LABEL_60;
      }
      if (v68 < v69) {
        goto LABEL_56;
      }
      if (v69 < v66) {
        goto LABEL_57;
      }
    }
    if (v68 < v66) {
      goto LABEL_58;
    }
    uint64_t v24 = v29;
    uint64_t v70 = *v112;
    long long v120 = *(_OWORD *)(v109 + 16);
    swift_unknownObjectRetain();
    uint64_t v26 = v36;
    v70(v123, v36);
    sub_100042A1C((uint64_t)v130);
    *(_OWORD *)(v21 + 16) = v120;
    *(void *)(v21 + 32) = v69;
    *(void *)(v21 + 40) = v67;
    swift_unknownObjectRelease();
    os_log_type_t v71 = *v111;
    *uint64_t v111 = v122;

    uint64_t v22 = v107;
    *uint64_t v108 = v121;
    uint64_t v23 = v117;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v109;
LABEL_44:
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v81 = type metadata accessor for Logger();
  sub_1000477B0(v81, (uint64_t)qword_10016AFC8);
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = swift_slowAlloc();
    uint64_t v85 = (void *)swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    uint64_t v126 = v121;
    *(_DWORD *)uint64_t v84 = 136315907;
    uint64_t v86 = v21;
    swift_bridgeObjectRetain();
    *(void *)&v125[0] = sub_100042948(v46, v48, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v84 + 12) = 2080;
    swift_beginAccess();
    uint64_t v87 = 0;
    uint64_t result = 0;
    uint64_t v89 = *(void *)(v86 + 32);
    uint64_t v90 = *(void *)(v86 + 40) >> 1;
    if (v89 != v90)
    {
      if (v89 >= v90)
      {
        __break(1u);
        return result;
      }
      uint64_t v87 = *(void *)(*(void *)(v109 + 24) + 16 * v89);
      uint64_t result = swift_bridgeObjectRetain();
    }
    *(void *)&long long v128 = v87;
    *((void *)&v128 + 1) = result;
    sub_100046B9C(&qword_100163BB0);
    uint64_t v91 = String.init<A>(describing:)();
    *(void *)&long long v128 = sub_100042948(v91, v92, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 22) = 2160;
    *(void *)&long long v128 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v84 + 32) = 2113;
    swift_beginAccess();
    char v93 = *(void **)(v96 + 16);
    uint64_t v124 = v93;
    id v94 = v93;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v85 = v93;
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "Identifier '%s' does not match '%s,  controllerToHandleURL is '%{private,mask.hash}@'", (uint8_t *)v84, 0x2Au);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*v112)(v123, v106);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();

    (*v112)(v123, v36);
  }
LABEL_53:
  sub_100042A1C((uint64_t)v130);
  return sub_10003F5D0(v117, &qword_1001640C8);
}

uint64_t sub_1000DE74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v28 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = swift_projectBox();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v30 = (id *)(a4 + 16);
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000477B0(v17, (uint64_t)qword_10016AFC8);
    sub_10003DFC0(a2, (uint64_t)v14, type metadata accessor for SettingsURLDestination);
    sub_10003DFC0(a2, (uint64_t)v12, type metadata accessor for SettingsURLDestination);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = v15;
      uint64_t v21 = v20;
      uint64_t v28 = swift_slowAlloc();
      v32[0] = v28;
      *(_DWORD *)uint64_t v21 = 141558787;
      uint64_t v31 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2081;
      unint64_t v22 = sub_1000F6F94();
      uint64_t v31 = sub_100042948(v22, v23, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DF60((uint64_t)v14, type metadata accessor for SettingsURLDestination);
      *(_WORD *)(v21 + 22) = 2160;
      uint64_t v31 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 32) = 2081;
      unint64_t v24 = sub_1000F6F94();
      uint64_t v31 = sub_100042948(v24, v25, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DF60((uint64_t)v12, type metadata accessor for SettingsURLDestination);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Processing URL with possibly modified URL Destination (was '%{private,mask.hash}s', is now '%{private,mask.hash}s').", (uint8_t *)v21, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v15 = v29;
      swift_slowDealloc();
    }
    else
    {
      sub_10003DF60((uint64_t)v14, type metadata accessor for SettingsURLDestination);
      sub_10003DF60((uint64_t)v12, type metadata accessor for SettingsURLDestination);
    }

    swift_beginAccess();
    sub_10003DFC0(v15, (uint64_t)v9, type metadata accessor for SettingsURLDestination);
    uint64_t v26 = v30;
    swift_beginAccess();
    uint64_t v27 = (char *)*v26;
    sub_1000DEB5C((uint64_t)v9, v27, 1);

    swift_release();
    return sub_10003DF60((uint64_t)v9, type metadata accessor for SettingsURLDestination);
  }
  return result;
}

uint64_t sub_1000DEB5C(uint64_t a1, char *a2, int a3)
{
  int v136 = a3;
  uint64_t v143 = a2;
  uint64_t v144 = type metadata accessor for URLQueryItem();
  uint64_t v4 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v6 = (char *)v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v137 = (uint64_t)v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v135 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v135 - v14;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  sub_10003DFC0(a1, (uint64_t)v15, type metadata accessor for SettingsURLDestination);
  unint64_t v141 = v13;
  sub_10003DFC0((uint64_t)v15, (uint64_t)v13, type metadata accessor for SettingsURLDestination);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  sub_10004F000((uint64_t)v15, v18 + v17, type metadata accessor for SettingsURLDestination);
  uint64_t v142 = v18;
  *(void *)(v18 + ((v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v16;
  uint64_t v140 = v16;
  os_log_type_t v19 = v143;
  swift_retain();
  [v19 dismissViewControllerAnimated:1 completion:0];
  uint64_t v138 = v7;
  uint64_t v20 = *(int *)(v7 + 24);
  uint64_t v139 = a1;
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRetain();
    unint64_t v25 = &_swiftEmptyDictionarySingleton;
LABEL_25:
    uint64_t v151 = v25;
    swift_bridgeObjectRelease();
    LOBYTE(v153) = 1;
    AnyHashable.init<A>(_:)();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v153 = v25;
    sub_1000A0C78((uint64_t)&aBlock, 0x6574616D696E61, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    uint64_t v151 = (void *)v153;
    swift_bridgeObjectRelease();
    uint64_t v59 = v139;
    sub_10003DFC0(v139, v137, type metadata accessor for SettingsURLDestination);
    sub_1000373B4(&qword_100163FA8, (void (*)(uint64_t))type metadata accessor for SettingsURLDestination);
    uint64_t v60 = v138;
    AnyHashable.init<A>(_:)();
    uint64_t v61 = v151;
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v153 = v61;
    sub_1000A0C78((uint64_t)&aBlock, 0xD000000000000021, 0x800000010012A660, v62);
    uint64_t v63 = v153;
    uint64_t v151 = (void *)v153;
    swift_bridgeObjectRelease();
    uint64_t v64 = (void *)(v59 + *(int *)(v60 + 28));
    uint64_t v65 = v64[1];
    uint64_t v22 = v142;
    if (v65)
    {
      *(void *)&long long v153 = *v64;
      *((void *)&v153 + 1) = v65;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      char v66 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v153 = v63;
      sub_1000A0C78((uint64_t)&aBlock, 0x4E74736554747070, 0xEB00000000656D61, v66);
      uint64_t v63 = v153;
      uint64_t v151 = (void *)v153;
      swift_bridgeObjectRelease();
    }
    unsigned __int8 v152 = 2;
    if (*(void *)(v63 + 16)
      && (unint64_t v67 = sub_10009F1DC(1752457584, 0xE400000000000000), (v68 & 1) != 0)
      && (sub_100061B40(*(void *)(v63 + 56) + 40 * v67, (uint64_t)&aBlock), (swift_dynamicCast() & 1) != 0))
    {
      uint64_t v69 = v150;
      *(void *)&long long v153 = v149;
      if (!v150) {
        goto LABEL_48;
      }
    }
    else
    {
      if (!*(void *)(v63 + 16)) {
        goto LABEL_48;
      }
      unint64_t v70 = sub_10009F1DC(1953460082, 0xE400000000000000);
      if ((v71 & 1) == 0) {
        goto LABEL_48;
      }
      sub_100061B40(*(void *)(v63 + 56) + 40 * v70, (uint64_t)&aBlock);
      if (!swift_dynamicCast())
      {
        long long v153 = 0uLL;
        goto LABEL_48;
      }
      uint64_t v69 = *((void *)&v153 + 1);
      if (!*((void *)&v153 + 1))
      {
LABEL_48:
        if (qword_10015F148 != -1) {
LABEL_91:
        }
          swift_once();
        uint64_t v87 = type metadata accessor for Logger();
        sub_1000477B0(v87, (uint64_t)qword_10016AFC8);
        uint64_t v88 = v19;
        uint64_t v89 = Logger.logObject.getter();
        os_log_type_t v90 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long aBlock = swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = 136446210;
          swift_getObjectType();
          uint64_t v92 = _typeName(_:qualified:)();
          *(void *)&long long v153 = sub_100042948(v92, v93, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v89, v90, "Instance of %{public}s did not defer URL handling, calling handleURL.", v91, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v94 = v151;
        if (v151[2]
          && (unint64_t v95 = sub_10009F1DC(1752457584, 0xE400000000000000), (v96 & 1) != 0)
          && (sub_100061B40(v94[7] + 40 * v95, (uint64_t)&aBlock), swift_dynamicCast()))
        {
          unint64_t v97 = *((void *)&v153 + 1);
          uint64_t v98 = v153 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v98 = 0;
          unint64_t v97 = 0xE000000000000000;
        }
        if (v136)
        {
          swift_bridgeObjectRelease();
          uint64_t v99 = HIBYTE(v97) & 0xF;
          if ((v97 & 0x2000000000000000) == 0) {
            uint64_t v99 = v98;
          }
          if (v99)
          {
            sub_10003DF60((uint64_t)v141, type metadata accessor for SettingsURLDestination);
            swift_release();
          }
          else
          {
            unint64_t v157 = &OBJC_PROTOCOL___PSListControllerURLHandler;
            uint64_t v110 = swift_dynamicCastObjCProtocolConditional();
            if (v110)
            {
              uint64_t v111 = (void *)v110;
              uint64_t v112 = v88;
              uint64_t v113 = Logger.logObject.getter();
              os_log_type_t v114 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v113, v114))
              {
                uint64_t v115 = (uint8_t *)swift_slowAlloc();
                *(void *)&long long aBlock = swift_slowAlloc();
                *(_DWORD *)uint64_t v115 = 136315138;
                swift_getObjectType();
                uint64_t v116 = _typeName(_:qualified:)();
                *(void *)&long long v153 = sub_100042948(v116, v117, (uint64_t *)&aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();

                _os_log_impl((void *)&_mh_execute_header, v113, v114, "Reusing existing controller '%s' for handling URL with empty remaining path.", v115, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
              }
              if ([v111 respondsToSelector:"handleResourceDictionaryWhenAlreadyPresented:"])
              {
                uint64_t v118 = v112;
                uint64_t v119 = swift_bridgeObjectRetain();
                sub_1000E28C4(v119);
                swift_bridgeObjectRelease();
                Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                [v111 handleResourceDictionaryWhenAlreadyPresented:isa];

                swift_bridgeObjectRelease();
              }
              uint64_t v121 = (uint64_t)v141;
              sub_1000E22CC((uint64_t)v141);

              swift_release();
              swift_release();
              sub_10003DF60(v121, type metadata accessor for SettingsURLDestination);
              return swift_bridgeObjectRelease();
            }
            swift_release();
            sub_10003DF60((uint64_t)v141, type metadata accessor for SettingsURLDestination);
          }
        }
        else
        {
          sub_10003DF60((uint64_t)v141, type metadata accessor for SettingsURLDestination);
          swift_release();
          swift_bridgeObjectRelease();
        }
        uint64_t v100 = v88;
        uint64_t v101 = Logger.logObject.getter();
        os_log_type_t v102 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long aBlock = swift_slowAlloc();
          *(_DWORD *)uint64_t v103 = 136315138;
          swift_getObjectType();
          uint64_t v104 = _typeName(_:qualified:)();
          *(void *)&long long v153 = sub_100042948(v104, v105, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v101, v102, "Path is not empty, calling handleURL on '%s'.", v103, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v106 = swift_bridgeObjectRetain();
        sub_1000E28C4(v106);
        swift_bridgeObjectRelease();
        Class v107 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v160 = sub_1000E7A00;
        uint64_t v161 = v22;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v159 = sub_10002CC68;
        *((void *)&v159 + 1) = &unk_100155560;
        uint64_t v108 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v100 handleURL:v107 withCompletion:v108];
        swift_release();
        _Block_release(v108);

        return swift_bridgeObjectRelease();
      }
    }
    *(void *)&long long aBlock = v153;
    *((void *)&aBlock + 1) = v69;
    *(void *)&long long v153 = 47;
    *((void *)&v153 + 1) = 0xE100000000000000;
    sub_100030C58();
    uint64_t v72 = (void *)StringProtocol.components<A>(separatedBy:)();
    swift_bridgeObjectRelease();
    if (v72[2])
    {
      uint64_t v74 = v72[4];
      uint64_t v73 = v72[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long aBlock = v74;
      *((void *)&aBlock + 1) = v73;
      *(void *)&long long v153 = 35;
      *((void *)&v153 + 1) = 0xE100000000000000;
      uint64_t v75 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (v75[2])
      {
        uint64_t v77 = v75[4];
        uint64_t v76 = v75[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        LOBYTE(v149) = 1;
        sub_1000E265C((uint64_t)&v149, &v152, v19, v77, v76, (uint64_t)&v151, (uint64_t)sub_1000E7A00, v22);
        swift_bridgeObjectRelease();
        *(void *)&long long aBlock = v74;
        *((void *)&aBlock + 1) = v73;
        *(void *)&long long v153 = 35;
        *((void *)&v153 + 1) = 0xE100000000000000;
        uint64_t v78 = StringProtocol.components<A>(separatedBy:)();
        swift_bridgeObjectRelease();
        uint64_t v79 = *(void *)(v78 + 16);
        if (v79)
        {
          uint64_t v80 = v78 + 16 * v79;
          uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
          unint64_t v81 = *(void *)(v80 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (qword_10015F148 != -1) {
            swift_once();
          }
          uint64_t v83 = type metadata accessor for Logger();
          sub_1000477B0(v83, (uint64_t)qword_10016AFC8);
          swift_bridgeObjectRetain_n();
          uint64_t v84 = Logger.logObject.getter();
          os_log_type_t v85 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v84, v85))
          {
            uint64_t v148 = v82;
            uint64_t v86 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long aBlock = swift_slowAlloc();
            *(_DWORD *)uint64_t v86 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)&long long v153 = sub_100042948((uint64_t)v148, v81, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v84, v85, "controllerToHandleURL handling offset target %s", v86, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v156 = &OBJC_PROTOCOL___PSViewControllerOffsetProtocol;
          uint64_t v122 = swift_dynamicCastObjCProtocolConditional();
          if (v122)
          {
            int64_t v123 = (void *)v122;
            uint64_t v124 = v19;
            NSString v125 = String._bridgeToObjectiveC()();
            [v123 setDesiredVerticalContentOffsetItemNamed:v125];
          }
          if ([v19 respondsToSelector:"highlightSpecifierWithID:"])
          {
            uint64_t v126 = v19;
            NSString v127 = String._bridgeToObjectiveC()();
            [v126 highlightSpecifierWithID:v127];
          }
        }
        swift_bridgeObjectRelease();
        if (v152 != 2 && (v152 & 1) == 0)
        {
          swift_release();
          sub_10003DF60((uint64_t)v141, type metadata accessor for SettingsURLDestination);
          if (qword_10015F148 != -1) {
            swift_once();
          }
          uint64_t v128 = type metadata accessor for Logger();
          sub_1000477B0(v128, (uint64_t)qword_10016AFC8);
          long long v129 = v19;
          unint64_t v130 = Logger.logObject.getter();
          os_log_type_t v131 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v130, v131))
          {
            uint64_t v132 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long aBlock = swift_slowAlloc();
            *(_DWORD *)uint64_t v132 = 136446210;
            swift_getObjectType();
            uint64_t v133 = _typeName(_:qualified:)();
            *(void *)&long long v153 = sub_100042948(v133, v134, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl((void *)&_mh_execute_header, v130, v131, "Instance of %{public}s deferred URL handling.", v132, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_release();
          }
          else
          {

            swift_release();
          }
          return swift_bridgeObjectRelease();
        }
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v23 = v4 + 16;
  uint64_t v148 = v24;
  os_log_type_t v19 = (char *)(v21 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64)));
  uint64_t v146 = (void (**)(char *, uint64_t))(v23 - 8);
  uint64_t v145 = *(void *)(v23 + 56);
  v135[1] = v21;
  swift_bridgeObjectRetain_n();
  unint64_t v25 = &_swiftEmptyDictionarySingleton;
  uint64_t v26 = v144;
  uint64_t v147 = v23;
  while (1)
  {
    v148(v6, v19, v26);
    uint64_t v27 = URLQueryItem.name.getter();
    uint64_t v29 = v28;
    uint64_t v30 = URLQueryItem.value.getter();
    if (!v31
      || (*(void *)&long long aBlock = v30,
          *((void *)&aBlock + 1) = v31,
          sub_100030C58(),
          uint64_t v32 = StringProtocol.removingPercentEncoding.getter(),
          uint64_t v34 = v33,
          swift_bridgeObjectRelease(),
          !v34))
    {
      swift_bridgeObjectRetain();
      unint64_t v44 = sub_10009F1DC(v27, v29);
      char v46 = v45;
      swift_bridgeObjectRelease();
      if (v46)
      {
        char v47 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v153 = v25;
        if ((v47 & 1) == 0)
        {
          sub_1000A1794();
          unint64_t v25 = (void *)v153;
        }
        swift_bridgeObjectRelease();
        uint64_t v48 = v25[7] + 40 * v44;
        uint64_t v49 = *(uint64_t (**)())(v48 + 32);
        long long v50 = *(_OWORD *)(v48 + 16);
        long long aBlock = *(_OWORD *)v48;
        long long v159 = v50;
        uint64_t v160 = v49;
        sub_1000A07C8(v44, (uint64_t)v25);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v160 = 0;
        long long aBlock = 0u;
        long long v159 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10003F5D0((uint64_t)&aBlock, &qword_100163FA0);
      goto LABEL_5;
    }
    *(void *)&long long v153 = v32;
    *((void *)&v153 + 1) = v34;
    AnyHashable.init<A>(_:)();
    long long v153 = aBlock;
    long long v154 = v159;
    uint64_t v155 = v160;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v149 = v25;
    unint64_t v37 = sub_10009F1DC(v27, v29);
    uint64_t v38 = v25[2];
    BOOL v39 = (v36 & 1) == 0;
    uint64_t v40 = v38 + v39;
    if (__OFADD__(v38, v39))
    {
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    char v41 = v36;
    if (v25[3] >= v40)
    {
      if ((v35 & 1) == 0) {
        sub_1000A1794();
      }
      goto LABEL_18;
    }
    sub_1000A010C(v40, v35);
    unint64_t v42 = sub_10009F1DC(v27, v29);
    if ((v41 & 1) != (v43 & 1)) {
      break;
    }
    unint64_t v37 = v42;
LABEL_18:
    uint64_t v26 = v144;
    unint64_t v25 = v149;
    if (v41)
    {
      sub_1000A3930((uint64_t)&v153, v149[7] + 40 * v37);
    }
    else
    {
      v149[(v37 >> 6) + 8] |= 1 << v37;
      NSString v51 = (uint64_t *)(v25[6] + 16 * v37);
      *NSString v51 = v27;
      v51[1] = v29;
      uint64_t v52 = v25[7] + 40 * v37;
      long long v53 = v153;
      long long v54 = v154;
      *(void *)(v52 + 32) = v155;
      *(_OWORD *)uint64_t v52 = v53;
      *(_OWORD *)(v52 + 16) = v54;
      uint64_t v55 = v25[2];
      BOOL v56 = __OFADD__(v55, 1);
      uint64_t v57 = v55 + 1;
      if (v56) {
        goto LABEL_90;
      }
      v25[2] = v57;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    (*v146)(v6, v26);
    v19 += v145;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      os_log_type_t v19 = v143;
      goto LABEL_25;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  uint64_t result = sub_10003DF60((uint64_t)v141, type metadata accessor for SettingsURLDestination);
  __break(1u);
  return result;
}

uint64_t sub_1000E005C(uint64_t a1, Swift::Int a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1000477B0(v4, (uint64_t)qword_10016AFC8);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 141558275;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2049;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Popping %{private,mask.hash}ld from stack.", (uint8_t *)v7, 0x16u);
      swift_slowDealloc();
    }

    swift_getKeyPath();
    sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    NavigationPath.removeLast(_:)(a2);
    swift_endAccess();
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1000E02D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v38 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for SettingsAppDetailContent();
  __chkstk_darwin(v12);
  uint64_t v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    int v35 = a4;
    char v36 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v37 = a3;
    sub_10003DFC0(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(void *)&v34[-16] = v16;
    *(void *)&v34[-8] = v14;
    uint64_t v39 = v16;
    sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10003DF60((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    unint64_t v18 = *(void *)(a2 + *(int *)(v12 + 20));
    switch(v18 >> 62)
    {
      case 1uLL:
        swift_retain();
        unint64_t v24 = (char *)PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
        sub_1000DEB5C(v37, v24, (v35 & 1) == 0);
        swift_release();

        swift_release();
        break;
      case 2uLL:
        uint64_t v25 = v18 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v26 = type metadata accessor for TaskPriority();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
        uint64_t v27 = swift_allocObject();
        swift_weakInit();
        uint64_t v28 = v36;
        sub_10003DFC0(v37, (uint64_t)v36, type metadata accessor for SettingsURLDestination);
        type metadata accessor for MainActor();
        swift_retain_n();
        swift_retain();
        uint64_t v29 = static MainActor.shared.getter();
        unint64_t v30 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        unint64_t v31 = (v8 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v29;
        *(void *)(v32 + 24) = &protocol witness table for MainActor;
        sub_10004F000((uint64_t)v28, v32 + v30, type metadata accessor for SettingsURLDestination);
        *(void *)(v32 + v31) = v25;
        *(void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8)) = v27;
        swift_release();
        sub_1000C9558((uint64_t)v11, (uint64_t)&unk_100164110, v32);
        swift_release();
        swift_release();
        swift_release();
        break;
      case 3uLL:
        if (qword_10015F148 != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for Logger();
        sub_1000477B0(v33, (uint64_t)qword_10016AFC8);
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.fault.getter();
        if (!os_log_type_enabled(v20, v21)) {
          goto LABEL_14;
        }
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        uint64_t v23 = "Processing a URL for an empty content state!";
        goto LABEL_13;
      default:
        if (qword_10015F148 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_1000477B0(v19, (uint64_t)qword_10016AFC8);
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          uint64_t v23 = "Processing a URL for opaque view controller!";
LABEL_13:
          _os_log_impl((void *)&_mh_execute_header, v20, v21, v23, v22, 2u);
          swift_slowDealloc();

          swift_release();
        }
        else
        {
LABEL_14:
          swift_release();
        }
        break;
    }
  }
}

uint64_t sub_1000E08A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  sub_100046B9C(&qword_100163F60);
  v6[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SettingsURLDestination(0);
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[20] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[21] = v9;
  v6[22] = v8;
  return _swift_task_switch(sub_1000E09CC, v9, v8);
}

uint64_t sub_1000E09CC()
{
  uint64_t v15 = v0;
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[19];
  uint64_t v3 = type metadata accessor for Logger();
  v0[23] = sub_1000477B0(v3, (uint64_t)qword_10016AFC8);
  sub_10003DFC0(v1, v2, type metadata accessor for SettingsURLDestination);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[19];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[11] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v9 = URL.absoluteString.getter();
    v0[12] = sub_100042948(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DF60(v7, type metadata accessor for SettingsURLDestination);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Calling openURL on settings experience plugin with url '%{private,mask.hash}s'.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003DF60(v0[19], type metadata accessor for SettingsURLDestination);
  }

  uint64_t v11 = (void *)swift_task_alloc();
  v0[24] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1000E0C54;
  uint64_t v12 = v0[13];
  return SettingsExperiencePlugin.openURL(_:)(v12);
}

uint64_t sub_1000E0C54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_1000E0D74, v3, v2);
}

uint64_t sub_1000E0D74()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1000E0F5C(v0[13]);
    swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = v0[16];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[18] + 56))(v3, 1, 1, v0[17]);
    uint64_t v4 = v2 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
    swift_beginAccess();
    sub_100039904(v3, v4, &qword_100163F60);
    swift_endAccess();
    sub_1000D86AC();
    sub_10003F5D0(v3, &qword_100163F60);
    swift_release();
  }
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "openURL completed for settings experience plugin.", v7, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_1000E0F5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v99 = (char *)&v95 - v7;
  uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100164080);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v100 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v95 - v11;
  uint64_t v13 = type metadata accessor for URLQueryItem();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v108 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v98 = (char *)&v95 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_type_t v21 = (char *)&v95 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = (char *)&v95 - v23;
  uint64_t v101 = *(int *)(v3 + 32);
  uint64_t v25 = *(void *)(a1 + v101);
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v109 = v22;
  if (v26)
  {
    uint64_t v103 = v12;
    unint64_t v104 = (unint64_t)v6;
    uint64_t v105 = a1;
    uint64_t v106 = v14;
    Class v107 = (char *)&v95 - v23;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v27 = v14 + 16;
    uint64_t v28 = v29;
    uint64_t v30 = v25 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
    uint64_t v31 = *(void *)(v27 + 56);
    os_log_type_t v102 = (void (*)(char *, char *, uint64_t))v25;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      v28(v21, v30, v13);
      if (URLQueryItem.name.getter() == 0x7541796669746F6ELL && v32 == 0xED000074694B6874)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v33) {
        break;
      }
      uint64_t v13 = v109;
      (*(void (**)(char *, uint64_t))(v27 - 8))(v21, v109);
      v30 += v31;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v106;
        unint64_t v24 = v107;
        os_log_type_t v6 = (char *)v104;
        a1 = v105;
        uint64_t v12 = v103;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v109;
LABEL_12:
    uint64_t v14 = v106;
    uint64_t v12 = v103;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v103, v21, v13);
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v34(v12, 0, 1, v13);
    unint64_t v24 = v107;
    os_log_type_t v6 = (char *)v104;
    a1 = v105;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v34(v12, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  int v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v35(v12, 1, v13) == 1)
  {
    sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100164080);
LABEL_32:
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_1000477B0(v53, (uint64_t)qword_10016AFF8);
    sub_10003DFC0(a1, (uint64_t)v6, type metadata accessor for SettingsURLDestination);
    long long v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 141558275;
      uint64_t v111 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v56 + 12) = 2081;
      uint64_t v57 = URL.absoluteString.getter();
      uint64_t v111 = sub_100042948(v57, v58, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DF60((uint64_t)v6, type metadata accessor for SettingsURLDestination);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "No notifyAuthKit parameter found in URL '%{private,mask.hash}s', no authentication required.", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10003DF60((uint64_t)v6, type metadata accessor for SettingsURLDestination);
    }

    return;
  }
  os_log_type_t v102 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v103 = (char *)(v14 + 32);
  v102(v24, v12, v13);
  uint64_t v36 = URLQueryItem.value.getter();
  if (!v37)
  {
LABEL_31:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    goto LABEL_32;
  }
  uint64_t v38 = v36;
  uint64_t v39 = v37;
  if ((v36 != 1702195828 || v37 != 0xE400000000000000) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v38 != 0x65736C6166 || v39 != 0xE500000000000000) {
      _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(a1 + v101);
  uint64_t v41 = *(void *)(v40 + 16);
  if (v41)
  {
    char v96 = v35;
    unint64_t v97 = v34;
    uint64_t v105 = a1;
    uint64_t v106 = v14;
    Class v107 = v24;
    uint64_t v42 = v13;
    uint64_t v44 = v14 + 16;
    char v43 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v45 = v40 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    char v46 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v47 = *(void *)(v44 + 56);
    uint64_t v101 = v40;
    swift_bridgeObjectRetain_n();
    unint64_t v104 = 0x800000010012A690;
    uint64_t v48 = v108;
    while (1)
    {
      v43(v48, v45, v42);
      if (URLQueryItem.name.getter() == 0xD000000000000010 && v49 == v104)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v50) {
        break;
      }
      uint64_t v48 = v108;
      uint64_t v42 = v109;
      (*v46)(v108, v109);
      v45 += v47;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v106;
        unint64_t v24 = v107;
        uint64_t v13 = v42;
        a1 = v105;
        uint64_t v51 = (uint64_t)v100;
        int v35 = v96;
        v97(v100, 1, 1, v13);
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v48 = v108;
LABEL_40:
    uint64_t v34 = v97;
    int v35 = v96;
    uint64_t v51 = (uint64_t)v100;
    uint64_t v13 = v109;
    v102(v100, v48, v109);
    uint64_t v52 = 0;
    uint64_t v14 = v106;
    unint64_t v24 = v107;
    a1 = v105;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v52 = 1;
    uint64_t v51 = (uint64_t)v100;
  }
  v34((char *)v51, v52, 1, v13);
LABEL_42:
  swift_bridgeObjectRelease();
  if (v35((char *)v51, 1, v13) == 1)
  {
    sub_10003F5D0(v51, (uint64_t *)&unk_100164080);
LABEL_49:
    uint64_t v74 = (uint64_t)v99;
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    sub_1000477B0(v75, (uint64_t)qword_10016AFF8);
    sub_10003DFC0(a1, v74, type metadata accessor for SettingsURLDestination);
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 141558275;
      uint64_t v111 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v78 + 12) = 2081;
      uint64_t v79 = URL.absoluteString.getter();
      uint64_t v111 = sub_100042948(v79, v80, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DF60(v74, type metadata accessor for SettingsURLDestination);
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "No authKitContextID parameter found in URL '%{private,mask.hash}s'.", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v109);
    }
    else
    {

      sub_10003DF60(v74, type metadata accessor for SettingsURLDestination);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    }
    return;
  }
  uint64_t v59 = v98;
  v102(v98, (char *)v51, v13);
  uint64_t v60 = URLQueryItem.value.getter();
  if (!v61)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v59, v13);
    goto LABEL_49;
  }
  uint64_t v62 = v60;
  unint64_t v63 = v61;
  id v64 = objc_allocWithZone((Class)AKAppleIDAuthenticationUISurrogateContext);
  swift_bridgeObjectRetain();
  NSString v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v66 = [v64 initWithSurrogateID:v65];

  if (v66)
  {
    swift_bridgeObjectRelease();
    id v67 = v66;
    char v68 = (id *)&sub_100036FFC()[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation];
    swift_beginAccess();
    id v69 = *v68;
    swift_release();
    [v67 setPresentingViewController:v69];

    id v70 = [objc_allocWithZone((Class)AKAppleIDAuthenticationController) init];
    if (v70)
    {
      char v71 = v70;
      aBlock[4] = (uint64_t)sub_1000E3120;
      void aBlock[5] = 0;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000E33E4;
      aBlock[3] = (uint64_t)&unk_1001555B0;
      uint64_t v72 = _Block_copy(aBlock);
      id v73 = v67;
      [v71 authenticateWithContext:v73 completion:v72];
      _Block_release(v72);
    }
    else
    {
      if (qword_10015F158 != -1) {
        swift_once();
      }
      uint64_t v88 = type metadata accessor for Logger();
      sub_1000477B0(v88, (uint64_t)qword_10016AFF8);
      uint64_t v89 = Logger.logObject.getter();
      os_log_type_t v90 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v91 = 0;
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "Unable to create authentication controller.", v91, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v92 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v93 = v109;
    v92(v59, v109);
    v92(v24, v93);
  }
  else
  {
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v81 = type metadata accessor for Logger();
    sub_1000477B0(v81, (uint64_t)qword_10016AFF8);
    swift_bridgeObjectRetain();
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      Class v107 = v24;
      uint64_t v85 = v13;
      uint64_t v86 = v84;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v86 = 141558275;
      uint64_t v111 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v86 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v111 = sub_100042948(v62, v63, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Unable to create surrogate context for authKitContextID '%{private,mask.hash}s'.", (uint8_t *)v86, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v87 = *(void (**)(char *, uint64_t))(v14 + 8);
      v87(v98, v85);
      v87(v107, v85);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      id v94 = *(void (**)(char *, uint64_t))(v14 + 8);
      v94(v98, v13);
      v94(v24, v13);
    }
  }
}

uint64_t sub_1000E1ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SettingsURLDestination(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v22 = v5;
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v23 = v4;
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000477B0(v13, (uint64_t)qword_10016AFC8);
    sub_10003DFC0(a2, (uint64_t)v10, type metadata accessor for SettingsURLDestination);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      v21[1] = v2;
      uint64_t v17 = v16;
      v21[0] = swift_slowAlloc();
      uint64_t v25 = v21[0];
      *(_DWORD *)uint64_t v17 = 141558275;
      uint64_t v24 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2081;
      unint64_t v18 = sub_1000F6F94();
      uint64_t v24 = sub_100042948(v18, v19, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DF60((uint64_t)v10, type metadata accessor for SettingsURLDestination);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Resetting Navigation Path for URL navigation %{private,mask.hash}s.", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10003DF60((uint64_t)v10, type metadata accessor for SettingsURLDestination);
    }

    NavigationPath.init()();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v21[-2] = v12;
    v21[-1] = v7;
    uint64_t v25 = v12;
    sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E22CC(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100163F60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000477B0(v9, (uint64_t)qword_10016AFC8);
  sub_10003DFC0(a1, (uint64_t)v8, type metadata accessor for SettingsURLDestination);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = v5;
    uint64_t v13 = (uint8_t *)v12;
    v24[0] = swift_slowAlloc();
    uint64_t v20 = a1;
    os_log_type_t v21 = v4;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v14 = URL.absoluteString.getter();
    uint64_t v23 = sub_100042948(v14, v15, v24);
    a1 = v20;
    uint64_t v4 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DF60((uint64_t)v8, type metadata accessor for SettingsURLDestination);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Application level completion handler for url '%s' called.", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v22;
    swift_slowDealloc();
  }
  else
  {
    sub_10003DF60((uint64_t)v8, type metadata accessor for SettingsURLDestination);
  }

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1000E0F5C(a1);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    uint64_t v18 = v17 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
    swift_beginAccess();
    sub_100039904((uint64_t)v4, v18, &qword_100163F60);
    uint64_t v19 = swift_endAccess();
    sub_1000D86AC(v19);
    sub_10003F5D0((uint64_t)v4, &qword_100163F60);
    return swift_release();
  }
  return result;
}

void sub_1000E265C(uint64_t a1, unsigned __int8 *a2, id a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ([a3 respondsToSelector:"prepareHandlingURLForSpecifierID:resourceDictionary:animatePush:withCompletion:"])
  {
    v24[7] = v8;
    id v14 = a3;
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1000E28C4(v15);
    swift_bridgeObjectRelease();
    NSString v16 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v24[4] = a7;
    v24[5] = a8;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 1107296256;
    v24[2] = sub_10002CC68;
    uint64_t v24[3] = &unk_100155588;
    uint64_t v18 = _Block_copy(v24);
    swift_retain();
    swift_release();
    unsigned __int8 v19 = [v14 prepareHandlingURLForSpecifierID:v16 resourceDictionary:isa animatePush:a1 withCompletion:v18];
    _Block_release(v18);

    swift_bridgeObjectRelease();
    *a2 = v19;
  }
  else
  {
    *a2 = 2;
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000477B0(v20, (uint64_t)qword_10016AFC8);
    os_log_type_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "controllerToHandleURL doesn't respond to prepareHandlingURL", v23, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000E28C4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100046B9C((uint64_t *)&unk_100162540);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_100061B40(*(void *)(a1 + 56) + 40 * v12, (uint64_t)v46);
    uint64_t v44 = v19;
    uint64_t v45 = v18;
    long long v41 = v46[0];
    long long v42 = v46[1];
    uint64_t v43 = v47;
    uint64_t v31 = v19;
    uint64_t v32 = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v29[0] = v41;
    v29[1] = v42;
    uint64_t v30 = v43;
    swift_dynamicCast();
    long long v37 = v33;
    long long v38 = v34;
    uint64_t v39 = v35;
    sub_100025390(&v36, v40);
    long long v33 = v37;
    long long v34 = v38;
    uint64_t v35 = v39;
    sub_100025390(v40, v29);
    sub_100025390(v29, &v37);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v33;
    *(_OWORD *)(v10 + 16) = v34;
    *(void *)(v10 + 32) = v35;
    uint64_t result = (uint64_t)sub_100025390(&v37, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1000653C0();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000E2CAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  int64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a2;
  uint64_t v30 = a4;
  uint64_t v18 = a2;
  unint64_t v19 = a5;
  sub_1000B569C(v18, a3, a4, a5, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10003F5D0((uint64_t)v13, (uint64_t *)&unk_100161530);
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1000477B0(v20, (uint64_t)qword_10016AFC8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_100042948(v29, a3, v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      if (v19) {
        uint64_t v24 = v30;
      }
      else {
        uint64_t v24 = 0;
      }
      if (v19) {
        unint64_t v25 = v19;
      }
      else {
        unint64_t v25 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_100042948(v24, v25, v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Could not find primary list item identifier for '%s' and '%s', resetting to default navigation state.", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_1000D44DC();
      return swift_release();
    }
  }
  else
  {
    sub_10004F000((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_100036FFC();
      swift_release();
      uint64_t v26 = v31;
      sub_10003DFC0((uint64_t)v17, v31, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v26, 0, 1, v14);
      sub_1000C98F4(v26);
      swift_release();
    }
    return sub_10003DF60((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }
  return result;
}

void sub_1000E3120(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000477B0(v2, (uint64_t)qword_10016AFF8);
    swift_errorRetain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136446210;
      swift_getErrorValue();
      uint64_t v5 = Error.localizedDescription.getter();
      sub_100042948(v5, v6, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Failed to authenticate with error: %{public}s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000477B0(v7, (uint64_t)qword_10016AFF8);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Authentication successful.", v9, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000E33E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100046B9C((uint64_t *)&unk_100164090);
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E348C(char *a1, void *a2)
{
  unint64_t v61 = a2;
  uint64_t v3 = sub_100046B9C(&qword_1001641C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v76 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
  uint64_t v72 = *(char **)(v56 - 8);
  __chkstk_darwin(v56);
  id v69 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_1001640B8);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v71 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NavigationPath.CollectionProxy();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_1001640C0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100046B9C(&qword_1001640C8);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  os_log_type_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v67 = v13 + 16;
  id v66 = v23;
  v23(v18, a1, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
  sub_1000373B4(&qword_1001640D0, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  char v68 = v15;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v24 = *(int *)(v20 + 44);
  uint64_t v25 = v56;
  uint64_t v65 = v24;
  *(void *)&v22[v24] = 0;
  uint64_t v26 = &v22[*(int *)(sub_100046B9C(&qword_1001640D8) + 36)];
  uint64_t v27 = sub_1000373B4(&qword_1001640E0, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  uint64_t v28 = v26;
  id v64 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v29 = v12;
  unint64_t v63 = (long long *)((char *)v78 + 8);
  uint64_t v62 = (uint64_t)v81 + 8;
  uint64_t v75 = (long long *)&v83;
  uint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v71 + 32);
  uint64_t v59 = (void (**)(char *, uint64_t))(v71 + 8);
  id v70 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
  unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v72 + 32);
  uint64_t v57 = (void (**)(char *, uint64_t))(v72 + 8);
  uint64_t v72 = v26;
  uint64_t v71 = v27;
  id v73 = v22;
  while (1)
  {
    uint64_t v30 = *(void *)v28;
    dispatch thunk of Collection.endIndex.getter();
    if (v30 == v79[0])
    {
      memset(v81, 0, sizeof(v81));
      goto LABEL_8;
    }
    uint64_t v31 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    sub_1000620F8(v32, (uint64_t)v78);
    v31(v79, 0);
    long long v33 = v68;
    v66(v68, v22, v29);
    dispatch thunk of Collection.formIndex(after:)();
    (*v64)(v33, v29);
    sub_1000498B0(v78, (uint64_t)&v80);
    uint64_t v34 = v65;
    uint64_t v35 = *(void *)&v22[v65];
    long long v36 = v63;
    uint64_t result = sub_1000498B0(&v80, (uint64_t)v63);
    if (__OFADD__(v35, 1)) {
      break;
    }
    *(void *)&v22[v34] = v35 + 1;
    *(void *)&v81[0] = v35;
    sub_1000498B0(v36, v62);
LABEL_8:
    sub_100049B74((uint64_t)v81, (uint64_t)&v82, &qword_1001640E8);
    uint64_t v38 = (uint64_t)v76;
    if (!v84)
    {
      uint64_t v54 = (uint64_t)v22;
      return sub_10003F5D0(v54, &qword_1001640C8);
    }
    uint64_t v39 = v29;
    uint64_t v40 = v25;
    uint64_t v41 = v82;
    sub_1000498B0(v75, (uint64_t)v81);
    sub_1000620F8((uint64_t)v81, (uint64_t)v78);
    sub_100046B9C((uint64_t *)&unk_1001640F0);
    char v42 = swift_dynamicCast();
    uint64_t v43 = *v74;
    if (v42)
    {
      v43(v8, 0, 1, v9);
      (*v60)(v11, v8, v9);
      uint64_t v44 = (void *)PreferencesControllerRecipe.viewControllerIfLoaded.getter();
      if (v44)
      {
        uint64_t v45 = v44;
        unsigned __int8 v46 = [v44 canBeShownFromSuspendedState];

        (*v59)(v11, v9);
        sub_100042A1C((uint64_t)v81);
        if ((v46 & 1) == 0) {
          goto LABEL_21;
        }
LABEL_18:
        *unint64_t v61 = v41;
        uint64_t v25 = v40;
        goto LABEL_3;
      }
      (*v59)(v11, v9);
      uint64_t v38 = (uint64_t)v76;
    }
    else
    {
      v43(v8, 1, 1, v9);
      sub_10003F5D0((uint64_t)v8, &qword_1001640B8);
    }
    sub_1000620F8((uint64_t)v81, (uint64_t)v78);
    char v47 = swift_dynamicCast();
    uint64_t v48 = *v70;
    if ((v47 & 1) == 0)
    {
      v48(v38, 1, 1, v25);
      sub_100042A1C((uint64_t)v81);
      sub_10003F5D0(v38, &qword_1001641C8);
      goto LABEL_3;
    }
    v48(v38, 0, 1, v25);
    (*v58)(v69, v38, v25);
    uint64_t v49 = (void *)SettingsAnyPlatformViewControllerRecipe.viewController.getter();
    os_log_type_t v77 = &OBJC_PROTOCOL___PSStateRestoration;
    char v50 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v50)
    {
      unsigned int v51 = [v50 canBeShownFromSuspendedState];
      uint64_t v52 = v69;
      unsigned int v53 = v51;

      (*v57)(v52, v25);
      sub_100042A1C((uint64_t)v81);
      if (!v53)
      {
LABEL_21:
        uint64_t v54 = (uint64_t)v73;
        return sub_10003F5D0(v54, &qword_1001640C8);
      }
      goto LABEL_18;
    }

    (*v57)(v69, v25);
    sub_100042A1C((uint64_t)v81);
LABEL_3:
    uint64_t v29 = v39;
    os_log_type_t v22 = v73;
    uint64_t v28 = v72;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E3D74(uint64_t a1, Swift::Int a2)
{
  return swift_release();
}

uint64_t sub_1000E3EBC(uint64_t a1)
{
  return sub_10000C0C4(a1, "Calling will resign active on %{private,mask.hash}@.", (SEL *)&selRef_willResignActive);
}

uint64_t sub_1000E3ED0(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_1001640B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v48 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationPath.CollectionProxy();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_1001640D8);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v41 - v16;
  char v50 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v51 = v8 + 16;
  v50(v15, a1, v7);
  sub_1000373B4(&qword_1001640E0, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  dispatch thunk of Collection.startIndex.getter();
  *(void *)&v15[*(int *)(v12 + 44)] = *(void *)&v53[0];
  sub_100049B74((uint64_t)v15, (uint64_t)v17, &qword_1001640D8);
  uint64_t v18 = &v17[*(int *)(v12 + 44)];
  uint64_t v19 = *(void *)v18;
  dispatch thunk of Collection.endIndex.getter();
  if (v19 != v52[0])
  {
    os_log_type_t v22 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
    unsigned __int8 v46 = (void (**)(char *, uint64_t))(v48 + 8);
    char v47 = (void (**)(char *, char *, uint64_t))(v48 + 32);
    *(void *)&long long v20 = 141558275;
    long long v41 = v20;
    v48 += 56;
    uint64_t v45 = v22;
    do
    {
      uint64_t v26 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
      sub_1000620F8(v27, (uint64_t)v53);
      v26(v52, 0);
      v50(v10, (uint64_t)v17, v7);
      dispatch thunk of Collection.formIndex(after:)();
      (*v22)(v10, v7);
      sub_1000498B0(v53, (uint64_t)v52);
      sub_100046B9C((uint64_t *)&unk_1001640F0);
      char v28 = swift_dynamicCast();
      uint64_t v29 = *v23;
      if (v28)
      {
        v29(v4, 0, 1, v5);
        (*v47)(v49, v4, v5);
        uint64_t v30 = PreferencesControllerRecipe.viewControllerIfLoaded.getter();
        if (v30)
        {
          uint64_t v31 = (void *)v30;
          self;
          uint64_t v32 = (void *)swift_dynamicCastObjCClass();
          if (v32)
          {
            long long v33 = v32;
            if ([v32 shouldReloadSpecifiersOnResume])
            {
              if (qword_10015F138 != -1) {
                swift_once();
              }
              uint64_t v34 = type metadata accessor for Logger();
              sub_1000477B0(v34, (uint64_t)qword_10016AF98);
              uint64_t v43 = v31;
              uint64_t v35 = Logger.logObject.getter();
              os_log_type_t v36 = static os_log_type_t.default.getter();
              uint64_t v44 = v35;
              if (os_log_type_enabled(v35, v36))
              {
                uint64_t v37 = swift_slowAlloc();
                uint64_t v38 = (void *)swift_slowAlloc();
                char v42 = v38;
                *(_DWORD *)uint64_t v37 = v41;
                *(void *)(v37 + 4) = 1752392040;
                *(_WORD *)(v37 + 12) = 2113;
                *(void *)(v37 + 14) = v33;
                *uint64_t v38 = v33;
                _os_log_impl((void *)&_mh_execute_header, v44, v36, "Reloading specifiers on resume for %{private,mask.hash}@.", (uint8_t *)v37, 0x16u);
                sub_100046B9C((uint64_t *)&unk_100163570);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                uint64_t v40 = v43;
                uint64_t v39 = v44;
              }
              else
              {

                uint64_t v40 = v43;
                uint64_t v39 = v43;
              }

              [v33 reloadSpecifiers];
              (*v46)(v49, v5);
              os_log_type_t v22 = v45;
            }
            else
            {
              (*v46)(v49, v5);

              os_log_type_t v22 = v45;
            }
            goto LABEL_5;
          }

          os_log_type_t v22 = v45;
        }
        (*v46)(v49, v5);
      }
      else
      {
        v29(v4, 1, 1, v5);
        sub_10003F5D0((uint64_t)v4, &qword_1001640B8);
      }
LABEL_5:
      uint64_t v24 = *(void *)v18;
      dispatch thunk of Collection.endIndex.getter();
      BOOL v25 = v24 == v52[0];
      uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v48;
    }
    while (!v25);
  }
  return sub_10003F5D0((uint64_t)v17, &qword_1001640D8);
}

void sub_1000E4514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v95 = a1;
  uint64_t v96 = type metadata accessor for SettingsAppDetailContent();
  __chkstk_darwin(v96);
  unint64_t v97 = &v87[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for NavigationPath();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = &v87[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v107 = sub_100046B9C(&qword_100163680);
  __chkstk_darwin(v107);
  uint64_t v10 = &v87[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v103 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v103);
  unint64_t v104 = &v87[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  uint64_t v115 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v94 = &v87[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v113 = &v87[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  long long v20 = &v87[-v19];
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v105 = &v87[-v22];
  __chkstk_darwin(v21);
  uint64_t v93 = &v87[-v23];
  uint64_t v24 = sub_100046B9C(&qword_100163F60);
  __chkstk_darwin(v24 - 8);
  uint64_t v111 = &v87[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v109 = *(void *)(v26 - 8);
  uint64_t v110 = v26;
  __chkstk_darwin(v26);
  os_log_type_t v102 = &v87[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v101 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v28 = __chkstk_darwin(v101);
  uint64_t v91 = &v87[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = &v87[-v31];
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = &v87[-v34];
  __chkstk_darwin(v33);
  uint64_t v37 = &v87[-v36];
  if (qword_10015F148 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v39 = sub_1000477B0(v38, (uint64_t)qword_10016AFC8);
  uint64_t v112 = a2;
  sub_10003F75C(a2, (uint64_t)v37, (uint64_t *)&unk_100161530);
  uint64_t v108 = a3;
  sub_10003F75C(a3, (uint64_t)v35, (uint64_t *)&unk_100161530);
  swift_retain_n();
  uint64_t v90 = v39;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.info.getter();
  int v42 = v41;
  BOOL v43 = os_log_type_enabled(v40, v41);
  uint64_t v92 = v20;
  if (v43)
  {
    uint64_t v44 = swift_slowAlloc();
    int v88 = v42;
    uint64_t v45 = v44;
    uint64_t v89 = swift_slowAlloc();
    uint64_t v118 = v89;
    *(_DWORD *)uint64_t v45 = 136315906;
    uint64_t v46 = _typeName(_:qualified:)();
    uint64_t v106 = v10;
    uint64_t v117 = sub_100042948(v46, v47, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2080;
    uint64_t v117 = sub_100042948(0xD000000000000037, 0x800000010012A6B0, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v45 + 22) = 2082;
    sub_10003F75C((uint64_t)v37, (uint64_t)v32, (uint64_t *)&unk_100161530);
    uint64_t v48 = String.init<A>(describing:)();
    uint64_t v117 = sub_100042948(v48, v49, &v118);
    uint64_t v10 = v106;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v37, (uint64_t *)&unk_100161530);
    *(_WORD *)(v45 + 32) = 2082;
    sub_10003F75C((uint64_t)v35, (uint64_t)v32, (uint64_t *)&unk_100161530);
    uint64_t v50 = String.init<A>(describing:)();
    uint64_t v117 = sub_100042948(v50, v51, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v35, (uint64_t *)&unk_100161530);
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v88, "(%s.%s): '%{public}s' → '%{public}s'", (uint8_t *)v45, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10003F5D0((uint64_t)v37, (uint64_t *)&unk_100161530);
    sub_10003F5D0((uint64_t)v35, (uint64_t *)&unk_100161530);
  }

  uint64_t v52 = (uint64_t)v113;
  uint64_t v53 = v110;
  uint64_t v54 = v4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
  swift_beginAccess();
  uint64_t v55 = v54;
  uint64_t v56 = v111;
  sub_10003F75C(v55, (uint64_t)v111, &qword_100163F60);
  int v57 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v109 + 48))(v56, 1, v53);
  uint64_t v58 = v114;
  uint64_t v59 = v112;
  if (v57 == 1)
  {
    sub_10003F5D0((uint64_t)v56, &qword_100163F60);
    goto LABEL_14;
  }
  uint64_t v60 = v102;
  sub_10004F000((uint64_t)v56, (uint64_t)v102, type metadata accessor for SettingsURLDestination);
  unint64_t v61 = v104;
  sub_10003DFC0((uint64_t)&v60[*(int *)(v53 + 20)], (uint64_t)v104, type metadata accessor for SettingsURLDestination.Action);
  sub_10003DF60((uint64_t)v60, type metadata accessor for SettingsURLDestination);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10003DF60((uint64_t)v61, type metadata accessor for SettingsURLDestination.Action);
    goto LABEL_14;
  }
  uint64_t v62 = v93;
  sub_10004F000((uint64_t)v61, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10004F000((uint64_t)v62, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_100046B9C(&qword_10015F7F8);
    uint64_t v65 = v105;
    swift_bridgeObjectRelease();
    uint64_t v66 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
LABEL_14:
    uint64_t v67 = (uint64_t)&v10[*(int *)(v107 + 48)];
    sub_10003F75C(v59, (uint64_t)v10, (uint64_t *)&unk_100161530);
    sub_10003F75C(v108, v67, (uint64_t *)&unk_100161530);
    char v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
    if (v68(v67, 1, v58) == 1)
    {
      id v69 = &qword_100163680;
LABEL_19:
      uint64_t v74 = (uint64_t)v10;
LABEL_22:
      sub_10003F5D0(v74, v69);
      return;
    }
    if (v68((uint64_t)v10, 1, v58) != 1)
    {
      id v70 = v91;
      sub_10003F75C((uint64_t)v10, (uint64_t)v91, (uint64_t *)&unk_100161530);
      uint64_t v71 = (uint64_t)v92;
      sub_10004F000((uint64_t)v70, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      sub_10003DFC0(v67, v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      if (sub_1000460F4(v71, v52))
      {
        uint64_t v72 = v98;
        NavigationPath.init()();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(void *)&v87[-16] = v4;
        *(void *)&v87[-8] = v72;
        uint64_t v117 = v4;
        sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v72, v100);
        sub_10003DF60(v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_10003DF60(v71, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_10003DF60(v67, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        id v69 = (uint64_t *)&unk_100161530;
        goto LABEL_19;
      }
      sub_10003DF60(v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      sub_10003DF60(v71, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
    uint64_t v75 = v94;
    sub_10004F000(v67, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v76 = v98;
    NavigationPath.init()();
    uint64_t v77 = swift_getKeyPath();
    uint64_t v106 = v10;
    __chkstk_darwin(v77);
    uint64_t v78 = v4;
    *(void *)&v87[-16] = v4;
    *(void *)&v87[-8] = v76;
    uint64_t v113 = (unsigned char *)(v4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel___observationRegistrar);
    uint64_t v117 = v4;
    uint64_t v112 = sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v76, v100);
    unint64_t v79 = sub_1000C4E00(v95);
    long long v80 = v97;
    sub_10003DFC0((uint64_t)v75, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v115 + 56))(v80, 0, 1, v58);
    *(void *)&v80[*(int *)(v96 + 20)] = v79;
    uint64_t v81 = swift_getKeyPath();
    __chkstk_darwin(v81);
    *(void *)&v87[-16] = v78;
    *(void *)&v87[-8] = v80;
    uint64_t v117 = v78;
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10003DF60((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
    swift_release();
    sub_10003DF60((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    id v69 = (uint64_t *)&unk_100161530;
    uint64_t v74 = (uint64_t)v106;
    goto LABEL_22;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v64 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v64 - 8) + 8))(v105, v64);
    goto LABEL_14;
  }
  sub_10003DF60((uint64_t)v105, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_retain_n();
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = swift_slowAlloc();
    uint64_t v117 = swift_slowAlloc();
    *(_DWORD *)uint64_t v84 = 136315394;
    uint64_t v85 = _typeName(_:qualified:)();
    uint64_t v116 = sub_100042948(v85, v86, &v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 12) = 2080;
    uint64_t v116 = sub_100042948(0xD000000000000037, 0x800000010012A6B0, &v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "(%s.%s): URL in progress, trusting URL handling to set the detail content and NavigationPath.", (uint8_t *)v84, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

id sub_1000E5520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a1;
  uint64_t v4 = type metadata accessor for NavigationPath();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  __chkstk_darwin(v4);
  uint64_t v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for SettingsAppDetailContent();
  uint64_t v6 = __chkstk_darwin(v61);
  uint64_t v63 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v67 = (uint64_t)&v59 - v8;
  uint64_t v9 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_100163F60);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v60 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v70 = *(void *)(v17 - 8);
  uint64_t v71 = v17;
  __chkstk_darwin(v17);
  uint64_t v69 = (uint64_t)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v68 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v59 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v59 - v29;
  sub_10003F75C(a3, (uint64_t)v21, (uint64_t *)&unk_100161530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1) {
    return (id)sub_10003F5D0((uint64_t)v21, (uint64_t *)&unk_100161530);
  }
  sub_10004F000((uint64_t)v21, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_storeEnumTagMultiPayload();
  char v32 = sub_1000460F4((uint64_t)v30, (uint64_t)v28);
  sub_10003DF60((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  if ((v32 & 1) == 0) {
    goto LABEL_8;
  }
  id result = [self sharedConnection];
  if (result)
  {
    uint64_t v33 = result;
    unsigned int v34 = [result isPasscodeSet];

    if (v34)
    {
      uint64_t v35 = v72;
      uint64_t v36 = v72 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination;
      swift_beginAccess();
      sub_10003F75C(v36, (uint64_t)v16, &qword_100163F60);
      uint64_t v37 = v71;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v16, 1, v71) == 1)
      {
        sub_10003DF60((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        return (id)sub_10003F5D0((uint64_t)v16, &qword_100163F60);
      }
      uint64_t v40 = v69;
      sub_10004F000((uint64_t)v16, v69, type metadata accessor for SettingsURLDestination);
      sub_10003DFC0(v40 + *(int *)(v37 + 20), (uint64_t)v11, type metadata accessor for SettingsURLDestination.Action);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v41 = (uint64_t)v11;
        uint64_t v42 = v68;
        sub_10004F000(v41, v68, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        if (sub_1000460F4(v42, (uint64_t)v30))
        {
          uint64_t v59 = v36;
          unint64_t v43 = sub_1000C4E00(v62);
          uint64_t v44 = v67;
          sub_10003DFC0((uint64_t)v30, v67, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v44, 0, 1, v22);
          uint64_t v62 = *(int *)(v61 + 20);
          *(void *)(v44 + v62) = v43;
          uint64_t v45 = v63;
          sub_10003DFC0(v44, v63, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
          uint64_t KeyPath = swift_getKeyPath();
          __chkstk_darwin(KeyPath);
          *(&v59 - 2) = v35;
          *(&v59 - 1) = v45;
          uint64_t v73 = v35;
          sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
          uint64_t v61 = v43 & 0x3FFFFFFFFFFFFFFFLL;
          swift_retain();
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          swift_release();
          sub_10003DF60(v45, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
          unint64_t v47 = v64;
          NavigationPath.init()();
          uint64_t v48 = swift_getKeyPath();
          __chkstk_darwin(v48);
          *(&v59 - 2) = v35;
          *(&v59 - 1) = (uint64_t)v47;
          uint64_t v73 = v35;
          uint64_t v49 = v44;
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v66);
          if (*(void *)(v44 + v62) >> 62 == 1)
          {
            swift_retain();
            uint64_t v50 = (char *)PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
            uint64_t v40 = v69;
            sub_1000DEB5C(v69, v50, 0);
            swift_release();
            swift_release();
          }
          else
          {
            uint64_t v40 = v69;
            if (qword_10015F148 != -1) {
              swift_once();
            }
            uint64_t v52 = type metadata accessor for Logger();
            sub_1000477B0(v52, (uint64_t)qword_10016AFC8);
            uint64_t v53 = Logger.logObject.getter();
            os_log_type_t v54 = static os_log_type_t.fault.getter();
            BOOL v55 = os_log_type_enabled(v53, v54);
            uint64_t v56 = v59;
            if (v55)
            {
              int v57 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)int v57 = 0;
              _os_log_impl((void *)&_mh_execute_header, v53, v54, "Passcode controller was unexpectedly not a preferencesController", v57, 2u);
              swift_slowDealloc();
            }

            uint64_t v58 = (uint64_t)v60;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v60, 1, 1, v71);
            swift_beginAccess();
            sub_100039904(v58, v56, &qword_100163F60);
            swift_endAccess();
            sub_1000D86AC();
            sub_10003F5D0(v58, &qword_100163F60);
            swift_release();
          }
          sub_10003DF60(v49, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
          uint64_t v51 = v68;
        }
        else
        {
          uint64_t v51 = v42;
        }
        sub_10003DF60(v51, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_10003DF60(v40, type metadata accessor for SettingsURLDestination);
        uint64_t v39 = (uint64_t)v30;
        uint64_t v38 = (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier;
      }
      else
      {
        sub_10003DF60(v40, type metadata accessor for SettingsURLDestination);
        sub_10003DF60((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v38 = type metadata accessor for SettingsURLDestination.Action;
        uint64_t v39 = (uint64_t)v11;
      }
      return (id)sub_10003DF60(v39, v38);
    }
LABEL_8:
    uint64_t v38 = (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier;
    uint64_t v39 = (uint64_t)v30;
    return (id)sub_10003DF60(v39, v38);
  }
  __break(1u);
  return result;
}

BOOL sub_1000E5F3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100046B9C(&qword_100163F60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = sub_1000477B0(v5, (uint64_t)qword_10016AFF8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v6;
    uint64_t v10 = v9;
    uint64_t v30 = swift_slowAlloc();
    v34[0] = v30;
    *(_DWORD *)uint64_t v10 = 136315907;
    uint64_t v11 = _typeName(_:qualified:)();
    uint64_t v33 = sub_100042948(v11, v12, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v33 = sub_100042948(0xD000000000000039, 0x800000010012A6F0, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2160;
    uint64_t v33 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 32) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v13 = Dictionary.description.getter();
    uint64_t v31 = v4;
    uint64_t v14 = v1;
    os_log_type_t v15 = v8;
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_100042948(v13, v17, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_type_t v18 = v15;
    uint64_t v1 = v14;
    uint64_t v4 = v31;
    _os_log_impl((void *)&_mh_execute_header, v7, v18, "Start (%s.%s), resourceDictionary: '%{private,mask.hash}s'…", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v19 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
  swift_beginAccess();
  sub_10003F75C(v19, (uint64_t)v4, &qword_100163F60);
  uint64_t v20 = type metadata accessor for SettingsURLDestination(0);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v4, 1, v20);
  sub_10003F5D0((uint64_t)v4, &qword_100163F60);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  if (v21 == 1)
  {
    if (v24)
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      os_log_type_t v26 = v23;
      uint64_t v27 = "No pending request found, should continue active URL routing.";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v22, v26, v27, v25, 2u);
      swift_slowDealloc();
    }
  }
  else if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    os_log_type_t v26 = v23;
    uint64_t v27 = "Pending request found, should stop active URL routing.";
    goto LABEL_11;
  }

  sub_1000E63BC();
  return v21 == 1;
}

void sub_1000E63BC()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315907;
    uint64_t v4 = _typeName(_:qualified:)();
    sub_100042948(v4, v5, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_100042948(0xD000000000000039, 0x800000010012A6F0, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 22) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 32) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v6 = Dictionary.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_100042948(v6, v8, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "…Complete (%s.%s), resourceDictionary: '%{private,mask.hash}s'.", (uint8_t *)v3, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_1000E6710(void *a1)
{
  uint64_t v3 = type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = &OBJC_PROTOCOL___PSController;
  uint64_t v11 = swift_dynamicCastObjCProtocolConditional();
  id v12 = a1;
  if (v11)
  {
    id v13 = v12;
    uint64_t v14 = PreferencesControllerRecipe.init(viewController:)();
    __chkstk_darwin(v14);
    *(void *)&v17[-16] = v1;
    *(void *)&v17[-8] = v10;
    uint64_t v18 = 0;
    Transaction.disablesAnimations.setter();
    swift_retain();
    withTransaction<A>(_:_:)();

    swift_release_n();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v16 = SettingsAnyPlatformViewControllerRecipe.init(_:)();
    __chkstk_darwin(v16);
    *(void *)&v17[-16] = v1;
    *(void *)&v17[-8] = v6;
    uint64_t v18 = 0;
    Transaction.disablesAnimations.setter();
    swift_retain();
    withTransaction<A>(_:_:)();
    swift_release_n();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1000E69D0(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return swift_release();
}

uint64_t sub_1000E6B4C(void *a1)
{
  return sub_1000E6710(a1);
}

uint64_t sub_1000E6B70(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_100063548(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[40 * a1 + 32];
  sub_100046B9C(&qword_1001615A8);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = *((void *)v5 + 2);
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)(v14 + 40);
    uint64_t v19 = &v5[40 * a2 + 32];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = *((void *)v5 + 2);
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      *((void *)v5 + 2) = v21;
LABEL_20:
      sub_1000620F8(a3, v14);
      return sub_10003F5D0(a3, &qword_100164120);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E6D20(unint64_t a1)
{
  return sub_10009EE88(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000E6D34(unint64_t a1)
{
  return sub_100059C00(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000E6D48(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10004D2D4(&qword_1001641E0, &qword_100160540);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100046B9C(&qword_100160540);
          id v12 = sub_1000A30E4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10002E1D8(0, (unint64_t *)&qword_1001641D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E6F7C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10004D2D4(&qword_100164138, (uint64_t *)&unk_100164128);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100046B9C((uint64_t *)&unk_100164128);
          id v12 = sub_1000A3150(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10002E1D8(0, (unint64_t *)&unk_1001615D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E71B0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_10009EE88(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for URLQueryItem() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *os_log_type_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1000E7398(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *((void *)*v4 + 2);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v9 > *((void *)v7 + 3) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v13 = v8 + v6;
      }
      else {
        int64_t v13 = v8;
      }
      uint64_t result = sub_100027268(result, v13, 1, v7);
      uint64_t v7 = result;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *((void *)v7 + 2);
  if ((*((void *)v7 + 3) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  unint64_t v15 = (unint64_t)&v7[16 * v14 + 32];
  unint64_t v16 = a2 + 16 * a3;
  if (v16 < v15 + 16 * v6 && v15 < v16 + 16 * v6) {
    goto LABEL_27;
  }
  uint64_t result = (char *)swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_22:
    *unint64_t v4 = v7;
    return result;
  }
  uint64_t v18 = *((void *)v7 + 2);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *((void *)v7 + 2) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E7544()
{
  return sub_1000DB000(v0);
}

uint64_t sub_1000E754C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E7584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100163F60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E75EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D837C(a1, &OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass, (uint64_t)&unk_100163F70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003F75C, a2);
}

uint64_t sub_1000E7634@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D837C(a1, &OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent, (uint64_t)type metadata accessor for SettingsAppDetailContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10003DFC0, a2);
}

uint64_t sub_1000E7688()
{
  return sub_1000D85B4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1000E76AC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__shouldDismissSearch) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000E76C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsAppDetailContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E7728()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E7760()
{
  uint64_t v1 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 20);
  type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for PrimarySettingsListItemIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v8 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
          break;
        case 2u:
          uint64_t v9 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_7;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_7;
        default:
          goto LABEL_8;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      v6(v7, v5);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000E7A00()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsURLDestination(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1000E22CC(v2);
}

uint64_t sub_1000E7A94()
{
  return sub_1000D78A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000E7AB0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsAppDetailContent() - 8);
  uint64_t v25 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v25 + 25) & ~v25;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v24 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v2 + v3 + v24) & ~v24;
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = *(void *)(v8 + 64);
  swift_release();
  uint64_t v10 = v0 + v2;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v11 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        break;
      case 2u:
        uint64_t v12 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
        sub_100046B9C(&qword_10015F7F8);
        goto LABEL_5;
      case 3u:
      case 4u:
      case 5u:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  uint64_t v13 = (v5 + v6 + v9) & ~v9;
  swift_release();
  uint64_t v14 = v0 + v5;
  uint64_t v15 = type metadata accessor for URL();
  unint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  uint64_t v17 = v14 + *(int *)(v4 + 20);
  type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v18 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          break;
        case 2u:
          uint64_t v19 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_12;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_12;
        default:
          goto LABEL_13;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      v16(v17, v15);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v20 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v0 + v13, v20);
      break;
    case 2u:
      uint64_t v21 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v0 + v13, v21);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_16;
    case 3u:
    case 4u:
    case 5u:
LABEL_16:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v13 + v23, v25 | v24 | v9 | 7);
}

void sub_1000E8020()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsAppDetailContent() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for SettingsURLDestination(0) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v8 = *(void *)(v0 + 16);
  int v9 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v10 = v0 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  sub_1000DB92C(v8, v9, v0 + v2, v0 + v5, v10);
}

uint64_t sub_1000E8158()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsAppDetailContent() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v19 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_release();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
        break;
      case 2u:
        uint64_t v11 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
        sub_100046B9C(&qword_10015F7F8);
        goto LABEL_5;
      case 3u:
      case 4u:
      case 5u:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  swift_release();
  uint64_t v20 = v7;
  uint64_t v12 = v0 + v7;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  uint64_t v15 = v12 + *(int *)(v5 + 20);
  type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v16 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
          break;
        case 2u:
          uint64_t v17 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_12;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_12;
        default:
          goto LABEL_13;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      v14(v15, v13);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v19 + v20 + 1, v2 | v6 | 7);
}

void sub_1000E85A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsAppDetailContent() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for SettingsURLDestination(0) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  int v7 = *(unsigned __int8 *)(v0 + v5 + *(void *)(v4 + 64));

  sub_1000E02D4(v6, v0 + v2, v0 + v5, v7);
}

uint64_t sub_1000E8694()
{
  return sub_1000E1ED4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000E86B0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E86E8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000E8720(uint64_t a1)
{
  return sub_1000DD6A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_1000E872C()
{
  uint64_t v1 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 20);
  type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for PrimarySettingsListItemIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v8 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
          break;
        case 2u:
          uint64_t v9 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_7;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_7;
        default:
          goto LABEL_8;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      v6(v7, v5);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000E89E4()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsURLDestination(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000DE74C(v4, v0 + v2, v5, v6);
}

uint64_t sub_1000E8A80()
{
  return sub_1000E005C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000E8A9C()
{
  uint64_t v1 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 20);
  type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for PrimarySettingsListItemIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v8 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
          break;
        case 2u:
          uint64_t v9 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_7;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_7;
        default:
          goto LABEL_8;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      v6(v7, v5);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000E8D54(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SettingsURLDestination(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10007B630;
  return sub_1000E08A4(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_1000E8E88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000E8ED0(uint64_t a1)
{
  return sub_1000E2CAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000E8EE0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000E8F38()
{
  return sub_1000DA20C();
}

uint64_t sub_1000E8F40()
{
  return sub_1000E69D0(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(void))&type metadata accessor for SettingsAnyPlatformViewControllerRecipe, &qword_100164198, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerRecipe);
}

uint64_t sub_1000E8FA0()
{
  return sub_1000E69D0(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(void))&type metadata accessor for PreferencesControllerRecipe, (unint64_t *)&qword_100164190, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerRecipe);
}

void sub_1000E9000(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v8 = qword_10015F148;
    uint64_t v9 = a2;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = sub_1000477B0(v10, (uint64_t)qword_10016AFC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      v33[1] = v11;
      uint64_t v15 = v14;
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      uint64_t v35 = 1752392040;
      aBlock[0] = v16;
      os_log_t v34 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2081;
      v33[0] = a1;
      sub_1000373B4((unint64_t *)&qword_1001641B0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v35 = sub_100042948(v17, v18, aBlock);
      uint64_t v9 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received Finish Setup Redirect with url: %{private,mask.hash}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    id v23 = [objc_allocWithZone((Class)BFFFinishSetupViewController) init];
    URL._bridgeToObjectiveC()(v24);
    os_log_type_t v26 = v25;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v9;
    aBlock[4] = (uint64_t)sub_1000E9528;
    void aBlock[5] = v27;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002CC68;
    aBlock[3] = (uint64_t)&unk_1001557B8;
    uint64_t v28 = _Block_copy(aBlock);
    uint64_t v29 = v9;
    swift_release();
    [v23 processURL:v26 completion:v28];
    _Block_release(v28);

    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Presenting Finish Setup Modal.", v32, 2u);
      swift_slowDealloc();
    }

    [v29 presentViewController:v23 animated:1 completion:0];
  }
  else
  {
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1000477B0(v19, (uint64_t)qword_10016AFC8);
    os_log_t v34 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v34, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v20, "No hostingController available for finish setup presentation.", v21, 2u);
      swift_slowDealloc();
    }
    os_log_t v22 = v34;
  }
}

id sub_1000E9528()
{
  return sub_1000DAF00(*(void **)(v0 + 16));
}

uint64_t sub_1000E9538(char *a1)
{
  return sub_1000E348C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000E9540()
{
  return sub_1000E3D74(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000E9590()
{
  return sub_1000E7688();
}

uint64_t sub_1000E95A8()
{
  return sub_1000E7A94();
}

void sub_1000E95C0()
{
}

unsigned char *storeEnumTagSinglePayload for SettingsAppPresentableItemIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E96A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void sub_1000E96D0(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1000E96DC()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000024;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0x7055776F6C6C6F66;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000E97C4()
{
  unint64_t result = qword_1001641F0;
  if (!qword_1001641F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001641F0);
  }
  return result;
}

unint64_t sub_1000E981C()
{
  unint64_t result = qword_1001641F8;
  if (!qword_1001641F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001641F8);
  }
  return result;
}

uint64_t sub_1000E9870(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 7;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x800000010012A100
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100124620)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v5) {
    return 1;
  }
  else {
    return 7;
  }
}

uint64_t *sub_1000E9968(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    sub_100046B9C(&qword_10015F598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for WithCurrentHostingControllerAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *(void *)v15;
    LOBYTE(v15) = v15[8];
    *(void *)uint64_t v14 = v16;
    v14[8] = (char)v15;
    uint64_t v17 = (char *)a1 + v13;
    unint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *(void *)v18;
    LOBYTE(v18) = v18[8];
    *(void *)uint64_t v17 = v19;
    v17[8] = (char)v18;
    uint64_t v20 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v21 = (char *)a1 + v20;
    os_log_t v22 = (char *)a2 + v20;
    swift_retain();
    swift_retain();
    uint64_t v23 = sub_100046B9C(&qword_100164200);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

void *sub_1000E9B2C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10003F5D0((uint64_t)a1 + v6, &qword_10015F598);
    sub_100046B9C(&qword_10015F598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for WithCurrentHostingControllerAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  swift_retain();
  swift_release();
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_100046B9C(&qword_100164200);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

void *sub_1000E9CF0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_10003F5D0((uint64_t)a1 + v6, &qword_10015F598);
    uint64_t v9 = sub_100046B9C(&qword_10015F598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for WithCurrentHostingControllerAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_release();
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  LOBYTE(v17) = v17[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = (char)v17;
  swift_release();
  uint64_t v19 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_100046B9C(&qword_100164200);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_1000E9EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E9EB4);
}

uint64_t sub_1000E9EB4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100046B9C(&qword_100164208);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100046B9C(&qword_100164200);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000E9FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E9FFC);
}

void *sub_1000E9FFC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100046B9C(&qword_100164208);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100046B9C(&qword_100164200);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 40);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1000EA130@<X0>(char a1@<W3>, void (*a2)(uint64_t)@<X4>, uint64_t *a3@<X6>, uint64_t a4@<X8>)
{
  sub_100046B9C(&qword_100164508);
  uint64_t v8 = Binding.wrappedValue.getter();
  if (v12 == 7 || v12 != a1)
  {
    uint64_t v11 = sub_100046B9C(a3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 1, 1, v11);
  }
  else
  {
    a2(v8);
    uint64_t v9 = sub_100046B9C(a3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a4, 0, 1, v9);
  }
}

uint64_t sub_1000EA234(uint64_t a1, uint64_t a2, char a3, char a4, void (*a5)(uint64_t))
{
  uint64_t v18 = a5;
  uint64_t v9 = sub_100046B9C(&qword_1001644D0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_100164510);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  char v22 = a3;
  sub_100046B9C(&qword_100164508);
  uint64_t v15 = Binding.wrappedValue.getter();
  if (v19 == 7 || v19 != a4)
  {
    *uint64_t v14 = static Color.red.getter();
    swift_storeEnumTagMultiPayload();
    sub_1000087D8();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v18(v15);
    sub_10003F75C((uint64_t)v11, (uint64_t)v14, &qword_1001644D0);
    swift_storeEnumTagMultiPayload();
    sub_1000087D8();
    _ConditionalContent<>.init(storage:)();
    return sub_10003F5D0((uint64_t)v11, &qword_1001644D0);
  }
}

uint64_t sub_1000EA420@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase;
  swift_beginAccess();
  return sub_10003F75C(v4, a2, (uint64_t *)&unk_1001641A0);
}

uint64_t sub_1000EA4F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_1001641A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003F75C(a1, (uint64_t)v6, (uint64_t *)&unk_1001641A0);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_1001641A0);
}

uint64_t sub_1000EA634(void *a1)
{
  sub_1000403E0(a1, a1[3]);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    NavigationPath.append<A>(_:)();
    swift_endAccess();
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EA7BC()
{
  uint64_t v0 = type metadata accessor for NavigationPath();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    NavigationPath.init()();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v7[-2] = v5;
    v7[-1] = v3;
    v7[2] = v5;
    sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EA984()
{
  return swift_release();
}

uint64_t sub_1000EA9E0(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163F70);
  __chkstk_darwin(v2 - 8);
  sub_10003F75C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100163F70);
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_1000EAA74(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163F70);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  uint64_t v5 = v10;
  sub_10003F75C(a1, (uint64_t)v4, (uint64_t *)&unk_100163F70);
  swift_getKeyPath();
  uint64_t v8 = v5;
  uint64_t v9 = v4;
  uint64_t v10 = v5;
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10003F5D0((uint64_t)v4, (uint64_t *)&unk_100163F70);
  return swift_release();
}

uint64_t sub_1000EABE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.scenePhase.setter();
}

uint64_t sub_1000EACA8(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_1001641A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  uint64_t v5 = v12;
  uint64_t v6 = type metadata accessor for ScenePhase();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  swift_getKeyPath();
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10003F5D0((uint64_t)v4, (uint64_t *)&unk_1001641A0);
  return swift_release();
}

void sub_1000EAE7C(char *a1)
{
  char v1 = *a1;
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  uint64_t v2 = (id *)&sub_100036FFC()[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation];
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *v2;
    swift_release();
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(unsigned char *)(v5 + 24) = v1;
    aBlock[4] = sub_1000F0D30;
    void aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100155D20;
    uint64_t v6 = _Block_copy(aBlock);
    swift_release();
    [v3 dismissViewControllerAnimated:1 completion:v6];
    _Block_release(v6);
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_1000EB010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WithCurrentHostingControllerAction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingsNavigationSplitView();
  sub_10000829C(&qword_10015F598, (uint64_t (*)(void))&type metadata accessor for WithCurrentHostingControllerAction, 0xD000000000000022, 0x800000010012A9A0, (uint64_t)v7);
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  WithCurrentHostingControllerAction.callAsFunction(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000EB14C(void *a1, uint64_t a2, uint64_t a3)
{
  return swift_release();
}

void sub_1000EB1C0(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  if (*a2 == 1)
  {
    uint64_t v4 = type metadata accessor for SettingsNavigationSplitView();
    sub_100046B9C(&qword_100164200);
    Bindable.wrappedValue.getter();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    char v6 = *(unsigned char *)(a3 + *(int *)(v4 + 32) + 8);
    uint64_t v7 = swift_retain();
    sub_1000EFB80(v7, v6, 0xD00000000000001ALL, 0x800000010012AA60);
    swift_release();
    uint64_t v8 = swift_getKeyPath();
    __chkstk_darwin(v8);
    sub_1000373FC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1000EB40C(void *a1, uint64_t a2)
{
  id v3 = [a1 userInfo];
  if (!v3)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    return sub_10003F5D0((uint64_t)&v19, &qword_1001609A0);
  }
  uint64_t v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1000619E0((uint64_t)&v17), (v7 & 1) != 0))
  {
    sub_100061984(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_100061AEC((uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1)) {
    return sub_10003F5D0((uint64_t)&v19, &qword_1001609A0);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    uint64_t v11 = type metadata accessor for SettingsNavigationSplitView();
    sub_100046B9C(&qword_100164200);
    Bindable.wrappedValue.getter();
    sub_1000D44DC();
    swift_release();
    uint64_t v12 = a2 + *(int *)(v11 + 32);
    LOBYTE(v11) = *(unsigned char *)(v12 + 8);
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_1000EFB80(v13, v11, 0xD00000000000001ALL, 0x800000010012AA60);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v17 = v14;
    sub_1000373FC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    LOBYTE(v11) = *(unsigned char *)(v12 + 8);
    uint64_t v16 = swift_retain();
    sub_1000EFB80(v16, v11, 0xD00000000000001ALL, 0x800000010012AA60);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000EB704(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  sub_1000D44DC();
  swift_release();
  char v5 = *(unsigned char *)(a2 + *(int *)(v4 + 32) + 8);
  uint64_t v6 = swift_retain();
  sub_1000EFB80(v6, v5, 0xD00000000000001ALL, 0x800000010012AA60);
  swift_release();
  sub_10009DBF4(a1);
  return swift_release();
}

uint64_t sub_1000EB7C4(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v36 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v30 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PPTTestCase();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v35 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v31 = (char *)&v28 - v15;
  sub_100055498();
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v14, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v33, v6);
  uint64_t v17 = v29;
  sub_100034C08(v34, v29, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v19 = (v8 + *(unsigned __int8 *)(v30 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v18, v9, v6);
  sub_100035134(v17, v20 + v19, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  aBlock[4] = sub_1000F0BD4;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100155CD0;
  uint64_t v21 = _Block_copy(aBlock);
  char v22 = v36;
  static DispatchQoS.unspecified.getter();
  uint64_t v42 = _swiftEmptyArrayStorage;
  sub_1000373FC((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  uint64_t v24 = v37;
  uint64_t v23 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  os_log_type_t v26 = v31;
  uint64_t v25 = (void *)v32;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v40);
  v16(v26, v35);
  return swift_release();
}

uint64_t sub_1000EBD18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WithCurrentHostingControllerAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingsNavigationSplitView();
  sub_10000829C(&qword_10015F598, (uint64_t (*)(void))&type metadata accessor for WithCurrentHostingControllerAction, 0xD000000000000022, 0x800000010012A9A0, (uint64_t)v5);
  uint64_t v8 = a1;
  WithCurrentHostingControllerAction.callAsFunction(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1000EBE50(void *a1)
{
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  uint64_t v2 = sub_100036FFC();
  swift_release();
  uint64_t v3 = (void **)&v2[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation];
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  id v5 = a1;
  swift_release();
}

uint64_t sub_1000EBEF8()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_1000EBFDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_100046B9C(&qword_1001604B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100034C08(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_100035134((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  Button.init(action:label:)();
  sub_1000BCF0C();
  sub_10004D2D4(&qword_1001604B8, &qword_1001604B0);
  View.navigationBarItems<A>(trailing:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000EC224()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_1000EC370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v39 = a2;
  uint64_t v2 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v34 = *(void *)(v35 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C(&qword_1001604B0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  uint64_t v38 = v5;
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_100164550);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100046B9C(&qword_100164548);
  uint64_t v32 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v7);
  unint64_t v17 = sub_1000BD238();
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v18 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v20 = v19;
  LOBYTE(v8) = v21 & 1;
  uint64_t v40 = &type metadata for AboutSupervisedDeviceRepresentable;
  unint64_t v41 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.navigationBarTitle(_:)();
  sub_100037590(v18, v20, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v23 = v31;
  sub_100034C08(v36, v31, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  unint64_t v24 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v25 = swift_allocObject();
  sub_100035134(v23, v25 + v24, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  os_log_type_t v26 = v33;
  Button.init(action:label:)();
  uint64_t v40 = (ValueMetadata *)v11;
  unint64_t v41 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_10004D2D4(&qword_1001604B8, &qword_1001604B0);
  uint64_t v27 = v30;
  uint64_t v28 = v37;
  View.navigationBarItems<A>(trailing:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v27);
}

uint64_t sub_1000EC8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v44 = type metadata accessor for AppleAccountSignInSheet(0);
  uint64_t v2 = __chkstk_darwin(v44);
  uint64_t v36 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v38 = (uint64_t)&v34 - v4;
  uint64_t v5 = sub_100046B9C(&qword_100163690);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v34 + 64);
  uint64_t v11 = __chkstk_darwin(v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v37 = (uint64_t)&v34 - v12;
  uint64_t v39 = sub_100046B9C(&qword_100164528);
  __chkstk_darwin(v39);
  uint64_t v40 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for AppleIDSignInView();
  uint64_t v14 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AppleIDSetupFeature();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for AppleIDSetupFeature.personalizedChildSetupSpyglass(_:), v17);
  char v21 = AppleIDSetupFeature.isFeatureEnabled.getter();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    [objc_allocWithZone((Class)type metadata accessor for AISAppleIDSignInConfiguration()) init];
    swift_retain_n();
    AppleIDSignInView.init(configuration:onSkip:completion:)();
    uint64_t v22 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v40, v16, v41);
    swift_storeEnumTagMultiPayload();
    sub_1000373FC(&qword_1001644B0, (void (*)(uint64_t))&type metadata accessor for AppleIDSignInView);
    sub_1000373FC(&qword_100162CF8, (void (*)(uint64_t))type metadata accessor for AppleAccountSignInSheet);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v22);
  }
  else
  {
    uint64_t v24 = v42;
    uint64_t v25 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v25, v5);
    Bindable.wrappedValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v26 = v37;
    sub_1000D2A18(v37);
    swift_release();
    uint64_t v27 = v35;
    sub_100034C08(v26, v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    unint64_t v28 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    sub_100035134(v27, v29 + v28, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v31 = (uint64_t)v36;
    uint64_t *v36 = KeyPath;
    sub_100046B9C((uint64_t *)&unk_100162C50);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = (uint64_t (**)())(v31 + *(int *)(v44 + 20));
    *uint64_t v32 = sub_1000F00C8;
    v32[1] = (uint64_t (*)())v29;
    uint64_t v33 = v38;
    sub_100035134(v31, v38, type metadata accessor for AppleAccountSignInSheet);
    sub_100034C08(v33, v40, type metadata accessor for AppleAccountSignInSheet);
    swift_storeEnumTagMultiPayload();
    sub_1000373FC(&qword_1001644B0, (void (*)(uint64_t))&type metadata accessor for AppleIDSignInView);
    sub_1000373FC(&qword_100162CF8, (void (*)(uint64_t))type metadata accessor for AppleAccountSignInSheet);
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    sub_100067DFC(v33, type metadata accessor for AppleAccountSignInSheet);
    return sub_100067DFC(v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }
}

uint64_t sub_1000ECFB8(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100046B9C(&qword_100163690);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000C9150(a2);
  return swift_release();
}

uint64_t sub_1000ED0D4(void *a1, int a2, uint64_t a3)
{
  LODWORD(v44) = a2;
  uint64_t v43 = a1;
  uint64_t v4 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v4 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_100163690);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v39 + 64);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  uint64_t v40 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v41 = a3;
  uint64_t v15 = swift_projectBox();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, v15, v6);
  Bindable.wrappedValue.getter();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  uint64_t v45 = v14;
  sub_1000D2A18((uint64_t)v14);
  swift_release();
  if (v44) {
    goto LABEL_15;
  }
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  uint64_t v44 = v17;
  v43;
  if (*(void *)(AISAppleIDSignInResult.authResults.getter() + 16))
  {
    sub_10009F1DC(0x495344746C414B41, 0xE900000000000044);
    char v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t)v45;
    if (v19) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t)v45;
  }
  if (*(void *)(AISAppleIDSignInResult.authResults.getter() + 16))
  {
    sub_10009F1DC(0x444953444B41, 0xE600000000000000);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;
  if (!*(void *)(AISAppleIDSignInResult.authResults.getter() + 16) || (sub_10009F1DC(v23, v25), (v26 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000F0158(v43, 0);
    uint64_t v17 = v44;
    uint64_t v15 = v37;
    uint64_t v16 = v38;
LABEL_15:
    v16(v9, v15, v6);
    Bindable.wrappedValue.getter();
    v17(v9, v6);
    uint64_t v35 = (uint64_t)v45;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v27 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v42, 1, 1, v27);
  uint64_t v28 = v20;
  uint64_t v29 = v40;
  sub_100034C08(v28, v40, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  type metadata accessor for MainActor();
  uint64_t v30 = v41;
  swift_retain();
  uint64_t v31 = static MainActor.shared.getter();
  unint64_t v32 = (*(unsigned __int8 *)(v39 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v33 = (void *)swift_allocObject();
  void v33[2] = v31;
  uint64_t v33[3] = &protocol witness table for MainActor;
  v33[4] = v30;
  uint64_t v34 = v29;
  uint64_t v35 = (uint64_t)v45;
  sub_100035134(v34, (uint64_t)v33 + v32, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_1000C9558(v42, (uint64_t)&unk_100164538, (uint64_t)v33);
  sub_1000F0158(v43, 0);
  swift_release();
  v38(v9, v37, v6);
  Bindable.wrappedValue.getter();
  v44(v9, v6);
LABEL_16:
  sub_1000C9150(7);
  swift_release();
  return sub_100067DFC(v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000ED5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[3] = a4;
  v5[4] = a5;
  sub_100046B9C((uint64_t *)&unk_100161530);
  v5[5] = swift_task_alloc();
  uint64_t v6 = sub_100046B9C(&qword_100163690);
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000ED708, v8, v7);
}

uint64_t sub_1000ED708()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  swift_release();
  uint64_t v6 = swift_projectBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v6, v2);
  Bindable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_100034C08(v5, v4, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
  sub_1000C98F4(v4);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000ED864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_100163690);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100034C08(a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemIdentifier();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
  sub_1000C98F4((uint64_t)v5);
  return swift_release();
}

uint64_t sub_1000EDA28()
{
  uint64_t v0 = sub_100046B9C(&qword_100163690);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_projectBox();
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v5(v3, v4, v0);
  Bindable.wrappedValue.getter();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  uint64_t v7 = *(void **)(v10 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController);
  if (v7)
  {
    *(void *)(v10 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController) = 0;
    swift_release();
  }
  else
  {
    swift_release();
  }
  v5(v3, v4, v0);
  Bindable.wrappedValue.getter();
  v6(v3, v0);
  sub_1000C9150(7);
  return swift_release();
}

uint64_t sub_1000EDBAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v41 = type metadata accessor for SettingsAnyPlatformViewControllerView();
  uint64_t v37 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v36 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100046B9C(&qword_100164518);
  uint64_t v39 = *(void *)(v42 - 8);
  uint64_t v2 = __chkstk_darwin(v42);
  uint64_t v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v38 = (char *)&v34 - v4;
  uint64_t v40 = sub_100046B9C(&qword_100164520);
  __chkstk_darwin(v40);
  uint64_t v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100046B9C(&qword_100163690);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_1001641C8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  char v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v21, v7);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  char v22 = *(void **)(v44 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController);
  id v23 = v22;
  swift_release();
  if (v22)
  {
    id v24 = v23;
    SettingsAnyPlatformViewControllerRecipe.init(_:)();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      uint64_t v25 = v36;
      SettingsAnyPlatformViewControllerView.init(platformViewControllerRecipe:)();
      uint64_t v44 = static Color.clear.getter();
      uint64_t v26 = sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
      uint64_t v27 = v35;
      uint64_t v28 = v41;
      View.presentationBackground<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v28);
      uint64_t v30 = v38;
      uint64_t v29 = v39;
      uint64_t v31 = v42;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v27, v42);
      (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 16))(v6, v30, v31);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v28;
      uint64_t v45 = &type metadata for Color;
      uint64_t v46 = v26;
      unint64_t v47 = &protocol witness table for Color;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  sub_10003F5D0((uint64_t)v13, &qword_1001641C8);
  *uint64_t v6 = static Color.blue.getter();
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
  uint64_t v44 = v41;
  uint64_t v45 = &type metadata for Color;
  uint64_t v46 = v33;
  unint64_t v47 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1000EE238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SettingsApplicationDebugRoot();
  uint64_t v12 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = [self currentDevice];
  unsigned int v6 = [v5 sf_isInternalInstall];

  if (v6)
  {
    *uint64_t v4 = swift_getKeyPath();
    sub_100046B9C((uint64_t *)&unk_100162C50);
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = (char *)v4 + *(int *)(v2 + 20);
    type metadata accessor for SettingsAppModel();
    sub_1000373FC(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
    *(void *)uint64_t v7 = Environment.init<A>(_:)();
    v7[8] = v8 & 1;
    sub_100035134((uint64_t)v4, a1, (uint64_t (*)(void))type metadata accessor for SettingsApplicationDebugRoot);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v2);
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    return v10(a1, 1, 1, v2);
  }
}

uint64_t sub_1000EE440()
{
  return Button.init(action:label:)();
}

uint64_t sub_1000EE484@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EF614(a1);
}

uint64_t sub_1000EE49C@<X0>(uint64_t *a1@<X8>)
{
  if (qword_10015F078 != -1) {
    swift_once();
  }
  if ([(id)qword_10016AE38 airplaneMode])
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t result = Text.init(_:tableName:bundle:comment:)();
    uint64_t v6 = v5 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v3 = 0;
    uint64_t v6 = 0;
    uint64_t v4 = 0;
  }
  *a1 = result;
  a1[1] = v3;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

void sub_1000EE574(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a2;
  uint64_t v3 = type metadata accessor for PPTTestCase.Name();
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  __chkstk_darwin(v3);
  uint64_t v75 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v78 = *(uint8_t **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v72 = (uint64_t)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v73 = (char *)v67 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v67 - v13;
  uint64_t v15 = type metadata accessor for PPTTestCase();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  char v22 = (char *)v67 - v21;
  __chkstk_darwin(v20);
  id v24 = (char *)v67 - v23;
  uint64_t v25 = PPTTestCase.parameters.getter();
  uint64_t v79 = 5001813;
  unint64_t v80 = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v25 + 16) && (unint64_t v26 = sub_1000619E0((uint64_t)v81), (v27 & 1) != 0))
  {
    sub_100061984(*(void *)(v25 + 56) + 32 * v26, (uint64_t)&v82);
  }
  else
  {
    long long v82 = 0u;
    long long v83 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100061AEC((uint64_t)v81);
  if (*((void *)&v83 + 1))
  {
    if (swift_dynamicCast())
    {
      URL.init(string:)();
      swift_bridgeObjectRelease();
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v78 + 6))(v7, 1, v8) == 1)
      {
        sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_100163C10);
        if (qword_10015F178 != -1) {
          swift_once();
        }
        uint64_t v28 = type metadata accessor for Logger();
        sub_1000477B0(v28, (uint64_t)qword_10016B058);
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v22, a1, v15);
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          v81[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = 136446210;
          uint64_t v78 = v31 + 4;
          uint64_t v71 = v15;
          uint64_t v32 = v16;
          uint64_t v33 = v75;
          PPTTestCase.name.getter();
          uint64_t v34 = PPTTestCase.Name.rawValue.getter();
          unint64_t v36 = v35;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v33, v77);
          *(void *)&long long v82 = sub_100042948(v34, v36, v81);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v71);
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Cannot run Scroll PPT Test '%{public}s': no url found", v31, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
        }

        return;
      }
      (*((void (**)(char *, char *, uint64_t))v78 + 4))(v14, v7, v8);
      if (qword_10015F178 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_1000477B0(v45, (uint64_t)qword_10016B058);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, v15);
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        os_log_t v70 = v46;
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        v81[0] = v69;
        uint64_t v68 = v48;
        *(_DWORD *)uint64_t v48 = 136446210;
        v67[1] = v48 + 4;
        uint64_t v71 = v15;
        uint64_t v49 = v16;
        uint64_t v50 = v75;
        PPTTestCase.name.getter();
        uint64_t v51 = PPTTestCase.Name.rawValue.getter();
        unint64_t v53 = v52;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v50, v77);
        *(void *)&long long v82 = sub_100042948(v51, v53, v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v71);
        uint64_t v46 = v70;
        _os_log_impl((void *)&_mh_execute_header, v70, v47, "Running Scroll PPT Test '%{public}s'", v68, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      }

      uint64_t v54 = URL.scheme.getter();
      if (v55)
      {
        if (v54 == 0x7366657270 && v55 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_31:
          char v57 = *(unsigned char *)(v74 + *(int *)(type metadata accessor for SettingsNavigationSplitView() + 28) + 8);
          uint64_t v58 = swift_retain();
          sub_1000EFB80(v58, v57, 0xD000000000000010, 0x800000010012A9D0);
          swift_release();
          uint64_t v59 = v72;
          sub_1000FF4BC(v72);
          sub_100046B9C(&qword_100161580);
          type metadata accessor for URLQueryItem();
          uint64_t v60 = swift_allocObject();
          uint64_t v61 = v78;
          *(_OWORD *)(v60 + 16) = xmmword_10011C360;
          uint64_t v62 = v75;
          PPTTestCase.name.getter();
          PPTTestCase.Name.rawValue.getter();
          (*(void (**)(char *, uint64_t))(v76 + 8))(v62, v77);
          URLQueryItem.init(name:value:)();
          swift_bridgeObjectRelease();
          uint64_t v63 = (uint64_t)v73;
          URL.appending(queryItems:)();
          swift_bridgeObjectRelease();
          uint64_t v64 = (void (*)(uint64_t, uint64_t))*((void *)v61 + 1);
          v64(v59, v8);
          sub_10006C16C(v63);
          swift_release();
          v64(v63, v8);
          v64((uint64_t)v14, v8);
          return;
        }
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v56) {
          goto LABEL_31;
        }
      }
      char v65 = *(unsigned char *)(v74 + *(int *)(type metadata accessor for SettingsNavigationSplitView() + 28) + 8);
      uint64_t v66 = swift_retain();
      sub_1000EFB80(v66, v65, 0xD000000000000010, 0x800000010012A9D0);
      swift_release();
      sub_10006C16C((uint64_t)v14);
      swift_release();
      (*((void (**)(char *, uint64_t))v78 + 1))(v14, v8);
      return;
    }
  }
  else
  {
    sub_10003F5D0((uint64_t)&v82, &qword_1001609A0);
  }
  if (qword_10015F178 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_1000477B0(v37, (uint64_t)qword_10016B058);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v24, a1, v15);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    v81[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v78 = v40 + 4;
    uint64_t v71 = v15;
    uint64_t v41 = v75;
    PPTTestCase.name.getter();
    uint64_t v42 = PPTTestCase.Name.rawValue.getter();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v41, v77);
    *(void *)&long long v82 = sub_100042948(v42, v44, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v71);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Cannot run Scroll PPT Test '%{public}s': no url string found", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
  }
}

uint64_t sub_1000EF184(uint64_t a1)
{
  return sub_1000EF208(a1, (void (*)(void))&type metadata accessor for PreferencesControllerRecipe, (uint64_t (*)(char *))&PreferencesControllerView.init(preferencesControllerRecipe:));
}

uint64_t sub_1000EF1B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SettingsAnyViewRecipe.view.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000EF1DC(uint64_t a1)
{
  return sub_1000EF208(a1, (void (*)(void))&type metadata accessor for SettingsAnyPlatformViewControllerRecipe, (uint64_t (*)(char *))&SettingsAnyPlatformViewControllerView.init(platformViewControllerRecipe:));
}

uint64_t sub_1000EF208(uint64_t a1, void (*a2)(void), uint64_t (*a3)(char *))
{
  a2(0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v9 - v5, a1);
  return a3(v6);
}

uint64_t sub_1000EF2DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_100034C08(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_100035134((uint64_t)v5, v12 + v11, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  sub_1000C9558((uint64_t)v8, (uint64_t)&unk_100164560, v12);
  return swift_release();
}

uint64_t sub_1000EF4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 32) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000EF548, v6, v5);
}

uint64_t sub_1000EF548()
{
  swift_release();
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  sub_100036FFC();
  swift_release();
  sub_1000C9150(7);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000EF5F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EF614(a1);
}

uint64_t sub_1000EF614@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000EF684()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000EF6BC(void *a1)
{
  return sub_1000EA634(a1);
}

uint64_t sub_1000EF6C4()
{
  return sub_1000EA7BC();
}

uint64_t sub_1000EF6D0()
{
  return sub_1000F0944((uint64_t (*)(uint64_t))sub_1000EA984);
}

uint64_t sub_1000EF6E8()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_1000EF714(uint64_t a1)
{
  return sub_1000EF91C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000EAA74);
}

uint64_t sub_1000EF72C()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_1000EF758(uint64_t a1)
{
  return sub_1000EF91C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000EACA8);
}

void sub_1000EF774(char *a1)
{
  type metadata accessor for SettingsNavigationSplitView();

  sub_1000EAE7C(a1);
}

uint64_t sub_1000EF7E8(uint64_t a1)
{
  return sub_1000EF91C(a1, sub_1000EB010);
}

void sub_1000EF80C(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1000EB1C0(a1, a2, v6);
}

uint64_t sub_1000EF890(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000EB40C(a1, v4);
}

uint64_t sub_1000EF904(uint64_t a1)
{
  return sub_1000EF91C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000EB704);
}

uint64_t sub_1000EF91C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1000EF9B0(uint64_t a1)
{
  return sub_1000EB7C4(a1);
}

uint64_t sub_1000EFA18()
{
  return sub_1000F0944(sub_1000EBD18);
}

uint64_t sub_1000EFA30()
{
  return sub_1000ECFB8(v0, 3);
}

uint64_t sub_1000EFA5C()
{
  return sub_1000EFDB4((uint64_t (*)(uint64_t))sub_1000EBEF8);
}

uint64_t sub_1000EFA74@<X0>(uint64_t a1@<X8>)
{
  return sub_10000829C((uint64_t *)&unk_100162C50, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_1000EFAB4(uint64_t a1, char a2)
{
  return sub_1000EFB80(a1, a2, 0xD00000000000002ALL, 0x800000010012AAC0);
}

uint64_t sub_1000EFAD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10000829C(&qword_100160E58, (uint64_t (*)(void))&type metadata accessor for Locale, 0x656C61636F4CLL, 0xE600000000000000, a1);
}

uint64_t sub_1000EFB00@<X0>(uint64_t a1@<X8>)
{
  return sub_10000829C(&qword_100160E50, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_1000EFB40@<X0>(uint64_t a1@<X8>)
{
  return sub_10000829C(&qword_100160E48, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_1000EFB80(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for EnvironmentValues();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    uint64_t v13 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v18 = a4;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v19 = sub_100042948(a3, v18, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v20;
  }
  return a1;
}

uint64_t sub_1000EFD8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EFE48(&qword_100164468, a1);
}

uint64_t sub_1000EFD9C()
{
  return sub_1000EFDB4((uint64_t (*)(uint64_t))sub_1000EC224);
}

uint64_t sub_1000EFDB4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1000EFE3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EFE48(&qword_100164488, a1);
}

uint64_t sub_1000EFE48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000EA130(*(unsigned char *)(v2 + 33), *(void (**)(uint64_t))(v2 + 40), a1, a2);
}

uint64_t sub_1000EFE74@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EC8CC(v1, a1);
}

uint64_t sub_1000EFE80@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EFE48(&qword_1001644A8, a1);
}

uint64_t sub_1000EFE8C()
{
  return sub_1000EDA28();
}

uint64_t sub_1000EFE94@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EDBAC(a1);
}

uint64_t sub_1000EFEA0()
{
  return sub_1000EA234(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned char *)(v0 + 33), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1000EFEB8()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000EFF00@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EFE48(&qword_1001644F8, a1);
}

uint64_t sub_1000EFF0C()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_1000EFF30()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000F00C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1000ED864(v2, v3);
}

uint64_t sub_1000F012C()
{
  return sub_1000ECFB8(v0, 7);
}

uint64_t sub_1000F014C(void *a1, char a2)
{
  return sub_1000ED0D4(a1, a2 & 1, v2);
}

void sub_1000F0158(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_1000F0164()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000F0304(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000ADF0;
  return sub_1000ED5E0(a1, v5, v6, v7, v8);
}

uint64_t sub_1000F0400@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EC370(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000F040C()
{
  return sub_1000F0944(sub_1000EF2DC);
}

uint64_t sub_1000F0424()
{
  uint64_t v1 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_100046B9C(&qword_10015F598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for WithCurrentHostingControllerAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 40);
  uint64_t v8 = sub_100046B9C(&qword_100164200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000F05BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10007B630;
  return sub_1000EF4B0(a1, v5, v6, v7);
}

uint64_t sub_1000F06B0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 50, 7);
}

uint64_t sub_1000F06F8()
{
  return sub_1000F070C();
}

uint64_t sub_1000F070C()
{
  return swift_release();
}

uint64_t sub_1000F07A8()
{
  return sub_1000EBFDC(*(void *)(v0 + 16));
}

uint64_t sub_1000F07B4()
{
  uint64_t v1 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_100046B9C(&qword_10015F598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for WithCurrentHostingControllerAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 40);
  uint64_t v8 = sub_100046B9C(&qword_100164200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000F0944(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

void sub_1000F09B8(void *a1)
{
}

uint64_t sub_1000F09C0()
{
  uint64_t v1 = type metadata accessor for PPTTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  uint64_t v10 = v0 + v8 + *(int *)(v6 + 24);
  sub_100046B9C(&qword_10015F598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for WithCurrentHostingControllerAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v12 = v0 + v8 + *(int *)(v6 + 40);
  uint64_t v13 = sub_100046B9C(&qword_100164200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return _swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

void sub_1000F0BD4()
{
  uint64_t v1 = *(void *)(type metadata accessor for PPTTestCase() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for SettingsNavigationSplitView() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_1000EE574(v0 + v2, v5);
}

uint64_t sub_1000F0CA8()
{
  return sub_1000974F0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000F0CD0()
{
  return sub_1000D8F48(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000F0CF0(void *a1)
{
  return sub_1000EB14C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000F0CF8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000F0D30()
{
  return sub_1000DA880(*(void *)(v0 + 16), (void (*)(char *, void, uint64_t, uint64_t))*(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1000F0D5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isSearching.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000F0D8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F1134()
{
  return sub_1000F0CA8();
}

uint64_t sub_1000F114C()
{
  return sub_100008B48();
}

id sub_1000F1164()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_defaultsObserver;
  swift_beginAccess();
  sub_1000A7B38(v1, (uint64_t)&v4);
  if (v5)
  {
    sub_100025390(&v4, &v6);
    sub_1000403E0(&v6, *((uint64_t *)&v7 + 1));
    [v0 na_removeNotificationBlockObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();
    sub_100042A1C((uint64_t)&v6);
  }
  else
  {
    sub_100064640((uint64_t)&v4);
  }
  long long v6 = 0u;
  long long v7 = 0u;
  swift_beginAccess();
  sub_10006292C((uint64_t)&v6, v1);
  swift_endAccess();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DefaultsObservingPrimarySettingsListItemProvider();
  [super dealloc];
}

uint64_t sub_1000F1310()
{
  return type metadata accessor for DefaultsObservingPrimarySettingsListItemProvider();
}

void sub_1000F1318()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000F1418();
  }
}

uint64_t sub_1000F136C(uint64_t a1, uint64_t a2)
{
  objc_super v3 = *(void (**)(void *, uint64_t))(a1 + 32);
  v6[3] = swift_getObjectType();
  v6[0] = a2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  swift_unknownObjectRetain();
  v3(v6, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100042A1C((uint64_t)v6);
}

uint64_t sub_1000F1418()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  long long v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000F1B50;
  void aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100155DA0;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v10[1] = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, void))(v4 + 8))(v6, v10[0]);
  swift_release();
  return swift_release();
}

uint64_t sub_1000F16C8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (unsigned char *)result;
    uint64_t v10 = *(void **)(result
                   + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_userDefaults);
    uint64_t v18 = v4;
    id v11 = v10;
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = [v11 BOOLForKey:v12];

    LOBYTE(v11) = v13 ^ v9[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_shownWhen];
    sub_100055498();
    os_log_type_t v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(unsigned char *)(v16 + 24) = (v11 & 1) == 0;
    aBlock[4] = sub_1000F1B90;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100155DF0;
    uint64_t v17 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10002F6A0();
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10002F644();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  }
  return result;
}

void sub_1000F1A14(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (unsigned char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_shouldShow;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_shouldShow) != (a2 & 1))
    {
      sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_invalidator), *(void *)(Strong+ OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_invalidator+ 24));
      PassthroughSubject.send(_:)();
    }
    v4[v5] = a2 & 1;
  }
}

uint64_t sub_1000F1B00@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_id, a1);
}

uint64_t sub_1000F1B18()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F1B50()
{
  return sub_1000F16C8();
}

uint64_t sub_1000F1B58()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1000F1B90()
{
  sub_1000F1A14(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1000F1B9C()
{
}

uint64_t sub_1000F1BA8()
{
  sub_100045F84(v0 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);

  return swift_deallocClassInstance();
}

uint64_t sub_1000F1C0C()
{
  return type metadata accessor for StaticPrimarySettingsListItemProvider();
}

uint64_t sub_1000F1C14@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, a1);
}

id sub_1000F1C2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003FF84(a1, a2);
}

uint64_t sub_1000F1C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 40);
  if (*(void *)(v10 + 16))
  {
    uint64_t v32 = a2;
    uint64_t v33 = v2;
    uint64_t v34 = v7;
    __chkstk_darwin(v6);
    *(&v31 - 2) = a1;
    swift_bridgeObjectRetain();
    id v11 = sub_10005C494((void (*)(uint64_t))sub_1000F2410, (uint64_t)(&v31 - 4), v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = v11[2];
    if (v12)
    {
      uint64_t v13 = (uint64_t)v11 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v14 = *(void *)(v34 + 72);
      swift_bridgeObjectRetain();
      uint64_t v15 = _swiftEmptyArrayStorage;
      do
      {
        sub_100074FB4(v13, (uint64_t)v9);
        uint64_t v16 = *(void *)&v9[*(int *)(v5 + 28)];
        swift_bridgeObjectRetain();
        sub_1000F242C((uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_10005C278(0, v15[2] + 1, 1, v15);
        }
        unint64_t v18 = v15[2];
        unint64_t v17 = v15[3];
        if (v18 >= v17 >> 1) {
          uint64_t v15 = sub_10005C278((void *)(v17 > 1), v18 + 1, 1, v15);
        }
        v15[2] = v18 + 1;
        v15[v18 + 4] = v16;
        v13 += v14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      uint64_t v19 = v15[2];
      if (v19) {
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = _swiftEmptyArrayStorage;
      uint64_t v19 = _swiftEmptyArrayStorage[2];
      if (v19)
      {
LABEL_10:
        swift_bridgeObjectRetain();
        uint64_t v20 = 0;
        uint64_t v21 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v22 = v15[v20++ + 4];
          unint64_t v35 = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10005C24C(v22);
          swift_bridgeObjectRelease();
          uint64_t v21 = v35;
        }
        while (v19 != v20);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v25 = v32;
    uint64_t v26 = *(void *)(v33 + 16);
    uint64_t v27 = *(void *)(v33 + 24);
    uint64_t v28 = v32 + *(int *)(v5 + 24);
    unsigned __int8 v29 = *(unsigned char *)(v33 + 32);
    uint64_t v30 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 1, 1, v30);
    *(void *)uint64_t v25 = v26;
    *(void *)(v25 + 8) = v27;
    *(unsigned char *)(v25 + 16) = v29;
    *(void *)(v25 + 24) = 0;
    *(void *)(v25 + 32) = 0;
    *(void *)(v25 + *(int *)(v5 + 28)) = v21;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v25, 0, 1, v5);
    return sub_10003DA14(v26, v27, v29);
  }
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);

  return v23(a2, 1, 1, v5);
}

uint64_t sub_1000F1FDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OSSignposter();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1000477B0(v7, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1000620F8((uint64_t)a1, (uint64_t)v40);
  static OSSignpostID.exclusive.getter();
  uint64_t v30 = v6;
  uint64_t v34 = v7;
  uint64_t v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v32 = swift_slowAlloc();
  uint64_t v43 = v32;
  *(_DWORD *)uint64_t v12 = 136315138;
  uint64_t v33 = v8;
  v29[1] = v12 + 4;
  uint64_t v13 = v41;
  uint64_t v14 = v42;
  sub_1000403E0(v40, v41);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v17 = (uint64_t)v16;
  LOBYTE(v14) = v18;
  unint64_t v19 = sub_100058B68(v15, v16, v18);
  uint64_t v31 = v10;
  unint64_t v21 = v20;
  sub_10003E2B4(v15, v17, v14);
  uint64_t v39 = sub_100042948(v19, v21, &v43);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_100042A1C((uint64_t)v40);
  uint64_t v22 = OSSignposter.logHandle.getter();
  LOBYTE(v15) = static os_signpost_type_t.begin.getter();
  uint64_t v23 = v30;
  os_signpost_id_t v24 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, (os_signpost_type_t)v15, v24, "PrimarySettingsList Data Model Item Snapshot", "%s", v12, 0xCu);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  sub_1000403E0(a1, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 40))(v36, v25, v26);
  LOBYTE(v25) = static os_signpost_type_t.end.getter();
  os_signpost_id_t v27 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, (os_signpost_type_t)v25, v27, "PrimarySettingsList Data Model Item Snapshot", "%s", v12, 0xCu);

  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v31, v34);
}

uint64_t sub_1000F23A8()
{
  sub_10003E2B4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000F23EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F1C50(a1, a2);
}

uint64_t sub_1000F2410@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F1FDC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1000F242C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListSectionModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SecurityResearchDeviceSectionModelProvider()
{
  return &type metadata for SecurityResearchDeviceSectionModelProvider;
}

uint64_t sub_1000F25F8(char *a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v116 = type metadata accessor for PrimarySettingsListItemViewType();
  uint64_t v8 = __chkstk_darwin(v116);
  uint64_t v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v107 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v107 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)&v107 - v17;
  uint64_t v117 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v19 = __chkstk_darwin(v117);
  unint64_t v115 = (unint64_t)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v113 = (unint64_t)&v107 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v110 = (char *)&v107 - v24;
  __chkstk_darwin(v23);
  unint64_t v112 = (unint64_t)&v107 - v25;
  uint64_t v114 = *(void *)(v26 + 72);
  if (!v114)
  {
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  if (a2 - (void)a1 == 0x8000000000000000 && v114 == -1) {
    goto LABEL_129;
  }
  int64_t v27 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v114 == -1) {
    goto LABEL_130;
  }
  uint64_t v28 = (uint64_t)(a2 - (void)a1) / v114;
  uint64_t v124 = a1;
  int64_t v123 = (char *)a4;
  uint64_t v29 = v27 / v114;
  if (v28 >= v27 / v114)
  {
    if ((v29 & 0x8000000000000000) == 0)
    {
      uint64_t v32 = v29 * v114;
      if (a4 < a2 || a2 + v32 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v69 = a4 + v32;
      unint64_t v122 = a4 + v32;
      uint64_t v124 = (char *)a2;
      if (v32 >= 1 && (unint64_t)a1 < a2)
      {
        uint64_t v72 = -v114;
        uint64_t v111 = a1;
        unint64_t v112 = a4;
        uint64_t v114 = -v114;
        while (2)
        {
          uint64_t v73 = v69 + v72;
          uint64_t v74 = v72;
          unint64_t v75 = v113;
          sub_100030B30(v73, v113, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
          unint64_t v76 = a2 + v74;
          sub_100030B30(v76, v115, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
          sub_100030B30(v75 + *(int *)(v117 + 20), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v85 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
              goto LABEL_85;
            case 2u:
              long long v83 = *(void **)v13;
              uint64_t v82 = *((void *)v13 + 1);
              uint64_t v78 = (char *)*((void *)v13 + 3);
              uint64_t v77 = *((void *)v13 + 4);
              uint64_t v110 = (char *)*((void *)v13 + 7);
              char v84 = v13[16];
              swift_bridgeObjectRetain();
              sub_100046F04(v83, v82, v84);
              swift_release();
              goto LABEL_88;
            case 3u:
            case 4u:
              uint64_t v78 = *(char **)v13;
              uint64_t v77 = *((void *)v13 + 1);
              break;
            case 5u:
              uint64_t v78 = (char *)*((void *)v13 + 3);
              uint64_t v77 = *((void *)v13 + 4);
              sub_100046F04(*(void **)v13, *((void *)v13 + 1), v13[16]);
              break;
            case 6u:
              uint64_t v87 = *(void **)v13;
              uint64_t v86 = *((void *)v13 + 1);
              uint64_t v78 = (char *)*((void *)v13 + 3);
              uint64_t v77 = *((void *)v13 + 4);
              char v88 = v13[16];
              swift_bridgeObjectRetain();
              sub_100046F04(v87, v86, v88);
              goto LABEL_88;
            case 7u:
            case 8u:
              unint64_t v80 = *(void **)v13;
              uint64_t v79 = *((void *)v13 + 1);
              uint64_t v78 = (char *)*((void *)v13 + 3);
              uint64_t v77 = *((void *)v13 + 4);
              uint64_t v110 = (char *)*((void *)v13 + 6);
              char v81 = v13[16];
              swift_bridgeObjectRetain();
              sub_100046F04(v80, v79, v81);
              swift_bridgeObjectRelease();
              goto LABEL_88;
            case 9u:
              uint64_t v78 = (char *)*((void *)v13 + 3);
              uint64_t v77 = *((void *)v13 + 4);
              sub_10006EB80(*(void **)v13, *((void *)v13 + 1), v13[16]);
LABEL_88:
              swift_bridgeObjectRelease();
              break;
            case 0xAu:
              uint64_t v78 = (char *)*((void *)v13 + 3);
              uint64_t v77 = *((void *)v13 + 4);
              sub_10006EB80(*(void **)v13, *((void *)v13 + 1), v13[16]);
              break;
            default:
              uint64_t v85 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_85:
              sub_100030BF8((uint64_t)v13, (uint64_t (*)(void))v85);
              uint64_t v78 = 0;
              uint64_t v77 = 0;
              break;
          }
          sub_100030B30(v115 + *(int *)(v117 + 20), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              unint64_t v97 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
              goto LABEL_98;
            case 2u:
              uint64_t v93 = *(void **)v10;
              uint64_t v108 = *((void *)v10 + 1);
              uint64_t v109 = v93;
              uint64_t v90 = *((void *)v10 + 3);
              uint64_t v89 = *((void *)v10 + 4);
              uint64_t v110 = (char *)*((void *)v10 + 7);
              char v94 = v10[16];
              swift_bridgeObjectRetain();
              sub_100046F04(v109, v108, v94);
              swift_release();
              goto LABEL_105;
            case 3u:
            case 4u:
              uint64_t v90 = *(void *)v10;
              uint64_t v89 = *((void *)v10 + 1);
              if (!v77) {
                goto LABEL_99;
              }
              goto LABEL_106;
            case 5u:
              uint64_t v90 = *((void *)v10 + 3);
              uint64_t v89 = *((void *)v10 + 4);
              sub_100046F04(*(void **)v10, *((void *)v10 + 1), v10[16]);
              if (!v77) {
                goto LABEL_99;
              }
              goto LABEL_106;
            case 6u:
              uint64_t v110 = *(char **)v10;
              uint64_t v109 = (void *)*((void *)v10 + 1);
              uint64_t v90 = *((void *)v10 + 3);
              uint64_t v89 = *((void *)v10 + 4);
              char v99 = v10[16];
              swift_bridgeObjectRetain();
              sub_100046F04(v110, (uint64_t)v109, v99);
              goto LABEL_105;
            case 7u:
            case 8u:
              uint64_t v91 = *(void **)v10;
              uint64_t v108 = *((void *)v10 + 1);
              uint64_t v109 = v91;
              uint64_t v90 = *((void *)v10 + 3);
              uint64_t v89 = *((void *)v10 + 4);
              uint64_t v110 = (char *)*((void *)v10 + 6);
              char v92 = v10[16];
              swift_bridgeObjectRetain();
              sub_100046F04(v109, v108, v92);
              swift_bridgeObjectRelease();
LABEL_105:
              swift_bridgeObjectRelease();
              if (v77) {
                goto LABEL_106;
              }
              goto LABEL_99;
            case 9u:
              uint64_t v95 = *(void **)v10;
              uint64_t v96 = *((void *)v10 + 1);
              uint64_t v90 = *((void *)v10 + 3);
              uint64_t v89 = *((void *)v10 + 4);
              uint64_t v110 = (char *)*((void *)v10 + 6);
              sub_10006EB80(v95, v96, v10[16]);
              swift_bridgeObjectRelease();
              if (!v77) {
                goto LABEL_99;
              }
              goto LABEL_106;
            case 0xAu:
              uint64_t v90 = *((void *)v10 + 3);
              uint64_t v89 = *((void *)v10 + 4);
              sub_10006EB80(*(void **)v10, *((void *)v10 + 1), v10[16]);
              if (!v77) {
                goto LABEL_99;
              }
              goto LABEL_106;
            default:
              unint64_t v97 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_98:
              sub_100030BF8((uint64_t)v10, (uint64_t (*)(void))v97);
              uint64_t v90 = 0;
              uint64_t v89 = 0;
              if (v77)
              {
LABEL_106:
                if (v89)
                {
                  long long v120 = v78;
                  uint64_t v121 = v77;
                  uint64_t v118 = v90;
                  uint64_t v119 = v89;
                  sub_100030C58();
                  uint64_t v100 = StringProtocol.localizedStandardCompare<A>(_:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  BOOL v98 = v100 == -1;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  BOOL v98 = 1;
                }
              }
              else
              {
LABEL_99:
                if (v89) {
                  swift_bridgeObjectRelease();
                }
                BOOL v98 = 0;
              }
              uint64_t v101 = v114;
              unint64_t v102 = a3 + v114;
              sub_100030BF8(v115, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
              sub_100030BF8(v113, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
              if (v98)
              {
                if (a3 < a2 || v102 >= a2)
                {
                  swift_arrayInitWithTakeFrontToBack();
                  unint64_t v104 = (unint64_t)v111;
                  unint64_t v105 = v112;
                  uint64_t v72 = v114;
                }
                else
                {
                  BOOL v103 = a3 == a2;
                  unint64_t v104 = (unint64_t)v111;
                  unint64_t v105 = v112;
                  uint64_t v72 = v114;
                  if (!v103) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                v124 += v72;
              }
              else
              {
                unint64_t v106 = v122;
                v122 += v101;
                uint64_t v72 = v101;
                if (a3 < v106 || v102 >= v106)
                {
                  swift_arrayInitWithTakeFrontToBack();
                  unint64_t v76 = a2;
                  unint64_t v104 = (unint64_t)v111;
                  unint64_t v105 = v112;
                }
                else
                {
                  BOOL v103 = a3 == v106;
                  unint64_t v104 = (unint64_t)v111;
                  unint64_t v105 = v112;
                  if (!v103) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                  unint64_t v76 = a2;
                }
              }
              unint64_t v69 = v122;
              if (v122 <= v105) {
                goto LABEL_77;
              }
              a2 = v76;
              a3 = v102;
              if (v76 <= v104) {
                goto LABEL_77;
              }
              continue;
          }
        }
      }
      goto LABEL_77;
    }
LABEL_131:
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x1000F33A8);
  }
  if (v28 < 0) {
    goto LABEL_131;
  }
  uint64_t v30 = v28 * v114;
  uint64_t v31 = (uint64_t)v110;
  if (a4 < (unint64_t)a1 || (unint64_t)&a1[v30] <= a4)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if ((char *)a4 != a1)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  unint64_t v115 = a4 + v30;
  unint64_t v122 = a4 + v30;
  unint64_t v113 = a3;
  if (v30 >= 1 && a2 < a3)
  {
    while (2)
    {
      uint64_t v34 = v112;
      sub_100030B30(a2, v112, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      sub_100030B30(a4, v31, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      sub_100030B30(v34 + *(int *)(v117 + 20), (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          unint64_t v44 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
          goto LABEL_29;
        case 2u:
          uint64_t v41 = *(void **)v18;
          uint64_t v40 = *((void *)v18 + 1);
          uint64_t v35 = (char *)*((void *)v18 + 3);
          uint64_t v36 = *((void *)v18 + 4);
          char v42 = v18[16];
          swift_bridgeObjectRetain();
          char v43 = v42;
          uint64_t v31 = (uint64_t)v110;
          sub_100046F04(v41, v40, v43);
          swift_release();
          goto LABEL_32;
        case 3u:
        case 4u:
          uint64_t v35 = *(char **)v18;
          uint64_t v36 = *((void *)v18 + 1);
          break;
        case 5u:
          uint64_t v35 = (char *)*((void *)v18 + 3);
          uint64_t v36 = *((void *)v18 + 4);
          sub_100046F04(*(void **)v18, *((void *)v18 + 1), v18[16]);
          break;
        case 6u:
          uint64_t v46 = *(void **)v18;
          uint64_t v45 = *((void *)v18 + 1);
          uint64_t v35 = (char *)*((void *)v18 + 3);
          uint64_t v36 = *((void *)v18 + 4);
          char v47 = v18[16];
          swift_bridgeObjectRetain();
          char v48 = v47;
          uint64_t v31 = (uint64_t)v110;
          sub_100046F04(v46, v45, v48);
          goto LABEL_32;
        case 7u:
        case 8u:
          uint64_t v38 = *(void **)v18;
          uint64_t v37 = *((void *)v18 + 1);
          uint64_t v35 = (char *)*((void *)v18 + 3);
          uint64_t v36 = *((void *)v18 + 4);
          char v39 = v18[16];
          swift_bridgeObjectRetain();
          sub_100046F04(v38, v37, v39);
          uint64_t v31 = (uint64_t)v110;
          swift_bridgeObjectRelease();
          goto LABEL_32;
        case 9u:
          uint64_t v35 = (char *)*((void *)v18 + 3);
          uint64_t v36 = *((void *)v18 + 4);
          sub_10006EB80(*(void **)v18, *((void *)v18 + 1), v18[16]);
LABEL_32:
          swift_bridgeObjectRelease();
          break;
        case 0xAu:
          uint64_t v35 = (char *)*((void *)v18 + 3);
          uint64_t v36 = *((void *)v18 + 4);
          sub_10006EB80(*(void **)v18, *((void *)v18 + 1), v18[16]);
          break;
        default:
          unint64_t v44 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_29:
          sub_100030BF8((uint64_t)v18, (uint64_t (*)(void))v44);
          uint64_t v35 = 0;
          uint64_t v36 = 0;
          break;
      }
      sub_100030B30(v31 + *(int *)(v117 + 20), (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v60 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
          goto LABEL_42;
        case 2u:
          char v56 = *(void **)v16;
          uint64_t v55 = *((void *)v16 + 1);
          uint64_t v49 = *((void *)v16 + 3);
          uint64_t v50 = *((void *)v16 + 4);
          uint64_t v111 = (char *)*((void *)v16 + 7);
          char v57 = v35;
          char v58 = v16[16];
          swift_bridgeObjectRetain();
          char v59 = v58;
          uint64_t v35 = v57;
          sub_100046F04(v56, v55, v59);
          uint64_t v31 = (uint64_t)v110;
          swift_release();
          goto LABEL_49;
        case 3u:
        case 4u:
          uint64_t v49 = *(void *)v16;
          uint64_t v50 = *((void *)v16 + 1);
          if (!v36) {
            goto LABEL_43;
          }
          goto LABEL_50;
        case 5u:
          uint64_t v49 = *((void *)v16 + 3);
          uint64_t v50 = *((void *)v16 + 4);
          sub_100046F04(*(void **)v16, *((void *)v16 + 1), v16[16]);
          if (!v36) {
            goto LABEL_43;
          }
          goto LABEL_50;
        case 6u:
          uint64_t v61 = *((void *)v16 + 1);
          uint64_t v111 = *(char **)v16;
          uint64_t v49 = *((void *)v16 + 3);
          uint64_t v50 = *((void *)v16 + 4);
          uint64_t v62 = v35;
          char v63 = v16[16];
          swift_bridgeObjectRetain();
          char v64 = v63;
          uint64_t v35 = v62;
          sub_100046F04(v111, v61, v64);
          goto LABEL_49;
        case 7u:
        case 8u:
          unint64_t v52 = *(void **)v16;
          uint64_t v51 = *((void *)v16 + 1);
          uint64_t v49 = *((void *)v16 + 3);
          uint64_t v50 = *((void *)v16 + 4);
          uint64_t v111 = v35;
          char v53 = v16[16];
          swift_bridgeObjectRetain();
          char v54 = v53;
          uint64_t v31 = (uint64_t)v110;
          sub_100046F04(v52, v51, v54);
          uint64_t v35 = v111;
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          if (v36) {
            goto LABEL_50;
          }
          goto LABEL_43;
        case 9u:
          uint64_t v49 = *((void *)v16 + 3);
          uint64_t v50 = *((void *)v16 + 4);
          sub_10006EB80(*(void **)v16, *((void *)v16 + 1), v16[16]);
          swift_bridgeObjectRelease();
          if (!v36) {
            goto LABEL_43;
          }
          goto LABEL_50;
        case 0xAu:
          uint64_t v49 = *((void *)v16 + 3);
          uint64_t v50 = *((void *)v16 + 4);
          sub_10006EB80(*(void **)v16, *((void *)v16 + 1), v16[16]);
          if (!v36) {
            goto LABEL_43;
          }
          goto LABEL_50;
        default:
          uint64_t v60 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_42:
          sub_100030BF8((uint64_t)v16, (uint64_t (*)(void))v60);
          uint64_t v49 = 0;
          uint64_t v50 = 0;
          if (v36)
          {
LABEL_50:
            if (!v50)
            {
              swift_bridgeObjectRelease();
              sub_100030BF8(v31, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
              sub_100030BF8(v112, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_59:
              unint64_t v66 = (unint64_t)v124;
              unint64_t v68 = a2 + v114;
              if ((unint64_t)v124 < a2 || (unint64_t)v124 >= v68)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v124 == (char *)a2)
              {
                unint64_t v66 = a2;
              }
              else
              {
                swift_arrayInitWithTakeBackToFront();
              }
              goto LABEL_68;
            }
            long long v120 = v35;
            uint64_t v121 = v36;
            uint64_t v118 = v49;
            uint64_t v119 = v50;
            sub_100030C58();
            uint64_t v65 = StringProtocol.localizedStandardCompare<A>(_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100030BF8(v31, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
            sub_100030BF8(v112, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
            if (v65 == -1) {
              goto LABEL_59;
            }
          }
          else
          {
LABEL_43:
            if (v50) {
              swift_bridgeObjectRelease();
            }
            sub_100030BF8(v31, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
            sub_100030BF8(v112, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
          }
          unint64_t v66 = (unint64_t)v124;
          unint64_t v67 = (unint64_t)&v123[v114];
          if (v124 < v123 || (unint64_t)v124 >= v67)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v124 != v123)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          int64_t v123 = (char *)v67;
          unint64_t v68 = a2;
LABEL_68:
          uint64_t v124 = (char *)(v66 + v114);
          a4 = (unint64_t)v123;
          if ((unint64_t)v123 >= v115) {
            break;
          }
          a2 = v68;
          if (v68 >= v113) {
            break;
          }
          continue;
      }
      break;
    }
  }
LABEL_77:
  sub_1000F3554((unint64_t *)&v124, (unint64_t *)&v123, (uint64_t *)&v122);
  return 1;
}

char *sub_1000F3458(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100046B9C(&qword_1001648E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000F3554(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1000F3694(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1000F3750(uint64_t a1)
{
  return sub_1000F3458(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000F3764(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

unint64_t sub_1000F3778(char a1)
{
  unint64_t result = 1414483794;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000029;
      break;
    case 2:
      unint64_t result = 0x454C54534143;
      break;
    case 3:
      unint64_t result = 0x43415F454C505041;
      break;
    case 4:
      unint64_t result = 0x796C696D6146;
      break;
    case 5:
      unint64_t result = 1229343063;
      break;
    case 6:
      unint64_t result = 0x54454E5245485445;
      break;
    case 7:
      unint64_t result = 0x746F6F7465756C42;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 5132374;
      break;
    case 11:
      unint64_t result = 0x4F4F525353414C43;
      break;
    case 12:
    case 22:
    case 28:
    case 35:
    case 68:
    case 70:
      unint64_t result = 0xD000000000000010;
      break;
    case 13:
      unint64_t result = 0x73646E756F53;
      break;
    case 14:
      unint64_t result = 0x445F544F4E5F4F44;
      break;
    case 15:
      unint64_t result = 0x545F4E4545524353;
      break;
    case 16:
      unint64_t result = 0x6C6172656E6547;
      break;
    case 17:
      unint64_t result = 0x436C6F72746E6F43;
      break;
    case 18:
      unint64_t result = 0x425F4E4F49544341;
      break;
    case 19:
      unint64_t result = 0x544E4549424D41;
      break;
    case 20:
      unint64_t result = 0x59414C50534944;
      break;
    case 21:
      unint64_t result = 0x5243535F454D4F48;
      break;
    case 23:
      unint64_t result = 0x4249535345434341;
      break;
    case 24:
      unint64_t result = 0x657061706C6C6157;
      break;
    case 25:
      unint64_t result = 1230129491;
      break;
    case 26:
      unint64_t result = 0x6C69636E6550;
      break;
    case 27:
      unint64_t result = 0x45444F4353534150;
      break;
    case 29:
      unint64_t result = 0x6C72616550;
      break;
    case 30:
      unint64_t result = 0x434E454752454D45;
      break;
    case 31:
      unint64_t result = 0xD000000000000015;
      break;
    case 32:
      unint64_t result = 0x5F59524554544142;
      break;
    case 33:
      unint64_t result = 0x79636176697250;
      break;
    case 34:
      unint64_t result = 0x45524F5453;
      break;
    case 36:
      unint64_t result = 0x4B4F4F4253534150;
      break;
    case 37:
      unint64_t result = 1279869261;
      break;
    case 38:
      unint64_t result = 0x53544341544E4F43;
      break;
    case 39:
      unint64_t result = 0x5241444E454C4143;
      break;
    case 40:
      unint64_t result = 0x5345544F4ELL;
      break;
    case 41:
      unint64_t result = 0x5245444E494D4552;
      break;
    case 42:
      unint64_t result = 0x4D524F4645455246;
      break;
    case 43:
      unint64_t result = 0x454D5F4543494F56;
      break;
    case 44:
      unint64_t result = 0x656E6F6850;
      break;
    case 45:
      unint64_t result = 0x534547415353454DLL;
      break;
    case 46:
      unint64_t result = 0x454D495445434146;
      break;
    case 47:
      unint64_t result = 0x495241464153;
      break;
    case 48:
      unint64_t result = 1398228302;
      break;
    case 49:
      unint64_t result = 0x534B434F5453;
      break;
    case 50:
      unint64_t result = 0x54414C534E415254;
      break;
    case 51:
      unint64_t result = 1397768525;
      break;
    case 52:
      unint64_t result = 0x52454854414557;
      break;
    case 53:
      unint64_t result = 0x535341504D4F43;
      break;
    case 54:
      unint64_t result = 0x4552555341454DLL;
      break;
    case 55:
      unint64_t result = 0x54554354524F4853;
      break;
    case 56:
      unint64_t result = 0x48544C414548;
      break;
    case 57:
      unint64_t result = 0x5353454E544946;
      break;
    case 58:
      unint64_t result = 0x54494B454D4F48;
      break;
    case 59:
      unint64_t result = 0x54494B5353414C43;
      break;
    case 60:
      unint64_t result = 0x4C414E52554F4ALL;
      break;
    case 61:
      unint64_t result = 0x434953554DLL;
      break;
    case 62:
      unint64_t result = 0x5050415654;
      break;
    case 63:
      unint64_t result = 0x736F746F6850;
      break;
    case 64:
      unint64_t result = 0x4152454D4143;
      break;
    case 65:
      unint64_t result = 0x534B4F4F4249;
      break;
    case 66:
      unint64_t result = 0x5354534143444F50;
      break;
    case 67:
      unint64_t result = 0x544E4543454D4147;
      break;
    case 69:
      unint64_t result = 0xD000000000000012;
      break;
    case 71:
      unint64_t result = 0xD000000000000011;
      break;
    case 72:
      unint64_t result = 0xD000000000000011;
      break;
    case 73:
      unint64_t result = 0x454E414C50524941;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F3F98(char a1)
{
  return byte_1001218FC[a1];
}

_UNKNOWN **sub_1000F3FAC(unsigned __int8 a1)
{
  if (a1 > 0x43u)
  {
    if (a1 != 72)
    {
      if (a1 == 68) {
        return &off_100150BB8;
      }
      return (_UNKNOWN **)&_swiftEmptyArrayStorage;
    }
    return &off_100150BE8;
  }
  else
  {
    if (a1 != 2)
    {
      if (a1 == 35) {
        return &off_100150C18;
      }
      return (_UNKNOWN **)&_swiftEmptyArrayStorage;
    }
    return &off_100150B88;
  }
}

unint64_t sub_1000F4014(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  unint64_t result = 0;
  switch(v1)
  {
    case '""':
      unint64_t result = 0xD000000000000012;
      break;
    case '%':
      unint64_t result = 0xD000000000000014;
      break;
    case '&':
      unint64_t result = 0xD00000000000001BLL;
      break;
    case '\'':
      unint64_t result = 0xD000000000000013;
      break;
    case '(':
      unint64_t result = 0xD000000000000015;
      break;
    case ')':
      unint64_t result = 0xD000000000000013;
      break;
    case '*':
      unint64_t result = 0xD000000000000012;
      break;
    case '+':
      unint64_t result = 0xD000000000000014;
      break;
    case ',':
      unint64_t result = 0xD000000000000015;
      break;
    case '-':
      unint64_t result = 0xD000000000000013;
      break;
    case '.':
      unint64_t result = 0xD000000000000012;
      break;
    case '/':
      unint64_t result = 0xD000000000000016;
      break;
    case '0':
    case '3':
    case ':':
    case '=':
    case '>':
      unint64_t result = 0x6C7070612E6D6F63;
      break;
    case '1':
      unint64_t result = 0xD000000000000010;
      break;
    case '2':
      unint64_t result = 0xD000000000000013;
      break;
    case '4':
    case '5':
    case '6':
    case '9':
    case '<':
      unint64_t result = 0xD000000000000011;
      break;
    case '7':
      unint64_t result = 0xD000000000000013;
      break;
    case '8':
      unint64_t result = 0xD000000000000010;
      break;
    case '?':
      unint64_t result = 0xD000000000000019;
      break;
    case 'A':
      unint64_t result = 0xD000000000000010;
      break;
    case 'B':
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F43F8()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x4A) {
    return 74;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1000F444C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    int64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v14 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
            goto LABEL_12;
          case 2u:
            uint64_t v19 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v10, v11, v19);
            uint64_t v20 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
            uint64_t v21 = (void *)((char *)v10 + v20);
            uint64_t v22 = (void *)((char *)v11 + v20);
            uint64_t v23 = v22[1];
            void *v21 = *v22;
            v21[1] = v23;
            swift_bridgeObjectRetain();
            goto LABEL_12;
          case 3u:
          case 4u:
          case 5u:
            uint64_t v24 = v11[1];
            void *v10 = *v11;
            v10[1] = v24;
            swift_bridgeObjectRetain();
LABEL_12:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_13;
      case 2u:
      case 3u:
      case 4u:
        v8(v10, v11, v7);
        goto LABEL_13;
      case 5u:
        uint64_t v16 = v11[1];
        void *v10 = *v11;
        v10[1] = v16;
        uint64_t v17 = v11[2];
        uint64_t v18 = v11[3];
        void v10[2] = v17;
        v10[3] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
    uint64_t v25 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v26 = (uint64_t *)((char *)a1 + v25);
    int64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000F4868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for PrimarySettingsListItemIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v7 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
          break;
        case 2u:
          uint64_t v8 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_7;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_7;
        default:
          goto LABEL_8;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
      v5(v6, v4);
      break;
    case 5u:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_8:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000F4A74(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = type metadata accessor for PrimarySettingsListItemIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v13 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
          goto LABEL_10;
        case 2u:
          uint64_t v17 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v10, v17);
          uint64_t v18 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
          uint64_t v19 = (void *)((char *)v9 + v18);
          uint64_t v20 = (void *)((char *)v10 + v18);
          uint64_t v21 = v20[1];
          *uint64_t v19 = *v20;
          v19[1] = v21;
          swift_bridgeObjectRetain();
          goto LABEL_10;
        case 3u:
        case 4u:
        case 5u:
          uint64_t v22 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v22;
          swift_bridgeObjectRetain();
LABEL_10:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_11;
    case 2u:
    case 3u:
    case 4u:
      v7(v9, v10, v6);
      goto LABEL_11;
    case 5u:
      uint64_t v14 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v14;
      uint64_t v15 = v10[2];
      uint64_t v16 = v10[3];
      v9[2] = v15;
      v9[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  uint64_t v23 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000F4E40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_1000F80E8(a1 + v8, type metadata accessor for SettingsURLDestination.Action);
    uint64_t v11 = type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v13 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
            goto LABEL_11;
          case 2u:
            uint64_t v14 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
            uint64_t v15 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
            uint64_t v16 = (void *)((char *)v9 + v15);
            uint64_t v17 = (void *)((char *)v10 + v15);
            *uint64_t v16 = *v17;
            v16[1] = v17[1];
            swift_bridgeObjectRetain();
            goto LABEL_11;
          case 3u:
          case 4u:
          case 5u:
            *uint64_t v9 = *v10;
            v9[1] = v10[1];
            swift_bridgeObjectRetain();
LABEL_11:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
            break;
        }
        goto LABEL_12;
      case 2u:
      case 3u:
      case 4u:
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
        goto LABEL_12;
      case 5u:
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        v9[3] = v10[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000F52B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = type metadata accessor for PrimarySettingsListItemIdentifier();
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v15 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
        uint64_t v16 = sub_100046B9C(&qword_10015F7F8);
        *(_OWORD *)&v9[*(int *)(v16 + 48)] = *(_OWORD *)&v10[*(int *)(v16 + 48)];
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload > 1)
      {
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v14 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_9;
    case 2u:
    case 3u:
    case 4u:
      v7((uint64_t)v9, (uint64_t)v10, v6);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  uint64_t v17 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_1000F55B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)(a2 + v8);
    sub_1000F80E8(a1 + v8, type metadata accessor for SettingsURLDestination.Action);
    uint64_t v11 = type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = type metadata accessor for PrimarySettingsListItemIdentifier();
        unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v15 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
          uint64_t v16 = sub_100046B9C(&qword_10015F7F8);
          *(_OWORD *)&v9[*(int *)(v16 + 48)] = *(_OWORD *)&v10[*(int *)(v16 + 48)];
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload > 1)
        {
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v14 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_10;
      case 2u:
      case 3u:
      case 4u:
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v10, v6);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000F5920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SettingsURLDestination.Action(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1000F5A34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SettingsURLDestination.Action(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t *sub_1000F5B44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v8 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
            goto LABEL_13;
          case 2u:
            uint64_t v15 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            uint64_t v16 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
            uint64_t v17 = (uint64_t *)((char *)a1 + v16);
            uint64_t v18 = (uint64_t *)((char *)a2 + v16);
            uint64_t v19 = v18[1];
            void *v17 = *v18;
            v17[1] = v19;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 3u:
          case 4u:
          case 5u:
            uint64_t v20 = a2[1];
            *a1 = *a2;
            a1[1] = v20;
            swift_bridgeObjectRetain();
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
      case 4u:
        uint64_t v11 = type metadata accessor for URL();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        a1[2] = v13;
        a1[3] = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000F5F38(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      type metadata accessor for PrimarySettingsListItemIdentifier();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
          uint64_t v3 = type metadata accessor for FLFollowUpInformation();
          goto LABEL_3;
        case 2:
          uint64_t v5 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
          sub_100046B9C(&qword_10015F7F8);
          goto LABEL_10;
        case 3:
        case 4:
        case 5:
          goto LABEL_10;
        default:
          return result;
      }
    case 2:
    case 3:
    case 4:
      uint64_t v3 = type metadata accessor for URL();
LABEL_3:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 5:
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1000F60D4(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          uint64_t v7 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
          goto LABEL_10;
        case 2u:
          uint64_t v12 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          uint64_t v13 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
          uint64_t v14 = (void *)((char *)a1 + v13);
          uint64_t v15 = (void *)((char *)a2 + v13);
          uint64_t v16 = v15[1];
          *uint64_t v14 = *v15;
          v14[1] = v16;
          swift_bridgeObjectRetain();
          goto LABEL_10;
        case 3u:
        case 4u:
        case 5u:
          uint64_t v17 = a2[1];
          *a1 = *a2;
          a1[1] = v17;
          swift_bridgeObjectRetain();
LABEL_10:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      goto LABEL_11;
    case 2u:
    case 3u:
    case 4u:
      uint64_t v8 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_11;
    case 5u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[2];
      uint64_t v11 = a2[3];
      a1[2] = v10;
      a1[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1000F6474(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F80E8((uint64_t)a1, type metadata accessor for SettingsURLDestination.Action);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v7 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
            goto LABEL_11;
          case 2u:
            uint64_t v9 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
            uint64_t v10 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
            uint64_t v11 = (void *)((char *)a1 + v10);
            uint64_t v12 = (void *)((char *)a2 + v10);
            *uint64_t v11 = *v12;
            v11[1] = v12[1];
            swift_bridgeObjectRetain();
            goto LABEL_11;
          case 3u:
          case 4u:
          case 5u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
LABEL_11:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            break;
        }
        goto LABEL_12;
      case 2u:
      case 3u:
      case 4u:
        uint64_t v8 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_12;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1000F6868(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = sub_100046B9C(&qword_10015F7F8);
        *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload > 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_9;
    case 2u:
    case 3u:
    case 4u:
      uint64_t v9 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1000F6B50(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F80E8((uint64_t)a1, type metadata accessor for SettingsURLDestination.Action);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
        unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v10 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          uint64_t v11 = sub_100046B9C(&qword_10015F7F8);
          *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload > 1)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v8 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_10;
      case 2u:
      case 3u:
      case 4u:
        uint64_t v9 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1000F6E5C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10005A334(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for URLQueryItem() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = URLQueryItem.description.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10005A334(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1000F6F94()
{
  unint64_t v1 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  sub_1000F8024((unint64_t *)&qword_1001641B0, (void (*)(uint64_t))&type metadata accessor for URL);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x6F69746361202C27;
  v3._object = (void *)0xEC00000027203A6ELL;
  String.append(_:)(v3);
  uint64_t v4 = type metadata accessor for SettingsURLDestination(0);
  v5._countAndFlagsBits = sub_1000F7A6C();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x800000010012B0F0;
  v6._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v6);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1000F6E5C(v7);
  swift_bridgeObjectRelease();
  sub_100046B9C(&qword_100164810);
  sub_10005A4C0();
  uint64_t v8 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 93;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  uint64_t v13 = (uint64_t *)(v0 + *(int *)(v4 + 28));
  uint64_t v14 = (void *)v13[1];
  if (v14)
  {
    uint64_t v15 = *v13;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = v15;
    v16._object = v14;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 39;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    unint64_t v18 = 0xD000000000000010;
    unint64_t v1 = 0x800000010012B110;
  }
  else
  {
    unint64_t v18 = 0;
  }
  unint64_t v19 = v1;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 125;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  return 0xD000000000000020;
}

Swift::Int sub_1000F7220()
{
  Hasher.init(_seed:)();
  type metadata accessor for URL();
  sub_1000F8024(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v1 = type metadata accessor for SettingsURLDestination(0);
  sub_1000F73A8();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 24));
  Swift::UInt v3 = *(void *)(v2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
  {
    uint64_t v4 = *(void *)(type metadata accessor for URLQueryItem() - 8);
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    sub_1000F8024(&qword_100164A40, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
    do
    {
      dispatch thunk of Hashable.hash(into:)();
      v5 += v6;
      --v3;
    }
    while (v3);
  }
  return Hasher._finalize()();
}

void sub_1000F73A8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v8);
  unint64_t v10 = (unsigned __int8 *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003E028(v0, (uint64_t)v10, type metadata accessor for SettingsURLDestination.Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10004984C((uint64_t)v10, (uint64_t)v7);
      Hasher._combine(_:)(2uLL);
      sub_100045B14();
      sub_1000F80E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      return;
    case 2u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2 + 32))(v4, v10, v1);
      Swift::UInt v12 = 3;
      goto LABEL_7;
    case 3u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2 + 32))(v4, v10, v1);
      Swift::UInt v12 = 4;
      goto LABEL_7;
    case 4u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2 + 32))(v4, v10, v1);
      Swift::UInt v12 = 5;
LABEL_7:
      Hasher._combine(_:)(v12);
      sub_1000F8024(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
    case 5u:
      uint64_t v13 = *((void *)v10 + 3);
      Hasher._combine(_:)(6uLL);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      if (v13)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      break;
    case 6u:
      Hasher._combine(_:)(0);
      break;
    default:
      Swift::UInt v11 = *v10;
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v11);
      break;
  }
}

void sub_1000F7704(uint64_t a1, uint64_t a2)
{
  type metadata accessor for URL();
  sub_1000F8024(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  sub_1000F73A8();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  Swift::UInt v5 = *(void *)(v4 + 16);
  Hasher._combine(_:)(v5);
  if (v5)
  {
    uint64_t v6 = *(void *)(type metadata accessor for URLQueryItem() - 8);
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    sub_1000F8024(&qword_100164A40, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
    do
    {
      dispatch thunk of Hashable.hash(into:)();
      v7 += v8;
      --v5;
    }
    while (v5);
  }
}

Swift::Int sub_1000F786C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for URL();
  sub_1000F8024(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  sub_1000F73A8();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  Swift::UInt v5 = *(void *)(v4 + 16);
  Hasher._combine(_:)(v5);
  if (v5)
  {
    uint64_t v6 = *(void *)(type metadata accessor for URLQueryItem() - 8);
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    sub_1000F8024(&qword_100164A40, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
    do
    {
      dispatch thunk of Hashable.hash(into:)();
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1000F79E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F7A2C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F7A6C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v8);
  unint64_t v10 = (void *)((char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003E028(v0, (uint64_t)v10, type metadata accessor for SettingsURLDestination.Action);
  uint64_t v11 = 1953460050;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10004984C((uint64_t)v10, (uint64_t)v7);
      strcpy((char *)v28, "Navigation: ");
      BYTE5(v28[1]) = 0;
      HIWORD(v28[1]) = -5120;
      v15._countAndFlagsBits = sub_100048BDC();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      uint64_t v11 = v28[0];
      sub_1000F80E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      return v11;
    case 2u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v10, v1);
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      uint64_t v16 = 0x53206873696E6946;
      unint64_t v17 = 0xEE00203A70757465;
      goto LABEL_8;
    case 3u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v10, v1);
      uint64_t v16 = 0x3A65636E616E6946;
      unint64_t v17 = 0xE900000000000020;
      goto LABEL_8;
    case 4u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v10, v1);
      uint64_t v16 = 0x203A687475414FLL;
      unint64_t v17 = 0xE700000000000000;
LABEL_8:
      v28[0] = v16;
      v28[1] = v17;
      v18._countAndFlagsBits = URL.absoluteString.getter();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      uint64_t v11 = v28[0];
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v11;
    case 5u:
      uint64_t v20 = *v10;
      unint64_t v19 = (void *)v10[1];
      unint64_t v14 = v10[3];
      if (v14)
      {
        unint64_t v21 = v10[2];
        v28[0] = 0;
        v28[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(29);
        swift_bridgeObjectRelease();
        v28[0] = 0xD000000000000017;
        v28[1] = 0x800000010012B130;
        v22._countAndFlagsBits = v20;
        v22._object = v19;
        String.append(_:)(v22);
        swift_bridgeObjectRelease();
        v23._countAndFlagsBits = 8236;
        v23._object = (void *)0xE200000000000000;
        String.append(_:)(v23);
        unint64_t v13 = v21;
LABEL_17:
        unint64_t v26 = v14;
        String.append(_:)(*(Swift::String *)&v13);
      }
      else
      {
        strcpy((char *)v28, "Follow Up: ");
        HIDWORD(v28[1]) = -352321536;
        v24._countAndFlagsBits = v20;
        v24._object = v19;
        String.append(_:)(v24);
      }
      swift_bridgeObjectRelease();
      return v28[0];
    case 6u:
      return v11;
    default:
      uint64_t v12 = *(unsigned __int8 *)v10;
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "Presentation: ");
      HIBYTE(v28[1]) = -18;
      unint64_t v13 = 0xD000000000000016;
      unint64_t v14 = 0x800000010012A100;
      switch(v12)
      {
        case 1:
          unint64_t v14 = 0x8000000100124620;
          unint64_t v13 = 0xD000000000000010;
          goto LABEL_17;
        case 2:
          unint64_t v13 = 0xD000000000000019;
          uint64_t v25 = "primaryAppleAccountSignIn";
          goto LABEL_16;
        case 3:
          unint64_t v13 = 0xD000000000000018;
          uint64_t v25 = "applicationDebugSettings";
          goto LABEL_16;
        case 4:
          unint64_t v13 = 0xD000000000000024;
          uint64_t v25 = "appleAccountNetworkReachabilityAlert";
          goto LABEL_16;
        case 5:
          unint64_t v13 = 0xD000000000000020;
          uint64_t v25 = "followUpNetworkReachabilityAlert";
LABEL_16:
          unint64_t v14 = (unint64_t)(v25 - 32) | 0x8000000000000000;
          break;
        case 6:
          unint64_t v14 = 0xED00006C61646F4DLL;
          unint64_t v13 = 0x7055776F6C6C6F66;
          break;
        default:
          goto LABEL_17;
      }
      goto LABEL_17;
  }
}

uint64_t sub_1000F7F94()
{
  return sub_1000F8024(&qword_100164A28, (void (*)(uint64_t))type metadata accessor for SettingsURLDestination.Action);
}

uint64_t sub_1000F7FDC()
{
  return sub_1000F8024(&qword_100164A30, (void (*)(uint64_t))type metadata accessor for SettingsURLDestination);
}

uint64_t sub_1000F8024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F806C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000F8148(a1, a2, a3, (void *)*v3, &qword_100161580, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000F80A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000F8390(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000F80C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000F8514(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000F80E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F8148(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100046B9C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  Swift::String v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  Swift::String v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F8390(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100046B9C(&qword_100164A48);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F8514(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100046B9C(&qword_1001615A0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_100046B9C(&qword_1001615A8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F86B8(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  uint64_t v63 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v60 = (char *)&v58 - v7;
  __chkstk_darwin(v6);
  char v59 = (char *)&v58 - v8;
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v9 - 8);
  uint64_t v58 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SettingsURLDestination.Action(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  size_t v17 = (char *)&v58 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v58 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v58 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  unint64_t v26 = (char *)&v58 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (unsigned __int8 *)&v58 - v27;
  uint64_t v29 = sub_100046B9C(&qword_100164A38);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = &v32[*(int *)(v30 + 56)];
  sub_10003E028(v64, (uint64_t)v32, type metadata accessor for SettingsURLDestination.Action);
  sub_10003E028(v65, (uint64_t)v33, type metadata accessor for SettingsURLDestination.Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10003E028((uint64_t)v32, (uint64_t)v26, type metadata accessor for SettingsURLDestination.Action);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v35 = v58;
        sub_10004984C((uint64_t)v33, v58);
        char v34 = sub_1000460F4((uint64_t)v26, v35);
        sub_1000F80E8(v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        sub_1000F80E8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        goto LABEL_12;
      }
      sub_1000F80E8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      goto LABEL_27;
    case 2u:
      sub_10003E028((uint64_t)v32, (uint64_t)v23, type metadata accessor for SettingsURLDestination.Action);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v37 = v62;
        uint64_t v36 = v63;
        uint64_t v38 = v59;
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v59, v33, v62);
        char v34 = static URL.== infix(_:_:)();
        char v39 = *(void (**)(char *, uint64_t))(v36 + 8);
        v39(v38, v37);
        v39(v23, v37);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v23, v62);
      goto LABEL_27;
    case 3u:
      sub_10003E028((uint64_t)v32, (uint64_t)v20, type metadata accessor for SettingsURLDestination.Action);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v41 = v62;
        uint64_t v40 = v63;
        char v42 = v60;
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v33, v62);
        char v34 = static URL.== infix(_:_:)();
        char v43 = *(void (**)(char *, uint64_t))(v40 + 8);
        v43(v42, v41);
        v43(v20, v41);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v62);
      goto LABEL_27;
    case 4u:
      sub_10003E028((uint64_t)v32, (uint64_t)v17, type metadata accessor for SettingsURLDestination.Action);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v62);
        goto LABEL_27;
      }
      uint64_t v45 = v62;
      uint64_t v44 = v63;
      uint64_t v46 = v61;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v61, v33, v62);
      char v34 = static URL.== infix(_:_:)();
      char v47 = *(void (**)(char *, uint64_t))(v44 + 8);
      v47(v46, v45);
      v47(v17, v45);
LABEL_12:
      sub_1000F80E8((uint64_t)v32, type metadata accessor for SettingsURLDestination.Action);
      return v34 & 1;
    case 5u:
      sub_10003E028((uint64_t)v32, (uint64_t)v14, type metadata accessor for SettingsURLDestination.Action);
      uint64_t v49 = *v14;
      uint64_t v48 = v14[1];
      uint64_t v51 = v14[2];
      uint64_t v50 = v14[3];
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        sub_1000F90B8((uint64_t)v32);
        goto LABEL_28;
      }
      uint64_t v53 = *((void *)v33 + 2);
      uint64_t v52 = *((void *)v33 + 3);
      if (v49 == *(void *)v33 && v48 == *((void *)v33 + 1))
      {
        swift_bridgeObjectRelease_n();
LABEL_31:
        if (v50)
        {
          if (!v52) {
            goto LABEL_37;
          }
          if (v51 == v53 && v50 == v52)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v57 & 1) == 0) {
              goto LABEL_38;
            }
          }
        }
        else if (v52)
        {
          goto LABEL_37;
        }
LABEL_21:
        sub_1000F80E8((uint64_t)v32, type metadata accessor for SettingsURLDestination.Action);
        char v34 = 1;
        return v34 & 1;
      }
      char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v55) {
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
LABEL_37:
      swift_bridgeObjectRelease();
LABEL_38:
      sub_1000F80E8((uint64_t)v32, type metadata accessor for SettingsURLDestination.Action);
LABEL_28:
      char v34 = 0;
      return v34 & 1;
    case 6u:
      if (swift_getEnumCaseMultiPayload() == 6) {
        goto LABEL_21;
      }
      goto LABEL_27;
    default:
      sub_10003E028((uint64_t)v32, (uint64_t)v28, type metadata accessor for SettingsURLDestination.Action);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_27;
      }
      char v34 = *v28 == *v33;
      goto LABEL_12;
  }
}

uint64_t sub_1000F8E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v20 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  char v16 = static URL.== infix(_:_:)();
  sub_10003E028(a1, (uint64_t)v15, type metadata accessor for SettingsURLDestination);
  sub_10003E028(a2, (uint64_t)v13, type metadata accessor for SettingsURLDestination);
  if ((v16 & 1) == 0)
  {
    sub_1000F80E8((uint64_t)v13, type metadata accessor for SettingsURLDestination);
    sub_1000F80E8((uint64_t)v15, type metadata accessor for SettingsURLDestination);
    sub_10003E028(a1, (uint64_t)v10, type metadata accessor for SettingsURLDestination);
    sub_10003E028(a2, (uint64_t)v7, type metadata accessor for SettingsURLDestination);
    goto LABEL_5;
  }
  char v17 = sub_1000F86B8((uint64_t)&v15[*(int *)(v4 + 20)], (uint64_t)&v13[*(int *)(v4 + 20)]);
  sub_1000F80E8((uint64_t)v13, type metadata accessor for SettingsURLDestination);
  sub_1000F80E8((uint64_t)v15, type metadata accessor for SettingsURLDestination);
  sub_10003E028(a1, (uint64_t)v10, type metadata accessor for SettingsURLDestination);
  sub_10003E028(a2, (uint64_t)v7, type metadata accessor for SettingsURLDestination);
  if ((v17 & 1) == 0)
  {
LABEL_5:
    char v18 = 0;
    goto LABEL_6;
  }
  char v18 = sub_1000B7B70(*(void *)&v10[*(int *)(v4 + 24)], *(void *)&v7[*(int *)(v4 + 24)]);
LABEL_6:
  sub_1000F80E8((uint64_t)v10, type metadata accessor for SettingsURLDestination);
  sub_1000F80E8((uint64_t)v7, type metadata accessor for SettingsURLDestination);
  return v18 & 1;
}

uint64_t sub_1000F90B8(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100164A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1000F9118(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100046B9C(&qword_10015F750);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      uint64_t v12 = (int *)type metadata accessor for SettingsURLDestination(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = (uint64_t *)((char *)a1 + v13);
      uint64_t v15 = (uint64_t *)((char *)a2 + v13);
      uint64_t v33 = type metadata accessor for SettingsURLDestination.Action(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = type metadata accessor for PrimarySettingsListItemIdentifier();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
              uint64_t v17 = type metadata accessor for FLFollowUpInformation();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
              goto LABEL_14;
            case 2u:
              uint64_t v21 = type metadata accessor for FLFollowUpInformation();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
              uint64_t v22 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
              uint64_t v23 = (void *)((char *)v14 + v22);
              uint64_t v24 = (void *)((char *)v15 + v22);
              uint64_t v25 = v24[1];
              void *v23 = *v24;
              v23[1] = v25;
              swift_bridgeObjectRetain();
              goto LABEL_14;
            case 3u:
            case 4u:
            case 5u:
              uint64_t v26 = v15[1];
              *uint64_t v14 = *v15;
              v14[1] = v26;
              swift_bridgeObjectRetain();
LABEL_14:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
              break;
          }
          goto LABEL_15;
        case 2u:
        case 3u:
        case 4u:
          v11(v14, v15, v10);
          goto LABEL_15;
        case 5u:
          uint64_t v18 = v15[1];
          *uint64_t v14 = *v15;
          v14[1] = v18;
          uint64_t v19 = v15[2];
          uint64_t v20 = v15[3];
          v14[2] = v19;
          v14[3] = v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v33 - 8) + 64));
          break;
      }
      *(uint64_t *)((char *)a1 + v12[6]) = *(uint64_t *)((char *)a2 + v12[6]);
      uint64_t v27 = v12[7];
      uint64_t v28 = (uint64_t *)((char *)a1 + v27);
      uint64_t v29 = (uint64_t *)((char *)a2 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      uint64_t v31 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1000F95F4(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015F750);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for URL();
    int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
    uint64_t v6 = a1 + *(int *)(type metadata accessor for SettingsURLDestination(0) + 20);
    type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v7 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
            break;
          case 2u:
            uint64_t v8 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
            sub_100046B9C(&qword_10015F7F8);
            goto LABEL_8;
          case 3u:
          case 4u:
          case 5u:
            goto LABEL_8;
          default:
            goto LABEL_9;
        }
        break;
      case 2u:
      case 3u:
      case 4u:
        v5(v6, v4);
        break;
      case 5u:
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1000F9860(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F750);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    uint64_t v10 = (int *)type metadata accessor for SettingsURLDestination(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v31 = type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v15 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
            goto LABEL_12;
          case 2u:
            uint64_t v19 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
            uint64_t v20 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
            uint64_t v21 = &v12[v20];
            uint64_t v22 = &v13[v20];
            uint64_t v23 = *((void *)v22 + 1);
            *(void *)uint64_t v21 = *(void *)v22;
            *((void *)v21 + 1) = v23;
            swift_bridgeObjectRetain();
            goto LABEL_12;
          case 3u:
          case 4u:
          case 5u:
            uint64_t v24 = *((void *)v13 + 1);
            *(void *)uint64_t v12 = *(void *)v13;
            *((void *)v12 + 1) = v24;
            swift_bridgeObjectRetain();
LABEL_12:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
            break;
        }
        goto LABEL_13;
      case 2u:
      case 3u:
      case 4u:
        v9(v12, v13, v8);
        goto LABEL_13;
      case 5u:
        uint64_t v16 = *((void *)v13 + 1);
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = v16;
        uint64_t v17 = *((void *)v13 + 2);
        uint64_t v18 = *((void *)v13 + 3);
        *((void *)v12 + 2) = v17;
        *((void *)v12 + 3) = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v12, v13, *(void *)(*(void *)(v31 - 8) + 64));
        break;
    }
    *(void *)&a1[v10[6]] = *(void *)&a2[v10[6]];
    uint64_t v25 = v10[7];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_1000F9D00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F750);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      uint64_t v13 = (int *)type metadata accessor for SettingsURLDestination(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v45 = type metadata accessor for SettingsURLDestination.Action(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = type metadata accessor for PrimarySettingsListItemIdentifier();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
              uint64_t v18 = type metadata accessor for FLFollowUpInformation();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
              goto LABEL_22;
            case 2u:
              uint64_t v29 = type metadata accessor for FLFollowUpInformation();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v15, v16, v29);
              uint64_t v30 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
              uint64_t v31 = &v15[v30];
              uint64_t v32 = &v16[v30];
              *(void *)uint64_t v31 = *(void *)v32;
              *((void *)v31 + 1) = *((void *)v32 + 1);
              swift_bridgeObjectRetain();
              goto LABEL_22;
            case 3u:
            case 4u:
            case 5u:
              *(void *)uint64_t v15 = *(void *)v16;
              *((void *)v15 + 1) = *((void *)v16 + 1);
              swift_bridgeObjectRetain();
LABEL_22:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
              break;
          }
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
          v12(v15, v16, v11);
          goto LABEL_23;
        case 5u:
          *(void *)uint64_t v15 = *(void *)v16;
          *((void *)v15 + 1) = *((void *)v16 + 1);
          *((void *)v15 + 2) = *((void *)v16 + 2);
          *((void *)v15 + 3) = *((void *)v16 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v15, v16, *(void *)(*(void *)(v45 - 8) + 64));
          break;
      }
      *(void *)&a1[v13[6]] = *(void *)&a2[v13[6]];
      uint64_t v33 = v13[7];
      char v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      *(void *)char v34 = *(void *)v35;
      *((void *)v34 + 1) = *((void *)v35 + 1);
      uint64_t v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(a1, 0, 1, v6);
      return a1;
    }
LABEL_8:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10003F5D0((uint64_t)a1, &qword_10015F750);
    goto LABEL_8;
  }
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(a1, a2, v19);
  uint64_t v21 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v22 = v21;
  if (a1 != a2)
  {
    uint64_t v23 = *(int *)(v21 + 20);
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    sub_1000FC1B4((uint64_t)&a1[v23], type metadata accessor for SettingsURLDestination.Action);
    uint64_t v26 = type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = type metadata accessor for PrimarySettingsListItemIdentifier();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
            uint64_t v28 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
            goto LABEL_28;
          case 2u:
            uint64_t v37 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v24, v25, v37);
            uint64_t v38 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
            char v39 = &v24[v38];
            uint64_t v40 = &v25[v38];
            *(void *)char v39 = *(void *)v40;
            *((void *)v39 + 1) = *((void *)v40 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_28;
          case 3u:
          case 4u:
          case 5u:
            *(void *)uint64_t v24 = *(void *)v25;
            *((void *)v24 + 1) = *((void *)v25 + 1);
            swift_bridgeObjectRetain();
LABEL_28:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
            break;
        }
        goto LABEL_29;
      case 2u:
      case 3u:
      case 4u:
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v25, v19);
        goto LABEL_29;
      case 5u:
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        *((void *)v24 + 2) = *((void *)v25 + 2);
        *((void *)v24 + 3) = *((void *)v25 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_29:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        break;
    }
  }
  *(void *)&a1[*(int *)(v22 + 24)] = *(void *)&a2[*(int *)(v22 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(int *)(v22 + 28);
  char v42 = &a1[v41];
  char v43 = &a2[v41];
  *(void *)char v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1000FA648(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F750);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v8 = type metadata accessor for URL();
  int v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(a1, a2, v8);
  uint64_t v23 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v10 = *(int *)(v23 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for SettingsURLDestination.Action(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = type metadata accessor for PrimarySettingsListItemIdentifier();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v19 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v11, v12, v19);
        uint64_t v20 = sub_100046B9C(&qword_10015F7F8);
        *(_OWORD *)&v11[*(int *)(v20 + 48)] = *(_OWORD *)&v12[*(int *)(v20 + 48)];
LABEL_13:
        swift_storeEnumTagMultiPayload();
        uint64_t v17 = v23;
        goto LABEL_15;
      }
      uint64_t v16 = v11;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v21 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v11, v12, v21);
        goto LABEL_13;
      }
      uint64_t v17 = v23;
      if (EnumCaseMultiPayload)
      {
        memcpy(v16, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v18 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v12, v18);
        swift_storeEnumTagMultiPayload();
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
LABEL_16:
      *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&a2[*(int *)(v17 + 24)];
      *(_OWORD *)&a1[*(int *)(v17 + 28)] = *(_OWORD *)&a2[*(int *)(v17 + 28)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    case 2u:
    case 3u:
    case 4u:
      v9(v11, v12, v8);
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    default:
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_10:
      uint64_t v17 = v23;
      goto LABEL_16;
  }
}

char *sub_1000FAA34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F750);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(a1, a2, v11);
      uint64_t v42 = type metadata accessor for SettingsURLDestination(0);
      uint64_t v13 = *(int *)(v42 + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = type metadata accessor for SettingsURLDestination.Action(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = type metadata accessor for PrimarySettingsListItemIdentifier();
          unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v32 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v14, v15, v32);
            uint64_t v33 = sub_100046B9C(&qword_10015F7F8);
            *(_OWORD *)&v14[*(int *)(v33 + 48)] = *(_OWORD *)&v15[*(int *)(v33 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload > 1)
          {
            memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            uint64_t v19 = type metadata accessor for FLFollowUpInformation();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v14, v15, v19);
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v31 = v42;
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
        case 3u:
        case 4u:
          v12(v14, v15, v11);
          swift_storeEnumTagMultiPayload();
          goto LABEL_17;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_17:
          uint64_t v31 = v42;
          break;
      }
      *(void *)&a1[*(int *)(v31 + 24)] = *(void *)&a2[*(int *)(v31 + 24)];
      *(_OWORD *)&a1[*(int *)(v31 + 28)] = *(_OWORD *)&a2[*(int *)(v31 + 28)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_9:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10003F5D0((uint64_t)a1, &qword_10015F750);
    goto LABEL_9;
  }
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(a1, a2, v20);
  uint64_t v22 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v23 = v22;
  if (a1 != a2)
  {
    uint64_t v24 = *(int *)(v22 + 20);
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    sub_1000FC1B4((uint64_t)&a1[v24], type metadata accessor for SettingsURLDestination.Action);
    uint64_t v27 = type metadata accessor for SettingsURLDestination.Action(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v28 = type metadata accessor for PrimarySettingsListItemIdentifier();
        unsigned int v29 = swift_getEnumCaseMultiPayload();
        if (v29 == 2)
        {
          uint64_t v34 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v25, v26, v34);
          uint64_t v35 = sub_100046B9C(&qword_10015F7F8);
          *(_OWORD *)&v25[*(int *)(v35 + 48)] = *(_OWORD *)&v26[*(int *)(v35 + 48)];
          swift_storeEnumTagMultiPayload();
        }
        else if (v29 > 1)
        {
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v30 = type metadata accessor for FLFollowUpInformation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_26;
      case 2u:
      case 3u:
      case 4u:
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v26, v20);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
        break;
    }
  }
  *(void *)&a1[*(int *)(v23 + 24)] = *(void *)&a2[*(int *)(v23 + 24)];
  swift_bridgeObjectRelease();
  uint64_t v36 = *(int *)(v23 + 28);
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v40 = *(void *)v38;
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)uint64_t v37 = v40;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000FB188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB19C);
}

uint64_t sub_1000FB19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015F750);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FB20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB220);
}

uint64_t sub_1000FB220(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100046B9C(&qword_10015F750);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1000FB2A4(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015F750);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1000FB310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015F750);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SettingsURLRoute()
{
  uint64_t result = qword_100164AC0;
  if (!qword_100164AC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000FB3D0()
{
  uint64_t result = type metadata accessor for SettingsURLDestination(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000FB448()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SettingsURLDestination(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SettingsURLRoute();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FBE1C(v1, (uint64_t)v7);
  uint64_t v8 = sub_100046B9C(&qword_10015F750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1) {
    return 0x6564726163736964;
  }
  sub_1000FBE80((uint64_t)v7, (uint64_t)v4);
  v12[0] = 0x2064656C646E6168;
  v12[1] = 0xE800000000000000;
  v10._countAndFlagsBits = sub_1000F6F94();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v9 = v12[0];
  sub_1000FC1B4((uint64_t)v4, type metadata accessor for SettingsURLDestination);
  return v9;
}

void sub_1000FB5D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SettingsURLDestination(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SettingsURLRoute();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FBE1C(v1, (uint64_t)v7);
  uint64_t v8 = sub_100046B9C(&qword_10015F750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_1000FBE80((uint64_t)v7, (uint64_t)v4);
    Hasher._combine(_:)(1uLL);
    type metadata accessor for URL();
    sub_1000FBEE4(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    sub_1000F73A8();
    uint64_t v9 = *(void *)&v4[*(int *)(v2 + 24)];
    Swift::UInt v10 = *(void *)(v9 + 16);
    Hasher._combine(_:)(v10);
    if (v10)
    {
      uint64_t v11 = *(void *)(type metadata accessor for URLQueryItem() - 8);
      uint64_t v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v13 = *(void *)(v11 + 72);
      sub_1000FBEE4(&qword_100164A40, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v12 += v13;
        --v10;
      }
      while (v10);
    }
    sub_1000FC1B4((uint64_t)v4, type metadata accessor for SettingsURLDestination);
  }
}

Swift::Int sub_1000FB874()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SettingsURLDestination(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SettingsURLRoute();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_1000FBE1C(v1, (uint64_t)v7);
  uint64_t v8 = sub_100046B9C(&qword_10015F750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_1000FBE80((uint64_t)v7, (uint64_t)v4);
    Hasher._combine(_:)(1uLL);
    type metadata accessor for URL();
    sub_1000FBEE4(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    sub_1000F73A8();
    uint64_t v9 = *(void *)&v4[*(int *)(v2 + 24)];
    Swift::UInt v10 = *(void *)(v9 + 16);
    Hasher._combine(_:)(v10);
    if (v10)
    {
      uint64_t v11 = *(void *)(type metadata accessor for URLQueryItem() - 8);
      uint64_t v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v13 = *(void *)(v11 + 72);
      sub_1000FBEE4(&qword_100164A40, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v12 += v13;
        --v10;
      }
      while (v10);
    }
    sub_1000FC1B4((uint64_t)v4, type metadata accessor for SettingsURLDestination);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1000FBB24()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_1000FBE1C(v1, (uint64_t)v7);
  uint64_t v8 = sub_100046B9C(&qword_10015F750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_1000FBE80((uint64_t)v7, (uint64_t)v5);
    Hasher._combine(_:)(1uLL);
    type metadata accessor for URL();
    sub_1000FBEE4(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    sub_1000F73A8();
    uint64_t v9 = *(void *)&v5[*(int *)(v2 + 24)];
    Swift::UInt v10 = *(void *)(v9 + 16);
    Hasher._combine(_:)(v10);
    if (v10)
    {
      uint64_t v11 = *(void *)(type metadata accessor for URLQueryItem() - 8);
      uint64_t v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      uint64_t v13 = *(void *)(v11 + 72);
      sub_1000FBEE4(&qword_100164A40, (void (*)(uint64_t))&type metadata accessor for URLQueryItem);
      do
      {
        dispatch thunk of Hashable.hash(into:)();
        v12 += v13;
        --v10;
      }
      while (v10);
    }
    sub_1000FC1B4((uint64_t)v5, type metadata accessor for SettingsURLDestination);
  }
  return Hasher._finalize()();
}

uint64_t sub_1000FBDD4()
{
  return sub_1000FBEE4(&qword_100164AD0, (void (*)(uint64_t))type metadata accessor for SettingsURLRoute);
}

uint64_t sub_1000FBE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsURLRoute();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FBE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsURLDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FBEE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FBF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsURLDestination(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SettingsURLRoute();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100164AD8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1000FBE1C(a1, (uint64_t)v13);
  sub_1000FBE1C(a2, v14);
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  if (v16((uint64_t)v13, 1, v15) != 1)
  {
    sub_1000FBE1C((uint64_t)v13, (uint64_t)v9);
    if (v16(v14, 1, v15) != 1)
    {
      sub_1000FBE80(v14, (uint64_t)v6);
      char v17 = sub_1000F721C((uint64_t)v9, (uint64_t)v6);
      sub_1000FC1B4((uint64_t)v6, type metadata accessor for SettingsURLDestination);
      sub_1000FC1B4((uint64_t)v9, type metadata accessor for SettingsURLDestination);
      sub_1000FC1B4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SettingsURLRoute);
      return v17 & 1;
    }
    sub_1000FC1B4((uint64_t)v9, type metadata accessor for SettingsURLDestination);
    goto LABEL_6;
  }
  if (v16(v14, 1, v15) != 1)
  {
LABEL_6:
    sub_10003F5D0((uint64_t)v13, &qword_100164AD8);
    char v17 = 0;
    return v17 & 1;
  }
  sub_1000FC1B4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SettingsURLRoute);
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_1000FC1B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000FC214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v219 = a1;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v3 - 8);
  uint64_t v206 = &v189[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v210 = &v189[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v221 = type metadata accessor for URLQueryItem();
  unint64_t v218 = *(void *)(v221 - 8);
  uint64_t v8 = __chkstk_darwin(v221);
  unint64_t v204 = (long long *)&v189[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v203 = (long long *)&v189[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v213 = &v189[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  v211 = &v189[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v209 = &v189[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v214 = (long long *)&v189[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v212 = &v189[-v21];
  __chkstk_darwin(v20);
  uint64_t v23 = &v189[-v22];
  uint64_t v24 = sub_100046B9C((uint64_t *)&unk_100164080);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v208 = &v189[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  v217 = (long long *)&v189[-v27];
  uint64_t v28 = sub_100046B9C(&qword_100164AE0);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v207 = &v189[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = &v189[-v32];
  __chkstk_darwin(v31);
  uint64_t v35 = &v189[-v34];
  uint64_t v36 = type metadata accessor for URL();
  uint64_t v220 = *(void *)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v216 = (uint64_t)&v189[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v205 = &v189[-v40];
  __chkstk_darwin(v39);
  uint64_t v42 = &v189[-v41];
  uint64_t v43 = URL.scheme.getter();
  if (!v44) {
    goto LABEL_8;
  }
  if (v43 == 0x7366657270 && v44 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0)
  {
LABEL_8:
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_1000477B0(v48, (uint64_t)qword_10016AFF8);
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "URL transformation not needed.", v51, 2u);
      swift_slowDealloc();
    }

    uint64_t v52 = v219;
    uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 16);
    return v53(v52, v2, v36);
  }
LABEL_6:
  sub_1000FF4BC((uint64_t)v42);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  sub_1000FE1B0((uint64_t)v35, (uint64_t)v33);
  uint64_t v195 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48);
  int v46 = v195(v33, 1, v5);
  uint64_t v198 = v5;
  uint64_t v202 = v35;
  long long v201 = v42;
  uint64_t v197 = v6;
  uint64_t v196 = v6 + 48;
  if (v46 == 1)
  {
    sub_10003F5D0((uint64_t)v33, &qword_100164AE0);
    char v47 = (void *)v218;
  }
  else
  {
    char v55 = (void *)URLComponents.queryItems.getter();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v33, v5);
    char v47 = (void *)v218;
    if (v55) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  char v55 = _swiftEmptyArrayStorage;
LABEL_17:
  unint64_t v227 = (unint64_t)v55;
  uint64_t v56 = v55[2];
  uint64_t v57 = v221;
  uint64_t v215 = v1;
  if (v56)
  {
    long long v200 = (void (*)(unsigned char *, uint64_t))v36;
    uint64_t v60 = (void (*)(unsigned char *, char *, uint64_t))v47[2];
    char v59 = v47 + 2;
    uint64_t v58 = v60;
    uint64_t v61 = (char *)v55 + ((*((unsigned __int8 *)v59 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v59 + 64));
    uint64_t v62 = v55;
    uint64_t v63 = v59[7];
    unint64_t v199 = (void (*)(unsigned char *, uint64_t))v62;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      v58(v23, v61, v57);
      if (URLQueryItem.name.getter() == 1953460082 && v64 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v65) {
        break;
      }
      uint64_t v57 = v221;
      ((void (*)(unsigned char *, uint64_t))*(v59 - 1))(v23, v221);
      v61 += v63;
      if (!--v56)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v215;
        uint64_t v36 = (uint64_t)v200;
        char v47 = (void *)v218;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = v221;
LABEL_28:
    unint64_t v67 = v217;
    char v47 = (void *)v218;
    (*(void (**)(long long *, unsigned char *, uint64_t))(v218 + 32))(v217, v23, v57);
    unint64_t v66 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47[7];
    v66((uint64_t)v67, 0, 1, v57);
    uint64_t v2 = v215;
    uint64_t v36 = (uint64_t)v200;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_25:
    unint64_t v66 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47[7];
    unint64_t v67 = v217;
    v66((uint64_t)v217, 1, 1, v57);
  }
  swift_bridgeObjectRelease();
  unint64_t v68 = (unsigned int (*)(long long *, uint64_t, uint64_t))v47[6];
  if (v68(v67, 1, v57) == 1)
  {
    unint64_t v69 = (uint64_t *)&unk_100164080;
    os_log_t v70 = v67;
LABEL_31:
    sub_10003F5D0((uint64_t)v70, v69);
LABEL_46:
    uint64_t v82 = v216;
    swift_bridgeObjectRelease();
    if (qword_10015F158 != -1) {
      swift_once();
    }
    uint64_t v83 = type metadata accessor for Logger();
    sub_1000477B0(v83, (uint64_t)qword_10016AFF8);
    char v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 16);
    v84(v82, v2, v36);
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc();
      uint64_t v221 = (uint64_t)v84;
      uint64_t v88 = v36;
      uint64_t v89 = v87;
      v224[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 141558275;
      *(void *)&long long v225 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v89 + 12) = 2081;
      sub_1000FE218();
      uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v225 = sub_100042948(v90, v91, v224);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      char v92 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
      v220 += 8;
      v92(v82, v88);
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "Failed to resolve specifier identifier to transform URL %{private,mask.hash}s into a settings-navigation URL.", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v36 = v88;
      char v84 = (void (*)(uint64_t, uint64_t, uint64_t))v221;
      swift_slowDealloc();

      sub_10003F5D0((uint64_t)v202, &qword_100164AE0);
      v92((uint64_t)v201, v36);
    }
    else
    {

      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
      v220 += 8;
      v93(v82, v36);
      sub_10003F5D0((uint64_t)v202, &qword_100164AE0);
      v93((uint64_t)v201, v36);
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v84)(v219, v215, v36);
  }
  uint64_t v71 = URLQueryItem.value.getter();
  unint64_t v73 = v72;
  uint64_t v74 = (void (*)(unsigned char *, uint64_t))v47[1];
  v217 = (long long *)(v47 + 1);
  unint64_t v199 = v74;
  v74(v67, v57);
  if (!v73) {
    goto LABEL_46;
  }
  uint64_t v75 = HIBYTE(v73) & 0xF;
  if ((v73 & 0x2000000000000000) == 0) {
    uint64_t v75 = v71 & 0xFFFFFFFFFFFFLL;
  }
  if (!v75) {
    goto LABEL_45;
  }
  uint64_t v194 = v66;
  long long v200 = (void (*)(unsigned char *, uint64_t))v36;
  NSString v76 = String._bridgeToObjectiveC()();
  id v77 = (id)SFObjectAndOffsetForURLPair();

  uint64_t v78 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v222 = 0x7463656A626FLL;
  unint64_t v223 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v78 + 16) && (unint64_t v79 = sub_1000619E0((uint64_t)v224), (v80 & 1) != 0))
  {
    sub_100061984(*(void *)(v78 + 56) + 32 * v79, (uint64_t)&v225);
  }
  else
  {
    long long v225 = 0u;
    long long v226 = 0u;
  }
  uint64_t v36 = (uint64_t)v200;
  swift_bridgeObjectRelease();
  sub_100061AEC((uint64_t)v224);
  if (!*((void *)&v226 + 1))
  {
    swift_bridgeObjectRelease();
    unint64_t v69 = &qword_1001609A0;
    os_log_t v70 = &v225;
    goto LABEL_31;
  }
  if ((swift_dynamicCast() & 1) == 0 || (int v81 = sub_1000F43F8(), v81 == 74))
  {
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  int v94 = v81;
  URLComponents.init()();
  URLComponents.scheme.setter();
  char v95 = sub_1000F3F98(v94);
  sub_10010177C(v95);
  URLComponents.host.setter();
  uint64_t v96 = sub_1000F3FAC(v94);
  v224[0] = (uint64_t)&off_100150C48;
  sub_1000D6B08((uint64_t)v96);
  uint64_t v193 = (char *)v224[0];
  unint64_t v97 = sub_10010177C(v95);
  uint64_t v191 = v71;
  unint64_t v192 = v73;
  int v190 = v94;
  if (v97 == 0xD000000000000017 && v98 == 0x8000000100122B50)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v99 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v99 & 1) == 0)
    {
LABEL_61:
      uint64_t v105 = v221;
      goto LABEL_62;
    }
  }
  unint64_t v100 = sub_1000F4014(v94);
  if (!v101) {
    goto LABEL_61;
  }
  unint64_t v102 = (unsigned char *)v100;
  unint64_t v103 = v101;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v105 = v221;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_180:
  }
    uint64_t v193 = sub_100027268(0, *((void *)v193 + 2) + 1, 1, v193);
  unint64_t v107 = *((void *)v193 + 2);
  unint64_t v106 = *((void *)v193 + 3);
  if (v107 >= v106 >> 1) {
    uint64_t v193 = sub_100027268((char *)(v106 > 1), v107 + 1, 1, v193);
  }
  uint64_t v108 = v193;
  *((void *)v193 + 2) = v107 + 1;
  uint64_t v109 = &v108[16 * v107];
  *((void *)v109 + 4) = v102;
  *((void *)v109 + 5) = v103;
LABEL_62:
  uint64_t v110 = *(void *)(v227 + 16);
  uint64_t v111 = v212;
  if (v110)
  {
    unint64_t v112 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v218 + 16);
    unint64_t v113 = v227 + ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80));
    uint64_t v114 = *(void *)(v218 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      v112(v111, v113, v105);
      if (URLQueryItem.name.getter() == 1752457584 && v115 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v118 = (unint64_t)v202;
        goto LABEL_73;
      }
      char v116 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v116) {
        break;
      }
      uint64_t v111 = v212;
      uint64_t v105 = v221;
      v199(v212, v221);
      v113 += v114;
      if (!--v110)
      {
        swift_bridgeObjectRelease();
        uint64_t v117 = 1;
        uint64_t v2 = v215;
        goto LABEL_70;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v118 = (unint64_t)v202;
    uint64_t v105 = v221;
LABEL_73:
    uint64_t v119 = (uint64_t)v208;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v218 + 32))(v208, v212, v105);
    uint64_t v117 = 0;
    uint64_t v2 = v215;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v117 = 1;
LABEL_70:
    unint64_t v118 = (unint64_t)v202;
    uint64_t v119 = (uint64_t)v208;
  }
  v194(v119, v117, 1, v105);
  swift_bridgeObjectRelease();
  if (v68((long long *)v119, 1, v105) != 1)
  {
    unint64_t v120 = v2;
    uint64_t v2 = URLQueryItem.value.getter();
    unint64_t v103 = v121;
    v199((unsigned char *)v119, v105);
    if (!v103) {
      goto LABEL_96;
    }
    uint64_t v122 = HIBYTE(v103) & 0xF;
    if ((v103 & 0x2000000000000000) == 0) {
      uint64_t v122 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (!v122)
    {
      swift_bridgeObjectRelease();
      goto LABEL_96;
    }
    if (sub_1000F3778(v190) == 0x6C6172656E6547 && v123 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v124 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v124 & 1) == 0) {
        goto LABEL_92;
      }
    }
    v125._object = (void *)0x800000010012B150;
    v125._countAndFlagsBits = 0xD000000000000017;
    if (String.hasPrefix(_:)(v125))
    {
      if (qword_10015F158 != -1) {
        swift_once();
      }
      uint64_t v126 = type metadata accessor for Logger();
      sub_1000477B0(v126, (uint64_t)qword_10016AFF8);
      swift_bridgeObjectRetain_n();
      NSString v127 = Logger.logObject.getter();
      os_log_type_t v128 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v127, v128))
      {
        uint64_t v129 = swift_slowAlloc();
        uint64_t v216 = swift_slowAlloc();
        v224[0] = v216;
        *(_DWORD *)uint64_t v129 = 141558275;
        *(void *)&long long v225 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v129 + 12) = 2081;
        swift_bridgeObjectRetain();
        *(void *)&long long v225 = sub_100042948(v2, v103, v224);
        uint64_t v105 = v221;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v127, v128, "Replaced About/WARRANTY_COVERAGE with COVERAGE in path: %{private,mask.hash}s", (uint8_t *)v129, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v224[0] = v2;
      v224[1] = v103;
      *(void *)&long long v225 = 0xD000000000000017;
      *((void *)&v225 + 1) = 0x800000010012B150;
      uint64_t v222 = 0x4547415245564F43;
      unint64_t v223 = 0xE800000000000000;
      sub_100030C58();
      uint64_t v2 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      unint64_t v131 = v130;
      swift_bridgeObjectRelease();
      unint64_t v103 = v131;
    }
LABEL_92:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_186;
    }
    goto LABEL_93;
  }
  sub_10003F5D0(v119, (uint64_t *)&unk_100164080);
LABEL_97:
  v224[0] = (uint64_t)v193;
  swift_bridgeObjectRetain();
  sub_100046B9C(&qword_100164810);
  sub_10005A4C0();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  int v136 = v210;
  URLComponents.path.setter();
  uint64_t v137 = *(void *)(v227 + 16);
  uint64_t v138 = (long long *)v209;
  if (!v137)
  {
    int64_t v146 = 0;
    goto LABEL_143;
  }
  unint64_t v68 = *(unsigned int (**)(long long *, uint64_t, uint64_t))(v218 + 16);
  uint64_t v2 = (*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80);
  uint64_t v216 = *(void *)(v218 + 72);
  uint64_t v139 = swift_bridgeObjectRetain();
  unint64_t v118 = 0;
  uint64_t v208 = (unsigned char *)v2;
  uint64_t v212 = (unsigned char *)v139;
  uint64_t v140 = (long long *)v199;
  do
  {
    v68(v214, v139 + v2, v105);
    if (URLQueryItem.name.getter() == 1953460082 && v141 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      v68(v138, (uint64_t)v214, v105);
      goto LABEL_110;
    }
    char v142 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v68(v138, (uint64_t)v214, v105);
    if (v142) {
      goto LABEL_110;
    }
    if (URLQueryItem.name.getter() == 1752457584 && v143 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_110:
      uint64_t v147 = v221;
      uint64_t v140 = (long long *)v199;
      v199(v138, v221);
      ((void (*)(long long *, uint64_t))v140)(v214, v147);
LABEL_111:
      swift_bridgeObjectRelease();
      int64_t v146 = v118 + 1;
      if (__OFADD__(v118, 1)) {
        goto LABEL_178;
      }
      unint64_t v148 = v227;
      unint64_t v149 = *(void *)(v227 + 16);
      uint64_t v140 = (long long *)v211;
      if (v146 == v149)
      {
        uint64_t v137 = v118;
        goto LABEL_114;
      }
      uint64_t v105 = v216 + v2;
      unint64_t v103 = v118 + 1;
      v218 += 40;
      uint64_t v2 = v215;
      while (1)
      {
        if (v103 >= v149)
        {
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        v68(v140, v148 + v105, v221);
        if (URLQueryItem.name.getter() == 1953460082 && v150 == 0xE400000000000000) {
          break;
        }
        char v153 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v151 = v213;
        uint64_t v152 = v221;
        v68((long long *)v213, (uint64_t)v140, v221);
        if (v153) {
          goto LABEL_124;
        }
        if (URLQueryItem.name.getter() == 1752457584 && v154 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          uint64_t v152 = v221;
          uint64_t v151 = v213;
          uint64_t v140 = (long long *)v211;
          goto LABEL_124;
        }
        char v156 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v157 = v221;
        unint64_t v102 = v217;
        unint64_t v120 = (unint64_t)v199;
        v199(v213, v221);
        ((void (*)(long long *, uint64_t))v120)((long long *)v211, v157);
        if (v156)
        {
          uint64_t v140 = (long long *)v211;
        }
        else
        {
          uint64_t v140 = (long long *)v211;
          if (v103 != v118)
          {
            if ((v118 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              uint64_t v193 = sub_100027268(0, *((void *)v193 + 2) + 1, 1, v193);
LABEL_93:
              unint64_t v133 = *((void *)v193 + 2);
              unint64_t v132 = *((void *)v193 + 3);
              if (v133 >= v132 >> 1) {
                uint64_t v193 = sub_100027268((char *)(v132 > 1), v133 + 1, 1, v193);
              }
              unint64_t v134 = v193;
              *((void *)v193 + 2) = v133 + 1;
              uint64_t v135 = &v134[16 * v133];
              *((void *)v135 + 4) = v2;
              *((void *)v135 + 5) = v103;
LABEL_96:
              uint64_t v2 = v120;
              goto LABEL_97;
            }
            unint64_t v158 = v227;
            unint64_t v159 = *(void *)(v227 + 16);
            if (v118 >= v159) {
              goto LABEL_182;
            }
            unint64_t v120 = v118 * v216;
            uint64_t v160 = v221;
            v68(v203, (uint64_t)&v208[v227 + v118 * v216], v221);
            if (v103 >= v159) {
              goto LABEL_183;
            }
            v68(v204, v158 + v105, v160);
            char v161 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v227 = v158;
            uint64_t v140 = (long long *)v211;
            if ((v161 & 1) == 0)
            {
              unint64_t v158 = sub_1000E6D20(v158);
              unint64_t v227 = v158;
            }
            if (v118 >= *(void *)(v158 + 16)) {
              goto LABEL_184;
            }
            unint64_t v162 = &v208[v158 + v120];
            uint64_t v163 = *(void (**)(unint64_t, unsigned char *, unsigned char *))v218;
            unint64_t v102 = (unsigned char *)v221;
            unint64_t v120 = v218;
            (*(void (**)(unsigned char *, long long *, uint64_t))v218)(v162, v204, v221);
            if (v103 >= *(void *)(v227 + 16)) {
              goto LABEL_185;
            }
            v163(v227 + v105, v203, v102);
          }
          if (__OFADD__(v118++, 1))
          {
            __break(1u);
            goto LABEL_180;
          }
        }
LABEL_125:
        int64_t v146 = v103 + 1;
        if (__OFADD__(v103, 1)) {
          goto LABEL_176;
        }
        unint64_t v148 = v227;
        unint64_t v149 = *(void *)(v227 + 16);
        ++v103;
        v105 += v216;
        if (v146 == v149)
        {
          uint64_t v137 = v118;
          goto LABEL_142;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v151 = v213;
      uint64_t v152 = v221;
      v68((long long *)v213, (uint64_t)v140, v221);
LABEL_124:
      uint64_t v155 = (void (*)(void, uint64_t))v199;
      v199(v151, v152);
      v155(v140, v152);
      goto LABEL_125;
    }
    char v144 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v145 = v221;
    ((void (*)(long long *, uint64_t))v140)(v138, v221);
    ((void (*)(long long *, uint64_t))v140)(v214, v145);
    if (v144) {
      goto LABEL_111;
    }
    ++v118;
    v2 += v216;
    uint64_t v105 = v221;
    uint64_t v139 = (uint64_t)v212;
  }
  while (v137 != v118);
  swift_bridgeObjectRelease();
  int64_t v146 = *(void *)(v227 + 16);
LABEL_114:
  uint64_t v2 = v215;
LABEL_142:
  unint64_t v118 = (unint64_t)v202;
  int v136 = v210;
  if (v146 < v137)
  {
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
LABEL_143:
  sub_1000E71B0(v137, v146);
  swift_bridgeObjectRelease();
  if (*(void *)(v227 + 16)) {
    URLComponents.queryItems.setter();
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v165 = v219;
  unint64_t v166 = v207;
  sub_1000FE1B0(v118, (uint64_t)v207);
  uint64_t v167 = v198;
  if (v195(v166, 1, v198) == 1)
  {
    sub_10003F5D0((uint64_t)v166, &qword_100164AE0);
LABEL_154:
    NSString v173 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v174 = (id)SFObjectAndOffsetForURLPair();

    uint64_t v175 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v222 = 0x744974657366666FLL;
    unint64_t v223 = 0xEA00000000006D65;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v175 + 16))
    {
      unint64_t v176 = sub_1000619E0((uint64_t)v224);
      uint64_t v172 = (uint64_t)v206;
      if (v177)
      {
        sub_100061984(*(void *)(v175 + 56) + 32 * v176, (uint64_t)&v225);
      }
      else
      {
        long long v225 = 0u;
        long long v226 = 0u;
      }
      uint64_t v140 = (long long *)v200;
    }
    else
    {
      long long v225 = 0u;
      long long v226 = 0u;
      uint64_t v140 = (long long *)v200;
      uint64_t v172 = (uint64_t)v206;
    }
    swift_bridgeObjectRelease();
    sub_100061AEC((uint64_t)v224);
    if (*((void *)&v226 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v178 = HIBYTE(v223) & 0xF;
        if ((v223 & 0x2000000000000000) == 0) {
          uint64_t v178 = v222 & 0xFFFFFFFFFFFFLL;
        }
        if (v178) {
          URLComponents.fragment.setter();
        }
        else {
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      sub_10003F5D0((uint64_t)&v225, &qword_1001609A0);
    }
  }
  else
  {
    uint64_t v168 = URLComponents.fragment.getter();
    unint64_t v170 = v169;
    (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v166, v167);
    if (!v170) {
      goto LABEL_154;
    }
    uint64_t v171 = HIBYTE(v170) & 0xF;
    if ((v170 & 0x2000000000000000) == 0) {
      uint64_t v171 = v168 & 0xFFFFFFFFFFFFLL;
    }
    if (!v171)
    {
      swift_bridgeObjectRelease();
      goto LABEL_154;
    }
    swift_bridgeObjectRelease();
    URLComponents.fragment.setter();
    uint64_t v140 = (long long *)v200;
    uint64_t v172 = (uint64_t)v206;
  }
  URLComponents.url.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, long long *))(v220 + 48))(v172, 1, v140) == 1)
  {
    sub_10003F5D0(v172, (uint64_t *)&unk_100163C10);
    if (qword_10015F158 != -1) {
LABEL_179:
    }
      swift_once();
    uint64_t v179 = type metadata accessor for Logger();
    sub_1000477B0(v179, (uint64_t)qword_10016AFF8);
    uint64_t v180 = *(void (**)(unsigned char *, uint64_t, void (*)(void, void)))(v220 + 16);
    uint64_t v181 = v205;
    v180(v205, v2, (void (*)(void, void))v140);
    uint64_t v182 = Logger.logObject.getter();
    os_log_type_t v183 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v182, v183))
    {
      uint64_t v184 = swift_slowAlloc();
      v224[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v184 = 141558275;
      *(void *)&long long v225 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v184 + 12) = 2081;
      sub_1000FE218();
      uint64_t v185 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v225 = sub_100042948(v185, v186, v224);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v187 = *(void (**)(unsigned char *, void))(v220 + 8);
      v220 += 8;
      v187(v181, (long long *)v200);
      _os_log_impl((void *)&_mh_execute_header, v182, v183, "Failed to transform URL %{private,mask.hash}s into a settings-navigation URL.", (uint8_t *)v184, 0x16u);
      swift_arrayDestroy();
      uint64_t v2 = v215;
      swift_slowDealloc();
      uint64_t v140 = (long long *)v200;
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v210, v198);
      sub_10003F5D0((uint64_t)v202, &qword_100164AE0);
      v187(v201, v140);
    }
    else
    {

      uint64_t v188 = *(void (**)(unsigned char *, void))(v220 + 8);
      v220 += 8;
      v188(v181, v140);
      (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v210, v198);
      sub_10003F5D0(v118, &qword_100164AE0);
      v188(v201, v140);
    }
    return ((uint64_t (*)(uint64_t, uint64_t, long long *))v180)(v219, v2, v140);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v136, v198);
    sub_10003F5D0(v118, &qword_100164AE0);
    (*(void (**)(unsigned char *, long long *))(v220 + 8))(v201, v140);
    return (*(uint64_t (**)(uint64_t, uint64_t, long long *))(v220 + 32))(v165, v172, v140);
  }
}

uint64_t sub_1000FE1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100164AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000FE218()
{
  unint64_t result = qword_1001641B0;
  if (!qword_1001641B0)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001641B0);
  }
  return result;
}

uint64_t sub_1000FE270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v92 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v90 = (uint64_t)&v89 - v5;
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v102 = v6;
  uint64_t v103 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v91 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v89 = (uint64_t)&v89 - v10;
  uint64_t v11 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v11 - 8);
  int v94 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for URLQueryItem();
  uint64_t v95 = *(void *)(v100 - 8);
  uint64_t v13 = __chkstk_darwin(v100);
  char v99 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v93 = (char *)&v89 - v15;
  uint64_t v16 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URLComponents();
  uint64_t v97 = *(void *)(v19 - 8);
  uint64_t v98 = v19;
  __chkstk_darwin(v19);
  uint64_t v96 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v89 - v26;
  Swift::Int v28 = sub_10000CC20((uint64_t)&off_1001511E0);
  swift_arrayDestroy();
  uint64_t v29 = URL.scheme.getter();
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v34 = v102;
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    return v35(a1, 1, 1, v34);
  }
  uint64_t v31 = v29;
  uint64_t v32 = v30;
  uint64_t v101 = a1;
  char v33 = sub_100049E90(v29, v30, v28);
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    a1 = v101;
    goto LABEL_8;
  }
  if (v31 == 0x7366657270 && v32 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v37 & 1) == 0)
  {
    sub_1000FF4BC((uint64_t)v25);
    object = URL.host(percentEncoded:)(1).value._object;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    uint64_t v49 = v101;
    uint64_t v50 = v102;
    if (object)
    {
      char v51 = sub_100101D40();
      if (v51 != 45)
      {
        uint64_t v52 = v92;
        sub_1001011A8(v51, v92);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v52, 1, v50) != 1)
        {
          uint64_t v72 = v52;
          uint64_t v73 = v91;
          sub_10004984C(v72, v91);
          sub_10004984C(v73, v49);
          uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
          uint64_t v54 = v49;
          uint64_t v55 = 0;
          goto LABEL_20;
        }
        sub_10003F5D0(v52, (uint64_t *)&unk_100161530);
      }
    }
    uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    uint64_t v54 = v49;
    uint64_t v55 = 1;
LABEL_20:
    uint64_t v56 = v50;
    return v53(v54, v55, 1, v56);
  }
LABEL_12:
  sub_1000FF4BC((uint64_t)v27);
  uint64_t v38 = URL.absoluteString.getter();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
  v106[0] = v38;
  v106[1] = v40;
  sub_100030C58();
  StringProtocol.removingPercentEncoding.getter();
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v101;
  if (!v42)
  {
LABEL_39:
    uint64_t v56 = v102;
    uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
    uint64_t v54 = v43;
    uint64_t v55 = 1;
    return v53(v54, v55, 1, v56);
  }
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v44 = v97;
  uint64_t v45 = v98;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v18, 1, v98) == 1)
  {
    int v46 = &qword_100164AE0;
    uint64_t v47 = (uint64_t)v18;
LABEL_38:
    sub_10003F5D0(v47, v46);
    goto LABEL_39;
  }
  uint64_t v57 = v96;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v96, v18, v45);
  uint64_t v58 = URLComponents.queryItems.getter();
  if (!v58)
  {
    os_log_t v70 = v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56))(v94, 1, 1, v100);
LABEL_37:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v57, v45);
    int v46 = (uint64_t *)&unk_100164080;
    uint64_t v47 = (uint64_t)v70;
    goto LABEL_38;
  }
  uint64_t v59 = *(void *)(v58 + 16);
  if (v59)
  {
    uint64_t v60 = *(void (**)(char *, unint64_t, uint64_t))(v95 + 16);
    unint64_t v61 = v58 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    uint64_t v62 = (void (**)(char *, uint64_t))(v95 + 8);
    uint64_t v63 = *(void *)(v95 + 72);
    swift_bridgeObjectRetain();
    uint64_t v64 = v99;
    uint64_t v65 = v100;
    while (1)
    {
      v60(v64, v61, v65);
      if (URLQueryItem.name.getter() == 1953460082 && v66 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v67) {
        break;
      }
      uint64_t v64 = v99;
      uint64_t v65 = v100;
      (*v62)(v99, v100);
      v61 += v63;
      --v59;
      uint64_t v43 = v101;
      if (!v59)
      {
        swift_bridgeObjectRelease();
        uint64_t v68 = 1;
        uint64_t v69 = v95;
        uint64_t v57 = v96;
        uint64_t v44 = v97;
        uint64_t v45 = v98;
        goto LABEL_31;
      }
    }
    uint64_t v43 = v101;
LABEL_35:
    uint64_t v74 = v99;
    uint64_t v65 = v100;
    uint64_t v69 = v95;
    uint64_t v57 = v96;
    uint64_t v44 = v97;
    uint64_t v45 = v98;
    uint64_t v71 = v93;
    os_log_t v70 = v94;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v70, v74, v65);
    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v68 = 1;
    uint64_t v65 = v100;
    uint64_t v69 = v95;
LABEL_31:
    uint64_t v71 = v93;
    os_log_t v70 = v94;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v70, v68, 1, v65);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v70, 1, v65) == 1) {
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v71, v70, v65);
  URLQueryItem.value.getter();
  if (!v75)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v65);
LABEL_54:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v57, v45);
    goto LABEL_39;
  }
  NSString v76 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v77 = (id)SFObjectAndOffsetForURLPair();

  uint64_t v78 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v104 = 0x7463656A626FLL;
  unint64_t v105 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v78 + 16) && (unint64_t v79 = sub_1000619E0((uint64_t)v106), (v80 & 1) != 0))
  {
    sub_100061984(*(void *)(v78 + 56) + 32 * v79, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100061AEC((uint64_t)v106);
  if (!*((void *)&v108 + 1))
  {
    sub_10003F5D0((uint64_t)&v107, &qword_1001609A0);
    uint64_t v82 = v100;
    goto LABEL_53;
  }
  char v81 = swift_dynamicCast();
  uint64_t v82 = v100;
  if ((v81 & 1) == 0)
  {
LABEL_53:
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v82);
    goto LABEL_54;
  }
  char v83 = sub_1000F43F8();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v82);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v57, v45);
  if (v83 == 74) {
    goto LABEL_39;
  }
  if (v83 == 73)
  {
    uint64_t v84 = v90;
    uint64_t v85 = v102;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v84, 0, 1, v85);
  }
  else
  {
    char v86 = sub_1000F3F98(v83);
    uint64_t v84 = v90;
    sub_1001011A8(v86, v90);
    uint64_t v85 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v84, 1, v102) == 1)
    {
      int v46 = (uint64_t *)&unk_100161530;
      uint64_t v47 = v84;
      goto LABEL_38;
    }
  }
  uint64_t v87 = v84;
  uint64_t v88 = v89;
  sub_10004984C(v87, v89);
  sub_10004984C(v88, v43);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v43, 0, 1, v85);
}

uint64_t sub_1000FEDC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v1 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v66 - v5;
  uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  uint64_t v73 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v67 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v66 - v11;
  uint64_t v13 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URLComponents();
  uint64_t v69 = *(void *)(v16 - 8);
  uint64_t v70 = v16;
  __chkstk_darwin(v16);
  uint64_t v68 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v22 = sub_10000CC20((uint64_t)&off_100151220);
  swift_arrayDestroy();
  uint64_t v23 = URL.scheme.getter();
  if (v24)
  {
    uint64_t v66 = v4;
    char v25 = sub_100049E90(v23, v24, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25)
    {
      sub_1000FF4BC((uint64_t)v21);
      uint64_t v26 = URL.absoluteString.getter();
      uint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      uint64_t v78 = v26;
      uint64_t v79 = v28;
      sub_100030C58();
      StringProtocol.removingPercentEncoding.getter();
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      if (!v30)
      {
LABEL_20:
        uint64_t v57 = v72;
        uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
        uint64_t v59 = v71;
        uint64_t v60 = 1;
        return v58(v59, v60, 1, v57);
      }
      URLComponents.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v32 = v69;
      uint64_t v31 = v70;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v15, 1, v70) == 1)
      {
        sub_10003F5D0((uint64_t)v15, &qword_100164AE0);
        goto LABEL_20;
      }
      char v37 = v68;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v68, v15, v31);
      uint64_t v38 = URLComponents.fragment.getter();
      if (!v39)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
        goto LABEL_20;
      }
      uint64_t v40 = v38;
      uint64_t v41 = v39;
      swift_bridgeObjectRetain();
      char v42 = sub_1000F43F8();
      if (v42 == 73)
      {
        uint64_t v44 = v72;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v6, 0, 1, v44);
      }
      else
      {
        if (v42 == 74) {
          goto LABEL_15;
        }
        char v43 = sub_1000F3F98(v42);
        sub_1001011A8(v43, (uint64_t)v6);
        uint64_t v44 = v72;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v6, 1, v72) == 1)
        {
          sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100161530);
LABEL_15:
          uint64_t v78 = v40;
          uint64_t v79 = v41;
          uint64_t v76 = 35;
          unint64_t v77 = 0xE100000000000000;
          uint64_t v74 = 0;
          unint64_t v75 = 0xE000000000000000;
          uint64_t v45 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
          uint64_t v47 = v46;
          uint64_t v48 = 45;
          uint64_t v49 = v45;
          uint64_t v50 = &byte_100151170;
          while (1)
          {
            char v52 = *v50++;
            char v51 = v52;
            sub_10010177C(v52);
            v53._countAndFlagsBits = v49;
            v53._object = v47;
            Swift::Bool v54 = String.hasSuffix(_:)(v53);
            swift_bridgeObjectRelease();
            if (v54) {
              break;
            }
            if (!--v48)
            {
              swift_bridgeObjectRelease();
              uint64_t v55 = v72;
              uint64_t v56 = (uint64_t)v66;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v66, 1, 1, v72);
              goto LABEL_26;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v56 = (uint64_t)v66;
          sub_1001011A8(v51, (uint64_t)v66);
          uint64_t v55 = v72;
LABEL_26:
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v56, 1, v55) == 1)
          {
            sub_10003F5D0(v56, (uint64_t *)&unk_100161530);
            uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
            uint64_t v59 = v71;
            uint64_t v60 = 1;
          }
          else
          {
            uint64_t v62 = v56;
            uint64_t v63 = v67;
            sub_10004984C(v62, v67);
            uint64_t v64 = v63;
            uint64_t v65 = v71;
            sub_10004984C(v64, v71);
            uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
            uint64_t v59 = v65;
            uint64_t v60 = 0;
          }
          uint64_t v57 = v55;
          return v58(v59, v60, 1, v57);
        }
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
      swift_bridgeObjectRelease();
      sub_10004984C((uint64_t)v6, (uint64_t)v12);
      uint64_t v61 = v71;
      sub_10004984C((uint64_t)v12, v71);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v61, 0, 1, v44);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = v72;
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
  uint64_t v35 = v71;

  return v34(v35, 1, 1, v33);
}

uint64_t sub_1000FF4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (v10)
  {
    Swift::String v11 = String.lowercased()();
    swift_bridgeObjectRelease();
    if (v11._countAndFlagsBits == 0x7366657270 && v11._object == (void *)0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      char v12 = 1;
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v12 = 0;
  }
  Swift::Int v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v22(v9, v1, v6);
  uint64_t v23 = v1;
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_19;
  }
  URL.scheme.getter();
  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_17;
  }
  Swift::String v14 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v14._countAndFlagsBits == 0x666572702D707061 && v14._object == (void *)0xE900000000000073)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v23;
  if ((v16 & 1) == 0)
  {
LABEL_17:
    uint64_t v17 = v24;
    uint64_t v18 = v2;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v17, v18, v6);
  }
LABEL_19:
  uint64_t v25 = URL.absoluteString.getter();
  uint64_t v26 = v19;
  if (qword_10015F1C8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100046B9C(&qword_100164B00);
  sub_1000477B0(v20, (uint64_t)qword_100164AE8);
  sub_100046B9C(&qword_100164B08);
  sub_1001009D4();
  sub_100100A28();
  sub_10004D2D4(&qword_100164B20, &qword_100164B00);
  RangeReplaceableCollection<>.replace<A, B, C>(_:maxReplacements:with:)();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10003F5D0((uint64_t)v5, (uint64_t *)&unk_100163C10);
    uint64_t v18 = v23;
    uint64_t v17 = v24;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v22)(v17, v18, v6);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24, v5, v6);
}

uint64_t sub_1000FF908()
{
  uint64_t v0 = sub_100046B9C(&qword_100164B00);
  sub_10001C174(v0, qword_100164AE8);
  sub_1000477B0(v0, (uint64_t)qword_100164AE8);
  sub_100046B9C(&qword_100164B08);
  sub_10004D2D4(&qword_100164B20, &qword_100164B00);
  return Regex.init<A>(_:)();
}

uint64_t sub_1000FF9C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v1 = sub_100046B9C(&qword_100164B30);
  __chkstk_darwin(v1 - 8);
  uint64_t v79 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100046B9C(&qword_100164B38);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v103 = v3;
  uint64_t v104 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  char v81 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v102 = (char *)&v74 - v8;
  __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v74 - v9;
  uint64_t v10 = sub_100046B9C(&qword_100164B40);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100046B9C(&qword_100164B48);
  uint64_t v105 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v74 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v74 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v74 - v24;
  uint64_t v90 = sub_100046B9C(&qword_100164B00);
  uint64_t v82 = *(void *)(v90 - 8);
  uint64_t v26 = __chkstk_darwin(v90);
  uint64_t v91 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v89 = (char *)&v74 - v29;
  __chkstk_darwin(v28);
  uint64_t v95 = (char *)&v74 - v30;
  uint64_t v101 = type metadata accessor for _RegexFactory();
  uint64_t v106 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100046B9C(&qword_100164B50);
  uint64_t v97 = *(void *)(v33 - 8);
  uint64_t v98 = v33;
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v74 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  char v99 = (char *)&v74 - v37;
  makeFactory()();
  ChoiceOf.init(_:)();
  ChoiceOf.regex.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  Regex.ignoresCase(_:)();
  uint64_t v38 = v105 + 8;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v105 + 8);
  v39(v17, v14);
  uint64_t v78 = &protocol conformance descriptor for Regex<A>;
  uint64_t v40 = sub_10004D2D4(&qword_100164B58, &qword_100164B48);
  uint64_t v86 = (uint64_t)v23;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  v39(v20, v14);
  uint64_t v94 = v40;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  v39(v23, v14);
  uint64_t v105 = v38;
  uint64_t v92 = (void (*)(uint64_t, uint64_t))v39;
  uint64_t v41 = sub_100046B9C(&qword_100164B08);
  uint64_t v85 = v25;
  uint64_t v88 = v41;
  _RegexFactory.capture<A, B>(_:)();
  v39(v25, v14);
  char v42 = *(void (**)(char *, uint64_t))(v106 + 8);
  v106 += 8;
  uint64_t v96 = v42;
  char v43 = v32;
  uint64_t v44 = v101;
  v42(v32, v101);
  Capture.init(_:)();
  uint64_t v77 = sub_10004D2D4(&qword_100164B60, &qword_100164B50);
  uint64_t v45 = v98;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  int v46 = *(uint64_t (**)(char *, uint64_t))(v97 + 8);
  v97 += 8;
  char v80 = v46;
  v46(v36, v45);
  uint64_t v109 = 58;
  unint64_t v110 = 0xE100000000000000;
  unint64_t v47 = sub_100100A7C();
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v48 = type metadata accessor for RegexRepetitionBehavior();
  uint64_t v49 = *(void *)(v48 - 8);
  unint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
  uint64_t v76 = v49 + 56;
  uint64_t v50 = (uint64_t)v79;
  v75(v79, 1, 1, v48);
  makeFactory()();
  uint64_t v107 = 47;
  unint64_t v108 = 0xE100000000000000;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v107 = v109;
  unint64_t v108 = v110;
  uint64_t v51 = v86;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  swift_bridgeObjectRelease();
  _RegexFactory.zeroOrMore<A, B>(_:_:)();
  sub_10003F5D0(v50, &qword_100164B30);
  char v52 = v92;
  v92(v51, v14);
  v96(v43, v44);
  Swift::String v53 = v102;
  ZeroOrMore.init(_:)();
  uint64_t v93 = sub_10004D2D4(&qword_100164B70, &qword_100164B38);
  uint64_t v54 = v103;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v87 = *(void (**)(char *, uint64_t))(v104 + 8);
  v104 += 8;
  v87(v53, v54);
  v75((char *)v50, 1, 1, v48);
  makeFactory()();
  uint64_t v107 = 63;
  unint64_t v108 = 0xE100000000000000;
  unint64_t v74 = v47;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v107 = v109;
  unint64_t v108 = v110;
  uint64_t v55 = v86;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  swift_bridgeObjectRelease();
  uint64_t v56 = v85;
  uint64_t v84 = v14;
  _RegexFactory.zeroOrMore<A, B>(_:_:)();
  sub_10003F5D0(v50, &qword_100164B30);
  v52(v55, v14);
  uint64_t v57 = v43;
  v96(v43, v101);
  uint64_t v58 = v81;
  ZeroOrMore.init(_:)();
  uint64_t v59 = v103;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  v87(v58, v59);
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  uint64_t v60 = v111;
  unint64_t v61 = v112;
  makeFactory()();
  uint64_t v109 = v60;
  unint64_t v110 = v61;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  uint64_t v86 = sub_10004D2D4(&qword_100164B20, &qword_100164B00);
  uint64_t v62 = v84;
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  uint64_t v63 = v62;
  uint64_t v64 = (void (*)(char *, uint64_t))v92;
  v92((uint64_t)v56, v63);
  uint64_t v65 = v96;
  v96(v57, v101);
  swift_bridgeObjectRelease();
  makeFactory()();
  uint64_t v66 = v56;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  uint64_t v67 = v84;
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  v64(v56, v67);
  uint64_t v68 = v101;
  v65(v57, v101);
  makeFactory()();
  uint64_t v69 = v103;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  uint64_t v70 = v90;
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  v92((uint64_t)v66, v67);
  v65(v57, v68);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v82 + 8);
  v71(v91, v70);
  v71(v89, v70);
  v71(v95, v70);
  uint64_t v72 = v87;
  v87(v102, v69);
  v72(v100, v69);
  return v80(v99, v98);
}

uint64_t sub_100100668@<X0>(uint64_t a1@<X8>)
{
  v10[1] = a1;
  uint64_t v1 = sub_100046B9C(&qword_100164B48);
  __chkstk_darwin(v1 - 8);
  v10[0] = type metadata accessor for _RegexFactory();
  uint64_t v2 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100046B9C(&qword_100164B40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0x7366657270;
  unint64_t v14 = 0xE500000000000000;
  sub_100100A7C();
  static AlternationBuilder.buildExpression<A>(_:)();
  uint64_t v11 = 0x666572702D707061;
  unint64_t v12 = 0xE900000000000073;
  static AlternationBuilder.buildExpression<A>(_:)();
  uint64_t v11 = v15;
  unint64_t v12 = v16;
  static AlternationBuilder.buildPartialBlock<A>(first:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = v13;
  unint64_t v12 = v14;
  makeFactory()();
  sub_10004D2D4(&qword_100164B78, &qword_100164B40);
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)();
  (*(void (**)(char *, void))(v2 + 8))(v4, v10[0]);
  ChoiceOf.init(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100100924@<X0>(Swift::String *a1@<X8>)
{
  sub_100046B9C(&qword_100164B28);
  Regex.Match.output.getter();
  swift_bridgeObjectRelease();
  Swift::String v2 = Substring.lowercased()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 1060056890;
  v3._object = (void *)0xE400000000000000;
  String.append(_:)(v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

unint64_t sub_1001009D4()
{
  unint64_t result = qword_100164B10;
  if (!qword_100164B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164B10);
  }
  return result;
}

unint64_t sub_100100A28()
{
  unint64_t result = qword_100164B18;
  if (!qword_100164B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164B18);
  }
  return result;
}

unint64_t sub_100100A7C()
{
  unint64_t result = qword_100164B68;
  if (!qword_100164B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164B68);
  }
  return result;
}

void *sub_100100AD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationDetent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100046B9C(&qword_100164B80);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100101100(&qword_100164B88, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100101100(&qword_100164B90, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_100100DE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100046B9C(&qword_100161550);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100101100(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100101100(&qword_100161548, (void (*)(uint64_t))&type metadata accessor for URL);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100101100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10010114C()
{
  unint64_t result = qword_100164B98;
  if (!qword_100164B98)
  {
    sub_10004D318(&qword_100164BA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164B98);
  }
  return result;
}

uint64_t sub_1001011A8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      uint64_t v5 = v8;
      break;
    default:
      uint64_t v3 = type metadata accessor for PrimarySettingsListItemIdentifier();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
      uint64_t v5 = v3;
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      break;
  }

  return v4(v6, v7, 1, v5);
}

unint64_t sub_10010177C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 2:
    case 15:
    case 16:
    case 24:
    case 34:
    case 36:
    case 38:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000022;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      unint64_t result = 0xD000000000000020;
      break;
    case 14:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000020;
      break;
    case 18:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 19:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 20:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 21:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 22:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 23:
      unint64_t result = 0xD000000000000020;
      break;
    case 25:
      unint64_t result = 0xD000000000000018;
      break;
    case 26:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 27:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 28:
      unint64_t result = 0xD000000000000016;
      break;
    case 29:
      unint64_t result = 0xD000000000000028;
      break;
    case 30:
      unint64_t result = 0xD000000000000025;
      break;
    case 31:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 32:
      unint64_t result = 0xD000000000000022;
      break;
    case 33:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 35:
      unint64_t result = 0xD000000000000017;
      break;
    case 37:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 39:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 40:
      unint64_t result = 0xD000000000000023;
      break;
    case 41:
      unint64_t result = 0xD000000000000017;
      break;
    case 42:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 43:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 44:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100101B30(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10010177C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10010177C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100101BBC()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10010177C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100101C20()
{
  sub_10010177C(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100101C74()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10010177C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100101CD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100101D40();
  *a1 = result;
  return result;
}

unint64_t sub_100101D04@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10010177C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100101D30(void *a1@<X8>)
{
  *a1 = &off_100151150;
}

uint64_t sub_100101D40()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x2D) {
    return 45;
  }
  else {
    return v0;
  }
}

uint64_t getEnumTagSinglePayload for SettingsNavigationHost(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD4) {
    goto LABEL_17;
  }
  if (a2 + 44 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 44) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 44;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 44;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 44;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2D;
  int v8 = v6 - 45;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SettingsNavigationHost(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 44 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 44) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD3)
  {
    unsigned int v6 = ((a2 - 212) >> 8) + 1;
    *unint64_t result = a2 + 44;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100101EF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 44;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsNavigationHost()
{
  return &type metadata for SettingsNavigationHost;
}

unint64_t sub_100101F2C()
{
  unint64_t result = qword_100164BA8;
  if (!qword_100164BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164BA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsNavigationTVProviderURLRoute()
{
  return &type metadata for SettingsNavigationTVProviderURLRoute;
}

uint64_t sub_100101F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  int v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v62 = (char *)&v60 - v9;
  uint64_t v10 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v10);
  uint64_t v65 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URLComponents();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a1;
  URL.scheme.getter();
  if (!v19) {
    goto LABEL_24;
  }
  uint64_t v66 = a2;
  Swift::String v20 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v20._countAndFlagsBits == 0xD000000000000013 && v20._object == (void *)0x8000000100122C10)
  {
    swift_bridgeObjectRelease();
    a2 = v66;
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    a2 = v66;
    if ((v21 & 1) == 0)
    {
LABEL_24:
      uint64_t v43 = sub_100046B9C(&qword_10015F750);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a2, 1, 1, v43);
    }
  }
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1001027FC((uint64_t)v14);
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  URLComponents.host.getter();
  if (!v22) {
    goto LABEL_23;
  }
  char v23 = sub_100101D40();
  if (v23 == 45) {
    goto LABEL_23;
  }
  char v24 = v23;
  if (sub_10010177C(v23) == 0xD00000000000001DLL && v25 == 0x8000000100122AC0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_24;
  }
LABEL_14:
  uint64_t v27 = URLComponents.queryItems.getter();
  if (v27) {
    BOOL v28 = (void *)v27;
  }
  else {
    BOOL v28 = _swiftEmptyArrayStorage;
  }
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = URLComponents.path.getter();
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0) {
    uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
  }
  if (v32)
  {
    unint64_t v61 = v28;
    uint64_t v33 = URLComponents.path.getter();
    unint64_t v35 = v34;
    URLComponents.path.getter();
    v36._countAndFlagsBits = 47;
    v36._object = (void *)0xE100000000000000;
    Swift::Bool v37 = String.hasPrefix(_:)(v36);
    swift_bridgeObjectRelease();
    sub_100102A84(v37, v33, v35);
    swift_bridgeObjectRelease();
    uint64_t v38 = static String._fromSubstring(_:)();
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    v69._countAndFlagsBits = v38;
    v69._object = v40;
    if (sub_10010177C(v24) == 0xD00000000000001DLL && v41 == 0x8000000100122AC0)
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = v63;
    }
    else
    {
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v42 = v63;
      if ((v46 & 1) == 0)
      {
LABEL_30:
        uint64_t v48 = URLComponents.fragment.getter();
        a2 = v66;
        if (v49)
        {
          v68._countAndFlagsBits = 35;
          v68._object = (void *)0xE100000000000000;
          String.append(_:)(*(Swift::String *)&v48);
          swift_bridgeObjectRelease();
          String.append(_:)(v68);
          swift_bridgeObjectRelease();
        }
        uint64_t v50 = v62;
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        BOOL v28 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v28 = (void *)sub_10009EE88(0, v28[2] + 1, 1, (unint64_t)v28);
        }
        unint64_t v52 = v28[2];
        unint64_t v51 = v28[3];
        if (v52 >= v51 >> 1) {
          BOOL v28 = (void *)sub_10009EE88(v51 > 1, v52 + 1, 1, (unint64_t)v28);
        }
        void v28[2] = v52 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v52, v50, v42);
        goto LABEL_43;
      }
    }
    strcpy((char *)&v68, "TV_PROVIDER/");
    BYTE5(v68._object) = 0;
    HIWORD(v68._object) = -5120;
    v47._countAndFlagsBits = v38;
    v47._object = v40;
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    Swift::String v69 = v68;
    goto LABEL_30;
  }
  if (sub_10010177C(v24) == 0xD00000000000001DLL && v45 == 0x8000000100122AC0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    URLQueryItem.init(name:value:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v28 = (void *)sub_10009EE88(0, v28[2] + 1, 1, (unint64_t)v28);
    }
    unint64_t v55 = v28[2];
    unint64_t v54 = v28[3];
    if (v55 >= v54 >> 1) {
      BOOL v28 = (void *)sub_10009EE88(v54 > 1, v55 + 1, 1, (unint64_t)v28);
    }
    void v28[2] = v55 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v55, v8, v63);
    goto LABEL_43;
  }
  char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_38;
  }
LABEL_43:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v56 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(a2, v67, v56);
  uint64_t v57 = (int *)type metadata accessor for SettingsURLDestination(0);
  sub_100102B34(v65, a2 + v57[5]);
  uint64_t v58 = (void *)(a2 + v57[7]);
  *(void *)(a2 + v57[6]) = v28;
  *uint64_t v58 = 0;
  v58[1] = 0;
  uint64_t v59 = sub_100046B9C(&qword_10015F750);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(a2, 0, 1, v59);
}

uint64_t sub_1001027FC(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100164AE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10010285C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = URL.scheme.getter();
  char v8 = v7;
  if (v7)
  {
    if (v6 == 0xD000000000000013 && v7 == 0x8000000100122C10)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
      char v8 = 0;
      if ((v9 & 1) == 0) {
        goto LABEL_10;
      }
    }
    if ((unint64_t)URL.host(percentEncoded:)(1).value._object && (char v10 = sub_100101D40(), v10 != 45))
    {
      if (sub_10010177C(v10) == 0xD00000000000001DLL && v12 == 0x8000000100122AC0)
      {
        swift_bridgeObjectRelease();
        char v8 = 1;
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v8 = 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  }
LABEL_10:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8 & 1;
}

uint64_t sub_100102A84(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return String.subscript.getter();
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t v6 = String.index(_:offsetBy:limitedBy:)();
  if (v7) {
    unint64_t v6 = v5;
  }
  if (4 * v3 < v6 >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

uint64_t sub_100102B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsURLDestination.Action(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SettingsNavigationURLRoute()
{
  return &type metadata for SettingsNavigationURLRoute;
}

uint64_t sub_100102BA8@<X0>(char *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v108 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v114 = (uint64_t)&v101 - v7;
  uint64_t v111 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v111);
  char v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for URLQueryItem();
  uint64_t v115 = *(void *)(v124 - 8);
  uint64_t v10 = __chkstk_darwin(v124);
  unint64_t v112 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v110 = (char *)&v101 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v109 = (char *)&v101 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v113 = (char *)&v101 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v120 = (char *)&v101 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v101 - v21;
  __chkstk_darwin(v20);
  char v24 = (char *)&v101 - v23;
  uint64_t v25 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for URLComponents();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v116 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v31) {
    goto LABEL_34;
  }
  uint64_t v117 = v29;
  uint64_t v118 = v28;
  Swift::String v32 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v32._countAndFlagsBits == 0xD000000000000013 && v32._object == (void *)0x8000000100122C10)
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = v117;
    uint64_t v33 = v118;
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v34 = v117;
    uint64_t v33 = v118;
    if ((v35 & 1) == 0)
    {
LABEL_34:
      uint64_t v56 = sub_100046B9C(&qword_10015F750);
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(a2, 1, 1, v56);
    }
  }
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v27, 1, v33) == 1)
  {
    sub_10003F5D0((uint64_t)v27, &qword_100164AE0);
    goto LABEL_34;
  }
  Swift::String v36 = v116;
  (*(void (**)(void))(v34 + 32))();
  uint64_t v37 = URLComponents.host.getter();
  if (!v38)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    goto LABEL_34;
  }
  uint64_t v106 = v38;
  uint64_t v107 = v37;
  uint64_t v39 = (char *)URLComponents.queryItems.getter();
  if (!v39) {
    uint64_t v39 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v127 = (unint64_t)v39;
  uint64_t v40 = (char *)*((void *)v39 + 2);
  if (!v40)
  {
    int64_t v51 = 0;
    uint64_t v43 = (char *)v118;
    goto LABEL_32;
  }
  uint64_t v103 = v9;
  uint64_t v104 = a1;
  unint64_t v105 = a2;
  uint64_t v41 = *(void (**)(void, void, void))(v115 + 16);
  a2 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  a1 = (char *)(v115 + 16);
  uint64_t v121 = *(void *)(v115 + 72);
  uint64_t v122 = (void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v42 = swift_bridgeObjectRetain();
  Swift::String v36 = 0;
  unint64_t v102 = a2;
  uint64_t v123 = v41;
  uint64_t v119 = v22;
  while (1)
  {
    uint64_t v43 = v40;
    char v9 = (char *)v42;
    v41(v24, v42 + a2, v124);
    if (URLQueryItem.name.getter() == 1953460082 && v44 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = (void (*)(char *, char *, uint64_t))v41;
      uint64_t v46 = v124;
      v45(v22, v24, v124);
      char v47 = 1;
      uint64_t v48 = v22;
    }
    else
    {
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      v41(v22, v24, v124);
      if (v49)
      {
        char v47 = 1;
        uint64_t v46 = v124;
        uint64_t v48 = v22;
      }
      else
      {
        if (URLQueryItem.name.getter() == 1752457584 && v50 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          char v47 = 1;
        }
        else
        {
          char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
        uint64_t v46 = v124;
        uint64_t v48 = v119;
      }
    }
    uint64_t v40 = (char *)*v122;
    (*v122)(v48, v46);
    ((void (*)(char *, uint64_t))v40)(v24, v46);
    if (v47) {
      break;
    }
    ++v36;
    a2 += v121;
    uint64_t v40 = v43;
    uint64_t v41 = v123;
    uint64_t v42 = (uint64_t)v9;
    uint64_t v22 = v119;
    if (v43 == v36)
    {
      swift_bridgeObjectRelease();
      int64_t v51 = *(void *)(v127 + 16);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  int64_t v51 = (int64_t)(v36 + 1);
  unint64_t v52 = v113;
  if (__OFADD__(v36, 1))
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  unint64_t v53 = v127;
  unint64_t v54 = *(void *)(v127 + 16);
  char v24 = v120;
  if (v51 == v54)
  {
LABEL_30:
    uint64_t v40 = v36;
LABEL_31:
    uint64_t v43 = (char *)v118;
    a2 = v105;
    a1 = v104;
    char v9 = v103;
    Swift::String v36 = v116;
    if (v51 >= (uint64_t)v40)
    {
LABEL_32:
      sub_1000E71B0((uint64_t)v40, v51);
      char v55 = sub_100101D40();
      if (v55 == 45)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v117 + 8))(v36, v43);
        goto LABEL_34;
      }
      char v58 = v55;
      uint64_t v59 = v114;
      sub_1001011A8(v55, v114);
      uint64_t v60 = type metadata accessor for PrimarySettingsListItemIdentifier();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v59, 1, v60) == 1)
      {
        if (sub_10010177C(v58) == 0xD000000000000012 && v61 == 0x8000000100122590)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v75 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v75 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, char *))(v117 + 8))(v36, v43);
            uint64_t v100 = sub_100046B9C(&qword_10015F750);
            (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(a2, 1, 1, v100);
            return sub_10003F5D0(v114, (uint64_t *)&unk_100161530);
          }
          uint64_t v59 = v114;
        }
      }
      else
      {
        uint64_t v62 = v108;
        sub_10000D930(v59, v108);
        sub_100103B50(v62, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      }
      swift_storeEnumTagMultiPayload();
      sub_10003F5D0(v59, (uint64_t *)&unk_100161530);
      Swift::String v126 = (Swift::String)0;
      uint64_t v76 = URLComponents.path.getter();
      unint64_t v78 = v77;
      swift_bridgeObjectRelease();
      uint64_t v79 = HIBYTE(v78) & 0xF;
      if ((v78 & 0x2000000000000000) == 0) {
        uint64_t v79 = v76 & 0xFFFFFFFFFFFFLL;
      }
      if (v79)
      {
        uint64_t v80 = URLComponents.path.getter();
        unint64_t v82 = v81;
        URLComponents.path.getter();
        v83._countAndFlagsBits = 47;
        v83._object = (void *)0xE100000000000000;
        Swift::Bool v84 = String.hasPrefix(_:)(v83);
        swift_bridgeObjectRelease();
        sub_100102A84(v84, v80, v82);
        swift_bridgeObjectRelease();
        uint64_t v85 = static String._fromSubstring(_:)();
        uint64_t v87 = v86;
        Swift::String v36 = v116;
        swift_bridgeObjectRelease();
        v126._countAndFlagsBits = v85;
        v126._object = v87;
        uint64_t v88 = URLComponents.fragment.getter();
        uint64_t v40 = v112;
        if (!v89)
        {
LABEL_77:
          object = v126._object;
LABEL_78:
          if (!object)
          {
LABEL_83:
            (*(void (**)(char *, char *))(v117 + 8))(v36, v43);
            uint64_t v96 = type metadata accessor for URL();
            (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v96 - 8) + 16))(a2, a1, v96);
            uint64_t v97 = (int *)type metadata accessor for SettingsURLDestination(0);
            sub_100103B50((uint64_t)v9, a2 + v97[5], type metadata accessor for SettingsURLDestination.Action);
            uint64_t v98 = (void *)(a2 + v97[7]);
            *(void *)(a2 + v97[6]) = v127;
            *uint64_t v98 = 0;
            v98[1] = 0;
            uint64_t v99 = sub_100046B9C(&qword_10015F750);
            (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(a2, 0, 1, v99);
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRetain();
          URLQueryItem.init(name:value:)();
          swift_bridgeObjectRelease();
          char v24 = (char *)v127;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
LABEL_80:
            unint64_t v95 = *((void *)v24 + 2);
            unint64_t v94 = *((void *)v24 + 3);
            if (v95 >= v94 >> 1) {
              char v24 = (char *)sub_10009EE88(v94 > 1, v95 + 1, 1, (unint64_t)v24);
            }
            *((void *)v24 + 2) = v95 + 1;
            (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v24[((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v95], v40, v124);
            unint64_t v127 = (unint64_t)v24;
            goto LABEL_83;
          }
LABEL_90:
          char v24 = (char *)sub_10009EE88(0, *((void *)v24 + 2) + 1, 1, (unint64_t)v24);
          goto LABEL_80;
        }
        uint64_t v90 = v89;
        if (v87)
        {
          v125._countAndFlagsBits = 35;
          v125._object = (void *)0xE100000000000000;
          String.append(_:)(*(Swift::String *)&v88);
          swift_bridgeObjectRelease();
          String.append(_:)(v125);
          swift_bridgeObjectRelease();
          goto LABEL_77;
        }
      }
      else
      {
        uint64_t v88 = URLComponents.fragment.getter();
        uint64_t v40 = v112;
        if (!v91) {
          goto LABEL_77;
        }
        uint64_t v90 = v91;
      }
      v125._countAndFlagsBits = 35;
      v125._object = (void *)0xE100000000000000;
      uint64_t v92 = v90;
      String.append(_:)(*(Swift::String *)&v88);
      swift_bridgeObjectRelease();
      object = v125._object;
      Swift::String v126 = v125;
      goto LABEL_78;
    }
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  char v9 = a1;
  uint64_t v43 = (char *)(v121 + a2);
  uint64_t v63 = v36 + 1;
  uint64_t v119 = (char *)(v115 + 40);
  a2 = v124;
  while (1)
  {
    if ((unint64_t)v63 >= v54)
    {
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    v123(v24, &v43[v53], a2);
    if (URLQueryItem.name.getter() == 1953460082 && v64 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      char v24 = v120;
      v123(v52, v120, a2);
LABEL_49:
      ((void (*)(char *, unint64_t))v40)(v52, a2);
      ((void (*)(char *, unint64_t))v40)(v24, a2);
      goto LABEL_50;
    }
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v24 = v120;
    v123(v52, v120, a2);
    if (v65) {
      goto LABEL_49;
    }
    if (URLQueryItem.name.getter() == 1752457584 && v66 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      char v24 = v120;
      goto LABEL_49;
    }
    char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    a1 = (char *)v122;
    ((void (*)(char *, unint64_t))v40)(v52, a2);
    char v24 = v120;
    uint64_t result = ((uint64_t (*)(char *, unint64_t))v40)(v120, a2);
    if ((v67 & 1) == 0) {
      break;
    }
LABEL_50:
    int64_t v51 = (int64_t)(v63 + 1);
    if (__OFADD__(v63, 1)) {
      goto LABEL_86;
    }
    unint64_t v53 = v127;
    unint64_t v54 = *(void *)(v127 + 16);
    ++v63;
    v43 += v121;
    if (v51 == v54) {
      goto LABEL_30;
    }
  }
  if (v63 == v36)
  {
LABEL_63:
    if (__OFADD__(v36++, 1)) {
      goto LABEL_89;
    }
    goto LABEL_50;
  }
  if (((unint64_t)v36 & 0x8000000000000000) == 0)
  {
    unint64_t v68 = v127;
    unint64_t v69 = *(void *)(v127 + 16);
    if ((unint64_t)v36 >= v69) {
      goto LABEL_92;
    }
    a1 = (char *)((void)v36 * v121);
    uint64_t v70 = (void (*)(char *, char *, unint64_t))v123;
    unint64_t v71 = v124;
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v123)(v109, v127 + v102 + (void)v36 * v121, v124);
    if ((unint64_t)v63 >= v69) {
      goto LABEL_93;
    }
    v70(v110, &v43[v68], v71);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v127 = v68;
    a2 = v71;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000E6D20(v68);
      unint64_t v68 = result;
      unint64_t v127 = result;
    }
    unint64_t v52 = v113;
    if ((unint64_t)v36 >= *(void *)(v68 + 16)) {
      goto LABEL_94;
    }
    uint64_t v72 = &a1[v68 + v102];
    uint64_t v73 = *(uint64_t (**)(char *, char *, unint64_t))v119;
    uint64_t result = (*(uint64_t (**)(char *, char *, unint64_t))v119)(v72, v110, a2);
    if ((unint64_t)v63 >= *(void *)(v127 + 16)) {
      goto LABEL_95;
    }
    v73(&v43[v127], v109, a2);
    char v24 = v120;
    goto LABEL_63;
  }
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_100103AC0()
{
  uint64_t v0 = URL.scheme.getter();
  if (v1)
  {
    if (v0 == 0xD000000000000013 && v1 == 0x8000000100122C10) {
      char v2 = 1;
    }
    else {
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_100103B50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for AppInstallationSettingsURLRoute()
{
  return &type metadata for AppInstallationSettingsURLRoute;
}

void sub_100103BC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v56 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v56);
  unint64_t v54 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLComponents();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  __chkstk_darwin(v7);
  char v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  char v55 = (char *)&v48 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v53 = (char *)&v48 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v48 - v18;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v52 = sub_1000477B0(v20, (uint64_t)qword_10016AFF8);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v50 = a1;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    char v49 = v6;
    uint64_t v63 = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v58 = v11;
    uint64_t v62 = sub_100042948(0xD000000000000024, 0x800000010012B1A0, &v63);
    int64_t v51 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v62 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v63);
    char v9 = v51;
    uint64_t v11 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Start (%s.%s)…", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    uint64_t v6 = v49;
    swift_slowDealloc();
    a1 = v50;
    swift_slowDealloc();
  }

  sub_1000FF4BC((uint64_t)v19);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  URLComponents.path.setter();
  URLComponents.url.getter();
  uint64_t v26 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    uint64_t v56 = (uint64_t)v19;
    sub_1001043D4((uint64_t)v6);
    uint64_t v27 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v57, a1, v10);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v58 = v11;
      uint64_t v31 = v30;
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 141558275;
      uint64_t v62 = 1752392040;
      uint64_t v63 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2081;
      uint64_t v33 = URL.absoluteString.getter();
      uint64_t v62 = sub_100042948(v33, v34, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      char v35 = *(void (**)(char *, uint64_t))(v58 + 8);
      v35(v27, v10);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Could not create re-direct URL for App Installation for input URL %{private,mask.hash}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v60);
      v35((char *)v56, v10);
    }
    else
    {

      uint64_t v46 = *(void (**)(char *, uint64_t))(v11 + 8);
      v46(v27, v10);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v60);
      v46((char *)v56, v10);
    }
    uint64_t v47 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v61, 1, 1, v47);
  }
  else
  {
    uint64_t v58 = *(void *)(v11 + 32);
    Swift::String v36 = v53;
    ((void (*)(char *, char *, uint64_t))v58)(v53, v6, v10);
    uint64_t v37 = v55;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v55, v36, v10);
    type metadata accessor for PrimarySettingsListItemIdentifier();
    uint64_t v38 = (uint64_t)v54;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = URLComponents.queryItems.getter();
    if (v39) {
      uint64_t v40 = (void *)v39;
    }
    else {
      uint64_t v40 = _swiftEmptyArrayStorage;
    }
    uint64_t v41 = *(void (**)(char *, uint64_t))(v11 + 8);
    v41(v36, v10);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v60);
    v41(v26, v10);
    uint64_t v42 = (int *)type metadata accessor for SettingsURLDestination(0);
    uint64_t v43 = v61;
    uint64_t v44 = (void *)(v61 + v42[7]);
    ((void (*)(uint64_t, char *, uint64_t))v58)(v61, v37, v10);
    sub_100102B34(v38, v43 + v42[5]);
    *(void *)(v43 + v42[6]) = v40;
    void *v44 = 0;
    v44[1] = 0;
    uint64_t v45 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v43, 0, 1, v45);
  }
  sub_10010456C();
}

uint64_t sub_1001043D4(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100104434()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if ((v1._countAndFlagsBits != 0xD000000000000013 || v1._object != (void *)0x8000000100122C10)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || !(unint64_t)URL.host(percentEncoded:)(1).value._object
    || (char v2 = sub_100101D40(), v2 == 45))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (sub_10010177C(v2) == 0xD000000000000022 && v4 == 0x8000000100122A10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

void sub_10010456C()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000024, 0x800000010012B1A0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for ApplicationPrefsURLRoute()
{
  return &type metadata for ApplicationPrefsURLRoute;
}

void sub_100104764(void (*a1)(uint64_t, char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v189 = a1;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100163C10);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v167 = (char *)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v169 = (char *)&v160 - v6;
  uint64_t v172 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v172);
  id v174 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for URLQueryItem();
  uint64_t v181 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  unint64_t v186 = (char *)&v160 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100164080);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v175 = (uint64_t)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v180 = (char *)&v160 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v160 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v177 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v164 = (char *)&v160 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v171 = (char *)&v160 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v166 = (char *)&v160 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v176 = (char *)&v160 - v27;
  __chkstk_darwin(v26);
  uint64_t v183 = (uint64_t)&v160 - v28;
  uint64_t v29 = sub_100046B9C(&qword_100164AE0);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v178 = (uint64_t)&v160 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v184 = (uint64_t)&v160 - v33;
  __chkstk_darwin(v32);
  char v35 = (char *)&v160 - v34;
  uint64_t v36 = type metadata accessor for URLComponents();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v38);
  NSString v173 = (char *)&v160 - v42;
  __chkstk_darwin(v41);
  uint64_t v188 = (char *)&v160 - v43;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  uint64_t v168 = sub_1000477B0(v44, (uint64_t)qword_10016AFF8);
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.default.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v182 = v15;
  uint64_t v179 = v16;
  unint64_t v170 = v40;
  uint64_t v165 = v19;
  if (v47)
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v185 = v36;
    v192[0] = v49;
    *(_DWORD *)uint64_t v48 = 136315394;
    uint64_t v190 = sub_100042948(0xD00000000000001DLL, 0x800000010012B230, v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v190 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Start (%s.%s)…", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    uint64_t v36 = v185;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v51 = v50(v35, 1, v36);
  uint64_t v52 = v188;
  if (v51 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v188, v35, v36);
    URLComponents.scheme.getter();
    if (v53)
    {
      uint64_t v163 = v37;
      Swift::String v54 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (v54._countAndFlagsBits == 0x666572702D707061 && v54._object == (void *)0xE900000000000073)
      {
        swift_bridgeObjectRelease();
        uint64_t v37 = v163;
      }
      else
      {
        char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v37 = v163;
        if ((v55 & 1) == 0) {
          goto LABEL_19;
        }
      }
      uint64_t v56 = URLComponents.path.getter();
      unint64_t v58 = v57;
      swift_bridgeObjectRelease();
      uint64_t v59 = HIBYTE(v58) & 0xF;
      if ((v58 & 0x2000000000000000) == 0) {
        uint64_t v59 = v56 & 0xFFFFFFFFFFFFLL;
      }
      if (v59)
      {
        v192[0] = URLComponents.path.getter();
        v192[1] = v60;
        uint64_t v190 = 38;
        unint64_t v191 = 0xE100000000000000;
        sub_100030C58();
        uint64_t v61 = (void *)StringProtocol.components<A>(separatedBy:)();
        swift_bridgeObjectRelease();
        if (v61[2])
        {
          uint64_t v62 = v61[5];
          uint64_t v161 = v61[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v63 = v183;
          sub_1000FF4BC(v183);
          URL.absoluteString.getter();
          uint64_t v64 = v184;
          URLComponents.init(string:)();
          swift_bridgeObjectRelease();
          uint64_t v65 = v178;
          sub_10003F75C(v64, v178, &qword_100164AE0);
          int v66 = v50((char *)v65, 1, v36);
          uint64_t v185 = v36;
          uint64_t v162 = v62;
          if (v66 == 1)
          {
            sub_10003F5D0(v65, &qword_100164AE0);
            uint64_t v67 = v181;
            uint64_t v68 = (uint64_t)v182;
            uint64_t v69 = v187;
            uint64_t v70 = (uint64_t)v180;
          }
          else
          {
            uint64_t v72 = URLComponents.queryItems.getter();
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v65, v36);
            uint64_t v67 = v181;
            uint64_t v68 = (uint64_t)v182;
            uint64_t v69 = v187;
            uint64_t v70 = (uint64_t)v180;
            if (v72)
            {
              uint64_t v73 = *(void *)(v72 + 16);
              if (v73)
              {
                unint64_t v74 = *(void (**)(char *, unint64_t, uint64_t))(v181 + 16);
                unint64_t v75 = v72
                    + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
                uint64_t v76 = (void (**)(char *, uint64_t))(v181 + 8);
                uint64_t v77 = *(void *)(v181 + 72);
                swift_bridgeObjectRetain();
                unint64_t v78 = v186;
                while (1)
                {
                  v74(v78, v75, v69);
                  if (URLQueryItem.name.getter() == 0x746567726174 && v79 == 0xE600000000000000)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v69 = v187;
                    goto LABEL_63;
                  }
                  char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v80) {
                    break;
                  }
                  unint64_t v78 = v186;
                  uint64_t v69 = v187;
                  (*v76)(v186, v187);
                  v75 += v77;
                  if (!--v73)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v68 = (uint64_t)v182;
                    uint64_t v63 = v183;
                    uint64_t v70 = (uint64_t)v180;
                    uint64_t v67 = v181;
                    goto LABEL_30;
                  }
                }
                unint64_t v78 = v186;
                uint64_t v69 = v187;
LABEL_63:
                swift_bridgeObjectRelease();
                uint64_t v67 = v181;
                uint64_t v68 = (uint64_t)v182;
                (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v182, v78, v69);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v69);
                swift_bridgeObjectRelease();
                uint64_t v63 = v183;
                uint64_t v70 = (uint64_t)v180;
              }
              else
              {
LABEL_30:
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v68, 1, 1, v69);
                swift_bridgeObjectRelease();
              }
LABEL_32:
              sub_10003F75C(v68, v70, (uint64_t *)&unk_100164080);
              unint64_t v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
              if (v81(v70, 1, v69) == 1)
              {
                sub_10003F5D0(v70, (uint64_t *)&unk_100164080);
                goto LABEL_40;
              }
              uint64_t v82 = v69;
              uint64_t v83 = URLQueryItem.value.getter();
              uint64_t v85 = v84;
              (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v70, v82);
              if (v85)
              {
                if (v83 == 0xD000000000000020 && v85 == 0x8000000100123E40)
                {
                  swift_bridgeObjectRelease();
LABEL_39:
                  uint64_t v87 = v177;
                  uint64_t v88 = v179;
                  (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v176, v63, v179);
                  type metadata accessor for PrimarySettingsListItemIdentifier();
                  uint64_t v89 = (uint64_t)v174;
                  swift_storeEnumTagMultiPayload();
                  swift_storeEnumTagMultiPayload();
                  sub_100046B9C(&qword_100161580);
                  uint64_t v90 = swift_allocObject();
                  *(_OWORD *)(v90 + 16) = xmmword_10011C370;
                  URLQueryItem.init(name:value:)();
                  URLQueryItem.init(name:value:)();
                  swift_bridgeObjectRelease();
                  sub_10003F5D0(v68, (uint64_t *)&unk_100164080);
                  sub_10003F5D0(v184, &qword_100164AE0);
                  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v63, v88);
                  (*(void (**)(char *, uint64_t))(v163 + 8))(v188, v185);
                  uint64_t v91 = (int *)type metadata accessor for SettingsURLDestination(0);
                  uint64_t v92 = (void *)(a2 + v91[7]);
                  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 32))(a2, v176, v88);
                  sub_100102B34(v89, a2 + v91[5]);
                  *(void *)(a2 + v91[6]) = v90;
                  *uint64_t v92 = 0;
                  v92[1] = 0;
LABEL_60:
                  uint64_t v155 = sub_100046B9C(&qword_10015F750);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(a2, 0, 1, v155);
                  goto LABEL_21;
                }
                char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v86) {
                  goto LABEL_39;
                }
              }
LABEL_40:
              uint64_t v93 = v175;
              sub_10003F75C(v68, v175, (uint64_t *)&unk_100164080);
              uint64_t v94 = v187;
              if (v81(v93, 1, v187) == 1)
              {
                sub_10003F5D0(v93, (uint64_t *)&unk_100164080);
                uint64_t v95 = v179;
                goto LABEL_50;
              }
              uint64_t v96 = v93;
              uint64_t v97 = URLQueryItem.value.getter();
              uint64_t v99 = v98;
              (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v96, v94);
              uint64_t v95 = v179;
              uint64_t v100 = v173;
              uint64_t v101 = v171;
              if (v99)
              {
                if (v97 == 0xD000000000000027 && v99 == 0x800000010012B200)
                {
                  swift_bridgeObjectRelease();
LABEL_47:
                  swift_bridgeObjectRelease();
                  URLComponents.init()();
                  URLComponents.scheme.setter();
                  URLComponents.host.setter();
                  v192[0] = (uint64_t)&off_100151110;
                  sub_100046B9C(&qword_100164810);
                  sub_10005A4C0();
                  BidirectionalCollection<>.joined(separator:)();
                  URLComponents.path.setter();
                  uint64_t v103 = (uint64_t)v169;
                  URLComponents.url.getter();
                  uint64_t v104 = v177;
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v103, 1, v95) == 1)
                  {
                    sub_10003F5D0(v103, (uint64_t *)&unk_100163C10);
                    (*(void (**)(char *, void, uint64_t))(v104 + 16))(v101, v189, v95);
                    unint64_t v105 = Logger.logObject.getter();
                    os_log_type_t v106 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v105, v106))
                    {
                      uint64_t v107 = v104;
                      uint64_t v108 = swift_slowAlloc();
                      v192[0] = swift_slowAlloc();
                      *(_DWORD *)uint64_t v108 = 141558275;
                      uint64_t v190 = 1752392040;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      *(_WORD *)(v108 + 12) = 2081;
                      uint64_t v109 = URL.absoluteString.getter();
                      uint64_t v190 = sub_100042948(v109, v110, v192);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease();
                      uint64_t v111 = *(void (**)(char *, uint64_t))(v107 + 8);
                      unint64_t v112 = v101;
                      uint64_t v113 = v179;
                      v111(v112, v179);
                      _os_log_impl((void *)&_mh_execute_header, v105, v106, "Could not create re-direct URL for settings-navigation for input URL %{private,mask.hash}s", (uint8_t *)v108, 0x16u);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      uint64_t v114 = *(void (**)(char *, uint64_t))(v163 + 8);
                      uint64_t v115 = v185;
                      v114(v173, v185);
                      sub_10003F5D0((uint64_t)v182, (uint64_t *)&unk_100164080);
                      sub_10003F5D0(v184, &qword_100164AE0);
                      uint64_t v116 = v183;
                      uint64_t v117 = v113;
LABEL_56:
                      v111((char *)v116, v117);
                      v114(v188, v115);
                      goto LABEL_20;
                    }

                    char v156 = *(void (**)(char *, uint64_t))(v104 + 8);
                    v156(v101, v95);
                    uint64_t v157 = *(void (**)(char *, uint64_t))(v163 + 8);
                    unint64_t v158 = v100;
LABEL_66:
                    uint64_t v159 = v185;
                    v157(v158, v185);
                    sub_10003F5D0(v68, (uint64_t *)&unk_100164080);
                    sub_10003F5D0(v184, &qword_100164AE0);
                    v156((char *)v63, v95);
                    v157(v188, v159);
                    goto LABEL_20;
                  }
                  uint64_t v134 = v95;
                  uint64_t v135 = v104;
                  int v136 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 32);
                  uint64_t v187 = v104 + 32;
                  uint64_t v189 = v136;
                  uint64_t v137 = v166;
                  v136((uint64_t)v166, (char *)v103, v134);
                  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v176, v137, v134);
                  type metadata accessor for PrimarySettingsListItemIdentifier();
                  uint64_t v138 = v100;
                  uint64_t v139 = v174;
                  swift_storeEnumTagMultiPayload();
                  swift_storeEnumTagMultiPayload();
                  uint64_t v140 = *(void (**)(char *, uint64_t))(v135 + 8);
                  v140(v137, v134);
                  uint64_t v141 = *(void (**)(char *, uint64_t))(v163 + 8);
                  char v142 = v138;
                  uint64_t v143 = v185;
                  v141(v142, v185);
                  sub_10003F5D0(v68, (uint64_t *)&unk_100164080);
                  sub_10003F5D0(v184, &qword_100164AE0);
                  v140((char *)v63, v134);
                  v141(v188, v143);
                  char v144 = (int *)type metadata accessor for SettingsURLDestination(0);
                  uint64_t v145 = (void *)(a2 + v144[7]);
                  v189(a2, v176, v134);
                  uint64_t v146 = a2 + v144[5];
                  uint64_t v147 = (uint64_t)v139;
                  goto LABEL_59;
                }
                char v102 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v102) {
                  goto LABEL_47;
                }
              }
LABEL_50:
              id v118 = objc_allocWithZone((Class)LSApplicationRecord);
              uint64_t v119 = v162;
              swift_bridgeObjectRetain();
              uint64_t v120 = v161;
              id v121 = sub_1000AF988(v161, v119, 0);

              if (!v121)
              {
                swift_bridgeObjectRelease();
                sub_10003F5D0(v68, (uint64_t *)&unk_100164080);
                sub_10003F5D0(v184, &qword_100164AE0);
                (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v63, v95);
                (*(void (**)(char *, uint64_t))(v163 + 8))(v188, v185);
                goto LABEL_20;
              }
              uint64_t v122 = v170;
              URLComponents.init()();
              URLComponents.scheme.setter();
              URLComponents.host.setter();
              sub_100046B9C(&qword_1001615B0);
              uint64_t v123 = swift_allocObject();
              *(_OWORD *)(v123 + 16) = xmmword_10011C370;
              *(void *)(v123 + 32) = 0;
              *(void *)(v123 + 40) = 0xE000000000000000;
              *(void *)(v123 + 48) = v120;
              *(void *)(v123 + 56) = v119;
              v192[0] = v123;
              sub_100046B9C(&qword_100164810);
              sub_10005A4C0();
              BidirectionalCollection<>.joined(separator:)();
              swift_bridgeObjectRelease();
              URLComponents.path.setter();
              uint64_t v124 = (uint64_t)v167;
              URLComponents.url.getter();
              uint64_t v125 = v177;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v124, 1, v95) == 1)
              {
                sub_10003F5D0(v124, (uint64_t *)&unk_100163C10);
                Swift::String v126 = v165;
                (*(void (**)(char *, void, uint64_t))(v125 + 16))(v165, v189, v95);
                unint64_t v127 = Logger.logObject.getter();
                os_log_type_t v128 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v127, v128))
                {
                  uint64_t v129 = v125;
                  uint64_t v130 = swift_slowAlloc();
                  v192[0] = swift_slowAlloc();
                  *(_DWORD *)uint64_t v130 = 141558275;
                  uint64_t v190 = 1752392040;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v130 + 12) = 2081;
                  uint64_t v131 = URL.absoluteString.getter();
                  uint64_t v190 = sub_100042948(v131, v132, v192);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  uint64_t v111 = *(void (**)(char *, uint64_t))(v129 + 8);
                  uint64_t v133 = v179;
                  v111(v126, v179);
                  _os_log_impl((void *)&_mh_execute_header, v127, v128, "Could not create re-direct URL for settings-navigation for input URL %{private,mask.hash}s", (uint8_t *)v130, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  uint64_t v114 = *(void (**)(char *, uint64_t))(v163 + 8);
                  uint64_t v115 = v185;
                  v114(v170, v185);
                  sub_10003F5D0((uint64_t)v182, (uint64_t *)&unk_100164080);
                  sub_10003F5D0(v184, &qword_100164AE0);
                  uint64_t v116 = v183;
                  uint64_t v117 = v133;
                  goto LABEL_56;
                }

                char v156 = *(void (**)(char *, uint64_t))(v125 + 8);
                v156(v126, v95);
                uint64_t v157 = *(void (**)(char *, uint64_t))(v163 + 8);
                unint64_t v158 = v170;
                goto LABEL_66;
              }
              uint64_t v148 = v95;
              uint64_t v149 = v125;
              uint64_t v189 = *(void (**)(uint64_t, char *, uint64_t))(v125 + 32);
              uint64_t v150 = v164;
              v189((uint64_t)v164, (char *)v124, v148);
              (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v176, v150, v148);
              type metadata accessor for PrimarySettingsListItemIdentifier();
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              uint64_t v151 = *(void (**)(char *, uint64_t))(v149 + 8);
              v151(v150, v148);
              uint64_t v152 = *(void (**)(char *, uint64_t))(v163 + 8);
              char v153 = v122;
              uint64_t v154 = v185;
              v152(v153, v185);
              sub_10003F5D0(v68, (uint64_t *)&unk_100164080);
              sub_10003F5D0(v184, &qword_100164AE0);
              v151((char *)v63, v148);
              v152(v188, v154);
              char v144 = (int *)type metadata accessor for SettingsURLDestination(0);
              uint64_t v145 = (void *)(a2 + v144[7]);
              v189(a2, v176, v148);
              uint64_t v146 = a2 + v144[5];
              uint64_t v147 = (uint64_t)v174;
LABEL_59:
              sub_100102B34(v147, v146);
              *(void *)(a2 + v144[6]) = _swiftEmptyArrayStorage;
              *uint64_t v145 = 0;
              v145[1] = 0;
              goto LABEL_60;
            }
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v68, 1, 1, v69);
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
      }
    }
LABEL_19:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v36);
    goto LABEL_20;
  }
  sub_10003F5D0((uint64_t)v35, &qword_100164AE0);
LABEL_20:
  uint64_t v71 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(a2, 1, 1, v71);
LABEL_21:
  sub_1001060A8();
}

uint64_t sub_100105FD8()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0x666572702D707061 && v1._object == (void *)0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_1001060A8()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD00000000000001DLL, 0x800000010012B230, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for ESIMProvisioningURLRoute()
{
  return &type metadata for ESIMProvisioningURLRoute;
}

void sub_1001062A0(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v3 = type metadata accessor for URLQueryItem();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v69 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v61 = (char *)&v53 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v60 = (char *)&v53 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v53 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for URL();
  unint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v62 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = type metadata accessor for URLComponents();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v64 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F158 != -1) {
LABEL_37:
  }
    swift_once();
  uint64_t v23 = type metadata accessor for Logger();
  sub_1000477B0(v23, (uint64_t)qword_10016AFF8);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v67 = v3;
  unint64_t v57 = v15;
  uint64_t v58 = v14;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v63 = v21;
    v72[0] = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v70 = sub_100042948(0xD00000000000001DLL, 0x800000010012B290, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v70 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Start (%s.%s)…", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    uint64_t v21 = v63;
    swift_slowDealloc();
    uint64_t v3 = v67;
    swift_slowDealloc();
  }

  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1001027FC((uint64_t)v19);
LABEL_8:
    uint64_t v32 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
    goto LABEL_9;
  }
  unint64_t v15 = (unint64_t)v64;
  (*(void (**)(char *, char *, unint64_t))(v21 + 32))(v64, v19, v20);
  uint64_t v29 = URLComponents.path.getter();
  uint64_t v14 = v21;
  uint64_t v21 = v30;
  v72[0] = v29;
  v72[1] = v30;
  uint64_t v70 = 0xD000000000000019;
  unint64_t v71 = 0x800000010012B250;
  sub_100030C58();
  uint64_t v31 = StringProtocol.caseInsensitiveCompare<A>(_:)();
  swift_bridgeObjectRelease();
  if (v31)
  {
    (*(void (**)(unint64_t, unint64_t))(v14 + 8))(v15, v20);
    goto LABEL_8;
  }
  uint64_t v63 = v14;
  uint64_t v33 = URLComponents.percentEncodedQueryItems.getter();
  if (!v33)
  {
    (*(void (**)(unint64_t, unint64_t))(v63 + 8))(v15, v20);
    goto LABEL_8;
  }
  uint64_t v19 = (char *)v33;
  sub_1000FF4BC(v62);
  uint64_t v34 = (char *)_swiftEmptyArrayStorage;
  v72[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v66 = *((void *)v19 + 2);
  if (v66)
  {
    unint64_t v54 = v20;
    char v55 = a2;
    unint64_t v20 = 0;
    uint64_t v65 = v68 + 16;
    uint64_t v56 = (void (**)(char *, uint64_t))(v68 + 8);
    char v35 = (void (**)(char *, char *, uint64_t))(v68 + 32);
    while (1)
    {
      if (v20 >= *((void *)v19 + 2))
      {
        __break(1u);
        goto LABEL_37;
      }
      unint64_t v15 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v14 = *(void *)(v68 + 72);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v13, &v19[v15 + v14 * v20], v3);
      if (URLQueryItem.name.getter() == 0x6174616464726163 && v36 == 0xE800000000000000) {
        break;
      }
      uint64_t v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_20;
      }
      (*v56)(v13, v3);
LABEL_14:
      if (v66 == ++v20)
      {
        uint64_t v34 = (char *)v72[0];
        unint64_t v20 = v54;
        a2 = v55;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
LABEL_20:
    a2 = (char *)*v35;
    (*v35)(v69, v13, v3);
    uint64_t v37 = v72[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000F806C(0, *(void *)(v37 + 16) + 1, 1);
      uint64_t v37 = v72[0];
    }
    unint64_t v39 = *(void *)(v37 + 16);
    unint64_t v38 = *(void *)(v37 + 24);
    uint64_t v21 = v39 + 1;
    if (v39 >= v38 >> 1)
    {
      sub_1000F806C(v38 > 1, v39 + 1, 1);
      uint64_t v37 = v72[0];
    }
    *(void *)(v37 + 16) = v21;
    unint64_t v40 = v37 + v15 + v39 * v14;
    uint64_t v3 = v67;
    ((void (*)(unint64_t, char *, uint64_t))a2)(v40, v69, v67);
    v72[0] = v37;
    goto LABEL_14;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v34 = (char *)sub_10009EE88(0, *((void *)v34 + 2) + 1, 1, (unint64_t)v34);
  }
  unint64_t v42 = *((void *)v34 + 2);
  unint64_t v41 = *((void *)v34 + 3);
  if (v42 >= v41 >> 1) {
    uint64_t v34 = (char *)sub_10009EE88(v41 > 1, v42 + 1, 1, (unint64_t)v34);
  }
  *((void *)v34 + 2) = v42 + 1;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
  unint64_t v44 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v45 = *(void *)(v68 + 72);
  v43(&v34[v44 + v45 * v42], v59, v3);
  URLQueryItem.init(name:value:)();
  unint64_t v47 = *((void *)v34 + 2);
  unint64_t v46 = *((void *)v34 + 3);
  if (v47 >= v46 >> 1) {
    uint64_t v34 = (char *)sub_10009EE88(v46 > 1, v47 + 1, 1, (unint64_t)v34);
  }
  *((void *)v34 + 2) = v47 + 1;
  v43(&v34[v44 + v47 * v45], v60, v3);
  URLQueryItem.init(name:value:)();
  unint64_t v49 = *((void *)v34 + 2);
  unint64_t v48 = *((void *)v34 + 3);
  if (v49 >= v48 >> 1) {
    uint64_t v34 = (char *)sub_10009EE88(v48 > 1, v49 + 1, 1, (unint64_t)v34);
  }
  *((void *)v34 + 2) = v49 + 1;
  v43(&v34[v44 + v49 * v45], v61, v3);
  (*(void (**)(char *, unint64_t))(v63 + 8))(v64, v20);
  uint64_t v50 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  int v51 = &a2[*(int *)(v50 + 28)];
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(a2, v62, v58);
  *(void *)&a2[*(int *)(v50 + 24)] = v34;
  *(void *)int v51 = 0;
  *((void *)v51 + 1) = 0;
  uint64_t v52 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(a2, 0, 1, v52);
LABEL_9:
  sub_100106EFC();
}

uint64_t sub_100106CAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v6)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    goto LABEL_11;
  }
  Swift::String v7 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v7._countAndFlagsBits == 0x7370747468 && v7._object == (void *)0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    goto LABEL_7;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v8 & 1) == 0)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    char v11 = 0;
    return v11 & 1;
  }
LABEL_7:
  URL.host.getter();
  if (!v9) {
    goto LABEL_11;
  }
  Swift::String v10 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v10._countAndFlagsBits == 0xD000000000000013 && v10._object == (void *)0x800000010012B2B0) {
    char v11 = 1;
  }
  else {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void sub_100106EFC()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD00000000000001DLL, 0x800000010012B290, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for FinanceScriptURLRoute()
{
  return &type metadata for FinanceScriptURLRoute;
}

void sub_1001070F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD00000000000001ALL, 0x800000010012B2F0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  URL.scheme.getter();
  if (!v8) {
    goto LABEL_11;
  }
  Swift::String v9 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v9._countAndFlagsBits != 0xD000000000000014 || v9._object != (void *)0x800000010012B2D0)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v16 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(a2, a1, v11);
  uint64_t v13 = (int *)type metadata accessor for SettingsURLDestination(0);
  v12(a2 + v13[5], a1, v11);
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)(a2 + v13[7]);
  *(void *)(a2 + v13[6]) = _swiftEmptyArrayStorage;
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
LABEL_12:
  sub_100107514();
}

uint64_t sub_100107460()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0xD000000000000014 && v1._object == (void *)0x800000010012B2D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_100107514()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD00000000000001ALL, 0x800000010012B2F0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for FinishSetupURLRoute()
{
  return &type metadata for FinishSetupURLRoute;
}

void sub_10010770C(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v63 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v63);
  uint64_t v64 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v5 - 8);
  uint64_t v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLQueryItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v66 = (char *)&v60 - v12;
  uint64_t v13 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v13 - 8);
  uint64_t v72 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URLComponents();
  uint64_t v74 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v71 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v65 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v73 = (uint64_t)&v60 - v21;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_1000477B0(v22, (uint64_t)qword_10016AFF8);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v75 = v7;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v69 = v18;
    uint64_t v27 = v26;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v68 = v8;
    uint64_t v77 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v76 = sub_100042948(0xD000000000000018, 0x800000010012B310, &v77);
    uint64_t v70 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v76 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v77);
    uint64_t v15 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Start (%s.%s)…", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    uint64_t v8 = v68;
    swift_slowDealloc();
    uint64_t v18 = v69;
    swift_slowDealloc();
  }

  uint64_t v29 = v73;
  sub_1000FF4BC(v73);
  URL.absoluteString.getter();
  uint64_t v30 = (uint64_t)v72;
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v31 = v74;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v30, 1, v15) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v29, v17);
    uint64_t v32 = &qword_100164AE0;
LABEL_23:
    sub_10003F5D0(v30, v32);
    goto LABEL_31;
  }
  uint64_t v33 = v30;
  uint64_t v34 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v71, v33, v15);
  uint64_t v35 = URLComponents.percentEncodedQueryItems.getter();
  if (!v35)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v15);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v29, v17);
LABEL_31:
    uint64_t v59 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(a2, 1, 1, v59);
    goto LABEL_32;
  }
  uint64_t v70 = v15;
  uint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    uint64_t v61 = v17;
    uint64_t v62 = a1;
    uint64_t v68 = v8;
    uint64_t v69 = v18;
    uint64_t v72 = a2;
    uint64_t v37 = v8 + 16;
    unint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    unint64_t v39 = v35 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v40 = *(void *)(v37 + 56);
    swift_bridgeObjectRetain();
    uint64_t v41 = v75;
    while (1)
    {
      v38(v11, v39, v41);
      if (URLQueryItem.name.getter() == 1953460082 && v42 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v43) {
        break;
      }
      uint64_t v41 = v75;
      (*(void (**)(char *, uint64_t))(v37 - 8))(v11, v75);
      v39 += v40;
      if (!--v36)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = 1;
        a2 = v72;
        uint64_t v17 = v61;
        a1 = v62;
        uint64_t v8 = v68;
        uint64_t v18 = v69;
        goto LABEL_17;
      }
    }
    uint64_t v41 = v75;
LABEL_20:
    uint64_t v45 = v66;
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v67;
    uint64_t v8 = v68;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v11, v41);
    uint64_t v44 = 0;
    a2 = v72;
    uint64_t v17 = v61;
    a1 = v62;
    uint64_t v18 = v69;
  }
  else
  {
    uint64_t v44 = 1;
    uint64_t v41 = v75;
LABEL_17:
    uint64_t v45 = v66;
    uint64_t v30 = (uint64_t)v67;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v30, v44, 1, v41);
  swift_bridgeObjectRelease();
  int v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v30, 1, v41);
  unint64_t v47 = v71;
  if (v46 == 1)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v71, v70);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v73, v17);
    uint64_t v32 = (uint64_t *)&unk_100164080;
    goto LABEL_23;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v45, v30, v41);
  uint64_t v48 = URLQueryItem.value.getter();
  uint64_t v50 = v70;
  if (!v49) {
    goto LABEL_30;
  }
  if (v48 != 0x49465F5055544553 || v49 != 0xEC0000004853494ELL)
  {
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_29;
    }
LABEL_30:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v45, v75);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v50);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v73, v17);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v52(v65, a1, v17);
  uint64_t v53 = v47;
  uint64_t v54 = v8;
  uint64_t v55 = (uint64_t)v64;
  v52(v64, a1, v17);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v75);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v70);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v73, v17);
  uint64_t v56 = (int *)type metadata accessor for SettingsURLDestination(0);
  unint64_t v57 = &a2[v56[7]];
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(a2, v65, v17);
  sub_100102B34(v55, (uint64_t)&a2[v56[5]]);
  *(void *)&a2[v56[6]] = _swiftEmptyArrayStorage;
  *(void *)unint64_t v57 = 0;
  *((void *)v57 + 1) = 0;
  uint64_t v58 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(a2, 0, 1, v58);
LABEL_32:
  sub_1001087CC();
}

uint64_t sub_1001080DC()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  unint64_t v47 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URLComponents();
  uint64_t v51 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v50 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v17)
  {
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v45 = v8;
  uint64_t v46 = v14;
  uint64_t v48 = v12;
  Swift::String v18 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v18._countAndFlagsBits == 0x7366657270 && v18._object == (void *)0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v19 = 0;
    if ((v20 & 1) == 0) {
      return v19 & 1;
    }
  }
  uint64_t v21 = v50;
  sub_1000FF4BC(v50);
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = v51;
  uint64_t v23 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v11, 1, v48) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v21, v46);
    os_log_type_t v24 = &qword_100164AE0;
    uint64_t v25 = (uint64_t)v11;
LABEL_24:
    sub_10003F5D0(v25, v24);
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v26 = v49;
  (*(void (**)(void))(v22 + 32))();
  uint64_t v27 = URLComponents.percentEncodedQueryItems.getter();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v21, v46);
LABEL_30:
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v44 = v27;
  if (v28)
  {
    uint64_t v42 = v15;
    uint64_t v43 = v3;
    uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    unint64_t v30 = v27 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v32 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v29(v6, v30, v2);
      if (URLQueryItem.name.getter() == 1953460082 && v33 == 0xE400000000000000) {
        break;
      }
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_20;
      }
      (*v31)(v6, v2);
      v30 += v32;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = 1;
        uint64_t v15 = v42;
        uint64_t v3 = v43;
        uint64_t v37 = v45;
        uint64_t v36 = v46;
        unint64_t v38 = v47;
        uint64_t v23 = v48;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t v37 = v45;
    swift_bridgeObjectRelease();
    uint64_t v3 = v43;
    unint64_t v38 = v47;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v47, v6, v2);
    uint64_t v35 = 0;
    uint64_t v15 = v42;
    uint64_t v36 = v46;
    uint64_t v23 = v48;
LABEL_21:
    uint64_t v26 = v49;
  }
  else
  {
    uint64_t v35 = 1;
    uint64_t v37 = v45;
    uint64_t v36 = v46;
    unint64_t v38 = v47;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v38, v35, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v38, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v50, v36);
    os_log_type_t v24 = (uint64_t *)&unk_100164080;
    uint64_t v25 = (uint64_t)v38;
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v37, v38, v2);
  uint64_t v39 = URLQueryItem.value.getter();
  if (!v40)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v37, v2);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v50, v36);
    goto LABEL_30;
  }
  if (v39 == 0x49465F5055544553 && v40 == 0xEC0000004853494ELL) {
    char v19 = 1;
  }
  else {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v45, v2);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v48);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v50, v36);
  return v19 & 1;
}

void sub_1001087CC()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000018, 0x800000010012B310, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for FollowUpURLRoute()
{
  return &type metadata for FollowUpURLRoute;
}

void sub_1001089C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a1;
  uint64_t v114 = a2;
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v110 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v111 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v97 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v115 = (char *)&v97 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v104 = (char *)&v97 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v116 = (char *)&v97 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v106 = (char *)&v97 - v15;
  __chkstk_darwin(v14);
  uint64_t v108 = (char *)&v97 - v16;
  uint64_t v17 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v17 - 8);
  unint64_t v112 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URLComponents();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v105 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v97 - v27;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v103 = sub_1000477B0(v29, (uint64_t)qword_10016AFF8);
  unint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v117 = v2;
  char v102 = v7;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v109 = v22;
    v119[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v118 = sub_100042948(0xD000000000000015, 0x800000010012B350, v119);
    uint64_t v107 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v118 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, v119);
    uint64_t v19 = v107;
    uint64_t v2 = v117;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Start (%s.%s)…", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    uint64_t v22 = v109;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000FF4BC((uint64_t)v28);
  URL.absoluteString.getter();
  uint64_t v35 = (uint64_t)v112;
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v35, 1, v19);
  uint64_t v37 = v114;
  if (v36 == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v23);
    sub_10003F5D0(v35, &qword_100164AE0);
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v22, v35, v19);
  uint64_t v38 = URLComponents.percentEncodedQueryItems.getter();
  if (!v38) {
    goto LABEL_16;
  }
  uint64_t v39 = *(void *)(v38 + 16);
  if (!v39)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v23);
    goto LABEL_17;
  }
  uint64_t v109 = v22;
  uint64_t v97 = v20;
  uint64_t v99 = v28;
  uint64_t v100 = v23;
  uint64_t v98 = v24;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  uint64_t v41 = (char *)(v38 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80)));
  uint64_t v42 = *(void *)(v110 + 72);
  uint64_t v43 = v39;
  uint64_t v44 = (void (**)(char *, uint64_t))(v110 + 8);
  uint64_t v101 = v38;
  swift_bridgeObjectRetain();
  unint64_t v112 = v41;
  uint64_t v113 = v43;
  uint64_t v45 = v116;
  while (1)
  {
    v40(v45, v41, v2);
    if (URLQueryItem.name.getter() == 1953460082 && v46 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v47) {
      break;
    }
    uint64_t v45 = v116;
    uint64_t v2 = v117;
    (*v44)(v116, v117);
    v41 += v42;
    if (!--v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = v114;
      uint64_t v24 = v98;
      uint64_t v28 = v99;
      uint64_t v23 = v100;
      uint64_t v20 = v97;
      uint64_t v22 = v109;
      goto LABEL_15;
    }
  }
  uint64_t v2 = v117;
LABEL_21:
  uint64_t v49 = v116;
  swift_bridgeObjectRelease();
  uint64_t v50 = v110 + 32;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
  uint64_t v52 = v106;
  v51(v106, v49, v2);
  uint64_t v53 = v108;
  uint64_t v110 = v50;
  os_log_type_t v106 = (char *)v51;
  v51(v108, v52, v2);
  URLQueryItem.value.getter();
  if (!v54)
  {
    swift_bridgeObjectRelease();
    (*v44)(v53, v2);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v109, v19);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
    uint64_t v37 = v114;
LABEL_17:
    uint64_t v48 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v37, 1, 1, v48);
LABEL_18:
    sub_100109E38();
    return;
  }
  uint64_t v107 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v55 = 0;
  uint64_t v56 = v112;
  while (1)
  {
    uint64_t v57 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      break;
    }
    v40(v115, v56, v2);
    if (URLQueryItem.name.getter() == 0x64496D657469 && v58 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      uint64_t v61 = v104;
      ((void (*)(char *, char *, uint64_t))v106)(v104, v115, v2);
      uint64_t v62 = URLQueryItem.value.getter();
      uint64_t v64 = v63;
      uint64_t v60 = *v44;
      (*v44)(v61, v2);
      if (v64)
      {
        unint64_t v105 = v64;
        uint64_t v115 = (char *)v62;
        swift_bridgeObjectRetain();
        uint64_t v65 = 0;
        uint64_t v116 = (char *)0x800000010012B330;
        while (1)
        {
          uint64_t v66 = v65 + 1;
          if (__OFADD__(v65, 1)) {
            goto LABEL_51;
          }
          v40(v111, v112, v2);
          if (URLQueryItem.name.getter() == 0xD000000000000014 && v67 == v116) {
            break;
          }
          char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v68)
          {
            uint64_t v69 = v101;
            uint64_t v2 = v117;
LABEL_46:
            swift_bridgeObjectRelease();
            uint64_t v88 = v102;
            ((void (*)(char *, char *, uint64_t))v106)(v102, v111, v2);
            uint64_t v89 = URLQueryItem.value.getter();
            uint64_t v71 = v90;
            v60(v108, v2);
            (*(void (**)(char *, uint64_t))(v97 + 8))(v109, v107);
            v60(v88, v2);
            if (v71) {
              uint64_t v70 = v89;
            }
            else {
              uint64_t v70 = 0;
            }
            goto LABEL_49;
          }
          uint64_t v2 = v117;
          v60(v111, v117);
          ++v65;
          v112 += v42;
          if (v66 == v113)
          {
            uint64_t v69 = v101;
            swift_bridgeObjectRelease();
            v60(v108, v2);
            (*(void (**)(char *, uint64_t))(v97 + 8))(v109, v107);
            uint64_t v70 = 0;
            uint64_t v71 = 0;
LABEL_49:
            uint64_t v91 = v114;
            (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v114, v99, v100);
            uint64_t v92 = (int *)type metadata accessor for SettingsURLDestination(0);
            uint64_t v93 = (void *)(v91 + v92[5]);
            uint64_t v94 = v105;
            *uint64_t v93 = v115;
            v93[1] = v94;
            v93[2] = v70;
            v93[3] = v71;
            type metadata accessor for SettingsURLDestination.Action(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v95 = (void *)(v91 + v92[7]);
            *(void *)(v91 + v92[6]) = v69;
            *uint64_t v95 = 0;
            v95[1] = 0;
            uint64_t v96 = sub_100046B9C(&qword_10015F750);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v91, 0, 1, v96);
            goto LABEL_18;
          }
        }
        uint64_t v87 = v101;
        swift_bridgeObjectRelease();
        uint64_t v69 = v87;
        goto LABEL_46;
      }
LABEL_40:
      swift_bridgeObjectRelease();
      uint64_t v72 = v98;
      uint64_t v73 = v105;
      uint64_t v75 = v99;
      uint64_t v74 = v100;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v105, v99, v100);
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        uint64_t v116 = (char *)v79;
        *(_DWORD *)uint64_t v78 = 141558275;
        uint64_t v118 = 1752392040;
        v119[0] = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v78 + 12) = 2081;
        sub_1000FE218();
        uint64_t v80 = v100;
        uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v118 = sub_100042948(v81, v82, v119);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v83 = *(void (**)(char *, uint64_t))(v72 + 8);
        v83(v105, v80);
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Could not resolve the Item Identifier from the URL %{private,mask.hash}s.", (uint8_t *)v78, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v60(v108, v117);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v109, v107);
        v83(v99, v80);
      }
      else
      {

        uint64_t v84 = *(void (**)(char *, uint64_t))(v72 + 8);
        v84(v73, v74);
        v60(v108, v2);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v109, v107);
        v84(v75, v74);
      }
      uint64_t v85 = v114;
      uint64_t v86 = sub_100046B9C(&qword_10015F750);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
      goto LABEL_18;
    }
    char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v2 = v117;
      goto LABEL_32;
    }
    uint64_t v60 = *v44;
    uint64_t v2 = v117;
    (*v44)(v115, v117);
    ++v55;
    v56 += v42;
    if (v57 == v113)
    {
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
}

BOOL sub_1001097AC()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  uint64_t v45 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URLComponents();
  uint64_t v49 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v48 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v17) {
    return 0;
  }
  uint64_t v44 = v8;
  uint64_t v46 = v12;
  uint64_t v47 = v14;
  Swift::String v18 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v18._countAndFlagsBits == 0x7366657270 && v18._object == (void *)0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v49;
    uint64_t v19 = (uint64_t)v50;
    goto LABEL_6;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  Swift::Bool v22 = 0;
  uint64_t v20 = v49;
  uint64_t v19 = (uint64_t)v50;
  if (v21)
  {
LABEL_6:
    sub_1000FF4BC(v19);
    URL.absoluteString.getter();
    URLComponents.init(string:)();
    swift_bridgeObjectRelease();
    uint64_t v23 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v46) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v47);
      sub_10003F5D0((uint64_t)v11, &qword_100164AE0);
      return 0;
    }
    uint64_t v24 = v48;
    (*(void (**)(void))(v20 + 32))();
    uint64_t v25 = URLComponents.percentEncodedQueryItems.getter();
    uint64_t v26 = v47;
    if (v25)
    {
      uint64_t v27 = *(void *)(v25 + 16);
      uint64_t v43 = v25;
      if (v27)
      {
        uint64_t v41 = v15;
        uint64_t v42 = v3;
        uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
        unint64_t v29 = v25 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        unint64_t v30 = (void (**)(char *, uint64_t))(v3 + 8);
        uint64_t v31 = *(void *)(v3 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v28(v6, v29, v2);
          if (URLQueryItem.name.getter() == 1953460082 && v32 == 0xE400000000000000) {
            break;
          }
          char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v33) {
            goto LABEL_18;
          }
          (*v30)(v6, v2);
          v29 += v31;
          if (!--v27)
          {
            swift_bridgeObjectRelease();
            uint64_t v34 = 1;
            uint64_t v15 = v41;
            uint64_t v3 = v42;
            uint64_t v23 = v46;
            uint64_t v26 = v47;
            uint64_t v24 = v48;
            uint64_t v20 = v49;
            uint64_t v35 = (uint64_t)v45;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease();
LABEL_18:
        uint64_t v15 = v41;
        uint64_t v3 = v42;
        uint64_t v23 = v46;
        uint64_t v26 = v47;
        uint64_t v24 = v48;
        uint64_t v20 = v49;
        uint64_t v35 = (uint64_t)v45;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v35, v6, v2);
        uint64_t v34 = 0;
      }
      else
      {
        uint64_t v34 = 1;
        uint64_t v20 = v49;
        uint64_t v35 = (uint64_t)v45;
      }
LABEL_19:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v35, v34, 1, v2);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v35, 1, v2) == 1)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v23);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v26);
        sub_10003F5D0(v35, (uint64_t *)&unk_100164080);
        return 0;
      }
      int v36 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v44, v35, v2);
      URLQueryItem.value.getter();
      if (v37)
      {
        v38._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v23;
        Swift::Bool v22 = String.hasPrefix(_:)(v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v48, v39);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v26);
        return v22;
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v23);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v26);
    return 0;
  }
  return v22;
}

void sub_100109E38()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000015, 0x800000010012B350, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for InternetAccountsSettingsURLRoute()
{
  return &type metadata for InternetAccountsSettingsURLRoute;
}

uint64_t sub_10010A030()
{
  sub_100046B9C(&qword_1001615B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100121E40;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v4;
  *(void *)(inited + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 104) = v5;
  *(void *)(inited + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 120) = v6;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v7;
  *(void *)(inited + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 152) = v8;
  *(void *)(inited + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 184) = v10;
  *(void *)(inited + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 200) = v11;
  *(void *)(inited + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 216) = v12;
  *(void *)(inited + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 232) = v13;
  *(void *)(inited + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 248) = v14;
  *(void *)(inited + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 264) = v15;
  Swift::Int v16 = sub_10000CC20(inited);
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  qword_100164BB0 = v16;
  return result;
}

uint64_t sub_10010A1E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v2 - 8);
  uint64_t v71 = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for URLQueryItem();
  uint64_t v74 = *(void *)(v72 - 8);
  uint64_t v4 = __chkstk_darwin(v72);
  uint64_t v6 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v73 = (char *)v65 - v7;
  uint64_t v8 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URLComponents();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v76 = v11;
  uint64_t v77 = v12;
  __chkstk_darwin(v11);
  uint64_t v75 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100046B9C(&qword_100164BB8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v69 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v70 = (char *)v65 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  char v21 = (char *)v65 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v65 - v22;
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4BC((uint64_t)v27);
  URL.scheme.getter();
  if (!v28) {
    goto LABEL_27;
  }
  uint64_t v78 = v24;
  uint64_t v79 = v25;
  uint64_t v80 = a1;
  Swift::String v29 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v29._countAndFlagsBits == 0xD000000000000013 && v29._object == (void *)0x8000000100122C10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v30 = URL.pathComponents.getter();
    uint64_t v31 = *(void *)(v30 + 16);
    uint64_t v32 = v78;
    if (v31)
    {
      object = v29._object;
      swift_bridgeObjectRetain();
      uint64_t v33 = v30 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        UUID.init(uuidString:)();
        uint64_t v34 = type metadata accessor for UUID();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v21, 1, v34) != 1) {
          break;
        }
        v33 += 16;
        sub_10003F5D0((uint64_t)v21, &qword_100164BB8);
        swift_bridgeObjectRelease();
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }
      sub_10003F5D0((uint64_t)v21, &qword_100164BB8);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain();
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v35 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v23, 1, 1, v35);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v32);
    return sub_10010EE1C((uint64_t)v23, v80);
  }
  if ((v29._countAndFlagsBits != 0x7366657270 || v29._object != (void *)0xE500000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v79;
    a1 = v80;
    uint64_t v24 = v78;
LABEL_27:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    goto LABEL_28;
  }
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v37 = v76;
  uint64_t v36 = v77;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v10, 1, v76) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v78);
    sub_10003F5D0((uint64_t)v10, &qword_100164AE0);
    a1 = v80;
LABEL_28:
    uint64_t v54 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(a1, 1, 1, v54);
  }
  uint64_t v39 = v75;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v75, v10, v37);
  uint64_t v40 = URLComponents.percentEncodedQueryItems.getter();
  a1 = v80;
  if (!v40)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v37);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v78);
    goto LABEL_28;
  }
  uint64_t v41 = *(void *)(v40 + 16);
  object = v29._object;
  if (v41)
  {
    uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v74 + 16);
    unint64_t v43 = v40 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
    uint64_t v44 = (void (**)(char *, uint64_t))(v74 + 8);
    uint64_t v66 = *(void *)(v74 + 72);
    uint64_t v67 = v42;
    v65[1] = v40;
    swift_bridgeObjectRetain();
    uint64_t v45 = v72;
    while (1)
    {
      v67(v6, v43, v45);
      if (URLQueryItem.name.getter() == 1752457584 && v46 == 0xE400000000000000) {
        break;
      }
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_33;
      }
      (*v44)(v6, v45);
      v43 += v66;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = 1;
        uint64_t v49 = v78;
        uint64_t v50 = v79;
        uint64_t v51 = v73;
        uint64_t v52 = v74;
        uint64_t v53 = (uint64_t)v71;
        a1 = v80;
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v49 = v78;
    uint64_t v50 = v79;
    uint64_t v52 = v74;
    uint64_t v53 = (uint64_t)v71;
    a1 = v80;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v53, v6, v45);
    uint64_t v48 = 0;
    uint64_t v51 = v73;
  }
  else
  {
    uint64_t v48 = 1;
    uint64_t v49 = v78;
    uint64_t v50 = v79;
    uint64_t v45 = v72;
    uint64_t v51 = v73;
    uint64_t v52 = v74;
    uint64_t v53 = (uint64_t)v71;
  }
LABEL_34:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v53, v48, 1, v45);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v53, 1, v45) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v76);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v49);
    sub_10003F5D0(v53, (uint64_t *)&unk_100164080);
    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v51, v53, v45);
  uint64_t v55 = URLQueryItem.value.getter();
  if (v56)
  {
    uint64_t v83 = v55;
    uint64_t v84 = v56;
    uint64_t v81 = 47;
    unint64_t v82 = 0xE100000000000000;
    sub_100030C58();
    uint64_t v57 = StringProtocol.components<A>(separatedBy:)();
    swift_bridgeObjectRelease();
    uint64_t v58 = *(void *)(v57 + 16);
    if (v58)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = v57 + 40;
      uint64_t v60 = (uint64_t)v69;
      while (1)
      {
        swift_bridgeObjectRetain();
        UUID.init(uuidString:)();
        uint64_t v61 = type metadata accessor for UUID();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48))(v60, 1, v61) != 1) {
          break;
        }
        v59 += 16;
        sub_10003F5D0(v60, &qword_100164BB8);
        swift_bridgeObjectRelease();
        if (!--v58)
        {
          swift_bridgeObjectRelease();
          uint64_t v49 = v78;
          uint64_t v50 = v79;
          uint64_t v51 = v73;
          uint64_t v52 = v74;
          goto LABEL_42;
        }
      }
      sub_10003F5D0(v60, &qword_100164BB8);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain();
      uint64_t v63 = (uint64_t)v70;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v45);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v76);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v78);
    }
    else
    {
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v62 = type metadata accessor for UUID();
      uint64_t v63 = (uint64_t)v70;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v70, 1, 1, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v45);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v76);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v49);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v45);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v76);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v49);
    uint64_t v64 = type metadata accessor for UUID();
    uint64_t v63 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v70, 1, 1, v64);
  }
  return sub_10010EE1C(v63, a1);
}

void sub_10010ADA4(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v177 = a2;
  uint64_t v3 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v162 = (char *)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100046B9C(&qword_100164BB8);
  __chkstk_darwin(v5 - 8);
  unint64_t v176 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v171 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v172);
  unint64_t v170 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C((uint64_t *)&unk_100163C10);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v159 = (char *)&v157 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v166 = (char *)&v157 - v15;
  __chkstk_darwin(v14);
  id v174 = (char *)&v157 - v16;
  uint64_t v178 = type metadata accessor for URLComponents();
  uint64_t v17 = *(void *)(v178 - 8);
  uint64_t v18 = __chkstk_darwin(v178);
  uint64_t v163 = (char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v21 = (char *)&v157 - v20;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v180 = *(void *)(v22 - 8);
  uint64_t v181 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v160 = (char *)&v157 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v158 = (char *)&v157 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v167 = (char *)&v157 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v161 = (char *)&v157 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v175 = (char *)&v157 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v169 = (char *)&v157 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v165 = (char *)&v157 - v36;
  __chkstk_darwin(v35);
  Swift::String v38 = (char *)&v157 - v37;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v173 = sub_1000477B0(v39, (uint64_t)qword_10016AFF8);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v179 = v17;
  uint64_t v168 = v9;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v157 = a1;
    uint64_t v44 = v43;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v164 = v7;
    uint64_t v183 = v45;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v182 = sub_100042948(0xD000000000000025, 0x800000010012B370, &v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v44 + 12) = 2080;
    uint64_t v182 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Start (%s.%s)…", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    uint64_t v7 = v164;
    swift_slowDealloc();
    a1 = v157;
    swift_slowDealloc();
  }

  sub_1000FF4BC((uint64_t)v38);
  URLComponents.init()();
  URLComponents.scheme.setter();
  if (sub_10010CE50())
  {
    unint64_t v176 = v38;
    URLComponents.host.setter();
    sub_10010D810();
    char v47 = v46;
    sub_100046B9C(&qword_1001615B0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_10011C370;
    *(void *)(v48 + 32) = sub_10010DA2C();
    *(void *)(v48 + 40) = v49;
    if (v47)
    {
      uint64_t v50 = 0x53544E554F434341;
      unint64_t v51 = 0xE800000000000000;
    }
    else
    {
      uint64_t v50 = 0x4F4343415F444441;
      unint64_t v51 = 0xEB00000000544E55;
    }
    *(void *)(v48 + 48) = v50;
    *(void *)(v48 + 56) = v51;
    uint64_t v183 = v48;
    sub_100046B9C(&qword_100164810);
    sub_10005A4C0();
    uint64_t v56 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v183 = 47;
    unint64_t v184 = 0xE100000000000000;
    v59._countAndFlagsBits = v56;
    v59._object = v58;
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    URLComponents.path.setter();
    uint64_t v60 = v21;
    uint64_t v61 = (uint64_t)v174;
    URLComponents.url.getter();
    int v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v61, 1, v181);
    uint64_t v63 = v175;
    if (v62 == 1)
    {
      sub_10003F5D0(v61, (uint64_t *)&unk_100163C10);
      (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v63, a1, v181);
      uint64_t v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v64, v65)) {
        goto LABEL_21;
      }
      goto LABEL_30;
    }
    uint64_t v70 = v180;
    uint64_t v69 = v181;
    uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v180 + 32);
    uint64_t v72 = v165;
    v71(v165, v61, v181);
    uint64_t v73 = v169;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v169, v72, v69);
    type metadata accessor for PrimarySettingsListItemIdentifier();
    uint64_t v74 = (uint64_t)v170;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = *(void (**)(char *, uint64_t))(v70 + 8);
    v75(v72, v69);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v60, v178);
    v75(v176, v69);
    uint64_t v76 = (int *)type metadata accessor for SettingsURLDestination(0);
    uint64_t v77 = v177;
    uint64_t v78 = &v177[v76[7]];
    uint64_t v79 = v177;
    uint64_t v80 = v73;
  }
  else
  {
    if ((sub_10010E260() & 1) == 0)
    {
      Swift::Int v66 = sub_10000CC20((uint64_t)&off_1001510D0);
      swift_arrayDestroy();
      uint64_t v67 = (uint64_t)v176;
      sub_10010A1E4((uint64_t)v176);
      uint64_t v68 = v171;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v67, 1, v7) == 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v179 + 8))(v21, v178);
        (*(void (**)(char *, uint64_t))(v180 + 8))(v38, v181);
        sub_10003F5D0(v67, &qword_100164BB8);
LABEL_31:
        uint64_t v109 = sub_100046B9C(&qword_10015F750);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v177, 1, 1, v109);
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v168, v67, v7);
      URL.absoluteString.getter();
      uint64_t v96 = (uint64_t)v162;
      URLComponents.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v98 = v178;
      uint64_t v97 = v179;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v96, 1, v178) == 1)
      {
        swift_bridgeObjectRelease();
        sub_10003F5D0(v96, &qword_100164AE0);
        uint64_t v99 = Logger.logObject.getter();
        os_log_type_t v100 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v99, v100))
        {
          uint64_t v101 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v101 = 0;
          _os_log_impl((void *)&_mh_execute_header, v99, v100, "Could not retrieve original path for Internet Accounts.", v101, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v171 + 8))(v168, v7);
        (*(void (**)(char *, uint64_t))(v179 + 8))(v21, v178);
        (*(void (**)(char *, uint64_t))(v180 + 8))(v38, v181);
        goto LABEL_31;
      }
      unint64_t v176 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v163, v96, v98);
      uint64_t v110 = URLComponents.queryItems.getter();
      if (v110) {
        uint64_t v111 = (void *)v110;
      }
      else {
        uint64_t v111 = _swiftEmptyArrayStorage;
      }
      unint64_t v112 = sub_10010EA78((uint64_t)v111, v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      URLComponents.host.setter();
      uint64_t v113 = URL.pathComponents.getter();
      sub_100046B9C(&qword_1001615B0);
      uint64_t v114 = swift_allocObject();
      *(_OWORD *)(v114 + 16) = xmmword_10011C370;
      *(void *)(v114 + 32) = sub_10010DA2C();
      *(void *)(v114 + 40) = v115;
      *(void *)(v114 + 48) = 0x53544E554F434341;
      *(void *)(v114 + 56) = 0xE800000000000000;
      uint64_t v116 = *(void *)(v113 + 16);
      uint64_t v183 = v114;
      sub_1000E7398(v113, v113 + 32, v116 != 0, (2 * v116) | 1);
      swift_bridgeObjectRelease();
      uint64_t v117 = (char *)v183;
      uint64_t v118 = UUID.uuidString.getter();
      uint64_t v120 = v119;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v175 = v112;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v117 = sub_100027268(0, *((void *)v117 + 2) + 1, 1, v117);
      }
      unint64_t v123 = *((void *)v117 + 2);
      unint64_t v122 = *((void *)v117 + 3);
      uint64_t v164 = v7;
      if (v123 >= v122 >> 1) {
        uint64_t v117 = sub_100027268((char *)(v122 > 1), v123 + 1, 1, v117);
      }
      *((void *)v117 + 2) = v123 + 1;
      uint64_t v124 = &v117[16 * v123];
      *((void *)v124 + 4) = v118;
      *((void *)v124 + 5) = v120;
      uint64_t v183 = (uint64_t)v117;
      sub_100046B9C(&qword_100164810);
      sub_10005A4C0();
      uint64_t v125 = BidirectionalCollection<>.joined(separator:)();
      unint64_t v127 = v126;
      swift_bridgeObjectRelease();
      uint64_t v183 = 47;
      unint64_t v184 = 0xE100000000000000;
      v128._countAndFlagsBits = v125;
      v128._object = v127;
      String.append(_:)(v128);
      swift_bridgeObjectRelease();
      URLComponents.path.setter();
      uint64_t v129 = v175;
      if (*((void *)v175 + 2))
      {
        swift_bridgeObjectRetain();
        URLComponents.queryItems.setter();
      }
      uint64_t v130 = (uint64_t)v159;
      URLComponents.url.getter();
      int v131 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v130, 1, v181);
      uint64_t v132 = v164;
      uint64_t v133 = v160;
      if (v131 != 1)
      {
        uint64_t v143 = v178;
        char v144 = *(void (**)(char *, uint64_t))(v179 + 8);
        v144(v163, v178);
        (*(void (**)(char *, uint64_t))(v171 + 8))(v168, v132);
        v144(v21, v143);
        uint64_t v145 = v180;
        uint64_t v146 = v181;
        (*(void (**)(char *, uint64_t))(v180 + 8))(v176, v181);
        uint64_t v147 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 32);
        uint64_t v148 = v158;
        v147(v158, v130, v146);
        uint64_t v149 = v177;
        v147(v177, (uint64_t)v148, v146);
        uint64_t v150 = type metadata accessor for SettingsURLDestination(0);
        type metadata accessor for PrimarySettingsListItemIdentifier();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v151 = &v149[*(int *)(v150 + 28)];
        *(void *)&v149[*(int *)(v150 + 24)] = v129;
        *(void *)uint64_t v151 = 0;
        *((void *)v151 + 1) = 0;
        uint64_t v152 = sub_100046B9C(&qword_10015F750);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v149, 0, 1, v152);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      sub_10003F5D0(v130, (uint64_t *)&unk_100163C10);
      (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v133, a1, v181);
      uint64_t v134 = Logger.logObject.getter();
      os_log_type_t v135 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v134, v135))
      {

        uint64_t v153 = v181;
        uint64_t v154 = *(void (**)(char *, uint64_t))(v180 + 8);
        v154(v133, v181);
        uint64_t v155 = v178;
        char v156 = *(void (**)(char *, uint64_t))(v179 + 8);
        v156(v163, v178);
        (*(void (**)(char *, uint64_t))(v171 + 8))(v168, v132);
        v156(v21, v155);
        v154(v176, v153);
        goto LABEL_31;
      }
      int v136 = v133;
      uint64_t v137 = swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(_DWORD *)uint64_t v137 = 141558275;
      uint64_t v182 = 1752392040;
      uint64_t v183 = v138;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v137 + 12) = 2081;
      uint64_t v139 = URL.absoluteString.getter();
      uint64_t v182 = sub_100042948(v139, v140, &v183);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v94 = v181;
      uint64_t v95 = *(void (**)(char *, uint64_t))(v180 + 8);
      v95(v136, v181);
      _os_log_impl((void *)&_mh_execute_header, v134, v135, "Could not create re-direct URL for Internet Accounts for input URL %{private,mask.hash}s", (uint8_t *)v137, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v141 = v178;
      char v142 = *(void (**)(char *, uint64_t))(v179 + 8);
      v142(v163, v178);
      (*(void (**)(char *, uint64_t))(v171 + 8))(v168, v132);
      v142(v21, v141);
LABEL_22:
      v95(v176, v94);
      goto LABEL_31;
    }
    unint64_t v176 = v38;
    URLComponents.host.setter();
    sub_10010D810();
    char v53 = v52;
    sub_100046B9C(&qword_1001615B0);
    if (v53)
    {
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_10011C380;
      *(void *)(v54 + 32) = sub_10010DA2C();
      *(void *)(v54 + 40) = v55;
      *(void *)(v54 + 48) = 0x53544E554F434341;
      *(void *)(v54 + 56) = 0xE800000000000000;
      *(void *)(v54 + 64) = 0x4F4343415F444441;
      *(void *)(v54 + 72) = 0xEB00000000544E55;
    }
    else
    {
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_10011C370;
      *(void *)(v54 + 32) = sub_10010DA2C();
      *(void *)(v54 + 40) = v81;
      *(void *)(v54 + 48) = 0x4F4343415F444441;
      *(void *)(v54 + 56) = 0xEB00000000544E55;
    }
    uint64_t v183 = v54;
    sub_100046B9C(&qword_100164810);
    sub_10005A4C0();
    uint64_t v82 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v84 = v83;
    swift_bridgeObjectRelease();
    uint64_t v183 = 47;
    unint64_t v184 = 0xE100000000000000;
    v85._countAndFlagsBits = v82;
    v85._object = v84;
    String.append(_:)(v85);
    swift_bridgeObjectRelease();
    URLComponents.path.setter();
    uint64_t v86 = v21;
    uint64_t v87 = (uint64_t)v166;
    URLComponents.url.getter();
    int v88 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v87, 1, v181);
    uint64_t v63 = v167;
    if (v88 == 1)
    {
      sub_10003F5D0(v87, (uint64_t *)&unk_100163C10);
      (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v63, a1, v181);
      uint64_t v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v64, v65))
      {
LABEL_21:
        uint64_t v89 = v63;
        uint64_t v90 = swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        *(_DWORD *)uint64_t v90 = 141558275;
        uint64_t v182 = 1752392040;
        uint64_t v183 = v91;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v90 + 12) = 2081;
        uint64_t v92 = URL.absoluteString.getter();
        uint64_t v182 = sub_100042948(v92, v93, &v183);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v94 = v181;
        uint64_t v95 = *(void (**)(char *, uint64_t))(v180 + 8);
        v95(v89, v181);
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "Could not create re-direct URL for Internet Accounts for input URL %{private,mask.hash}s", (uint8_t *)v90, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v179 + 8))(v21, v178);
        goto LABEL_22;
      }
LABEL_30:

      uint64_t v107 = v181;
      uint64_t v108 = *(void (**)(char *, uint64_t))(v180 + 8);
      v108(v63, v181);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v21, v178);
      v108(v176, v107);
      goto LABEL_31;
    }
    uint64_t v102 = v180;
    uint64_t v69 = v181;
    uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v180 + 32);
    uint64_t v103 = v161;
    v71(v161, v87, v181);
    uint64_t v104 = v169;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v169, v103, v69);
    type metadata accessor for PrimarySettingsListItemIdentifier();
    uint64_t v74 = (uint64_t)v170;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    unint64_t v105 = *(void (**)(char *, uint64_t))(v102 + 8);
    v105(v103, v69);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v86, v178);
    v105(v176, v69);
    uint64_t v76 = (int *)type metadata accessor for SettingsURLDestination(0);
    uint64_t v77 = v177;
    uint64_t v78 = &v177[v76[7]];
    uint64_t v79 = v177;
    uint64_t v80 = v104;
  }
  v71(v79, (uint64_t)v80, v69);
  sub_100102B34(v74, (uint64_t)&v77[v76[5]]);
  *(void *)&v77[v76[6]] = _swiftEmptyArrayStorage;
  *(void *)uint64_t v78 = 0;
  *((void *)v78 + 1) = 0;
  uint64_t v106 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v77, 0, 1, v106);
LABEL_32:
  sub_10010E078();
}

uint64_t sub_10010C3C4()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  uint64_t v79 = (char *)&v70 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v84 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  int v88 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v70 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v70 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v80 = (char *)&v70 - v12;
  __chkstk_darwin(v11);
  uint64_t v81 = (char *)&v70 - v13;
  uint64_t v14 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URLComponents();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::String v85 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v87 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v23) {
    goto LABEL_25;
  }
  uint64_t v77 = v7;
  uint64_t v82 = v18;
  uint64_t v83 = v17;
  Swift::String v24 = String.lowercased()();
  swift_bridgeObjectRelease();
  if ((v24._countAndFlagsBits != 0x7366657270 || v24._object != (void *)0xE500000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v24._countAndFlagsBits == 0xD000000000000013 && v24._object == (void *)0x8000000100122C10
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if ((unint64_t)URL.host(percentEncoded:)(1).value._object)
      {
        char v38 = sub_100101D40();
        if (v38 != 45)
        {
          if (sub_10010177C(v38) == 0xD000000000000023 && v41 == 0x8000000100122B20)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v39 = 1;
          }
          else
          {
            char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          return v39 & 1;
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  object = v24._object;
  uint64_t v25 = v87;
  sub_1000FF4BC(v87);
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = v82;
  uint64_t v26 = v83;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v16, 1, v83) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    sub_10003F5D0((uint64_t)v16, &qword_100164AE0);
LABEL_25:
    char v39 = 0;
    return v39 & 1;
  }
  uint64_t v28 = v85;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v85, v16, v26);
  uint64_t v29 = URLComponents.percentEncodedQueryItems.getter();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
LABEL_24:
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    goto LABEL_25;
  }
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v85, v26);
    goto LABEL_24;
  }
  uint64_t v73 = v20;
  uint64_t v74 = v21;
  uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
  unint64_t v32 = v29 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
  uint64_t v86 = *(void *)(v84 + 72);
  uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v84 + 8);
  uint64_t v75 = v29;
  swift_bridgeObjectRetain();
  unint64_t v34 = v32;
  uint64_t v76 = v30;
  uint64_t v35 = v30;
  while (1)
  {
    v31(v10, v34, v2);
    if (URLQueryItem.name.getter() == 1953460082 && v36 == 0xE400000000000000) {
      break;
    }
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_31;
    }
    (*v33)(v10, v2);
    v34 += v86;
    if (!--v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v73;
      uint64_t v21 = v74;
      uint64_t v27 = v82;
      uint64_t v26 = v83;
      uint64_t v25 = v87;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v43 = v84 + 32;
  BOOL v42 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
  uint64_t v44 = v80;
  v42(v80, v10, v2);
  uint64_t v45 = v81;
  uint64_t v71 = v42;
  uint64_t v72 = v43;
  v42(v81, v44, v2);
  uint64_t v46 = URLQueryItem.value.getter();
  if (!v47)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v33)(v45, v2);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v83);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v87, v73);
    goto LABEL_25;
  }
  uint64_t v70 = v46;
  uint64_t v80 = v47;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v48 = 0;
  while (1)
  {
    uint64_t v49 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      return result;
    }
    v31(v88, v32, v2);
    if (URLQueryItem.name.getter() == 1752457584 && v50 == 0xE400000000000000) {
      break;
    }
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_42;
    }
    uint64_t result = (*v33)(v88, v2);
    ++v48;
    v32 += v86;
    if (v49 == v76)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = 1;
      uint64_t v53 = v73;
      uint64_t v54 = v82;
      uint64_t v55 = v83;
      uint64_t v56 = v87;
      uint64_t v57 = v77;
      uint64_t v58 = (uint64_t)v79;
      goto LABEL_43;
    }
  }
  swift_bridgeObjectRelease();
LABEL_42:
  swift_bridgeObjectRelease();
  uint64_t v58 = (uint64_t)v79;
  v71(v79, v88, v2);
  uint64_t v52 = 0;
  uint64_t v53 = v73;
  uint64_t v54 = v82;
  uint64_t v55 = v83;
  uint64_t v56 = v87;
  uint64_t v57 = v77;
LABEL_43:
  uint64_t v59 = v84;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v58, v52, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v58, 1, v2) == 1)
  {
    sub_10003F5D0(v58, (uint64_t *)&unk_100164080);
    char v60 = 1;
  }
  else
  {
    v71(v57, (char *)v58, v2);
    uint64_t v61 = URLQueryItem.value.getter();
    if (v62)
    {
      if (v61 == 0xD000000000000016 && v62 == 0x800000010012B410)
      {
        swift_bridgeObjectRelease();
        (*v33)(v57, v2);
        char v60 = 0;
      }
      else
      {
        char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        (*v33)(v57, v2);
        char v60 = v63 ^ 1;
      }
    }
    else
    {
      (*v33)(v57, v2);
      char v60 = 1;
    }
  }
  uint64_t v64 = v70;
  os_log_type_t v65 = v80;
  if (v70 == 0xD000000000000016 && v80 == (char *)0x800000010012B3D0
    || (v66 = _stringCompareWithSmolCheck(_:_:expecting:)(), v64 = v70, v65 = v80, char v67 = 0, (v66 & 1) != 0))
  {
    char v67 = v60;
  }
  if (v64 == 0xD000000000000010 && v65 == (char *)0x800000010012B3F0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v39 = 1;
  }
  else
  {
    char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v39 = v68 | v67;
  }
  uint64_t v69 = v85;
  (*v33)(v81, v2);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v69, v55);
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v56, v53);
  return v39 & 1;
}

void *sub_10010CE50()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  os_log_type_t v65 = (char *)v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for URLQueryItem();
  uint64_t v2 = *(void *)(v70 - 8);
  uint64_t v3 = __chkstk_darwin(v70);
  uint64_t v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v66 = (char *)v61 - v6;
  uint64_t v7 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  uint64_t v69 = v11;
  __chkstk_darwin(v10);
  char v67 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v61 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v61 - v21;
  sub_1000FF4BC((uint64_t)v61 - v21);
  URL.scheme.getter();
  if (!v23) {
    goto LABEL_55;
  }
  uint64_t v64 = v2;
  Swift::String v24 = String.lowercased()();
  swift_bridgeObjectRelease();
  object = v24._object;
  if ((v24._countAndFlagsBits != 0xD000000000000013 || v24._object != (void *)0x8000000100122C10)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v24._countAndFlagsBits == 0x7366657270 && v24._object == (void *)0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      URL.absoluteString.getter();
      URLComponents.init(string:)();
      swift_bridgeObjectRelease();
      uint64_t v34 = v68;
      uint64_t v35 = v69;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v9, 1, v68) == 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
        uint64_t v36 = &qword_100164AE0;
LABEL_49:
        sub_10003F5D0((uint64_t)v9, v36);
        goto LABEL_56;
      }
      uint64_t v44 = v67;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v67, v9, v34);
      uint64_t v45 = URLComponents.percentEncodedQueryItems.getter();
      if (v45)
      {
        uint64_t v46 = *(void *)(v45 + 16);
        v61[1] = v45;
        if (v46)
        {
          char v47 = *(void (**)(char *, unint64_t, uint64_t))(v64 + 16);
          unint64_t v48 = v45 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
          uint64_t v49 = (void (**)(char *, uint64_t))(v64 + 8);
          uint64_t v62 = *(void *)(v64 + 72);
          char v63 = v47;
          swift_bridgeObjectRetain();
          uint64_t v50 = v70;
          while (1)
          {
            v63(v5, v48, v50);
            if (URLQueryItem.name.getter() == 1752457584 && v51 == 0xE400000000000000) {
              break;
            }
            char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v52) {
              goto LABEL_46;
            }
            uint64_t v50 = v70;
            (*v49)(v5, v70);
            v48 += v62;
            if (!--v46)
            {
              swift_bridgeObjectRelease();
              uint64_t v53 = 1;
              uint64_t v54 = v64;
              uint64_t v35 = v69;
              uint64_t v55 = v66;
              uint64_t v44 = v67;
              goto LABEL_44;
            }
          }
          swift_bridgeObjectRelease();
LABEL_46:
          uint64_t v50 = v70;
          swift_bridgeObjectRelease();
          uint64_t v54 = v64;
          uint64_t v9 = v65;
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v65, v5, v50);
          uint64_t v53 = 0;
          uint64_t v35 = v69;
          uint64_t v55 = v66;
          uint64_t v44 = v67;
        }
        else
        {
          uint64_t v53 = 1;
          uint64_t v50 = v70;
          uint64_t v54 = v64;
          uint64_t v55 = v66;
LABEL_44:
          uint64_t v9 = v65;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v9, v53, 1, v50);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v9, 1, v50) == 1)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v44, v68);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
          uint64_t v36 = (uint64_t *)&unk_100164080;
          goto LABEL_49;
        }
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v55, v9, v50);
        uint64_t v57 = URLQueryItem.value.getter();
        if (v58)
        {
          if (v57 == 1953460082 && v58 == 0xE400000000000000) {
            char v39 = 1;
          }
          else {
            char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          uint64_t v59 = v64;
          uint64_t v60 = v69;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v55, v70);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v67, v68);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
          swift_bridgeObjectRelease();
          return (void *)(v39 & 1);
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v50);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v68);
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v44, v34);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_55:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    goto LABEL_56;
  }
  if ((unint64_t)URL.host(percentEncoded:)(1).value._object && (char v25 = sub_100101D40(), v25 != 45))
  {
    if (sub_10010177C(v25) == 0xD000000000000023 && v37 == 0x8000000100122B20)
    {
      swift_bridgeObjectRelease();
      char v26 = 1;
    }
    else
    {
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v26 = 0;
  }
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v27(v20, v22, v13);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
    goto LABEL_13;
  }
  uint64_t v28 = *(void *)(URL.pathComponents.getter() + 16);
  swift_bridgeObjectRelease();
  v27(v17, v20, v13);
  if (v28)
  {
    uint64_t v29 = URL.pathComponents.getter();
    unint64_t v30 = *(void *)(v29 + 16);
    unint64_t v31 = v30 != 0;
    uint64_t result = object;
    if (v30 == v31)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
      v33(v17, v13);
LABEL_13:
      v33(v20, v13);
      v33(v22, v13);
LABEL_56:
      char v39 = 0;
      return (void *)(v39 & 1);
    }
    if (v30 <= v31)
    {
      __break(1u);
      return result;
    }
    uint64_t v40 = v29 + 16 * v31;
    uint64_t v42 = *(void *)(v40 + 32);
    uint64_t v41 = *(void *)(v40 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v42 == 1953460082 && v41 == 0xE400000000000000) {
      char v39 = 1;
    }
    else {
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v14 + 8);
    v56(v17, v13);
    v56(v20, v13);
    v56(v22, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v38 = *(void (**)(char *, uint64_t))(v14 + 8);
    v38(v17, v13);
    v38(v20, v13);
    v38(v22, v13);
    char v39 = 1;
  }
  return (void *)(v39 & 1);
}

void sub_10010D810()
{
  id v0 = [self defaultStore];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 accounts];

    if (v2)
    {
      sub_10010EDDC();
      static Array._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (v3)
      {
LABEL_6:
        uint64_t v4 = 4;
        while (1)
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
            id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v5 = (id)_swiftEmptyArrayStorage[v4];
          }
          uint64_t v6 = v5;
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v4 - 4, 1))
          {
            __break(1u);
            goto LABEL_19;
          }
          if (qword_10015F1D0 != -1) {
            swift_once();
          }
          uint64_t v8 = qword_100164BB0;
          id v9 = [v6 accountType];
          if (!v9) {
            break;
          }
          uint64_t v10 = v9;
          id v11 = [v9 identifier];

          if (!v11) {
            goto LABEL_22;
          }
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v13;

          char v15 = sub_100049E90(v12, v14, v8);
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {
            ++v4;
            if (v7 != v3) {
              continue;
            }
          }
          goto LABEL_20;
        }
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v3 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3) {
        goto LABEL_6;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_10010DA2C()
{
  uint64_t v50 = type metadata accessor for URLQueryItem();
  uint64_t v0 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v2 = (char *)v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v3 - 8);
  char v47 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLComponents();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4BC((uint64_t)v14);
  URL.scheme.getter();
  if (!v15) {
    goto LABEL_32;
  }
  unint64_t v48 = "com.apple.mobilecal";
  uint64_t v45 = v0;
  Swift::String v16 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v16._countAndFlagsBits == 0xD000000000000013 && v16._object == (void *)0x8000000100122C10)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_32;
    }
  }
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10003F5D0((uint64_t)v7, &qword_100164AE0);
    goto LABEL_32;
  }
  uint64_t v18 = v49;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v49, v7, v8);
  uint64_t v19 = URLComponents.percentEncodedQueryItems.getter();
  if (!v19)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v40 = v9;
    uint64_t v41 = v8;
    uint64_t v42 = v12;
    uint64_t v43 = v11;
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
    unint64_t v21 = v19 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    uint64_t v22 = (void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v23 = *(void *)(v45 + 72);
    v39[1] = v19;
    swift_bridgeObjectRetain();
    unint64_t v44 = 0x800000010012B3A0;
    uint64_t v24 = v50;
    while (1)
    {
      v46(v2, v21, v24);
      if (URLQueryItem.name.getter() == 0xD000000000000021 && v25 == v44)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v26) {
        break;
      }
      uint64_t v24 = v50;
      (*v22)(v2, v50);
      v21 += v23;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = 1;
        uint64_t v12 = v42;
        uint64_t v11 = v43;
        uint64_t v9 = v40;
        uint64_t v8 = v41;
        goto LABEL_18;
      }
    }
    uint64_t v24 = v50;
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v28 = v45;
    uint64_t v29 = (uint64_t)v47;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v2, v24);
    uint64_t v27 = 0;
    uint64_t v12 = v42;
    uint64_t v11 = v43;
    uint64_t v9 = v40;
    uint64_t v8 = v41;
  }
  else
  {
    uint64_t v27 = 1;
    uint64_t v24 = v50;
LABEL_18:
    uint64_t v28 = v45;
    uint64_t v29 = (uint64_t)v47;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v29, v27, 1, v24);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v24) == 1)
  {
    sub_10003F5D0(v29, (uint64_t *)&unk_100164080);
LABEL_31:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v49, v8);
    goto LABEL_32;
  }
  uint64_t v30 = v29;
  unint64_t v31 = URLQueryItem.value.getter();
  uint64_t v33 = v32;
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v24);
  if (!v33) {
    goto LABEL_31;
  }
  uint64_t v34 = v9;
  uint64_t result = SBSCopyDisplayIdentifiers();
  if (result)
  {
    uint64_t v36 = (void *)result;
    uint64_t v51 = 0;
    static Set._conditionallyBridgeFromObjectiveC(_:result:)();

    if (v51) {
      uint64_t v37 = v51;
    }
    else {
      uint64_t v37 = &_swiftEmptySetSingleton;
    }
    char v38 = sub_100049E90(v31, v33, (uint64_t)v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v49, v8);
    if (v38) {
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
LABEL_32:
    unint64_t v31 = 0xD00000000000001BLL;
LABEL_33:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return v31;
  }
  __break(1u);
  return result;
}

void sub_10010E078()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000025, 0x800000010012B370, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10010E260()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  uint64_t v55 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v47 - v7;
  uint64_t v8 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URLComponents();
  uint64_t v58 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v57 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4BC((uint64_t)v16);
  URL.scheme.getter();
  if (!v17) {
    goto LABEL_8;
  }
  uint64_t v53 = v3;
  uint64_t v54 = v11;
  Swift::String v18 = String.lowercased()();
  swift_bridgeObjectRelease();
  if ((v18._countAndFlagsBits != 0xD000000000000013 || v18._object != (void *)0x8000000100122C10)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if ((v18._countAndFlagsBits != 0x7366657270 || v18._object != (void *)0xE500000000000000)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      goto LABEL_7;
    }
    URL.absoluteString.getter();
    URLComponents.init(string:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = v58;
    uint64_t v29 = v54;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v10, 1, v54) == 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v30 = &qword_100164AE0;
    }
    else
    {
      unint64_t v31 = v57;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v57, v10, v29);
      uint64_t v32 = URLComponents.percentEncodedQueryItems.getter();
      if (!v32)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v29);
        goto LABEL_8;
      }
      uint64_t v48 = v13;
      uint64_t v49 = v32;
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        uint64_t v51 = *(void (**)(char *, unint64_t, uint64_t))(v53 + 16);
        uint64_t v52 = v53 + 16;
        unint64_t v34 = v32 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
        uint64_t v35 = (void (**)(char *, uint64_t))(v53 + 8);
        uint64_t v50 = *(void *)(v53 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v51(v6, v34, v2);
          if (URLQueryItem.name.getter() == 1752457584 && v36 == 0xE400000000000000) {
            break;
          }
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v37) {
            goto LABEL_38;
          }
          (*v35)(v6, v2);
          v34 += v50;
          if (!--v33)
          {
            swift_bridgeObjectRelease();
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
LABEL_38:
        uint64_t v39 = v48;
        uint64_t v41 = v58;
        swift_bridgeObjectRelease();
        uint64_t v40 = v53;
        uint64_t v10 = v55;
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v55, v6, v2);
        uint64_t v38 = 0;
      }
      else
      {
LABEL_34:
        uint64_t v38 = 1;
        uint64_t v39 = v48;
        uint64_t v40 = v53;
        uint64_t v41 = v58;
        uint64_t v10 = v55;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v10, v38, 1, v2);
      swift_bridgeObjectRelease();
      int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v10, 1, v2);
      uint64_t v43 = v56;
      if (v42 != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v56, v10, v2);
        uint64_t v44 = URLQueryItem.value.getter();
        if (!v45)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v2);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v54);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v39);
          goto LABEL_9;
        }
        if (v44 == 0x4F4343415F444441 && v45 == 0xEB00000000544E55) {
          char v22 = 1;
        }
        else {
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        uint64_t v46 = v57;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v2);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v54);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v39);
LABEL_24:
        swift_bridgeObjectRelease();
        return v22 & 1;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v57, v54);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v39);
      uint64_t v30 = (uint64_t *)&unk_100164080;
    }
    sub_10003F5D0((uint64_t)v10, v30);
    goto LABEL_9;
  }
  uint64_t result = URL.pathComponents.getter();
  unint64_t v20 = *(void *)(result + 16);
  unint64_t v21 = v20 != 0;
  if (v20 != v21)
  {
    if (v20 <= v21)
    {
      __break(1u);
      return result;
    }
    uint64_t v23 = v13;
    uint64_t v24 = result + 16 * v21;
    uint64_t v26 = *(void *)(v24 + 32);
    uint64_t v25 = *(void *)(v24 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v26 == 0x4F4343415F444441 && v25 == 0xEB00000000544E55) {
      char v22 = 1;
    }
    else {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_9:
  char v22 = 0;
  return v22 & 1;
}

char *sub_10010EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for URLQueryItem();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v45 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v48 = (char *)_swiftEmptyArrayStorage;
  uint64_t v43 = *(void *)(a1 + 16);
  if (v43)
  {
    v37[1] = v2;
    uint64_t v12 = 0;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v13 = v8 + 16;
    unint64_t v39 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v40 = a1 + v39;
    uint64_t v41 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    uint64_t v46 = a2 + 56;
    uint64_t v47 = v15;
    uint64_t v38 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v42 = v13;
    while (1)
    {
      uint64_t v16 = v5;
      v41(v10, v40 + v47 * v12, v5);
      uint64_t v17 = URLQueryItem.name.getter();
      uint64_t v19 = v18;
      uint64_t v20 = a2;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
      uint64_t v21 = v17;
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v22 = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v24 = v22 & ~v23;
      if (((*(void *)(v46 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v25 = *(void *)(v20 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v24);
      BOOL v27 = *v26 == v21 && v26[1] == v19;
      if (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      uint64_t v5 = v16;
      (*v38)(v10, v16);
LABEL_4:
      ++v12;
      a2 = v20;
      if (v12 == v43) {
        return v48;
      }
    }
    unint64_t v28 = v24 + 1;
    uint64_t v29 = ~v23;
    for (unint64_t i = v28 & ~v23; ((*(void *)(v46 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v29)
    {
      unint64_t v31 = (void *)(v25 + 16 * i);
      BOOL v32 = *v31 == v21 && v31[1] == v19;
      if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v33 = *v44;
    uint64_t v5 = v16;
    (*v44)(v45, v10, v16);
    unint64_t v34 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000F806C(0, *((void *)v34 + 2) + 1, 1);
      unint64_t v34 = v48;
    }
    unint64_t v36 = *((void *)v34 + 2);
    unint64_t v35 = *((void *)v34 + 3);
    if (v36 >= v35 >> 1)
    {
      sub_1000F806C(v35 > 1, v36 + 1, 1);
      unint64_t v34 = v48;
    }
    *((void *)v34 + 2) = v36 + 1;
    v33(&v34[v39 + v36 * v47], v45, v16);
    uint64_t v48 = v34;
    goto LABEL_4;
  }
  return result;
}

unint64_t sub_10010EDDC()
{
  unint64_t result = qword_100162EC0;
  if (!qword_100162EC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100162EC0);
  }
  return result;
}

uint64_t sub_10010EE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100164BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for LegacyCastleURLRoute()
{
  return &type metadata for LegacyCastleURLRoute;
}

void sub_10010EE94(char *a1@<X8>)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v2 - 8);
  uint64_t v94 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLQueryItem();
  uint64_t v5 = *(char ***)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v91 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v102 = (char *)&v88 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v88 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v96 = (char *)&v88 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v88 - v16;
  __chkstk_darwin(v15);
  unint64_t v108 = (unint64_t)&v88 - v18;
  uint64_t v19 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v19 - 8);
  uint64_t v107 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for URLComponents();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  uint64_t v100 = v22;
  __chkstk_darwin(v21);
  uint64_t v98 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = type metadata accessor for URL();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v101 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F158 != -1) {
LABEL_54:
  }
    swift_once();
  uint64_t v27 = type metadata accessor for Logger();
  sub_1000477B0(v27, (uint64_t)qword_10016AFF8);
  unint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v103 = v4;
  uint64_t v92 = v17;
  unint64_t v93 = v12;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v95 = v25;
    unint64_t v97 = v24;
    unint64_t v110 = v32;
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v109 = sub_100042948(0xD000000000000019, 0x800000010012B430, (uint64_t *)&v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v109 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, (uint64_t *)&v110);
    uint64_t v4 = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Start (%s.%s)…", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    unint64_t v24 = v97;
    uint64_t v25 = v95;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v33 = v101;
  sub_1000FF4BC(v101);
  URL.absoluteString.getter();
  uint64_t v17 = v107;
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v34 = v99;
  uint64_t v35 = v100;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v17, 1, v99) == 1)
  {
    (*(void (**)(uint64_t, unint64_t))(v25 + 8))(v33, v24);
    sub_10003F5D0((uint64_t)v17, &qword_100164AE0);
LABEL_36:
    uint64_t v66 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(a1, 1, 1, v66);
    goto LABEL_52;
  }
  unint64_t v36 = v98;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v98, v17, v34);
  uint64_t v37 = URLComponents.percentEncodedQueryItems.getter();
  if (!v37)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    (*(void (**)(uint64_t, unint64_t))(v25 + 8))(v101, v24);
    goto LABEL_36;
  }
  unint64_t v97 = v24;
  uint64_t v38 = _swiftEmptyArrayStorage;
  unint64_t v110 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v12 = *(char **)(v37 + 16);
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v106 = v12;
  uint64_t v89 = a1;
  uint64_t v95 = v25;
  if (v12)
  {
    unint64_t v24 = 0;
    uint64_t v107 = (char *)(v5 + 2);
    uint64_t v90 = v5 + 4;
    unint64_t v105 = v5 + 1;
    uint64_t v104 = (unint64_t)(v5 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v40 = v92;
    while (1)
    {
      if (v24 >= *(void *)(v39 + 16))
      {
        __break(1u);
        goto LABEL_54;
      }
      uint64_t v12 = (char *)((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
      a1 = v5[9];
      uint64_t v25 = v39;
      uint64_t v41 = &v12[v39 + (void)a1 * v24];
      uint64_t v42 = v5;
      uint64_t v43 = v5[2];
      ((void (*)(unint64_t, char *, uint64_t))v43)(v108, v41, v4);
      if (URLQueryItem.name.getter() == 1953460082 && v44 == 0xE400000000000000) {
        break;
      }
      uint64_t v45 = v40;
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, unint64_t, uint64_t))v43)(v45, v108, v4);
      if (v46) {
        goto LABEL_14;
      }
      uint64_t v40 = v45;
      if (URLQueryItem.name.getter() == 1752457584 && v47 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = *v105;
        uint64_t v4 = v103;
        ((void (*)(char *, uint64_t))*v105)(v45, v103);
      }
      else
      {
        char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v17 = *v105;
        uint64_t v49 = v103;
        ((void (*)(char *, uint64_t))*v105)(v45, v103);
        if ((v48 & 1) == 0)
        {
          uint64_t v17 = *v90;
          ((void (*)(char *, unint64_t, uint64_t))*v90)(v96, v108, v49);
          unint64_t v50 = v110;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000F806C(0, *(void *)(v50 + 16) + 1, 1);
            unint64_t v50 = v110;
          }
          unint64_t v52 = *(void *)(v50 + 16);
          unint64_t v51 = *(void *)(v50 + 24);
          if (v52 >= v51 >> 1)
          {
            sub_1000F806C(v51 > 1, v52 + 1, 1);
            unint64_t v50 = v110;
          }
          *(void *)(v50 + 16) = v52 + 1;
          uint64_t v4 = v103;
          ((void (*)(char *, char *, uint64_t))v17)(&v12[v50 + v52 * (void)a1], v96, v103);
          unint64_t v110 = v50;
          uint64_t v5 = v42;
          goto LABEL_21;
        }
        uint64_t v4 = v49;
      }
      uint64_t v5 = v42;
      ((void (*)(unint64_t, uint64_t))v17)(v108, v4);
LABEL_21:
      uint64_t v39 = v25;
      if (v106 == (char *)++v24)
      {
        uint64_t v38 = (void *)v110;
        a1 = v89;
        uint64_t v25 = v95;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    ((void (*)(char *, unint64_t, uint64_t))v43)(v40, v108, v4);
    uint64_t v45 = v40;
LABEL_14:
    uint64_t v17 = *v105;
    ((void (*)(char *, uint64_t))*v105)(v45, v4);
    uint64_t v5 = v42;
    uint64_t v40 = v45;
    ((void (*)(unint64_t, uint64_t))v17)(v108, v4);
    goto LABEL_21;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  sub_100046B9C(&qword_100161580);
  uint64_t v53 = v5[9];
  unint64_t v54 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10011C360;
  URLQueryItem.init(name:value:)();
  unint64_t v110 = (unint64_t)v38;
  sub_1000D6C5C(v55);
  uint64_t v107 = (char *)v54;
  unint64_t v108 = v110;
  if (v106)
  {
    uint64_t v56 = v5;
    uint64_t v57 = a1;
    unint64_t v58 = v39 + v54;
    unint64_t v105 = v56;
    uint64_t v59 = v56[2];
    uint64_t v60 = (void (**)(char *, uint64_t))(v56 + 1);
    swift_bridgeObjectRetain();
    uint64_t v61 = v102;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v59)(v61, v58, v4);
      if (URLQueryItem.name.getter() == 1752457584 && v62 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        a1 = v57;
        goto LABEL_41;
      }
      char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v63) {
        break;
      }
      uint64_t v61 = v102;
      uint64_t v4 = v103;
      (*v60)(v102, v103);
      v58 += (unint64_t)v53;
      if (!--v106)
      {
        swift_bridgeObjectRelease();
        uint64_t v64 = 1;
        a1 = v57;
        uint64_t v5 = v105;
        unint64_t v65 = v97;
        uint64_t v25 = v95;
        goto LABEL_38;
      }
    }
    a1 = v57;
    uint64_t v4 = v103;
LABEL_41:
    unint64_t v65 = v97;
    uint64_t v25 = v95;
    uint64_t v68 = v100;
    uint64_t v67 = v101;
    swift_bridgeObjectRelease();
    uint64_t v5 = v105;
    uint64_t v69 = (uint64_t)v94;
    ((void (*)(char *, char *, uint64_t))v105[4])(v94, v102, v4);
    uint64_t v64 = 0;
  }
  else
  {
    uint64_t v64 = 1;
    unint64_t v65 = v97;
LABEL_38:
    uint64_t v68 = v100;
    uint64_t v67 = v101;
    uint64_t v69 = (uint64_t)v94;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5[7])(v69, v64, 1, v4);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6])(v69, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v98, v99);
    sub_10003F5D0(v69, (uint64_t *)&unk_100164080);
  }
  else
  {
    uint64_t v70 = v5[4];
    uint64_t v71 = v93;
    ((void (*)(char *, uint64_t, uint64_t))v70)(v93, v69, v4);
    uint64_t v72 = URLQueryItem.value.getter();
    if (v73)
    {
      uint64_t v74 = v72;
      uint64_t v75 = v73;
      uint64_t v76 = v5;
      unint64_t v110 = 0;
      unint64_t v111 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v110 = 0x535F44554F4C4349;
      unint64_t v111 = 0xEF2F454349565245;
      v77._countAndFlagsBits = v74;
      v77._object = v75;
      String.append(_:)(v77);
      swift_bridgeObjectRelease();
      uint64_t v78 = v91;
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v108 = sub_10009EE88(0, *(void *)(v108 + 16) + 1, 1, v108);
      }
      uint64_t v79 = v103;
      unint64_t v81 = *(void *)(v108 + 16);
      unint64_t v80 = *(void *)(v108 + 24);
      uint64_t v82 = v98;
      if (v81 >= v80 >> 1) {
        unint64_t v108 = sub_10009EE88(v80 > 1, v81 + 1, 1, v108);
      }
      uint64_t v84 = v107;
      unint64_t v83 = v108;
      *(void *)(v108 + 16) = v81 + 1;
      ((void (*)(char *, char *, uint64_t))v70)(&v84[v83 + v81 * (void)v53], v78, v79);
      ((void (*)(char *, uint64_t))v76[1])(v93, v79);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v82, v99);
      unint64_t v65 = v97;
      uint64_t v67 = v101;
      a1 = v89;
    }
    else
    {
      ((void (*)(char *, uint64_t))v5[1])(v71, v4);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v98, v99);
      unint64_t v65 = v97;
      uint64_t v67 = v101;
    }
  }
  (*(void (**)(char *, uint64_t, unint64_t))(v25 + 32))(a1, v67, v65);
  uint64_t v85 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v86 = &a1[*(int *)(v85 + 28)];
  *(void *)&a1[*(int *)(v85 + 24)] = v108;
  *(void *)uint64_t v86 = 0;
  *((void *)v86 + 1) = 0;
  uint64_t v87 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(a1, 0, 1, v87);
LABEL_52:
  sub_100110348();
}

uint64_t sub_10010FC70()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  uint64_t v47 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URLComponents();
  uint64_t v51 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v50 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v17)
  {
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v45 = v8;
  uint64_t v46 = v14;
  uint64_t v48 = v12;
  Swift::String v18 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v18._countAndFlagsBits == 0x7366657270 && v18._object == (void *)0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v19 = 0;
    if ((v20 & 1) == 0) {
      return v19 & 1;
    }
  }
  uint64_t v21 = v50;
  sub_1000FF4BC(v50);
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = v51;
  uint64_t v23 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v11, 1, v48) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v21, v46);
    unint64_t v24 = &qword_100164AE0;
    uint64_t v25 = (uint64_t)v11;
LABEL_24:
    sub_10003F5D0(v25, v24);
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v26 = v49;
  (*(void (**)(void))(v22 + 32))();
  uint64_t v27 = URLComponents.percentEncodedQueryItems.getter();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v21, v46);
LABEL_30:
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v44 = v27;
  if (v28)
  {
    uint64_t v42 = v15;
    uint64_t v43 = v3;
    os_log_type_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    unint64_t v30 = v27 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v32 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v29(v6, v30, v2);
      if (URLQueryItem.name.getter() == 1953460082 && v33 == 0xE400000000000000) {
        break;
      }
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_20;
      }
      (*v31)(v6, v2);
      v30 += v32;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = 1;
        uint64_t v15 = v42;
        uint64_t v3 = v43;
        uint64_t v37 = v45;
        uint64_t v36 = v46;
        uint64_t v38 = v47;
        uint64_t v23 = v48;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t v37 = v45;
    swift_bridgeObjectRelease();
    uint64_t v3 = v43;
    uint64_t v38 = v47;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v47, v6, v2);
    uint64_t v35 = 0;
    uint64_t v15 = v42;
    uint64_t v36 = v46;
    uint64_t v23 = v48;
LABEL_21:
    uint64_t v26 = v49;
  }
  else
  {
    uint64_t v35 = 1;
    uint64_t v37 = v45;
    uint64_t v36 = v46;
    uint64_t v38 = v47;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v38, v35, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v38, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v50, v36);
    unint64_t v24 = (uint64_t *)&unk_100164080;
    uint64_t v25 = (uint64_t)v38;
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v37, v38, v2);
  uint64_t v39 = URLQueryItem.value.getter();
  if (!v40)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v37, v2);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v50, v36);
    goto LABEL_30;
  }
  if (v39 == 0x454C54534143 && v40 == 0xE600000000000000) {
    char v19 = 1;
  }
  else {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v45, v2);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v48);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v50, v36);
  return v19 & 1;
}

void sub_100110348()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000019, 0x800000010012B430, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for LegacyPreferencesRootURLRoute()
{
  return &type metadata for LegacyPreferencesRootURLRoute;
}

void sub_100110540(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD000000000000022, 0x800000010012B450, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  uint64_t v9 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (void *)(a2 + *(int *)(v9 + 28));
  *(void *)(a2 + *(int *)(v9 + 24)) = _swiftEmptyArrayStorage;
  void *v10 = 0;
  v10[1] = 0;
  uint64_t v11 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 0, 1, v11);
  sub_100110EE4();
}

uint64_t sub_1001107E0()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v0 - 8);
  unint64_t v52 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v47 - v7;
  uint64_t v9 = sub_100046B9C(&qword_100164AE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URLComponents();
  uint64_t v55 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v54 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v56 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.scheme.getter();
  if (!v17) {
    return 0;
  }
  uint64_t v50 = v8;
  uint64_t v51 = v14;
  uint64_t v53 = v12;
  Swift::String v18 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v18._countAndFlagsBits == 0x7366657270 && v18._object == (void *)0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)v56;
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    uint64_t v19 = (uint64_t)v56;
    if ((v21 & 1) == 0) {
      return v20;
    }
  }
  sub_1000FF4BC(v19);
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = v55;
  uint64_t v23 = v53;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v11, 1, v53) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v51);
    unint64_t v24 = &qword_100164AE0;
    uint64_t v25 = (uint64_t)v11;
LABEL_24:
    sub_10003F5D0(v25, v24);
    return 0;
  }
  uint64_t v26 = v54;
  (*(void (**)(void))(v22 + 32))();
  uint64_t v27 = URLComponents.percentEncodedQueryItems.getter();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v51);
    return 0;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v49 = v27;
  if (v28)
  {
    uint64_t v47 = v15;
    uint64_t v48 = v3;
    os_log_type_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    unint64_t v30 = v27 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v32 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v29(v6, v30, v2);
      if (URLQueryItem.name.getter() == 1953460082 && v33 == 0xE400000000000000) {
        break;
      }
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_21;
      }
      (*v31)(v6, v2);
      v30 += v32;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = 1;
        uint64_t v15 = v47;
        uint64_t v3 = v48;
        uint64_t v36 = v50;
        uint64_t v37 = v51;
        uint64_t v23 = v53;
        uint64_t v26 = v54;
        uint64_t v22 = v55;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v36 = v50;
    swift_bridgeObjectRelease();
    uint64_t v3 = v48;
    uint64_t v38 = v52;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v52, v6, v2);
    uint64_t v35 = 0;
    uint64_t v15 = v47;
    uint64_t v37 = v51;
    uint64_t v23 = v53;
    uint64_t v26 = v54;
    uint64_t v22 = v55;
  }
  else
  {
    uint64_t v35 = 1;
    uint64_t v36 = v50;
    uint64_t v37 = v51;
LABEL_19:
    uint64_t v38 = v52;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v38, v35, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v38, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v23);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v56, v37);
    unint64_t v24 = (uint64_t *)&unk_100164080;
    uint64_t v25 = (uint64_t)v38;
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v36, v38, v2);
  uint64_t v39 = URLQueryItem.value.getter();
  if (!v40)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v53);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v56, v37);
    return 0;
  }
  uint64_t v41 = v39;
  unint64_t v42 = v40;
  if (v39 == 1414483794 && v40 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  else
  {
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v44 = HIBYTE(v42) & 0xF;
    if ((v42 & 0x2000000000000000) == 0) {
      uint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v45 = v44 == 0;
    uint64_t v20 = (v43 & 1) != 0 || v45;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v50, v2);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v53);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v56, v37);
  return v20;
}

void sub_100110EE4()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000022, 0x800000010012B450, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for LegacyPreferencesURLRoute()
{
  return &type metadata for LegacyPreferencesURLRoute;
}

void sub_1001110DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v155 = a1;
  uint64_t v156 = a2;
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v2 - 8);
  uint64_t v142 = (uint64_t)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v140 = *(void *)(v4 - 8);
  uint64_t v141 = v4;
  __chkstk_darwin(v4);
  uint64_t v138 = (uint64_t)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v6 - 8);
  uint64_t v149 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLQueryItem();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v153 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v131 - v12;
  uint64_t v14 = sub_100046B9C(&qword_100164AE0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v146 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v152 = (char *)&v131 - v17;
  uint64_t v18 = type metadata accessor for URLComponents();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v145 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v151 = (char *)&v131 - v22;
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v143 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v139 = (char *)&v131 - v28;
  __chkstk_darwin(v27);
  unint64_t v30 = (char *)&v131 - v29;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v144 = sub_1000477B0(v31, (uint64_t)qword_10016AFF8);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v154 = v8;
  uint64_t v147 = v13;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v148 = v24;
    uint64_t v36 = v35;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v150 = v19;
    v158[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v157 = sub_100042948(0xD00000000000001ELL, 0x800000010012B480, v158);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2080;
    uint64_t v157 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, v158);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Start (%s.%s)…", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    uint64_t v19 = v150;
    swift_slowDealloc();
    uint64_t v24 = v148;
    swift_slowDealloc();
  }

  uint64_t v38 = URL.scheme.getter();
  if (!v39) {
    goto LABEL_48;
  }
  if (v38 == 0x7366657270 && v39 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
LABEL_48:
      uint64_t v117 = sub_100046B9C(&qword_10015F750);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v156, 1, 1, v117);
      goto LABEL_49;
    }
  }
  sub_1000FF4BC((uint64_t)v30);
  v158[0] = URL.absoluteString.getter();
  v158[1] = v41;
  sub_100030C58();
  StringProtocol.removingPercentEncoding.getter();
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  if (!v43)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
LABEL_14:
    uint64_t v46 = v156;
    goto LABEL_31;
  }
  uint64_t v44 = (uint64_t)v152;
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  BOOL v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v45(v44, 1, v18) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
    sub_10003F5D0(v44, &qword_100164AE0);
    uint64_t v46 = v156;
LABEL_31:
    uint64_t v59 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v46, 1, 1, v59);
    goto LABEL_49;
  }
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  uint64_t v135 = v19 + 32;
  uint64_t v134 = v47;
  v47(v151, v44, v18);
  uint64_t v48 = URLComponents.queryItems.getter();
  if (!v48)
  {
    uint64_t v58 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v149, 1, 1, v154);
    uint64_t v46 = v156;
LABEL_30:
    (*(void (**)(char *, uint64_t))(v19 + 8))(v151, v18);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
    sub_10003F5D0(v58, (uint64_t *)&unk_100164080);
    goto LABEL_31;
  }
  uint64_t v132 = v45;
  uint64_t v150 = v19;
  uint64_t v49 = *(void *)(v48 + 16);
  uint64_t v50 = v154;
  uint64_t v46 = v156;
  uint64_t v137 = v30;
  uint64_t v136 = v18;
  uint64_t v152 = (char *)v48;
  if (v49)
  {
    uint64_t v133 = v23;
    uint64_t v148 = v24;
    uint64_t v51 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    unint64_t v52 = v48 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v53 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    unint64_t v54 = v153;
    while (1)
    {
      v51(v54, v52, v50);
      if (URLQueryItem.name.getter() == 1953460082 && v55 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = v156;
        uint64_t v24 = v148;
        uint64_t v23 = v133;
        uint64_t v19 = v150;
        unint64_t v30 = v137;
        goto LABEL_28;
      }
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v56) {
        break;
      }
      unint64_t v54 = v153;
      uint64_t v50 = v154;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v153, v154);
      v52 += v53;
      if (!--v49)
      {
        swift_bridgeObjectRelease();
        uint64_t v57 = 1;
        uint64_t v46 = v156;
        uint64_t v24 = v148;
        uint64_t v23 = v133;
        uint64_t v19 = v150;
        unint64_t v30 = v137;
        uint64_t v18 = v136;
        goto LABEL_25;
      }
    }
    uint64_t v46 = v156;
    uint64_t v24 = v148;
    uint64_t v23 = v133;
    uint64_t v19 = v150;
    unint64_t v30 = v137;
    uint64_t v50 = v154;
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v58 = (uint64_t)v149;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v149, v153, v50);
    uint64_t v57 = 0;
    uint64_t v18 = v136;
  }
  else
  {
    uint64_t v57 = 1;
    uint64_t v19 = v150;
LABEL_25:
    uint64_t v58 = (uint64_t)v149;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v58, v57, 1, v50);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v58, 1, v50) == 1) {
    goto LABEL_30;
  }
  uint64_t v60 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v147, v58, v50);
  uint64_t v61 = URLQueryItem.value.getter();
  if (!v62)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v60, v50);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v151, v136);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v137, v23);
    goto LABEL_14;
  }
  unint64_t v63 = v62;
  uint64_t v153 = (char *)v61;
  uint64_t v64 = v137;
  URL.absoluteString.getter();
  uint64_t v65 = (uint64_t)v146;
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v66 = v136;
  if (v132(v65, 1, v136) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v147, v50);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v151, v66);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v64, v23);
    sub_10003F5D0(v65, &qword_100164AE0);
    goto LABEL_48;
  }
  uint64_t v133 = v23;
  uint64_t v67 = v145;
  v134(v145, v65, v66);
  uint64_t v68 = URLComponents.queryItems.getter();
  uint64_t v69 = v147;
  if (!v68)
  {
    swift_bridgeObjectRelease();
    unint64_t v80 = *(void (**)(char *, uint64_t))(v19 + 8);
    v80(v67, v66);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v69, v50);
    v80(v151, v66);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v137, v133);
    goto LABEL_48;
  }
  uint64_t v70 = v68;
  swift_bridgeObjectRetain_n();
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  BOOL v73 = os_log_type_enabled(v71, v72);
  uint64_t v131 = v9;
  if (v73)
  {
    uint64_t v74 = swift_slowAlloc();
    uint64_t v148 = v24;
    uint64_t v75 = (uint8_t *)v74;
    v158[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v75 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v76 = Array.description.getter();
    unint64_t v78 = v77;
    swift_bridgeObjectRelease();
    uint64_t v79 = v76;
    uint64_t v19 = v150;
    uint64_t v157 = sub_100042948(v79, v78, v158);
    uint64_t v50 = v154;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v69 = v147;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "queryItems = %s", v75, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v24 = v148;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v81 = v145;
  uint64_t v82 = (uint64_t)v153;
  swift_bridgeObjectRetain();
  char v83 = sub_1000F43F8();
  uint64_t v84 = v143;
  if (v83 == 74)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v84, v155, v133);
    swift_bridgeObjectRetain();
    uint64_t v85 = v84;
    uint64_t v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      uint64_t v155 = v89;
      *(_DWORD *)uint64_t v88 = 141558787;
      uint64_t v157 = 1752392040;
      v158[0] = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v88 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v157 = sub_100042948(v82, v63, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v88 + 22) = 2160;
      uint64_t v157 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v88 + 32) = 2081;
      uint64_t v90 = URL.absoluteString.getter();
      uint64_t v157 = sub_100042948(v90, v91, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v92 = *(void (**)(char *, uint64_t))(v24 + 8);
      uint64_t v93 = v133;
      v92(v85, v133);
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Unable to resolve classic settings specifier identifier for root value %{private,mask.hash}s from input URL %{private,mask.hash}s.", (uint8_t *)v88, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v94 = *(void (**)(char *, uint64_t))(v19 + 8);
      uint64_t v95 = v136;
      v94(v145, v136);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v147, v154);
      v94(v151, v95);
      v92(v137, v93);
    }
    else
    {

      uint64_t v113 = *(void (**)(char *, uint64_t))(v24 + 8);
      uint64_t v114 = v133;
      v113(v84, v133);
      swift_bridgeObjectRelease_n();
      uint64_t v115 = *(void (**)(char *, uint64_t))(v19 + 8);
      uint64_t v116 = v136;
      v115(v81, v136);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v69, v154);
      v115(v151, v116);
      v113(v137, v114);
    }
    goto LABEL_48;
  }
  char v96 = v83;
  swift_bridgeObjectRelease();
  char v97 = sub_1000F3F98(v96);
  uint64_t v98 = v142;
  sub_1001011A8(v97, v142);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v98, 1, v141) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10003F5D0(v98, (uint64_t *)&unk_100161530);
    uint64_t v99 = v139;
    uint64_t v100 = v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v139, v155, v133);
    uint64_t v101 = Logger.logObject.getter();
    os_log_type_t v102 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      *(_DWORD *)uint64_t v103 = 141558787;
      uint64_t v157 = 1752392040;
      v158[0] = v104;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v103 + 12) = 2081;
      unint64_t v105 = sub_1000F3778(v96);
      uint64_t v157 = sub_100042948(v105, v106, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 22) = 2160;
      uint64_t v157 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v103 + 32) = 2081;
      uint64_t v107 = v139;
      uint64_t v108 = URL.absoluteString.getter();
      uint64_t v157 = sub_100042948(v108, v109, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v110 = *(void (**)(char *, uint64_t))(v24 + 8);
      v110(v107, v100);
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "Unable to resolve primary settings list item identifier for classic settings specifier identifier %{private,mask.hash}s from input URL %{private,mask.hash}s.", (uint8_t *)v103, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v111 = *(void (**)(char *, uint64_t))(v150 + 8);
      uint64_t v112 = v136;
      v111(v145, v136);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v147, v154);
      v111(v151, v112);
      v110(v137, v100);
    }
    else
    {

      uint64_t v125 = *(void (**)(char *, uint64_t))(v24 + 8);
      v125(v99, v100);
      Swift::String v126 = *(void (**)(char *, uint64_t))(v150 + 8);
      unint64_t v127 = v81;
      uint64_t v128 = v136;
      v126(v127, v136);
      (*(void (**)(char *, uint64_t))(v131 + 8))(v147, v50);
      v126(v151, v128);
      v125(v137, v100);
    }
    uint64_t v129 = v156;
    uint64_t v130 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v129, 1, 1, v130);
  }
  else
  {
    uint64_t v118 = *(void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v119 = v136;
    v118(v81, v136);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v69, v50);
    v118(v151, v119);
    uint64_t v120 = v138;
    sub_10004984C(v98, v138);
    uint64_t v121 = v156;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v156, v137, v133);
    unint64_t v122 = (int *)type metadata accessor for SettingsURLDestination(0);
    sub_10004984C(v120, v121 + v122[5]);
    type metadata accessor for SettingsURLDestination.Action(0);
    swift_storeEnumTagMultiPayload();
    unint64_t v123 = (void *)(v121 + v122[7]);
    *(void *)(v121 + v122[6]) = v70;
    *unint64_t v123 = 0;
    v123[1] = 0;
    uint64_t v124 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v121, 0, 1, v124);
  }
LABEL_49:
  sub_100112604();
}

uint64_t sub_100112578()
{
  uint64_t v0 = URL.scheme.getter();
  if (v1)
  {
    if (v0 == 0x7366657270 && v1 == 0xE500000000000000) {
      char v2 = 1;
    }
    else {
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

void sub_100112604()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD00000000000001ELL, 0x800000010012B480, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for OAuthURLRoute()
{
  return &type metadata for OAuthURLRoute;
}

void sub_1001127FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD000000000000012, 0x800000010012B4A0, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v22 = sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t countAndFlagsBits = URL.scheme.getter();
  if (v9)
  {
    Swift::String v10 = String.lowercased()();
    uint64_t countAndFlagsBits = v10._countAndFlagsBits;
    object = v10._object;
    swift_bridgeObjectRelease();
  }
  else
  {
    object = 0;
  }
  if (qword_10015F0C8 != -1) {
    swift_once();
  }
  id v12 = [qword_10016AF18 bundleIdentifier:v22];
  if (!v12)
  {
    if (!object) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v13 = v12;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::String v14 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (!object)
  {
    if (!v14._object) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  if (!v14._object)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (countAndFlagsBits == v14._countAndFlagsBits && object == v14._object)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(a2, a1, v17);
    uint64_t v19 = (int *)type metadata accessor for SettingsURLDestination(0);
    v18(a2 + v19[5], a1, v17);
    type metadata accessor for SettingsURLDestination.Action(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = (void *)(a2 + v19[7]);
    *(void *)(a2 + v19[6]) = _swiftEmptyArrayStorage;
    *uint64_t v20 = 0;
    v20[1] = 0;
    uint64_t v21 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 0, 1, v21);
    goto LABEL_23;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
LABEL_23:
  sub_100112D74();
}

uint64_t sub_100112C18()
{
  uint64_t countAndFlagsBits = URL.scheme.getter();
  if (v1)
  {
    Swift::String v2 = String.lowercased()();
    uint64_t countAndFlagsBits = v2._countAndFlagsBits;
    object = v2._object;
    swift_bridgeObjectRelease();
  }
  else
  {
    object = 0;
  }
  if (qword_10015F0C8 != -1) {
    swift_once();
  }
  id v4 = [(id)qword_10016AF18 bundleIdentifier];
  if (v4)
  {
    uint64_t v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v6 = String.lowercased()();
    swift_bridgeObjectRelease();
    if (object)
    {
      if (v6._object)
      {
        if (countAndFlagsBits == v6._countAndFlagsBits && object == v6._object)
        {
          swift_bridgeObjectRelease();
          char v7 = 1;
        }
        else
        {
          char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
        goto LABEL_18;
      }
      goto LABEL_13;
    }
    if (v6._object)
    {
      char v7 = 0;
      goto LABEL_18;
    }
  }
  else if (object)
  {
LABEL_13:
    char v7 = 0;
LABEL_18:
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  char v7 = 1;
  return v7 & 1;
}

void sub_100112D74()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000012, 0x800000010012B4A0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for OSAutomaticUpdatesURLRoute()
{
  return &type metadata for OSAutomaticUpdatesURLRoute;
}

void sub_100112F6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD00000000000001FLL, 0x800000010012B510, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  URL.scheme.getter();
  if (!v8) {
    goto LABEL_11;
  }
  Swift::String v9 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v9._countAndFlagsBits != 0xD000000000000014 || v9._object != (void *)0x800000010012B4C0)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v16 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  uint64_t v12 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_100161580);
  type metadata accessor for URLQueryItem();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10011C370;
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  Swift::String v14 = (void *)(a2 + *(int *)(v12 + 28));
  *(void *)(a2 + *(int *)(v12 + 24)) = v13;
  *Swift::String v14 = 0;
  v14[1] = 0;
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
LABEL_12:
  sub_100113458();
}

uint64_t sub_1001133A4()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0xD000000000000014 && v1._object == (void *)0x800000010012B4C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_100113458()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD00000000000001FLL, 0x800000010012B510, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for OSBetaUpdatesURLRoute()
{
  return &type metadata for OSBetaUpdatesURLRoute;
}

void sub_100113650(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD00000000000001ALL, 0x800000010012B560, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  URL.scheme.getter();
  if (!v8) {
    goto LABEL_11;
  }
  Swift::String v9 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v9._countAndFlagsBits != 0x2D617465622D736FLL || v9._object != (void *)0xEF73657461647075)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v16 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  uint64_t v12 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_100161580);
  type metadata accessor for URLQueryItem();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10011C370;
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  Swift::String v14 = (void *)(a2 + *(int *)(v12 + 28));
  *(void *)(a2 + *(int *)(v12 + 24)) = v13;
  *Swift::String v14 = 0;
  v14[1] = 0;
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
LABEL_12:
  sub_100113BA4();
}

uint64_t sub_100113ABC()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0x2D617465622D736FLL && v1._object == (void *)0xEF73657461647075)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_100113BA4()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD00000000000001ALL, 0x800000010012B560, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for PaymentsAndContactlessRedirectRoute()
{
  return &type metadata for PaymentsAndContactlessRedirectRoute;
}

uint64_t sub_100113D9C@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  v16[1] = a1;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[6] = URL.absoluteString.getter();
  v16[7] = v10;
  v16[4] = 0xD00000000000002FLL;
  v16[5] = 0x800000010012B580;
  v16[2] = 0xD000000000000047;
  v16[3] = 0x800000010012B5B0;
  sub_100030C58();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v11 = URL.scheme.getter();
    if (v12)
    {
      if (v11 == 0xD000000000000013 && v12 == 0x8000000100122C10)
      {
        swift_bridgeObjectRelease();
LABEL_8:
        sub_100102BA8(v9, a2);
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_10;
  }
  sub_1001043D4((uint64_t)v5);
LABEL_10:
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
}

BOOL sub_1001140C0()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4BC((uint64_t)v3);
  URL.absoluteString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v4._object = (void *)0x800000010012B580;
  v4._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  LOBYTE(v0) = String.hasPrefix(_:)(v4);
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    return 0;
  }
  aBlock[4] = nullsub_1;
  void aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_1001563B0;
  uint64_t v5 = _Block_copy(aBlock);
  id v6 = [self contextWithBundleId:0 onChange:v5];
  _Block_release(v5);
  swift_release();
  if (!v6) {
    return 0;
  }
  id v7 = [v6 topLevelSettingsEntryType];

  return v7 == (id)1;
}

ValueMetadata *type metadata accessor for PreBuddyURLRoute()
{
  return &type metadata for PreBuddyURLRoute;
}

void sub_1001142B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD000000000000015, 0x800000010012B620, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  URL.scheme.getter();
  if (!v8) {
    goto LABEL_11;
  }
  Swift::String v9 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v9._countAndFlagsBits != 0x72702D7366657270 || v9._object != (void *)0xEE00796464756265)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v16 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  uint64_t v12 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_100161580);
  type metadata accessor for URLQueryItem();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10011C370;
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  Swift::String v14 = (void *)(a2 + *(int *)(v12 + 28));
  *(void *)(a2 + *(int *)(v12 + 24)) = v13;
  *Swift::String v14 = 0;
  v14[1] = 0;
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
LABEL_12:
  sub_1001147FC();
}

uint64_t sub_100114714()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0x72702D7366657270 && v1._object == (void *)0xEE00796464756265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_1001147FC()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000015, 0x800000010012B620, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for TVProviderURLRoute()
{
  return &type metadata for TVProviderURLRoute;
}

void sub_1001149F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016AFF8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100042948(0xD000000000000017, 0x800000010012B660, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Start (%s.%s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  URL.scheme.getter();
  if (!v8) {
    goto LABEL_11;
  }
  Swift::String v9 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v9._countAndFlagsBits != 0xD000000000000010 || v9._object != (void *)0x800000010012B640)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v16 = sub_100046B9C(&qword_10015F750);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  uint64_t v12 = type metadata accessor for SettingsURLDestination(0);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SettingsURLDestination.Action(0);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_100161580);
  type metadata accessor for URLQueryItem();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10011C360;
  URLQueryItem.init(name:value:)();
  Swift::String v14 = (void *)(a2 + *(int *)(v12 + 28));
  *(void *)(a2 + *(int *)(v12 + 24)) = v13;
  *Swift::String v14 = 0;
  v14[1] = 0;
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
LABEL_12:
  sub_100114EBC();
}

uint64_t sub_100114E08()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0xD000000000000010 && v1._object == (void *)0x800000010012B640)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

void sub_100114EBC()
{
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000477B0(v0, (uint64_t)qword_10016AFF8);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_100042948(0xD000000000000017, 0x800000010012B660, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v2 + 12) = 2080;
    sub_100042948(0xD000000000000026, 0x800000010012B1D0, &v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "…Complete (%s.%s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for UninstalledAppsRedirectRoute()
{
  return &type metadata for UninstalledAppsRedirectRoute;
}

uint64_t sub_1001150B4@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  v16[1] = a1;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[6] = URL.absoluteString.getter();
  v16[7] = v10;
  v16[4] = 0xD00000000000003ELL;
  v16[5] = 0x800000010012B680;
  v16[2] = 0xD00000000000003CLL;
  v16[3] = 0x800000010012B6C0;
  sub_100030C58();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v11 = URL.scheme.getter();
    if (v12)
    {
      if (v11 == 0xD000000000000013 && v12 == 0x8000000100122C10)
      {
        swift_bridgeObjectRelease();
LABEL_8:
        sub_100102BA8(v9, a2);
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_10;
  }
  sub_1001043D4((uint64_t)v5);
LABEL_10:
  uint64_t v15 = sub_100046B9C(&qword_10015F750);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
}

id sub_1001153D8()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4BC((uint64_t)v3);
  URL.absoluteString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v4._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  v4._object = (void *)0x800000010012B680;
  LOBYTE(v0) = String.hasPrefix(_:)(v4);
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0) {
    return 0;
  }
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v6 = result;
    NSString v7 = String._bridgeToObjectiveC()();
    unsigned int v8 = [v6 applicationIsInstalled:v7];

    return (id)(v8 ^ 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForSettingsAppOnlyDoNotUseGenerallyFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100115634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForSettingsAppOnlyDoNotUseGenerallyFeatureFlags()
{
  return &type metadata for ForSettingsAppOnlyDoNotUseGenerallyFeatureFlags;
}

unint64_t sub_100115670()
{
  unint64_t result = qword_100164BC0;
  if (!qword_100164BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164BC0);
  }
  return result;
}

uint64_t sub_1001156C4()
{
  Swift::Int v0 = sub_10000CC20((uint64_t)&off_1001511A0);
  uint64_t result = swift_arrayDestroy();
  qword_100164BC8 = v0;
  return result;
}

void (*sub_100115710(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(void *a1)
{
  uint64_t v10 = type metadata accessor for SettingsNavigationEventRecord();
  *a1 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  a1[1] = v11;
  uint64_t result = (void (*)(void *))malloc(*(void *)(v11 + 64));
  a1[2] = (uint64_t)result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void))(v12 + 16))();
    return sub_10011580C;
  }
  return result;
}

void sub_10011580C(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_100115858(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v199 = (uint64_t)&v191 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v195 = (uint64_t)&v191 - v6;
  __chkstk_darwin(v5);
  uint64_t v196 = (uint64_t)&v191 - v7;
  uint64_t v206 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v202 = *(void *)(v206 - 8);
  uint64_t v8 = __chkstk_darwin(v206);
  uint64_t v198 = (uint64_t)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v194 = (uint64_t)&v191 - v11;
  __chkstk_darwin(v10);
  long long v201 = (char *)&v191 - v12;
  uint64_t v13 = sub_100046B9C((uint64_t *)&unk_100164080);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v191 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URLQueryItem();
  uint64_t v209 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v191 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v207 = (char *)&v191 - v20;
  uint64_t v21 = sub_100046B9C(&qword_100164AE0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  unint64_t v204 = (char *)&v191 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v205 = (char *)&v191 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v191 - v26;
  uint64_t v28 = type metadata accessor for URLComponents();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v210 = v28;
  uint64_t v211 = v29;
  uint64_t v30 = __chkstk_darwin(v28);
  long long v200 = (char *)&v191 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v203 = (char *)&v191 - v33;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v191 - v34;
  uint64_t v36 = type metadata accessor for URL();
  uint64_t v37 = *(void (***)(char *, char *, unint64_t))(v36 - 8);
  unint64_t v213 = v36;
  uint64_t v214 = v37;
  uint64_t v38 = __chkstk_darwin(v36);
  char v40 = (char *)&v191 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v197 = (char *)&v191 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  BOOL v45 = (char *)&v191 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  uint64_t v212 = (char *)&v191 - v47;
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v191 - v48;
  sub_1000FF4BC((uint64_t)&v191 - v48);
  uint64_t v215 = v49;
  uint64_t v50 = URL.scheme.getter();
  if (!v51) {
    goto LABEL_9;
  }
  uint64_t v52 = v50;
  uint64_t v53 = v51;
  if (qword_10015F1D8 != -1) {
    swift_once();
  }
  if ((sub_100049E90(v52, v53, qword_100164BC8) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    if (qword_10015F150 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_1000477B0(v54, (uint64_t)qword_10016AFE0);
    char v56 = v214;
    uint64_t v55 = v215;
    unint64_t v57 = v213;
    v214[2](v40, v215, v213);
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v208 = a1;
      uint64_t v216 = v61;
      *(_DWORD *)uint64_t v60 = 141558275;
      *(void *)&long long v218 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v60 + 12) = 2081;
      sub_1000FE218();
      uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v218 = sub_100042948(v62, v63, &v216);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v64 = v56[1];
      ((void (*)(char *, unint64_t))v64)(v40, v57);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Cannot resolve icon from unsupported url scheme '%{private,mask.hash}s'", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(uint64_t, unint64_t))v64)(v208, v57);
      ((void (*)(char *, unint64_t))v64)(v215, v57);
    }
    else
    {

      uint64_t v65 = v56[1];
      ((void (*)(char *, unint64_t))v65)(v40, v57);
      ((void (*)(uint64_t, unint64_t))v65)(a1, v57);
      ((void (*)(char *, unint64_t))v65)(v55, v57);
    }
    return 0;
  }
  if (v52 == 0x7366657270 && v53 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v66 & 1) == 0)
    {
      uint64_t v74 = v215;
      Swift::String_optional v75 = URL.host(percentEncoded:)(1);
      uint64_t v76 = v214;
      if (!v75.value._object || (uint64_t v77 = sub_100101D40(), v77 == 45))
      {
        if (qword_10015F150 != -1) {
          swift_once();
        }
        uint64_t v78 = type metadata accessor for Logger();
        sub_1000477B0(v78, (uint64_t)qword_10016AFE0);
        unint64_t v79 = v213;
        v76[2](v45, (char *)a1, v213);
        unint64_t v80 = Logger.logObject.getter();
        uint64_t v81 = a1;
        os_log_type_t v82 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v80, v82))
        {
          uint64_t v83 = swift_slowAlloc();
          uint64_t v216 = swift_slowAlloc();
          *(_DWORD *)uint64_t v83 = 141558275;
          *(void *)&long long v218 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v83 + 12) = 2081;
          uint64_t v208 = v81;
          uint64_t v84 = URL.absoluteString.getter();
          *(void *)&long long v218 = sub_100042948(v84, v85, &v216);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v86 = v76[1];
          ((void (*)(char *, unint64_t))v86)(v45, v79);
          _os_log_impl((void *)&_mh_execute_header, v80, v82, "Failed to resolve an icon from URL: '%{private,mask.hash}s' due to unsupported host value.", (uint8_t *)v83, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          ((void (*)(uint64_t, unint64_t))v86)(v208, v79);
          ((void (*)(char *, unint64_t))v86)(v215, v79);
        }
        else
        {

          uint64_t v95 = v76[1];
          ((void (*)(char *, unint64_t))v95)(v45, v79);
          ((void (*)(uint64_t, unint64_t))v95)(v81, v79);
          ((void (*)(char *, unint64_t))v95)(v74, v79);
        }
        return 0;
      }
      char v96 = 74;
      uint64_t v97 = v77;
      goto LABEL_35;
    }
  }
  uint64_t v216 = URL.absoluteString.getter();
  unint64_t v217 = v67;
  sub_100030C58();
  StringProtocol.removingPercentEncoding.getter();
  uint64_t v69 = v68;
  swift_bridgeObjectRelease();
  if (!v69)
  {
LABEL_51:
    uint64_t v110 = a1;
    if (qword_10015F150 != -1) {
      swift_once();
    }
    uint64_t v111 = type metadata accessor for Logger();
    sub_1000477B0(v111, (uint64_t)qword_10016AFE0);
    unint64_t v113 = v213;
    uint64_t v112 = v214;
    uint64_t v114 = v212;
    v214[2](v212, (char *)v110, v213);
    uint64_t v115 = Logger.logObject.getter();
    os_log_type_t v116 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v115, v116))
    {

      unint64_t v122 = v112[1];
      ((void (*)(char *, unint64_t))v122)(v114, v113);
      ((void (*)(uint64_t, unint64_t))v122)(v110, v113);
      ((void (*)(char *, unint64_t))v122)(v215, v113);
      return 0;
    }
    uint64_t v117 = swift_slowAlloc();
    uint64_t v208 = v110;
    uint64_t v118 = v117;
    uint64_t v216 = swift_slowAlloc();
    *(_DWORD *)uint64_t v118 = 141558275;
    *(void *)&long long v218 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v118 + 12) = 2081;
    uint64_t v119 = URL.absoluteString.getter();
    *(void *)&long long v218 = sub_100042948(v119, v120, &v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v121 = v112[1];
    ((void (*)(char *, unint64_t))v121)(v114, v113);
    _os_log_impl((void *)&_mh_execute_header, v115, v116, "Failed to resolve an icon from URL: '%{private,mask.hash}s' due to invalid root value.", (uint8_t *)v118, 0x16u);
    swift_arrayDestroy();
LABEL_55:
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(uint64_t, unint64_t))v121)(v208, v113);
    ((void (*)(char *, unint64_t))v121)(v215, v113);
    return 0;
  }
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v71 = v210;
  uint64_t v70 = v211;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48))(v27, 1, v210) == 1)
  {
    os_log_type_t v72 = &qword_100164AE0;
    uint64_t v73 = (uint64_t)v27;
LABEL_50:
    sub_10003F5D0(v73, v72);
    goto LABEL_51;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v35, v27, v71);
  uint64_t v87 = URLComponents.queryItems.getter();
  if (!v87)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v209 + 56))(v15, 1, 1, v16);
LABEL_49:
    (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v71);
    os_log_type_t v72 = (uint64_t *)&unk_100164080;
    uint64_t v73 = (uint64_t)v15;
    goto LABEL_50;
  }
  uint64_t v88 = *(void *)(v87 + 16);
  uint64_t v89 = v209;
  if (v88)
  {
    uint64_t v208 = a1;
    uint64_t v193 = *(void (**)(char *, unint64_t, uint64_t))(v209 + 16);
    unint64_t v90 = v87 + ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80));
    unint64_t v91 = (void (**)(char *, uint64_t))(v209 + 8);
    uint64_t v192 = *(void *)(v209 + 72);
    uint64_t v191 = v87;
    swift_bridgeObjectRetain();
    while (1)
    {
      v193(v19, v90, v16);
      if (URLQueryItem.name.getter() == 1953460082 && v92 == 0xE400000000000000) {
        break;
      }
      char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v93) {
        goto LABEL_47;
      }
      (*v91)(v19, v16);
      v90 += v192;
      if (!--v88)
      {
        swift_bridgeObjectRelease();
        uint64_t v94 = 1;
        a1 = v208;
        uint64_t v89 = v209;
        uint64_t v71 = v210;
        uint64_t v70 = v211;
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRelease();
LABEL_47:
    os_log_type_t v102 = v207;
    a1 = v208;
    uint64_t v70 = v211;
    swift_bridgeObjectRelease();
    uint64_t v89 = v209;
    (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v15, v19, v16);
    uint64_t v94 = 0;
    uint64_t v71 = v210;
  }
  else
  {
    uint64_t v94 = 1;
LABEL_39:
    os_log_type_t v102 = v207;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v15, v94, 1, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v15, 1, v16) == 1) {
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v102, v15, v16);
  URLQueryItem.value.getter();
  if (!v124)
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v102, v16);
    (*(void (**)(char *, uint64_t))(v211 + 8))(v35, v71);
    goto LABEL_51;
  }
  NSString v125 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v126 = (id)SFObjectAndOffsetForURLPair();

  uint64_t v127 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v220 = 0x7463656A626FLL;
  unint64_t v221 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v127 + 16) && (unint64_t v128 = sub_1000619E0((uint64_t)&v216), (v129 & 1) != 0))
  {
    sub_100061984(*(void *)(v127 + 56) + 32 * v128, (uint64_t)&v218);
  }
  else
  {
    long long v218 = 0u;
    long long v219 = 0u;
  }
  uint64_t v130 = v211;
  swift_bridgeObjectRelease();
  sub_100061AEC((uint64_t)&v216);
  if (!*((void *)&v219 + 1))
  {
    sub_10003F5D0((uint64_t)&v218, &qword_1001609A0);
    goto LABEL_93;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_93:
    (*(void (**)(char *, uint64_t))(v209 + 8))(v102, v16);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v35, v71);
    goto LABEL_51;
  }
  char v96 = sub_1000F43F8();
  (*(void (**)(char *, uint64_t))(v209 + 8))(v102, v16);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v35, v71);
  if (v96 == 74) {
    goto LABEL_51;
  }
  uint64_t v97 = sub_1000F3F98(v96);
  uint64_t v74 = v215;
LABEL_35:
  unint64_t v98 = 0xD000000000000012;
  unint64_t v99 = sub_10010177C(v97);
  uint64_t v208 = a1;
  if (v99 == 0xD000000000000017 && v100 == 0x8000000100122B50)
  {
    swift_bridgeObjectRelease();
    uint64_t v101 = v210;
  }
  else
  {
    char v103 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v101 = v210;
    if ((v103 & 1) == 0)
    {
LABEL_71:
      uint64_t v106 = 0;
      uint64_t v107 = 0;
      goto LABEL_72;
    }
  }
  if (v96 != 74)
  {
    unint64_t v104 = sub_1000F4014(v96);
    if (v105)
    {
      uint64_t v106 = v104;
      uint64_t v107 = v105;
      goto LABEL_72;
    }
  }
  uint64_t v108 = (uint64_t)v205;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  uint64_t v109 = v211;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v108, 1, v101) == 1)
  {
    sub_10003F5D0(v108, &qword_100164AE0);
    goto LABEL_71;
  }
  uint64_t v131 = v203;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v203, v108, v101);
  uint64_t v216 = URLComponents.path.getter();
  unint64_t v217 = v132;
  *(void *)&long long v218 = 47;
  *((void *)&v218 + 1) = 0xE100000000000000;
  sub_100030C58();
  uint64_t v133 = StringProtocol.components<A>(separatedBy:)();
  swift_bridgeObjectRelease();
  unint64_t v134 = *(void *)(v133 + 16);
  unint64_t v135 = v134 != 0;
  if (v134 == v135)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v131, v101);
    goto LABEL_71;
  }
  if (v134 <= v135)
  {
    __break(1u);
    goto LABEL_126;
  }
  uint64_t v159 = v133 + 16 * v135;
  uint64_t v106 = *(void *)(v159 + 32);
  uint64_t v107 = *(void *)(v159 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v211 + 8))(v203, v101);
LABEL_72:
  if (sub_10010177C(v97) == 0xD000000000000012 && v136 == 0x8000000100122590)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v137 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v137 & 1) == 0)
    {
LABEL_79:
      uint64_t v145 = 0;
      unint64_t v146 = 0;
      goto LABEL_82;
    }
  }
  uint64_t v216 = URL.absoluteString.getter();
  unint64_t v217 = v138;
  sub_100030C58();
  StringProtocol.removingPercentEncoding.getter();
  uint64_t v140 = v139;
  swift_bridgeObjectRelease();
  if (!v140) {
    goto LABEL_79;
  }
  char v141 = v97;
  uint64_t v142 = (uint64_t)v204;
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v143 = v210;
  uint64_t v144 = v211;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v142, 1, v210) == 1)
  {
    sub_10003F5D0(v142, &qword_100164AE0);
    uint64_t v145 = 0;
    unint64_t v146 = 0;
  }
  else
  {
    uint64_t v147 = v200;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v200, v142, v143);
    uint64_t v145 = URLComponents.fragment.getter();
    unint64_t v146 = v148;
    (*(void (**)(char *, uint64_t))(v144 + 8))(v147, v143);
  }
  LOBYTE(v97) = v141;
LABEL_82:
  if (sub_10010177C(v97) == 0xD000000000000017 && v149 == 0x8000000100122B50)
  {
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  char v150 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v150 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (sub_10010177C(v97) == 0xD000000000000012 && v156 == 0x8000000100122590)
    {
      swift_bridgeObjectRelease();
      uint64_t v157 = v206;
      uint64_t v158 = v202;
    }
    else
    {
      char v160 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v157 = v206;
      uint64_t v158 = v202;
      if ((v160 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v98 = v213;
        uint64_t v19 = (char *)v214;
        goto LABEL_118;
      }
    }
    unint64_t v98 = v213;
    uint64_t v19 = (char *)v214;
    if (v146)
    {
      uint64_t v161 = HIBYTE(v146) & 0xF;
      if ((v146 & 0x2000000000000000) == 0) {
        uint64_t v161 = v145 & 0xFFFFFFFFFFFFLL;
      }
      if (v161)
      {
        uint64_t v216 = v145;
        unint64_t v217 = v146;
        *(void *)&long long v218 = 35;
        *((void *)&v218 + 1) = 0xE100000000000000;
        uint64_t v220 = 0;
        unint64_t v221 = 0xE000000000000000;
        sub_100030C58();
        uint64_t v162 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
        uint64_t v164 = v163;
        uint64_t v165 = 45;
        uint64_t v166 = v162;
        uint64_t v167 = &byte_100151170;
        while (1)
        {
          char v169 = *v167++;
          char v168 = v169;
          sub_10010177C(v169);
          v170._uint64_t countAndFlagsBits = v166;
          v170._object = v164;
          Swift::Bool v171 = String.hasSuffix(_:)(v170);
          swift_bridgeObjectRelease();
          if (v171) {
            break;
          }
          if (!--v165)
          {
            swift_bridgeObjectRelease();
            uint64_t v158 = v202;
            uint64_t v172 = v195;
            uint64_t v157 = v206;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v202 + 56))(v195, 1, 1, v206);
            goto LABEL_106;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v172 = v195;
        sub_1001011A8(v168, v195);
        uint64_t v158 = v202;
        unint64_t v176 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v202 + 48);
        uint64_t v157 = v206;
        if (v176(v172, 1, v206) != 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v175 = v196;
          sub_10004984C(v172, v196);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v158 + 56))(v175, 0, 1, v157);
          unint64_t v98 = v213;
          uint64_t v19 = (char *)v214;
          id v174 = v215;
          goto LABEL_116;
        }
LABEL_106:
        char v173 = sub_1000F43F8();
        unint64_t v98 = v213;
        uint64_t v19 = (char *)v214;
        if (v173 == 74)
        {
          uint64_t v175 = v196;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v196, 1, 1, v157);
          id v174 = v215;
        }
        else
        {
          id v174 = v215;
          uint64_t v175 = v196;
          if (v173 == 73)
          {
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v158 + 56))(v175, 0, 1, v157);
          }
          else
          {
            char v177 = sub_1000F3F98(v173);
            sub_1001011A8(v177, v175);
          }
        }
        sub_10003F5D0(v172, (uint64_t *)&unk_100161530);
        unint64_t v176 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48);
LABEL_116:
        if (v176(v175, 1, v157) != 1)
        {
          uint64_t v189 = v175;
          uint64_t v190 = v194;
          sub_10004984C(v189, v194);
          uint64_t v106 = sub_100040424();
          unint64_t v186 = (void (*)(uint64_t, unint64_t))*((void *)v19 + 1);
          v186(v208, v98);
          sub_100045F84(v190);
          uint64_t v187 = v174;
          goto LABEL_125;
        }
        sub_10003F5D0(v175, (uint64_t *)&unk_100161530);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
LABEL_118:
    uint64_t v178 = v199;
    sub_1001011A8(v97, v199);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v178, 1, v157) == 1)
    {
      sub_10003F5D0(v178, (uint64_t *)&unk_100161530);
      uint64_t v97 = v208;
      uint64_t v74 = v215;
      if (qword_10015F150 == -1)
      {
LABEL_120:
        uint64_t v179 = type metadata accessor for Logger();
        sub_1000477B0(v179, (uint64_t)qword_10016AFE0);
        uint64_t v180 = v197;
        (*((void (**)(char *, uint64_t, unint64_t))v19 + 2))(v197, v97, v98);
        uint64_t v115 = Logger.logObject.getter();
        os_log_type_t v181 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v115, v181))
        {

          uint64_t v188 = (void (*)(char *, unint64_t))*((void *)v19 + 1);
          v188(v180, v98);
          v188((char *)v97, v98);
          v188(v74, v98);
          return 0;
        }
        uint64_t v182 = swift_slowAlloc();
        uint64_t v216 = swift_slowAlloc();
        *(_DWORD *)uint64_t v182 = 141558275;
        *(void *)&long long v218 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v182 + 12) = 2081;
        unint64_t v113 = v98;
        uint64_t v183 = URL.absoluteString.getter();
        *(void *)&long long v218 = sub_100042948(v183, v184, &v216);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v121 = (void (*)(char *, char *, unint64_t))*((void *)v19 + 1);
        ((void (*)(char *, unint64_t))v121)(v180, v98);
        _os_log_impl((void *)&_mh_execute_header, v115, v181, "Failed to resolve an icon from URL: '%{private,mask.hash}s' after processing URL.", (uint8_t *)v182, 0x16u);
        swift_arrayDestroy();
        goto LABEL_55;
      }
LABEL_126:
      swift_once();
      goto LABEL_120;
    }
    uint64_t v185 = v198;
    sub_10004984C(v178, v198);
    uint64_t v106 = sub_100040424();
    unint64_t v186 = (void (*)(uint64_t, unint64_t))*((void *)v19 + 1);
    v186(v208, v98);
    sub_100045F84(v185);
    uint64_t v187 = v215;
LABEL_125:
    v186((uint64_t)v187, v98);
    return v106;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v107)
  {
    unint64_t v151 = v213;
    uint64_t v152 = v214[1];
    ((void (*)(uint64_t, unint64_t))v152)(v208, v213);
    ((void (*)(char *, unint64_t))v152)(v215, v151);
  }
  else
  {
    uint64_t v153 = (uint64_t)v201;
    swift_storeEnumTagMultiPayload();
    uint64_t v106 = sub_100040424();
    unint64_t v154 = v213;
    uint64_t v155 = v214[1];
    ((void (*)(uint64_t, unint64_t))v155)(v208, v213);
    sub_100045F84(v153);
    ((void (*)(char *, unint64_t))v155)(v215, v154);
  }
  return v106;
}

BOOL static Text.< infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  return sub_1001174F8(a1, a2, a3 & 1, a4, a5, a6, a7 & 1, a8);
}

BOOL sub_100117418(uint64_t a1, uint64_t a2)
{
  return sub_1001174F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *(void *)(a2 + 24));
}

BOOL sub_100117444(uint64_t a1, uint64_t a2)
{
  return !sub_1001174F8(*(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *(void *)(a2 + 24), *(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)(a1 + 24));
}

BOOL sub_100117488(uint64_t a1, uint64_t a2)
{
  return !sub_1001174F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *(void *)(a2 + 24));
}

BOOL sub_1001174D0(uint64_t a1, uint64_t a2)
{
  return sub_1001174F8(*(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *(void *)(a2 + 24), *(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)(a1 + 24));
}

BOOL sub_1001174F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v22[0] = a6;
  v22[1] = a8;
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for EnvironmentValues();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  EnvironmentValues.init()();
  static Locale.autoupdatingCurrent.getter();
  EnvironmentValues.locale.setter();
  uint64_t v13 = Text._resolveText(in:)();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  v22[5] = v13;
  v22[6] = v15;
  EnvironmentValues.init()();
  static Locale.autoupdatingCurrent.getter();
  EnvironmentValues.locale.setter();
  uint64_t v17 = Text._resolveText(in:)();
  uint64_t v19 = v18;
  v16(v12, v9);
  v22[2] = v17;
  v22[3] = v19;
  sub_100030C58();
  uint64_t v20 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20 == -1;
}

unint64_t sub_1001176F8()
{
  unint64_t result = qword_100164BD0;
  if (!qword_100164BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164BD0);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.description.getter()
{
  return URLQueryItem.description.getter();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t URLQueryItem.name.getter()
{
  return URLQueryItem.name.getter();
}

uint64_t URLQueryItem.value.getter()
{
  return URLQueryItem.value.getter();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.getter()
{
  return URLComponents.queryItems.getter();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.percentEncodedQueryItems.getter()
{
  return URLComponents.percentEncodedQueryItems.getter();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.getter()
{
  return URLComponents.host.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.path.getter()
{
  return URLComponents.path.getter();
}

uint64_t URLComponents.path.setter()
{
  return URLComponents.path.setter();
}

uint64_t URLComponents.scheme.getter()
{
  return URLComponents.scheme.getter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init(string:)()
{
  return URLComponents.init(string:)();
}

uint64_t URLComponents.fragment.getter()
{
  return URLComponents.fragment.getter();
}

uint64_t URLComponents.fragment.setter()
{
  return URLComponents.fragment.setter();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t LocalizedStringResource.locale.setter()
{
  return LocalizedStringResource.locale.setter();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)()
{
  return _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.pathComponents.getter()
{
  return URL.pathComponents.getter();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t static URL.libraryDirectory.getter()
{
  return static URL.libraryDirectory.getter();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.deletingPathExtension()()
{
  return URL.deletingPathExtension()();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t static URL.== infix(_:_:)()
{
  return static URL.== infix(_:_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::String_optional __swiftcall URL.host(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.host(percentEncoded:)(percentEncoded);
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t URL.host.getter()
{
  return URL.host.getter();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending(queryItems:)()
{
  return URL.appending(queryItems:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data._copyContents(initializing:)()
{
  return Data._copyContents(initializing:)();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Data.Iterator()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t static Date.FormatStyle.TimeStyle.shortened.getter()
{
  return static Date.FormatStyle.TimeStyle.shortened.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.TimeStyle()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t static Date.FormatStyle.DateStyle.abbreviated.getter()
{
  return static Date.FormatStyle.DateStyle.abbreviated.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.DateStyle()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t Date.formatted(date:time:)()
{
  return Date.formatted(date:time:)();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ObservationRegistrar.access<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.didSet<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.willSet<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.init()()
{
  return ObservationRegistrar.init()();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t AppleIDSetupFeature.isFeatureEnabled.getter()
{
  return AppleIDSetupFeature.isFeatureEnabled.getter();
}

uint64_t type metadata accessor for AppleIDSetupFeature()
{
  return type metadata accessor for AppleIDSetupFeature();
}

uint64_t AISAppleIDSignInResult.authResults.getter()
{
  return AISAppleIDSignInResult.authResults.getter();
}

uint64_t FLFollowUpInformation.badgeValue.getter()
{
  return FLFollowUpInformation.badgeValue.getter();
}

uint64_t FLFollowUpInformation.renderStyle.getter()
{
  return FLFollowUpInformation.renderStyle.getter();
}

uint64_t FLFollowUpInformation.groupIdentity.getter()
{
  return FLFollowUpInformation.groupIdentity.getter();
}

uint64_t FLFollowUpInformation.itemIdentifier.getter()
{
  return FLFollowUpInformation.itemIdentifier.getter();
}

uint64_t FLFollowUpInformation.restrictionEnabled.getter()
{
  return FLFollowUpInformation.restrictionEnabled.getter();
}

uint64_t static FLFollowUpInformation.< infix(_:_:)()
{
  return static FLFollowUpInformation.< infix(_:_:)();
}

uint64_t static FLFollowUpInformation.== infix(_:_:)()
{
  return static FLFollowUpInformation.== infix(_:_:)();
}

uint64_t FLFollowUpInformation.title.getter()
{
  return FLFollowUpInformation.title.getter();
}

uint64_t FLFollowUpInformation.subtitle.getter()
{
  return FLFollowUpInformation.subtitle.getter();
}

uint64_t type metadata accessor for FLFollowUpInformation()
{
  return type metadata accessor for FLFollowUpInformation();
}

uint64_t FLFollowUpGroupIdentity.accountType.getter()
{
  return FLFollowUpGroupIdentity.accountType.getter();
}

uint64_t FLFollowUpGroupIdentity.id.getter()
{
  return FLFollowUpGroupIdentity.id.getter();
}

uint64_t type metadata accessor for FLFollowUpGroupIdentity()
{
  return type metadata accessor for FLFollowUpGroupIdentity();
}

uint64_t FLFollowUpModelObserver.unauthorizedFollowUps.getter()
{
  return FLFollowUpModelObserver.unauthorizedFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.unauthorizedFollowUpGroupSectionElement.getter()
{
  return FLFollowUpModelObserver.unauthorizedFollowUpGroupSectionElement.getter();
}

uint64_t FLFollowUpModelObserver.appleServicesFollowUps.getter()
{
  return FLFollowUpModelObserver.appleServicesFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.newDeviceOutreachFollowUps.getter()
{
  return FLFollowUpModelObserver.newDeviceOutreachFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.newDeviceOutreachFollowUpGroupSectionElement.getter()
{
  return FLFollowUpModelObserver.newDeviceOutreachFollowUpGroupSectionElement.getter();
}

uint64_t FLFollowUpModelObserver.primaryAppleAccountFollowUps.getter()
{
  return FLFollowUpModelObserver.primaryAppleAccountFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.secondaryAppleAccountFollowUps.getter()
{
  return FLFollowUpModelObserver.secondaryAppleAccountFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.primaryAppleAccountNoGroupFollowUps.getter()
{
  return FLFollowUpModelObserver.primaryAppleAccountNoGroupFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.secondaryAppleAccountNoGroupFollowUps.getter()
{
  return FLFollowUpModelObserver.secondaryAppleAccountNoGroupFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.init(primaryAppleAccountIdentifierForFollowUpsRetriever:secondaryAppleAccountsIdentifiersForFollowUpsRetriever:accountChangePublisher:onUpdateBlock:)()
{
  return FLFollowUpModelObserver.init(primaryAppleAccountIdentifierForFollowUpsRetriever:secondaryAppleAccountsIdentifiersForFollowUpsRetriever:accountChangePublisher:onUpdateBlock:)();
}

uint64_t FLFollowUpModelObserver.deviceFollowUps.getter()
{
  return FLFollowUpModelObserver.deviceFollowUps.getter();
}

uint64_t FLFollowUpModelObserver.deviceFollowUpGroupSectionElement.getter()
{
  return FLFollowUpModelObserver.deviceFollowUpGroupSectionElement.getter();
}

uint64_t FLFollowUpModelObserver.followUpItem(with:)()
{
  return FLFollowUpModelObserver.followUpItem(with:)();
}

uint64_t FLFollowUpModelObserver.followUpGroup(with:)()
{
  return FLFollowUpModelObserver.followUpGroup(with:)();
}

uint64_t type metadata accessor for FLFollowUpModelObserver()
{
  return type metadata accessor for FLFollowUpModelObserver();
}

uint64_t FLFollowUpGroupSectionElement.footerText.getter()
{
  return FLFollowUpGroupSectionElement.footerText.getter();
}

uint64_t FLFollowUpGroupSectionElement.headerText.getter()
{
  return FLFollowUpGroupSectionElement.headerText.getter();
}

uint64_t type metadata accessor for FLFollowUpGroupSectionElement()
{
  return type metadata accessor for FLFollowUpGroupSectionElement();
}

uint64_t static FLAccountType.== infix(_:_:)()
{
  return static FLAccountType.== infix(_:_:)();
}

uint64_t type metadata accessor for FLAccountType()
{
  return type metadata accessor for FLAccountType();
}

uint64_t static FLRenderStyle.== infix(_:_:)()
{
  return static FLRenderStyle.== infix(_:_:)();
}

uint64_t type metadata accessor for FLRenderStyle()
{
  return type metadata accessor for FLRenderStyle();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t dispatch thunk of FeatureFlagsKey.domain.getter()
{
  return dispatch thunk of FeatureFlagsKey.domain.getter();
}

uint64_t dispatch thunk of FeatureFlagsKey.feature.getter()
{
  return dispatch thunk of FeatureFlagsKey.feature.getter();
}

uint64_t static AlternationBuilder.buildExpression<A>(_:)()
{
  return static AlternationBuilder.buildExpression<A>(_:)();
}

uint64_t static AlternationBuilder.buildPartialBlock<A>(first:)()
{
  return static AlternationBuilder.buildPartialBlock<A>(first:)();
}

uint64_t static RegexComponentBuilder.buildExpression<A>(_:)()
{
  return static RegexComponentBuilder.buildExpression<A>(_:)();
}

uint64_t static RegexComponentBuilder.buildPartialBlock<A>(first:)()
{
  return static RegexComponentBuilder.buildPartialBlock<A>(first:)();
}

uint64_t ZeroOrMore.init(_:)()
{
  return ZeroOrMore.init(_:)();
}

uint64_t makeFactory()()
{
  return makeFactory()();
}

uint64_t Capture.init(_:)()
{
  return Capture.init(_:)();
}

uint64_t ChoiceOf.regex.getter()
{
  return ChoiceOf.regex.getter();
}

uint64_t ChoiceOf.init(_:)()
{
  return ChoiceOf.init(_:)();
}

{
  return ChoiceOf.init(_:)();
}

uint64_t AppleIDSignInView.init(configuration:onSkip:completion:)()
{
  return AppleIDSignInView.init(configuration:onSkip:completion:)();
}

uint64_t type metadata accessor for AppleIDSignInView()
{
  return type metadata accessor for AppleIDSignInView();
}

uint64_t type metadata accessor for AISAppleIDSignInConfiguration()
{
  return type metadata accessor for AISAppleIDSignInConfiguration();
}

uint64_t static FamilySettingsFactory.FamilySettingsViewsHaveChanged.getter()
{
  return static FamilySettingsFactory.FamilySettingsViewsHaveChanged.getter();
}

uint64_t static FamilySettingsFactory.sharedProvider.getter()
{
  return static FamilySettingsFactory.sharedProvider.getter();
}

uint64_t static FamilySettingsFactory.Status.getter()
{
  return static FamilySettingsFactory.Status.getter();
}

uint64_t static FamilySettingsFactory.Marquee.getter()
{
  return static FamilySettingsFactory.Marquee.getter();
}

uint64_t dispatch thunk of FamilySettingsViewsProtocol.viewController(for:)()
{
  return dispatch thunk of FamilySettingsViewsProtocol.viewController(for:)();
}

uint64_t dispatch thunk of FamilySettingsViewsProtocol.sendWakeupNotification()()
{
  return dispatch thunk of FamilySettingsViewsProtocol.sendWakeupNotification()();
}

uint64_t dispatch thunk of FamilySettingsViewsProtocol.familyRow(for:info:)()
{
  return dispatch thunk of FamilySettingsViewsProtocol.familyRow(for:info:)();
}

uint64_t dispatch thunk of FamilySettingsViewsProtocol.rowStatus.getter()
{
  return dispatch thunk of FamilySettingsViewsProtocol.rowStatus.getter();
}

uint64_t FamilyRowStatus.init(rawValue:)()
{
  return FamilyRowStatus.init(rawValue:)();
}

uint64_t FamilyRowStatus.rawValue.getter()
{
  return FamilyRowStatus.rawValue.getter();
}

uint64_t type metadata accessor for FamilyRowStatus()
{
  return type metadata accessor for FamilyRowStatus();
}

uint64_t type metadata accessor for iCloudHomeViewController()
{
  return type metadata accessor for iCloudHomeViewController();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.remoteControlStatus.getter()
{
  return dispatch thunk of ScreenSharingInteractionController.remoteControlStatus.getter();
}

uint64_t static ScreenSharingInteractionController.shared.getter()
{
  return static ScreenSharingInteractionController.shared.getter();
}

uint64_t type metadata accessor for ScreenSharingInteractionController()
{
  return type metadata accessor for ScreenSharingInteractionController();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason();
}

uint64_t GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter()
{
  return GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo();
}

uint64_t static GenerativeModelsAvailability.Availability.== infix(_:_:)()
{
  return static GenerativeModelsAvailability.Availability.== infix(_:_:)();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability();
}

uint64_t GenerativeModelsAvailability.Parameters.init(useCaseIdentifier:)()
{
  return GenerativeModelsAvailability.Parameters.init(useCaseIdentifier:)();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Parameters()
{
  return type metadata accessor for GenerativeModelsAvailability.Parameters();
}

uint64_t GenerativeModelsAvailability.availability.getter()
{
  return GenerativeModelsAvailability.availability.getter();
}

uint64_t static GenerativeModelsAvailability.current(parameters:)()
{
  return static GenerativeModelsAvailability.current(parameters:)();
}

uint64_t type metadata accessor for GenerativeModelsAvailability()
{
  return type metadata accessor for GenerativeModelsAvailability();
}

uint64_t _RegexFactory.accumulate<A, B, C>(_:_:)()
{
  return _RegexFactory.accumulate<A, B, C>(_:_:)();
}

uint64_t _RegexFactory.zeroOrMore<A, B>(_:_:)()
{
  return _RegexFactory.zeroOrMore<A, B>(_:_:)();
}

uint64_t _RegexFactory.accumulateAlternation<A, B, C>(_:_:)()
{
  return _RegexFactory.accumulateAlternation<A, B, C>(_:_:)();
}

uint64_t _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)()
{
  return _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
}

uint64_t _RegexFactory.capture<A, B>(_:)()
{
  return _RegexFactory.capture<A, B>(_:)();
}

uint64_t type metadata accessor for _RegexFactory()
{
  return type metadata accessor for _RegexFactory();
}

uint64_t type metadata accessor for RegexRepetitionBehavior()
{
  return type metadata accessor for RegexRepetitionBehavior();
}

uint64_t Regex.init<A>(_:)()
{
  return Regex.init<A>(_:)();
}

uint64_t Regex.ignoresCase(_:)()
{
  return Regex.ignoresCase(_:)();
}

uint64_t Regex.Match.output.getter()
{
  return Regex.Match.output.getter();
}

uint64_t SettingsAnyPlatformViewControllerView.init(platformViewControllerModel:)()
{
  return SettingsAnyPlatformViewControllerView.init(platformViewControllerModel:)();
}

uint64_t SettingsAnyPlatformViewControllerView.init(platformViewControllerRecipe:)()
{
  return SettingsAnyPlatformViewControllerView.init(platformViewControllerRecipe:)();
}

uint64_t type metadata accessor for SettingsAnyPlatformViewControllerView()
{
  return type metadata accessor for SettingsAnyPlatformViewControllerView();
}

uint64_t PreferencesControllerView.init(preferencesControllerRepresentableModel:)()
{
  return PreferencesControllerView.init(preferencesControllerRepresentableModel:)();
}

uint64_t type metadata accessor for PreferencesControllerView()
{
  return type metadata accessor for PreferencesControllerView();
}

uint64_t PreferencesControllerRecipe.init(viewController:specifier:)()
{
  return PreferencesControllerRecipe.init(viewController:specifier:)();
}

uint64_t PreferencesControllerRecipe.init(viewController:)()
{
  return PreferencesControllerRecipe.init(viewController:)();
}

uint64_t PreferencesControllerRecipe.init(viewControllerClass:specifier:)()
{
  return PreferencesControllerRecipe.init(viewControllerClass:specifier:)();
}

uint64_t PreferencesControllerRecipe.viewControllerIfLoaded.getter()
{
  return PreferencesControllerRecipe.viewControllerIfLoaded.getter();
}

uint64_t PreferencesControllerRecipe.init(specifier:bundleName:location:viewControllerClassName:)()
{
  return PreferencesControllerRecipe.init(specifier:bundleName:location:viewControllerClassName:)();
}

uint64_t type metadata accessor for PreferencesControllerRecipe()
{
  return type metadata accessor for PreferencesControllerRecipe();
}

uint64_t PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()()
{
  return PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
}

uint64_t static PreferencesControllerRepresentableModel.== infix(_:_:)()
{
  return static PreferencesControllerRepresentableModel.== infix(_:_:)();
}

uint64_t PreferencesControllerRepresentableModel.init(recipe:)()
{
  return PreferencesControllerRepresentableModel.init(recipe:)();
}

uint64_t type metadata accessor for PreferencesControllerRepresentableModel()
{
  return type metadata accessor for PreferencesControllerRepresentableModel();
}

uint64_t SettingsAnyViewRecipe.view.getter()
{
  return SettingsAnyViewRecipe.view.getter();
}

uint64_t type metadata accessor for SettingsAnyViewRecipe()
{
  return type metadata accessor for SettingsAnyViewRecipe();
}

uint64_t type metadata accessor for SettingsAppPrimaryNavigationMode()
{
  return type metadata accessor for SettingsAppPrimaryNavigationMode();
}

uint64_t ClearSettingsNavigationPathAction.init(namespace:onClear:)()
{
  return ClearSettingsNavigationPathAction.init(namespace:onClear:)();
}

uint64_t type metadata accessor for ClearSettingsNavigationPathAction()
{
  return type metadata accessor for ClearSettingsNavigationPathAction();
}

uint64_t AppendSettingsNavigationPathAction.callAsFunction<A>(_:)()
{
  return AppendSettingsNavigationPathAction.callAsFunction<A>(_:)();
}

uint64_t AppendSettingsNavigationPathAction.init(namespace:onAppend:)()
{
  return AppendSettingsNavigationPathAction.init(namespace:onAppend:)();
}

uint64_t type metadata accessor for AppendSettingsNavigationPathAction()
{
  return type metadata accessor for AppendSettingsNavigationPathAction();
}

uint64_t ResetSettingsNavigationStateAction.init(namespace:onReset:)()
{
  return ResetSettingsNavigationStateAction.init(namespace:onReset:)();
}

uint64_t type metadata accessor for ResetSettingsNavigationStateAction()
{
  return type metadata accessor for ResetSettingsNavigationStateAction();
}

uint64_t static SettingsAnyPlatformViewControllerModel.== infix(_:_:)()
{
  return static SettingsAnyPlatformViewControllerModel.== infix(_:_:)();
}

uint64_t SettingsAnyPlatformViewControllerModel.init(recipe:)()
{
  return SettingsAnyPlatformViewControllerModel.init(recipe:)();
}

uint64_t type metadata accessor for SettingsAnyPlatformViewControllerModel()
{
  return type metadata accessor for SettingsAnyPlatformViewControllerModel();
}

uint64_t SettingsAnyPlatformViewControllerRecipe.viewController.getter()
{
  return SettingsAnyPlatformViewControllerRecipe.viewController.getter();
}

uint64_t type metadata accessor for SettingsAnyPlatformViewControllerRecipe()
{
  return type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
}

uint64_t SettingsAnyPlatformViewControllerRecipe.init(_:)()
{
  return SettingsAnyPlatformViewControllerRecipe.init(_:)();
}

uint64_t AsyncIconImage.init<>(icon:descriptor:)()
{
  return AsyncIconImage.init<>(icon:descriptor:)();
}

uint64_t dispatch thunk of Preloader.preloadResources(completion:)()
{
  return dispatch thunk of Preloader.preloadResources(completion:)();
}

uint64_t static Preloader.shared.getter()
{
  return static Preloader.shared.getter();
}

uint64_t type metadata accessor for Preloader()
{
  return type metadata accessor for Preloader();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t static OSSignpostID.exclusive.getter()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OSSignposter.init(logger:)()
{
  return OSSignposter.init(logger:)();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Tip.rules.getter()
{
  return Tip.rules.getter();
}

uint64_t Tip.title.getter()
{
  return Tip.title.getter();
}

uint64_t Tip.actions.getter()
{
  return Tip.actions.getter();
}

uint64_t Tip.message.getter()
{
  return Tip.message.getter();
}

uint64_t TipView.init(_:arrowEdge:action:)()
{
  return TipView.init(_:arrowEdge:action:)();
}

uint64_t static Tips.OptionsBuilder.buildExpression<A>(_:)()
{
  return static Tips.OptionsBuilder.buildExpression<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildFinalResult<A>(_:)()
{
  return static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildPartialBlock<A>(first:)()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t type metadata accessor for Tips.UsesConstellation()
{
  return type metadata accessor for Tips.UsesConstellation();
}

uint64_t Tips.UsesConstellation.init(_:)()
{
  return Tips.UsesConstellation.init(_:)();
}

uint64_t static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter()
{
  return static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine()
{
  return type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
}

uint64_t static Tips.ConfigurationOption.analyticsEngine(_:)()
{
  return static Tips.ConfigurationOption.analyticsEngine(_:)();
}

uint64_t static Tips.ConfigurationOption.DisplayFrequency.system.getter()
{
  return static Tips.ConfigurationOption.DisplayFrequency.system.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DisplayFrequency()
{
  return type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
}

uint64_t static Tips.ConfigurationOption.displayFrequency(_:)()
{
  return static Tips.ConfigurationOption.displayFrequency(_:)();
}

uint64_t static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter()
{
  return static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DatastoreLocation()
{
  return type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
}

uint64_t static Tips.ConfigurationOption.datastoreLocation(_:)()
{
  return static Tips.ConfigurationOption.datastoreLocation(_:)();
}

uint64_t type metadata accessor for Tips.ConfigurationOption()
{
  return type metadata accessor for Tips.ConfigurationOption();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t dispatch thunk of Cancellable.cancel()()
{
  return dispatch thunk of Cancellable.cancel()();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t PassthroughSubject.send(_:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

Swift::Void __swiftcall ObservableObjectPublisher.send()()
{
}

uint64_t type metadata accessor for ObservableObjectPublisher()
{
  return type metadata accessor for ObservableObjectPublisher();
}

uint64_t Subject<>.send()()
{
  return Subject<>.send()();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return Publisher.compactMap<A>(_:)();
}

uint64_t Publisher.delay<A>(for:tolerance:scheduler:options:)()
{
  return Publisher.delay<A>(for:tolerance:scheduler:options:)();
}

uint64_t Publisher.merge(with:)()
{
  return Publisher.merge(with:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.assign<A>(to:on:)()
{
  return Publisher<>.assign<A>(to:on:)();
}

uint64_t Animatable<>.animatableData.modify()
{
  return Animatable<>.animatableData.modify();
}

uint64_t static Animatable<>._makeAnimatable(value:inputs:)()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t AppStorage.init<A>(wrappedValue:_:store:)()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t AppStorage.projectedValue.getter()
{
  return AppStorage.projectedValue.getter();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t LabelGroup.init(content:)()
{
  return LabelGroup.init(content:)();
}

uint64_t type metadata accessor for ScenePhase()
{
  return type metadata accessor for ScenePhase();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t Environment.init<A>(_:)()
{
  return Environment.init<A>(_:)();
}

uint64_t PPTTestCase.parameters.getter()
{
  return PPTTestCase.parameters.getter();
}

uint64_t PPTTestCase.performScrollTest(_:)()
{
  return PPTTestCase.performScrollTest(_:)();
}

uint64_t PPTTestCase.Name.rawValue.getter()
{
  return PPTTestCase.Name.rawValue.getter();
}

uint64_t type metadata accessor for PPTTestCase.Name()
{
  return type metadata accessor for PPTTestCase.Name();
}

uint64_t PPTTestCase.Name.init(_:)()
{
  return PPTTestCase.Name.init(_:)();
}

uint64_t PPTTestCase.name.getter()
{
  return PPTTestCase.name.getter();
}

uint64_t type metadata accessor for PPTTestCase()
{
  return type metadata accessor for PPTTestCase();
}

uint64_t ToolbarItem<>.init(placement:content:)()
{
  return ToolbarItem<>.init(placement:content:)();
}

uint64_t Transaction.disablesAnimations.setter()
{
  return Transaction.disablesAnimations.setter();
}

uint64_t Transaction.addAnimationCompletion(criteria:_:)()
{
  return Transaction.addAnimationCompletion(criteria:_:)();
}

uint64_t Transaction.animation.setter()
{
  return Transaction.animation.setter();
}

uint64_t WindowGroup.init(id:title:lazyContent:)()
{
  return WindowGroup.init(id:title:lazyContent:)();
}

uint64_t static SceneBuilder.buildBlock<A>(_:)()
{
  return static SceneBuilder.buildBlock<A>(_:)();
}

uint64_t static VerticalEdge.Set.all.getter()
{
  return static VerticalEdge.Set.all.getter();
}

uint64_t static VerticalEdge.Set.bottom.getter()
{
  return static VerticalEdge.Set.bottom.getter();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

Swift::Void __swiftcall DismissAction.callAsFunction()()
{
}

uint64_t type metadata accessor for DismissAction()
{
  return type metadata accessor for DismissAction();
}

uint64_t LayoutSubview.place(at:anchor:proposal:)()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t type metadata accessor for LayoutSubview()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t OpenURLAction.callAsFunction(_:)()
{
  return OpenURLAction.callAsFunction(_:)();
}

uint64_t static OpenURLAction.Result.handled.getter()
{
  return static OpenURLAction.Result.handled.getter();
}

uint64_t OpenURLAction.init(handler:)()
{
  return OpenURLAction.init(handler:)();
}

uint64_t type metadata accessor for OpenURLAction()
{
  return type metadata accessor for OpenURLAction();
}

uint64_t withAnimation<A>(_:_:)()
{
  return withAnimation<A>(_:_:)();
}

uint64_t LabeledContent<>.init(content:label:)()
{
  return LabeledContent<>.init(content:label:)();
}

uint64_t type metadata accessor for LayoutSubviews()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t NavigationLink.init(destination:label:)()
{
  return NavigationLink.init(destination:label:)();
}

uint64_t NavigationLink<>.init<A>(value:label:)()
{
  return NavigationLink<>.init<A>(value:label:)();
}

uint64_t type metadata accessor for NavigationLink()
{
  return type metadata accessor for NavigationLink();
}

Swift::Void __swiftcall NavigationPath.removeLast(_:)(Swift::Int a1)
{
}

uint64_t type metadata accessor for NavigationPath.CollectionProxy()
{
  return type metadata accessor for NavigationPath.CollectionProxy();
}

uint64_t NavigationPath.withCollectionProxy(_:)()
{
  return NavigationPath.withCollectionProxy(_:)();
}

uint64_t NavigationPath.count.getter()
{
  return NavigationPath.count.getter();
}

uint64_t NavigationPath.append<A>(_:)()
{
  return NavigationPath.append<A>(_:)();
}

uint64_t NavigationPath.isEmpty.getter()
{
  return NavigationPath.isEmpty.getter();
}

uint64_t NavigationPath.init()()
{
  return NavigationPath.init()();
}

uint64_t type metadata accessor for NavigationPath()
{
  return type metadata accessor for NavigationPath();
}

uint64_t PlainListStyle.init()()
{
  return PlainListStyle.init()();
}

uint64_t type metadata accessor for PlainListStyle()
{
  return type metadata accessor for PlainListStyle();
}

uint64_t static BadgeProminence.increased.getter()
{
  return static BadgeProminence.increased.getter();
}

uint64_t type metadata accessor for BadgeProminence()
{
  return type metadata accessor for BadgeProminence();
}

uint64_t type metadata accessor for LayoutDirection()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t ModifiedContent<>.accessibilityAddTraits(_:)()
{
  return ModifiedContent<>.accessibilityAddTraits(_:)();
}

uint64_t NavigationStack.init<>(path:root:)()
{
  return NavigationStack.init<>(path:root:)();
}

uint64_t NavigationStack.init<>(root:)()
{
  return NavigationStack.init<>(root:)();
}

uint64_t static SafeAreaRegions.all.getter()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t ScrollViewProxy.scrollTo<A>(_:anchor:)()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t type metadata accessor for ScrollViewProxy()
{
  return type metadata accessor for ScrollViewProxy();
}

uint64_t withTransaction<A>(_:_:)()
{
  return withTransaction<A>(_:_:)();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.scenePhase.getter()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t EnvironmentValues.scenePhase.setter()
{
  return EnvironmentValues.scenePhase.setter();
}

uint64_t EnvironmentValues.isSearching.getter()
{
  return EnvironmentValues.isSearching.getter();
}

uint64_t EnvironmentValues.displayScale.getter()
{
  return EnvironmentValues.displayScale.getter();
}

uint64_t EnvironmentValues.displayScale.setter()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t EnvironmentValues.listRowSpacing.getter()
{
  return EnvironmentValues.listRowSpacing.getter();
}

uint64_t EnvironmentValues.listRowSpacing.setter()
{
  return EnvironmentValues.listRowSpacing.setter();
}

uint64_t EnvironmentValues.badgeProminence.getter()
{
  return EnvironmentValues.badgeProminence.getter();
}

uint64_t EnvironmentValues.badgeProminence.setter()
{
  return EnvironmentValues.badgeProminence.setter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.layoutDirection.getter()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t EnvironmentValues._openSensitiveURL.getter()
{
  return EnvironmentValues._openSensitiveURL.getter();
}

uint64_t EnvironmentValues.listSectionSpacing.getter()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t EnvironmentValues.listSectionSpacing.setter()
{
  return EnvironmentValues.listSectionSpacing.setter();
}

uint64_t EnvironmentValues.horizontalSizeClass.getter()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t EnvironmentValues.horizontalSizeClass.setter()
{
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t EnvironmentValues.symbolRenderingMode.getter()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t EnvironmentValues.symbolRenderingMode.setter()
{
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.withCurrentHostingController.getter()
{
  return EnvironmentValues.withCurrentHostingController.getter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.locale.getter()
{
  return EnvironmentValues.locale.getter();
}

uint64_t EnvironmentValues.locale.setter()
{
  return EnvironmentValues.locale.setter();
}

uint64_t EnvironmentValues.dismiss.getter()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t EnvironmentValues.openURL.getter()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t EnvironmentValues.openURL.setter()
{
  return EnvironmentValues.openURL.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t type metadata accessor for NavigationBarItem.TitleDisplayMode()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t static VerticalAlignment.top.getter()
{
  return static VerticalAlignment.top.getter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t type metadata accessor for _UnaryViewAdaptor()
{
  return type metadata accessor for _UnaryViewAdaptor();
}

uint64_t _UnaryViewAdaptor.init(_:)()
{
  return _UnaryViewAdaptor.init(_:)();
}

uint64_t static ListSectionSpacing.compact.getter()
{
  return static ListSectionSpacing.compact.getter();
}

uint64_t type metadata accessor for ListSectionSpacing()
{
  return type metadata accessor for ListSectionSpacing();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t static PresentationDetent.large.getter()
{
  return static PresentationDetent.large.getter();
}

uint64_t static PresentationDetent.medium.getter()
{
  return static PresentationDetent.medium.getter();
}

uint64_t type metadata accessor for PresentationDetent()
{
  return type metadata accessor for PresentationDetent();
}

uint64_t static AccessibilityTraits.isStaticText.getter()
{
  return static AccessibilityTraits.isStaticText.getter();
}

uint64_t static AccessibilityTraits.isModal.getter()
{
  return static AccessibilityTraits.isModal.getter();
}

uint64_t static AccessibilityTraits.isButton.getter()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t static AccessibilityTraits.isHeader.getter()
{
  return static AccessibilityTraits.isHeader.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t NavigationSplitView.init<>(columnVisibility:sidebar:detail:)()
{
  return NavigationSplitView.init<>(columnVisibility:sidebar:detail:)();
}

uint64_t static SymbolRenderingMode.hierarchical.getter()
{
  return static SymbolRenderingMode.hierarchical.getter();
}

uint64_t type metadata accessor for SymbolRenderingMode()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t TupleToolbarContent.init(_:)()
{
  return TupleToolbarContent.init(_:)();
}

uint64_t UIViewRepresentable._resetUIView(_:coordinator:destroy:)()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t static UIViewRepresentable.dismantleUIView(_:coordinator:)()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t static UIViewRepresentable._layoutOptions(_:)()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t UIViewRepresentable._identifiedViewTree(in:)()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewRepresentable._overrideLayoutTraits(_:for:)()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t static UIViewRepresentable._modifyBridgedViewInputs(_:)()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t UIViewRepresentable.body.getter()
{
  return UIViewRepresentable.body.getter();
}

uint64_t UIViewRepresentable<>.makeCoordinator()()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t type metadata accessor for _ConditionalContent.Storage()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t type metadata accessor for _ConditionalContent()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t static PrimitiveButtonStyle<>.navigationLink.getter()
{
  return static PrimitiveButtonStyle<>.navigationLink.getter();
}

uint64_t static SearchFieldPlacement.automatic.getter()
{
  return static SearchFieldPlacement.automatic.getter();
}

uint64_t type metadata accessor for SearchFieldPlacement()
{
  return type metadata accessor for SearchFieldPlacement();
}

uint64_t static ToolbarItemPlacement.navigationBarTrailing.getter()
{
  return static ToolbarItemPlacement.navigationBarTrailing.getter();
}

uint64_t static ToolbarItemPlacement.principal.getter()
{
  return static ToolbarItemPlacement.principal.getter();
}

uint64_t type metadata accessor for ToolbarItemPlacement()
{
  return type metadata accessor for ToolbarItemPlacement();
}

uint64_t InsetGroupedListStyle.init()()
{
  return InsetGroupedListStyle.init()();
}

uint64_t type metadata accessor for InsetGroupedListStyle()
{
  return type metadata accessor for InsetGroupedListStyle();
}

uint64_t static ContentUnavailableView<>.search.getter()
{
  return static ContentUnavailableView<>.search.getter();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t static ToolbarDefaultItemKind.sidebarToggle.getter()
{
  return static ToolbarDefaultItemKind.sidebarToggle.getter();
}

uint64_t type metadata accessor for ToolbarDefaultItemKind()
{
  return type metadata accessor for ToolbarDefaultItemKind();
}

uint64_t type metadata accessor for UserInterfaceSizeClass()
{
  return type metadata accessor for UserInterfaceSizeClass();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return type metadata accessor for ButtonStyleConfiguration.Label();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return ButtonStyleConfiguration.isPressed.getter();
}

uint64_t static NavigationSplitViewStyle<>.balanced.getter()
{
  return static NavigationSplitViewStyle<>.balanced.getter();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t static AnimationCompletionCriteria.logicallyComplete.getter()
{
  return static AnimationCompletionCriteria.logicallyComplete.getter();
}

uint64_t type metadata accessor for AnimationCompletionCriteria()
{
  return type metadata accessor for AnimationCompletionCriteria();
}

uint64_t static ScrollDismissesKeyboardMode.immediately.getter()
{
  return static ScrollDismissesKeyboardMode.immediately.getter();
}

uint64_t static ScrollDismissesKeyboardMode.interactively.getter()
{
  return static ScrollDismissesKeyboardMode.interactively.getter();
}

uint64_t type metadata accessor for ScrollDismissesKeyboardMode()
{
  return type metadata accessor for ScrollDismissesKeyboardMode();
}

uint64_t UIApplicationDelegateAdaptor<>.init(_:)()
{
  return UIApplicationDelegateAdaptor<>.init(_:)();
}

uint64_t type metadata accessor for UIApplicationDelegateAdaptor()
{
  return type metadata accessor for UIApplicationDelegateAdaptor();
}

uint64_t static NavigationSplitViewVisibility.all.getter()
{
  return static NavigationSplitViewVisibility.all.getter();
}

uint64_t type metadata accessor for NavigationSplitViewVisibility()
{
  return type metadata accessor for NavigationSplitViewVisibility();
}

uint64_t UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)()
{
  return UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)();
}

uint64_t static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)()
{
  return static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t static UIViewControllerRepresentable._layoutOptions(_:)()
{
  return static UIViewControllerRepresentable._layoutOptions(_:)();
}

uint64_t UIViewControllerRepresentable._identifiedViewTree(in:)()
{
  return UIViewControllerRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return UIViewControllerRepresentable.body.getter();
}

uint64_t UIViewControllerRepresentable<>.makeCoordinator()()
{
  return UIViewControllerRepresentable<>.makeCoordinator()();
}

uint64_t type metadata accessor for BalancedNavigationSplitViewStyle()
{
  return type metadata accessor for BalancedNavigationSplitViewStyle();
}

uint64_t WithCurrentHostingControllerAction.callAsFunction(_:)()
{
  return WithCurrentHostingControllerAction.callAsFunction(_:)();
}

uint64_t type metadata accessor for WithCurrentHostingControllerAction()
{
  return type metadata accessor for WithCurrentHostingControllerAction();
}

uint64_t UIViewControllerRepresentableContext.coordinator.getter()
{
  return UIViewControllerRepresentableContext.coordinator.getter();
}

uint64_t static App.main()()
{
  return static App.main()();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t Font.bold()()
{
  return Font.bold()();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t static Font.title3.getter()
{
  return static Font.title3.getter();
}

uint64_t Font.weight(_:)()
{
  return Font.weight(_:)();
}

uint64_t type metadata accessor for Font.Leading()
{
  return type metadata accessor for Font.Leading();
}

uint64_t Font.leading(_:)()
{
  return Font.leading(_:)();
}

uint64_t static Font.footnote.getter()
{
  return static Font.footnote.getter();
}

uint64_t List.init(selection:content:)()
{
  return List.init(selection:content:)();
}

uint64_t List<>.init(content:)()
{
  return List<>.init(content:)();
}

uint64_t Text._resolveText(in:)()
{
  return Text._resolveText(in:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init(_:)()
{
  return Text.init(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t View.iconSize(_:)()
{
  return View.iconSize(_:)();
}

uint64_t View.settingsAppPrimaryNavigationMode(_:)()
{
  return View.settingsAppPrimaryNavigationMode(_:)();
}

uint64_t View.clearSettingsNavigationPathAction(_:)()
{
  return View.clearSettingsNavigationPathAction(_:)();
}

uint64_t View.appendSettingsNavigationPathAction(_:)()
{
  return View.appendSettingsNavigationPathAction(_:)();
}

uint64_t View.resetSettingsNavigationStateAction(_:)()
{
  return View.resetSettingsNavigationStateAction(_:)();
}

uint64_t View.tipBackground<A>(_:)()
{
  return View.tipBackground<A>(_:)();
}

uint64_t View.settingsListAppearance()()
{
  return View.settingsListAppearance()();
}

uint64_t View.navigationSplitViewStyle<A>(_:)()
{
  return View.navigationSplitViewStyle<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.searchable(text:isPresented:placement:prompt:)()
{
  return View.searchable(text:isPresented:placement:prompt:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

{
  return View.buttonStyle<A>(_:)();
}

uint64_t View.environment<A>(_:)()
{
  return View.environment<A>(_:)();
}

uint64_t View.accessibility(identifier:)()
{
  return View.accessibility(identifier:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.fullScreenCover<A>(isPresented:onDismiss:content:)()
{
  return View.fullScreenCover<A>(isPresented:onDismiss:content:)();
}

uint64_t View.navigationTitle(_:)()
{
  return View.navigationTitle(_:)();
}

uint64_t View.navigationBarItems<A>(trailing:)()
{
  return View.navigationBarItems<A>(trailing:)();
}

uint64_t View.navigationBarTitle(_:)()
{
  return View.navigationBarTitle(_:)();
}

uint64_t View.accessibilityHidden(_:)()
{
  return View.accessibilityHidden(_:)();
}

uint64_t View.presentationDetents(_:)()
{
  return View.presentationDetents(_:)();
}

uint64_t View._onEnvironmentChange<A>(_:perform:)()
{
  return View._onEnvironmentChange<A>(_:perform:)();
}

uint64_t View.accessibilityElement(children:)()
{
  return View.accessibilityElement(children:)();
}

uint64_t View.listSectionSeparator(_:edges:)()
{
  return View.listSectionSeparator(_:edges:)();
}

uint64_t View.navigationDestination<A, B>(for:destination:)()
{
  return View.navigationDestination<A, B>(for:destination:)();
}

uint64_t View.onContinueUserActivity(_:perform:)()
{
  return View.onContinueUserActivity(_:perform:)();
}

uint64_t View.presentationBackground<A>(_:)()
{
  return View.presentationBackground<A>(_:)();
}

uint64_t View.accessibilityIdentifier(_:)()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t View.scrollDismissesKeyboard(_:)()
{
  return View.scrollDismissesKeyboard(_:)();
}

uint64_t View.onScrollVisibilityChange(threshold:_:)()
{
  return View.onScrollVisibilityChange(threshold:_:)();
}

uint64_t View.navigationBarTitleDisplayMode(_:)()
{
  return View.navigationBarTitleDisplayMode(_:)();
}

uint64_t View.navigationPresentationAdaptor(_:)()
{
  return View.navigationPresentationAdaptor(_:)();
}

uint64_t View.navigationTransitionEagerRenderEnabled(_:)()
{
  return View.navigationTransitionEagerRenderEnabled(_:)();
}

uint64_t View.alert<A, B>(_:isPresented:actions:message:)()
{
  return View.alert<A, B>(_:isPresented:actions:message:)();
}

uint64_t View.alert<A>(_:isPresented:actions:)()
{
  return View.alert<A>(_:isPresented:actions:)();
}

uint64_t View.badge(_:)()
{
  return View.badge(_:)();
}

uint64_t View.sheet<A>(isPresented:onDismiss:content:)()
{
  return View.sheet<A>(isPresented:onDismiss:content:)();
}

uint64_t View.onTest(_:handler:)()
{
  return View.onTest(_:handler:)();
}

uint64_t View.toolbar<A>(content:)()
{
  return View.toolbar<A>(content:)();
}

uint64_t View.toolbar(removing:)()
{
  return View.toolbar(removing:)();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t View.formSheet<A>(isPresented:content:)()
{
  return View.formSheet<A>(isPresented:content:)();
}

uint64_t View.listStyle<A>(_:)()
{
  return View.listStyle<A>(_:)();
}

uint64_t View.onOpenURL(perform:)()
{
  return View.onOpenURL(perform:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t static Color.red.getter()
{
  return static Color.red.getter();
}

uint64_t static Color.blue.getter()
{
  return static Color.blue.getter();
}

uint64_t static Color.black.getter()
{
  return static Color.black.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(uiImage:)()
{
  return Image.init(uiImage:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t Image.init(_internalSystemName:)()
{
  return Image.init(_internalSystemName:)();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t Label.init(title:icon:)()
{
  return Label.init(title:icon:)();
}

uint64_t Scene.environment<A>(_:)()
{
  return Scene.environment<A>(_:)();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t type metadata accessor for Button()
{
  return type metadata accessor for Button();
}

uint64_t static Layout._makeLayoutView(root:inputs:body:)()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t Layout.updateCache(_:subviews:)()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t static Layout.layoutProperties.getter()
{
  return static Layout.layoutProperties.getter();
}

uint64_t Layout.spacing(subviews:cache:)()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t Layout<>.makeCache(subviews:)()
{
  return Layout<>.makeCache(subviews:)();
}

uint64_t Toggle.init(isOn:label:)()
{
  return Toggle.init(isOn:label:)();
}

uint64_t AnyView.init<A>(_:)()
{
  return AnyView.init<A>(_:)();
}

uint64_t Binding.transaction(_:)()
{
  return Binding.transaction(_:)();
}

uint64_t Binding.wrappedValue.getter()
{
  return Binding.wrappedValue.getter();
}

uint64_t Binding.wrappedValue.setter()
{
  return Binding.wrappedValue.setter();
}

uint64_t Binding.init(get:set:)()
{
  return Binding.init(get:set:)();
}

{
  return Binding.init(get:set:)();
}

uint64_t static Binding.constant(_:)()
{
  return static Binding.constant(_:)();
}

uint64_t Binding.animation(_:)()
{
  return Binding.animation(_:)();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t Section<>.init(header:content:)()
{
  return Section<>.init(header:content:)();
}

uint64_t Section<>.init(header:footer:content:)()
{
  return Section<>.init(header:footer:content:)();
}

uint64_t Section<>.init(content:)()
{
  return Section<>.init(content:)();
}

uint64_t Bindable.wrappedValue.getter()
{
  return Bindable.wrappedValue.getter();
}

uint64_t Bindable.projectedValue.getter()
{
  return Bindable.projectedValue.getter();
}

uint64_t Bindable<A>.init(wrappedValue:)()
{
  return Bindable<A>.init(wrappedValue:)();
}

uint64_t Bindable<A>.subscript.getter()
{
  return Bindable<A>.subscript.getter();
}

uint64_t type metadata accessor for Bindable()
{
  return type metadata accessor for Bindable();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t static Animation.default.getter()
{
  return static Animation.default.getter();
}

uint64_t Namespace.wrappedValue.getter()
{
  return Namespace.wrappedValue.getter();
}

uint64_t static UnitPoint.topLeading.getter()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInteractive.getter()
{
  return static DispatchQoS.userInteractive.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t static IntentDonationSettingsNavigationEventResponder.defaultPlatformSettingsHostApplicationBundleIdentifier.getter()
{
  return static IntentDonationSettingsNavigationEventResponder.defaultPlatformSettingsHostApplicationBundleIdentifier.getter();
}

uint64_t IntentDonationSettingsNavigationEventResponder.init(settingsHostApplicationBundleIdentifier:)()
{
  return IntentDonationSettingsNavigationEventResponder.init(settingsHostApplicationBundleIdentifier:)();
}

uint64_t type metadata accessor for IntentDonationSettingsNavigationEventResponder()
{
  return type metadata accessor for IntentDonationSettingsNavigationEventResponder();
}

uint64_t type metadata accessor for SettingsEventImage()
{
  return type metadata accessor for SettingsEventImage();
}

uint64_t SettingsEventCenter.addResponder<A>(_:)()
{
  return SettingsEventCenter.addResponder<A>(_:)();
}

uint64_t static SettingsEventCenter.default.getter()
{
  return static SettingsEventCenter.default.getter();
}

uint64_t type metadata accessor for SettingsEventCenter()
{
  return type metadata accessor for SettingsEventCenter();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SettingsExperiencePlugin.loadPluginIfNeeded()()
{
}

uint64_t SettingsExperiencePlugin.init(pluginName:variant:)()
{
  return SettingsExperiencePlugin.init(pluginName:variant:)();
}

uint64_t SettingsExperiencePlugin.requestRootView(options:)()
{
  return SettingsExperiencePlugin.requestRootView(options:)();
}

uint64_t type metadata accessor for SettingsExperiencePlugin()
{
  return type metadata accessor for SettingsExperiencePlugin();
}

uint64_t SettingsNavigationEventRecord.navigationLink.getter()
{
  return SettingsNavigationEventRecord.navigationLink.getter();
}

uint64_t SettingsNavigationEventRecord.resolveLocalizedPathComponents(layoutDirection:)()
{
  return SettingsNavigationEventRecord.resolveLocalizedPathComponents(layoutDirection:)();
}

uint64_t SettingsNavigationEventRecord.init(icon:title:navigationPathComponents:navigationLink:associatedApplicationBundleIdentifier:)()
{
  return SettingsNavigationEventRecord.init(icon:title:navigationPathComponents:navigationLink:associatedApplicationBundleIdentifier:)();
}

uint64_t SettingsNavigationEventRecord.icon.getter()
{
  return SettingsNavigationEventRecord.icon.getter();
}

uint64_t SettingsNavigationEventRecord.title.getter()
{
  return SettingsNavigationEventRecord.title.getter();
}

uint64_t type metadata accessor for SettingsNavigationEventRecord()
{
  return type metadata accessor for SettingsNavigationEventRecord();
}

uint64_t SettingsExperienceConnectionOptions.init()()
{
  return SettingsExperienceConnectionOptions.init()();
}

uint64_t type metadata accessor for SettingsExperienceConnectionOptions()
{
  return type metadata accessor for SettingsExperienceConnectionOptions();
}

uint64_t SettingsZeroKeywordNavigationItemsProvider.suggestions.getter()
{
  return SettingsZeroKeywordNavigationItemsProvider.suggestions.getter();
}

uint64_t SettingsZeroKeywordNavigationItemsProvider.init(settingsHostApplicationBundleIdentifier:)()
{
  return SettingsZeroKeywordNavigationItemsProvider.init(settingsHostApplicationBundleIdentifier:)();
}

uint64_t SettingsZeroKeywordNavigationItemsProvider.recents.getter()
{
  return SettingsZeroKeywordNavigationItemsProvider.recents.getter();
}

uint64_t type metadata accessor for SettingsZeroKeywordNavigationItemsProvider()
{
  return type metadata accessor for SettingsZeroKeywordNavigationItemsProvider();
}

uint64_t dispatch thunk of LinkMetadataIndexer.needsIndexing.getter()
{
  return dispatch thunk of LinkMetadataIndexer.needsIndexing.getter();
}

uint64_t dispatch thunk of LinkMetadataIndexer.needsIndexing.setter()
{
  return dispatch thunk of LinkMetadataIndexer.needsIndexing.setter();
}

uint64_t dispatch thunk of LinkMetadataIndexer.searchQueryFor(_:)()
{
  return dispatch thunk of LinkMetadataIndexer.searchQueryFor(_:)();
}

uint64_t dispatch thunk of LinkMetadataIndexer.donateToSpotlight()()
{
  return dispatch thunk of LinkMetadataIndexer.donateToSpotlight()();
}

uint64_t LinkMetadataIndexer.init(with:)()
{
  return LinkMetadataIndexer.init(with:)();
}

uint64_t static LinkMetadataIndexer.shared.getter()
{
  return static LinkMetadataIndexer.shared.getter();
}

uint64_t type metadata accessor for LinkMetadataIndexer()
{
  return type metadata accessor for LinkMetadataIndexer();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(localized:)()
{
  return String.init(localized:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t static String._fromUTF8Repairing(_:)()
{
  return static String._fromUTF8Repairing(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::Bool __swiftcall String.hasSuffix(_:)(Swift::String a1)
{
  return String.hasSuffix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.background.getter()
{
  return static TaskPriority.background.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Set._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.distance(from:to:)()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t RangeReplaceableCollection<>.replace<A, B, C>(_:maxReplacements:with:)()
{
  return RangeReplaceableCollection<>.replace<A, B, C>(_:maxReplacements:with:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t UITraitCollection.appendSettingsNavigationPath.getter()
{
  return UITraitCollection.appendSettingsNavigationPath.getter();
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t static os_signpost_type_t.event.getter()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t static NSBundle.PreferencesPluginLocation.appleInternal.getter()
{
  return static NSBundle.PreferencesPluginLocation.appleInternal.getter();
}

uint64_t NSBundle.PreferencesPluginLocation.init(path:)()
{
  return NSBundle.PreferencesPluginLocation.init(path:)();
}

uint64_t static NSBundle.PreferencesPluginLocation.default.getter()
{
  return static NSBundle.PreferencesPluginLocation.default.getter();
}

uint64_t type metadata accessor for NSBundle.PreferencesPluginLocation()
{
  return type metadata accessor for NSBundle.PreferencesPluginLocation();
}

uint64_t static NSBundle.preferencesPluginExists(name:location:)()
{
  return static NSBundle.preferencesPluginExists(name:location:)();
}

uint64_t static NSBundle.SettingsPluginVariant.default.getter()
{
  return static NSBundle.SettingsPluginVariant.default.getter();
}

uint64_t type metadata accessor for NSBundle.SettingsPluginVariant()
{
  return type metadata accessor for NSBundle.SettingsPluginVariant();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)()
{
  return static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

Swift::String __swiftcall Substring.lowercased()()
{
  uint64_t v0 = Substring.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

NSNumber __swiftcall UInt._bridgeToObjectiveC()()
{
  return (NSNumber)UInt._bridgeToObjectiveC()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.removingPercentEncoding.getter()
{
  return StringProtocol.removingPercentEncoding.getter();
}

uint64_t StringProtocol.localizedStandardCompare<A>(_:)()
{
  return StringProtocol.localizedStandardCompare<A>(_:)();
}

uint64_t StringProtocol.localizedCaseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of AnyKeyPath._kvcKeyPathString.getter()
{
  return dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t StaticString.description.getter()
{
  return StaticString.description.getter();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter()
{
  return dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t _findStringSwitchCaseWithCache(cases:string:cache:)()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t TaskLocal.init(wrappedValue:)()
{
  return TaskLocal.init(wrappedValue:)();
}

uint64_t TaskLocal.get()()
{
  return TaskLocal.get()();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MobileGestalt_get_accessibilityCapability()
{
  return _MobileGestalt_get_accessibilityCapability();
}

uint64_t MobileGestalt_get_appleInternalInstallCapability()
{
  return _MobileGestalt_get_appleInternalInstallCapability();
}

uint64_t MobileGestalt_get_assistantCapability()
{
  return _MobileGestalt_get_assistantCapability();
}

uint64_t MobileGestalt_get_bluetoothCapability()
{
  return _MobileGestalt_get_bluetoothCapability();
}

uint64_t MobileGestalt_get_bluetoothLECapability()
{
  return _MobileGestalt_get_bluetoothLECapability();
}

uint64_t MobileGestalt_get_cameraButtonCapability()
{
  return _MobileGestalt_get_cameraButtonCapability();
}

uint64_t MobileGestalt_get_cellularDataCapability()
{
  return _MobileGestalt_get_cellularDataCapability();
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

uint64_t MobileGestalt_get_deviceSupportsApplePencil()
{
  return _MobileGestalt_get_deviceSupportsApplePencil();
}

uint64_t MobileGestalt_get_deviceSupportsClosedLoopHaptics()
{
  return _MobileGestalt_get_deviceSupportsClosedLoopHaptics();
}

uint64_t MobileGestalt_get_iPadCapability()
{
  return _MobileGestalt_get_iPadCapability();
}

uint64_t MobileGestalt_get_isSimulator()
{
  return _MobileGestalt_get_isSimulator();
}

uint64_t MobileGestalt_get_pearlIDCapability()
{
  return _MobileGestalt_get_pearlIDCapability();
}

uint64_t MobileGestalt_get_personalHotspotCapability()
{
  return _MobileGestalt_get_personalHotspotCapability();
}

uint64_t MobileGestalt_get_researchFuse()
{
  return _MobileGestalt_get_researchFuse();
}

uint64_t MobileGestalt_get_ringerButtonCapability()
{
  return _MobileGestalt_get_ringerButtonCapability();
}

uint64_t MobileGestalt_get_telephonyCapability()
{
  return _MobileGestalt_get_telephonyCapability();
}

uint64_t MobileGestalt_get_touchIDCapability()
{
  return _MobileGestalt_get_touchIDCapability();
}

uint64_t MobileGestalt_get_wapiCapability()
{
  return _MobileGestalt_get_wapiCapability();
}

uint64_t MobileGestalt_get_wifiCapability()
{
  return _MobileGestalt_get_wifiCapability();
}

uint64_t PSAboutDeviceSupervision()
{
  return _PSAboutDeviceSupervision();
}

uint64_t PSIsInEDUMode()
{
  return _PSIsInEDUMode();
}

uint64_t PSSimIsRequired()
{
  return _PSSimIsRequired();
}

uint64_t SBSCopyDisplayIdentifiers()
{
  return _SBSCopyDisplayIdentifiers();
}

uint64_t SFAppTintColor()
{
  return _SFAppTintColor();
}

uint64_t SFObjectAndOffsetForURLPair()
{
  return _SFObjectAndOffsetForURLPair();
}

uint64_t SFRuntimeAbsoluteFilePathForPath()
{
  return _SFRuntimeAbsoluteFilePathForPath();
}

uint64_t SUSUISettingsIsBadgedForSoftwareUpdate()
{
  return _SUSUISettingsIsBadgedForSoftwareUpdate();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return __CTServerConnectionCreateOnTargetQueue();
}

uint64_t _CTServerConnectionGetCellularDataIsEnabled()
{
  return __CTServerConnectionGetCellularDataIsEnabled();
}

uint64_t _CTServerConnectionGetRadioModuleIsDead()
{
  return __CTServerConnectionGetRadioModuleIsDead();
}

uint64_t _CTServerConnectionRegisterBlockForNotification()
{
  return __CTServerConnectionRegisterBlockForNotification();
}

uint64_t _CTServerConnectionUnregisterForNotification()
{
  return __CTServerConnectionUnregisterForNotification();
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return _class_addMethod(cls, name, imp, types);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void free(void *a1)
{
}

IMP imp_implementationWithBlock(id block)
{
  return _imp_implementationWithBlock(block);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void method_exchangeImplementations(Method m1, Method m2)
{
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_dynamicCastTypeToObjCProtocolConditional()
{
  return _swift_dynamicCastTypeToObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unownedRelease()
{
  return _swift_unownedRelease();
}

uint64_t swift_unownedRetain()
{
  return _swift_unownedRetain();
}

uint64_t swift_unownedRetainStrong()
{
  return _swift_unownedRetainStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_simStatus_(void *a1, const char *a2, ...)
{
  return [a1 simStatus:];
}

id objc_msgSend_subscriptionContexts(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionContexts];
}